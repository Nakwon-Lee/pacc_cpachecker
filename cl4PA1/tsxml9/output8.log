scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uzlmvatq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1788: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2968: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16418 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16223 (99%)
  Because of loop head:            64 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         131 (1%)
  Times precision was empty:       6713 (41%)
  Times precision was {false}:     293 (2%)
  Times result was cached:         9280 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      132 (1%)
  Times result was 'false':        268 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         29992
  BDD entailment checks:           1154
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          139
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10509
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 24.73
Number of irrelevant predicates:          8602 (82%)
Number of preds handled by boolean abs:   133 (1%)
  Total number of models for allsat:      133
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.698s
  Time for path formula creation:        3.505s
Time for strengthen operator:            0.228s
Time for prec operator:                  3.281s
  Time for abstraction:                  2.762s (Max:     0.037s, Count: 16418)
    Boolean abstraction:                 0.237s
    Solving time:                        0.361s (Max:     0.013s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.015s (Max:     0.005s)
Time for merge operator:                 0.512s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.384s

Number of path formula cache hits:   89571 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.308s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         278 (count: 10136, min: 0, max: 68, avg: 0.03)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.650s
  Time for transition matches:                         0.229s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                       114725 (count: 114725, min: 1, max: 1, avg: 1.00) [1 x 114725]

CPA algorithm statistics
------------------------
Number of iterations:            86101
Max size of waitlist:            44
Average size of waitlist:        22
Number of computed successors:   102170
Max successors for one state:    2
Number of times merged:          14419
Number of times stopped:         15363
Number of times breaked:         131

Total time for CPA algorithm:        14.972s (Max:     1.718s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:      4.697s
  Time for transfer relation:         7.147s
  Time for merge operator:            1.119s
  Time for stop operator:             0.353s
  Time for adding to reached set:     0.529s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   131
Avg. length of target path (in blocks):               15250 (count: 131, min: 82, max: 181, avg: 116.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.582s
  Counterexample analysis:                             7.645s (Max:     0.128s, Calls: 131)
    Refinement sat check:                              3.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.129s
  ARG update:                                          0.417s

Length of refined path (in blocks):                   14511 (count: 131, min: 63, max: 180, avg: 110.77)
Number of affected states:                             1329 (count: 131, min: 1, max: 102, avg: 10.15)
Length (states) of path with itp 'true':              13051 (count: 131, min: 0, max: 178, avg: 99.63)
Length (states) of path with itp non-trivial itp:      1329 (count: 131, min: 1, max: 102, avg: 10.15)
Length (states) of path with itp 'false':               131 (count: 131, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 131, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:            1185 (count: 131, min: 0, max: 100, avg: 9.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                131
Number of successful refinements:     131
Number of failed refinements:         0
Max. size of reached set before ref.: 6676
Max. size of reached set after ref.:  5943
Avg. size of reached set before ref.: 4002.02
Avg. size of reached set after ref.:  3384.46

Total time for CEGAR algorithm:      25.463s
Time for refinements:                 9.969s
Average time for refinement:          0.076s
Max time for refinement:              0.177s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          923
  Total lines:            1422
  Line coverage:          0.649
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1961
Number of CFA edges:             2223
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             5638
  Number of reached locations:   955 (49%)
    Avg states per location:     5
    Max states per location:     40 (at node N1284)
  Number of reached functions:   82 (72%)
  Number of partitions:          5626
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N38 (before lines 89-262), Function test called from node N991, stack depth 2 [4946a1d2], stack [main, test]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          4.292s
  Time for loading CPAs:          0.924s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.512s
    Time for parsing file(s):     0.736s
    Time for AST to CFA:          0.768s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.634s
      Time for var class.:        0.342s
Time for Analysis:               25.463s
CPU time for analysis:           25.470s
Total time for CPAchecker:       29.759s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.231s

Time for Garbage Collector:       0.820s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     49MB (    47 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
