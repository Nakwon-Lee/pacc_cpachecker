scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rrw6q69f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1788: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2968: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12815 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12536 (98%)
  Because of loop head:            224 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (0%)
  Times precision was empty:       5001 (39%)
  Times precision was {false}:     348 (3%)
  Times result was cached:         7289 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (1%)
  Times result was 'false':        176 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         25898
  BDD entailment checks:           1218
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          152
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8552
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.29
Number of irrelevant predicates:          6112 (71%)
Number of preds handled by boolean abs:   179 (2%)
  Total number of models for allsat:      177
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.908s
  Time for path formula creation:        3.785s
Time for strengthen operator:            0.238s
Time for prec operator:                  3.413s
  Time for abstraction:                  3.020s (Max:     0.027s, Count: 12815)
    Boolean abstraction:                 0.366s
    Solving time:                        0.543s (Max:     0.015s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.050s (Max:     0.009s)
Time for merge operator:                 0.645s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.584s

Number of path formula cache hits:   53847 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.589s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         364 (count: 9032, min: 0, max: 83, avg: 0.04)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.536s
  Time for transition matches:                         0.258s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                        94611 (count: 94611, min: 1, max: 1, avg: 1.00) [1 x 94611]

CPA algorithm statistics
------------------------
Number of iterations:            70686
Max size of waitlist:            39
Average size of waitlist:        16
Number of computed successors:   84290
Max successors for one state:    2
Number of times merged:          12340
Number of times stopped:         13213
Number of times breaked:         55

Total time for CPA algorithm:        14.332s (Max:     1.696s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:      4.602s
  Time for transfer relation:         6.717s
  Time for merge operator:            1.145s
  Time for stop operator:             0.354s
  Time for adding to reached set:     0.340s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                7171 (count: 55, min: 84, max: 198, avg: 130.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.508s
  Counterexample analysis:                             3.862s (Max:     0.167s, Calls: 55)
    Refinement sat check:                              1.708s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.112s
  Precision update:                                    0.094s
  ARG update:                                          0.324s

Length of refined path (in blocks):                    6422 (count: 55, min: 71, max: 145, avg: 116.76)
Number of affected states:                             1809 (count: 55, min: 1, max: 144, avg: 32.89)
Length (states) of path with itp 'true':               4558 (count: 55, min: 0, max: 140, avg: 82.87)
Length (states) of path with itp non-trivial itp:      1809 (count: 55, min: 1, max: 144, avg: 32.89)
Length (states) of path with itp 'false':                55 (count: 55, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 55, min: 0, max: 1, avg: 0.24)
Equal non-trivial interpolants along paths:            1741 (count: 55, min: 0, max: 142, avg: 31.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 7937
Max. size of reached set after ref.:  7198
Avg. size of reached set before ref.: 4424.95
Avg. size of reached set after ref.:  3247.15

Total time for CEGAR algorithm:      19.771s
Time for refinements:                 5.214s
Average time for refinement:          0.094s
Max time for refinement:              0.231s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          930
  Total lines:            1422
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1961
Number of CFA edges:             2223
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             6123
  Number of reached locations:   966 (49%)
    Avg states per location:     6
    Max states per location:     50 (at node N1284)
  Number of reached functions:   82 (72%)
  Number of partitions:          6101
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1128 (before line 1651), Function outgoing called from node N1189, stack depth 5 [4fd7b798], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.024s
  Time for loading CPAs:          0.842s
  Time for loading parser:        0.695s
  Time for CFA construction:      2.278s
    Time for parsing file(s):     0.668s
    Time for AST to CFA:          0.715s
    Time for CFA sanity check:    0.215s
    Time for post-processing:     0.542s
      Time for var class.:        0.292s
Time for Analysis:               19.771s
CPU time for analysis:           19.770s
Time for analyzing result:        0.003s
Total time for CPAchecker:       23.799s
Total CPU time for CPAchecker:   23.790s
Time for statistics:              0.191s

Time for Garbage Collector:       0.618s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     48MB (    46 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
