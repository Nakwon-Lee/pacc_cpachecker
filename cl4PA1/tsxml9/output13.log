scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__bvw4qda/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1788: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2968: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17944 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17617 (98%)
  Because of loop head:            170 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         157 (1%)
  Times precision was empty:       8442 (47%)
  Times precision was {false}:     268 (1%)
  Times result was cached:         9100 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      134 (1%)
  Times result was 'false':        299 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         26680
  BDD entailment checks:           1480
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          143
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10276
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 25.56
Number of irrelevant predicates:          8116 (79%)
Number of preds handled by boolean abs:   135 (1%)
  Total number of models for allsat:      135
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.654s
  Time for path formula creation:        2.522s
Time for strengthen operator:            0.177s
Time for prec operator:                  3.177s
  Time for abstraction:                  2.684s (Max:     0.026s, Count: 17944)
    Boolean abstraction:                 0.226s
    Solving time:                        0.512s (Max:     0.015s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.026s (Max:     0.008s)
Time for merge operator:                 0.348s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.531s

Number of path formula cache hits:   110510 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.309s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         280 (count: 12078, min: 0, max: 91, avg: 0.02)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.606s
  Time for transition matches:                         0.248s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       112362 (count: 112362, min: 1, max: 1, avg: 1.00) [1 x 112362]

CPA algorithm statistics
------------------------
Number of iterations:            84064
Max size of waitlist:            23
Average size of waitlist:        13
Number of computed successors:   98370
Max successors for one state:    2
Number of times merged:          12600
Number of times stopped:         13701
Number of times breaked:         157

Total time for CPA algorithm:        12.986s (Max:     1.194s)
  Time for choose from waitlist:      0.187s
  Time for precision adjustment:      4.490s
  Time for transfer relation:         5.767s
  Time for merge operator:            0.892s
  Time for stop operator:             0.396s
  Time for adding to reached set:     0.340s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   157
Avg. length of target path (in blocks):               18324 (count: 157, min: 82, max: 181, avg: 116.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.351s
  Counterexample analysis:                             8.531s (Max:     0.127s, Calls: 157)
    Refinement sat check:                              3.824s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.069s
  Precision update:                                    0.131s
  ARG update:                                          0.351s

Length of refined path (in blocks):                   17577 (count: 157, min: 63, max: 180, avg: 111.96)
Number of affected states:                             1361 (count: 157, min: 1, max: 100, avg: 8.67)
Length (states) of path with itp 'true':              16059 (count: 157, min: 0, max: 178, avg: 102.29)
Length (states) of path with itp non-trivial itp:      1361 (count: 157, min: 1, max: 100, avg: 8.67)
Length (states) of path with itp 'false':               157 (count: 157, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 157, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:            1191 (count: 157, min: 0, max: 98, avg: 7.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                157
Number of successful refinements:     157
Number of failed refinements:         0
Max. size of reached set before ref.: 6483
Max. size of reached set after ref.:  6094
Avg. size of reached set before ref.: 3467.88
Avg. size of reached set after ref.:  2963.83

Total time for CEGAR algorithm:      24.030s
Time for refinements:                10.569s
Average time for refinement:          0.067s
Max time for refinement:              0.163s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          930
  Total lines:            1422
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1961
Number of CFA edges:             2223
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             5235
  Number of reached locations:   966 (49%)
    Avg states per location:     5
    Max states per location:     45 (at node N1284)
  Number of reached functions:   82 (72%)
  Number of partitions:          5223
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1128 (before line 1651), Function outgoing called from node N1189, stack depth 5 [68c0565], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.098s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.751s
  Time for CFA construction:      2.356s
    Time for parsing file(s):     0.711s
    Time for AST to CFA:          0.756s
    Time for CFA sanity check:    0.205s
    Time for post-processing:     0.551s
      Time for var class.:        0.291s
Time for Analysis:               24.030s
CPU time for analysis:           24.030s
Time for analyzing result:        0.004s
Total time for CPAchecker:       28.133s
Total CPU time for CPAchecker:   28.130s
Time for statistics:              0.189s

Time for Garbage Collector:       0.647s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     48MB (    46 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
