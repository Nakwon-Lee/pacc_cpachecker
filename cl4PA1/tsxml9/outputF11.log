scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z_xda61p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1045: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1788: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1953: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2533: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2625: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2968: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 514: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13048 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12732 (98%)
  Because of loop head:            290 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       4870 (37%)
  Times precision was {false}:     395 (3%)
  Times result was cached:         7582 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      201 (2%)
  Times result was 'false':        153 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         27751
  BDD entailment checks:           1333
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          167
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8922
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 14.97
Number of irrelevant predicates:          5912 (66%)
Number of preds handled by boolean abs:   203 (2%)
  Total number of models for allsat:      201
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  4.737s
  Time for path formula creation:        4.542s
Time for strengthen operator:            0.339s
Time for prec operator:                  3.809s
  Time for abstraction:                  3.293s (Max:     0.038s, Count: 13048)
    Boolean abstraction:                 0.373s
    Solving time:                        0.598s (Max:     0.015s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.039s (Max:     0.008s)
Time for merge operator:                 0.705s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.622s

Number of path formula cache hits:   55228 (51%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.273s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         413 (count: 9396, min: 0, max: 108, avg: 0.04)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.547s
  Time for transition matches:                         0.221s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        97129 (count: 97129, min: 1, max: 1, avg: 1.00) [1 x 97129]

CPA algorithm statistics
------------------------
Number of iterations:            73673
Max size of waitlist:            26
Average size of waitlist:        9
Number of computed successors:   88337
Max successors for one state:    2
Number of times merged:          13209
Number of times stopped:         14226
Number of times breaked:         26

Total time for CPA algorithm:        16.494s (Max:     2.112s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:      5.303s
  Time for transfer relation:         7.887s
  Time for merge operator:            1.255s
  Time for stop operator:             0.364s
  Time for adding to reached set:     0.430s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                3568 (count: 26, min: 84, max: 181, avg: 137.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.676s
  Counterexample analysis:                             2.046s (Max:     0.120s, Calls: 26)
    Refinement sat check:                              0.888s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.060s
  ARG update:                                          0.383s

Length of refined path (in blocks):                    2687 (count: 26, min: 63, max: 180, avg: 103.35)
Number of affected states:                             1718 (count: 26, min: 1, max: 127, avg: 66.08)
Length (states) of path with itp 'true':                943 (count: 26, min: 0, max: 178, avg: 36.27)
Length (states) of path with itp non-trivial itp:      1718 (count: 26, min: 1, max: 127, avg: 66.08)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          18 (count: 26, min: 0, max: 1, avg: 0.69)
Equal non-trivial interpolants along paths:            1674 (count: 26, min: 0, max: 125, avg: 64.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 4499
Max. size of reached set after ref.:  3516
Avg. size of reached set before ref.: 3460.92
Avg. size of reached set after ref.:  780.73

Total time for CEGAR algorithm:      19.481s
Time for refinements:                 2.950s
Average time for refinement:          0.113s
Max time for refinement:              0.179s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          930
  Total lines:            1422
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1961
Number of CFA edges:             2223
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             4274
  Number of reached locations:   966 (49%)
    Avg states per location:     4
    Max states per location:     35 (at node N1284)
  Number of reached functions:   82 (72%)
  Number of partitions:          4250
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1157 (before line 1701), Function incoming__wrappee__Forward called from node N1169, stack depth 10 [115aa259], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming, incoming__wrappee__Forward]])
  Number of target states:       0

Time for analysis setup:          4.238s
  Time for loading CPAs:          0.963s
  Time for loading parser:        0.718s
  Time for CFA construction:      2.383s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.694s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.637s
      Time for var class.:        0.347s
Time for Analysis:               19.482s
CPU time for analysis:           19.480s
Time for analyzing result:        0.003s
Total time for CPAchecker:       23.727s
Total CPU time for CPAchecker:   23.710s
Time for statistics:              0.162s

Time for Garbage Collector:       0.658s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     47MB (    45 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
