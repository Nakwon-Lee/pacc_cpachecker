scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product24_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kln5hvu5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1648: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1485: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8378 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8106 (97%)
  Because of loop head:            222 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (1%)
  Times precision was empty:       3478 (42%)
  Times precision was {false}:     225 (3%)
  Times result was cached:         4555 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (1%)
  Times result was 'false':        109 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         16453
  BDD entailment checks:           1165
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          130
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         5248
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 15.21
Number of irrelevant predicates:          3549 (68%)
Number of preds handled by boolean abs:   121 (2%)
  Total number of models for allsat:      121
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.931s
  Time for path formula creation:        2.790s
Time for strengthen operator:            0.125s
Time for prec operator:                  2.635s
  Time for abstraction:                  2.287s (Max:     0.027s, Count: 8378)
    Boolean abstraction:                 0.260s
    Solving time:                        0.419s (Max:     0.015s)
    Model enumeration time:              0.025s
    Time for BDD construction:           0.049s (Max:     0.008s)
Time for merge operator:                 0.460s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.444s

Number of path formula cache hits:   42700 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.658s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         254 (count: 6500, min: 0, max: 115, avg: 0.04)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.423s
Automaton transfers with branching:                0
Automaton transfer successors:                        59045 (count: 59045, min: 1, max: 1, avg: 1.00) [1 x 59045]

CPA algorithm statistics
------------------------
Number of iterations:            44704
Max size of waitlist:            24
Average size of waitlist:        9
Number of computed successors:   53277
Max successors for one state:    2
Number of times merged:          7644
Number of times stopped:         8345
Number of times breaked:         50

Total time for CPA algorithm:        11.129s (Max:     1.566s)
  Time for choose from waitlist:      0.167s
  Time for precision adjustment:      3.675s
  Time for transfer relation:         5.097s
  Time for merge operator:            0.852s
  Time for stop operator:             0.361s
  Time for adding to reached set:     0.262s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                5374 (count: 50, min: 81, max: 141, avg: 107.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.459s
  Counterexample analysis:                             2.956s (Max:     0.098s, Calls: 50)
    Refinement sat check:                              1.335s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.064s
  ARG update:                                          0.272s

Length of refined path (in blocks):                    4773 (count: 50, min: 60, max: 131, avg: 95.46)
Number of affected states:                             1115 (count: 50, min: 1, max: 98, avg: 22.30)
Length (states) of path with itp 'true':               3608 (count: 50, min: 0, max: 129, avg: 72.16)
Length (states) of path with itp non-trivial itp:      1115 (count: 50, min: 1, max: 98, avg: 22.30)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 50, min: 0, max: 1, avg: 0.24)
Equal non-trivial interpolants along paths:            1053 (count: 50, min: 0, max: 96, avg: 21.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 3821
Max. size of reached set after ref.:  3389
Avg. size of reached set before ref.: 3069.28
Avg. size of reached set after ref.:  2221.70

Total time for CEGAR algorithm:      15.235s
Time for refinements:                 3.907s
Average time for refinement:          0.078s
Max time for refinement:              0.148s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          797
  Total lines:            1391
  Line coverage:          0.573
  Visited conditions:     266
  Total conditions:       488
  Condition coverage:     0.545

CPAchecker general statistics
-----------------------------
Number of program locations:     1919
Number of CFA edges:             2168
Number of relevant variables:    334
Number of functions:             111
Number of loops:                 4
Size of reached set:             2445
  Number of reached locations:   789 (41%)
    Avg states per location:     3
    Max states per location:     15 (at node N649)
  Number of reached functions:   74 (67%)
  Number of partitions:          2434
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N497 (before line 752), Function outgoing called from node N558, stack depth 5 [2207eb9f], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.297s
  Time for loading CPAs:          0.799s
  Time for loading parser:        0.753s
  Time for CFA construction:      2.563s
    Time for parsing file(s):     0.758s
    Time for AST to CFA:          0.815s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.608s
      Time for var class.:        0.320s
Time for Analysis:               15.235s
CPU time for analysis:           15.240s
Time for analyzing result:        0.007s
Total time for CPAchecker:       19.537s
Total CPU time for CPAchecker:   19.530s
Time for statistics:              0.144s

Time for Garbage Collector:       0.418s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     42MB (    40 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8067MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
