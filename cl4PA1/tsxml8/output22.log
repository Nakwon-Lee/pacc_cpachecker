scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product24_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g0jyte3k/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1648: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1485: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6469 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6224 (96%)
  Because of loop head:            228 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (0%)
  Times precision was empty:       2523 (39%)
  Times precision was {false}:     221 (3%)
  Times result was cached:         3601 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      124 (2%)
  Times result was 'false':        55 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         13884
  BDD entailment checks:           842
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          134
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4240
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 12.29
Number of irrelevant predicates:          2645 (62%)
Number of preds handled by boolean abs:   125 (3%)
  Total number of models for allsat:      125
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.125s
  Time for path formula creation:        2.985s
Time for strengthen operator:            0.191s
Time for prec operator:                  2.581s
  Time for abstraction:                  2.282s (Max:     0.031s, Count: 6469)
    Boolean abstraction:                 0.225s
    Solving time:                        0.430s (Max:     0.014s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.057s (Max:     0.010s)
Time for merge operator:                 0.403s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.447s

Number of path formula cache hits:   29013 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.834s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         226 (count: 5226, min: 0, max: 99, avg: 0.04)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.377s
Automaton transfers with branching:                0
Automaton transfer successors:                        48368 (count: 48368, min: 1, max: 1, avg: 1.00) [1 x 48368]

CPA algorithm statistics
------------------------
Number of iterations:            36713
Max size of waitlist:            24
Average size of waitlist:        7
Number of computed successors:   43970
Max successors for one state:    2
Number of times merged:          6521
Number of times stopped:         7123
Number of times breaked:         17

Total time for CPA algorithm:        10.833s (Max:     1.545s)
  Time for choose from waitlist:      0.144s
  Time for precision adjustment:      3.363s
  Time for transfer relation:         5.354s
  Time for merge operator:            0.752s
  Time for stop operator:             0.306s
  Time for adding to reached set:     0.226s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                2135 (count: 17, min: 81, max: 139, avg: 125.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.689s
  Counterexample analysis:                             1.245s (Max:     0.090s, Calls: 17)
    Refinement sat check:                              0.567s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.034s
  ARG update:                                          0.251s

Length of refined path (in blocks):                    1526 (count: 17, min: 60, max: 131, avg: 89.76)
Number of affected states:                             1162 (count: 17, min: 1, max: 96, avg: 68.35)
Length (states) of path with itp 'true':                347 (count: 17, min: 0, max: 129, avg: 20.41)
Length (states) of path with itp non-trivial itp:      1162 (count: 17, min: 1, max: 96, avg: 68.35)
Length (states) of path with itp 'false':                17 (count: 17, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 17, min: 0, max: 1, avg: 0.76)
Equal non-trivial interpolants along paths:            1132 (count: 17, min: 0, max: 94, avg: 66.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     17
Number of failed refinements:         0
Max. size of reached set before ref.: 2919
Max. size of reached set after ref.:  1791
Avg. size of reached set before ref.: 2409.24
Avg. size of reached set after ref.:  367.12

Total time for CEGAR algorithm:      12.744s
Time for refinements:                 1.897s
Average time for refinement:          0.111s
Max time for refinement:              0.152s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          797
  Total lines:            1391
  Line coverage:          0.573
  Visited conditions:     266
  Total conditions:       488
  Condition coverage:     0.545

CPAchecker general statistics
-----------------------------
Number of program locations:     1919
Number of CFA edges:             2168
Number of relevant variables:    334
Number of functions:             111
Number of loops:                 4
Size of reached set:             2077
  Number of reached locations:   789 (41%)
    Avg states per location:     2
    Max states per location:     11 (at node N354)
  Number of reached functions:   74 (67%)
  Number of partitions:          2067
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N538 (before line 822), Function incoming called from node N483, stack depth 8 [4924c27e], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          3.938s
  Time for loading CPAs:          0.796s
  Time for loading parser:        0.695s
  Time for CFA construction:      2.238s
    Time for parsing file(s):     0.643s
    Time for AST to CFA:          0.719s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.516s
      Time for var class.:        0.270s
Time for Analysis:               12.746s
CPU time for analysis:           12.740s
Time for analyzing result:        0.009s
Total time for CPAchecker:       16.688s
Total CPU time for CPAchecker:   16.680s
Time for statistics:              0.146s

Time for Garbage Collector:       0.350s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     42MB (    40 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
