scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product24_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ns8vx73v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1648: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1821: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1485: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10578 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10244 (97%)
  Because of loop head:            265 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (1%)
  Times precision was empty:       4452 (42%)
  Times precision was {false}:     254 (2%)
  Times result was cached:         5738 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      134 (1%)
  Times result was 'false':        129 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         19643
  BDD entailment checks:           1351
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          142
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         6480
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.70
Number of irrelevant predicates:          4374 (68%)
Number of preds handled by boolean abs:   135 (2%)
  Total number of models for allsat:      135
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.376s
  Time for path formula creation:        3.179s
Time for strengthen operator:            0.142s
Time for prec operator:                  3.291s
  Time for abstraction:                  2.779s (Max:     0.025s, Count: 10578)
    Boolean abstraction:                 0.268s
    Solving time:                        0.509s (Max:     0.014s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.025s (Max:     0.008s)
Time for merge operator:                 0.467s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.519s

Number of path formula cache hits:   55927 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.994s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         282 (count: 7889, min: 0, max: 121, avg: 0.04)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.520s
  Time for transition matches:                         0.226s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                        72773 (count: 72773, min: 1, max: 1, avg: 1.00) [1 x 72773]

CPA algorithm statistics
------------------------
Number of iterations:            55161
Max size of waitlist:            28
Average size of waitlist:        9
Number of computed successors:   65417
Max successors for one state:    2
Number of times merged:          9146
Number of times stopped:         10034
Number of times breaked:         69

Total time for CPA algorithm:        12.950s (Max:     1.378s)
  Time for choose from waitlist:      0.153s
  Time for precision adjustment:      4.428s
  Time for transfer relation:         5.897s
  Time for merge operator:            0.920s
  Time for stop operator:             0.382s
  Time for adding to reached set:     0.319s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                6958 (count: 69, min: 79, max: 139, avg: 100.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.555s
  Counterexample analysis:                             3.819s (Max:     0.090s, Calls: 69)
    Refinement sat check:                              1.810s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.108s
  Precision update:                                    0.083s
  ARG update:                                          0.320s

Length of refined path (in blocks):                    6256 (count: 69, min: 60, max: 131, avg: 90.67)
Number of affected states:                             1386 (count: 69, min: 1, max: 96, avg: 20.09)
Length (states) of path with itp 'true':               4801 (count: 69, min: 0, max: 129, avg: 69.58)
Length (states) of path with itp non-trivial itp:      1386 (count: 69, min: 1, max: 96, avg: 20.09)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 69, min: 0, max: 1, avg: 0.22)
Equal non-trivial interpolants along paths:            1302 (count: 69, min: 0, max: 94, avg: 18.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 3905
Max. size of reached set after ref.:  3802
Avg. size of reached set before ref.: 2818.74
Avg. size of reached set after ref.:  2048.04

Total time for CEGAR algorithm:      18.227s
Time for refinements:                 5.043s
Average time for refinement:          0.073s
Max time for refinement:              0.127s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          797
  Total lines:            1391
  Line coverage:          0.573
  Visited conditions:     266
  Total conditions:       488
  Condition coverage:     0.545

CPAchecker general statistics
-----------------------------
Number of program locations:     1919
Number of CFA edges:             2168
Number of relevant variables:    334
Number of functions:             111
Number of loops:                 4
Size of reached set:             2077
  Number of reached locations:   789 (41%)
    Avg states per location:     2
    Max states per location:     11 (at node N354)
  Number of reached functions:   74 (67%)
  Number of partitions:          2067
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N538 (before line 822), Function incoming called from node N483, stack depth 8 [2ceb060a], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          4.112s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.713s
  Time for CFA construction:      2.314s
    Time for parsing file(s):     0.657s
    Time for AST to CFA:          0.774s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.537s
      Time for var class.:        0.286s
Time for Analysis:               18.228s
CPU time for analysis:           18.230s
Time for analyzing result:        0.006s
Total time for CPAchecker:       22.344s
Total CPU time for CPAchecker:   22.340s
Time for statistics:              0.137s

Time for Garbage Collector:       0.443s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     44MB (    42 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8070MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
