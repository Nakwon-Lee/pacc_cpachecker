scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_stf294_d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 430: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 543: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 601: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 638: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 677: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 753: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 790: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1782: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1958: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2053: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2098: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2176: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2556: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2601: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2664: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2771: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1074: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20223 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19875 (98%)
  Because of loop head:            314 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (0%)
  Times precision was empty:       3095 (15%)
  Times precision was {false}:     241 (1%)
  Times result was cached:         16521 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      366 (2%)
  Times result was 'false':        712 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         36750
  BDD entailment checks:           2564
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          6
Number of abstraction locations:          152
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         26970
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 44.43
Number of irrelevant predicates:          11482 (43%)
Number of preds handled by boolean abs:   471 (2%)
  Total number of models for allsat:      366
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.240s
  Time for path formula creation:        3.087s
Time for strengthen operator:            0.212s
Time for prec operator:                  5.075s
  Time for abstraction:                  4.534s (Max:     0.025s, Count: 20223)
    Boolean abstraction:                 0.674s
    Solving time:                        0.750s (Max:     0.014s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.069s (Max:     0.009s)
Time for merge operator:                 0.417s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.798s

Number of path formula cache hits:   134581 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.856s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         762 (count: 9285, min: 0, max: 122, avg: 0.08)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.612s
  Time for transition matches:                         0.268s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                       138609 (count: 138609, min: 1, max: 1, avg: 1.00) [1 x 138609]

CPA algorithm statistics
------------------------
Number of iterations:            104353
Max size of waitlist:            28
Average size of waitlist:        10
Number of computed successors:   124281
Max successors for one state:    2
Number of times merged:          17093
Number of times stopped:         18883
Number of times breaked:         34

Total time for CPA algorithm:        16.119s (Max:     1.318s)
  Time for choose from waitlist:      0.165s
  Time for precision adjustment:      6.490s
  Time for transfer relation:         6.389s
  Time for merge operator:            0.880s
  Time for stop operator:             0.409s
  Time for adding to reached set:     0.467s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                3528 (count: 34, min: 63, max: 129, avg: 103.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.631s
  Counterexample analysis:                             1.856s (Max:     0.083s, Calls: 34)
    Refinement sat check:                              0.922s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.156s
  Precision update:                                    0.040s
  ARG update:                                          0.452s

Length of refined path (in blocks):                    2920 (count: 34, min: 60, max: 105, avg: 85.88)
Number of affected states:                             2658 (count: 34, min: 1, max: 104, avg: 78.18)
Length (states) of path with itp 'true':                228 (count: 34, min: 0, max: 79, avg: 6.71)
Length (states) of path with itp non-trivial itp:      2658 (count: 34, min: 1, max: 104, avg: 78.18)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          21 (count: 34, min: 0, max: 1, avg: 0.62)
Equal non-trivial interpolants along paths:            2603 (count: 34, min: 0, max: 102, avg: 76.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 4843
Max. size of reached set after ref.:  1937
Avg. size of reached set before ref.: 3175.29
Avg. size of reached set after ref.:  171.65

Total time for CEGAR algorithm:      19.019s
Time for refinements:                 2.887s
Average time for refinement:          0.084s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.582
  Visited lines:          733
  Total lines:            1422
  Line coverage:          0.515
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1953
Number of CFA edges:             2210
Number of relevant variables:    342
Number of functions:             110
Number of loops:                 4
Size of reached set:             2563
  Number of reached locations:   724 (37%)
    Avg states per location:     3
    Max states per location:     48 (at node N1278)
  Number of reached functions:   64 (58%)
  Number of partitions:          2555
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1288 (before line 1863), Function verify called from node N1158, stack depth 11 [7173fc92], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify, verify]])
  Number of target states:       0

Time for analysis setup:          3.974s
  Time for loading CPAs:          0.802s
  Time for loading parser:        0.673s
  Time for CFA construction:      2.267s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.662s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.552s
      Time for var class.:        0.309s
Time for Analysis:               19.020s
CPU time for analysis:           19.010s
Time for analyzing result:        0.003s
Total time for CPAchecker:       22.998s
Total CPU time for CPAchecker:   22.990s
Time for statistics:              0.151s

Time for Garbage Collector:       0.557s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     44MB (    42 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
