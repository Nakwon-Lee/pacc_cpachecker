scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jflqxobz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2099: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2280: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14182 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13970 (99%)
  Because of loop head:            111 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (1%)
  Times precision was empty:       4525 (32%)
  Times precision was {false}:     347 (2%)
  Times result was cached:         9152 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      158 (1%)
  Times result was 'false':        270 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         22471
  BDD entailment checks:           885
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          158
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10467
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.73
Number of irrelevant predicates:          7340 (70%)
Number of preds handled by boolean abs:   159 (2%)
  Total number of models for allsat:      159
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.411s
  Time for path formula creation:        3.265s
Time for strengthen operator:            0.248s
Time for prec operator:                  3.462s
  Time for abstraction:                  3.063s (Max:     0.028s, Count: 14182)
    Boolean abstraction:                 0.286s
    Solving time:                        0.547s (Max:     0.013s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.009s (Max:     0.001s)
Time for merge operator:                 0.468s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.576s

Number of path formula cache hits:   74078 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.084s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         325 (count: 8104, min: 0, max: 121, avg: 0.04)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.566s
  Time for transition matches:                         0.198s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                        93156 (count: 93156, min: 1, max: 1, avg: 1.00) [1 x 93156]

CPA algorithm statistics
------------------------
Number of iterations:            69136
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   81382
Max successors for one state:    2
Number of times merged:          10793
Number of times stopped:         11612
Number of times breaked:         101

Total time for CPA algorithm:        13.421s (Max:     1.106s)
  Time for choose from waitlist:      0.129s
  Time for precision adjustment:      4.524s
  Time for transfer relation:         6.257s
  Time for merge operator:            0.954s
  Time for stop operator:             0.266s
  Time for adding to reached set:     0.403s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):               10850 (count: 101, min: 78, max: 178, avg: 107.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.343s
  Counterexample analysis:                             5.618s (Max:     0.120s, Calls: 101)
    Refinement sat check:                              2.710s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.111s
  Precision update:                                    0.111s
  ARG update:                                          0.342s

Length of refined path (in blocks):                   10081 (count: 101, min: 63, max: 137, avg: 99.81)
Number of affected states:                             2126 (count: 101, min: 1, max: 136, avg: 21.05)
Length (states) of path with itp 'true':               7854 (count: 101, min: 0, max: 132, avg: 77.76)
Length (states) of path with itp non-trivial itp:      2126 (count: 101, min: 1, max: 136, avg: 21.05)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 101, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:            2009 (count: 101, min: 0, max: 134, avg: 19.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 4952
Max. size of reached set after ref.:  4536
Avg. size of reached set before ref.: 2497.86
Avg. size of reached set after ref.:  1843.29

Total time for CEGAR algorithm:      20.759s
Time for refinements:                 7.070s
Average time for refinement:          0.070s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          894
  Total lines:            1405
  Line coverage:          0.636
  Visited conditions:     338
  Total conditions:       488
  Condition coverage:     0.693

CPAchecker general statistics
-----------------------------
Number of program locations:     1933
Number of CFA edges:             2189
Number of relevant variables:    340
Number of functions:             111
Number of loops:                 4
Size of reached set:             3389
  Number of reached locations:   919 (48%)
    Avg states per location:     3
    Max states per location:     30 (at node N182)
  Number of reached functions:   77 (69%)
  Number of partitions:          3387
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N79 (before line 212), Function incoming called from node N5, stack depth 9 [6855bae5], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Keys, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          4.160s
  Time for loading CPAs:          0.823s
  Time for loading parser:        0.653s
  Time for CFA construction:      2.487s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.779s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.635s
      Time for var class.:        0.349s
Time for Analysis:               20.759s
CPU time for analysis:           20.750s
Time for analyzing result:        0.003s
Total time for CPAchecker:       24.923s
Total CPU time for CPAchecker:   24.900s
Time for statistics:              0.184s

Time for Garbage Collector:       0.544s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
