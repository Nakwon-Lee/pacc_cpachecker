scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_19fdjpe9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2099: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2280: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17191 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16952 (99%)
  Because of loop head:            92 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         147 (1%)
  Times precision was empty:       7819 (45%)
  Times precision was {false}:     309 (2%)
  Times result was cached:         8897 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      166 (1%)
  Times result was 'false':        344 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         27928
  BDD entailment checks:           1388
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          143
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10284
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 21.65
Number of irrelevant predicates:          7725 (75%)
Number of preds handled by boolean abs:   168 (2%)
  Total number of models for allsat:      166
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.550s
  Time for path formula creation:        3.365s
Time for strengthen operator:            0.184s
Time for prec operator:                  3.738s
  Time for abstraction:                  3.281s (Max:     0.033s, Count: 17191)
    Boolean abstraction:                 0.286s
    Solving time:                        0.486s (Max:     0.015s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.047s (Max:     0.008s)
Time for merge operator:                 0.454s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     0.499s

Number of path formula cache hits:   96218 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.161s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         330 (count: 11760, min: 0, max: 151, avg: 0.03)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.558s
  Time for transition matches:                         0.221s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                       113392 (count: 113392, min: 1, max: 1, avg: 1.00) [1 x 113392]

CPA algorithm statistics
------------------------
Number of iterations:            84383
Max size of waitlist:            28
Average size of waitlist:        15
Number of computed successors:   99298
Max successors for one state:    2
Number of times merged:          13270
Number of times stopped:         14214
Number of times breaked:         147

Total time for CPA algorithm:        14.954s (Max:     1.075s)
  Time for choose from waitlist:      0.210s
  Time for precision adjustment:      4.996s
  Time for transfer relation:         6.600s
  Time for merge operator:            1.105s
  Time for stop operator:             0.358s
  Time for adding to reached set:     0.479s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   147
Avg. length of target path (in blocks):               15373 (count: 147, min: 78, max: 178, avg: 104.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.865s
  Counterexample analysis:                             7.973s (Max:     0.128s, Calls: 147)
    Refinement sat check:                              3.895s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.150s
  ARG update:                                          0.407s

Length of refined path (in blocks):                   14660 (count: 146, min: 63, max: 137, avg: 100.41)
Number of affected states:                             1544 (count: 146, min: 1, max: 136, avg: 10.58)
Length (states) of path with itp 'true':              12970 (count: 146, min: 0, max: 132, avg: 88.84)
Length (states) of path with itp non-trivial itp:      1544 (count: 146, min: 1, max: 136, avg: 10.58)
Length (states) of path with itp 'false':               146 (count: 146, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 146, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:            1387 (count: 146, min: 0, max: 134, avg: 9.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                147
Number of successful refinements:     146
Number of failed refinements:         0
Max. size of reached set before ref.: 7583
Max. size of reached set after ref.:  6620
Avg. size of reached set before ref.: 3077.63
Avg. size of reached set after ref.:  2518.29

Total time for CEGAR algorithm:      25.314s
Time for refinements:                 9.953s
Average time for refinement:          0.067s
Max time for refinement:              0.207s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          895
  Total lines:            1405
  Line coverage:          0.637
  Visited conditions:     338
  Total conditions:       488
  Condition coverage:     0.693

CPAchecker general statistics
-----------------------------
Number of program locations:     1933
Number of CFA edges:             2189
Number of relevant variables:    340
Number of functions:             111
Number of loops:                 4
Size of reached set:             6146
  Number of reached locations:   921 (48%)
    Avg states per location:     6
    Max states per location:     60 (at node N182)
  Number of reached functions:   78 (70%)
  Number of partitions:          6124
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1320 (before lines 1840-2010), Function test called from node N1187, stack depth 2 [42b8443d], stack [main, test]])
  Number of target states:       1
  Size of final wait list        15

Time for analysis setup:          4.426s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.765s
  Time for CFA construction:      2.541s
    Time for parsing file(s):     0.760s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.636s
      Time for var class.:        0.356s
Time for Analysis:               25.314s
CPU time for analysis:           25.310s
Total time for CPAchecker:       29.745s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.221s

Time for Garbage Collector:       0.736s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     53MB (    50 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
