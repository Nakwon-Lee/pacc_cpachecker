scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vnmw0jor/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 564: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 973: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1112: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1175: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1336: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2099: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2108: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2501: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2280: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18565 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18303 (99%)
  Because of loop head:            104 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         158 (1%)
  Times precision was empty:       8371 (45%)
  Times precision was {false}:     309 (2%)
  Times result was cached:         9718 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      167 (1%)
  Times result was 'false':        372 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         30174
  BDD entailment checks:           1506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          144
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         11178
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.48
Number of irrelevant predicates:          8330 (75%)
Number of preds handled by boolean abs:   169 (2%)
  Total number of models for allsat:      167
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.497s
  Time for path formula creation:        3.332s
Time for strengthen operator:            0.253s
Time for prec operator:                  3.361s
  Time for abstraction:                  2.857s (Max:     0.020s, Count: 18565)
    Boolean abstraction:                 0.229s
    Solving time:                        0.421s (Max:     0.016s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.015s (Max:     0.004s)
Time for merge operator:                 0.513s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.432s

Number of path formula cache hits:   105457 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.076s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         330 (count: 12436, min: 0, max: 151, avg: 0.03)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.590s
  Time for transition matches:                         0.262s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                       122431 (count: 122431, min: 1, max: 1, avg: 1.00) [1 x 122431]

CPA algorithm statistics
------------------------
Number of iterations:            91129
Max size of waitlist:            28
Average size of waitlist:        15
Number of computed successors:   107226
Max successors for one state:    2
Number of times merged:          14334
Number of times stopped:         15358
Number of times breaked:         158

Total time for CPA algorithm:        14.311s (Max:     1.028s)
  Time for choose from waitlist:      0.109s
  Time for precision adjustment:      4.814s
  Time for transfer relation:         6.704s
  Time for merge operator:            0.943s
  Time for stop operator:             0.308s
  Time for adding to reached set:     0.356s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   158
Avg. length of target path (in blocks):               16556 (count: 158, min: 78, max: 178, avg: 104.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.850s
  Counterexample analysis:                             7.904s (Max:     0.143s, Calls: 158)
    Refinement sat check:                              3.830s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.148s
  ARG update:                                          0.439s

Length of refined path (in blocks):                   15890 (count: 158, min: 63, max: 137, avg: 100.57)
Number of affected states:                             1685 (count: 158, min: 1, max: 136, avg: 10.66)
Length (states) of path with itp 'true':              14047 (count: 158, min: 0, max: 132, avg: 88.91)
Length (states) of path with itp non-trivial itp:      1685 (count: 158, min: 1, max: 136, avg: 10.66)
Length (states) of path with itp 'false':               158 (count: 158, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 158, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:            1515 (count: 158, min: 0, max: 134, avg: 9.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                158
Number of successful refinements:     158
Number of failed refinements:         0
Max. size of reached set before ref.: 7583
Max. size of reached set after ref.:  6620
Avg. size of reached set before ref.: 3052.42
Avg. size of reached set after ref.:  2507.05

Total time for CEGAR algorithm:      24.827s
Time for refinements:                10.045s
Average time for refinement:          0.063s
Max time for refinement:              0.245s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          894
  Total lines:            1405
  Line coverage:          0.636
  Visited conditions:     338
  Total conditions:       488
  Condition coverage:     0.693

CPAchecker general statistics
-----------------------------
Number of program locations:     1933
Number of CFA edges:             2189
Number of relevant variables:    340
Number of functions:             111
Number of loops:                 4
Size of reached set:             5329
  Number of reached locations:   919 (48%)
    Avg states per location:     5
    Max states per location:     50 (at node N182)
  Number of reached functions:   77 (69%)
  Number of partitions:          5308
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N48 (before line 158), Function outgoing called from node N98, stack depth 5 [6133ea2e], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.213s
  Time for loading CPAs:          0.965s
  Time for loading parser:        0.715s
  Time for CFA construction:      2.380s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.700s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.619s
      Time for var class.:        0.345s
Time for Analysis:               24.827s
CPU time for analysis:           24.830s
Time for analyzing result:        0.005s
Total time for CPAchecker:       29.045s
Total CPU time for CPAchecker:   29.040s
Time for statistics:              0.213s

Time for Garbage Collector:       0.787s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     53MB (    50 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
