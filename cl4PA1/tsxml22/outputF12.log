scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bewx06ro/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 745: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 806: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 979: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1016: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1053: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1280: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1295: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1424: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1433: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1467: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2033: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2163: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2255: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2318: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2479: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2598: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5660 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5449 (96%)
  Because of loop head:            195 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       2019 (36%)
  Times precision was {false}:     189 (3%)
  Times result was cached:         3332 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      120 (2%)
  Times result was 'false':        56 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12960
  BDD entailment checks:           716
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          5
Number of abstraction locations:          130
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         3837
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 12.42
Number of irrelevant predicates:          2050 (53%)
Number of preds handled by boolean abs:   122 (3%)
  Total number of models for allsat:      120
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  2.096s
  Time for path formula creation:        2.004s
Time for strengthen operator:            0.164s
Time for prec operator:                  2.467s
  Time for abstraction:                  2.060s (Max:     0.021s, Count: 5660)
    Boolean abstraction:                 0.242s
    Solving time:                        0.443s (Max:     0.018s)
    Model enumeration time:              0.023s
    Time for BDD construction:           0.006s (Max:     0.001s)
Time for merge operator:                 0.403s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     0.466s

Number of path formula cache hits:   33479 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.848s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         247 (count: 4415, min: 0, max: 99, avg: 0.06)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.400s
Automaton transfers with branching:                0
Automaton transfer successors:                        43960 (count: 43960, min: 1, max: 1, avg: 1.00) [1 x 43960]

CPA algorithm statistics
------------------------
Number of iterations:            33378
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   40131
Max successors for one state:    2
Number of times merged:          6122
Number of times stopped:         6653
Number of times breaked:         16

Total time for CPA algorithm:         9.465s (Max:     1.372s)
  Time for choose from waitlist:      0.113s
  Time for precision adjustment:      3.279s
  Time for transfer relation:         4.022s
  Time for merge operator:            0.761s
  Time for stop operator:             0.267s
  Time for adding to reached set:     0.304s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                1692 (count: 16, min: 62, max: 116, avg: 105.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.346s
  Counterexample analysis:                             0.955s (Max:     0.077s, Calls: 16)
    Refinement sat check:                              0.411s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.037s
  ARG update:                                          0.213s

Length of refined path (in blocks):                    1334 (count: 16, min: 61, max: 93, avg: 83.38)
Number of affected states:                             1197 (count: 16, min: 1, max: 92, avg: 74.81)
Length (states) of path with itp 'true':                121 (count: 16, min: 0, max: 62, avg: 7.56)
Length (states) of path with itp non-trivial itp:      1197 (count: 16, min: 1, max: 92, avg: 74.81)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 16, min: 0, max: 1, avg: 0.88)
Equal non-trivial interpolants along paths:            1167 (count: 16, min: 0, max: 90, avg: 72.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 2411
Max. size of reached set after ref.:  1031
Avg. size of reached set before ref.: 2146.69
Avg. size of reached set after ref.:  130.88

Total time for CEGAR algorithm:      10.974s
Time for refinements:                 1.503s
Average time for refinement:          0.093s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          654
  Total lines:            1357
  Line coverage:          0.482
  Visited conditions:     230
  Total conditions:       484
  Condition coverage:     0.475

CPAchecker general statistics
-----------------------------
Number of program locations:     1863
Number of CFA edges:             2100
Number of relevant variables:    309
Number of functions:             105
Number of loops:                 4
Size of reached set:             1170
  Number of reached locations:   637 (34%)
    Avg states per location:     1
    Max states per location:     10 (at node N1611)
  Number of reached functions:   56 (53%)
  Number of partitions:          1170
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.070s
  Time for loading CPAs:          0.848s
  Time for loading parser:        0.735s
  Time for CFA construction:      2.297s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.661s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.584s
      Time for var class.:        0.298s
Time for Analysis:               10.974s
CPU time for analysis:           10.970s
Time for analyzing result:        0.001s
Total time for CPAchecker:       15.049s
Total CPU time for CPAchecker:   15.040s
Time for statistics:              0.137s

Time for Garbage Collector:       0.249s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     31MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8062MB (  7689 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
