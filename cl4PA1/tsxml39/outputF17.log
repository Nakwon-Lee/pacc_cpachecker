scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product37_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3s33syx9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1034: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1375: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1558: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1599: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1817: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1932: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2043: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2080: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2453: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2499: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5649 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5455 (97%)
  Because of loop head:            158 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       2137 (38%)
  Times precision was {false}:     183 (3%)
  Times result was cached:         3224 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (2%)
  Times result was 'false':        48 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         10659
  BDD entailment checks:           639
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          4
Number of abstraction locations:          116
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3512
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.19
Number of irrelevant predicates:          2018 (57%)
Number of preds handled by boolean abs:   105 (3%)
  Total number of models for allsat:      107
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.946s
  Time for path formula creation:        1.860s
Time for strengthen operator:            0.075s
Time for prec operator:                  2.284s
  Time for abstraction:                  1.942s (Max:     0.017s, Count: 5649)
    Boolean abstraction:                 0.152s
    Solving time:                        0.381s (Max:     0.015s)
    Model enumeration time:              0.007s
    Time for BDD construction:           0.014s (Max:     0.008s)
Time for merge operator:                 0.350s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     0.388s

Number of path formula cache hits:   28652 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.754s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         203 (count: 4330, min: 0, max: 75, avg: 0.05)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.417s
Automaton transfers with branching:                0
Automaton transfer successors:                        39224 (count: 39224, min: 1, max: 1, avg: 1.00) [1 x 39224]

CPA algorithm statistics
------------------------
Number of iterations:            29734
Max size of waitlist:            17
Average size of waitlist:        10
Number of computed successors:   35331
Max successors for one state:    2
Number of times merged:          5010
Number of times stopped:         5424
Number of times breaked:         36

Total time for CPA algorithm:         8.478s (Max:     1.119s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:      3.040s
  Time for transfer relation:         3.611s
  Time for merge operator:            0.697s
  Time for stop operator:             0.248s
  Time for adding to reached set:     0.183s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                3034 (count: 36, min: 69, max: 113, avg: 84.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.894s
  Counterexample analysis:                             1.520s (Max:     0.065s, Calls: 36)
    Refinement sat check:                              0.771s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.082s
  ARG update:                                          0.184s

Length of refined path (in blocks):                    2650 (count: 36, min: 68, max: 83, avg: 73.61)
Number of affected states:                              929 (count: 36, min: 1, max: 82, avg: 25.81)
Length (states) of path with itp 'true':               1685 (count: 36, min: 0, max: 81, avg: 46.81)
Length (states) of path with itp non-trivial itp:       929 (count: 36, min: 1, max: 82, avg: 25.81)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 36, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:             881 (count: 36, min: 0, max: 80, avg: 24.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 2579
Max. size of reached set after ref.:  2345
Avg. size of reached set before ref.: 1803.94
Avg. size of reached set after ref.:  1014.64

Total time for CEGAR algorithm:      10.688s
Time for refinements:                 2.151s
Average time for refinement:          0.059s
Max time for refinement:              0.110s

Code Coverage
-----------------------------
  Function coverage:      0.562
  Visited lines:          645
  Total lines:            1335
  Line coverage:          0.483
  Visited conditions:     204
  Total conditions:       478
  Condition coverage:     0.427

CPAchecker general statistics
-----------------------------
Number of program locations:     1838
Number of CFA edges:             2069
Number of relevant variables:    287
Number of functions:             105
Number of loops:                 4
Size of reached set:             1445
  Number of reached locations:   619 (34%)
    Avg states per location:     2
    Max states per location:     11 (at node N1953)
  Number of reached functions:   59 (56%)
  Number of partitions:          1438
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1101 (before line 1532), Function incoming called from node N1064, stack depth 7 [1cb24198], stack [main, test, bobToRjh, sendEmail, outgoing, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          3.820s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.652s
  Time for CFA construction:      2.146s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.632s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     0.478s
      Time for var class.:        0.256s
Time for Analysis:               10.689s
CPU time for analysis:           10.680s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.513s
Total CPU time for CPAchecker:   14.500s
Time for statistics:              0.120s

Time for Garbage Collector:       0.231s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8064MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
