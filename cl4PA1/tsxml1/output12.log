scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jljscda3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36257 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35966 (99%)
  Because of loop head:            259 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       6433 (18%)
  Times precision was {false}:     196 (1%)
  Times result was cached:         28642 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      986 (3%)
  Times result was 'false':        1392 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         63528
  BDD entailment checks:           5554
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          32
Number of abstraction locations:          136
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         70672
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 59.79
Number of irrelevant predicates:          33979 (48%)
Number of preds handled by boolean abs:   2639 (4%)
  Total number of models for allsat:      1840
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.87

Time for post operator:                  3.874s
  Time for path formula creation:        3.685s
Time for strengthen operator:            0.321s
Time for prec operator:                  8.473s
  Time for abstraction:                  7.773s (Max:     0.033s, Count: 36257)
    Boolean abstraction:                 1.472s
    Solving time:                        1.100s (Max:     0.014s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.177s (Max:     0.019s)
Time for merge operator:                 0.479s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     1.241s

Number of path formula cache hits:   253694 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.278s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               673
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3013 (count: 19324, min: 0, max: 474, avg: 0.16)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.744s
  Time for transition matches:                         0.373s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       243725 (count: 243725, min: 1, max: 1, avg: 1.00) [1 x 243725]

CPA algorithm statistics
------------------------
Number of iterations:            183411
Max size of waitlist:            34
Average size of waitlist:        15
Number of computed successors:   218004
Max successors for one state:    2
Number of times merged:          28987
Number of times stopped:         32878
Number of times breaked:         32

Total time for CPA algorithm:        22.726s (Max:     1.311s)
  Time for choose from waitlist:      0.250s
  Time for precision adjustment:     10.554s
  Time for transfer relation:         7.994s
  Time for merge operator:            1.222s
  Time for stop operator:             0.492s
  Time for adding to reached set:     0.710s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                3365 (count: 32, min: 68, max: 135, avg: 105.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.094s
  Counterexample analysis:                             2.162s (Max:     0.091s, Calls: 32)
    Refinement sat check:                              0.997s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.075s
  ARG update:                                          0.691s

Length of refined path (in blocks):                    2702 (count: 32, min: 55, max: 106, avg: 84.44)
Number of affected states:                             2404 (count: 32, min: 1, max: 105, avg: 75.13)
Length (states) of path with itp 'true':                266 (count: 32, min: 0, max: 80, avg: 8.31)
Length (states) of path with itp non-trivial itp:      2404 (count: 32, min: 1, max: 105, avg: 75.13)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         165 (count: 32, min: 0, max: 13, avg: 5.16)
Equal non-trivial interpolants along paths:            2207 (count: 32, min: 0, max: 103, avg: 68.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 10676
Max. size of reached set after ref.:  4780
Avg. size of reached set before ref.: 6014.50
Avg. size of reached set after ref.:  428.59

Total time for CEGAR algorithm:      26.167s
Time for refinements:                 3.415s
Average time for refinement:          0.106s
Max time for refinement:              0.156s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          814
  Total lines:            1444
  Line coverage:          0.564
  Visited conditions:     320
  Total conditions:       498
  Condition coverage:     0.643

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             4986
  Number of reached locations:   854 (43%)
    Avg states per location:     5
    Max states per location:     96 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          4966
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [caa7d86], stack [main, test]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.097s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.706s
  Time for CFA construction:      2.430s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.601s
      Time for var class.:        0.328s
Time for Analysis:               26.167s
CPU time for analysis:           26.170s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.161s

Time for Garbage Collector:       1.036s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    91 MiB) max;     50MB (    47 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
