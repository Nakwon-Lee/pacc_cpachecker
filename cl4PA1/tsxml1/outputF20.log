scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pv0x1nsx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            108726 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  107856 (99%)
  Because of loop head:            801 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (0%)
  Times precision was empty:       3730 (3%)
  Times precision was {false}:     265 (0%)
  Times result was cached:         100273 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4458 (4%)
  Times result was 'false':        6589 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         169425
  BDD entailment checks:           18013
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          42
Number of abstraction locations:          175
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         471648
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 99.86
Number of irrelevant predicates:          151165 (32%)
Number of preds handled by boolean abs:   18212 (4%)
  Total number of models for allsat:      7688
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.72

Time for post operator:                  7.510s
  Time for path formula creation:        6.841s
Time for strengthen operator:            0.789s
Time for prec operator:                 33.555s
  Time for abstraction:                 31.994s (Max:     0.278s, Count: 108726)
    Boolean abstraction:                 4.986s
    Solving time:                        3.926s (Max:     0.015s)
    Model enumeration time:              0.545s
    Time for BDD construction:           0.269s (Max:     0.009s)
Time for merge operator:                 0.867s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     4.471s

Number of path formula cache hits:   664637 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.978s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4343
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15942 (count: 52740, min: 0, max: 1031, avg: 0.30)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.410s
  Time for transition matches:                         0.741s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       676072 (count: 676072, min: 1, max: 1, avg: 1.00) [1 x 676072]

CPA algorithm statistics
------------------------
Number of iterations:            507887
Max size of waitlist:            34
Average size of waitlist:        14
Number of computed successors:   599909
Max successors for one state:    2
Number of times merged:          75706
Number of times stopped:         84764
Number of times breaked:         69

Total time for CPA algorithm:        60.683s (Max:     4.764s)
  Time for choose from waitlist:      0.297s
  Time for precision adjustment:     37.909s
  Time for transfer relation:        16.159s
  Time for merge operator:            2.070s
  Time for stop operator:             1.016s
  Time for adding to reached set:     0.994s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                7874 (count: 69, min: 68, max: 189, avg: 114.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.451s
  Counterexample analysis:                             4.991s (Max:     0.132s, Calls: 69)
    Refinement sat check:                              2.101s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.148s
  Precision update:                                    0.122s
  ARG update:                                          1.031s

Length of refined path (in blocks):                    6579 (count: 69, min: 55, max: 160, avg: 95.35)
Number of affected states:                             6268 (count: 69, min: 2, max: 159, avg: 90.84)
Length (states) of path with itp 'true':                242 (count: 69, min: 0, max: 86, avg: 3.51)
Length (states) of path with itp non-trivial itp:      6268 (count: 69, min: 2, max: 159, avg: 90.84)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         552 (count: 69, min: 1, max: 15, avg: 8.00)
Equal non-trivial interpolants along paths:            5647 (count: 69, min: 0, max: 157, avg: 81.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 14975
Max. size of reached set after ref.:  2528
Avg. size of reached set before ref.: 7020.00
Avg. size of reached set after ref.:  58.94

Total time for CEGAR algorithm:      67.657s
Time for refinements:                 6.963s
Average time for refinement:          0.100s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          859
  Total lines:            1444
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             28244
  Number of reached locations:   900 (45%)
    Avg states per location:     31
    Max states per location:     606 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          27906
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [3a85a1dc], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          3.937s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.716s
  Time for CFA construction:      2.234s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.639s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.563s
      Time for var class.:        0.310s
Time for Analysis:               67.658s
CPU time for analysis:           67.650s
Time for analyzing result:        0.022s
Total time for CPAchecker:       71.598s
Total CPU time for CPAchecker:   71.580s
Time for statistics:              0.451s

Time for Garbage Collector:       4.234s (in 269 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                146MB (   139 MiB) max;     75MB (    72 MiB) avg;    158MB (   150 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           184MB (   175 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8080MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
