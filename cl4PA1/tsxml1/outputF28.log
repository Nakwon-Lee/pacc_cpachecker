scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oxj2tjtu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            196133 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  195338 (100%)
  Because of loop head:            717 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (0%)
  Times precision was empty:       10522 (5%)
  Times precision was {false}:     310 (0%)
  Times result was cached:         178457 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6844 (3%)
  Times result was 'false':        13205 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         287719
  BDD entailment checks:           33183
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          43
Number of abstraction locations:          175
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         940843
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 131.51
Number of irrelevant predicates:          357817 (38%)
Number of preds handled by boolean abs:   29861 (3%)
  Total number of models for allsat:      11915
  Max number of models for allsat:        21
  Avg number of models for allsat:        1.74

Time for post operator:                  7.683s
  Time for path formula creation:        6.796s
Time for strengthen operator:            1.143s
Time for prec operator:                 53.247s
  Time for abstraction:                 50.805s (Max:     0.296s, Count: 196133)
    Boolean abstraction:                 7.037s
    Solving time:                        5.218s (Max:     0.013s)
    Model enumeration time:              0.902s
    Time for BDD construction:           0.357s (Max:     0.010s)
Time for merge operator:                 0.945s
Time for coverage check:                 0.139s
  Time for BDD entailment checks:        0.093s
Total time for SMT solver (w/o itp):     6.120s

Number of path formula cache hits:   1322119 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.520s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8188
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26816 (count: 92255, min: 0, max: 1065, avg: 0.29)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.977s
  Time for transition matches:                         1.019s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1183450 (count: 1183450, min: 1, max: 1, avg: 1.00) [1 x 1183450]

CPA algorithm statistics
------------------------
Number of iterations:            887642
Max size of waitlist:            34
Average size of waitlist:        17
Number of computed successors:   1045641
Max successors for one state:    2
Number of times merged:          127268
Number of times stopped:         143648
Number of times breaked:         78

Total time for CPA algorithm:        90.829s (Max:     4.024s)
  Time for choose from waitlist:      0.476s
  Time for precision adjustment:     60.735s
  Time for transfer relation:        20.215s
  Time for merge operator:            2.744s
  Time for stop operator:             1.555s
  Time for adding to reached set:     1.809s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                8551 (count: 78, min: 68, max: 184, avg: 109.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.608s
  Counterexample analysis:                             5.600s (Max:     0.161s, Calls: 78)
    Refinement sat check:                              2.302s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.179s
  Precision update:                                    0.114s
  ARG update:                                          1.568s

Length of refined path (in blocks):                    7302 (count: 78, min: 55, max: 155, avg: 93.62)
Number of affected states:                             6915 (count: 78, min: 2, max: 154, avg: 88.65)
Length (states) of path with itp 'true':                309 (count: 78, min: 0, max: 84, avg: 3.96)
Length (states) of path with itp non-trivial itp:      6915 (count: 78, min: 2, max: 154, avg: 88.65)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         632 (count: 78, min: 1, max: 15, avg: 8.10)
Equal non-trivial interpolants along paths:            6205 (count: 78, min: 0, max: 152, avg: 79.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 33018
Max. size of reached set after ref.:  7648
Avg. size of reached set before ref.: 11131.97
Avg. size of reached set after ref.:  158.00

Total time for CEGAR algorithm:      99.208s
Time for refinements:                 8.363s
Average time for refinement:          0.107s
Max time for refinement:              0.209s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          859
  Total lines:            1444
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             32819
  Number of reached locations:   900 (45%)
    Avg states per location:     36
    Max states per location:     738 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          32450
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [2409513a], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.120s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.726s
  Time for CFA construction:      2.407s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.762s
    Time for CFA sanity check:    0.169s
    Time for post-processing:     0.623s
      Time for var class.:        0.352s
Time for Analysis:               99.209s
CPU time for analysis:           99.200s
Time for analyzing result:        0.026s
Total time for CPAchecker:      103.336s
Total CPU time for CPAchecker:  103.320s
Time for statistics:              0.494s

Time for Garbage Collector:       7.922s (in 442 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                177MB (   169 MiB) max;     83MB (    80 MiB) avg;    190MB (   181 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           229MB (   218 MiB) max;    142MB (   135 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8084MB (  7710 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
