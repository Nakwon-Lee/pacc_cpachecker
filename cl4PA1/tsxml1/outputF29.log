scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7deeh7n8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            131586 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  130599 (99%)
  Because of loop head:            934 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         53 (0%)
  Times precision was empty:       9986 (8%)
  Times precision was {false}:     394 (0%)
  Times result was cached:         114807 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6399 (5%)
  Times result was 'false':        5801 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         232381
  BDD entailment checks:           15455
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          43
Number of abstraction locations:          175
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         706686
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 104.03
Number of irrelevant predicates:          198688 (28%)
Number of preds handled by boolean abs:   27731 (4%)
  Total number of models for allsat:      12503
  Max number of models for allsat:        30
  Avg number of models for allsat:        1.95

Time for post operator:                  7.984s
  Time for path formula creation:        7.479s
Time for strengthen operator:            0.953s
Time for prec operator:                 45.454s
  Time for abstraction:                 43.588s (Max:     0.421s, Count: 131586)
    Boolean abstraction:                 7.124s
    Solving time:                        5.509s (Max:     0.015s)
    Model enumeration time:              0.909s
    Time for BDD construction:           0.408s (Max:     0.019s)
Time for merge operator:                 1.111s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     6.418s

Number of path formula cache hits:   910323 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.368s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7025
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22010 (count: 69574, min: 0, max: 926, avg: 0.32)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.492s
  Time for transition matches:                         0.791s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       905582 (count: 905582, min: 1, max: 1, avg: 1.00) [1 x 905582]

CPA algorithm statistics
------------------------
Number of iterations:            668663
Max size of waitlist:            236
Average size of waitlist:        78
Number of computed successors:   794737
Max successors for one state:    2
Number of times merged:          108463
Number of times stopped:         116117
Number of times breaked:         53

Total time for CPA algorithm:        77.570s (Max:     7.472s)
  Time for choose from waitlist:      0.442s
  Time for precision adjustment:     51.010s
  Time for transfer relation:        18.046s
  Time for merge operator:            2.685s
  Time for stop operator:             1.163s
  Time for adding to reached set:     1.461s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                7252 (count: 53, min: 72, max: 227, avg: 136.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.100s
  Counterexample analysis:                             4.497s (Max:     0.139s, Calls: 53)
    Refinement sat check:                              1.800s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.117s
  Precision update:                                    0.063s
  ARG update:                                          1.326s

Length of refined path (in blocks):                    6252 (count: 53, min: 46, max: 194, avg: 117.96)
Number of affected states:                             5846 (count: 53, min: 1, max: 193, avg: 110.30)
Length (states) of path with itp 'true':                353 (count: 53, min: 0, max: 101, avg: 6.66)
Length (states) of path with itp non-trivial itp:      5846 (count: 53, min: 1, max: 193, avg: 110.30)
Length (states) of path with itp 'false':                53 (count: 53, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         441 (count: 53, min: 0, max: 16, avg: 8.32)
Equal non-trivial interpolants along paths:            5352 (count: 53, min: 0, max: 191, avg: 100.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 40277
Max. size of reached set after ref.:  12422
Avg. size of reached set before ref.: 12412.91
Avg. size of reached set after ref.:  597.28

Total time for CEGAR algorithm:      84.404s
Time for refinements:                 6.811s
Average time for refinement:          0.128s
Max time for refinement:              0.229s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          859
  Total lines:            1444
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             46592
  Number of reached locations:   900 (45%)
    Avg states per location:     51
    Max states per location:     1158 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          46056
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [c55af12], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.068s
  Time for loading CPAs:          0.838s
  Time for loading parser:        0.710s
  Time for CFA construction:      2.347s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.654s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.596s
      Time for var class.:        0.359s
Time for Analysis:               84.405s
CPU time for analysis:           84.390s
Time for analyzing result:        0.036s
Total time for CPAchecker:       88.477s
Total CPU time for CPAchecker:   88.460s
Time for statistics:              0.679s

Time for Garbage Collector:       6.622s (in 318 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                224MB (   213 MiB) max;     96MB (    92 MiB) avg;    243MB (   232 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           256MB (   244 MiB) max;    158MB (   150 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8104MB (  7729 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
