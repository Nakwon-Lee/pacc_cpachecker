scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_60z_o427/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            196268 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  195664 (100%)
  Because of loop head:            525 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         79 (0%)
  Times precision was empty:       1973 (1%)
  Times precision was {false}:     368 (0%)
  Times result was cached:         186470 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7457 (4%)
  Times result was 'false':        15579 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         250274
  BDD entailment checks:           29380
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          43
Number of abstraction locations:          175
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         1106696
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 141.43
Number of irrelevant predicates:          270854 (24%)
Number of preds handled by boolean abs:   34160 (3%)
  Total number of models for allsat:      16283
  Max number of models for allsat:        36
  Avg number of models for allsat:        2.18

Time for post operator:                  9.730s
  Time for path formula creation:        8.999s
Time for strengthen operator:            1.087s
Time for prec operator:                 63.001s
  Time for abstraction:                 60.802s (Max:     0.392s, Count: 196268)
    Boolean abstraction:                 8.532s
    Solving time:                        6.420s (Max:     0.020s)
    Model enumeration time:              1.130s
    Time for BDD construction:           0.543s (Max:     0.012s)
Time for merge operator:                 1.025s
Time for coverage check:                 0.122s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):     7.550s

Number of path formula cache hits:   1137883 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.497s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               10790
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29598 (count: 84114, min: 0, max: 1503, avg: 0.35)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.988s
  Time for transition matches:                         1.027s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1114375 (count: 1114375, min: 1, max: 1, avg: 1.00) [1 x 1114375]

CPA algorithm statistics
------------------------
Number of iterations:            830899
Max size of waitlist:            39
Average size of waitlist:        18
Number of computed successors:   972519
Max successors for one state:    2
Number of times merged:          110447
Number of times stopped:         124594
Number of times breaked:         79

Total time for CPA algorithm:       101.707s (Max:     5.026s)
  Time for choose from waitlist:      0.504s
  Time for precision adjustment:     69.674s
  Time for transfer relation:        22.775s
  Time for merge operator:            2.558s
  Time for stop operator:             1.368s
  Time for adding to reached set:     1.719s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   79
Avg. length of target path (in blocks):                9361 (count: 79, min: 68, max: 169, avg: 118.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.378s
  Counterexample analysis:                             6.355s (Max:     0.209s, Calls: 79)
    Refinement sat check:                              2.662s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.162s
  Precision update:                                    0.097s
  ARG update:                                          1.638s

Length of refined path (in blocks):                    7718 (count: 79, min: 55, max: 146, avg: 97.70)
Number of affected states:                             7281 (count: 79, min: 1, max: 139, avg: 92.16)
Length (states) of path with itp 'true':                358 (count: 79, min: 0, max: 76, avg: 4.53)
Length (states) of path with itp non-trivial itp:      7281 (count: 79, min: 1, max: 139, avg: 92.16)
Length (states) of path with itp 'false':                79 (count: 79, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         651 (count: 79, min: 0, max: 15, avg: 8.24)
Equal non-trivial interpolants along paths:            6551 (count: 79, min: 0, max: 137, avg: 82.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                79
Number of successful refinements:     79
Number of failed refinements:         0
Max. size of reached set before ref.: 31911
Max. size of reached set after ref.:  497
Avg. size of reached set before ref.: 10194.38
Avg. size of reached set after ref.:  24.94

Total time for CEGAR algorithm:     110.818s
Time for refinements:                 9.099s
Average time for refinement:          0.115s
Max time for refinement:              0.276s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          859
  Total lines:            1444
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             28961
  Number of reached locations:   900 (45%)
    Avg states per location:     32
    Max states per location:     666 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          28631
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [22a9eab3], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.039s
  Time for loading CPAs:          0.818s
  Time for loading parser:        0.725s
  Time for CFA construction:      2.331s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.705s
    Time for CFA sanity check:    0.207s
    Time for post-processing:     0.606s
      Time for var class.:        0.336s
Time for Analysis:              110.819s
CPU time for analysis:          110.800s
Time for analyzing result:        0.023s
Total time for CPAchecker:      114.862s
Total CPU time for CPAchecker:  114.850s
Time for statistics:              0.500s

Time for Garbage Collector:       8.607s (in 384 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                230MB (   219 MiB) max;    108MB (   103 MiB) avg;    241MB (   230 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           262MB (   250 MiB) max;    174MB (   166 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8105MB (  7729 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
