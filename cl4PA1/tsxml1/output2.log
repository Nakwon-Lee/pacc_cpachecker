scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9yvkyf4s/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27495 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26896 (98%)
  Because of loop head:            568 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       8478 (31%)
  Times precision was {false}:     165 (1%)
  Times result was cached:         17919 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      933 (3%)
  Times result was 'false':        295 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         73661
  BDD entailment checks:           2981
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          28
Number of abstraction locations:          127
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         59542
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 54.23
Number of irrelevant predicates:          24535 (41%)
Number of preds handled by boolean abs:   2001 (3%)
  Total number of models for allsat:      1463
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.57

Time for post operator:                  3.438s
  Time for path formula creation:        3.247s
Time for strengthen operator:            0.334s
Time for prec operator:                  8.782s
  Time for abstraction:                  8.182s (Max:     0.032s, Count: 27495)
    Boolean abstraction:                 1.755s
    Solving time:                        1.451s (Max:     0.016s)
    Model enumeration time:              0.196s
    Time for BDD construction:           0.182s (Max:     0.012s)
Time for merge operator:                 0.612s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.647s

Number of path formula cache hits:   258719 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.866s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               533
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2613 (count: 18250, min: 0, max: 350, avg: 0.14)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.672s
  Time for transition matches:                         0.350s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       238959 (count: 238959, min: 1, max: 1, avg: 1.00) [1 x 238959]

CPA algorithm statistics
------------------------
Number of iterations:            179716
Max size of waitlist:            63
Average size of waitlist:        20
Number of computed successors:   218210
Max successors for one state:    2
Number of times merged:          35340
Number of times stopped:         36978
Number of times breaked:         31

Total time for CPA algorithm:        22.610s (Max:     1.844s)
  Time for choose from waitlist:      0.285s
  Time for precision adjustment:     10.734s
  Time for transfer relation:         7.668s
  Time for merge operator:            1.465s
  Time for stop operator:             0.540s
  Time for adding to reached set:     0.631s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                2489 (count: 31, min: 68, max: 91, avg: 80.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.896s
  Counterexample analysis:                             2.050s (Max:     0.094s, Calls: 31)
    Refinement sat check:                              0.907s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.125s
  Precision update:                                    0.055s
  ARG update:                                          0.592s

Length of refined path (in blocks):                    2288 (count: 31, min: 55, max: 86, avg: 73.81)
Number of affected states:                             2173 (count: 31, min: 54, max: 79, avg: 70.10)
Length (states) of path with itp 'true':                 84 (count: 31, min: 0, max: 7, avg: 2.71)
Length (states) of path with itp non-trivial itp:      2173 (count: 31, min: 54, max: 79, avg: 70.10)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         322 (count: 31, min: 6, max: 13, avg: 10.39)
Equal non-trivial interpolants along paths:            1820 (count: 31, min: 47, max: 68, avg: 58.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 8077
Max. size of reached set after ref.:  21
Avg. size of reached set before ref.: 5691.90
Avg. size of reached set after ref.:  9.97

Total time for CEGAR algorithm:      25.768s
Time for refinements:                 3.157s
Average time for refinement:          0.101s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.616
  Visited lines:          839
  Total lines:            1444
  Line coverage:          0.581
  Visited conditions:     336
  Total conditions:       498
  Condition coverage:     0.675

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             4797
  Number of reached locations:   864 (44%)
    Avg states per location:     5
    Max states per location:     20 (at node N536)
  Number of reached functions:   69 (62%)
  Number of partitions:          4783
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [582b8c82], stack [main, test]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          4.004s
  Time for loading CPAs:          0.838s
  Time for loading parser:        0.725s
  Time for CFA construction:      2.288s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.667s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.593s
      Time for var class.:        0.323s
Time for Analysis:               25.768s
CPU time for analysis:           25.770s
Total time for CPAchecker:       29.777s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.188s

Time for Garbage Collector:       0.905s (in 75 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     51MB (    49 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
