scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_anslthft/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27179 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26902 (99%)
  Because of loop head:            246 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       4041 (15%)
  Times precision was {false}:     191 (1%)
  Times result was cached:         21928 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1019 (4%)
  Times result was 'false':        1135 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         46787
  BDD entailment checks:           3489
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          32
Number of abstraction locations:          136
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         55206
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 45.62
Number of irrelevant predicates:          22280 (40%)
Number of preds handled by boolean abs:   2810 (5%)
  Total number of models for allsat:      2037
  Max number of models for allsat:        6
  Avg number of models for allsat:        2.00

Time for post operator:                  3.624s
  Time for path formula creation:        3.352s
Time for strengthen operator:            0.422s
Time for prec operator:                  9.166s
  Time for abstraction:                  8.481s (Max:     0.039s, Count: 27179)
    Boolean abstraction:                 1.886s
    Solving time:                        1.379s (Max:     0.015s)
    Model enumeration time:              0.205s
    Time for BDD construction:           0.231s (Max:     0.013s)
Time for merge operator:                 0.386s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.584s

Number of path formula cache hits:   182862 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.030s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               901
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3207 (count: 15089, min: 0, max: 447, avg: 0.21)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.529s
  Time for transition matches:                         0.282s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       181296 (count: 181296, min: 1, max: 1, avg: 1.00) [1 x 181296]

CPA algorithm statistics
------------------------
Number of iterations:            136175
Max size of waitlist:            42
Average size of waitlist:        15
Number of computed successors:   161893
Max successors for one state:    2
Number of times merged:          21649
Number of times stopped:         24102
Number of times breaked:         31

Total time for CPA algorithm:        21.963s (Max:     1.650s)
  Time for choose from waitlist:      0.202s
  Time for precision adjustment:     11.044s
  Time for transfer relation:         7.411s
  Time for merge operator:            0.985s
  Time for stop operator:             0.492s
  Time for adding to reached set:     0.533s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                3272 (count: 31, min: 68, max: 135, avg: 105.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.976s
  Counterexample analysis:                             2.196s (Max:     0.089s, Calls: 31)
    Refinement sat check:                              1.028s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.126s
  Precision update:                                    0.043s
  ARG update:                                          0.503s

Length of refined path (in blocks):                    2634 (count: 31, min: 55, max: 106, avg: 84.97)
Number of affected states:                             2337 (count: 31, min: 1, max: 105, avg: 75.39)
Length (states) of path with itp 'true':                266 (count: 31, min: 0, max: 80, avg: 8.58)
Length (states) of path with itp non-trivial itp:      2337 (count: 31, min: 1, max: 105, avg: 75.39)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         159 (count: 31, min: 0, max: 13, avg: 5.13)
Equal non-trivial interpolants along paths:            2147 (count: 31, min: 0, max: 103, avg: 69.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 10676
Max. size of reached set after ref.:  2020
Avg. size of reached set before ref.: 4319.81
Avg. size of reached set after ref.:  198.81

Total time for CEGAR algorithm:      25.230s
Time for refinements:                 3.253s
Average time for refinement:          0.104s
Max time for refinement:              0.176s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          856
  Total lines:            1444
  Line coverage:          0.593
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             8906
  Number of reached locations:   896 (45%)
    Avg states per location:     9
    Max states per location:     192 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          8862
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [65583b07], stack [main, test]])
  Number of target states:       0
  Size of final wait list        4

Time for analysis setup:          4.547s
  Time for loading CPAs:          0.911s
  Time for loading parser:        0.772s
  Time for CFA construction:      2.666s
    Time for parsing file(s):     0.636s
    Time for AST to CFA:          0.879s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.706s
      Time for var class.:        0.399s
Time for Analysis:               25.230s
CPU time for analysis:           25.240s
Total time for CPAchecker:       29.782s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.255s

Time for Garbage Collector:       0.932s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     47MB (    45 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
