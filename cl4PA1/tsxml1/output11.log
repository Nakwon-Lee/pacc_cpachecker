scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__11wqnsm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26731 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26641 (100%)
  Because of loop head:            58 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       1152 (4%)
  Times precision was {false}:     249 (1%)
  Times result was cached:         23022 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2308 (9%)
  Times result was 'false':        1675 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         35372
  BDD entailment checks:           3610
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          40
Number of abstraction locations:          123
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         93253
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 36.47
Number of irrelevant predicates:          30840 (33%)
Number of preds handled by boolean abs:   7889 (8%)
  Total number of models for allsat:      4072
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.76

Time for post operator:                  3.591s
  Time for path formula creation:        3.396s
Time for strengthen operator:            0.310s
Time for prec operator:                 11.246s
  Time for abstraction:                 10.680s (Max:     0.022s, Count: 26731)
    Boolean abstraction:                 2.687s
    Solving time:                        2.078s (Max:     0.047s)
    Model enumeration time:              0.329s
    Time for BDD construction:           0.235s (Max:     0.012s)
Time for merge operator:                 0.388s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     2.408s

Number of path formula cache hits:   134059 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.104s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2435
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8778 (count: 21672, min: 0, max: 604, avg: 0.41)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.541s
  Time for transition matches:                         0.195s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       156616 (count: 156616, min: 1, max: 1, avg: 1.00) [1 x 156616]

CPA algorithm statistics
------------------------
Number of iterations:            116386
Max size of waitlist:            29
Average size of waitlist:        14
Number of computed successors:   136542
Max successors for one state:    2
Number of times merged:          15881
Number of times stopped:         18025
Number of times breaked:         32

Total time for CPA algorithm:        22.510s (Max:     1.432s)
  Time for choose from waitlist:      0.194s
  Time for precision adjustment:     12.635s
  Time for transfer relation:         6.772s
  Time for merge operator:            0.914s
  Time for stop operator:             0.406s
  Time for adding to reached set:     0.495s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                3838 (count: 32, min: 68, max: 169, avg: 119.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.275s
  Counterexample analysis:                             2.606s (Max:     0.138s, Calls: 32)
    Refinement sat check:                              1.182s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.143s
  Precision update:                                    0.029s
  ARG update:                                          0.419s

Length of refined path (in blocks):                    3067 (count: 32, min: 65, max: 140, avg: 95.84)
Number of affected states:                             2796 (count: 32, min: 1, max: 139, avg: 87.38)
Length (states) of path with itp 'true':                239 (count: 32, min: 0, max: 76, avg: 7.47)
Length (states) of path with itp non-trivial itp:      2796 (count: 32, min: 1, max: 139, avg: 87.38)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         225 (count: 32, min: 0, max: 15, avg: 7.03)
Equal non-trivial interpolants along paths:            2539 (count: 32, min: 0, max: 137, avg: 79.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 7562
Max. size of reached set after ref.:  497
Avg. size of reached set before ref.: 3495.81
Avg. size of reached set after ref.:  47.59

Total time for CEGAR algorithm:      26.072s
Time for refinements:                 3.559s
Average time for refinement:          0.111s
Max time for refinement:              0.188s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          636
  Total lines:            1444
  Line coverage:          0.440
  Visited conditions:     204
  Total conditions:       498
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             6499
  Number of reached locations:   585 (30%)
    Avg states per location:     11
    Max states per location:     134 (at node N2195)
  Number of reached functions:   61 (54%)
  Number of partitions:          6438
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1999 (before line 2675), Function mail called from node N2006, stack depth 9 [15e6caef], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.156s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.712s
  Time for CFA construction:      2.457s
    Time for parsing file(s):     0.713s
    Time for AST to CFA:          0.742s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.619s
      Time for var class.:        0.328s
Time for Analysis:               26.072s
CPU time for analysis:           26.070s
Total time for CPAchecker:       30.232s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.185s

Time for Garbage Collector:       0.801s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    87 MiB) max;     51MB (    48 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
