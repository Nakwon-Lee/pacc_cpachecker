scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9_6a6e1u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28631 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28522 (100%)
  Because of loop head:            79 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       6228 (22%)
  Times precision was {false}:     156 (1%)
  Times result was cached:         20754 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1493 (5%)
  Times result was 'false':        1555 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         45542
  BDD entailment checks:           4338
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          42
Number of abstraction locations:          132
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         92252
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 55.94
Number of irrelevant predicates:          40094 (43%)
Number of preds handled by boolean abs:   4889 (5%)
  Total number of models for allsat:      2893
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.94

Time for post operator:                  2.933s
  Time for path formula creation:        2.689s
Time for strengthen operator:            0.366s
Time for prec operator:                 10.843s
  Time for abstraction:                 10.277s (Max:     0.024s, Count: 28631)
    Boolean abstraction:                 1.925s
    Solving time:                        1.295s (Max:     0.015s)
    Model enumeration time:              0.304s
    Time for BDD construction:           0.216s (Max:     0.012s)
Time for merge operator:                 0.343s
Time for coverage check:                 0.085s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):     1.599s

Number of path formula cache hits:   198581 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.338s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2338
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6904 (count: 21956, min: 0, max: 784, avg: 0.31)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.565s
  Time for transition matches:                         0.227s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       181289 (count: 181289, min: 1, max: 1, avg: 1.00) [1 x 181289]

CPA algorithm statistics
------------------------
Number of iterations:            136028
Max size of waitlist:            25
Average size of waitlist:        14
Number of computed successors:   160972
Max successors for one state:    2
Number of times merged:          20602
Number of times stopped:         22985
Number of times breaked:         30

Total time for CPA algorithm:        22.512s (Max:     1.648s)
  Time for choose from waitlist:      0.216s
  Time for precision adjustment:     12.447s
  Time for transfer relation:         6.501s
  Time for merge operator:            0.974s
  Time for stop operator:             0.550s
  Time for adding to reached set:     0.446s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                3398 (count: 30, min: 68, max: 139, avg: 113.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.404s
  Counterexample analysis:                             2.615s (Max:     0.176s, Calls: 30)
    Refinement sat check:                              1.065s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.110s
  Precision update:                                    0.049s
  ARG update:                                          0.535s

Length of refined path (in blocks):                    2807 (count: 30, min: 55, max: 127, avg: 93.57)
Number of affected states:                             2635 (count: 30, min: 2, max: 126, avg: 87.83)
Length (states) of path with itp 'true':                142 (count: 30, min: 0, max: 84, avg: 4.73)
Length (states) of path with itp non-trivial itp:      2635 (count: 30, min: 2, max: 126, avg: 87.83)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         221 (count: 30, min: 1, max: 15, avg: 7.37)
Equal non-trivial interpolants along paths:            2384 (count: 30, min: 0, max: 115, avg: 79.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 8652
Max. size of reached set after ref.:  3951
Avg. size of reached set before ref.: 4638.30
Avg. size of reached set after ref.:  164.63

Total time for CEGAR algorithm:      26.211s
Time for refinements:                 3.682s
Average time for refinement:          0.122s
Max time for refinement:              0.198s

Code Coverage
-----------------------------
  Function coverage:      0.589
  Visited lines:          715
  Total lines:            1444
  Line coverage:          0.495
  Visited conditions:     282
  Total conditions:       498
  Condition coverage:     0.566

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             2223
  Number of reached locations:   751 (38%)
    Avg states per location:     2
    Max states per location:     25 (at node N2195)
  Number of reached functions:   66 (59%)
  Number of partitions:          2204
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2075 (before line 2791), Function incoming__wrappee__Verify called from node N2088, stack depth 11 [1a07a5da], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.070s
  Time for loading CPAs:          0.816s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.328s
    Time for parsing file(s):     0.658s
    Time for AST to CFA:          0.682s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.614s
      Time for var class.:        0.321s
Time for Analysis:               26.211s
CPU time for analysis:           26.210s
Total time for CPAchecker:       30.285s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.139s

Time for Garbage Collector:       0.762s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     47MB (    44 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
