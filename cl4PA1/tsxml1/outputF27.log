scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iq7v2g5r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 721: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 933: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1919: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2077: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2192: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2881: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2890: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2899: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 512: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            251439 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  250335 (100%)
  Because of loop head:            1028 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       7471 (3%)
  Times precision was {false}:     304 (0%)
  Times result was cached:         237607 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6057 (2%)
  Times result was 'false':        16284 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         379982
  BDD entailment checks:           43360
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       64
Number of predicates discovered:          43
Number of abstraction locations:          175
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         1267132
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 199.20
Number of irrelevant predicates:          354623 (28%)
Number of preds handled by boolean abs:   26701 (2%)
  Total number of models for allsat:      11829
  Max number of models for allsat:        21
  Avg number of models for allsat:        1.95

Time for post operator:                  7.530s
  Time for path formula creation:        6.584s
Time for strengthen operator:            1.308s
Time for prec operator:                 66.172s
  Time for abstraction:                 63.339s (Max:     0.314s, Count: 251439)
    Boolean abstraction:                 7.022s
    Solving time:                        5.138s (Max:     0.015s)
    Model enumeration time:              0.863s
    Time for BDD construction:           0.497s (Max:     0.021s)
Time for merge operator:                 1.004s
Time for coverage check:                 0.124s
  Time for BDD entailment checks:        0.078s
Total time for SMT solver (w/o itp):     6.001s

Number of path formula cache hits:   1800480 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.804s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7166
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21662 (count: 93044, min: 0, max: 1525, avg: 0.23)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.337s
  Time for transition matches:                         1.247s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1536767 (count: 1536767, min: 1, max: 1, avg: 1.00) [1 x 1536767]

CPA algorithm statistics
------------------------
Number of iterations:            1154712
Max size of waitlist:            42
Average size of waitlist:        13
Number of computed successors:   1361978
Max successors for one state:    2
Number of times merged:          168311
Number of times stopped:         190144
Number of times breaked:         76

Total time for CPA algorithm:       109.536s (Max:     5.445s)
  Time for choose from waitlist:      0.511s
  Time for precision adjustment:     75.387s
  Time for transfer relation:        22.499s
  Time for merge operator:            3.163s
  Time for stop operator:             1.832s
  Time for adding to reached set:     2.318s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                8523 (count: 76, min: 68, max: 184, avg: 112.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.865s
  Counterexample analysis:                             5.376s (Max:     0.116s, Calls: 76)
    Refinement sat check:                              2.193s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.142s
  Precision update:                                    0.090s
  ARG update:                                          2.091s

Length of refined path (in blocks):                    7243 (count: 76, min: 55, max: 155, avg: 95.30)
Number of affected states:                             6707 (count: 76, min: 1, max: 154, avg: 88.25)
Length (states) of path with itp 'true':                460 (count: 76, min: 0, max: 80, avg: 6.05)
Length (states) of path with itp non-trivial itp:      6707 (count: 76, min: 1, max: 154, avg: 88.25)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         597 (count: 76, min: 0, max: 15, avg: 7.86)
Equal non-trivial interpolants along paths:            6034 (count: 76, min: 0, max: 152, avg: 79.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 38129
Max. size of reached set after ref.:  11411
Avg. size of reached set before ref.: 15074.12
Avg. size of reached set after ref.:  343.88

Total time for CEGAR algorithm:     118.715s
Time for refinements:                 9.158s
Average time for refinement:          0.120s
Max time for refinement:              0.474s

Code Coverage
-----------------------------
  Function coverage:      0.634
  Visited lines:          859
  Total lines:            1444
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1983
Number of CFA edges:             2253
Number of relevant variables:    362
Number of functions:             112
Number of loops:                 4
Size of reached set:             36053
  Number of reached locations:   900 (45%)
    Avg states per location:     40
    Max states per location:     834 (at node N2195)
  Number of reached functions:   71 (63%)
  Number of partitions:          35611
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1834 (before lines 2436-2603), Function test called from node N86, stack depth 2 [380b0b70], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.017s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.741s
  Time for CFA construction:      2.312s
    Time for parsing file(s):     0.688s
    Time for AST to CFA:          0.690s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.566s
      Time for var class.:        0.295s
Time for Analysis:              118.716s
CPU time for analysis:          118.700s
Time for analyzing result:        0.028s
Total time for CPAchecker:      122.737s
Total CPU time for CPAchecker:  122.710s
Time for statistics:              0.575s

Time for Garbage Collector:      10.646s (in 553 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                194MB (   185 MiB) max;     92MB (    88 MiB) avg;    202MB (   192 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           201MB (   192 MiB) max;    149MB (   142 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
