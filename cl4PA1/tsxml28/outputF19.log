scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_su4ih939/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1318: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2713: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12633 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12346 (98%)
  Because of loop head:            224 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       4850 (38%)
  Times precision was {false}:     348 (3%)
  Times result was cached:         7258 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (1%)
  Times result was 'false':        176 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         25798
  BDD entailment checks:           1218
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          152
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8521
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.23
Number of irrelevant predicates:          6081 (71%)
Number of preds handled by boolean abs:   179 (2%)
  Total number of models for allsat:      177
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  4.079s
  Time for path formula creation:        3.938s
Time for strengthen operator:            0.127s
Time for prec operator:                  3.394s
  Time for abstraction:                  2.932s (Max:     0.023s, Count: 12633)
    Boolean abstraction:                 0.327s
    Solving time:                        0.531s (Max:     0.014s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.035s (Max:     0.008s)
Time for merge operator:                 0.646s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     0.559s

Number of path formula cache hits:   52250 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.750s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         364 (count: 8881, min: 0, max: 86, avg: 0.04)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.511s
  Time for transition matches:                         0.204s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        93367 (count: 93367, min: 1, max: 1, avg: 1.00) [1 x 93367]

CPA algorithm statistics
------------------------
Number of iterations:            70130
Max size of waitlist:            39
Average size of waitlist:        17
Number of computed successors:   83692
Max successors for one state:    2
Number of times merged:          12290
Number of times stopped:         13163
Number of times breaked:         63

Total time for CPA algorithm:        14.271s (Max:     1.614s)
  Time for choose from waitlist:      0.198s
  Time for precision adjustment:      4.598s
  Time for transfer relation:         6.805s
  Time for merge operator:            1.074s
  Time for stop operator:             0.383s
  Time for adding to reached set:     0.287s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                8454 (count: 63, min: 79, max: 236, avg: 134.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.998s
  Counterexample analysis:                             4.375s (Max:     0.140s, Calls: 63)
    Refinement sat check:                              1.945s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.082s
  ARG update:                                          0.310s

Length of refined path (in blocks):                    7767 (count: 63, min: 71, max: 235, avg: 123.29)
Number of affected states:                             1817 (count: 63, min: 1, max: 144, avg: 28.84)
Length (states) of path with itp 'true':               5887 (count: 63, min: 0, max: 233, avg: 93.44)
Length (states) of path with itp non-trivial itp:      1817 (count: 63, min: 1, max: 144, avg: 28.84)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 63, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:            1741 (count: 63, min: 0, max: 142, avg: 27.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 7937
Max. size of reached set after ref.:  7218
Avg. size of reached set before ref.: 4407.33
Avg. size of reached set after ref.:  3387.79

Total time for CEGAR algorithm:      20.094s
Time for refinements:                 5.578s
Average time for refinement:          0.088s
Max time for refinement:              0.206s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          932
  Total lines:            1424
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1962
Number of CFA edges:             2224
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             6123
  Number of reached locations:   966 (49%)
    Avg states per location:     6
    Max states per location:     50 (at node N1092)
  Number of reached functions:   82 (72%)
  Number of partitions:          6101
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N934 (before line 1231), Function outgoing called from node N995, stack depth 5 [3222ab2a], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.047s
  Time for loading CPAs:          0.771s
  Time for loading parser:        0.722s
  Time for CFA construction:      2.379s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.731s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.613s
      Time for var class.:        0.328s
Time for Analysis:               20.094s
CPU time for analysis:           20.100s
Time for analyzing result:        0.004s
Total time for CPAchecker:       24.146s
Total CPU time for CPAchecker:   24.140s
Time for statistics:              0.234s

Time for Garbage Collector:       0.582s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     49MB (    46 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
