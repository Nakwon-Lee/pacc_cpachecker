scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4fha5xb4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1318: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2713: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20557 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20254 (99%)
  Because of loop head:            158 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         145 (1%)
  Times precision was empty:       10275 (50%)
  Times precision was {false}:     277 (1%)
  Times result was cached:         9869 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      136 (1%)
  Times result was 'false':        351 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         34503
  BDD entailment checks:           1713
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          143
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         11272
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 27.29
Number of irrelevant predicates:          9179 (81%)
Number of preds handled by boolean abs:   137 (1%)
  Total number of models for allsat:      137
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.508s
  Time for path formula creation:        3.323s
Time for strengthen operator:            0.246s
Time for prec operator:                  3.093s
  Time for abstraction:                  2.563s (Max:     0.026s, Count: 20557)
    Boolean abstraction:                 0.218s
    Solving time:                        0.394s (Max:     0.012s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.025s (Max:     0.008s)
Time for merge operator:                 0.514s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.415s

Number of path formula cache hits:   113239 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.140s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         272 (count: 14201, min: 0, max: 135, avg: 0.02)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.667s
  Time for transition matches:                         0.269s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       137215 (count: 137215, min: 1, max: 1, avg: 1.00) [1 x 137215]

CPA algorithm statistics
------------------------
Number of iterations:            102425
Max size of waitlist:            22
Average size of waitlist:        15
Number of computed successors:   120755
Max successors for one state:    2
Number of times merged:          16395
Number of times stopped:         17711
Number of times breaked:         145

Total time for CPA algorithm:        14.624s (Max:     1.078s)
  Time for choose from waitlist:      0.219s
  Time for precision adjustment:      4.528s
  Time for transfer relation:         6.871s
  Time for merge operator:            1.084s
  Time for stop operator:             0.331s
  Time for adding to reached set:     0.501s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   145
Avg. length of target path (in blocks):               14676 (count: 145, min: 77, max: 141, avg: 101.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.428s
  Counterexample analysis:                             6.554s (Max:     0.086s, Calls: 145)
    Refinement sat check:                              3.151s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.123s
  ARG update:                                          0.448s

Length of refined path (in blocks):                   13998 (count: 145, min: 63, max: 135, avg: 96.54)
Number of affected states:                             1349 (count: 145, min: 1, max: 100, avg: 9.30)
Length (states) of path with itp 'true':              12504 (count: 145, min: 0, max: 133, avg: 86.23)
Length (states) of path with itp non-trivial itp:      1349 (count: 145, min: 1, max: 100, avg: 9.30)
Length (states) of path with itp 'false':               145 (count: 145, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 145, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:            1191 (count: 145, min: 0, max: 98, avg: 8.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                145
Number of successful refinements:     145
Number of failed refinements:         0
Max. size of reached set before ref.: 7831
Max. size of reached set after ref.:  6837
Avg. size of reached set before ref.: 3497.74
Avg. size of reached set after ref.:  2825.61

Total time for CEGAR algorithm:      23.437s
Time for refinements:                 8.402s
Average time for refinement:          0.057s
Max time for refinement:              0.175s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          932
  Total lines:            1424
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1962
Number of CFA edges:             2224
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             5235
  Number of reached locations:   966 (49%)
    Avg states per location:     5
    Max states per location:     45 (at node N1092)
  Number of reached functions:   82 (72%)
  Number of partitions:          5223
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N934 (before line 1231), Function outgoing called from node N995, stack depth 5 [5ac41c0c], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.144s
  Time for loading CPAs:          0.795s
  Time for loading parser:        0.707s
  Time for CFA construction:      2.463s
    Time for parsing file(s):     0.749s
    Time for AST to CFA:          0.718s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.613s
      Time for var class.:        0.339s
Time for Analysis:               23.438s
CPU time for analysis:           23.440s
Time for analyzing result:        0.004s
Total time for CPAchecker:       27.588s
Total CPU time for CPAchecker:   27.590s
Time for statistics:              0.166s

Time for Garbage Collector:       0.803s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    93 MiB) max;     57MB (    55 MiB) avg;    103MB (    98 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
