scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_prqnrei3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1318: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2713: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19019 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18595 (98%)
  Because of loop head:            291 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         133 (1%)
  Times precision was empty:       7488 (39%)
  Times precision was {false}:     336 (2%)
  Times result was cached:         11043 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      152 (1%)
  Times result was 'false':        309 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         36060
  BDD entailment checks:           1848
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          157
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12472
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 25.56
Number of irrelevant predicates:          9775 (78%)
Number of preds handled by boolean abs:   153 (1%)
  Total number of models for allsat:      153
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  4.063s
  Time for path formula creation:        3.868s
Time for strengthen operator:            0.205s
Time for prec operator:                  3.616s
  Time for abstraction:                  3.068s (Max:     0.029s, Count: 19019)
    Boolean abstraction:                 0.267s
    Solving time:                        0.511s (Max:     0.013s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.035s (Max:     0.010s)
Time for merge operator:                 0.509s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.529s

Number of path formula cache hits:   101181 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.594s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         316 (count: 11940, min: 0, max: 72, avg: 0.03)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.636s
  Time for transition matches:                         0.254s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       134148 (count: 134148, min: 1, max: 1, avg: 1.00) [1 x 134148]

CPA algorithm statistics
------------------------
Number of iterations:            100734
Max size of waitlist:            30
Average size of waitlist:        11
Number of computed successors:   119782
Max successors for one state:    2
Number of times merged:          17106
Number of times stopped:         18408
Number of times breaked:         133

Total time for CPA algorithm:        15.459s (Max:     1.560s)
  Time for choose from waitlist:      0.183s
  Time for precision adjustment:      5.157s
  Time for transfer relation:         7.218s
  Time for merge operator:            1.101s
  Time for stop operator:             0.379s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   133
Avg. length of target path (in blocks):               13708 (count: 133, min: 77, max: 141, avg: 103.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.221s
  Counterexample analysis:                             6.373s (Max:     0.113s, Calls: 133)
    Refinement sat check:                              3.040s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.135s
  ARG update:                                          0.413s

Length of refined path (in blocks):                   12886 (count: 133, min: 63, max: 135, avg: 96.89)
Number of affected states:                             1699 (count: 133, min: 1, max: 100, avg: 12.77)
Length (states) of path with itp 'true':              11054 (count: 133, min: 0, max: 133, avg: 83.11)
Length (states) of path with itp non-trivial itp:      1699 (count: 133, min: 1, max: 100, avg: 12.77)
Length (states) of path with itp 'false':               133 (count: 133, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 133, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:            1549 (count: 133, min: 0, max: 98, avg: 11.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                133
Number of successful refinements:     133
Number of failed refinements:         0
Max. size of reached set before ref.: 6940
Max. size of reached set after ref.:  6569
Avg. size of reached set before ref.: 4069.77
Avg. size of reached set after ref.:  3338.29

Total time for CEGAR algorithm:      24.099s
Time for refinements:                 8.197s
Average time for refinement:          0.061s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          932
  Total lines:            1424
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1962
Number of CFA edges:             2224
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             3779
  Number of reached locations:   966 (49%)
    Avg states per location:     3
    Max states per location:     30 (at node N1092)
  Number of reached functions:   82 (72%)
  Number of partitions:          3769
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N963 (before line 1281), Function incoming__wrappee__Forward called from node N975, stack depth 10 [2269cff0], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming, incoming__wrappee__Forward]])
  Number of target states:       0

Time for analysis setup:          4.164s
  Time for loading CPAs:          0.842s
  Time for loading parser:        0.684s
  Time for CFA construction:      2.437s
    Time for parsing file(s):     0.705s
    Time for AST to CFA:          0.739s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.619s
      Time for var class.:        0.342s
Time for Analysis:               24.099s
CPU time for analysis:           24.100s
Time for analyzing result:        0.003s
Total time for CPAchecker:       28.268s
Total CPU time for CPAchecker:   28.260s
Time for statistics:              0.146s

Time for Garbage Collector:       0.721s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     51MB (    48 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
