scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nbt_k1hn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 80: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 157: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1318: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1536: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2713: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2865: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2976: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            17068 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16865 (99%)
  Because of loop head:            96 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (1%)
  Times precision was empty:       5697 (33%)
  Times precision was {false}:     364 (2%)
  Times result was cached:         10845 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      162 (1%)
  Times result was 'false':        289 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         26387
  BDD entailment checks:           1061
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          166
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         12241
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.27
Number of irrelevant predicates:          8858 (72%)
Number of preds handled by boolean abs:   163 (1%)
  Total number of models for allsat:      163
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.358s
  Time for path formula creation:        3.191s
Time for strengthen operator:            0.266s
Time for prec operator:                  3.347s
  Time for abstraction:                  2.953s (Max:     0.028s, Count: 17068)
    Boolean abstraction:                 0.312s
    Solving time:                        0.415s (Max:     0.013s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.037s (Max:     0.008s)
Time for merge operator:                 0.375s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.448s

Number of path formula cache hits:   88358 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.928s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         333 (count: 9561, min: 0, max: 79, avg: 0.03)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.515s
  Time for transition matches:                         0.199s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       110645 (count: 110645, min: 1, max: 1, avg: 1.00) [1 x 110645]

CPA algorithm statistics
------------------------
Number of iterations:            82063
Max size of waitlist:            30
Average size of waitlist:        15
Number of computed successors:   96421
Max successors for one state:    2
Number of times merged:          12663
Number of times stopped:         13658
Number of times breaked:         107

Total time for CPA algorithm:        12.731s (Max:     0.948s)
  Time for choose from waitlist:      0.106s
  Time for precision adjustment:      4.395s
  Time for transfer relation:         6.039s
  Time for merge operator:            0.728s
  Time for stop operator:             0.276s
  Time for adding to reached set:     0.362s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):               11586 (count: 107, min: 77, max: 185, avg: 108.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.982s
  Counterexample analysis:                             5.235s (Max:     0.125s, Calls: 107)
    Refinement sat check:                              2.458s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.133s
  ARG update:                                          0.301s

Length of refined path (in blocks):                   10790 (count: 107, min: 63, max: 145, avg: 100.84)
Number of affected states:                             2391 (count: 107, min: 1, max: 144, avg: 22.35)
Length (states) of path with itp 'true':               8292 (count: 107, min: 0, max: 135, avg: 77.50)
Length (states) of path with itp non-trivial itp:      2391 (count: 107, min: 1, max: 144, avg: 22.35)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          17 (count: 107, min: 0, max: 1, avg: 0.16)
Equal non-trivial interpolants along paths:            2267 (count: 107, min: 0, max: 142, avg: 21.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 5467
Max. size of reached set after ref.:  4997
Avg. size of reached set before ref.: 2778.51
Avg. size of reached set after ref.:  2042.81

Total time for CEGAR algorithm:      19.602s
Time for refinements:                 6.617s
Average time for refinement:          0.061s
Max time for refinement:              0.167s

Code Coverage
-----------------------------
  Function coverage:      0.719
  Visited lines:          932
  Total lines:            1424
  Line coverage:          0.654
  Visited conditions:     352
  Total conditions:       490
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     1962
Number of CFA edges:             2224
Number of relevant variables:    353
Number of functions:             114
Number of loops:                 4
Size of reached set:             3755
  Number of reached locations:   966 (49%)
    Avg states per location:     3
    Max states per location:     30 (at node N1092)
  Number of reached functions:   82 (72%)
  Number of partitions:          3753
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N963 (before line 1281), Function incoming__wrappee__Forward called from node N975, stack depth 10 [18151228], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming, incoming__wrappee__Forward]])
  Number of target states:       0

Time for analysis setup:          4.002s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.711s
  Time for CFA construction:      2.377s
    Time for parsing file(s):     0.723s
    Time for AST to CFA:          0.683s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.604s
      Time for var class.:        0.324s
Time for Analysis:               19.602s
CPU time for analysis:           19.600s
Time for analyzing result:        0.003s
Total time for CPAchecker:       23.608s
Total CPU time for CPAchecker:   23.600s
Time for statistics:              0.168s

Time for Garbage Collector:       0.566s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     46MB (    44 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
