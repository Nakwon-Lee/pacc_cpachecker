scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product40_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rzbcckc2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 598: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 732: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 761: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 979: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1048: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1265: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1359: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1467: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1574: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1700: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1747: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2066: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2181: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2444: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2817: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2654: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            10698 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10377 (97%)
  Because of loop head:            233 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (1%)
  Times precision was empty:       4834 (45%)
  Times precision was {false}:     244 (2%)
  Times result was cached:         5504 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      116 (1%)
  Times result was 'false':        88 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         21233
  BDD entailment checks:           1017
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          4
Number of abstraction locations:          129
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5864
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 16.29
Number of irrelevant predicates:          4218 (72%)
Number of preds handled by boolean abs:   116 (2%)
  Total number of models for allsat:      118
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.681s
  Time for path formula creation:        3.521s
Time for strengthen operator:            0.180s
Time for prec operator:                  2.928s
  Time for abstraction:                  2.441s (Max:     0.026s, Count: 10698)
    Boolean abstraction:                 0.252s
    Solving time:                        0.502s (Max:     0.015s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.025s (Max:     0.012s)
Time for merge operator:                 0.475s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     0.517s

Number of path formula cache hits:   50772 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.358s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         241 (count: 7776, min: 0, max: 85, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.522s
  Time for transition matches:                         0.171s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                        75998 (count: 75998, min: 1, max: 1, avg: 1.00) [1 x 75998]

CPA algorithm statistics
------------------------
Number of iterations:            57782
Max size of waitlist:            30
Average size of waitlist:        11
Number of computed successors:   68813
Max successors for one state:    2
Number of times merged:          10108
Number of times stopped:         10747
Number of times breaked:         88

Total time for CPA algorithm:        13.150s (Max:     1.522s)
  Time for choose from waitlist:      0.178s
  Time for precision adjustment:      4.058s
  Time for transfer relation:         6.243s
  Time for merge operator:            1.007s
  Time for stop operator:             0.406s
  Time for adding to reached set:     0.330s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                8203 (count: 88, min: 72, max: 147, avg: 93.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.935s
  Counterexample analysis:                             4.291s (Max:     0.085s, Calls: 88)
    Refinement sat check:                              2.068s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.115s
  ARG update:                                          0.294s

Length of refined path (in blocks):                    7699 (count: 88, min: 71, max: 146, avg: 87.49)
Number of affected states:                             1110 (count: 88, min: 1, max: 86, avg: 12.61)
Length (states) of path with itp 'true':               6501 (count: 88, min: 0, max: 144, avg: 73.88)
Length (states) of path with itp non-trivial itp:      1110 (count: 88, min: 1, max: 86, avg: 12.61)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 88, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:            1009 (count: 88, min: 0, max: 84, avg: 11.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 4636
Max. size of reached set after ref.:  4493
Avg. size of reached set before ref.: 3337.52
Avg. size of reached set after ref.:  2709.41

Total time for CEGAR algorithm:      19.082s
Time for refinements:                 5.629s
Average time for refinement:          0.063s
Max time for refinement:              0.119s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          778
  Total lines:            1366
  Line coverage:          0.570
  Visited conditions:     290
  Total conditions:       480
  Condition coverage:     0.604

CPAchecker general statistics
-----------------------------
Number of program locations:     1880
Number of CFA edges:             2124
Number of relevant variables:    306
Number of functions:             108
Number of loops:                 4
Size of reached set:             2705
  Number of reached locations:   796 (42%)
    Avg states per location:     3
    Max states per location:     18 (at node N1600)
  Number of reached functions:   67 (62%)
  Number of partitions:          2697
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N252 (before line 522), Function incoming called from node N186, stack depth 8 [292a6cfd], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          4.068s
  Time for loading CPAs:          0.851s
  Time for loading parser:        0.709s
  Time for CFA construction:      2.310s
    Time for parsing file(s):     0.694s
    Time for AST to CFA:          0.676s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.610s
      Time for var class.:        0.352s
Time for Analysis:               19.082s
CPU time for analysis:           19.070s
Time for analyzing result:        0.005s
Total time for CPAchecker:       23.155s
Total CPU time for CPAchecker:   23.130s
Time for statistics:              0.144s

Time for Garbage Collector:       0.523s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     44MB (    42 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
