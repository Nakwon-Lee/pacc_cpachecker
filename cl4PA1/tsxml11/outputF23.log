scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_84plg87y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            42259 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41157 (97%)
  Because of loop head:            1048 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (0%)
  Times precision was empty:       4396 (10%)
  Times precision was {false}:     152 (0%)
  Times result was cached:         33417 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4294 (10%)
  Times result was 'false':        1476 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         113541
  BDD entailment checks:           9761
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          198
Number of abstraction locations:          133
Max number of predicates per location:    37
Avg number of predicates per location:    15
Total predicates per abstraction:         508983
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 114.48
Number of irrelevant predicates:          160023 (31%)
Number of preds handled by boolean abs:   41056 (8%)
  Total number of models for allsat:      98424
  Max number of models for allsat:        1408
  Avg number of models for allsat:        22.92

Time for post operator:                  2.923s
  Time for path formula creation:        2.728s
Time for strengthen operator:            0.378s
Time for prec operator:                 46.090s
  Time for abstraction:                 45.316s (Max:     0.283s, Count: 42259)
    Boolean abstraction:                20.115s
    Solving time:                        6.544s (Max:     0.015s)
    Model enumeration time:              8.397s
    Time for BDD construction:           4.384s (Max:     0.142s)
Time for merge operator:                 0.540s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):    14.941s

Number of path formula cache hits:   397775 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.281s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               175662
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       59776 (count: 61419, min: 0, max: 2492, avg: 0.97)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.137s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.658s
  Time for transition matches:                         0.312s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       352036 (count: 352036, min: 1, max: 1, avg: 1.00) [1 x 352036]

CPA algorithm statistics
------------------------
Number of iterations:            268170
Max size of waitlist:            23
Average size of waitlist:        10
Number of computed successors:   325383
Max successors for one state:    2
Number of times merged:          51890
Number of times stopped:         55293
Number of times breaked:         54

Total time for CPA algorithm:        60.486s (Max:     3.898s)
  Time for choose from waitlist:      0.234s
  Time for precision adjustment:     48.508s
  Time for transfer relation:         7.572s
  Time for merge operator:            1.474s
  Time for stop operator:             0.651s
  Time for adding to reached set:     0.700s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                5396 (count: 54, min: 71, max: 143, avg: 99.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.922s
  Counterexample analysis:                             4.863s (Max:     0.349s, Calls: 54)
    Refinement sat check:                              1.671s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.213s
  Precision update:                                    0.144s
  ARG update:                                          0.600s

Length of refined path (in blocks):                    4252 (count: 54, min: 39, max: 110, avg: 78.74)
Number of affected states:                             4118 (count: 54, min: 1, max: 108, avg: 76.26)
Length (states) of path with itp 'true':                 80 (count: 54, min: 0, max: 58, avg: 1.48)
Length (states) of path with itp non-trivial itp:      4118 (count: 54, min: 1, max: 108, avg: 76.26)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         680 (count: 54, min: 0, max: 51, avg: 12.59)
Equal non-trivial interpolants along paths:            3384 (count: 54, min: 0, max: 106, avg: 62.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 10556
Max. size of reached set after ref.:  830
Avg. size of reached set before ref.: 4771.11
Avg. size of reached set after ref.:  19.67

Total time for CEGAR algorithm:      66.819s
Time for refinements:                 6.329s
Average time for refinement:          0.117s
Max time for refinement:              0.398s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             12037
  Number of reached locations:   654 (35%)
    Avg states per location:     18
    Max states per location:     100 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          11959
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [7e241cb0], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          3.952s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.717s
  Time for CFA construction:      2.267s
    Time for parsing file(s):     0.641s
    Time for AST to CFA:          0.660s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.611s
      Time for var class.:        0.337s
Time for Analysis:               66.820s
CPU time for analysis:           66.810s
Time for analyzing result:        0.010s
Total time for CPAchecker:       70.786s
Total CPU time for CPAchecker:   70.770s
Time for statistics:              0.273s

Time for Garbage Collector:       2.257s (in 227 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   115 MiB) max;     61MB (    58 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8081MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
