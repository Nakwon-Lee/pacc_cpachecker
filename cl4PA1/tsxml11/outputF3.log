scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_703qgiw8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            128521 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  126425 (98%)
  Because of loop head:            2016 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (0%)
  Times precision was empty:       7111 (6%)
  Times precision was {false}:     141 (0%)
  Times result was cached:         101532 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19737 (15%)
  Times result was 'false':        4566 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         426373
  BDD entailment checks:           39913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          204
Number of abstraction locations:          122
Max number of predicates per location:    36
Avg number of predicates per location:    17
Total predicates per abstraction:         1985916
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 99.91
Number of irrelevant predicates:          464388 (23%)
Number of preds handled by boolean abs:   274883 (14%)
  Total number of models for allsat:      5561528
  Max number of models for allsat:        46080
  Avg number of models for allsat:        281.78

Time for post operator:                  7.513s
  Time for path formula creation:        6.904s
Time for strengthen operator:            1.051s
Time for prec operator:                846.820s
  Time for abstraction:                844.805s (Max:     7.673s, Count: 128521)
    Boolean abstraction:               754.927s
    Solving time:                       40.047s (Max:     0.017s)
    Model enumeration time:            480.192s
    Time for BDD construction:         230.938s (Max:     2.419s)
Time for merge operator:                 1.462s
Time for coverage check:                 0.196s
  Time for BDD entailment checks:        0.140s
Total time for SMT solver (w/o itp):   520.239s

Number of path formula cache hits:   1323444 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.423s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               61505
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      261771 (count: 254958, min: 0, max: 2561, avg: 1.03)
Time for BDD node cleanup:                             0.115s
Time for BDD garbage collection:                       2.351s (in 580 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.810s
  Time for transition matches:                         0.968s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      1226719 (count: 1226719, min: 1, max: 1, avg: 1.00) [1 x 1226719]

CPA algorithm statistics
------------------------
Number of iterations:            933424
Max size of waitlist:            465
Average size of waitlist:        105
Number of computed successors:   1144328
Max successors for one state:    2
Number of times merged:          193230
Number of times stopped:         199935
Number of times breaked:         80

Total time for CPA algorithm:       884.221s (Max:    99.851s)
  Time for choose from waitlist:      0.503s
  Time for precision adjustment:    853.749s
  Time for transfer relation:        19.441s
  Time for merge operator:            4.165s
  Time for stop operator:             1.526s
  Time for adding to reached set:     1.716s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                8337 (count: 80, min: 71, max: 143, avg: 104.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.384s
  Counterexample analysis:                             7.962s (Max:     0.339s, Calls: 80)
    Refinement sat check:                              2.732s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.222s
  Precision update:                                    0.146s
  ARG update:                                          1.860s

Length of refined path (in blocks):                    5590 (count: 80, min: 39, max: 123, avg: 69.88)
Number of affected states:                             4406 (count: 80, min: 1, max: 115, avg: 55.08)
Length (states) of path with itp 'true':               1104 (count: 80, min: 0, max: 63, avg: 13.80)
Length (states) of path with itp non-trivial itp:      4406 (count: 80, min: 1, max: 115, avg: 55.08)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1067 (count: 80, min: 0, max: 53, avg: 13.34)
Equal non-trivial interpolants along paths:            3259 (count: 80, min: 0, max: 72, avg: 40.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 61404
Max. size of reached set after ref.:  46210
Avg. size of reached set before ref.: 15978.68
Avg. size of reached set after ref.:  4828.83

Total time for CEGAR algorithm:     896.131s
Time for refinements:                11.587s
Average time for refinement:          0.144s
Max time for refinement:              0.420s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          662
  Total lines:            1367
  Line coverage:          0.484
  Visited conditions:     234
  Total conditions:       486
  Condition coverage:     0.481

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             47839
  Number of reached locations:   635 (34%)
    Avg states per location:     75
    Max states per location:     385 (at node N1133)
  Number of reached functions:   56 (53%)
  Number of partitions:          47458
    Avg size of partitions:      1
    Max size of partitions:      40 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [5e9e23a4], stack [main, test]])
  Number of target states:       0
  Size of final wait list        339

Time for analysis setup:          4.124s
  Time for loading CPAs:          0.836s
  Time for loading parser:        0.725s
  Time for CFA construction:      2.362s
    Time for parsing file(s):     0.671s
    Time for AST to CFA:          0.692s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.609s
      Time for var class.:        0.351s
Time for Analysis:              896.132s
CPU time for analysis:          895.920s
Total time for CPAchecker:      900.260s
Total CPU time for CPAchecker:  900.030s
Time for statistics:              0.675s

Time for Garbage Collector:      16.833s (in 1508 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                238MB (   227 MiB) max;    139MB (   132 MiB) avg;    242MB (   231 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           257MB (   245 MiB) max;    202MB (   193 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8767MB (  8361 MiB) max;   8424MB (  8034 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
