scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_baqtmjzz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19826 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19259 (97%)
  Because of loop head:            536 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       4359 (22%)
  Times precision was {false}:     137 (1%)
  Times result was cached:         14167 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1163 (6%)
  Times result was 'false':        386 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         50437
  BDD entailment checks:           3405
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          94
Number of abstraction locations:          118
Max number of predicates per location:    18
Avg number of predicates per location:    7
Total predicates per abstraction:         64775
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 49.83
Number of irrelevant predicates:          18310 (28%)
Number of preds handled by boolean abs:   4990 (8%)
  Total number of models for allsat:      2944
  Max number of models for allsat:        50
  Avg number of models for allsat:        2.53

Time for post operator:                  3.016s
  Time for path formula creation:        2.739s
Time for strengthen operator:            0.284s
Time for prec operator:                 10.383s
  Time for abstraction:                  9.708s (Max:     0.024s, Count: 19826)
    Boolean abstraction:                 2.543s
    Solving time:                        1.919s (Max:     0.017s)
    Model enumeration time:              0.347s
    Time for BDD construction:           0.292s (Max:     0.013s)
Time for merge operator:                 0.476s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):     2.266s

Number of path formula cache hits:   177334 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.394s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               15704
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8900 (count: 18251, min: 0, max: 1347, avg: 0.49)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.547s
  Time for transition matches:                         0.270s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       162347 (count: 162347, min: 1, max: 1, avg: 1.00) [1 x 162347]

CPA algorithm statistics
------------------------
Number of iterations:            123362
Max size of waitlist:            53
Average size of waitlist:        16
Number of computed successors:   149221
Max successors for one state:    2
Number of times merged:          23516
Number of times stopped:         25285
Number of times breaked:         31

Total time for CPA algorithm:        21.834s (Max:     1.496s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     12.040s
  Time for transfer relation:         6.310s
  Time for merge operator:            1.177s
  Time for stop operator:             0.536s
  Time for adding to reached set:     0.383s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                2711 (count: 31, min: 71, max: 98, avg: 87.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.518s
  Counterexample analysis:                             2.774s (Max:     0.201s, Calls: 31)
    Refinement sat check:                              1.145s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.113s
  Precision update:                                    0.067s
  ARG update:                                          0.497s

Length of refined path (in blocks):                    2202 (count: 31, min: 39, max: 83, avg: 71.03)
Number of affected states:                             2113 (count: 31, min: 1, max: 82, avg: 68.16)
Length (states) of path with itp 'true':                 58 (count: 31, min: 0, max: 58, avg: 1.87)
Length (states) of path with itp non-trivial itp:      2113 (count: 31, min: 1, max: 82, avg: 68.16)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         347 (count: 31, min: 0, max: 30, avg: 11.19)
Equal non-trivial interpolants along paths:            1735 (count: 31, min: 0, max: 70, avg: 55.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 6918
Max. size of reached set after ref.:  1019
Avg. size of reached set before ref.: 3797.90
Avg. size of reached set after ref.:  35.77

Total time for CEGAR algorithm:      25.598s
Time for refinements:                 3.758s
Average time for refinement:          0.121s
Max time for refinement:              0.249s

Code Coverage
-----------------------------
  Function coverage:      0.562
  Visited lines:          678
  Total lines:            1367
  Line coverage:          0.496
  Visited conditions:     234
  Total conditions:       486
  Condition coverage:     0.481

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             6925
  Number of reached locations:   656 (35%)
    Avg states per location:     10
    Max states per location:     60 (at node N1133)
  Number of reached functions:   59 (56%)
  Number of partitions:          6904
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [a108196], stack [main, test]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.162s
  Time for loading CPAs:          0.788s
  Time for loading parser:        0.673s
  Time for CFA construction:      2.491s
    Time for parsing file(s):     0.758s
    Time for AST to CFA:          0.731s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.615s
      Time for var class.:        0.335s
Time for Analysis:               25.598s
CPU time for analysis:           25.590s
Total time for CPAchecker:       29.766s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.232s

Time for Garbage Collector:       0.722s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     46MB (    44 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
