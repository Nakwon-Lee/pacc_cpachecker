scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_um6_7fw7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15070 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14691 (97%)
  Because of loop head:            349 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       3834 (25%)
  Times precision was {false}:     124 (1%)
  Times result was cached:         9754 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1358 (9%)
  Times result was 'false':        426 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         34979
  BDD entailment checks:           2209
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          160
Number of abstraction locations:          107
Max number of predicates per location:    29
Avg number of predicates per location:    12
Total predicates per abstraction:         99561
Max number of predicates per abstraction: 29
Avg number of predicates per abstraction: 67.18
Number of irrelevant predicates:          36030 (36%)
Number of preds handled by boolean abs:   8465 (9%)
  Total number of models for allsat:      12651
  Max number of models for allsat:        640
  Avg number of models for allsat:        9.32

Time for post operator:                  2.334s
  Time for path formula creation:        2.211s
Time for strengthen operator:            0.198s
Time for prec operator:                 12.803s
  Time for abstraction:                 12.389s (Max:     0.253s, Count: 15070)
    Boolean abstraction:                 4.645s
    Solving time:                        2.220s (Max:     0.015s)
    Model enumeration time:              1.408s
    Time for BDD construction:           0.822s (Max:     0.118s)
Time for merge operator:                 0.377s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     3.628s

Number of path formula cache hits:   125891 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.034s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               165138
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14757 (count: 19831, min: 0, max: 2438, avg: 0.74)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.451s
Automaton transfers with branching:                0
Automaton transfer successors:                       116898 (count: 116898, min: 1, max: 1, avg: 1.00) [1 x 116898]

CPA algorithm statistics
------------------------
Number of iterations:            88746
Max size of waitlist:            18
Average size of waitlist:        9
Number of computed successors:   106884
Max successors for one state:    2
Number of times merged:          16385
Number of times stopped:         17542
Number of times breaked:         30

Total time for CPA algorithm:        21.906s (Max:     2.672s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:     14.107s
  Time for transfer relation:         5.076s
  Time for merge operator:            0.923s
  Time for stop operator:             0.318s
  Time for adding to reached set:     0.284s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                2908 (count: 30, min: 71, max: 125, avg: 96.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.492s
  Counterexample analysis:                             2.811s (Max:     0.325s, Calls: 30)
    Refinement sat check:                              1.155s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.132s
  Precision update:                                    0.071s
  ARG update:                                          0.388s

Length of refined path (in blocks):                    2307 (count: 30, min: 39, max: 91, avg: 76.90)
Number of affected states:                             2219 (count: 30, min: 1, max: 90, avg: 73.97)
Length (states) of path with itp 'true':                 58 (count: 30, min: 0, max: 58, avg: 1.93)
Length (states) of path with itp non-trivial itp:      2219 (count: 30, min: 1, max: 90, avg: 73.97)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         290 (count: 30, min: 0, max: 35, avg: 9.67)
Equal non-trivial interpolants along paths:            1899 (count: 30, min: 0, max: 88, avg: 63.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 4842
Max. size of reached set after ref.:  942
Avg. size of reached set before ref.: 2906.67
Avg. size of reached set after ref.:  34.30

Total time for CEGAR algorithm:      25.702s
Time for refinements:                 3.795s
Average time for refinement:          0.126s
Max time for refinement:              0.368s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          663
  Total lines:            1367
  Line coverage:          0.485
  Visited conditions:     230
  Total conditions:       486
  Condition coverage:     0.473

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             2746
  Number of reached locations:   637 (34%)
    Avg states per location:     4
    Max states per location:     28 (at node N1133)
  Number of reached functions:   56 (53%)
  Number of partitions:          2733
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [1ab2a436], stack [main, test]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.538s
  Time for loading CPAs:          0.950s
  Time for loading parser:        0.811s
  Time for CFA construction:      2.537s
    Time for parsing file(s):     0.773s
    Time for AST to CFA:          0.802s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     0.573s
      Time for var class.:        0.287s
Time for Analysis:               25.702s
CPU time for analysis:           25.690s
Total time for CPAchecker:       30.245s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.155s

Time for Garbage Collector:       0.573s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    65 MiB) max;     44MB (    42 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
