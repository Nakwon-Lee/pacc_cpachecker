scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_euzyqkfl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            95614 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  93586 (98%)
  Because of loop head:            1942 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (0%)
  Times precision was empty:       5614 (6%)
  Times precision was {false}:     141 (0%)
  Times result was cached:         77143 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12716 (13%)
  Times result was 'false':        3474 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         276391
  BDD entailment checks:           36221
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          201
Number of abstraction locations:          133
Max number of predicates per location:    36
Avg number of predicates per location:    17
Total predicates per abstraction:         1402592
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 109.09
Number of irrelevant predicates:          366760 (26%)
Number of preds handled by boolean abs:   175325 (13%)
  Total number of models for allsat:      2293187
  Max number of models for allsat:        19488
  Avg number of models for allsat:        180.34

Time for post operator:                  5.558s
  Time for path formula creation:        5.140s
Time for strengthen operator:            0.828s
Time for prec operator:                428.159s
  Time for abstraction:                426.670s (Max:     3.646s, Count: 95614)
    Boolean abstraction:               361.997s
    Solving time:                       26.715s (Max:     0.031s)
    Model enumeration time:            229.259s
    Time for BDD construction:         103.362s (Max:     1.048s)
Time for merge operator:                 1.031s
Time for coverage check:                 0.215s
  Time for BDD entailment checks:        0.181s
Total time for SMT solver (w/o itp):   255.974s

Number of path formula cache hits:   871801 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.170s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               164339
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      198255 (count: 188536, min: 0, max: 2791, avg: 1.05)
Time for BDD node cleanup:                             0.115s
Time for BDD garbage collection:                       0.793s (in 197 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.404s
  Time for transition matches:                         0.730s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       809879 (count: 809879, min: 1, max: 1, avg: 1.00) [1 x 809879]

CPA algorithm statistics
------------------------
Number of iterations:            617604
Max size of waitlist:            49
Average size of waitlist:        20
Number of computed successors:   750396
Max successors for one state:    2
Number of times merged:          120085
Number of times stopped:         128139
Number of times breaked:         86

Total time for CPA algorithm:       455.410s (Max:    85.693s)
  Time for choose from waitlist:      0.383s
  Time for precision adjustment:    433.000s
  Time for transfer relation:        14.439s
  Time for merge operator:            2.651s
  Time for stop operator:             1.219s
  Time for adding to reached set:     1.327s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                8923 (count: 86, min: 71, max: 143, avg: 103.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.889s
  Counterexample analysis:                             8.122s (Max:     0.371s, Calls: 86)
    Refinement sat check:                              2.698s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.232s
  Precision update:                                    0.164s
  ARG update:                                          1.183s

Length of refined path (in blocks):                    6494 (count: 86, min: 39, max: 109, avg: 75.51)
Number of affected states:                             5709 (count: 86, min: 1, max: 108, avg: 66.38)
Length (states) of path with itp 'true':                699 (count: 86, min: 0, max: 58, avg: 8.13)
Length (states) of path with itp non-trivial itp:      5709 (count: 86, min: 1, max: 108, avg: 66.38)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1101 (count: 86, min: 0, max: 51, avg: 12.80)
Equal non-trivial interpolants along paths:            4522 (count: 86, min: 0, max: 106, avg: 52.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 32501
Max. size of reached set after ref.:  25239
Avg. size of reached set before ref.: 9977.92
Avg. size of reached set after ref.:  3092.73

Total time for CEGAR algorithm:     466.332s
Time for refinements:                10.719s
Average time for refinement:          0.124s
Max time for refinement:              0.411s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             26658
  Number of reached locations:   654 (35%)
    Avg states per location:     40
    Max states per location:     236 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          26510
    Avg size of partitions:      1
    Max size of partitions:      24 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [5221a791], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.296s
  Time for loading CPAs:          0.854s
  Time for loading parser:        0.740s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.784s
    Time for AST to CFA:          0.703s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     0.616s
      Time for var class.:        0.330s
Time for Analysis:              466.334s
CPU time for analysis:          466.210s
Time for analyzing result:        0.021s
Total time for CPAchecker:      470.634s
Total CPU time for CPAchecker:  470.500s
Time for statistics:              0.453s

Time for Garbage Collector:      10.082s (in 1097 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                169MB (   161 MiB) max;     97MB (    93 MiB) avg;    178MB (   169 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           181MB (   172 MiB) max;    143MB (   136 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8492MB (  8098 MiB) max;   8259MB (  7876 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
