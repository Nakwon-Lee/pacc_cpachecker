scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v60443ou/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12711 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12495 (98%)
  Because of loop head:            192 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       2886 (23%)
  Times precision was {false}:     105 (1%)
  Times result was cached:         8141 (64%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1579 (12%)
  Times result was 'false':        341 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         36966
  BDD entailment checks:           1314
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          157
Number of abstraction locations:          104
Max number of predicates per location:    30
Avg number of predicates per location:    12
Total predicates per abstraction:         99839
Max number of predicates per abstraction: 30
Avg number of predicates per abstraction: 59.29
Number of irrelevant predicates:          38294 (38%)
Number of preds handled by boolean abs:   10914 (11%)
  Total number of models for allsat:      21771
  Max number of models for allsat:        768
  Avg number of models for allsat:        13.79

Time for post operator:                  1.986s
  Time for path formula creation:        1.849s
Time for strengthen operator:            0.212s
Time for prec operator:                 13.064s
  Time for abstraction:                 12.703s (Max:     0.184s, Count: 12711)
    Boolean abstraction:                 5.536s
    Solving time:                        2.271s (Max:     0.018s)
    Model enumeration time:              1.944s
    Time for BDD construction:           1.118s (Max:     0.052s)
Time for merge operator:                 0.345s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     4.215s

Number of path formula cache hits:   125451 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.619s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               245083
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17191 (count: 19970, min: 0, max: 2058, avg: 0.86)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.486s
Automaton transfers with branching:                0
Automaton transfer successors:                       117367 (count: 117367, min: 1, max: 1, avg: 1.00) [1 x 117367]

CPA algorithm statistics
------------------------
Number of iterations:            88681
Max size of waitlist:            55
Average size of waitlist:        29
Number of computed successors:   108282
Max successors for one state:    2
Number of times merged:          17826
Number of times stopped:         18570
Number of times breaked:         24

Total time for CPA algorithm:        21.925s (Max:     2.909s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:     14.267s
  Time for transfer relation:         4.765s
  Time for merge operator:            0.904s
  Time for stop operator:             0.435s
  Time for adding to reached set:     0.446s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                2147 (count: 24, min: 71, max: 109, avg: 89.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.276s
  Counterexample analysis:                             2.615s (Max:     0.444s, Calls: 24)
    Refinement sat check:                              0.860s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.115s
  Precision update:                                    0.056s
  ARG update:                                          0.376s

Length of refined path (in blocks):                    1687 (count: 24, min: 39, max: 96, avg: 70.29)
Number of affected states:                             1605 (count: 24, min: 1, max: 95, avg: 66.88)
Length (states) of path with itp 'true':                 58 (count: 24, min: 0, max: 58, avg: 2.42)
Length (states) of path with itp non-trivial itp:      1605 (count: 24, min: 1, max: 95, avg: 66.88)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         321 (count: 24, min: 0, max: 53, avg: 13.38)
Equal non-trivial interpolants along paths:            1260 (count: 24, min: 0, max: 72, avg: 52.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 6161
Max. size of reached set after ref.:  987
Avg. size of reached set before ref.: 3519.92
Avg. size of reached set after ref.:  44.00

Total time for CEGAR algorithm:      25.411s
Time for refinements:                 3.479s
Average time for refinement:          0.144s
Max time for refinement:              0.515s

Code Coverage
-----------------------------
  Function coverage:      0.524
  Visited lines:          641
  Total lines:            1367
  Line coverage:          0.469
  Visited conditions:     228
  Total conditions:       486
  Condition coverage:     0.469

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             5949
  Number of reached locations:   600 (32%)
    Avg states per location:     9
    Max states per location:     60 (at node N1133)
  Number of reached functions:   55 (52%)
  Number of partitions:          5940
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [25fafc70], stack [main, test]])
  Number of target states:       0
  Size of final wait list        46

Time for analysis setup:          4.325s
  Time for loading CPAs:          0.866s
  Time for loading parser:        0.712s
  Time for CFA construction:      2.553s
    Time for parsing file(s):     0.713s
    Time for AST to CFA:          0.837s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.616s
      Time for var class.:        0.344s
Time for Analysis:               25.411s
CPU time for analysis:           25.410s
Total time for CPAchecker:       29.741s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.209s

Time for Garbage Collector:       0.639s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     46MB (    44 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
