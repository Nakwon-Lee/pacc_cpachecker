scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e_doqv0c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            128500 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  126404 (98%)
  Because of loop head:            2016 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (0%)
  Times precision was empty:       7111 (6%)
  Times precision was {false}:     141 (0%)
  Times result was cached:         101514 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19734 (15%)
  Times result was 'false':        4566 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         426279
  BDD entailment checks:           39913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          204
Number of abstraction locations:          122
Max number of predicates per location:    36
Avg number of predicates per location:    17
Total predicates per abstraction:         1985415
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 99.90
Number of irrelevant predicates:          464279 (23%)
Number of preds handled by boolean abs:   274804 (14%)
  Total number of models for allsat:      5503160
  Max number of models for allsat:        24576
  Avg number of models for allsat:        278.87

Time for post operator:                  7.555s
  Time for path formula creation:        6.630s
Time for strengthen operator:            1.037s
Time for prec operator:                847.363s
  Time for abstraction:                845.372s (Max:     4.128s, Count: 128500)
    Boolean abstraction:               754.917s
    Solving time:                       39.455s (Max:     0.017s)
    Model enumeration time:            484.627s
    Time for BDD construction:         226.969s (Max:     1.226s)
Time for merge operator:                 1.294s
Time for coverage check:                 0.223s
  Time for BDD entailment checks:        0.178s
Total time for SMT solver (w/o itp):   524.083s

Number of path formula cache hits:   1323105 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.282s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               107135
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      261647 (count: 254905, min: 0, max: 2751, avg: 1.03)
Time for BDD node cleanup:                             0.120s
Time for BDD garbage collection:                       2.325s (in 569 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.879s
  Time for transition matches:                         0.968s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1226448 (count: 1226448, min: 1, max: 1, avg: 1.00) [1 x 1226448]

CPA algorithm statistics
------------------------
Number of iterations:            933220
Max size of waitlist:            465
Average size of waitlist:        105
Number of computed successors:   1144075
Max successors for one state:    2
Number of times merged:          193183
Number of times stopped:         199888
Number of times breaked:         80

Total time for CPA algorithm:       884.507s (Max:   100.005s)
  Time for choose from waitlist:      0.445s
  Time for precision adjustment:    853.972s
  Time for transfer relation:        20.002s
  Time for merge operator:            3.593s
  Time for stop operator:             1.607s
  Time for adding to reached set:     1.822s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                8337 (count: 80, min: 71, max: 143, avg: 104.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.207s
  Counterexample analysis:                             7.994s (Max:     0.447s, Calls: 80)
    Refinement sat check:                              2.685s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.208s
  Precision update:                                    0.162s
  ARG update:                                          1.688s

Length of refined path (in blocks):                    5590 (count: 80, min: 39, max: 123, avg: 69.88)
Number of affected states:                             4406 (count: 80, min: 1, max: 115, avg: 55.08)
Length (states) of path with itp 'true':               1104 (count: 80, min: 0, max: 63, avg: 13.80)
Length (states) of path with itp non-trivial itp:      4406 (count: 80, min: 1, max: 115, avg: 55.08)
Length (states) of path with itp 'false':                80 (count: 80, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1067 (count: 80, min: 0, max: 53, avg: 13.34)
Equal non-trivial interpolants along paths:            3259 (count: 80, min: 0, max: 72, avg: 40.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 61404
Max. size of reached set after ref.:  46210
Avg. size of reached set before ref.: 15978.68
Avg. size of reached set after ref.:  4828.83

Total time for CEGAR algorithm:     896.220s
Time for refinements:                11.408s
Average time for refinement:          0.142s
Max time for refinement:              0.490s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          662
  Total lines:            1367
  Line coverage:          0.484
  Visited conditions:     234
  Total conditions:       486
  Condition coverage:     0.481

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             47633
  Number of reached locations:   635 (34%)
    Avg states per location:     75
    Max states per location:     383 (at node N1133)
  Number of reached functions:   56 (53%)
  Number of partitions:          47252
    Avg size of partitions:      1
    Max size of partitions:      40 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [6f5388b9], stack [main, test]])
  Number of target states:       0
  Size of final wait list        337

Time for analysis setup:          4.016s
  Time for loading CPAs:          0.849s
  Time for loading parser:        0.708s
  Time for CFA construction:      2.277s
    Time for parsing file(s):     0.639s
    Time for AST to CFA:          0.743s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.533s
      Time for var class.:        0.284s
Time for Analysis:              896.220s
CPU time for analysis:          896.030s
Total time for CPAchecker:      900.241s
Total CPU time for CPAchecker:  900.040s
Time for statistics:              0.664s

Time for Garbage Collector:      16.741s (in 1536 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                234MB (   223 MiB) max;    136MB (   130 MiB) avg;    240MB (   229 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           249MB (   237 MiB) max;    199MB (   190 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8768MB (  8362 MiB) max;   8421MB (  8030 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
