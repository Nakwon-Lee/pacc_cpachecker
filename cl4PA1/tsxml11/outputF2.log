scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hwln7mdo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            55723 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  54353 (98%)
  Because of loop head:            1310 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         60 (0%)
  Times precision was empty:       5686 (10%)
  Times precision was {false}:     169 (0%)
  Times result was cached:         44627 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5241 (9%)
  Times result was 'false':        1915 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         148797
  BDD entailment checks:           13711
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          195
Number of abstraction locations:          133
Max number of predicates per location:    35
Avg number of predicates per location:    15
Total predicates per abstraction:         629073
Max number of predicates per abstraction: 35
Avg number of predicates per abstraction: 116.28
Number of irrelevant predicates:          192815 (31%)
Number of preds handled by boolean abs:   51935 (8%)
  Total number of models for allsat:      100512
  Max number of models for allsat:        2432
  Avg number of models for allsat:        19.18

Time for post operator:                  3.846s
  Time for path formula creation:        3.594s
Time for strengthen operator:            0.497s
Time for prec operator:                 53.261s
  Time for abstraction:                 52.244s (Max:     0.391s, Count: 55723)
    Boolean abstraction:                21.798s
    Solving time:                        8.423s (Max:     0.028s)
    Model enumeration time:              8.300s
    Time for BDD construction:           4.182s (Max:     0.167s)
Time for merge operator:                 0.688s
Time for coverage check:                 0.101s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):    16.723s

Number of path formula cache hits:   512828 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.915s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               171237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       72795 (count: 76976, min: 0, max: 2618, avg: 0.95)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.139s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.897s
  Time for transition matches:                         0.371s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       459456 (count: 459456, min: 1, max: 1, avg: 1.00) [1 x 459456]

CPA algorithm statistics
------------------------
Number of iterations:            350447
Max size of waitlist:            36
Average size of waitlist:        11
Number of computed successors:   424834
Max successors for one state:    2
Number of times merged:          67543
Number of times stopped:         72212
Number of times breaked:         60

Total time for CPA algorithm:        71.473s (Max:     7.297s)
  Time for choose from waitlist:      0.233s
  Time for precision adjustment:     56.278s
  Time for transfer relation:         9.931s
  Time for merge operator:            1.946s
  Time for stop operator:             0.747s
  Time for adding to reached set:     0.807s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                6008 (count: 60, min: 71, max: 143, avg: 100.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.771s
  Counterexample analysis:                             5.541s (Max:     0.334s, Calls: 60)
    Refinement sat check:                              1.869s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.184s
  Precision update:                                    0.112s
  ARG update:                                          0.799s

Length of refined path (in blocks):                    4669 (count: 60, min: 39, max: 110, avg: 77.82)
Number of affected states:                             4489 (count: 60, min: 1, max: 108, avg: 74.82)
Length (states) of path with itp 'true':                120 (count: 60, min: 0, max: 58, avg: 2.00)
Length (states) of path with itp non-trivial itp:      4489 (count: 60, min: 1, max: 108, avg: 74.82)
Length (states) of path with itp 'false':                60 (count: 60, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         764 (count: 60, min: 0, max: 51, avg: 12.73)
Equal non-trivial interpolants along paths:            3665 (count: 60, min: 0, max: 106, avg: 61.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 16250
Max. size of reached set after ref.:  7042
Avg. size of reached set before ref.: 5688.97
Avg. size of reached set after ref.:  137.18

Total time for CEGAR algorithm:      78.661s
Time for refinements:                 7.181s
Average time for refinement:          0.119s
Max time for refinement:              0.371s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             17601
  Number of reached locations:   654 (35%)
    Avg states per location:     26
    Max states per location:     150 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          17504
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [6230d197], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.004s
  Time for loading CPAs:          0.792s
  Time for loading parser:        0.716s
  Time for CFA construction:      2.308s
    Time for parsing file(s):     0.677s
    Time for AST to CFA:          0.703s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.591s
      Time for var class.:        0.328s
Time for Analysis:               78.661s
CPU time for analysis:           78.660s
Time for analyzing result:        0.016s
Total time for CPAchecker:       82.669s
Total CPU time for CPAchecker:   82.660s
Time for statistics:              0.379s

Time for Garbage Collector:       3.112s (in 282 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     67MB (    64 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8093MB (  7718 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
