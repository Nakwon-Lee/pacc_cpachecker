scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o6jughy4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            66919 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  65134 (97%)
  Because of loop head:            1714 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       2367 (4%)
  Times precision was {false}:     200 (0%)
  Times result was cached:         50587 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13765 (21%)
  Times result was 'false':        2035 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         194390
  BDD entailment checks:           26698
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          189
Number of abstraction locations:          133
Max number of predicates per location:    31
Avg number of predicates per location:    15
Total predicates per abstraction:         844357
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 60.46
Number of irrelevant predicates:          245823 (29%)
Number of preds handled by boolean abs:   169717 (20%)
  Total number of models for allsat:      337085
  Max number of models for allsat:        1024
  Avg number of models for allsat:        24.49

Time for post operator:                  9.855s
  Time for path formula creation:        9.343s
Time for strengthen operator:            0.783s
Time for prec operator:                124.735s
  Time for abstraction:                123.481s (Max:     0.506s, Count: 66919)
    Boolean abstraction:                72.427s
    Solving time:                       25.809s (Max:     0.030s)
    Model enumeration time:             29.632s
    Time for BDD construction:          14.271s (Max:     0.105s)
Time for merge operator:                 1.718s
Time for coverage check:                 0.170s
  Time for BDD entailment checks:        0.136s
Total time for SMT solver (w/o itp):    55.441s

Number of path formula cache hits:   363844 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.506s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               133437
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      167368 (count: 168947, min: 0, max: 2766, avg: 0.99)
Time for BDD node cleanup:                             0.071s
Time for BDD garbage collection:                       0.211s (in 23 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.261s
  Time for transition matches:                         0.627s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       566277 (count: 566277, min: 1, max: 1, avg: 1.00) [1 x 566277]

CPA algorithm statistics
------------------------
Number of iterations:            429334
Max size of waitlist:            158
Average size of waitlist:        40
Number of computed successors:   521408
Max successors for one state:    2
Number of times merged:          83846
Number of times stopped:         89789
Number of times breaked:         71

Total time for CPA algorithm:       154.693s (Max:    16.827s)
  Time for choose from waitlist:      0.398s
  Time for precision adjustment:    128.760s
  Time for transfer relation:        17.811s
  Time for merge operator:            3.309s
  Time for stop operator:             1.043s
  Time for adding to reached set:     1.166s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                7895 (count: 71, min: 73, max: 211, avg: 111.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.880s
  Counterexample analysis:                             7.214s (Max:     0.387s, Calls: 71)
    Refinement sat check:                              2.624s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.209s
  Precision update:                                    0.143s
  ARG update:                                          1.142s

Length of refined path (in blocks):                    5444 (count: 71, min: 39, max: 125, avg: 76.68)
Number of affected states:                             4582 (count: 71, min: 1, max: 110, avg: 64.54)
Length (states) of path with itp 'true':                791 (count: 71, min: 0, max: 66, avg: 11.14)
Length (states) of path with itp non-trivial itp:      4582 (count: 71, min: 1, max: 110, avg: 64.54)
Length (states) of path with itp 'false':                71 (count: 71, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         730 (count: 71, min: 0, max: 55, avg: 10.28)
Equal non-trivial interpolants along paths:            3781 (count: 71, min: 0, max: 90, avg: 53.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 36239
Max. size of reached set after ref.:  14852
Avg. size of reached set before ref.: 6678.90
Avg. size of reached set after ref.:  858.03

Total time for CEGAR algorithm:     164.276s
Time for refinements:                 9.522s
Average time for refinement:          0.134s
Max time for refinement:              0.427s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             16303
  Number of reached locations:   654 (35%)
    Avg states per location:     24
    Max states per location:     122 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          16190
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [750410d6], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.378s
  Time for loading CPAs:          0.832s
  Time for loading parser:        0.799s
  Time for CFA construction:      2.540s
    Time for parsing file(s):     0.781s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.633s
      Time for var class.:        0.349s
Time for Analysis:              164.277s
CPU time for analysis:          164.240s
Time for analyzing result:        0.014s
Total time for CPAchecker:      168.660s
Total CPU time for CPAchecker:  168.620s
Time for statistics:              0.334s

Time for Garbage Collector:       6.950s (in 343 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                235MB (   224 MiB) max;    109MB (   104 MiB) avg;    240MB (   229 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           284MB (   271 MiB) max;    176MB (   168 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8430MB (  8040 MiB) max;   8190MB (  7811 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
