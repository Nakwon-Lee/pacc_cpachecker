scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wpwwljrl/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            83027 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  81264 (98%)
  Because of loop head:            1657 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         106 (0%)
  Times precision was empty:       5696 (7%)
  Times precision was {false}:     131 (0%)
  Times result was cached:         66071 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11129 (13%)
  Times result was 'false':        3589 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         208954
  BDD entailment checks:           26646
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          195
Number of abstraction locations:          133
Max number of predicates per location:    34
Avg number of predicates per location:    16
Total predicates per abstraction:         1088915
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 96.71
Number of irrelevant predicates:          248901 (23%)
Number of preds handled by boolean abs:   139369 (13%)
  Total number of models for allsat:      1410000
  Max number of models for allsat:        26904
  Avg number of models for allsat:        126.70

Time for post operator:                  4.879s
  Time for path formula creation:        4.554s
Time for strengthen operator:            0.654s
Time for prec operator:                286.414s
  Time for abstraction:                285.157s (Max:     5.504s, Count: 83027)
    Boolean abstraction:               235.028s
    Solving time:                       19.849s (Max:     0.015s)
    Model enumeration time:            152.676s
    Time for BDD construction:          60.283s (Max:     1.423s)
Time for merge operator:                 0.891s
Time for coverage check:                 0.161s
  Time for BDD entailment checks:        0.147s
Total time for SMT solver (w/o itp):   172.525s

Number of path formula cache hits:   683458 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.890s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               256562
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      160871 (count: 155785, min: 0, max: 3293, avg: 1.03)
Time for BDD node cleanup:                             0.062s
Time for BDD garbage collection:                       0.527s (in 129 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.237s
  Time for transition matches:                         0.680s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       650275 (count: 650275, min: 1, max: 1, avg: 1.00) [1 x 650275]

CPA algorithm statistics
------------------------
Number of iterations:            493836
Max size of waitlist:            39
Average size of waitlist:        17
Number of computed successors:   596585
Max successors for one state:    2
Number of times merged:          91154
Number of times stopped:         97656
Number of times breaked:         106

Total time for CPA algorithm:       308.566s (Max:   154.834s)
  Time for choose from waitlist:      0.296s
  Time for precision adjustment:    290.225s
  Time for transfer relation:        12.150s
  Time for merge operator:            2.045s
  Time for stop operator:             0.946s
  Time for adding to reached set:     0.985s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   106
Avg. length of target path (in blocks):               12553 (count: 106, min: 71, max: 185, avg: 118.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.753s
  Counterexample analysis:                            10.130s (Max:     0.426s, Calls: 106)
    Refinement sat check:                              3.415s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.223s
  Precision update:                                    0.156s
  ARG update:                                          1.047s

Length of refined path (in blocks):                    8321 (count: 106, min: 39, max: 148, avg: 78.50)
Number of affected states:                             5881 (count: 106, min: 1, max: 147, avg: 55.48)
Length (states) of path with itp 'true':               2334 (count: 106, min: 0, max: 63, avg: 22.02)
Length (states) of path with itp non-trivial itp:      5881 (count: 106, min: 1, max: 147, avg: 55.48)
Length (states) of path with itp 'false':               106 (count: 106, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1038 (count: 106, min: 0, max: 56, avg: 9.79)
Equal non-trivial interpolants along paths:            4737 (count: 106, min: 0, max: 145, avg: 44.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                106
Number of successful refinements:     106
Number of failed refinements:         0
Max. size of reached set before ref.: 35403
Max. size of reached set after ref.:  4194
Avg. size of reached set before ref.: 5358.04
Avg. size of reached set after ref.:  791.62

Total time for CEGAR algorithm:     321.050s
Time for refinements:                12.418s
Average time for refinement:          0.117s
Max time for refinement:              0.451s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             11301
  Number of reached locations:   654 (35%)
    Avg states per location:     17
    Max states per location:     76 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          11203
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [2ffead4b], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          3.882s
  Time for loading CPAs:          0.850s
  Time for loading parser:        0.705s
  Time for CFA construction:      2.157s
    Time for parsing file(s):     0.666s
    Time for AST to CFA:          0.645s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.511s
      Time for var class.:        0.273s
Time for Analysis:              321.050s
CPU time for analysis:          320.960s
Time for analyzing result:        0.010s
Total time for CPAchecker:      324.936s
Total CPU time for CPAchecker:  324.840s
Time for statistics:              0.250s

Time for Garbage Collector:       7.224s (in 751 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                183MB (   174 MiB) max;     89MB (    85 MiB) avg;    186MB (   178 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           188MB (   179 MiB) max;    137MB (   130 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8426MB (  8036 MiB) max;   8253MB (  7871 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
