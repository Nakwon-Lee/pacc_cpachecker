scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wkvaxv3j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            140069 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  136545 (97%)
  Because of loop head:            3431 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       8350 (6%)
  Times precision was {false}:     176 (0%)
  Times result was cached:         118542 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13001 (9%)
  Times result was 'false':        4213 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         426369
  BDD entailment checks:           70575
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          205
Number of abstraction locations:          133
Max number of predicates per location:    37
Avg number of predicates per location:    16
Total predicates per abstraction:         1895870
Max number of predicates per abstraction: 37
Avg number of predicates per abstraction: 143.88
Number of irrelevant predicates:          626823 (33%)
Number of preds handled by boolean abs:   160145 (8%)
  Total number of models for allsat:      824248
  Max number of models for allsat:        13442
  Avg number of models for allsat:        63.40

Time for post operator:                  6.854s
  Time for path formula creation:        6.094s
Time for strengthen operator:            1.070s
Time for prec operator:                211.124s
  Time for abstraction:                208.993s (Max:     2.482s, Count: 140069)
    Boolean abstraction:               129.093s
    Solving time:                       23.041s (Max:     0.016s)
    Model enumeration time:             70.712s
    Time for BDD construction:          33.121s (Max:     0.774s)
Time for merge operator:                 1.138s
Time for coverage check:                 0.386s
  Time for BDD entailment checks:        0.338s
Total time for SMT solver (w/o itp):    93.753s

Number of path formula cache hits:   1350096 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.759s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               182571
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      203106 (count: 228788, min: 0, max: 2201, avg: 0.89)
Time for BDD node cleanup:                             0.093s
Time for BDD garbage collection:                       0.364s (in 73 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.914s
  Time for transition matches:                         1.018s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      1187508 (count: 1187508, min: 1, max: 1, avg: 1.00) [1 x 1187508]

CPA algorithm statistics
------------------------
Number of iterations:            907737
Max size of waitlist:            215
Average size of waitlist:        61
Number of computed successors:   1103059
Max successors for one state:    2
Number of times merged:          177897
Number of times stopped:         190649
Number of times breaked:         93

Total time for CPA algorithm:       248.216s (Max:    36.029s)
  Time for choose from waitlist:      0.531s
  Time for precision adjustment:    217.989s
  Time for transfer relation:        18.986s
  Time for merge operator:            3.394s
  Time for stop operator:             1.757s
  Time for adding to reached set:     1.836s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                9408 (count: 93, min: 71, max: 143, avg: 101.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.298s
  Counterexample analysis:                             7.937s (Max:     0.267s, Calls: 93)
    Refinement sat check:                              2.703s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.222s
  Precision update:                                    0.148s
  ARG update:                                          1.846s

Length of refined path (in blocks):                    6434 (count: 93, min: 39, max: 110, avg: 69.18)
Number of affected states:                             5320 (count: 93, min: 1, max: 108, avg: 57.20)
Length (states) of path with itp 'true':               1021 (count: 93, min: 0, max: 58, avg: 10.98)
Length (states) of path with itp non-trivial itp:      5320 (count: 93, min: 1, max: 108, avg: 57.20)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1068 (count: 93, min: 0, max: 54, avg: 11.48)
Equal non-trivial interpolants along paths:            4159 (count: 93, min: 0, max: 106, avg: 44.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 48207
Max. size of reached set after ref.:  18327
Avg. size of reached set before ref.: 11847.59
Avg. size of reached set after ref.:  2422.00

Total time for CEGAR algorithm:     259.717s
Time for refinements:                11.336s
Average time for refinement:          0.121s
Max time for refinement:              0.340s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             31618
  Number of reached locations:   654 (35%)
    Avg states per location:     48
    Max states per location:     280 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          31431
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [fc883e9], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.419s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.671s
  Time for CFA construction:      2.560s
    Time for parsing file(s):     0.755s
    Time for AST to CFA:          0.800s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.628s
      Time for var class.:        0.337s
Time for Analysis:              259.717s
CPU time for analysis:          259.660s
Time for analyzing result:        0.032s
Total time for CPAchecker:      264.140s
Total CPU time for CPAchecker:  264.070s
Time for statistics:              0.591s

Time for Garbage Collector:      11.015s (in 830 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                177MB (   169 MiB) max;     96MB (    91 MiB) avg;    184MB (   175 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           184MB (   175 MiB) max;    147MB (   140 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8429MB (  8038 MiB) max;   8193MB (  7813 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
