scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bp2lswm1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20965 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20374 (97%)
  Because of loop head:            559 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       4466 (21%)
  Times precision was {false}:     137 (1%)
  Times result was cached:         15117 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1245 (6%)
  Times result was 'false':        422 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         53284
  BDD entailment checks:           3608
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          94
Number of abstraction locations:          118
Max number of predicates per location:    18
Avg number of predicates per location:    7
Total predicates per abstraction:         71461
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 51.71
Number of irrelevant predicates:          19808 (28%)
Number of preds handled by boolean abs:   5694 (8%)
  Total number of models for allsat:      3401
  Max number of models for allsat:        50
  Avg number of models for allsat:        2.73

Time for post operator:                  2.936s
  Time for path formula creation:        2.761s
Time for strengthen operator:            0.357s
Time for prec operator:                 10.566s
  Time for abstraction:                  9.965s (Max:     0.041s, Count: 20965)
    Boolean abstraction:                 2.559s
    Solving time:                        1.911s (Max:     0.016s)
    Model enumeration time:              0.377s
    Time for BDD construction:           0.275s (Max:     0.013s)
Time for merge operator:                 0.463s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     2.288s

Number of path formula cache hits:   188683 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.453s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               18538
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10418 (count: 19475, min: 0, max: 1412, avg: 0.53)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.646s
  Time for transition matches:                         0.269s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       171564 (count: 171564, min: 1, max: 1, avg: 1.00) [1 x 171564]

CPA algorithm statistics
------------------------
Number of iterations:            130366
Max size of waitlist:            56
Average size of waitlist:        17
Number of computed successors:   157691
Max successors for one state:    2
Number of times merged:          24838
Number of times stopped:         26703
Number of times breaked:         32

Total time for CPA algorithm:        22.152s (Max:     1.562s)
  Time for choose from waitlist:      0.254s
  Time for precision adjustment:     12.317s
  Time for transfer relation:         6.367s
  Time for merge operator:            1.154s
  Time for stop operator:             0.484s
  Time for adding to reached set:     0.432s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                2810 (count: 32, min: 71, max: 99, avg: 87.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.799s
  Counterexample analysis:                             2.976s (Max:     0.203s, Calls: 32)
    Refinement sat check:                              1.163s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.164s
  Precision update:                                    0.042s
  ARG update:                                          0.522s

Length of refined path (in blocks):                    2288 (count: 32, min: 39, max: 86, avg: 71.50)
Number of affected states:                             2198 (count: 32, min: 1, max: 85, avg: 68.69)
Length (states) of path with itp 'true':                 58 (count: 32, min: 0, max: 58, avg: 1.81)
Length (states) of path with itp non-trivial itp:      2198 (count: 32, min: 1, max: 85, avg: 68.69)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         377 (count: 32, min: 0, max: 30, avg: 11.78)
Equal non-trivial interpolants along paths:            1789 (count: 32, min: 0, max: 70, avg: 55.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 7276
Max. size of reached set after ref.:  1019
Avg. size of reached set before ref.: 3906.59
Avg. size of reached set after ref.:  34.75

Total time for CEGAR algorithm:      26.185s
Time for refinements:                 4.023s
Average time for refinement:          0.125s
Max time for refinement:              0.224s

Code Coverage
-----------------------------
  Function coverage:      0.562
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     230
  Total conditions:       486
  Condition coverage:     0.473

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             6668
  Number of reached locations:   646 (34%)
    Avg states per location:     10
    Max states per location:     60 (at node N1133)
  Number of reached functions:   59 (56%)
  Number of partitions:          6650
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [10f953ba], stack [main, test]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.067s
  Time for loading CPAs:          0.844s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.350s
    Time for parsing file(s):     0.655s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.589s
      Time for var class.:        0.314s
Time for Analysis:               26.185s
CPU time for analysis:           26.170s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.209s

Time for Garbage Collector:       0.750s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     47MB (    44 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
