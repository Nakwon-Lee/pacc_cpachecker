scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bc7nx7qt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44409 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43387 (98%)
  Because of loop head:            935 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       1690 (4%)
  Times precision was {false}:     97 (0%)
  Times result was cached:         37334 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5288 (12%)
  Times result was 'false':        3682 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         72368
  BDD entailment checks:           6702
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          220
Number of abstraction locations:          133
Max number of predicates per location:    50
Avg number of predicates per location:    18
Total predicates per abstraction:         627437
Max number of predicates per abstraction: 50
Avg number of predicates per abstraction: 116.52
Number of irrelevant predicates:          125126 (20%)
Number of preds handled by boolean abs:   75982 (12%)
  Total number of models for allsat:      2192985
  Max number of models for allsat:        169344
  Avg number of models for allsat:        414.71

Time for post operator:                  3.256s
  Time for path formula creation:        3.088s
Time for strengthen operator:            0.324s
Time for prec operator:                871.918s
  Time for abstraction:                871.257s (Max:   294.098s, Count: 44409)
    Boolean abstraction:               841.322s
    Solving time:                       11.120s (Max:     0.041s)
    Model enumeration time:            659.704s
    Time for BDD construction:         169.393s (Max:    12.416s)
Time for merge operator:                 0.526s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.080s
Total time for SMT solver (w/o itp):   670.825s

Number of path formula cache hits:   293032 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.776s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               261352
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      158426 (count: 100818, min: 0, max: 3077, avg: 1.57)
Time for BDD node cleanup:                             0.095s
Time for BDD garbage collection:                       2.086s (in 592 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.570s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       287546 (count: 287546, min: 1, max: 1, avg: 1.00) [1 x 287546]

CPA algorithm statistics
------------------------
Number of iterations:            213871
Max size of waitlist:            69
Average size of waitlist:        36
Number of computed successors:   254634
Max successors for one state:    2
Number of times merged:          32833
Number of times stopped:         34748
Number of times breaked:         87

Total time for CPA algorithm:       884.363s (Max:   302.504s)
  Time for choose from waitlist:      0.184s
  Time for precision adjustment:    873.788s
  Time for transfer relation:         6.986s
  Time for merge operator:            1.233s
  Time for stop operator:             0.531s
  Time for adding to reached set:     0.462s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):               11576 (count: 87, min: 73, max: 178, avg: 133.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.746s
  Counterexample analysis:                            10.672s (Max:     0.466s, Calls: 87)
    Refinement sat check:                              3.662s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.187s
  Precision update:                                    0.176s
  ARG update:                                          0.510s

Length of refined path (in blocks):                    8483 (count: 87, min: 39, max: 164, avg: 97.51)
Number of affected states:                             6219 (count: 87, min: 1, max: 156, avg: 71.48)
Length (states) of path with itp 'true':               2177 (count: 87, min: 0, max: 98, avg: 25.02)
Length (states) of path with itp non-trivial itp:      6219 (count: 87, min: 1, max: 156, avg: 71.48)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         813 (count: 87, min: 0, max: 58, avg: 9.34)
Equal non-trivial interpolants along paths:            5319 (count: 87, min: 0, max: 133, avg: 61.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 8151
Max. size of reached set after ref.:  4464
Avg. size of reached set before ref.: 3295.05
Avg. size of reached set after ref.:  900.48

Total time for CEGAR algorithm:     896.708s
Time for refinements:                12.296s
Average time for refinement:          0.141s
Max time for refinement:              0.495s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             7877
  Number of reached locations:   654 (35%)
    Avg states per location:     12
    Max states per location:     65 (at node N539)
  Number of reached functions:   57 (54%)
  Number of partitions:          7845
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [721c1416], stack [main, test]])
  Number of target states:       0
  Size of final wait list        51

Time for analysis setup:          4.084s
  Time for loading CPAs:          0.822s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.341s
    Time for parsing file(s):     0.721s
    Time for AST to CFA:          0.677s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.567s
      Time for var class.:        0.322s
Time for Analysis:              896.708s
CPU time for analysis:          896.590s
Total time for CPAchecker:      900.798s
Total CPU time for CPAchecker:  900.670s
Time for statistics:              0.224s

Time for Garbage Collector:       5.565s (in 1194 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     83MB (    79 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8375MB (  7987 MiB) max;   8204MB (  7824 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
