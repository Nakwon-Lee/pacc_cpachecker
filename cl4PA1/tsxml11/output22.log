scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9pw0nc5m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17240 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16650 (97%)
  Because of loop head:            550 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       2034 (12%)
  Times precision was {false}:     202 (1%)
  Times result was cached:         13728 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1276 (7%)
  Times result was 'false':        310 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         41136
  BDD entailment checks:           2520
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          84
Number of abstraction locations:          132
Max number of predicates per location:    18
Avg number of predicates per location:    6
Total predicates per abstraction:         46280
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 31.31
Number of irrelevant predicates:          9253 (20%)
Number of preds handled by boolean abs:   6502 (14%)
  Total number of models for allsat:      3822
  Max number of models for allsat:        52
  Avg number of models for allsat:        3.00

Time for post operator:                  3.238s
  Time for path formula creation:        3.089s
Time for strengthen operator:            0.312s
Time for prec operator:                  9.787s
  Time for abstraction:                  9.196s (Max:     0.035s, Count: 17240)
    Boolean abstraction:                 2.805s
    Solving time:                        2.195s (Max:     0.016s)
    Model enumeration time:              0.456s
    Time for BDD construction:           0.226s (Max:     0.013s)
Time for merge operator:                 0.497s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     2.651s

Number of path formula cache hits:   136002 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.847s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               30836
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13245 (count: 17665, min: 0, max: 1648, avg: 0.75)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.498s
Automaton transfers with branching:                0
Automaton transfer successors:                       137301 (count: 137301, min: 1, max: 1, avg: 1.00) [1 x 137301]

CPA algorithm statistics
------------------------
Number of iterations:            104106
Max size of waitlist:            42
Average size of waitlist:        9
Number of computed successors:   125461
Max successors for one state:    2
Number of times merged:          19308
Number of times stopped:         20951
Number of times breaked:         40

Total time for CPA algorithm:        21.249s (Max:     1.527s)
  Time for choose from waitlist:      0.191s
  Time for precision adjustment:     11.195s
  Time for transfer relation:         6.716s
  Time for merge operator:            1.131s
  Time for stop operator:             0.455s
  Time for adding to reached set:     0.462s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                3986 (count: 40, min: 73, max: 127, avg: 99.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.062s
  Counterexample analysis:                             3.245s (Max:     0.150s, Calls: 40)
    Refinement sat check:                              1.278s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.150s
  Precision update:                                    0.091s
  ARG update:                                          0.472s

Length of refined path (in blocks):                    3194 (count: 40, min: 60, max: 93, avg: 79.85)
Number of affected states:                             3096 (count: 40, min: 1, max: 92, avg: 77.40)
Length (states) of path with itp 'true':                 58 (count: 40, min: 0, max: 58, avg: 1.45)
Length (states) of path with itp non-trivial itp:      3096 (count: 40, min: 1, max: 92, avg: 77.40)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         391 (count: 40, min: 0, max: 33, avg: 9.77)
Equal non-trivial interpolants along paths:            2665 (count: 40, min: 0, max: 90, avg: 66.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 6792
Max. size of reached set after ref.:  1019
Avg. size of reached set before ref.: 2618.48
Avg. size of reached set after ref.:  28.40

Total time for CEGAR algorithm:      25.663s
Time for refinements:                 4.410s
Average time for refinement:          0.110s
Max time for refinement:              0.179s

Code Coverage
-----------------------------
  Function coverage:      0.267
  Visited lines:          310
  Total lines:            1367
  Line coverage:          0.227
  Visited conditions:     60
  Total conditions:       486
  Condition coverage:     0.123

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             598
  Number of reached locations:   201 (11%)
    Avg states per location:     2
    Max states per location:     15 (at node N1134)
  Number of reached functions:   28 (27%)
  Number of partitions:          593
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [2ecb5ee5], stack [main, test]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          4.079s
  Time for loading CPAs:          0.788s
  Time for loading parser:        0.685s
  Time for CFA construction:      2.421s
    Time for parsing file(s):     0.663s
    Time for AST to CFA:          0.838s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.554s
      Time for var class.:        0.298s
Time for Analysis:               25.663s
CPU time for analysis:           25.670s
Total time for CPAchecker:       29.747s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.129s

Time for Garbage Collector:       0.631s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     47MB (    44 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
