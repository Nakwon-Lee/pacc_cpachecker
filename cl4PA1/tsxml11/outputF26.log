scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m435ql6r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            122020 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  120248 (99%)
  Because of loop head:            1702 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (0%)
  Times precision was empty:       8146 (7%)
  Times precision was {false}:     149 (0%)
  Times result was cached:         88951 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24774 (20%)
  Times result was 'false':        7983 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         334547
  BDD entailment checks:           34605
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          219
Number of abstraction locations:          133
Max number of predicates per location:    45
Avg number of predicates per location:    19
Total predicates per abstraction:         2366601
Max number of predicates per abstraction: 45
Avg number of predicates per abstraction: 94.96
Number of irrelevant predicates:          644152 (27%)
Number of preds handled by boolean abs:   421766 (18%)
  Total number of models for allsat:      3858888
  Max number of models for allsat:        41472
  Avg number of models for allsat:        155.76

Time for post operator:                 10.305s
  Time for path formula creation:        9.786s
Time for strengthen operator:            0.969s
Time for prec operator:                843.337s
  Time for abstraction:                841.421s (Max:    15.803s, Count: 122020)
    Boolean abstraction:               730.496s
    Solving time:                       74.118s (Max:     0.041s)
    Model enumeration time:            389.229s
    Time for BDD construction:         261.099s (Max:     3.429s)
Time for merge operator:                 1.968s
Time for coverage check:                 0.274s
  Time for BDD entailment checks:        0.226s
Total time for SMT solver (w/o itp):   463.347s

Number of path formula cache hits:   891939 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.387s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               113128
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      532405 (count: 386940, min: 0, max: 6027, avg: 1.38)
Time for BDD node cleanup:                             0.228s
Time for BDD garbage collection:                       7.341s (in 1400 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.756s
  Time for transition matches:                         0.926s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1034071 (count: 1034071, min: 1, max: 1, avg: 1.00) [1 x 1034071]

CPA algorithm statistics
------------------------
Number of iterations:            781773
Max size of waitlist:            426
Average size of waitlist:        132
Number of computed successors:   950792
Max successors for one state:    2
Number of times merged:          149971
Number of times stopped:         154378
Number of times breaked:         70

Total time for CPA algorithm:       881.192s (Max:   148.017s)
  Time for choose from waitlist:      0.538s
  Time for precision adjustment:    849.217s
  Time for transfer relation:        21.269s
  Time for merge operator:            4.016s
  Time for stop operator:             1.512s
  Time for adding to reached set:     1.740s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):               11911 (count: 70, min: 71, max: 353, avg: 170.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.251s
  Counterexample analysis:                            11.237s (Max:     0.647s, Calls: 70)
    Refinement sat check:                              3.875s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.207s
  Precision update:                                    0.178s
  ARG update:                                          1.447s

Length of refined path (in blocks):                    7779 (count: 70, min: 39, max: 175, avg: 111.13)
Number of affected states:                             5915 (count: 70, min: 1, max: 170, avg: 84.50)
Length (states) of path with itp 'true':               1794 (count: 70, min: 0, max: 103, avg: 25.63)
Length (states) of path with itp non-trivial itp:      5915 (count: 70, min: 1, max: 170, avg: 84.50)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         682 (count: 70, min: 0, max: 57, avg: 9.74)
Equal non-trivial interpolants along paths:            5163 (count: 70, min: 0, max: 168, avg: 73.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 44553
Max. size of reached set after ref.:  16085
Avg. size of reached set before ref.: 13056.33
Avg. size of reached set after ref.:  2724.56

Total time for CEGAR algorithm:     895.574s
Time for refinements:                14.248s
Average time for refinement:          0.203s
Max time for refinement:              0.712s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             65207
  Number of reached locations:   654 (35%)
    Avg states per location:     99
    Max states per location:     574 (at node N539)
  Number of reached functions:   57 (54%)
  Number of partitions:          64751
    Avg size of partitions:      1
    Max size of partitions:      92 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [f150bf2], stack [main, test]])
  Number of target states:       0
  Size of final wait list        111

Time for analysis setup:          4.700s
  Time for loading CPAs:          1.049s
  Time for loading parser:        0.727s
  Time for CFA construction:      2.678s
    Time for parsing file(s):     0.789s
    Time for AST to CFA:          0.795s
    Time for CFA sanity check:    0.276s
    Time for post-processing:     0.710s
      Time for var class.:        0.354s
Time for Analysis:              895.574s
CPU time for analysis:          895.400s
Total time for CPAchecker:      900.279s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.876s

Time for Garbage Collector:      18.697s (in 1174 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                311MB (   296 MiB) max;    162MB (   154 MiB) avg;    332MB (   317 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           389MB (   371 MiB) max;    241MB (   230 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  11163MB ( 10646 MiB) max;   9209MB (  8783 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
