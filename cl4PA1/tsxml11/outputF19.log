scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product13_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tmay3jt3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 688: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 738: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 882: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 911: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1006: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1462: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2250: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2308: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2345: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2384: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2497: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33181 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32127 (97%)
  Because of loop head:            991 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       2339 (7%)
  Times precision was {false}:     180 (1%)
  Times result was cached:         24876 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5786 (17%)
  Times result was 'false':        1031 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         85168
  BDD entailment checks:           8484
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          202
Number of abstraction locations:          133
Max number of predicates per location:    34
Avg number of predicates per location:    16
Total predicates per abstraction:         336284
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 56.37
Number of irrelevant predicates:          85104 (25%)
Number of preds handled by boolean abs:   64909 (19%)
  Total number of models for allsat:      241873
  Max number of models for allsat:        17480
  Avg number of models for allsat:        41.80

Time for post operator:                  5.172s
  Time for path formula creation:        4.871s
Time for strengthen operator:            0.400s
Time for prec operator:                 66.409s
  Time for abstraction:                 65.570s (Max:     3.219s, Count: 33181)
    Boolean abstraction:                44.399s
    Solving time:                       10.254s (Max:     0.017s)
    Model enumeration time:             23.403s
    Time for BDD construction:           9.761s (Max:     0.824s)
Time for merge operator:                 0.731s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):    33.657s

Number of path formula cache hits:   227271 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.491s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               75376
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       89206 (count: 77742, min: 0, max: 2956, avg: 1.15)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.175s (in 17 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.698s
  Time for transition matches:                         0.359s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       267040 (count: 267040, min: 1, max: 1, avg: 1.00) [1 x 267040]

CPA algorithm statistics
------------------------
Number of iterations:            203064
Max size of waitlist:            26
Average size of waitlist:        12
Number of computed successors:   245289
Max successors for one state:    2
Number of times merged:          38342
Number of times stopped:         40783
Number of times breaked:         63

Total time for CPA algorithm:        83.002s (Max:    17.598s)
  Time for choose from waitlist:      0.211s
  Time for precision adjustment:     68.637s
  Time for transfer relation:         9.742s
  Time for merge operator:            1.644s
  Time for stop operator:             0.537s
  Time for adding to reached set:     0.701s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                6503 (count: 63, min: 73, max: 160, avg: 103.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.806s
  Counterexample analysis:                             6.763s (Max:     0.337s, Calls: 63)
    Refinement sat check:                              2.107s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.201s
  Precision update:                                    0.157s
  ARG update:                                          0.542s

Length of refined path (in blocks):                    5146 (count: 63, min: 39, max: 134, avg: 81.68)
Number of affected states:                             5011 (count: 63, min: 1, max: 126, avg: 79.54)
Length (states) of path with itp 'true':                 72 (count: 63, min: 0, max: 58, avg: 1.14)
Length (states) of path with itp non-trivial itp:      5011 (count: 63, min: 1, max: 126, avg: 79.54)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         921 (count: 63, min: 0, max: 51, avg: 14.62)
Equal non-trivial interpolants along paths:            4027 (count: 63, min: 0, max: 123, avg: 63.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 9884
Max. size of reached set after ref.:  1009
Avg. size of reached set before ref.: 2981.65
Avg. size of reached set after ref.:  19.54

Total time for CEGAR algorithm:      91.232s
Time for refinements:                 8.224s
Average time for refinement:          0.130s
Max time for refinement:              0.361s

Code Coverage
-----------------------------
  Function coverage:      0.543
  Visited lines:          673
  Total lines:            1367
  Line coverage:          0.492
  Visited conditions:     236
  Total conditions:       486
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1875
Number of CFA edges:             2115
Number of relevant variables:    325
Number of functions:             105
Number of loops:                 4
Size of reached set:             16863
  Number of reached locations:   654 (35%)
    Avg states per location:     25
    Max states per location:     140 (at node N1133)
  Number of reached functions:   57 (54%)
  Number of partitions:          16763
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N1980 (before lines 2667-2831), Function test called from node N1544, stack depth 2 [21f8546a], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          3.967s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.649s
  Time for CFA construction:      2.254s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.691s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.536s
      Time for var class.:        0.293s
Time for Analysis:               91.232s
CPU time for analysis:           91.220s
Time for analyzing result:        0.014s
Total time for CPAchecker:       95.206s
Total CPU time for CPAchecker:   95.180s
Time for statistics:              0.341s

Time for Garbage Collector:       2.330s (in 212 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     68MB (    65 MiB) avg;    132MB (   125 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           141MB (   134 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8110MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
