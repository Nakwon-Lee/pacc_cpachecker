scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product36_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hcx182br/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 599: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1418: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1490: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1996: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2044 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1996 (98%)
  Because of loop head:            36 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       862 (42%)
  Times precision was {false}:     161 (8%)
  Times result was cached:         924 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      97 (5%)
  Times result was 'false':        12 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3560
  BDD entailment checks:           110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          4
Number of abstraction locations:          86
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1182
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.58
Number of irrelevant predicates:          749 (63%)
Number of preds handled by boolean abs:   97 (8%)
  Total number of models for allsat:      99
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.342s
  Time for path formula creation:        1.306s
Time for strengthen operator:            0.059s
Time for prec operator:                  1.358s
  Time for abstraction:                  1.191s (Max:     0.021s, Count: 2044)
    Boolean abstraction:                 0.202s
    Solving time:                        0.279s (Max:     0.014s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.021s (Max:     0.006s)
Time for merge operator:                 0.201s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.285s

Number of path formula cache hits:   6493 (42%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.257s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         192 (count: 2368, min: 0, max: 80, avg: 0.08)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.247s
Automaton transfers with branching:                0
Automaton transfer successors:                        14070 (count: 14070, min: 1, max: 1, avg: 1.00) [1 x 14070]

CPA algorithm statistics
------------------------
Number of iterations:            10312
Max size of waitlist:            18
Average size of waitlist:        7
Number of computed successors:   12185
Max successors for one state:    2
Number of times merged:          1725
Number of times stopped:         1792
Number of times breaked:         12

Total time for CPA algorithm:         5.030s (Max:     1.296s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:      1.774s
  Time for transfer relation:         2.408s
  Time for merge operator:            0.346s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                1189 (count: 12, min: 60, max: 135, avg: 99.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.828s
  Counterexample analysis:                             0.659s (Max:     0.084s, Calls: 12)
    Refinement sat check:                              0.299s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.016s
  ARG update:                                          0.081s

Length of refined path (in blocks):                    1017 (count: 12, min: 59, max: 134, avg: 84.75)
Number of affected states:                              357 (count: 12, min: 1, max: 93, avg: 29.75)
Length (states) of path with itp 'true':                648 (count: 12, min: 0, max: 132, avg: 54.00)
Length (states) of path with itp non-trivial itp:       357 (count: 12, min: 1, max: 93, avg: 29.75)
Length (states) of path with itp 'false':                12 (count: 12, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           5 (count: 12, min: 0, max: 1, avg: 0.42)
Equal non-trivial interpolants along paths:             340 (count: 12, min: 0, max: 91, avg: 28.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 2216
Max. size of reached set after ref.:  2202
Avg. size of reached set before ref.: 1582.83
Avg. size of reached set after ref.:  910.08

Total time for CEGAR algorithm:       6.018s
Time for refinements:                 0.978s
Average time for refinement:          0.081s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.511
  Visited lines:          595
  Total lines:            1294
  Line coverage:          0.460
  Visited conditions:     198
  Total conditions:       476
  Condition coverage:     0.416

CPAchecker general statistics
-----------------------------
Number of program locations:     1765
Number of CFA edges:             1983
Number of relevant variables:    300
Number of functions:             94
Number of loops:                 4
Size of reached set:             2309
  Number of reached locations:   554 (31%)
    Avg states per location:     4
    Max states per location:     23 (at node N1517)
  Number of reached functions:   48 (51%)
  Number of partitions:          2289
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1347 (before line 1755), Function incoming called from node N1281, stack depth 8 [379f9555], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          3.747s
  Time for loading CPAs:          0.724s
  Time for loading parser:        0.702s
  Time for CFA construction:      2.144s
    Time for parsing file(s):     0.634s
    Time for AST to CFA:          0.652s
    Time for CFA sanity check:    0.179s
    Time for post-processing:     0.524s
      Time for var class.:        0.276s
Time for Analysis:                6.018s
CPU time for analysis:            6.010s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.770s
Total CPU time for CPAchecker:    9.750s
Time for statistics:              0.143s

Time for Garbage Collector:       0.147s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     36MB (    34 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8053MB (  7680 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
