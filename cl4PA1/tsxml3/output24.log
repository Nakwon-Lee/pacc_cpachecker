scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hvb4hbxl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21970 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21630 (98%)
  Because of loop head:            293 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       1092 (5%)
  Times precision was {false}:     217 (1%)
  Times result was cached:         18658 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2003 (9%)
  Times result was 'false':        1140 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         34282
  BDD entailment checks:           2188
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          33
Number of abstraction locations:          145
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         93038
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 41.91
Number of irrelevant predicates:          18420 (20%)
Number of preds handled by boolean abs:   7287 (8%)
  Total number of models for allsat:      4144
  Max number of models for allsat:        21
  Avg number of models for allsat:        2.07

Time for post operator:                  2.895s
  Time for path formula creation:        2.783s
Time for strengthen operator:            0.237s
Time for prec operator:                 12.203s
  Time for abstraction:                 11.784s (Max:     0.026s, Count: 21970)
    Boolean abstraction:                 3.153s
    Solving time:                        2.489s (Max:     0.015s)
    Model enumeration time:              0.350s
    Time for BDD construction:           0.270s (Max:     0.013s)
Time for merge operator:                 0.461s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     2.839s

Number of path formula cache hits:   135427 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.565s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3712
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8236 (count: 18182, min: 0, max: 917, avg: 0.45)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.469s
Automaton transfers with branching:                0
Automaton transfer successors:                       139548 (count: 139548, min: 1, max: 1, avg: 1.00) [1 x 139548]

CPA algorithm statistics
------------------------
Number of iterations:            103904
Max size of waitlist:            30
Average size of waitlist:        14
Number of computed successors:   122912
Max successors for one state:    2
Number of times merged:          16047
Number of times stopped:         17078
Number of times breaked:         47

Total time for CPA algorithm:        21.901s (Max:     1.033s)
  Time for choose from waitlist:      0.141s
  Time for precision adjustment:     13.591s
  Time for transfer relation:         5.786s
  Time for merge operator:            0.866s
  Time for stop operator:             0.299s
  Time for adding to reached set:     0.322s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                4788 (count: 47, min: 63, max: 144, avg: 101.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.979s
  Counterexample analysis:                             3.314s (Max:     0.131s, Calls: 47)
    Refinement sat check:                              1.452s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.124s
  ARG update:                                          0.279s

Length of refined path (in blocks):                    3990 (count: 47, min: 55, max: 127, avg: 84.89)
Number of affected states:                             3720 (count: 47, min: 1, max: 119, avg: 79.15)
Length (states) of path with itp 'true':                223 (count: 47, min: 0, max: 65, avg: 4.74)
Length (states) of path with itp non-trivial itp:      3720 (count: 47, min: 1, max: 119, avg: 79.15)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         317 (count: 47, min: 0, max: 14, avg: 6.74)
Equal non-trivial interpolants along paths:            3356 (count: 47, min: 0, max: 117, avg: 71.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 4417
Max. size of reached set after ref.:  365
Avg. size of reached set before ref.: 2170.28
Avg. size of reached set after ref.:  24.83

Total time for CEGAR algorithm:      26.161s
Time for refinements:                 4.257s
Average time for refinement:          0.090s
Max time for refinement:              0.158s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          718
  Total lines:            1394
  Line coverage:          0.515
  Visited conditions:     282
  Total conditions:       488
  Condition coverage:     0.578

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             3859
  Number of reached locations:   746 (39%)
    Avg states per location:     5
    Max states per location:     43 (at node N1229)
  Number of reached functions:   63 (58%)
  Number of partitions:          3829
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [6dfeccac], stack [main, test]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.096s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.657s
  Time for CFA construction:      2.325s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.749s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.569s
      Time for var class.:        0.322s
Time for Analysis:               26.161s
CPU time for analysis:           26.160s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.167s

Time for Garbage Collector:       0.622s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    70 MiB) max;     46MB (    44 MiB) avg;     77MB (    74 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
