scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o2g22wor/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18800 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18203 (97%)
  Because of loop head:            568 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       3054 (16%)
  Times precision was {false}:     209 (1%)
  Times result was cached:         14383 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1154 (6%)
  Times result was 'false':        231 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         55434
  BDD entailment checks:           2998
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          29
Number of abstraction locations:          150
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         53597
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 39.32
Number of irrelevant predicates:          20262 (38%)
Number of preds handled by boolean abs:   2687 (5%)
  Total number of models for allsat:      1903
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.65

Time for post operator:                  3.797s
  Time for path formula creation:        3.542s
Time for strengthen operator:            0.324s
Time for prec operator:                  9.058s
  Time for abstraction:                  8.447s (Max:     0.035s, Count: 18800)
    Boolean abstraction:                 1.959s
    Solving time:                        1.739s (Max:     0.027s)
    Model enumeration time:              0.234s
    Time for BDD construction:           0.173s (Max:     0.012s)
Time for merge operator:                 0.606s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.974s

Number of path formula cache hits:   154838 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.313s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               602
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3242 (count: 14421, min: 0, max: 519, avg: 0.22)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.709s
  Time for transition matches:                         0.348s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       170685 (count: 170685, min: 1, max: 1, avg: 1.00) [1 x 170685]

CPA algorithm statistics
------------------------
Number of iterations:            128786
Max size of waitlist:            46
Average size of waitlist:        15
Number of computed successors:   157065
Max successors for one state:    2
Number of times merged:          26218
Number of times stopped:         27709
Number of times breaked:         29

Total time for CPA algorithm:        22.318s (Max:     2.153s)
  Time for choose from waitlist:      0.278s
  Time for precision adjustment:     10.930s
  Time for transfer relation:         7.497s
  Time for merge operator:            1.386s
  Time for stop operator:             0.445s
  Time for adding to reached set:     0.429s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                2953 (count: 29, min: 71, max: 129, avg: 101.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.012s
  Counterexample analysis:                             2.217s (Max:     0.161s, Calls: 29)
    Refinement sat check:                              1.032s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.042s
  ARG update:                                          0.581s

Length of refined path (in blocks):                    2481 (count: 29, min: 60, max: 111, avg: 85.55)
Number of affected states:                             2352 (count: 29, min: 1, max: 103, avg: 81.10)
Length (states) of path with itp 'true':                100 (count: 29, min: 0, max: 65, avg: 3.45)
Length (states) of path with itp non-trivial itp:      2352 (count: 29, min: 1, max: 103, avg: 81.10)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         188 (count: 29, min: 0, max: 12, avg: 6.48)
Equal non-trivial interpolants along paths:            2135 (count: 29, min: 0, max: 90, avg: 73.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 6917
Max. size of reached set after ref.:  2738
Avg. size of reached set before ref.: 4537.76
Avg. size of reached set after ref.:  100.41

Total time for CEGAR algorithm:      25.635s
Time for refinements:                 3.312s
Average time for refinement:          0.114s
Max time for refinement:              0.205s

Code Coverage
-----------------------------
  Function coverage:      0.278
  Visited lines:          355
  Total lines:            1394
  Line coverage:          0.255
  Visited conditions:     114
  Total conditions:       488
  Condition coverage:     0.234

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             442
  Number of reached locations:   288 (15%)
    Avg states per location:     1
    Max states per location:     5 (at node N524)
  Number of reached functions:   30 (28%)
  Number of partitions:          441
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [21a36372], stack [main, test]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          4.151s
  Time for loading CPAs:          0.966s
  Time for loading parser:        0.663s
  Time for CFA construction:      2.315s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          0.689s
    Time for CFA sanity check:    0.226s
    Time for post-processing:     0.561s
      Time for var class.:        0.297s
Time for Analysis:               25.635s
CPU time for analysis:           25.630s
Total time for CPAchecker:       29.790s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.095s

Time for Garbage Collector:       0.798s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     50MB (    48 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
