scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jxke9mz2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15708 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15194 (97%)
  Because of loop head:            477 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       3570 (23%)
  Times precision was {false}:     185 (1%)
  Times result was cached:         10916 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1037 (7%)
  Times result was 'false':        158 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         42256
  BDD entailment checks:           1816
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          29
Number of abstraction locations:          140
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         30133
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 24.66
Number of irrelevant predicates:          10633 (35%)
Number of preds handled by boolean abs:   2361 (8%)
  Total number of models for allsat:      1701
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.64

Time for post operator:                  3.933s
  Time for path formula creation:        3.669s
Time for strengthen operator:            0.221s
Time for prec operator:                  8.689s
  Time for abstraction:                  8.097s (Max:     0.036s, Count: 15708)
    Boolean abstraction:                 2.020s
    Solving time:                        1.701s (Max:     0.016s)
    Model enumeration time:              0.224s
    Time for BDD construction:           0.227s (Max:     0.012s)
Time for merge operator:                 0.538s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     1.925s

Number of path formula cache hits:   133961 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.294s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               613
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3196 (count: 13010, min: 0, max: 579, avg: 0.25)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.575s
  Time for transition matches:                         0.295s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       136175 (count: 136175, min: 1, max: 1, avg: 1.00) [1 x 136175]

CPA algorithm statistics
------------------------
Number of iterations:            102215
Max size of waitlist:            33
Average size of waitlist:        12
Number of computed successors:   124145
Max successors for one state:    2
Number of times merged:          20220
Number of times stopped:         21325
Number of times breaked:         37

Total time for CPA algorithm:        22.108s (Max:     1.836s)
  Time for choose from waitlist:      0.243s
  Time for precision adjustment:     10.305s
  Time for transfer relation:         7.909s
  Time for merge operator:            1.472s
  Time for stop operator:             0.459s
  Time for adding to reached set:     0.468s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   37
Avg. length of target path (in blocks):                3196 (count: 37, min: 63, max: 121, avg: 86.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.664s
  Counterexample analysis:                             2.787s (Max:     0.139s, Calls: 37)
    Refinement sat check:                              1.378s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.149s
  Precision update:                                    0.058s
  ARG update:                                          0.576s

Length of refined path (in blocks):                    2792 (count: 37, min: 55, max: 97, avg: 75.46)
Number of affected states:                             2209 (count: 37, min: 1, max: 96, avg: 59.70)
Length (states) of path with itp 'true':                546 (count: 37, min: 0, max: 88, avg: 14.76)
Length (states) of path with itp non-trivial itp:      2209 (count: 37, min: 1, max: 96, avg: 59.70)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         269 (count: 37, min: 0, max: 12, avg: 7.27)
Equal non-trivial interpolants along paths:            1903 (count: 37, min: 0, max: 94, avg: 51.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                37
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 5375
Max. size of reached set after ref.:  2784
Avg. size of reached set before ref.: 3219.32
Avg. size of reached set after ref.:  458.19

Total time for CEGAR algorithm:      26.158s
Time for refinements:                 4.035s
Average time for refinement:          0.109s
Max time for refinement:              0.185s

Code Coverage
-----------------------------
  Function coverage:      0.287
  Visited lines:          358
  Total lines:            1394
  Line coverage:          0.257
  Visited conditions:     114
  Total conditions:       488
  Condition coverage:     0.234

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             501
  Number of reached locations:   290 (15%)
    Avg states per location:     1
    Max states per location:     6 (at node N524)
  Number of reached functions:   31 (29%)
  Number of partitions:          500
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [3e667a7], stack [main, test]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          4.072s
  Time for loading CPAs:          0.839s
  Time for loading parser:        0.648s
  Time for CFA construction:      2.328s
    Time for parsing file(s):     0.672s
    Time for AST to CFA:          0.688s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.598s
      Time for var class.:        0.338s
Time for Analysis:               26.158s
CPU time for analysis:           26.140s
Total time for CPAchecker:       30.237s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.133s

Time for Garbage Collector:       0.710s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     46MB (    44 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
