scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2llsk1qj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23655 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22960 (97%)
  Because of loop head:            647 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       3816 (16%)
  Times precision was {false}:     190 (1%)
  Times result was cached:         18240 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1409 (6%)
  Times result was 'false':        380 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         62056
  BDD entailment checks:           2814
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          30
Number of abstraction locations:          143
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         57226
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 35.79
Number of irrelevant predicates:          19342 (34%)
Number of preds handled by boolean abs:   3513 (6%)
  Total number of models for allsat:      2402
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.70

Time for post operator:                  3.583s
  Time for path formula creation:        3.323s
Time for strengthen operator:            0.362s
Time for prec operator:                  9.170s
  Time for abstraction:                  8.572s (Max:     0.022s, Count: 23655)
    Boolean abstraction:                 2.222s
    Solving time:                        1.968s (Max:     0.015s)
    Model enumeration time:              0.241s
    Time for BDD construction:           0.186s (Max:     0.012s)
Time for merge operator:                 0.615s
Time for coverage check:                 0.083s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     2.209s

Number of path formula cache hits:   205666 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.036s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1094
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4592 (count: 16775, min: 0, max: 609, avg: 0.27)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.575s
  Time for transition matches:                         0.274s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       200913 (count: 200913, min: 1, max: 1, avg: 1.00) [1 x 200913]

CPA algorithm statistics
------------------------
Number of iterations:            151044
Max size of waitlist:            33
Average size of waitlist:        13
Number of computed successors:   183256
Max successors for one state:    2
Number of times merged:          29621
Number of times stopped:         31184
Number of times breaked:         48

Total time for CPA algorithm:        22.166s (Max:     1.603s)
  Time for choose from waitlist:      0.251s
  Time for precision adjustment:     11.132s
  Time for transfer relation:         7.224s
  Time for merge operator:            1.382s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.529s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                4462 (count: 48, min: 63, max: 123, avg: 92.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.817s
  Counterexample analysis:                             2.983s (Max:     0.098s, Calls: 48)
    Refinement sat check:                              1.349s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.150s
  Precision update:                                    0.094s
  ARG update:                                          0.522s

Length of refined path (in blocks):                    3744 (count: 47, min: 55, max: 113, avg: 79.66)
Number of affected states:                             3103 (count: 47, min: 1, max: 108, avg: 66.02)
Length (states) of path with itp 'true':                594 (count: 47, min: 0, max: 88, avg: 12.64)
Length (states) of path with itp non-trivial itp:      3103 (count: 47, min: 1, max: 108, avg: 66.02)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         300 (count: 47, min: 0, max: 14, avg: 6.38)
Equal non-trivial interpolants along paths:            2756 (count: 47, min: 0, max: 98, avg: 58.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 5921
Max. size of reached set after ref.:  2784
Avg. size of reached set before ref.: 3562.83
Avg. size of reached set after ref.:  411.13

Total time for CEGAR algorithm:      26.337s
Time for refinements:                 4.141s
Average time for refinement:          0.086s
Max time for refinement:              0.157s

Code Coverage
-----------------------------
  Function coverage:      0.574
  Visited lines:          732
  Total lines:            1394
  Line coverage:          0.525
  Visited conditions:     284
  Total conditions:       488
  Condition coverage:     0.582

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             3457
  Number of reached locations:   751 (39%)
    Avg states per location:     4
    Max states per location:     20 (at node N577)
  Number of reached functions:   62 (57%)
  Number of partitions:          3445
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [bcdd244], stack [main, test]])
  Number of target states:       1
  Size of final wait list        16

Time for analysis setup:          3.893s
  Time for loading CPAs:          0.731s
  Time for loading parser:        0.687s
  Time for CFA construction:      2.280s
    Time for parsing file(s):     0.644s
    Time for AST to CFA:          0.687s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.591s
      Time for var class.:        0.313s
Time for Analysis:               26.338s
CPU time for analysis:           26.330s
Total time for CPAchecker:       30.235s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.155s

Time for Garbage Collector:       0.690s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     48MB (    46 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
