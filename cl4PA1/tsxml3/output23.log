scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2buh7j4d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23686 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23012 (97%)
  Because of loop head:            634 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       5815 (25%)
  Times precision was {false}:     176 (1%)
  Times result was cached:         16458 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1237 (5%)
  Times result was 'false':        271 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         67138
  BDD entailment checks:           3660
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          29
Number of abstraction locations:          147
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         52188
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 36.93
Number of irrelevant predicates:          18720 (36%)
Number of preds handled by boolean abs:   3050 (6%)
  Total number of models for allsat:      2367
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.91

Time for post operator:                  3.360s
  Time for path formula creation:        3.154s
Time for strengthen operator:            0.283s
Time for prec operator:                  9.290s
  Time for abstraction:                  8.660s (Max:     0.025s, Count: 23686)
    Boolean abstraction:                 2.102s
    Solving time:                        1.684s (Max:     0.015s)
    Model enumeration time:              0.319s
    Time for BDD construction:           0.197s (Max:     0.010s)
Time for merge operator:                 0.599s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     2.003s

Number of path formula cache hits:   225313 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.813s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1016
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3870 (count: 18397, min: 0, max: 522, avg: 0.21)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.679s
  Time for transition matches:                         0.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       208482 (count: 208482, min: 1, max: 1, avg: 1.00) [1 x 208482]

CPA algorithm statistics
------------------------
Number of iterations:            158207
Max size of waitlist:            37
Average size of waitlist:        16
Number of computed successors:   192572
Max successors for one state:    2
Number of times merged:          31739
Number of times stopped:         33588
Number of times breaked:         40

Total time for CPA algorithm:        22.611s (Max:     1.477s)
  Time for choose from waitlist:      0.150s
  Time for precision adjustment:     11.269s
  Time for transfer relation:         7.400s
  Time for merge operator:            1.452s
  Time for stop operator:             0.477s
  Time for adding to reached set:     0.610s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                3382 (count: 40, min: 63, max: 115, avg: 84.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.362s
  Counterexample analysis:                             2.585s (Max:     0.134s, Calls: 40)
    Refinement sat check:                              1.141s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.110s
  Precision update:                                    0.044s
  ARG update:                                          0.536s

Length of refined path (in blocks):                    2956 (count: 40, min: 55, max: 109, avg: 73.90)
Number of affected states:                             2450 (count: 40, min: 1, max: 108, avg: 61.25)
Length (states) of path with itp 'true':                466 (count: 40, min: 0, max: 88, avg: 11.65)
Length (states) of path with itp non-trivial itp:      2450 (count: 40, min: 1, max: 108, avg: 61.25)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         301 (count: 40, min: 0, max: 12, avg: 7.53)
Equal non-trivial interpolants along paths:            2109 (count: 40, min: 0, max: 98, avg: 52.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 7162
Max. size of reached set after ref.:  3773
Avg. size of reached set before ref.: 4404.08
Avg. size of reached set after ref.:  465.93

Total time for CEGAR algorithm:      26.366s
Time for refinements:                 3.705s
Average time for refinement:          0.092s
Max time for refinement:              0.151s

Code Coverage
-----------------------------
  Function coverage:      0.352
  Visited lines:          451
  Total lines:            1394
  Line coverage:          0.324
  Visited conditions:     172
  Total conditions:       488
  Condition coverage:     0.352

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             1187
  Number of reached locations:   439 (23%)
    Avg states per location:     2
    Max states per location:     10 (at node N577)
  Number of reached functions:   38 (35%)
  Number of partitions:          1182
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [2d78883f], stack [main, test]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          3.894s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.706s
  Time for CFA construction:      2.244s
    Time for parsing file(s):     0.639s
    Time for AST to CFA:          0.648s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.573s
      Time for var class.:        0.319s
Time for Analysis:               26.366s
CPU time for analysis:           26.360s
Total time for CPAchecker:       30.265s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.106s

Time for Garbage Collector:       0.766s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     47MB (    45 MiB) avg;     80MB (    77 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
