scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u13__vq6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            37973 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37184 (98%)
  Because of loop head:            714 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75 (0%)
  Times precision was empty:       5448 (14%)
  Times precision was {false}:     222 (1%)
  Times result was cached:         30047 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2256 (6%)
  Times result was 'false':        1162 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         91519
  BDD entailment checks:           4497
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          33
Number of abstraction locations:          154
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         130111
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 52.51
Number of irrelevant predicates:          44681 (34%)
Number of preds handled by boolean abs:   7378 (6%)
  Total number of models for allsat:      3894
  Max number of models for allsat:        21
  Avg number of models for allsat:        1.73

Time for post operator:                  3.874s
  Time for path formula creation:        3.583s
Time for strengthen operator:            0.406s
Time for prec operator:                 13.852s
  Time for abstraction:                 13.105s (Max:     0.027s, Count: 37973)
    Boolean abstraction:                 2.965s
    Solving time:                        2.390s (Max:     0.016s)
    Model enumeration time:              0.354s
    Time for BDD construction:           0.213s (Max:     0.010s)
Time for merge operator:                 0.622s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     2.744s

Number of path formula cache hits:   334917 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.230s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2985
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8350 (count: 26290, min: 0, max: 654, avg: 0.32)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.893s
  Time for transition matches:                         0.439s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       306285 (count: 306285, min: 1, max: 1, avg: 1.00) [1 x 306285]

CPA algorithm statistics
------------------------
Number of iterations:            231300
Max size of waitlist:            41
Average size of waitlist:        17
Number of computed successors:   279464
Max successors for one state:    2
Number of times merged:          43511
Number of times stopped:         46064
Number of times breaked:         75

Total time for CPA algorithm:        30.091s (Max:     1.495s)
  Time for choose from waitlist:      0.287s
  Time for precision adjustment:     16.395s
  Time for transfer relation:         8.876s
  Time for merge operator:            1.559s
  Time for stop operator:             0.651s
  Time for adding to reached set:     0.676s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   75
Avg. length of target path (in blocks):                7497 (count: 75, min: 63, max: 155, avg: 99.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.043s
  Counterexample analysis:                             5.005s (Max:     0.112s, Calls: 75)
    Refinement sat check:                              2.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.134s
  Precision update:                                    0.101s
  ARG update:                                          0.655s

Length of refined path (in blocks):                    6585 (count: 75, min: 55, max: 131, avg: 87.80)
Number of affected states:                             5223 (count: 75, min: 1, max: 130, avg: 69.64)
Length (states) of path with itp 'true':               1287 (count: 75, min: 0, max: 88, avg: 17.16)
Length (states) of path with itp non-trivial itp:      5223 (count: 75, min: 1, max: 130, avg: 69.64)
Length (states) of path with itp 'false':                75 (count: 75, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         581 (count: 75, min: 0, max: 14, avg: 7.75)
Equal non-trivial interpolants along paths:            4567 (count: 75, min: 0, max: 128, avg: 60.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 6966
Max. size of reached set after ref.:  4106
Avg. size of reached set before ref.: 4055.08
Avg. size of reached set after ref.:  1013.80

Total time for CEGAR algorithm:      36.635s
Time for refinements:                 6.491s
Average time for refinement:          0.086s
Max time for refinement:              0.159s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          793
  Total lines:            1394
  Line coverage:          0.569
  Visited conditions:     318
  Total conditions:       488
  Condition coverage:     0.652

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             4143
  Number of reached locations:   819 (43%)
    Avg states per location:     5
    Max states per location:     41 (at node N1229)
  Number of reached functions:   64 (59%)
  Number of partitions:          4113
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [5f38fcef], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          3.956s
  Time for loading CPAs:          0.836s
  Time for loading parser:        0.697s
  Time for CFA construction:      2.242s
    Time for parsing file(s):     0.689s
    Time for AST to CFA:          0.661s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.534s
      Time for var class.:        0.277s
Time for Analysis:               36.635s
CPU time for analysis:           36.620s
Time for analyzing result:        0.004s
Total time for CPAchecker:       40.595s
Total CPU time for CPAchecker:   40.580s
Time for statistics:              0.189s

Time for Garbage Collector:       1.141s (in 110 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 95MB (    90 MiB) max;     52MB (    50 MiB) avg;     97MB (    93 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8077MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
