scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xb69568o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 121: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 198: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 368: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 963: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1136: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1632: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1675: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1825: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2035: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2109: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2183: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2216: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2298: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2695: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33424 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  32796 (98%)
  Because of loop head:            574 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (0%)
  Times precision was empty:       3899 (12%)
  Times precision was {false}:     224 (1%)
  Times result was cached:         27102 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2199 (7%)
  Times result was 'false':        1365 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         72514
  BDD entailment checks:           4216
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          33
Number of abstraction locations:          154
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         137504
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 56.75
Number of irrelevant predicates:          39120 (28%)
Number of preds handled by boolean abs:   7751 (6%)
  Total number of models for allsat:      3955
  Max number of models for allsat:        21
  Avg number of models for allsat:        1.80

Time for post operator:                  2.767s
  Time for path formula creation:        2.585s
Time for strengthen operator:            0.345s
Time for prec operator:                 13.341s
  Time for abstraction:                 12.693s (Max:     0.023s, Count: 33424)
    Boolean abstraction:                 2.923s
    Solving time:                        2.286s (Max:     0.016s)
    Model enumeration time:              0.432s
    Time for BDD construction:           0.170s (Max:     0.011s)
Time for merge operator:                 0.428s
Time for coverage check:                 0.056s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     2.718s

Number of path formula cache hits:   269365 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.309s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3123
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8657 (count: 24248, min: 0, max: 869, avg: 0.36)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.531s
  Time for transition matches:                         0.228s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       249724 (count: 249724, min: 1, max: 1, avg: 1.00) [1 x 249724]

CPA algorithm statistics
------------------------
Number of iterations:            188956
Max size of waitlist:            20
Average size of waitlist:        10
Number of computed successors:   227084
Max successors for one state:    2
Number of times merged:          34149
Number of times stopped:         36220
Number of times breaked:         54

Total time for CPA algorithm:        24.967s (Max:     1.229s)
  Time for choose from waitlist:      0.230s
  Time for precision adjustment:     15.180s
  Time for transfer relation:         6.436s
  Time for merge operator:            1.141s
  Time for stop operator:             0.415s
  Time for adding to reached set:     0.536s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                5120 (count: 54, min: 63, max: 155, avg: 94.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.144s
  Counterexample analysis:                             3.235s (Max:     0.136s, Calls: 54)
    Refinement sat check:                              1.420s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.134s
  Precision update:                                    0.072s
  ARG update:                                          0.583s

Length of refined path (in blocks):                    4479 (count: 54, min: 55, max: 131, avg: 82.94)
Number of affected states:                             4151 (count: 54, min: 1, max: 130, avg: 76.87)
Length (states) of path with itp 'true':                274 (count: 54, min: 0, max: 73, avg: 5.07)
Length (states) of path with itp non-trivial itp:      4151 (count: 54, min: 1, max: 130, avg: 76.87)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         381 (count: 54, min: 0, max: 14, avg: 7.06)
Equal non-trivial interpolants along paths:            3716 (count: 54, min: 0, max: 128, avg: 68.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 6707
Max. size of reached set after ref.:  2343
Avg. size of reached set before ref.: 3550.85
Avg. size of reached set after ref.:  118.15

Total time for CEGAR algorithm:      29.437s
Time for refinements:                 4.464s
Average time for refinement:          0.082s
Max time for refinement:              0.163s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          793
  Total lines:            1394
  Line coverage:          0.569
  Visited conditions:     318
  Total conditions:       488
  Condition coverage:     0.652

CPAchecker general statistics
-----------------------------
Number of program locations:     1912
Number of CFA edges:             2164
Number of relevant variables:    334
Number of functions:             108
Number of loops:                 4
Size of reached set:             4134
  Number of reached locations:   819 (43%)
    Avg states per location:     5
    Max states per location:     41 (at node N1229)
  Number of reached functions:   64 (59%)
  Number of partitions:          4107
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1722 (before lines 2365-2532), Function test called from node N987, stack depth 2 [723ad0e4], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.063s
  Time for loading CPAs:          0.795s
  Time for loading parser:        0.671s
  Time for CFA construction:      2.419s
    Time for parsing file(s):     0.764s
    Time for AST to CFA:          0.711s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.559s
      Time for var class.:        0.305s
Time for Analysis:               29.437s
CPU time for analysis:           29.440s
Time for analyzing result:        0.003s
Total time for CPAchecker:       33.504s
Total CPU time for CPAchecker:   33.490s
Time for statistics:              0.154s

Time for Garbage Collector:       0.937s (in 99 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     49MB (    47 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
