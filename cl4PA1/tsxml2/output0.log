scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product12_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8h_88lht/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1057: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1094: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1133: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1172: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1520: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1910: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2033: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2236: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2413: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2521: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2754: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2801: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8382 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8203 (98%)
  Because of loop head:            154 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       1369 (16%)
  Times precision was {false}:     186 (2%)
  Times result was cached:         6522 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      305 (4%)
  Times result was 'false':        90 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         17228
  BDD entailment checks:           652
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          4
Number of abstraction locations:          124
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         11284
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 22.98
Number of irrelevant predicates:          3974 (35%)
Number of preds handled by boolean abs:   398 (4%)
  Total number of models for allsat:      305
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  2.043s
  Time for path formula creation:        1.963s
Time for strengthen operator:            0.098s
Time for prec operator:                  3.820s
  Time for abstraction:                  3.457s (Max:     0.022s, Count: 8382)
    Boolean abstraction:                 0.560s
    Solving time:                        0.601s (Max:     0.015s)
    Model enumeration time:              0.044s
    Time for BDD construction:           0.067s (Max:     0.009s)
Time for merge operator:                 0.357s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.645s

Number of path formula cache hits:   57784 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.830s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         621 (count: 4793, min: 0, max: 134, avg: 0.13)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.338s
Automaton transfers with branching:                0
Automaton transfer successors:                        63030 (count: 63030, min: 1, max: 1, avg: 1.00) [1 x 63030]

CPA algorithm statistics
------------------------
Number of iterations:            47449
Max size of waitlist:            24
Average size of waitlist:        11
Number of computed successors:   56721
Max successors for one state:    2
Number of times merged:          8288
Number of times stopped:         8841
Number of times breaked:         25

Total time for CPA algorithm:        10.951s (Max:     0.916s)
  Time for choose from waitlist:      0.112s
  Time for precision adjustment:      4.679s
  Time for transfer relation:         4.025s
  Time for merge operator:            0.702s
  Time for stop operator:             0.235s
  Time for adding to reached set:     0.314s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                2184 (count: 25, min: 58, max: 112, avg: 87.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.600s
  Counterexample analysis:                             1.110s (Max:     0.065s, Calls: 25)
    Refinement sat check:                              0.587s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.114s
  Precision update:                                    0.027s
  ARG update:                                          0.292s

Length of refined path (in blocks):                    1885 (count: 25, min: 55, max: 93, avg: 75.40)
Number of affected states:                             1860 (count: 25, min: 54, max: 92, avg: 74.40)
Length (states) of path with itp 'true':                  0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:      1860 (count: 25, min: 54, max: 92, avg: 74.40)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          14 (count: 25, min: 0, max: 1, avg: 0.56)
Equal non-trivial interpolants along paths:            1821 (count: 25, min: 53, max: 90, avg: 72.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 2846
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1859.20
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      12.747s
Time for refinements:                 1.794s
Average time for refinement:          0.071s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          643
  Total lines:            1366
  Line coverage:          0.471
  Visited conditions:     220
  Total conditions:       486
  Condition coverage:     0.453

CPAchecker general statistics
-----------------------------
Number of program locations:     1872
Number of CFA edges:             2111
Number of relevant variables:    296
Number of functions:             104
Number of loops:                 4
Size of reached set:             1386
  Number of reached locations:   611 (33%)
    Avg states per location:     2
    Max states per location:     10 (at node N1777)
  Number of reached functions:   52 (50%)
  Number of partitions:          1386
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.162s
  Time for loading CPAs:          0.814s
  Time for loading parser:        0.746s
  Time for CFA construction:      2.364s
    Time for parsing file(s):     0.684s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.607s
      Time for var class.:        0.338s
Time for Analysis:               12.747s
CPU time for analysis:           12.750s
Time for analyzing result:        0.001s
Total time for CPAchecker:       16.913s
Total CPU time for CPAchecker:   16.910s
Time for statistics:              0.113s

Time for Garbage Collector:       0.274s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
