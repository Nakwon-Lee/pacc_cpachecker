scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h8aaii3t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30297 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30146 (100%)
  Because of loop head:            131 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (0%)
  Times precision was empty:       11333 (37%)
  Times precision was {false}:     199 (1%)
  Times result was cached:         17872 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      893 (3%)
  Times result was 'false':        204 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         58470
  BDD entailment checks:           4308
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          30
Number of abstraction locations:          153
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         54082
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 49.53
Number of irrelevant predicates:          26862 (50%)
Number of preds handled by boolean abs:   2150 (4%)
  Total number of models for allsat:      1210
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.35

Time for post operator:                  4.776s
  Time for path formula creation:        4.477s
Time for strengthen operator:            0.306s
Time for prec operator:                  7.256s
  Time for abstraction:                  6.496s (Max:     0.052s, Count: 30297)
    Boolean abstraction:                 1.200s
    Solving time:                        0.998s (Max:     0.015s)
    Model enumeration time:              0.135s
    Time for BDD construction:           0.142s (Max:     0.013s)
Time for merge operator:                 0.598s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     1.133s

Number of path formula cache hits:   190846 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.122s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               597
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2786 (count: 22424, min: 0, max: 453, avg: 0.12)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.731s
  Time for transition matches:                         0.347s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       220563 (count: 220563, min: 1, max: 1, avg: 1.00) [1 x 220563]

CPA algorithm statistics
------------------------
Number of iterations:            164051
Max size of waitlist:            359
Average size of waitlist:        101
Number of computed successors:   195805
Max successors for one state:    2
Number of times merged:          27081
Number of times stopped:         29429
Number of times breaked:         20

Total time for CPA algorithm:        22.540s (Max:     2.398s)
  Time for choose from waitlist:      0.256s
  Time for precision adjustment:      9.370s
  Time for transfer relation:         8.959s
  Time for merge operator:            1.489s
  Time for stop operator:             0.558s
  Time for adding to reached set:     0.533s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                2335 (count: 20, min: 66, max: 225, avg: 116.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.456s
  Counterexample analysis:                             1.614s (Max:     0.185s, Calls: 20)
    Refinement sat check:                              0.777s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.079s
  Precision update:                                    0.055s
  ARG update:                                          0.649s

Length of refined path (in blocks):                    1936 (count: 20, min: 51, max: 198, avg: 96.80)
Number of affected states:                             1783 (count: 20, min: 50, max: 197, avg: 89.15)
Length (states) of path with itp 'true':                133 (count: 20, min: 0, max: 48, avg: 6.65)
Length (states) of path with itp non-trivial itp:      1783 (count: 20, min: 50, max: 197, avg: 89.15)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          65 (count: 20, min: 0, max: 19, avg: 3.25)
Equal non-trivial interpolants along paths:            1698 (count: 20, min: 43, max: 195, avg: 84.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 26640
Max. size of reached set after ref.:  6730
Avg. size of reached set before ref.: 8725.50
Avg. size of reached set after ref.:  726.80

Total time for CEGAR algorithm:      25.341s
Time for refinements:                 2.780s
Average time for refinement:          0.139s
Max time for refinement:              0.228s

Code Coverage
-----------------------------
  Function coverage:      0.628
  Visited lines:          832
  Total lines:            1453
  Line coverage:          0.573
  Visited conditions:     340
  Total conditions:       498
  Condition coverage:     0.683

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             6198
  Number of reached locations:   844 (42%)
    Avg states per location:     7
    Max states per location:     110 (at node N361)
  Number of reached functions:   71 (63%)
  Number of partitions:          6174
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [2e8b3def], stack [main, test]])
  Number of target states:       0
  Size of final wait list        95

Time for analysis setup:          4.425s
  Time for loading CPAs:          0.995s
  Time for loading parser:        0.702s
  Time for CFA construction:      2.534s
    Time for parsing file(s):     0.749s
    Time for AST to CFA:          0.843s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.564s
      Time for var class.:        0.292s
Time for Analysis:               25.341s
CPU time for analysis:           25.340s
Total time for CPAchecker:       29.772s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.210s

Time for Garbage Collector:       1.543s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   114 MiB) max;     56MB (    53 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           139MB (   132 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
