scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3zpze45r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            999145 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  992918 (99%)
  Because of loop head:            5996 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         231 (0%)
  Times precision was empty:       30511 (3%)
  Times precision was {false}:     360 (0%)
  Times result was cached:         940064 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      28210 (3%)
  Times result was 'false':        49843 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2261994
  BDD entailment checks:           392312
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          186
Number of abstraction locations:          177
Max number of predicates per location:    33
Avg number of predicates per location:    15
Total predicates per abstraction:         10650446
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 372.78
Number of irrelevant predicates:          4249085 (40%)
Number of preds handled by boolean abs:   281836 (3%)
  Total number of models for allsat:      1109360
  Max number of models for allsat:        6112
  Avg number of models for allsat:        39.33

Time for post operator:                 30.734s
  Time for path formula creation:       27.346s
Time for strengthen operator:            6.273s
Time for prec operator:                668.443s
  Time for abstraction:                656.952s (Max:     2.512s, Count: 999145)
    Boolean abstraction:               235.300s
    Solving time:                       57.061s (Max:     0.041s)
    Model enumeration time:            120.375s
    Time for BDD construction:          53.775s (Max:     0.779s)
Time for merge operator:                 4.720s
Time for coverage check:                 1.185s
  Time for BDD entailment checks:        0.906s
Total time for SMT solver (w/o itp):   177.436s

Number of path formula cache hits:   8127859 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.695s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               206260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      247088 (count: 671571, min: 0, max: 4343, avg: 0.37)
Time for BDD node cleanup:                             0.175s
Time for BDD garbage collection:                       0.600s (in 140 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.375s
  Time for transition matches:                         4.903s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      7178399 (count: 7178399, min: 1, max: 1, avg: 1.00) [1 x 7178399]

CPA algorithm statistics
------------------------
Number of iterations:            5402754
Max size of waitlist:            1028
Average size of waitlist:        236
Number of computed successors:   6465805
Max successors for one state:    2
Number of times merged:          934841
Number of times stopped:         997338
Number of times breaked:         231

Total time for CPA algorithm:       853.630s (Max:   125.909s)
  Time for choose from waitlist:      2.855s
  Time for precision adjustment:    708.117s
  Time for transfer relation:        95.022s
  Time for merge operator:           14.620s
  Time for stop operator:             8.602s
  Time for adding to reached set:    10.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   231
Avg. length of target path (in blocks):               30900 (count: 231, min: 66, max: 194, avg: 133.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.856s
  Counterexample analysis:                            18.883s (Max:     0.492s, Calls: 231)
    Refinement sat check:                              6.892s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.289s
  Precision update:                                    0.283s
  ARG update:                                         14.114s

Length of refined path (in blocks):                   20655 (count: 231, min: 39, max: 167, avg: 89.42)
Number of affected states:                            11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'true':               9075 (count: 231, min: 0, max: 101, avg: 39.29)
Length (states) of path with itp non-trivial itp:     11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'false':               231 (count: 231, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1288 (count: 231, min: 0, max: 58, avg: 5.58)
Equal non-trivial interpolants along paths:            9830 (count: 231, min: 0, max: 164, avg: 42.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                231
Number of successful refinements:     231
Number of failed refinements:         0
Max. size of reached set before ref.: 340433
Max. size of reached set after ref.:  87114
Avg. size of reached set before ref.: 33414.64
Avg. size of reached set after ref.:  10051.96

Total time for CEGAR algorithm:     896.025s
Time for refinements:                40.420s
Average time for refinement:          0.174s
Max time for refinement:              1.681s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          645
  Total lines:            1453
  Line coverage:          0.444
  Visited conditions:     262
  Total conditions:       498
  Condition coverage:     0.526

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             21845
  Number of reached locations:   647 (32%)
    Avg states per location:     33
    Max states per location:     220 (at node N1743)
  Number of reached functions:   50 (44%)
  Number of partitions:          21689
    Avg size of partitions:      1
    Max size of partitions:      35 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [1b420b86], stack [main, test]])
  Number of target states:       0
  Size of final wait list        180

Time for analysis setup:          4.204s
  Time for loading CPAs:          0.783s
  Time for loading parser:        0.759s
  Time for CFA construction:      2.485s
    Time for parsing file(s):     0.745s
    Time for AST to CFA:          0.794s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.575s
      Time for var class.:        0.325s
Time for Analysis:              896.025s
CPU time for analysis:          895.890s
Total time for CPAchecker:      900.236s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.491s

Time for Garbage Collector:      78.555s (in 1253 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1103MB (  1052 MiB) max;    427MB (   407 MiB) avg;   1111MB (  1059 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1121MB (  1069 MiB) max;    619MB (   590 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9173MB (  8748 MiB) max;   8541MB (  8145 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
