scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k0s9kxs_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1144603 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1140940 (100%)
  Because of loop head:            3537 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         126 (0%)
  Times precision was empty:       19370 (2%)
  Times precision was {false}:     233 (0%)
  Times result was cached:         1091927 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33073 (3%)
  Times result was 'false':        73386 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1908707
  BDD entailment checks:           234143
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          122
Number of abstraction locations:          177
Max number of predicates per location:    41
Avg number of predicates per location:    14
Total predicates per abstraction:         10272332
Max number of predicates per abstraction: 41
Avg number of predicates per abstraction: 308.42
Number of irrelevant predicates:          2800104 (27%)
Number of preds handled by boolean abs:   467655 (5%)
  Total number of models for allsat:      639751
  Max number of models for allsat:        5120
  Avg number of models for allsat:        19.34

Time for post operator:                 66.028s
  Time for path formula creation:       62.560s
Time for strengthen operator:            6.219s
Time for prec operator:                609.466s
  Time for abstraction:                595.973s (Max:     2.586s, Count: 1144603)
    Boolean abstraction:               183.629s
    Solving time:                       73.243s (Max:     0.138s)
    Model enumeration time:             65.669s
    Time for BDD construction:          37.830s (Max:     0.383s)
Time for merge operator:                 8.621s
Time for coverage check:                 0.808s
  Time for BDD entailment checks:        0.580s
Total time for SMT solver (w/o itp):   138.912s

Number of path formula cache hits:   7253616 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.131s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231823
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      638601 (count: 685281, min: 0, max: 15092, avg: 0.93)
Time for BDD node cleanup:                             0.252s
Time for BDD garbage collection:                       0.856s (in 130 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.711s
  Time for transition matches:                         6.028s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7424454 (count: 7424454, min: 1, max: 1, avg: 1.00) [1 x 7424454]

CPA algorithm statistics
------------------------
Number of iterations:            5524947
Max size of waitlist:            772
Average size of waitlist:        295
Number of computed successors:   6535863
Max successors for one state:    2
Number of times merged:          837282
Number of times stopped:         907314
Number of times breaked:         126

Total time for CPA algorithm:       851.158s (Max:    88.545s)
  Time for choose from waitlist:      2.788s
  Time for precision adjustment:    651.610s
  Time for transfer relation:       138.485s
  Time for merge operator:           21.518s
  Time for stop operator:             8.222s
  Time for adding to reached set:    11.794s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   126
Avg. length of target path (in blocks):               25690 (count: 126, min: 66, max: 317, avg: 203.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.517s
  Counterexample analysis:                            25.204s (Max:     0.795s, Calls: 126)
    Refinement sat check:                              7.637s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.271s
  Precision update:                                    0.213s
  ARG update:                                         12.543s

Length of refined path (in blocks):                   16687 (count: 126, min: 50, max: 268, avg: 132.44)
Number of affected states:                            12058 (count: 126, min: 1, max: 267, avg: 95.70)
Length (states) of path with itp 'true':               4503 (count: 126, min: 0, max: 164, avg: 35.74)
Length (states) of path with itp non-trivial itp:     12058 (count: 126, min: 1, max: 267, avg: 95.70)
Length (states) of path with itp 'false':               126 (count: 126, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1029 (count: 126, min: 0, max: 40, avg: 8.17)
Equal non-trivial interpolants along paths:           10903 (count: 126, min: 0, max: 265, avg: 86.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                126
Number of successful refinements:     126
Number of failed refinements:         0
Max. size of reached set before ref.: 236345
Max. size of reached set after ref.:  225611
Avg. size of reached set before ref.: 49977.87
Avg. size of reached set after ref.:  10370.19

Total time for CEGAR algorithm:     896.037s
Time for refinements:                43.793s
Average time for refinement:          0.347s
Max time for refinement:              1.551s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          868
  Total lines:            1453
  Line coverage:          0.597
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             564596
  Number of reached locations:   905 (45%)
    Avg states per location:     623
    Max states per location:     13210 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          557202
    Avg size of partitions:      1
    Max size of partitions:      129 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [5554cddf], stack [main, test]])
  Number of target states:       0
  Size of final wait list        214

Time for analysis setup:          4.190s
  Time for loading CPAs:          0.921s
  Time for loading parser:        0.677s
  Time for CFA construction:      2.416s
    Time for parsing file(s):     0.672s
    Time for AST to CFA:          0.767s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.603s
      Time for var class.:        0.324s
Time for Analysis:              896.037s
CPU time for analysis:          895.940s
Total time for CPAchecker:      900.232s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              4.159s

Time for Garbage Collector:      81.177s (in 857 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1578MB (  1505 MiB) max;    608MB (   580 MiB) avg;   1666MB (  1589 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1995MB (  1903 MiB) max;    898MB (   857 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  10606MB ( 10115 MiB) max;   9011MB (  8593 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
