scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lpoy3qcw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            564471 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  561994 (100%)
  Because of loop head:            2325 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         152 (0%)
  Times precision was empty:       3396 (1%)
  Times precision was {false}:     324 (0%)
  Times result was cached:         538883 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21868 (4%)
  Times result was 'false':        41263 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         860060
  BDD entailment checks:           124154
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          225
Number of abstraction locations:          177
Max number of predicates per location:    48
Avg number of predicates per location:    21
Total predicates per abstraction:         7412124
Max number of predicates per abstraction: 48
Avg number of predicates per abstraction: 334.00
Number of irrelevant predicates:          2689465 (36%)
Number of preds handled by boolean abs:   298240 (4%)
  Total number of models for allsat:      2324216
  Max number of models for allsat:        119808
  Avg number of models for allsat:        106.28

Time for post operator:                 29.896s
  Time for path formula creation:       28.525s
Time for strengthen operator:            2.953s
Time for prec operator:                750.487s
  Time for abstraction:                744.336s (Max:    44.664s, Count: 564471)
    Boolean abstraction:               482.430s
    Solving time:                       41.237s (Max:     0.019s)
    Model enumeration time:            315.527s
    Time for BDD construction:         121.214s (Max:     7.556s)
Time for merge operator:                 4.239s
Time for coverage check:                 0.397s
  Time for BDD entailment checks:        0.295s
Total time for SMT solver (w/o itp):   356.764s

Number of path formula cache hits:   2986625 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.072s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               267031
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      357326 (count: 388041, min: 0, max: 5459, avg: 0.92)
Time for BDD node cleanup:                             0.160s
Time for BDD garbage collection:                       1.815s (in 417 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.020s
  Time for transition matches:                         2.837s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3415656 (count: 3415656, min: 1, max: 1, avg: 1.00) [1 x 3415656]

CPA algorithm statistics
------------------------
Number of iterations:            2565125
Max size of waitlist:            78
Average size of waitlist:        38
Number of computed successors:   3020186
Max successors for one state:    2
Number of times merged:          367953
Number of times stopped:         408993
Number of times breaked:         152

Total time for CPA algorithm:       859.369s (Max:   123.087s)
  Time for choose from waitlist:      1.325s
  Time for precision adjustment:    770.578s
  Time for transfer relation:        62.351s
  Time for merge operator:            8.928s
  Time for stop operator:             3.595s
  Time for adding to reached set:     4.905s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   152
Avg. length of target path (in blocks):               24631 (count: 152, min: 70, max: 241, avg: 162.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.787s
  Counterexample analysis:                            29.489s (Max:     0.765s, Calls: 152)
    Refinement sat check:                              7.423s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.360s
  Precision update:                                    0.299s
  ARG update:                                          4.396s

Length of refined path (in blocks):                   16787 (count: 152, min: 39, max: 231, avg: 110.44)
Number of affected states:                            14813 (count: 152, min: 1, max: 223, avg: 97.45)
Length (states) of path with itp 'true':               1822 (count: 152, min: 0, max: 89, avg: 11.99)
Length (states) of path with itp non-trivial itp:     14813 (count: 152, min: 1, max: 223, avg: 97.45)
Length (states) of path with itp 'false':               152 (count: 152, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1888 (count: 152, min: 0, max: 64, avg: 12.42)
Equal non-trivial interpolants along paths:           12773 (count: 152, min: 0, max: 186, avg: 84.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                152
Number of successful refinements:     152
Number of failed refinements:         0
Max. size of reached set before ref.: 126597
Max. size of reached set after ref.:  15533
Avg. size of reached set before ref.: 17040.51
Avg. size of reached set after ref.:  442.82

Total time for CEGAR algorithm:     896.385s
Time for refinements:                36.968s
Average time for refinement:          0.243s
Max time for refinement:              1.065s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          868
  Total lines:            1453
  Line coverage:          0.597
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             47082
  Number of reached locations:   905 (45%)
    Avg states per location:     52
    Max states per location:     914 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          46373
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [333714de], stack [main, test]])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          3.900s
  Time for loading CPAs:          0.743s
  Time for loading parser:        0.701s
  Time for CFA construction:      2.237s
    Time for parsing file(s):     0.633s
    Time for AST to CFA:          0.666s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.598s
      Time for var class.:        0.330s
Time for Analysis:              896.385s
CPU time for analysis:          896.270s
Total time for CPAchecker:      900.289s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.691s

Time for Garbage Collector:      36.758s (in 854 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                939MB (   895 MiB) max;    414MB (   395 MiB) avg;    956MB (   912 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:          1077MB (  1027 MiB) max;    615MB (   587 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9252MB (  8824 MiB) max;   8610MB (  8211 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
