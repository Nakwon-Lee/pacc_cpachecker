scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8cjg4msa/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32016 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31474 (98%)
  Because of loop head:            455 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       4283 (13%)
  Times precision was {false}:     287 (1%)
  Times result was cached:         26757 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      689 (2%)
  Times result was 'false':        290 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         62107
  BDD entailment checks:           2733
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          16
Number of abstraction locations:          163
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         41357
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 42.37
Number of irrelevant predicates:          28066 (68%)
Number of preds handled by boolean abs:   1152 (3%)
  Total number of models for allsat:      747
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  4.336s
  Time for path formula creation:        4.113s
Time for strengthen operator:            0.327s
Time for prec operator:                  6.490s
  Time for abstraction:                  5.885s (Max:     0.021s, Count: 32016)
    Boolean abstraction:                 0.939s
    Solving time:                        1.047s (Max:     0.015s)
    Model enumeration time:              0.071s
    Time for BDD construction:           0.079s (Max:     0.010s)
Time for merge operator:                 0.546s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.118s

Number of path formula cache hits:   235456 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.679s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               290
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1664 (count: 12729, min: 0, max: 418, avg: 0.13)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.733s
  Time for transition matches:                         0.313s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       236003 (count: 236003, min: 1, max: 1, avg: 1.00) [1 x 236003]

CPA algorithm statistics
------------------------
Number of iterations:            172088
Max size of waitlist:            75
Average size of waitlist:        25
Number of computed successors:   205134
Max successors for one state:    2
Number of times merged:          29687
Number of times stopped:         31172
Number of times breaked:         87

Total time for CPA algorithm:        20.578s (Max:     1.648s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:      8.431s
  Time for transfer relation:         8.419s
  Time for merge operator:            1.221s
  Time for stop operator:             0.496s
  Time for adding to reached set:     0.560s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):               10350 (count: 87, min: 66, max: 138, avg: 118.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.772s
  Counterexample analysis:                             3.924s (Max:     0.085s, Calls: 87)
    Refinement sat check:                              1.931s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.093s
  ARG update:                                          0.503s

Length of refined path (in blocks):                    7307 (count: 86, min: 63, max: 113, avg: 84.97)
Number of affected states:                             2681 (count: 86, min: 1, max: 112, avg: 31.17)
Length (states) of path with itp 'true':               4540 (count: 86, min: 0, max: 87, avg: 52.79)
Length (states) of path with itp non-trivial itp:      2681 (count: 86, min: 1, max: 112, avg: 31.17)
Length (states) of path with itp 'false':                86 (count: 86, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          26 (count: 86, min: 0, max: 11, avg: 0.30)
Equal non-trivial interpolants along paths:            2569 (count: 86, min: 0, max: 108, avg: 29.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     86
Number of failed refinements:         0
Max. size of reached set before ref.: 6629
Max. size of reached set after ref.:  5944
Avg. size of reached set before ref.: 5116.00
Avg. size of reached set after ref.:  3156.03

Total time for CEGAR algorithm:      26.310s
Time for refinements:                 5.532s
Average time for refinement:          0.063s
Max time for refinement:              0.168s

Code Coverage
-----------------------------
  Function coverage:      0.646
  Visited lines:          851
  Total lines:            1453
  Line coverage:          0.586
  Visited conditions:     332
  Total conditions:       498
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             6629
  Number of reached locations:   879 (44%)
    Avg states per location:     7
    Max states per location:     104 (at node N1038)
  Number of reached functions:   73 (65%)
  Number of partitions:          6611
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N268 (before line 485), Function incoming called from node N161, stack depth 10 [190387c4], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming]])
  Number of target states:       1
  Size of final wait list        73

Time for analysis setup:          3.939s
  Time for loading CPAs:          0.743s
  Time for loading parser:        0.647s
  Time for CFA construction:      2.356s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.701s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.581s
      Time for var class.:        0.334s
Time for Analysis:               26.310s
CPU time for analysis:           26.310s
Total time for CPAchecker:       30.253s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.201s

Time for Garbage Collector:       1.075s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                106MB (   101 MiB) max;     55MB (    53 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
