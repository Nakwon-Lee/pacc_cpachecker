scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_leveet0y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1021388 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1014304 (99%)
  Because of loop head:            6447 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         637 (0%)
  Times precision was empty:       11704 (1%)
  Times precision was {false}:     375 (0%)
  Times result was cached:         977457 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31852 (3%)
  Times result was 'false':        49512 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2008665
  BDD entailment checks:           251663
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          187
Number of abstraction locations:          177
Max number of predicates per location:    34
Avg number of predicates per location:    16
Total predicates per abstraction:         10506937
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 326.03
Number of irrelevant predicates:          3594148 (34%)
Number of preds handled by boolean abs:   349605 (3%)
  Total number of models for allsat:      1294127
  Max number of models for allsat:        6112
  Avg number of models for allsat:        40.63

Time for post operator:                 36.091s
  Time for path formula creation:       32.678s
Time for strengthen operator:            5.836s
Time for prec operator:                652.262s
  Time for abstraction:                641.632s (Max:     2.305s, Count: 1021388)
    Boolean abstraction:               260.938s
    Solving time:                       59.921s (Max:     0.035s)
    Model enumeration time:            134.631s
    Time for BDD construction:          61.253s (Max:     0.291s)
Time for merge operator:                 6.016s
Time for coverage check:                 0.842s
  Time for BDD entailment checks:        0.590s
Total time for SMT solver (w/o itp):   194.553s

Number of path formula cache hits:   7658153 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    24.586s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               152992
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      352840 (count: 574526, min: 0, max: 12826, avg: 0.61)
Time for BDD node cleanup:                             0.183s
Time for BDD garbage collection:                       0.801s (in 152 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.619s
  Time for transition matches:                         5.175s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      7155678 (count: 7155678, min: 1, max: 1, avg: 1.00) [1 x 7155678]

CPA algorithm statistics
------------------------
Number of iterations:            5273506
Max size of waitlist:            1092
Average size of waitlist:        192
Number of computed successors:   6275334
Max successors for one state:    2
Number of times merged:          878501
Number of times stopped:         926084
Number of times breaked:         637

Total time for CPA algorithm:       829.668s (Max:    75.550s)
  Time for choose from waitlist:      1.758s
  Time for precision adjustment:    689.966s
  Time for transfer relation:        95.110s
  Time for merge operator:           14.801s
  Time for stop operator:             7.046s
  Time for adding to reached set:     7.761s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   637
Avg. length of target path (in blocks):               87396 (count: 637, min: 66, max: 188, avg: 137.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  52.549s
  Counterexample analysis:                            40.519s (Max:     0.487s, Calls: 637)
    Refinement sat check:                             16.141s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.052s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.282s
  Precision update:                                    0.494s
  ARG update:                                         10.695s

Length of refined path (in blocks):                   56271 (count: 637, min: 39, max: 166, avg: 88.34)
Number of affected states:                            13349 (count: 637, min: 1, max: 160, avg: 20.96)
Length (states) of path with itp 'true':              42285 (count: 637, min: 0, max: 108, avg: 66.38)
Length (states) of path with itp non-trivial itp:     13349 (count: 637, min: 1, max: 160, avg: 20.96)
Length (states) of path with itp 'false':               637 (count: 637, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1533 (count: 637, min: 0, max: 58, avg: 2.41)
Equal non-trivial interpolants along paths:           11179 (count: 637, min: 0, max: 158, avg: 17.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                637
Number of successful refinements:     637
Number of failed refinements:         0
Max. size of reached set before ref.: 185033
Max. size of reached set after ref.:  169443
Avg. size of reached set before ref.: 17338.78
Avg. size of reached set after ref.:  9044.48

Total time for CEGAR algorithm:     895.988s
Time for refinements:                61.890s
Average time for refinement:          0.097s
Max time for refinement:              0.725s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          511
  Total lines:            1453
  Line coverage:          0.352
  Visited conditions:     200
  Total conditions:       498
  Condition coverage:     0.402

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             16266
  Number of reached locations:   491 (25%)
    Avg states per location:     33
    Max states per location:     132 (at node N1743)
  Number of reached functions:   37 (33%)
  Number of partitions:          16170
    Avg size of partitions:      1
    Max size of partitions:      26 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [56d6fbf3], stack [main, test]])
  Number of target states:       0
  Size of final wait list        128

Time for analysis setup:          4.267s
  Time for loading CPAs:          0.917s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.447s
    Time for parsing file(s):     0.642s
    Time for AST to CFA:          0.841s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.587s
      Time for var class.:        0.323s
Time for Analysis:              895.988s
CPU time for analysis:          895.890s
Total time for CPAchecker:      900.262s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.344s

Time for Garbage Collector:      65.414s (in 1037 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1030MB (   982 MiB) max;    549MB (   523 MiB) avg;   1091MB (  1040 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1218MB (  1161 MiB) max;    813MB (   775 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   9577MB (  9133 MiB) max;   8680MB (  8278 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
