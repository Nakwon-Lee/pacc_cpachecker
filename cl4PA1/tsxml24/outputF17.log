scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_roffhxlu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1145076 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1138391 (99%)
  Because of loop head:            6344 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         341 (0%)
  Times precision was empty:       30425 (3%)
  Times precision was {false}:     373 (0%)
  Times result was cached:         1077861 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36417 (3%)
  Times result was 'false':        67375 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2056621
  BDD entailment checks:           287689
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          186
Number of abstraction locations:          177
Max number of predicates per location:    33
Avg number of predicates per location:    16
Total predicates per abstraction:         11287733
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 306.82
Number of irrelevant predicates:          4293151 (38%)
Number of preds handled by boolean abs:   373307 (3%)
  Total number of models for allsat:      1002978
  Max number of models for allsat:        6656
  Avg number of models for allsat:        27.54

Time for post operator:                 34.454s
  Time for path formula creation:       30.671s
Time for strengthen operator:            6.093s
Time for prec operator:                638.951s
  Time for abstraction:                627.127s (Max:     1.830s, Count: 1145076)
    Boolean abstraction:               203.901s
    Solving time:                       61.199s (Max:     0.073s)
    Model enumeration time:             92.068s
    Time for BDD construction:          45.688s (Max:     1.742s)
Time for merge operator:                 4.782s
Time for coverage check:                 0.667s
  Time for BDD entailment checks:        0.457s
Total time for SMT solver (w/o itp):   153.268s

Number of path formula cache hits:   8365863 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.734s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               242381
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      371883 (count: 668421, min: 0, max: 10247, avg: 0.56)
Time for BDD node cleanup:                             0.194s
Time for BDD garbage collection:                       0.650s (in 114 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.581s
  Time for transition matches:                         5.334s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7521087 (count: 7521087, min: 1, max: 1, avg: 1.00) [1 x 7521087]

CPA algorithm statistics
------------------------
Number of iterations:            5609043
Max size of waitlist:            990
Average size of waitlist:        232
Number of computed successors:   6651968
Max successors for one state:    2
Number of times merged:          884466
Number of times stopped:         939332
Number of times breaked:         341

Total time for CPA algorithm:       827.427s (Max:   100.015s)
  Time for choose from waitlist:      2.606s
  Time for precision adjustment:    679.103s
  Time for transfer relation:        99.765s
  Time for merge operator:           13.950s
  Time for stop operator:             7.735s
  Time for adding to reached set:    10.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   341
Avg. length of target path (in blocks):               50503 (count: 341, min: 66, max: 188, avg: 148.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.115s
  Counterexample analysis:                            36.050s (Max:     0.484s, Calls: 341)
    Refinement sat check:                             11.701s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.038s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.353s
  Precision update:                                    0.402s
  ARG update:                                         11.840s

Length of refined path (in blocks):                   36566 (count: 341, min: 39, max: 173, avg: 107.23)
Number of affected states:                            21960 (count: 341, min: 1, max: 165, avg: 64.40)
Length (states) of path with itp 'true':              14265 (count: 341, min: 0, max: 107, avg: 41.83)
Length (states) of path with itp non-trivial itp:     21960 (count: 341, min: 1, max: 165, avg: 64.40)
Length (states) of path with itp 'false':               341 (count: 341, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        3150 (count: 341, min: 0, max: 58, avg: 9.24)
Equal non-trivial interpolants along paths:           18469 (count: 341, min: 0, max: 158, avg: 54.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                341
Number of successful refinements:     341
Number of failed refinements:         0
Max. size of reached set before ref.: 219114
Max. size of reached set after ref.:  84124
Avg. size of reached set before ref.: 37014.38
Avg. size of reached set after ref.:  20884.41

Total time for CEGAR algorithm:     896.293s
Time for refinements:                62.659s
Average time for refinement:          0.183s
Max time for refinement:              1.457s

Code Coverage
-----------------------------
  Function coverage:      0.628
  Visited lines:          849
  Total lines:            1453
  Line coverage:          0.584
  Visited conditions:     340
  Total conditions:       498
  Condition coverage:     0.683

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             144941
  Number of reached locations:   871 (44%)
    Avg states per location:     166
    Max states per location:     955 (at node N361)
  Number of reached functions:   71 (63%)
  Number of partitions:          144243
    Avg size of partitions:      1
    Max size of partitions:      69 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [3ba8b5e2], stack [main, test]])
  Number of target states:       0
  Size of final wait list        981

Time for analysis setup:          3.963s
  Time for loading CPAs:          0.848s
  Time for loading parser:        0.670s
  Time for CFA construction:      2.262s
    Time for parsing file(s):     0.664s
    Time for AST to CFA:          0.667s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.579s
      Time for var class.:        0.331s
Time for Analysis:              896.293s
CPU time for analysis:          896.190s
Total time for CPAchecker:      900.260s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              1.579s

Time for Garbage Collector:      73.266s (in 1196 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                939MB (   896 MiB) max;    447MB (   427 MiB) avg;    954MB (   910 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           959MB (   915 MiB) max;    650MB (   619 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9779MB (  9326 MiB) max;   8621MB (  8221 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
