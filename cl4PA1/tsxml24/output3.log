scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n3zdlcbc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27405 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27006 (99%)
  Because of loop head:            364 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       3104 (11%)
  Times precision was {false}:     276 (1%)
  Times result was cached:         23210 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      815 (3%)
  Times result was 'false':        932 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         51991
  BDD entailment checks:           4257
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          24
Number of abstraction locations:          174
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         58423
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 53.55
Number of irrelevant predicates:          27783 (48%)
Number of preds handled by boolean abs:   1494 (3%)
  Total number of models for allsat:      902
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.11

Time for post operator:                  4.291s
  Time for path formula creation:        4.009s
Time for strengthen operator:            0.284s
Time for prec operator:                  8.365s
  Time for abstraction:                  7.695s (Max:     0.029s, Count: 27405)
    Boolean abstraction:                 1.231s
    Solving time:                        1.198s (Max:     0.014s)
    Model enumeration time:              0.101s
    Time for BDD construction:           0.155s (Max:     0.013s)
Time for merge operator:                 0.530s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     1.299s

Number of path formula cache hits:   180311 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.630s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               416
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2084 (count: 13881, min: 0, max: 405, avg: 0.15)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.609s
  Time for transition matches:                         0.252s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       191331 (count: 191331, min: 1, max: 1, avg: 1.00) [1 x 191331]

CPA algorithm statistics
------------------------
Number of iterations:            144267
Max size of waitlist:            25
Average size of waitlist:        12
Number of computed successors:   172065
Max successors for one state:    2
Number of times merged:          23867
Number of times stopped:         26528
Number of times breaked:         35

Total time for CPA algorithm:        22.522s (Max:     1.370s)
  Time for choose from waitlist:      0.258s
  Time for precision adjustment:     10.158s
  Time for transfer relation:         8.444s
  Time for merge operator:            1.147s
  Time for stop operator:             0.558s
  Time for adding to reached set:     0.638s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                3962 (count: 35, min: 66, max: 148, avg: 113.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.249s
  Counterexample analysis:                             2.452s (Max:     0.143s, Calls: 35)
    Refinement sat check:                              1.152s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.068s
  ARG update:                                          0.522s

Length of refined path (in blocks):                    3274 (count: 35, min: 51, max: 131, avg: 93.54)
Number of affected states:                             3151 (count: 35, min: 2, max: 130, avg: 90.03)
Length (states) of path with itp 'true':                 88 (count: 35, min: 0, max: 88, avg: 2.51)
Length (states) of path with itp non-trivial itp:      3151 (count: 35, min: 2, max: 130, avg: 90.03)
Length (states) of path with itp 'false':                35 (count: 35, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          51 (count: 35, min: 0, max: 11, avg: 1.46)
Equal non-trivial interpolants along paths:            3065 (count: 35, min: 0, max: 118, avg: 87.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     35
Number of failed refinements:         0
Max. size of reached set before ref.: 6328
Max. size of reached set after ref.:  2538
Avg. size of reached set before ref.: 4058.37
Avg. size of reached set after ref.:  75.43

Total time for CEGAR algorithm:      26.149s
Time for refinements:                 3.613s
Average time for refinement:          0.103s
Max time for refinement:              0.207s

Code Coverage
-----------------------------
  Function coverage:      0.655
  Visited lines:          830
  Total lines:            1453
  Line coverage:          0.571
  Visited conditions:     318
  Total conditions:       498
  Condition coverage:     0.639

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             5201
  Number of reached locations:   863 (43%)
    Avg states per location:     6
    Max states per location:     90 (at node N361)
  Number of reached functions:   74 (65%)
  Number of partitions:          5164
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [23d6c094], stack [main, test]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.111s
  Time for loading CPAs:          0.765s
  Time for loading parser:        0.719s
  Time for CFA construction:      2.404s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          0.736s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.566s
      Time for var class.:        0.312s
Time for Analysis:               26.149s
CPU time for analysis:           26.140s
Total time for CPAchecker:       30.264s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.207s

Time for Garbage Collector:       0.878s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     48MB (    45 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
