scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yiwzp75g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            894525 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  887158 (99%)
  Because of loop head:            7227 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         140 (0%)
  Times precision was empty:       8651 (1%)
  Times precision was {false}:     341 (0%)
  Times result was cached:         858137 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27396 (3%)
  Times result was 'false':        51383 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1898883
  BDD entailment checks:           359295
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          221
Number of abstraction locations:          177
Max number of predicates per location:    38
Avg number of predicates per location:    19
Total predicates per abstraction:         11736875
Max number of predicates per abstraction: 38
Avg number of predicates per abstraction: 423.15
Number of irrelevant predicates:          4197726 (36%)
Number of preds handled by boolean abs:   334574 (3%)
  Total number of models for allsat:      1598250
  Max number of models for allsat:        7720
  Avg number of models for allsat:        58.34

Time for post operator:                 26.562s
  Time for path formula creation:       23.186s
Time for strengthen operator:            5.492s
Time for prec operator:                707.968s
  Time for abstraction:                698.017s (Max:     1.769s, Count: 894525)
    Boolean abstraction:               278.123s
    Solving time:                       51.722s (Max:     0.016s)
    Model enumeration time:            147.068s
    Time for BDD construction:          74.822s (Max:     0.422s)
Time for merge operator:                 3.836s
Time for coverage check:                 1.224s
  Time for BDD entailment checks:        1.016s
Total time for SMT solver (w/o itp):   198.790s

Number of path formula cache hits:   6906632 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.335s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               100093
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      376747 (count: 664167, min: 0, max: 5308, avg: 0.57)
Time for BDD node cleanup:                             0.217s
Time for BDD garbage collection:                       0.959s (in 205 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.551s
  Time for transition matches:                         3.710s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      6128377 (count: 6128377, min: 1, max: 1, avg: 1.00) [1 x 6128377]

CPA algorithm statistics
------------------------
Number of iterations:            4642572
Max size of waitlist:            53
Average size of waitlist:        21
Number of computed successors:   5536201
Max successors for one state:    2
Number of times merged:          769794
Number of times stopped:         840820
Number of times breaked:         140

Total time for CPA algorithm:       860.062s (Max:    67.790s)
  Time for choose from waitlist:      1.800s
  Time for precision adjustment:    739.870s
  Time for transfer relation:        79.965s
  Time for merge operator:           11.573s
  Time for stop operator:             6.888s
  Time for adding to reached set:     7.484s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   140
Avg. length of target path (in blocks):               20108 (count: 140, min: 66, max: 188, avg: 143.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.358s
  Counterexample analysis:                            21.655s (Max:     0.547s, Calls: 140)
    Refinement sat check:                              5.578s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.286s
  Precision update:                                    0.254s
  ARG update:                                         10.941s

Length of refined path (in blocks):                   14698 (count: 140, min: 39, max: 171, avg: 104.99)
Number of affected states:                            13771 (count: 140, min: 1, max: 163, avg: 98.36)
Length (states) of path with itp 'true':                787 (count: 140, min: 0, max: 78, avg: 5.62)
Length (states) of path with itp non-trivial itp:     13771 (count: 140, min: 1, max: 163, avg: 98.36)
Length (states) of path with itp 'false':               140 (count: 140, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1854 (count: 140, min: 0, max: 61, avg: 13.24)
Equal non-trivial interpolants along paths:           11777 (count: 140, min: 0, max: 158, avg: 84.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                140
Number of successful refinements:     140
Number of failed refinements:         0
Max. size of reached set before ref.: 127249
Max. size of reached set after ref.:  4861
Avg. size of reached set before ref.: 32548.87
Avg. size of reached set after ref.:  243.91

Total time for CEGAR algorithm:     896.202s
Time for refinements:                36.116s
Average time for refinement:          0.257s
Max time for refinement:              2.197s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          868
  Total lines:            1453
  Line coverage:          0.597
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             121304
  Number of reached locations:   905 (45%)
    Avg states per location:     134
    Max states per location:     1614 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          119753
    Avg size of partitions:      1
    Max size of partitions:      68 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [3b3d95bf], stack [main, test]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          4.048s
  Time for loading CPAs:          0.792s
  Time for loading parser:        0.659s
  Time for CFA construction:      2.430s
    Time for parsing file(s):     0.711s
    Time for AST to CFA:          0.738s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.597s
      Time for var class.:        0.324s
Time for Analysis:              896.202s
CPU time for analysis:          896.040s
Total time for CPAchecker:      900.254s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              1.265s

Time for Garbage Collector:      64.720s (in 1340 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                717MB (   684 MiB) max;    380MB (   362 MiB) avg;    765MB (   729 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           845MB (   806 MiB) max;    553MB (   528 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9251MB (  8822 MiB) max;   8545MB (  8149 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
