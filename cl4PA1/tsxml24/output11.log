scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2wm7na3q/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33359 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33252 (100%)
  Because of loop head:            77 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       6166 (18%)
  Times precision was {false}:     226 (1%)
  Times result was cached:         25820 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1147 (3%)
  Times result was 'false':        1338 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         56886
  BDD entailment checks:           6542
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          27
Number of abstraction locations:          134
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         91536
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 66.67
Number of irrelevant predicates:          51295 (56%)
Number of preds handled by boolean abs:   3118 (3%)
  Total number of models for allsat:      2049
  Max number of models for allsat:        14
  Avg number of models for allsat:        1.79

Time for post operator:                  3.802s
  Time for path formula creation:        3.574s
Time for strengthen operator:            0.279s
Time for prec operator:                  9.082s
  Time for abstraction:                  8.323s (Max:     0.042s, Count: 33359)
    Boolean abstraction:                 1.544s
    Solving time:                        1.110s (Max:     0.015s)
    Model enumeration time:              0.172s
    Time for BDD construction:           0.172s (Max:     0.009s)
Time for merge operator:                 0.513s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     1.282s

Number of path formula cache hits:   232810 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.202s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               978
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3619 (count: 21381, min: 0, max: 556, avg: 0.17)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.631s
  Time for transition matches:                         0.283s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       217284 (count: 217284, min: 1, max: 1, avg: 1.00) [1 x 217284]

CPA algorithm statistics
------------------------
Number of iterations:            163293
Max size of waitlist:            24
Average size of waitlist:        15
Number of computed successors:   193564
Max successors for one state:    2
Number of times merged:          25172
Number of times stopped:         28569
Number of times breaked:         30

Total time for CPA algorithm:        22.349s (Max:     1.866s)
  Time for choose from waitlist:      0.150s
  Time for precision adjustment:     11.073s
  Time for transfer relation:         7.729s
  Time for merge operator:            1.091s
  Time for stop operator:             0.501s
  Time for adding to reached set:     0.516s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                3502 (count: 30, min: 66, max: 135, avg: 116.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.258s
  Counterexample analysis:                             2.294s (Max:     0.169s, Calls: 30)
    Refinement sat check:                              1.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.083s
  Precision update:                                    0.083s
  ARG update:                                          0.691s

Length of refined path (in blocks):                    2980 (count: 30, min: 51, max: 131, avg: 99.33)
Number of affected states:                             2742 (count: 30, min: 1, max: 130, avg: 91.40)
Length (states) of path with itp 'true':                208 (count: 30, min: 0, max: 86, avg: 6.93)
Length (states) of path with itp non-trivial itp:      2742 (count: 30, min: 1, max: 130, avg: 91.40)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         149 (count: 30, min: 0, max: 16, avg: 4.97)
Equal non-trivial interpolants along paths:            2563 (count: 30, min: 0, max: 118, avg: 85.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 10886
Max. size of reached set after ref.:  5766
Avg. size of reached set before ref.: 5742.07
Avg. size of reached set after ref.:  357.20

Total time for CEGAR algorithm:      25.976s
Time for refinements:                 3.608s
Average time for refinement:          0.120s
Max time for refinement:              0.225s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          720
  Total lines:            1453
  Line coverage:          0.496
  Visited conditions:     280
  Total conditions:       498
  Condition coverage:     0.562

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             2112
  Number of reached locations:   747 (37%)
    Avg states per location:     2
    Max states per location:     28 (at node N361)
  Number of reached functions:   67 (59%)
  Number of partitions:          2093
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2199 (before line 2959), Function chuckKeyAdd called from node N843, stack depth 3 [753c848c], stack [main, test, chuckKeyAdd]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.255s
  Time for loading CPAs:          0.837s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.516s
    Time for parsing file(s):     0.674s
    Time for AST to CFA:          0.827s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.642s
      Time for var class.:        0.340s
Time for Analysis:               25.976s
CPU time for analysis:           25.980s
Total time for CPAchecker:       30.236s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.131s

Time for Garbage Collector:       1.124s (in 72 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    98 MiB) max;     57MB (    54 MiB) avg;    107MB (   102 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
