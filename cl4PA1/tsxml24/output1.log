scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ujownay5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30306 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30201 (100%)
  Because of loop head:            80 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       10429 (34%)
  Times precision was {false}:     224 (1%)
  Times result was cached:         18737 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      916 (3%)
  Times result was 'false':        501 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         56034
  BDD entailment checks:           6040
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          26
Number of abstraction locations:          129
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         55376
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 48.58
Number of irrelevant predicates:          32558 (59%)
Number of preds handled by boolean abs:   2507 (5%)
  Total number of models for allsat:      1389
  Max number of models for allsat:        14
  Avg number of models for allsat:        1.52

Time for post operator:                  4.405s
  Time for path formula creation:        4.153s
Time for strengthen operator:            0.303s
Time for prec operator:                  7.401s
  Time for abstraction:                  6.596s (Max:     0.032s, Count: 30306)
    Boolean abstraction:                 1.212s
    Solving time:                        0.865s (Max:     0.016s)
    Model enumeration time:              0.133s
    Time for BDD construction:           0.177s (Max:     0.013s)
Time for merge operator:                 0.540s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.998s

Number of path formula cache hits:   197454 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.824s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               772
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2934 (count: 23576, min: 0, max: 499, avg: 0.12)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.768s
  Time for transition matches:                         0.306s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       207552 (count: 207552, min: 1, max: 1, avg: 1.00) [1 x 207552]

CPA algorithm statistics
------------------------
Number of iterations:            155712
Max size of waitlist:            162
Average size of waitlist:        44
Number of computed successors:   185272
Max successors for one state:    2
Number of times merged:          24997
Number of times stopped:         28406
Number of times breaked:         25

Total time for CPA algorithm:        22.363s (Max:     4.198s)
  Time for choose from waitlist:      0.246s
  Time for precision adjustment:      9.522s
  Time for transfer relation:         8.634s
  Time for merge operator:            1.291s
  Time for stop operator:             0.589s
  Time for adding to reached set:     0.623s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                2805 (count: 25, min: 66, max: 141, avg: 112.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.948s
  Counterexample analysis:                             2.099s (Max:     0.184s, Calls: 25)
    Refinement sat check:                              0.967s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.035s
  ARG update:                                          0.635s

Length of refined path (in blocks):                    2268 (count: 25, min: 51, max: 130, avg: 90.72)
Number of affected states:                             1866 (count: 25, min: 1, max: 129, avg: 74.64)
Length (states) of path with itp 'true':                377 (count: 25, min: 0, max: 85, avg: 15.08)
Length (states) of path with itp non-trivial itp:      1866 (count: 25, min: 1, max: 129, avg: 74.64)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         120 (count: 25, min: 0, max: 16, avg: 4.80)
Equal non-trivial interpolants along paths:            1721 (count: 25, min: 0, max: 117, avg: 68.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 16567
Max. size of reached set after ref.:  14621
Avg. size of reached set before ref.: 7673.68
Avg. size of reached set after ref.:  1462.28

Total time for CEGAR algorithm:      25.788s
Time for refinements:                 3.353s
Average time for refinement:          0.134s
Max time for refinement:              0.257s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          474
  Total lines:            1453
  Line coverage:          0.326
  Visited conditions:     184
  Total conditions:       498
  Condition coverage:     0.369

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             1081
  Number of reached locations:   437 (22%)
    Avg states per location:     2
    Max states per location:     10 (at node N1744)
  Number of reached functions:   37 (33%)
  Number of partitions:          1080
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [7a975e03], stack [main, test]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          3.960s
  Time for loading CPAs:          0.769s
  Time for loading parser:        0.641s
  Time for CFA construction:      2.394s
    Time for parsing file(s):     0.693s
    Time for AST to CFA:          0.724s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.599s
      Time for var class.:        0.318s
Time for Analysis:               25.788s
CPU time for analysis:           25.780s
Total time for CPAchecker:       29.752s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.145s

Time for Garbage Collector:       1.115s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     60MB (    57 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
