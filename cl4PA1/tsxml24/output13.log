scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ozjupphc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31087 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  30714 (99%)
  Because of loop head:            335 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (0%)
  Times precision was empty:       9710 (31%)
  Times precision was {false}:     268 (1%)
  Times result was cached:         20564 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      545 (2%)
  Times result was 'false':        196 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         64573
  BDD entailment checks:           5027
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          17
Number of abstraction locations:          157
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         42876
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 52.74
Number of irrelevant predicates:          29681 (69%)
Number of preds handled by boolean abs:   923 (2%)
  Total number of models for allsat:      605
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  4.452s
  Time for path formula creation:        4.077s
Time for strengthen operator:            0.318s
Time for prec operator:                  6.621s
  Time for abstraction:                  5.817s (Max:     0.200s, Count: 31087)
    Boolean abstraction:                 0.743s
    Solving time:                        0.830s (Max:     0.015s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.088s (Max:     0.012s)
Time for merge operator:                 0.602s
Time for coverage check:                 0.100s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     0.882s

Number of path formula cache hits:   225844 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.752s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1376 (count: 19540, min: 0, max: 307, avg: 0.07)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.725s
  Time for transition matches:                         0.316s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       229109 (count: 229109, min: 1, max: 1, avg: 1.00) [1 x 229109]

CPA algorithm statistics
------------------------
Number of iterations:            172411
Max size of waitlist:            111
Average size of waitlist:        39
Number of computed successors:   206300
Max successors for one state:    2
Number of times merged:          29773
Number of times stopped:         33448
Number of times breaked:         38

Total time for CPA algorithm:        21.934s (Max:     3.115s)
  Time for choose from waitlist:      0.271s
  Time for precision adjustment:      8.670s
  Time for transfer relation:         8.889s
  Time for merge operator:            1.459s
  Time for stop operator:             0.566s
  Time for adding to reached set:     0.605s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                3936 (count: 38, min: 66, max: 123, avg: 103.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.820s
  Counterexample analysis:                             1.960s (Max:     0.117s, Calls: 38)
    Refinement sat check:                              0.952s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.069s
  ARG update:                                          0.643s

Length of refined path (in blocks):                    3264 (count: 37, min: 63, max: 120, avg: 88.22)
Number of affected states:                             1901 (count: 37, min: 2, max: 119, avg: 51.38)
Length (states) of path with itp 'true':               1326 (count: 37, min: 0, max: 91, avg: 35.84)
Length (states) of path with itp non-trivial itp:      1901 (count: 37, min: 2, max: 119, avg: 51.38)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          83 (count: 37, min: 0, max: 11, avg: 2.24)
Equal non-trivial interpolants along paths:            1781 (count: 37, min: 0, max: 107, avg: 48.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 18365
Max. size of reached set after ref.:  18107
Avg. size of reached set before ref.: 11101.55
Avg. size of reached set after ref.:  6735.19

Total time for CEGAR algorithm:      25.609s
Time for refinements:                 3.468s
Average time for refinement:          0.091s
Max time for refinement:              0.171s

Code Coverage
-----------------------------
  Function coverage:      0.664
  Visited lines:          879
  Total lines:            1453
  Line coverage:          0.605
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             17924
  Number of reached locations:   916 (46%)
    Avg states per location:     19
    Max states per location:     329 (at node N361)
  Number of reached functions:   75 (66%)
  Number of partitions:          17855
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [7a53a891], stack [main, test]])
  Number of target states:       1
  Size of final wait list        31

Time for analysis setup:          4.129s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.718s
  Time for CFA construction:      2.385s
    Time for parsing file(s):     0.673s
    Time for AST to CFA:          0.737s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.612s
      Time for var class.:        0.341s
Time for Analysis:               25.609s
CPU time for analysis:           25.610s
Total time for CPAchecker:       29.742s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.395s

Time for Garbage Collector:       1.424s (in 71 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   113 MiB) max;     56MB (    53 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
