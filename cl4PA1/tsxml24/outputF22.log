scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fnwphvqo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1002452 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  996149 (99%)
  Because of loop head:            6072 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         231 (0%)
  Times precision was empty:       30511 (3%)
  Times precision was {false}:     360 (0%)
  Times result was cached:         941883 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29698 (3%)
  Times result was 'false':        49882 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         2279733
  BDD entailment checks:           397959
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          186
Number of abstraction locations:          177
Max number of predicates per location:    33
Avg number of predicates per location:    15
Total predicates per abstraction:         10716686
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 356.53
Number of irrelevant predicates:          4273109 (40%)
Number of preds handled by boolean abs:   303158 (3%)
  Total number of models for allsat:      1367113
  Max number of models for allsat:        7392
  Avg number of models for allsat:        46.03

Time for post operator:                 29.660s
  Time for path formula creation:       26.446s
Time for strengthen operator:            6.358s
Time for prec operator:                676.379s
  Time for abstraction:                665.542s (Max:     2.085s, Count: 1002452)
    Boolean abstraction:               270.991s
    Solving time:                       60.002s (Max:     0.037s)
    Model enumeration time:            145.997s
    Time for BDD construction:          60.977s (Max:     0.421s)
Time for merge operator:                 4.433s
Time for coverage check:                 1.099s
  Time for BDD entailment checks:        0.838s
Total time for SMT solver (w/o itp):   205.999s

Number of path formula cache hits:   8172572 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.436s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               117179
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      265616 (count: 692573, min: 0, max: 4943, avg: 0.38)
Time for BDD node cleanup:                             0.201s
Time for BDD garbage collection:                       0.712s (in 174 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.392s
  Time for transition matches:                         5.070s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7213798 (count: 7213798, min: 1, max: 1, avg: 1.00) [1 x 7213798]

CPA algorithm statistics
------------------------
Number of iterations:            5430092
Max size of waitlist:            1028
Average size of waitlist:        236
Number of computed successors:   6499653
Max successors for one state:    2
Number of times merged:          940887
Number of times stopped:         1003712
Number of times breaked:         231

Total time for CPA algorithm:       857.355s (Max:   116.728s)
  Time for choose from waitlist:      2.887s
  Time for precision adjustment:    714.175s
  Time for transfer relation:        93.847s
  Time for merge operator:           14.067s
  Time for stop operator:             7.069s
  Time for adding to reached set:     9.800s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   231
Avg. length of target path (in blocks):               30900 (count: 231, min: 66, max: 194, avg: 133.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.385s
  Counterexample analysis:                            18.450s (Max:     0.493s, Calls: 231)
    Refinement sat check:                              6.657s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.215s
  Precision update:                                    0.232s
  ARG update:                                         12.172s

Length of refined path (in blocks):                   20655 (count: 231, min: 39, max: 167, avg: 89.42)
Number of affected states:                            11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'true':               9075 (count: 231, min: 0, max: 101, avg: 39.29)
Length (states) of path with itp non-trivial itp:     11349 (count: 231, min: 1, max: 166, avg: 49.13)
Length (states) of path with itp 'false':               231 (count: 231, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1288 (count: 231, min: 0, max: 58, avg: 5.58)
Equal non-trivial interpolants along paths:            9830 (count: 231, min: 0, max: 164, avg: 42.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                231
Number of successful refinements:     231
Number of failed refinements:         0
Max. size of reached set before ref.: 340433
Max. size of reached set after ref.:  87114
Avg. size of reached set before ref.: 33414.64
Avg. size of reached set after ref.:  10051.96

Total time for CEGAR algorithm:     896.206s
Time for refinements:                37.086s
Average time for refinement:          0.160s
Max time for refinement:              1.695s

Code Coverage
-----------------------------
  Function coverage:      0.513
  Visited lines:          739
  Total lines:            1453
  Line coverage:          0.509
  Visited conditions:     296
  Total conditions:       498
  Condition coverage:     0.594

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             49280
  Number of reached locations:   738 (37%)
    Avg states per location:     66
    Max states per location:     500 (at node N1743)
  Number of reached functions:   58 (51%)
  Number of partitions:          48932
    Avg size of partitions:      1
    Max size of partitions:      60 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [70598701], stack [main, test]])
  Number of target states:       0
  Size of final wait list        277

Time for analysis setup:          4.058s
  Time for loading CPAs:          0.854s
  Time for loading parser:        0.751s
  Time for CFA construction:      2.266s
    Time for parsing file(s):     0.633s
    Time for AST to CFA:          0.704s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.575s
      Time for var class.:        0.310s
Time for Analysis:              896.207s
CPU time for analysis:          896.110s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.709s

Time for Garbage Collector:      73.670s (in 1224 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1077MB (  1027 MiB) max;    450MB (   429 MiB) avg;   1097MB (  1047 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1097MB (  1046 MiB) max;    681MB (   649 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9308MB (  8877 MiB) max;   8580MB (  8182 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
