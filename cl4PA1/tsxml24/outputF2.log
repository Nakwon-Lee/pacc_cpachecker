scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s9da74wx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1571680 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1566864 (100%)
  Because of loop head:            4545 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         271 (0%)
  Times precision was empty:       30447 (2%)
  Times precision was {false}:     303 (0%)
  Times result was cached:         1514005 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26925 (2%)
  Times result was 'false':        95742 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2911128
  BDD entailment checks:           551826
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          107
Number of abstraction locations:          168
Max number of predicates per location:    31
Avg number of predicates per location:    12
Total predicates per abstraction:         14605998
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 536.43
Number of irrelevant predicates:          5669874 (39%)
Number of preds handled by boolean abs:   246145 (2%)
  Total number of models for allsat:      169021
  Max number of models for allsat:        512
  Avg number of models for allsat:        6.28

Time for post operator:                 43.867s
  Time for path formula creation:       39.584s
Time for strengthen operator:            7.552s
Time for prec operator:                566.264s
  Time for abstraction:                549.588s (Max:     2.883s, Count: 1571680)
    Boolean abstraction:                60.070s
    Solving time:                       35.567s (Max:     0.016s)
    Model enumeration time:             14.310s
    Time for BDD construction:           6.324s (Max:     0.071s)
Time for merge operator:                 6.092s
Time for coverage check:                 1.118s
  Time for BDD entailment checks:        0.796s
Total time for SMT solver (w/o itp):    49.877s

Number of path formula cache hits:   11457605 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.256s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               162145
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      217479 (count: 811075, min: 0, max: 3419, avg: 0.27)
Time for BDD node cleanup:                             0.196s
Time for BDD garbage collection:                       0.080s (in 8 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.651s
  Time for transition matches:                         7.212s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     10074026 (count: 10074026, min: 1, max: 1, avg: 1.00) [1 x 10074026]

CPA algorithm statistics
------------------------
Number of iterations:            7610082
Max size of waitlist:            70
Average size of waitlist:        38
Number of computed successors:   9013911
Max successors for one state:    2
Number of times merged:          1179651
Number of times stopped:         1304395
Number of times breaked:         271

Total time for CPA algorithm:       811.212s (Max:    25.720s)
  Time for choose from waitlist:      2.670s
  Time for precision adjustment:    617.928s
  Time for transfer relation:       131.407s
  Time for merge operator:           18.467s
  Time for stop operator:             9.698s
  Time for adding to reached set:    11.982s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   271
Avg. length of target path (in blocks):               48310 (count: 271, min: 66, max: 227, avg: 178.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.424s
  Counterexample analysis:                            28.190s (Max:     0.381s, Calls: 271)
    Refinement sat check:                             11.362s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.039s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.255s
  Precision update:                                    0.351s
  ARG update:                                         17.226s

Length of refined path (in blocks):                   23675 (count: 271, min: 50, max: 182, avg: 87.36)
Number of affected states:                            11882 (count: 271, min: 1, max: 181, avg: 43.85)
Length (states) of path with itp 'true':              11522 (count: 271, min: 0, max: 86, avg: 42.52)
Length (states) of path with itp non-trivial itp:     11882 (count: 271, min: 1, max: 181, avg: 43.85)
Length (states) of path with itp 'false':               271 (count: 271, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         909 (count: 271, min: 0, max: 28, avg: 3.35)
Equal non-trivial interpolants along paths:           10702 (count: 271, min: 0, max: 179, avg: 39.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                271
Number of successful refinements:     271
Number of failed refinements:         0
Max. size of reached set before ref.: 212853
Max. size of reached set after ref.:  181206
Avg. size of reached set before ref.: 89858.17
Avg. size of reached set after ref.:  62034.93

Total time for CEGAR algorithm:     895.995s
Time for refinements:                69.490s
Average time for refinement:          0.256s
Max time for refinement:              0.887s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          864
  Total lines:            1453
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             73678
  Number of reached locations:   900 (45%)
    Avg states per location:     81
    Max states per location:     886 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          72998
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [71e205f4], stack [main, test]])
  Number of target states:       0
  Size of final wait list        37

Time for analysis setup:          4.273s
  Time for loading CPAs:          0.809s
  Time for loading parser:        0.750s
  Time for CFA construction:      2.517s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          0.809s
    Time for CFA sanity check:    0.215s
    Time for post-processing:     0.643s
      Time for var class.:        0.355s
Time for Analysis:              895.995s
CPU time for analysis:          895.880s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.945s

Time for Garbage Collector:      86.847s (in 1269 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1154MB (  1100 MiB) max;    520MB (   496 MiB) avg;   1174MB (  1119 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1182MB (  1127 MiB) max;    751MB (   716 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8834MB (  8424 MiB) max;   8527MB (  8132 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
