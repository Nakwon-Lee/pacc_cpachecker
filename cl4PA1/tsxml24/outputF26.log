scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fstm16ty/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            922230 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  915638 (99%)
  Because of loop head:            6417 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         175 (0%)
  Times precision was empty:       10166 (1%)
  Times precision was {false}:     344 (0%)
  Times result was cached:         881974 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29746 (3%)
  Times result was 'false':        52689 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1834740
  BDD entailment checks:           321866
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          210
Number of abstraction locations:          177
Max number of predicates per location:    36
Avg number of predicates per location:    19
Total predicates per abstraction:         13202079
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 438.75
Number of irrelevant predicates:          5645816 (43%)
Number of preds handled by boolean abs:   360716 (3%)
  Total number of models for allsat:      1444798
  Max number of models for allsat:        16384
  Avg number of models for allsat:        48.57

Time for post operator:                 27.884s
  Time for path formula creation:       25.400s
Time for strengthen operator:            4.918s
Time for prec operator:                702.557s
  Time for abstraction:                693.118s (Max:     3.551s, Count: 922230)
    Boolean abstraction:               252.195s
    Solving time:                       54.177s (Max:     0.036s)
    Model enumeration time:            129.809s
    Time for BDD construction:          62.951s (Max:     0.663s)
Time for merge operator:                 4.069s
Time for coverage check:                 0.911s
  Time for BDD entailment checks:        0.704s
Total time for SMT solver (w/o itp):   183.986s

Number of path formula cache hits:   6829582 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.764s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               188586
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      422236 (count: 657960, min: 0, max: 6239, avg: 0.64)
Time for BDD node cleanup:                             0.221s
Time for BDD garbage collection:                       0.845s (in 175 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.606s
  Time for transition matches:                         4.330s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      6175514 (count: 6175514, min: 1, max: 1, avg: 1.00) [1 x 6175514]

CPA algorithm statistics
------------------------
Number of iterations:            4671093
Max size of waitlist:            113
Average size of waitlist:        36
Number of computed successors:   5557081
Max successors for one state:    2
Number of times merged:          756437
Number of times stopped:         830047
Number of times breaked:         175

Total time for CPA algorithm:       857.025s (Max:    42.070s)
  Time for choose from waitlist:      1.920s
  Time for precision adjustment:    735.536s
  Time for transfer relation:        82.260s
  Time for merge operator:           11.819s
  Time for stop operator:             6.601s
  Time for adding to reached set:     7.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   175
Avg. length of target path (in blocks):               26158 (count: 175, min: 66, max: 209, avg: 149.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.278s
  Counterexample analysis:                            23.576s (Max:     0.521s, Calls: 175)
    Refinement sat check:                              6.989s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.362s
  Precision update:                                    0.272s
  ARG update:                                          8.759s

Length of refined path (in blocks):                   16057 (count: 175, min: 39, max: 182, avg: 91.75)
Number of affected states:                            13677 (count: 175, min: 1, max: 181, avg: 78.15)
Length (states) of path with itp 'true':               2205 (count: 175, min: 0, max: 86, avg: 12.60)
Length (states) of path with itp non-trivial itp:     13677 (count: 175, min: 1, max: 181, avg: 78.15)
Length (states) of path with itp 'false':               175 (count: 175, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1753 (count: 175, min: 0, max: 59, avg: 10.02)
Equal non-trivial interpolants along paths:           11749 (count: 175, min: 0, max: 179, avg: 67.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                175
Number of successful refinements:     175
Number of failed refinements:         0
Max. size of reached set before ref.: 101901
Max. size of reached set after ref.:  69875
Avg. size of reached set before ref.: 36627.72
Avg. size of reached set after ref.:  9941.05

Total time for CEGAR algorithm:     896.247s
Time for refinements:                37.786s
Average time for refinement:          0.215s
Max time for refinement:              0.757s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          788
  Total lines:            1453
  Line coverage:          0.542
  Visited conditions:     304
  Total conditions:       498
  Condition coverage:     0.610

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             4177
  Number of reached locations:   808 (41%)
    Avg states per location:     5
    Max states per location:     30 (at node N361)
  Number of reached functions:   67 (59%)
  Number of partitions:          4163
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [7ee8d8d8], stack [main, test]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          4.006s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.356s
    Time for parsing file(s):     0.646s
    Time for AST to CFA:          0.753s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.577s
      Time for var class.:        0.304s
Time for Analysis:              896.247s
CPU time for analysis:          896.100s
Total time for CPAchecker:      900.257s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.180s

Time for Garbage Collector:      61.407s (in 1292 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                708MB (   675 MiB) max;    383MB (   365 MiB) avg;    726MB (   692 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           739MB (   704 MiB) max;    554MB (   529 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9375MB (  8941 MiB) max;   8588MB (  8190 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
