scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7_70b1ud/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1565634 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1560832 (100%)
  Because of loop head:            4533 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         269 (0%)
  Times precision was empty:       30403 (2%)
  Times precision was {false}:     303 (0%)
  Times result was cached:         1508005 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26923 (2%)
  Times result was 'false':        95366 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2900872
  BDD entailment checks:           549766
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          107
Number of abstraction locations:          168
Max number of predicates per location:    31
Avg number of predicates per location:    12
Total predicates per abstraction:         14549174
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 534.39
Number of irrelevant predicates:          5646724 (39%)
Number of preds handled by boolean abs:   246127 (2%)
  Total number of models for allsat:      169013
  Max number of models for allsat:        512
  Avg number of models for allsat:        6.28

Time for post operator:                 44.632s
  Time for path formula creation:       37.873s
Time for strengthen operator:            7.752s
Time for prec operator:                577.311s
  Time for abstraction:                560.697s (Max:     2.730s, Count: 1565634)
    Boolean abstraction:                58.967s
    Solving time:                       34.731s (Max:     0.015s)
    Model enumeration time:             14.008s
    Time for BDD construction:           6.278s (Max:     0.150s)
Time for merge operator:                 5.756s
Time for coverage check:                 1.107s
  Time for BDD entailment checks:        0.789s
Total time for SMT solver (w/o itp):    48.739s

Number of path formula cache hits:   11410888 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.895s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               161854
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      217473 (count: 808959, min: 0, max: 4318, avg: 0.27)
Time for BDD node cleanup:                             0.171s
Time for BDD garbage collection:                       0.171s (in 8 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.903s
  Time for transition matches:                         7.021s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     10037077 (count: 10037077, min: 1, max: 1, avg: 1.00) [1 x 10037077]

CPA algorithm statistics
------------------------
Number of iterations:            7582215
Max size of waitlist:            70
Average size of waitlist:        38
Number of computed successors:   8981081
Max successors for one state:    2
Number of times merged:          1175553
Number of times stopped:         1299822
Number of times breaked:         269

Total time for CPA algorithm:       815.925s (Max:    25.327s)
  Time for choose from waitlist:      2.728s
  Time for precision adjustment:    625.437s
  Time for transfer relation:       129.755s
  Time for merge operator:           17.307s
  Time for stop operator:             9.838s
  Time for adding to reached set:    11.987s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   269
Avg. length of target path (in blocks):               47905 (count: 269, min: 66, max: 227, avg: 178.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.434s
  Counterexample analysis:                            27.438s (Max:     0.403s, Calls: 269)
    Refinement sat check:                             11.032s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.044s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.238s
  Precision update:                                    0.510s
  ARG update:                                         15.818s

Length of refined path (in blocks):                   23510 (count: 269, min: 50, max: 182, avg: 87.40)
Number of affected states:                            11850 (count: 269, min: 1, max: 181, avg: 44.05)
Length (states) of path with itp 'true':              11391 (count: 269, min: 0, max: 86, avg: 42.35)
Length (states) of path with itp non-trivial itp:     11850 (count: 269, min: 1, max: 181, avg: 44.05)
Length (states) of path with itp 'false':               269 (count: 269, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         909 (count: 269, min: 0, max: 28, avg: 3.38)
Equal non-trivial interpolants along paths:           10672 (count: 269, min: 0, max: 179, avg: 39.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                269
Number of successful refinements:     269
Number of failed refinements:         0
Max. size of reached set before ref.: 212853
Max. size of reached set after ref.:  181206
Avg. size of reached set before ref.: 89674.87
Avg. size of reached set after ref.:  61865.56

Total time for CEGAR algorithm:     896.144s
Time for refinements:                65.196s
Average time for refinement:          0.242s
Max time for refinement:              0.784s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          864
  Total lines:            1453
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             105188
  Number of reached locations:   900 (45%)
    Avg states per location:     116
    Max states per location:     1452 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          104047
    Avg size of partitions:      1
    Max size of partitions:      42 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [ac94376], stack [main, test]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          4.217s
  Time for loading CPAs:          0.931s
  Time for loading parser:        0.749s
  Time for CFA construction:      2.332s
    Time for parsing file(s):     0.685s
    Time for AST to CFA:          0.676s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.611s
      Time for var class.:        0.342s
Time for Analysis:              896.144s
CPU time for analysis:          896.060s
Total time for CPAchecker:      900.365s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              1.220s

Time for Garbage Collector:      85.494s (in 1248 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1160MB (  1107 MiB) max;    533MB (   508 MiB) avg;   1186MB (  1131 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:          1195MB (  1139 MiB) max;    768MB (   733 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8836MB (  8426 MiB) max;   8527MB (  8132 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
