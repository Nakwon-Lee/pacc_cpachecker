scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wmg7drt3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1088346 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1083637 (100%)
  Because of loop head:            4595 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         114 (0%)
  Times precision was empty:       33974 (3%)
  Times precision was {false}:     256 (0%)
  Times result was cached:         1024270 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29846 (3%)
  Times result was 'false':        86204 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         2048791
  BDD entailment checks:           379789
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          123
Number of abstraction locations:          168
Max number of predicates per location:    39
Avg number of predicates per location:    15
Total predicates per abstraction:         10554448
Max number of predicates per abstraction: 39
Avg number of predicates per abstraction: 350.62
Number of irrelevant predicates:          2980553 (28%)
Number of preds handled by boolean abs:   530519 (5%)
  Total number of models for allsat:      1011191
  Max number of models for allsat:        2904
  Avg number of models for allsat:        33.88

Time for post operator:                 35.350s
  Time for path formula creation:       32.263s
Time for strengthen operator:            5.912s
Time for prec operator:                672.941s
  Time for abstraction:                661.193s (Max:     3.141s, Count: 1088346)
    Boolean abstraction:               261.970s
    Solving time:                       68.225s (Max:     0.033s)
    Model enumeration time:            119.009s
    Time for BDD construction:          66.631s (Max:     2.674s)
Time for merge operator:                 4.856s
Time for coverage check:                 1.691s
  Time for BDD entailment checks:        1.445s
Total time for SMT solver (w/o itp):   187.234s

Number of path formula cache hits:   7923353 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.604s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               256460
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      717187 (count: 859796, min: 0, max: 13100, avg: 0.83)
Time for BDD node cleanup:                             0.312s
Time for BDD garbage collection:                       1.694s (in 246 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.792s
  Time for transition matches:                         5.705s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      7150702 (count: 7150702, min: 1, max: 1, avg: 1.00) [1 x 7150702]

CPA algorithm statistics
------------------------
Number of iterations:            5359480
Max size of waitlist:            42
Average size of waitlist:        25
Number of computed successors:   6361777
Max successors for one state:    2
Number of times merged:          834501
Number of times stopped:         913850
Number of times breaked:         114

Total time for CPA algorithm:       860.890s (Max:   123.702s)
  Time for choose from waitlist:      2.272s
  Time for precision adjustment:    713.280s
  Time for transfer relation:        98.275s
  Time for merge operator:           13.921s
  Time for stop operator:             8.736s
  Time for adding to reached set:     9.589s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   114
Avg. length of target path (in blocks):               18210 (count: 114, min: 66, max: 235, avg: 159.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.010s
  Counterexample analysis:                            16.021s (Max:     0.417s, Calls: 114)
    Refinement sat check:                              5.053s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.259s
  Precision update:                                    0.192s
  ARG update:                                         13.309s

Length of refined path (in blocks):                   12266 (count: 114, min: 39, max: 208, avg: 107.60)
Number of affected states:                            10198 (count: 114, min: 1, max: 207, avg: 89.46)
Length (states) of path with itp 'true':               1954 (count: 114, min: 0, max: 90, avg: 17.14)
Length (states) of path with itp non-trivial itp:     10198 (count: 114, min: 1, max: 207, avg: 89.46)
Length (states) of path with itp 'false':               114 (count: 114, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         969 (count: 114, min: 0, max: 28, avg: 8.50)
Equal non-trivial interpolants along paths:            9115 (count: 114, min: 0, max: 205, avg: 79.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                114
Number of successful refinements:     114
Number of failed refinements:         0
Max. size of reached set before ref.: 565300
Max. size of reached set after ref.:  147532
Avg. size of reached set before ref.: 53781.82
Avg. size of reached set after ref.:  10174.04

Total time for CEGAR algorithm:     896.257s
Time for refinements:                34.334s
Average time for refinement:          0.301s
Max time for refinement:              2.386s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          864
  Total lines:            1453
  Line coverage:          0.595
  Visited conditions:     344
  Total conditions:       498
  Condition coverage:     0.691

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             390437
  Number of reached locations:   900 (45%)
    Avg states per location:     433
    Max states per location:     6858 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          388652
    Avg size of partitions:      1
    Max size of partitions:      136 (with key [N743 (before lines 1096-1263), Function test called from node N2154, stack depth 2 [5fa08924], stack [main, test]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          4.031s
  Time for loading CPAs:          0.748s
  Time for loading parser:        0.664s
  Time for CFA construction:      2.374s
    Time for parsing file(s):     0.660s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.182s
    Time for post-processing:     0.611s
      Time for var class.:        0.337s
Time for Analysis:              896.257s
CPU time for analysis:          896.150s
Total time for CPAchecker:      900.292s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              3.246s

Time for Garbage Collector:      78.056s (in 927 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1459MB (  1391 MiB) max;    689MB (   657 MiB) avg;   1494MB (  1424 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1489MB (  1420 MiB) max;   1057MB (  1008 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:  10054MB (  9589 MiB) max;   8802MB (  8394 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
