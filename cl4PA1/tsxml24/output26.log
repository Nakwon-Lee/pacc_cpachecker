scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec9_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_84n4fcde/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 189: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 209: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 218: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 532: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 541: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 998: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1044: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1350: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1465: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1576: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1613: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34469 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34353 (100%)
  Because of loop head:            86 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (0%)
  Times precision was empty:       6107 (18%)
  Times precision was {false}:     196 (1%)
  Times result was cached:         27023 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1143 (3%)
  Times result was 'false':        1400 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         56524
  BDD entailment checks:           6840
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          27
Number of abstraction locations:          127
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         96554
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 72.11
Number of irrelevant predicates:          54380 (56%)
Number of preds handled by boolean abs:   3138 (3%)
  Total number of models for allsat:      2053
  Max number of models for allsat:        14
  Avg number of models for allsat:        1.80

Time for post operator:                  3.617s
  Time for path formula creation:        3.419s
Time for strengthen operator:            0.340s
Time for prec operator:                  9.402s
  Time for abstraction:                  8.644s (Max:     0.035s, Count: 34469)
    Boolean abstraction:                 1.508s
    Solving time:                        0.987s (Max:     0.014s)
    Model enumeration time:              0.205s
    Time for BDD construction:           0.184s (Max:     0.012s)
Time for merge operator:                 0.508s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     1.192s

Number of path formula cache hits:   237574 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.027s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               988
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3607 (count: 21451, min: 0, max: 440, avg: 0.17)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.608s
  Time for transition matches:                         0.317s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       220660 (count: 220660, min: 1, max: 1, avg: 1.00) [1 x 220660]

CPA algorithm statistics
------------------------
Number of iterations:            165544
Max size of waitlist:            26
Average size of waitlist:        15
Number of computed successors:   195720
Max successors for one state:    2
Number of times merged:          24842
Number of times stopped:         28389
Number of times breaked:         30

Total time for CPA algorithm:        22.735s (Max:     1.706s)
  Time for choose from waitlist:      0.172s
  Time for precision adjustment:     11.250s
  Time for transfer relation:         7.866s
  Time for merge operator:            1.212s
  Time for stop operator:             0.543s
  Time for adding to reached set:     0.530s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                3490 (count: 30, min: 66, max: 135, avg: 116.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.121s
  Counterexample analysis:                             2.320s (Max:     0.166s, Calls: 30)
    Refinement sat check:                              1.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.067s
  ARG update:                                          0.571s

Length of refined path (in blocks):                    2968 (count: 30, min: 51, max: 131, avg: 98.93)
Number of affected states:                             2730 (count: 30, min: 1, max: 130, avg: 91.00)
Length (states) of path with itp 'true':                208 (count: 30, min: 0, max: 86, avg: 6.93)
Length (states) of path with itp non-trivial itp:      2730 (count: 30, min: 1, max: 130, avg: 91.00)
Length (states) of path with itp 'false':                30 (count: 30, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         149 (count: 30, min: 0, max: 16, avg: 4.97)
Equal non-trivial interpolants along paths:            2551 (count: 30, min: 0, max: 118, avg: 85.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 10579
Max. size of reached set after ref.:  5369
Avg. size of reached set before ref.: 5579.60
Avg. size of reached set after ref.:  327.90

Total time for CEGAR algorithm:      26.189s
Time for refinements:                 3.438s
Average time for refinement:          0.114s
Max time for refinement:              0.224s

Code Coverage
-----------------------------
  Function coverage:      0.637
  Visited lines:          866
  Total lines:            1453
  Line coverage:          0.596
  Visited conditions:     342
  Total conditions:       498
  Condition coverage:     0.687

CPAchecker general statistics
-----------------------------
Number of program locations:     1995
Number of CFA edges:             2265
Number of relevant variables:    361
Number of functions:             113
Number of loops:                 4
Size of reached set:             8381
  Number of reached locations:   901 (45%)
    Avg states per location:     9
    Max states per location:     192 (at node N361)
  Number of reached functions:   72 (64%)
  Number of partitions:          8286
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N188 (before line 362), Function outgoing__wrappee__Encrypt called from node N204, stack depth 7 [635e249f], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__Encrypt]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.073s
  Time for loading CPAs:          0.831s
  Time for loading parser:        0.681s
  Time for CFA construction:      2.378s
    Time for parsing file(s):     0.654s
    Time for AST to CFA:          0.741s
    Time for CFA sanity check:    0.180s
    Time for post-processing:     0.594s
      Time for var class.:        0.331s
Time for Analysis:               26.189s
CPU time for analysis:           26.190s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.256s

Time for Garbage Collector:       1.106s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     56MB (    54 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
