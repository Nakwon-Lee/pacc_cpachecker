scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product24_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a6gdq2of/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 630: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 668: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 689: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 726: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 841: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 915: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 952: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2066: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2236: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2362: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2598: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2616: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2895: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2918: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 421: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12313 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12160 (99%)
  Because of loop head:            104 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (0%)
  Times precision was empty:       5482 (45%)
  Times precision was {false}:     195 (2%)
  Times result was cached:         6511 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      125 (1%)
  Times result was 'false':        180 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         15948
  BDD entailment checks:           1196
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          132
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         7482
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.38
Number of irrelevant predicates:          5313 (71%)
Number of preds handled by boolean abs:   127 (2%)
  Total number of models for allsat:      126
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.197s
  Time for path formula creation:        2.020s
Time for strengthen operator:            0.159s
Time for prec operator:                  3.034s
  Time for abstraction:                  2.532s (Max:     0.027s, Count: 12313)
    Boolean abstraction:                 0.204s
    Solving time:                        0.485s (Max:     0.015s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.028s (Max:     0.010s)
Time for merge operator:                 0.242s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     0.503s

Number of path formula cache hits:   73089 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.827s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         251 (count: 8417, min: 0, max: 126, avg: 0.03)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.456s
Automaton transfers with branching:                0
Automaton transfer successors:                        72233 (count: 72233, min: 1, max: 1, avg: 1.00) [1 x 72233]

CPA algorithm statistics
------------------------
Number of iterations:            53732
Max size of waitlist:            33
Average size of waitlist:        15
Number of computed successors:   62316
Max successors for one state:    2
Number of times merged:          7376
Number of times stopped:         8150
Number of times breaked:         49

Total time for CPA algorithm:        11.194s (Max:     1.094s)
  Time for choose from waitlist:      0.127s
  Time for precision adjustment:      4.102s
  Time for transfer relation:         4.735s
  Time for merge operator:            0.660s
  Time for stop operator:             0.337s
  Time for adding to reached set:     0.310s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                4672 (count: 49, min: 62, max: 135, avg: 95.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.087s
  Counterexample analysis:                             2.517s (Max:     0.088s, Calls: 49)
    Refinement sat check:                              1.162s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.075s
  ARG update:                                          0.255s

Length of refined path (in blocks):                    4317 (count: 49, min: 61, max: 134, avg: 88.10)
Number of affected states:                             1158 (count: 49, min: 1, max: 100, avg: 23.63)
Length (states) of path with itp 'true':               3110 (count: 49, min: 0, max: 132, avg: 63.47)
Length (states) of path with itp non-trivial itp:      1158 (count: 49, min: 1, max: 100, avg: 23.63)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 49, min: 0, max: 1, avg: 0.24)
Equal non-trivial interpolants along paths:            1097 (count: 49, min: 0, max: 98, avg: 22.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 3116
Max. size of reached set after ref.:  1403
Avg. size of reached set before ref.: 1641.18
Avg. size of reached set after ref.:  589.00

Total time for CEGAR algorithm:      14.706s
Time for refinements:                 3.463s
Average time for refinement:          0.070s
Max time for refinement:              0.131s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          796
  Total lines:            1390
  Line coverage:          0.573
  Visited conditions:     266
  Total conditions:       488
  Condition coverage:     0.545

CPAchecker general statistics
-----------------------------
Number of program locations:     1918
Number of CFA edges:             2167
Number of relevant variables:    334
Number of functions:             111
Number of loops:                 4
Size of reached set:             2430
  Number of reached locations:   788 (41%)
    Avg states per location:     3
    Max states per location:     15 (at node N1999)
  Number of reached functions:   74 (67%)
  Number of partitions:          2419
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1850 (before line 2479), Function outgoing called from node N1911, stack depth 5 [6991e8bf], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.060s
  Time for loading CPAs:          0.899s
  Time for loading parser:        0.731s
  Time for CFA construction:      2.257s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.665s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.548s
      Time for var class.:        0.277s
Time for Analysis:               14.707s
CPU time for analysis:           14.700s
Time for analyzing result:        0.003s
Total time for CPAchecker:       18.771s
Total CPU time for CPAchecker:   18.760s
Time for statistics:              0.138s

Time for Garbage Collector:       0.346s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8066MB (  7693 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
