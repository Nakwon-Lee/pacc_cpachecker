scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vngfea45/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 317: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 335: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 360: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 469: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 985: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1063: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1349: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1658: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1877: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2526: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2563: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2863: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2269: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            8220 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8074 (98%)
  Because of loop head:            90 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         56 (1%)
  Times precision was empty:       3863 (47%)
  Times precision was {false}:     164 (2%)
  Times result was cached:         4080 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      113 (1%)
  Times result was 'false':        132 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         10230
  BDD entailment checks:           678
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          5
Number of abstraction locations:          122
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4681
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 16.90
Number of irrelevant predicates:          3152 (67%)
Number of preds handled by boolean abs:   114 (2%)
  Total number of models for allsat:      114
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.644s
  Time for path formula creation:        1.571s
Time for strengthen operator:            0.091s
Time for prec operator:                  2.108s
  Time for abstraction:                  1.806s (Max:     0.026s, Count: 8220)
    Boolean abstraction:                 0.181s
    Solving time:                        0.350s (Max:     0.013s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.012s (Max:     0.001s)
Time for merge operator:                 0.223s
Time for coverage check:                 0.075s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     0.360s

Number of path formula cache hits:   47405 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.498s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         224 (count: 6051, min: 0, max: 135, avg: 0.04)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.282s
Automaton transfers with branching:                0
Automaton transfer successors:                        48223 (count: 48223, min: 1, max: 1, avg: 1.00) [1 x 48223]

CPA algorithm statistics
------------------------
Number of iterations:            35349
Max size of waitlist:            27
Average size of waitlist:        12
Number of computed successors:   40875
Max successors for one state:    2
Number of times merged:          4776
Number of times stopped:         5188
Number of times breaked:         56

Total time for CPA algorithm:         7.889s (Max:     0.927s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:      2.863s
  Time for transfer relation:         3.472s
  Time for merge operator:            0.444s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.246s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   56
Avg. length of target path (in blocks):                5719 (count: 56, min: 77, max: 146, avg: 102.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.304s
  Counterexample analysis:                             2.846s (Max:     0.090s, Calls: 56)
    Refinement sat check:                              1.280s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.090s
  ARG update:                                          0.229s

Length of refined path (in blocks):                    5205 (count: 56, min: 60, max: 145, avg: 92.95)
Number of affected states:                              988 (count: 56, min: 1, max: 92, avg: 17.64)
Length (states) of path with itp 'true':               4161 (count: 56, min: 0, max: 143, avg: 74.30)
Length (states) of path with itp non-trivial itp:       988 (count: 56, min: 1, max: 92, avg: 17.64)
Length (states) of path with itp 'false':                56 (count: 56, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 56, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             921 (count: 56, min: 0, max: 90, avg: 16.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                56
Number of successful refinements:     56
Number of failed refinements:         0
Max. size of reached set before ref.: 2691
Max. size of reached set after ref.:  1297
Avg. size of reached set before ref.: 1274.77
Avg. size of reached set after ref.:  678.77

Total time for CEGAR algorithm:      11.547s
Time for refinements:                 3.594s
Average time for refinement:          0.064s
Max time for refinement:              0.130s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          761
  Total lines:            1374
  Line coverage:          0.554
  Visited conditions:     252
  Total conditions:       486
  Condition coverage:     0.519

CPAchecker general statistics
-----------------------------
Number of program locations:     1890
Number of CFA edges:             2133
Number of relevant variables:    321
Number of functions:             108
Number of loops:                 4
Size of reached set:             2180
  Number of reached locations:   742 (39%)
    Avg states per location:     2
    Max states per location:     15 (at node N223)
  Number of reached functions:   69 (64%)
  Number of partitions:          2171
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N93 (before line 216), Function outgoing called from node N143, stack depth 5 [30e67f98], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          3.855s
  Time for loading CPAs:          0.741s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.245s
    Time for parsing file(s):     0.636s
    Time for AST to CFA:          0.713s
    Time for CFA sanity check:    0.183s
    Time for post-processing:     0.546s
      Time for var class.:        0.292s
Time for Analysis:               11.547s
CPU time for analysis:           11.550s
Time for analyzing result:        0.005s
Total time for CPAchecker:       15.406s
Total CPU time for CPAchecker:   15.390s
Time for statistics:              0.118s

Time for Garbage Collector:       0.233s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     40MB (    38 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8064MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
