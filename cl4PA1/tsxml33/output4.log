scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_40hem_1w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29373 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28785 (98%)
  Because of loop head:            542 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (0%)
  Times precision was empty:       4544 (15%)
  Times precision was {false}:     226 (1%)
  Times result was cached:         22712 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1891 (6%)
  Times result was 'false':        536 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         63806
  BDD entailment checks:           4608
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          31
Number of abstraction locations:          132
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         110267
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 52.09
Number of irrelevant predicates:          34419 (31%)
Number of preds handled by boolean abs:   6376 (6%)
  Total number of models for allsat:      3011
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.59

Time for post operator:                  2.908s
  Time for path formula creation:        2.738s
Time for strengthen operator:            0.278s
Time for prec operator:                 10.849s
  Time for abstraction:                 10.301s (Max:     0.025s, Count: 29373)
    Boolean abstraction:                 2.491s
    Solving time:                        2.049s (Max:     0.015s)
    Model enumeration time:              0.288s
    Time for BDD construction:           0.166s (Max:     0.011s)
Time for merge operator:                 0.408s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     2.337s

Number of path formula cache hits:   227062 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.470s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1879
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6288 (count: 22752, min: 0, max: 638, avg: 0.28)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.546s
  Time for transition matches:                         0.256s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       218052 (count: 218052, min: 1, max: 1, avg: 1.00) [1 x 218052]

CPA algorithm statistics
------------------------
Number of iterations:            166197
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   198703
Max successors for one state:    2
Number of times merged:          29599
Number of times stopped:         31657
Number of times breaked:         46

Total time for CPA algorithm:        22.331s (Max:     1.229s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:     12.497s
  Time for transfer relation:         6.434s
  Time for merge operator:            1.098s
  Time for stop operator:             0.518s
  Time for adding to reached set:     0.470s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                4899 (count: 46, min: 61, max: 161, avg: 106.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.558s
  Counterexample analysis:                             2.809s (Max:     0.117s, Calls: 46)
    Refinement sat check:                              1.315s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.116s
  Precision update:                                    0.062s
  ARG update:                                          0.469s

Length of refined path (in blocks):                    4068 (count: 46, min: 46, max: 139, avg: 88.43)
Number of affected states:                             3841 (count: 46, min: 45, max: 138, avg: 83.50)
Length (states) of path with itp 'true':                181 (count: 46, min: 0, max: 48, avg: 3.93)
Length (states) of path with itp non-trivial itp:      3841 (count: 46, min: 45, max: 138, avg: 83.50)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         212 (count: 46, min: 0, max: 15, avg: 4.61)
Equal non-trivial interpolants along paths:            3583 (count: 46, min: 39, max: 136, avg: 77.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 7360
Max. size of reached set after ref.:  2456
Avg. size of reached set before ref.: 3683.04
Avg. size of reached set after ref.:  185.35

Total time for CEGAR algorithm:      26.256s
Time for refinements:                 3.908s
Average time for refinement:          0.084s
Max time for refinement:              0.157s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          776
  Total lines:            1397
  Line coverage:          0.555
  Visited conditions:     306
  Total conditions:       488
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             5616
  Number of reached locations:   788 (41%)
    Avg states per location:     7
    Max states per location:     40 (at node N1641)
  Number of reached functions:   60 (56%)
  Number of partitions:          5591
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [76a6c09d], stack [main, test]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          3.979s
  Time for loading CPAs:          0.814s
  Time for loading parser:        0.714s
  Time for CFA construction:      2.278s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.657s
    Time for CFA sanity check:    0.228s
    Time for post-processing:     0.553s
      Time for var class.:        0.309s
Time for Analysis:               26.256s
CPU time for analysis:           26.250s
Total time for CPAchecker:       30.242s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.168s

Time for Garbage Collector:       0.821s (in 83 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     48MB (    45 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
