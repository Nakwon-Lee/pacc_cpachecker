scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w5zcyxra/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21036 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  20815 (99%)
  Because of loop head:            178 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       975 (5%)
  Times precision was {false}:     185 (1%)
  Times result was cached:         18142 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1734 (8%)
  Times result was 'false':        411 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         30387
  BDD entailment checks:           2855
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          59
Number of abstraction locations:          124
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         83376
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 43.45
Number of irrelevant predicates:          22698 (27%)
Number of preds handled by boolean abs:   7086 (8%)
  Total number of models for allsat:      2744
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.58

Time for post operator:                  3.579s
  Time for path formula creation:        3.410s
Time for strengthen operator:            0.282s
Time for prec operator:                 10.899s
  Time for abstraction:                 10.368s (Max:     0.027s, Count: 21036)
    Boolean abstraction:                 2.729s
    Solving time:                        2.243s (Max:     0.041s)
    Model enumeration time:              0.249s
    Time for BDD construction:           0.197s (Max:     0.012s)
Time for merge operator:                 0.468s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     2.492s

Number of path formula cache hits:   100859 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.171s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8204 (count: 17156, min: 0, max: 996, avg: 0.48)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.466s
Automaton transfers with branching:                0
Automaton transfer successors:                       127245 (count: 127245, min: 1, max: 1, avg: 1.00) [1 x 127245]

CPA algorithm statistics
------------------------
Number of iterations:            95748
Max size of waitlist:            47
Average size of waitlist:        16
Number of computed successors:   111817
Max successors for one state:    2
Number of times merged:          13766
Number of times stopped:         14939
Number of times breaked:         43

Total time for CPA algorithm:        21.493s (Max:     1.305s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:     12.103s
  Time for transfer relation:         6.460s
  Time for merge operator:            0.977s
  Time for stop operator:             0.327s
  Time for adding to reached set:     0.462s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                4863 (count: 43, min: 68, max: 159, avg: 113.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.130s
  Counterexample analysis:                             3.406s (Max:     0.212s, Calls: 43)
    Refinement sat check:                              1.431s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.141s
  Precision update:                                    0.080s
  ARG update:                                          0.407s

Length of refined path (in blocks):                    3710 (count: 43, min: 39, max: 124, avg: 86.28)
Number of affected states:                             3440 (count: 43, min: 1, max: 123, avg: 80.00)
Length (states) of path with itp 'true':                227 (count: 43, min: 0, max: 48, avg: 5.28)
Length (states) of path with itp non-trivial itp:      3440 (count: 43, min: 1, max: 123, avg: 80.00)
Length (states) of path with itp 'false':                43 (count: 43, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         231 (count: 43, min: 0, max: 21, avg: 5.37)
Equal non-trivial interpolants along paths:            3166 (count: 43, min: 0, max: 121, avg: 73.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     43
Number of failed refinements:         0
Max. size of reached set before ref.: 5028
Max. size of reached set after ref.:  1226
Avg. size of reached set before ref.: 2324.51
Avg. size of reached set after ref.:  106.72

Total time for CEGAR algorithm:      25.915s
Time for refinements:                 4.404s
Average time for refinement:          0.102s
Max time for refinement:              0.232s

Code Coverage
-----------------------------
  Function coverage:      0.486
  Visited lines:          570
  Total lines:            1397
  Line coverage:          0.408
  Visited conditions:     192
  Total conditions:       488
  Condition coverage:     0.393

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             1102
  Number of reached locations:   525 (27%)
    Avg states per location:     2
    Max states per location:     8 (at node N400)
  Number of reached functions:   52 (49%)
  Number of partitions:          1096
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N346 (before line 518), Function outgoing__wrappee__Encrypt called from node N362, stack depth 6 [6ee6a077], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.848s
  Time for loading CPAs:          0.780s
  Time for loading parser:        0.641s
  Time for CFA construction:      2.213s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.693s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.553s
      Time for var class.:        0.291s
Time for Analysis:               25.915s
CPU time for analysis:           25.910s
Total time for CPAchecker:       29.771s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.112s

Time for Garbage Collector:       0.680s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     46MB (    44 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
