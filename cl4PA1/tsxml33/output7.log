scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dz_kroo_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            21412 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21091 (99%)
  Because of loop head:            289 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       3226 (15%)
  Times precision was {false}:     172 (1%)
  Times result was cached:         16544 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1470 (7%)
  Times result was 'false':        301 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         50591
  BDD entailment checks:           1247
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          45
Number of abstraction locations:          137
Max number of predicates per location:    13
Avg number of predicates per location:    6
Total predicates per abstraction:         68840
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 41.92
Number of irrelevant predicates:          23457 (34%)
Number of preds handled by boolean abs:   5376 (8%)
  Total number of models for allsat:      2236
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.52

Time for post operator:                  3.712s
  Time for path formula creation:        3.504s
Time for strengthen operator:            0.330s
Time for prec operator:                  9.630s
  Time for abstraction:                  9.010s (Max:     0.029s, Count: 21412)
    Boolean abstraction:                 2.128s
    Solving time:                        1.710s (Max:     0.016s)
    Model enumeration time:              0.251s
    Time for BDD construction:           0.150s (Max:     0.012s)
Time for merge operator:                 0.611s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.961s

Number of path formula cache hits:   161587 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.170s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1958
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5511 (count: 15257, min: 0, max: 487, avg: 0.36)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.621s
  Time for transition matches:                         0.256s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       175548 (count: 175548, min: 1, max: 1, avg: 1.00) [1 x 175548]

CPA algorithm statistics
------------------------
Number of iterations:            132599
Max size of waitlist:            100
Average size of waitlist:        36
Number of computed successors:   159722
Max successors for one state:    2
Number of times merged:          24672
Number of times stopped:         25345
Number of times breaked:         32

Total time for CPA algorithm:        22.635s (Max:     1.477s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:     11.414s
  Time for transfer relation:         7.501s
  Time for merge operator:            1.170s
  Time for stop operator:             0.501s
  Time for adding to reached set:     0.592s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                3957 (count: 32, min: 61, max: 182, avg: 123.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.397s
  Counterexample analysis:                             2.601s (Max:     0.139s, Calls: 32)
    Refinement sat check:                              1.230s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.120s
  Precision update:                                    0.047s
  ARG update:                                          0.519s

Length of refined path (in blocks):                    3128 (count: 32, min: 46, max: 160, avg: 97.75)
Number of affected states:                             2915 (count: 32, min: 45, max: 159, avg: 91.09)
Length (states) of path with itp 'true':                181 (count: 32, min: 0, max: 48, avg: 5.66)
Length (states) of path with itp non-trivial itp:      2915 (count: 32, min: 45, max: 159, avg: 91.09)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         101 (count: 32, min: 0, max: 15, avg: 3.16)
Equal non-trivial interpolants along paths:            2782 (count: 32, min: 39, max: 157, avg: 86.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 8549
Max. size of reached set after ref.:  2363
Avg. size of reached set before ref.: 4206.34
Avg. size of reached set after ref.:  256.19

Total time for CEGAR algorithm:      26.298s
Time for refinements:                 3.657s
Average time for refinement:          0.114s
Max time for refinement:              0.190s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          751
  Total lines:            1397
  Line coverage:          0.538
  Visited conditions:     304
  Total conditions:       488
  Condition coverage:     0.623

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             7672
  Number of reached locations:   744 (39%)
    Avg states per location:     10
    Max states per location:     52 (at node N377)
  Number of reached functions:   59 (55%)
  Number of partitions:          7664
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [2fcc6292], stack [main, test]])
  Number of target states:       0
  Size of final wait list        91

Time for analysis setup:          3.980s
  Time for loading CPAs:          0.885s
  Time for loading parser:        0.710s
  Time for CFA construction:      2.201s
    Time for parsing file(s):     0.624s
    Time for AST to CFA:          0.651s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.590s
      Time for var class.:        0.321s
Time for Analysis:               26.298s
CPU time for analysis:           26.300s
Total time for CPAchecker:       30.282s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.220s

Time for Garbage Collector:       0.815s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     50MB (    48 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
