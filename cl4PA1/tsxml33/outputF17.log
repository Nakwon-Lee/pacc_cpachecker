scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pvb1c06p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            388005 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  380009 (98%)
  Because of loop head:            7825 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         171 (0%)
  Times precision was empty:       3830 (1%)
  Times precision was {false}:     248 (0%)
  Times result was cached:         361665 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22262 (6%)
  Times result was 'false':        13564 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1158531
  BDD entailment checks:           227717
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          95
Number of abstraction locations:          149
Max number of predicates per location:    31
Avg number of predicates per location:    13
Total predicates per abstraction:         4263061
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 189.39
Number of irrelevant predicates:          1322287 (31%)
Number of preds handled by boolean abs:   260945 (6%)
  Total number of models for allsat:      3616483
  Max number of models for allsat:        8592
  Avg number of models for allsat:        162.45

Time for post operator:                 16.014s
  Time for path formula creation:       14.330s
Time for strengthen operator:            2.810s
Time for prec operator:                786.130s
  Time for abstraction:                781.475s (Max:     2.351s, Count: 388005)
    Boolean abstraction:               589.263s
    Solving time:                       54.885s (Max:     0.017s)
    Model enumeration time:            394.394s
    Time for BDD construction:         136.428s (Max:     0.425s)
Time for merge operator:                 2.902s
Time for coverage check:                 1.174s
  Time for BDD entailment checks:        1.040s
Total time for SMT solver (w/o itp):   449.279s

Number of path formula cache hits:   3462195 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.050s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               91532
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      334952 (count: 484700, min: 0, max: 3921, avg: 0.69)
Time for BDD node cleanup:                             0.143s
Time for BDD garbage collection:                       1.958s (in 401 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.496s
  Time for transition matches:                         2.435s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3202892 (count: 3202892, min: 1, max: 1, avg: 1.00) [1 x 3202892]

CPA algorithm statistics
------------------------
Number of iterations:            2422393
Max size of waitlist:            201
Average size of waitlist:        67
Number of computed successors:   2931017
Max successors for one state:    2
Number of times merged:          465407
Number of times stopped:         492607
Number of times breaked:         171

Total time for CPA algorithm:       871.019s (Max:   130.084s)
  Time for choose from waitlist:      0.920s
  Time for precision adjustment:    802.581s
  Time for transfer relation:        44.830s
  Time for merge operator:            7.672s
  Time for stop operator:             4.440s
  Time for adding to reached set:     3.616s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   171
Avg. length of target path (in blocks):               22751 (count: 171, min: 61, max: 159, avg: 133.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.510s
  Counterexample analysis:                            16.642s (Max:     0.386s, Calls: 171)
    Refinement sat check:                              5.688s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.260s
  Precision update:                                    0.241s
  ARG update:                                          4.126s

Length of refined path (in blocks):                   13879 (count: 171, min: 39, max: 148, avg: 81.16)
Number of affected states:                            10446 (count: 171, min: 1, max: 140, avg: 61.09)
Length (states) of path with itp 'true':               3262 (count: 171, min: 0, max: 57, avg: 19.08)
Length (states) of path with itp non-trivial itp:     10446 (count: 171, min: 1, max: 140, avg: 61.09)
Length (states) of path with itp 'false':               171 (count: 171, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1211 (count: 171, min: 0, max: 27, avg: 7.08)
Equal non-trivial interpolants along paths:            9064 (count: 171, min: 0, max: 130, avg: 53.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                171
Number of successful refinements:     171
Number of failed refinements:         0
Max. size of reached set before ref.: 66926
Max. size of reached set after ref.:  50127
Avg. size of reached set before ref.: 21771.01
Avg. size of reached set after ref.:  7799.74

Total time for CEGAR algorithm:     896.416s
Time for refinements:                24.369s
Average time for refinement:          0.142s
Max time for refinement:              0.452s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             35758
  Number of reached locations:   791 (41%)
    Avg states per location:     45
    Max states per location:     249 (at node N1641)
  Number of reached functions:   60 (56%)
  Number of partitions:          35392
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [47d0bf25], stack [main, test]])
  Number of target states:       0
  Size of final wait list        100

Time for analysis setup:          3.875s
  Time for loading CPAs:          0.813s
  Time for loading parser:        0.693s
  Time for CFA construction:      2.188s
    Time for parsing file(s):     0.621s
    Time for AST to CFA:          0.680s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.545s
      Time for var class.:        0.301s
Time for Analysis:              896.416s
CPU time for analysis:          896.200s
Total time for CPAchecker:      900.295s
Total CPU time for CPAchecker:  900.080s
Time for statistics:              0.527s

Time for Garbage Collector:      31.277s (in 1270 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                437MB (   416 MiB) max;    249MB (   237 MiB) avg;    449MB (   428 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           450MB (   430 MiB) max;    362MB (   345 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8841MB (  8431 MiB) max;   8493MB (  8099 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
