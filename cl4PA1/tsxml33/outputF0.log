scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k86_3oo_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            717611 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  707025 (99%)
  Because of loop head:            10401 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         185 (0%)
  Times precision was empty:       4925 (1%)
  Times precision was {false}:     297 (0%)
  Times result was cached:         669748 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      42641 (6%)
  Times result was 'false':        31180 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2171928
  BDD entailment checks:           537206
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          102
Number of abstraction locations:          149
Max number of predicates per location:    34
Avg number of predicates per location:    14
Total predicates per abstraction:         8358748
Max number of predicates per abstraction: 35
Avg number of predicates per abstraction: 194.67
Number of irrelevant predicates:          2150962 (26%)
Number of preds handled by boolean abs:   562301 (7%)
  Total number of models for allsat:      1832313
  Max number of models for allsat:        17004
  Avg number of models for allsat:        42.97

Time for post operator:                 24.998s
  Time for path formula creation:       22.789s
Time for strengthen operator:            4.785s
Time for prec operator:                714.595s
  Time for abstraction:                705.823s (Max:     3.636s, Count: 717611)
    Boolean abstraction:               373.563s
    Solving time:                       89.586s (Max:     0.086s)
    Model enumeration time:            198.333s
    Time for BDD construction:          77.819s (Max:     0.846s)
Time for merge operator:                 4.647s
Time for coverage check:                 1.712s
  Time for BDD entailment checks:        1.435s
Total time for SMT solver (w/o itp):   287.919s

Number of path formula cache hits:   6281721 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.596s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               93710
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      407741 (count: 931068, min: 0, max: 5814, avg: 0.44)
Time for BDD node cleanup:                             0.203s
Time for BDD garbage collection:                       0.793s (in 184 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.547s
  Time for transition matches:                         4.241s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      5738244 (count: 5738244, min: 1, max: 1, avg: 1.00) [1 x 5738244]

CPA algorithm statistics
------------------------
Number of iterations:            4359921
Max size of waitlist:            975
Average size of waitlist:        235
Number of computed successors:   5259703
Max successors for one state:    2
Number of times merged:          817361
Number of times stopped:         856652
Number of times breaked:         185

Total time for CPA algorithm:       858.165s (Max:    78.409s)
  Time for choose from waitlist:      1.489s
  Time for precision adjustment:    744.373s
  Time for transfer relation:        74.128s
  Time for merge operator:           13.568s
  Time for stop operator:             6.735s
  Time for adding to reached set:     6.540s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   185
Avg. length of target path (in blocks):               26033 (count: 185, min: 61, max: 184, avg: 140.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.926s
  Counterexample analysis:                            18.544s (Max:     0.317s, Calls: 185)
    Refinement sat check:                              6.715s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.233s
  Precision update:                                    0.272s
  ARG update:                                          8.585s

Length of refined path (in blocks):                   14299 (count: 185, min: 39, max: 160, avg: 77.29)
Number of affected states:                            10533 (count: 185, min: 1, max: 159, avg: 56.94)
Length (states) of path with itp 'true':               3581 (count: 185, min: 0, max: 72, avg: 19.36)
Length (states) of path with itp non-trivial itp:     10533 (count: 185, min: 1, max: 159, avg: 56.94)
Length (states) of path with itp 'false':               185 (count: 185, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1069 (count: 185, min: 0, max: 27, avg: 5.78)
Equal non-trivial interpolants along paths:            9279 (count: 185, min: 0, max: 157, avg: 50.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                185
Number of successful refinements:     185
Number of failed refinements:         0
Max. size of reached set before ref.: 242067
Max. size of reached set after ref.:  212133
Avg. size of reached set before ref.: 38721.51
Avg. size of reached set after ref.:  15293.82

Total time for CEGAR algorithm:     896.296s
Time for refinements:                35.823s
Average time for refinement:          0.193s
Max time for refinement:              3.247s

Code Coverage
-----------------------------
  Function coverage:      0.336
  Visited lines:          507
  Total lines:            1397
  Line coverage:          0.363
  Visited conditions:     200
  Total conditions:       488
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             37748
  Number of reached locations:   489 (26%)
    Avg states per location:     77
    Max states per location:     388 (at node N1641)
  Number of reached functions:   36 (34%)
  Number of partitions:          37564
    Avg size of partitions:      1
    Max size of partitions:      73 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [5a377562], stack [main, test]])
  Number of target states:       0
  Size of final wait list        459

Time for analysis setup:          3.975s
  Time for loading CPAs:          0.782s
  Time for loading parser:        0.677s
  Time for CFA construction:      2.343s
    Time for parsing file(s):     0.668s
    Time for AST to CFA:          0.741s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.576s
      Time for var class.:        0.316s
Time for Analysis:              896.296s
CPU time for analysis:          896.160s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.575s

Time for Garbage Collector:      55.273s (in 1191 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                877MB (   836 MiB) max;    335MB (   320 MiB) avg;    891MB (   850 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:          1047MB (   998 MiB) max;    500MB (   477 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  10192MB (  9720 MiB) max;   8839MB (  8430 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
