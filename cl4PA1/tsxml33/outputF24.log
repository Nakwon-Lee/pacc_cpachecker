scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t9g093nv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            538645 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  528399 (98%)
  Because of loop head:            10102 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144 (0%)
  Times precision was empty:       6954 (1%)
  Times precision was {false}:     254 (0%)
  Times result was cached:         500625 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30812 (6%)
  Times result was 'false':        20489 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1663983
  BDD entailment checks:           463021
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          100
Number of abstraction locations:          149
Max number of predicates per location:    34
Avg number of predicates per location:    14
Total predicates per abstraction:         6426511
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 206.87
Number of irrelevant predicates:          1621750 (25%)
Number of preds handled by boolean abs:   440185 (7%)
  Total number of models for allsat:      2940108
  Max number of models for allsat:        5324
  Avg number of models for allsat:        95.42

Time for post operator:                 15.642s
  Time for path formula creation:       14.041s
Time for strengthen operator:            3.179s
Time for prec operator:                767.428s
  Time for abstraction:                761.234s (Max:     1.635s, Count: 538645)
    Boolean abstraction:               501.211s
    Solving time:                       69.857s (Max:     0.078s)
    Model enumeration time:            298.427s
    Time for BDD construction:         126.792s (Max:     1.087s)
Time for merge operator:                 2.887s
Time for coverage check:                 2.410s
  Time for BDD entailment checks:        2.194s
Total time for SMT solver (w/o itp):   368.285s

Number of path formula cache hits:   4796952 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.509s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               226056
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      666163 (count: 900199, min: 0, max: 5366, avg: 0.74)
Time for BDD node cleanup:                             0.297s
Time for BDD garbage collection:                       3.419s (in 526 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.104s
  Time for transition matches:                         2.786s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      4221187 (count: 4221187, min: 1, max: 1, avg: 1.00) [1 x 4221187]

CPA algorithm statistics
------------------------
Number of iterations:            3224653
Max size of waitlist:            90
Average size of waitlist:        28
Number of computed successors:   3884098
Max successors for one state:    2
Number of times merged:          600481
Number of times stopped:         637645
Number of times breaked:         144

Total time for CPA algorithm:       868.979s (Max:    55.805s)
  Time for choose from waitlist:      1.221s
  Time for precision adjustment:    788.811s
  Time for transfer relation:        49.289s
  Time for merge operator:            8.988s
  Time for stop operator:             6.466s
  Time for adding to reached set:     5.455s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   144
Avg. length of target path (in blocks):               19109 (count: 144, min: 61, max: 165, avg: 132.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.856s
  Counterexample analysis:                            15.790s (Max:     0.314s, Calls: 144)
    Refinement sat check:                              5.010s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.207s
  Precision update:                                    0.226s
  ARG update:                                          6.446s

Length of refined path (in blocks):                   12223 (count: 144, min: 39, max: 148, avg: 84.88)
Number of affected states:                            10323 (count: 144, min: 1, max: 140, avg: 71.69)
Length (states) of path with itp 'true':               1756 (count: 144, min: 0, max: 70, avg: 12.19)
Length (states) of path with itp non-trivial itp:     10323 (count: 144, min: 1, max: 140, avg: 71.69)
Length (states) of path with itp 'false':               144 (count: 144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1182 (count: 144, min: 0, max: 27, avg: 8.21)
Equal non-trivial interpolants along paths:            8997 (count: 144, min: 0, max: 136, avg: 62.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                144
Number of successful refinements:     144
Number of failed refinements:         0
Max. size of reached set before ref.: 106310
Max. size of reached set after ref.:  79838
Avg. size of reached set before ref.: 33251.46
Avg. size of reached set after ref.:  11248.90

Total time for CEGAR algorithm:     896.424s
Time for refinements:                26.172s
Average time for refinement:          0.181s
Max time for refinement:              1.366s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             57596
  Number of reached locations:   792 (41%)
    Avg states per location:     72
    Max states per location:     362 (at node N1641)
  Number of reached functions:   60 (56%)
  Number of partitions:          57127
    Avg size of partitions:      1
    Max size of partitions:      86 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [6f91e4b8], stack [main, test]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          3.840s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.732s
  Time for CFA construction:      2.169s
    Time for parsing file(s):     0.657s
    Time for AST to CFA:          0.650s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.546s
      Time for var class.:        0.302s
Time for Analysis:              896.424s
CPU time for analysis:          896.220s
Total time for CPAchecker:      900.267s
Total CPU time for CPAchecker:  900.060s
Time for statistics:              0.717s

Time for Garbage Collector:      41.423s (in 1378 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                511MB (   487 MiB) max;    274MB (   262 MiB) avg;    533MB (   508 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           577MB (   550 MiB) max;    404MB (   385 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9389MB (  8955 MiB) max;   8668MB (  8266 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
