scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lt9xr1rz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            531592 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  521501 (98%)
  Because of loop head:            9948 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         143 (0%)
  Times precision was empty:       6930 (1%)
  Times precision was {false}:     254 (0%)
  Times result was cached:         493752 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30656 (6%)
  Times result was 'false':        20190 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1636845
  BDD entailment checks:           451217
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          100
Number of abstraction locations:          149
Max number of predicates per location:    34
Avg number of predicates per location:    14
Total predicates per abstraction:         6331213
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 204.83
Number of irrelevant predicates:          1603977 (25%)
Number of preds handled by boolean abs:   437242 (7%)
  Total number of models for allsat:      2881850
  Max number of models for allsat:        5324
  Avg number of models for allsat:        94.01

Time for post operator:                 16.742s
  Time for path formula creation:       14.878s
Time for strengthen operator:            3.122s
Time for prec operator:                765.908s
  Time for abstraction:                759.710s (Max:     1.675s, Count: 531592)
    Boolean abstraction:               496.967s
    Solving time:                       69.410s (Max:     0.089s)
    Model enumeration time:            288.821s
    Time for BDD construction:         132.495s (Max:     1.145s)
Time for merge operator:                 2.596s
Time for coverage check:                 2.309s
  Time for BDD entailment checks:        2.117s
Total time for SMT solver (w/o itp):   358.231s

Number of path formula cache hits:   4728026 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.669s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               214427
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      659277 (count: 885529, min: 0, max: 6113, avg: 0.74)
Time for BDD node cleanup:                             0.290s
Time for BDD garbage collection:                       3.294s (in 510 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.477s
  Time for transition matches:                         2.918s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      4166676 (count: 4166676, min: 1, max: 1, avg: 1.00) [1 x 4166676]

CPA algorithm statistics
------------------------
Number of iterations:            3183054
Max size of waitlist:            90
Average size of waitlist:        27
Number of computed successors:   3834064
Max successors for one state:    2
Number of times merged:          592814
Number of times stopped:         629548
Number of times breaked:         143

Total time for CPA algorithm:       868.650s (Max:    55.545s)
  Time for choose from waitlist:      1.353s
  Time for precision adjustment:    787.142s
  Time for transfer relation:        51.222s
  Time for merge operator:            8.812s
  Time for stop operator:             6.220s
  Time for adding to reached set:     5.361s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   143
Avg. length of target path (in blocks):               18957 (count: 143, min: 61, max: 165, avg: 132.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.875s
  Counterexample analysis:                            16.116s (Max:     0.516s, Calls: 143)
    Refinement sat check:                              5.031s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.232s
  Precision update:                                    0.234s
  ARG update:                                          6.056s

Length of refined path (in blocks):                   12164 (count: 143, min: 39, max: 148, avg: 85.06)
Number of affected states:                            10322 (count: 143, min: 1, max: 140, avg: 72.18)
Length (states) of path with itp 'true':               1699 (count: 143, min: 0, max: 70, avg: 11.88)
Length (states) of path with itp non-trivial itp:     10322 (count: 143, min: 1, max: 140, avg: 72.18)
Length (states) of path with itp 'false':               143 (count: 143, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1182 (count: 143, min: 0, max: 27, avg: 8.27)
Equal non-trivial interpolants along paths:            8997 (count: 143, min: 0, max: 136, avg: 62.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                143
Number of successful refinements:     143
Number of failed refinements:         0
Max. size of reached set before ref.: 106310
Max. size of reached set after ref.:  79838
Avg. size of reached set before ref.: 33021.28
Avg. size of reached set after ref.:  10937.50

Total time for CEGAR algorithm:     896.286s
Time for refinements:                26.385s
Average time for refinement:          0.184s
Max time for refinement:              0.841s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          776
  Total lines:            1397
  Line coverage:          0.555
  Visited conditions:     306
  Total conditions:       488
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             26347
  Number of reached locations:   788 (41%)
    Avg states per location:     33
    Max states per location:     194 (at node N1641)
  Number of reached functions:   60 (56%)
  Number of partitions:          26166
    Avg size of partitions:      1
    Max size of partitions:      44 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [3f899e48], stack [main, test]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          3.978s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.686s
  Time for CFA construction:      2.257s
    Time for parsing file(s):     0.643s
    Time for AST to CFA:          0.730s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.543s
      Time for var class.:        0.300s
Time for Analysis:              896.286s
CPU time for analysis:          896.120s
Total time for CPAchecker:      900.268s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.458s

Time for Garbage Collector:      41.810s (in 1445 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                520MB (   496 MiB) max;    264MB (   252 MiB) avg;    535MB (   511 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           620MB (   592 MiB) max;    376MB (   358 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9386MB (  8951 MiB) max;   8654MB (  8253 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
