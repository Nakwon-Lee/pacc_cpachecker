scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ob_xb4fr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            570345 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  561634 (98%)
  Because of loop head:            8535 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         176 (0%)
  Times precision was empty:       4593 (1%)
  Times precision was {false}:     282 (0%)
  Times result was cached:         532342 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33128 (6%)
  Times result was 'false':        21606 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1857865
  BDD entailment checks:           505495
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          101
Number of abstraction locations:          149
Max number of predicates per location:    32
Avg number of predicates per location:    13
Total predicates per abstraction:         6595856
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 197.42
Number of irrelevant predicates:          2038108 (31%)
Number of preds handled by boolean abs:   410118 (6%)
  Total number of models for allsat:      2540524
  Max number of models for allsat:        14848
  Avg number of models for allsat:        76.69

Time for post operator:                 21.446s
  Time for path formula creation:       19.428s
Time for strengthen operator:            3.816s
Time for prec operator:                739.977s
  Time for abstraction:                732.795s (Max:     4.159s, Count: 570345)
    Boolean abstraction:               468.767s
    Solving time:                       75.698s (Max:     0.020s)
    Model enumeration time:            293.360s
    Time for BDD construction:          94.390s (Max:     1.747s)
Time for merge operator:                 4.095s
Time for coverage check:                 1.837s
  Time for BDD entailment checks:        1.605s
Total time for SMT solver (w/o itp):   369.059s

Number of path formula cache hits:   5066045 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.408s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               125284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      402544 (count: 847560, min: 0, max: 9327, avg: 0.47)
Time for BDD node cleanup:                             0.181s
Time for BDD garbage collection:                       1.058s (in 241 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.104s
  Time for transition matches:                         3.488s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4660653 (count: 4660653, min: 1, max: 1, avg: 1.00) [1 x 4660653]

CPA algorithm statistics
------------------------
Number of iterations:            3530509
Max size of waitlist:            957
Average size of waitlist:        224
Number of computed successors:   4270127
Max successors for one state:    2
Number of times merged:          676185
Number of times stopped:         714934
Number of times breaked:         176

Total time for CPA algorithm:       865.142s (Max:   103.370s)
  Time for choose from waitlist:      1.724s
  Time for precision adjustment:    765.663s
  Time for transfer relation:        64.414s
  Time for merge operator:           11.571s
  Time for stop operator:             6.225s
  Time for adding to reached set:     6.314s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   176
Avg. length of target path (in blocks):               24058 (count: 176, min: 61, max: 182, avg: 136.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.484s
  Counterexample analysis:                            15.082s (Max:     0.274s, Calls: 176)
    Refinement sat check:                              5.806s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.230s
  Precision update:                                    0.244s
  ARG update:                                          7.696s

Length of refined path (in blocks):                   12992 (count: 176, min: 39, max: 160, avg: 73.82)
Number of affected states:                             8910 (count: 176, min: 1, max: 159, avg: 50.63)
Length (states) of path with itp 'true':               3906 (count: 176, min: 0, max: 61, avg: 22.19)
Length (states) of path with itp non-trivial itp:      8910 (count: 176, min: 1, max: 159, avg: 50.63)
Length (states) of path with itp 'false':               176 (count: 176, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         821 (count: 176, min: 0, max: 26, avg: 4.66)
Equal non-trivial interpolants along paths:            7913 (count: 176, min: 0, max: 157, avg: 44.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                176
Number of successful refinements:     176
Number of failed refinements:         0
Max. size of reached set before ref.: 223377
Max. size of reached set after ref.:  165093
Avg. size of reached set before ref.: 36993.69
Avg. size of reached set after ref.:  17226.03

Total time for CEGAR algorithm:     896.371s
Time for refinements:                28.684s
Average time for refinement:          0.162s
Max time for refinement:              0.970s

Code Coverage
-----------------------------
  Function coverage:      0.346
  Visited lines:          511
  Total lines:            1397
  Line coverage:          0.366
  Visited conditions:     200
  Total conditions:       488
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             54478
  Number of reached locations:   491 (26%)
    Avg states per location:     110
    Max states per location:     551 (at node N1604)
  Number of reached functions:   37 (35%)
  Number of partitions:          54124
    Avg size of partitions:      1
    Max size of partitions:      116 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [7de0a622], stack [main, test]])
  Number of target states:       0
  Size of final wait list        657

Time for analysis setup:          3.898s
  Time for loading CPAs:          0.772s
  Time for loading parser:        0.618s
  Time for CFA construction:      2.329s
    Time for parsing file(s):     0.672s
    Time for AST to CFA:          0.713s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.583s
      Time for var class.:        0.304s
Time for Analysis:              896.371s
CPU time for analysis:          896.150s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.040s
Time for statistics:              0.920s

Time for Garbage Collector:      47.554s (in 1208 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                792MB (   755 MiB) max;    337MB (   322 MiB) avg;    819MB (   781 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           824MB (   786 MiB) max;    484MB (   461 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   9589MB (  9145 MiB) max;   8582MB (  8185 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
