scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0p6t7dcn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            526205 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  518291 (98%)
  Because of loop head:            7763 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         151 (0%)
  Times precision was empty:       7639 (1%)
  Times precision was {false}:     283 (0%)
  Times result was cached:         486984 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31299 (6%)
  Times result was 'false':        18090 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1527743
  BDD entailment checks:           345695
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          99
Number of abstraction locations:          149
Max number of predicates per location:    32
Avg number of predicates per location:    13
Total predicates per abstraction:         5617362
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 177.87
Number of irrelevant predicates:          1834672 (33%)
Number of preds handled by boolean abs:   394371 (7%)
  Total number of models for allsat:      3121291
  Max number of models for allsat:        6744
  Avg number of models for allsat:        99.72

Time for post operator:                 21.374s
  Time for path formula creation:       19.266s
Time for strengthen operator:            3.591s
Time for prec operator:                760.446s
  Time for abstraction:                754.104s (Max:     1.565s, Count: 526205)
    Boolean abstraction:               516.983s
    Solving time:                       72.801s (Max:     0.086s)
    Model enumeration time:            316.158s
    Time for BDD construction:         122.920s (Max:     0.333s)
Time for merge operator:                 3.667s
Time for coverage check:                 1.659s
  Time for BDD entailment checks:        1.480s
Total time for SMT solver (w/o itp):   388.960s

Number of path formula cache hits:   4467696 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.410s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               173402
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      504720 (count: 721300, min: 0, max: 3592, avg: 0.70)
Time for BDD node cleanup:                             0.214s
Time for BDD garbage collection:                       1.926s (in 346 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.114s
  Time for transition matches:                         2.327s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      4146530 (count: 4146530, min: 1, max: 1, avg: 1.00) [1 x 4146530]

CPA algorithm statistics
------------------------
Number of iterations:            3153956
Max size of waitlist:            539
Average size of waitlist:        121
Number of computed successors:   3800427
Max successors for one state:    2
Number of times merged:          591024
Number of times stopped:         621625
Number of times breaked:         151

Total time for CPA algorithm:       871.177s (Max:   124.157s)
  Time for choose from waitlist:      1.289s
  Time for precision adjustment:    783.463s
  Time for transfer relation:        57.728s
  Time for merge operator:            9.766s
  Time for stop operator:             5.730s
  Time for adding to reached set:     4.809s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   151
Avg. length of target path (in blocks):               19239 (count: 151, min: 61, max: 182, avg: 127.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.784s
  Counterexample analysis:                            14.124s (Max:     0.294s, Calls: 151)
    Refinement sat check:                              4.624s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.280s
  Precision update:                                    0.205s
  ARG update:                                          5.982s

Length of refined path (in blocks):                   12569 (count: 151, min: 39, max: 160, avg: 83.24)
Number of affected states:                            10274 (count: 151, min: 1, max: 159, avg: 68.04)
Length (states) of path with itp 'true':               2144 (count: 151, min: 0, max: 57, avg: 14.20)
Length (states) of path with itp non-trivial itp:     10274 (count: 151, min: 1, max: 159, avg: 68.04)
Length (states) of path with itp 'false':               151 (count: 151, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1239 (count: 151, min: 0, max: 27, avg: 8.21)
Equal non-trivial interpolants along paths:            8884 (count: 151, min: 0, max: 157, avg: 58.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                151
Number of successful refinements:     151
Number of failed refinements:         0
Max. size of reached set before ref.: 176799
Max. size of reached set after ref.:  109113
Avg. size of reached set before ref.: 29079.69
Avg. size of reached set after ref.:  8523.28

Total time for CEGAR algorithm:     896.295s
Time for refinements:                24.058s
Average time for refinement:          0.159s
Max time for refinement:              0.740s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          739
  Total lines:            1397
  Line coverage:          0.529
  Visited conditions:     294
  Total conditions:       488
  Condition coverage:     0.602

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             56695
  Number of reached locations:   744 (39%)
    Avg states per location:     76
    Max states per location:     575 (at node N1641)
  Number of reached functions:   57 (53%)
  Number of partitions:          56185
    Avg size of partitions:      1
    Max size of partitions:      85 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [2dc189d2], stack [main, test]])
  Number of target states:       0
  Size of final wait list        536

Time for analysis setup:          3.966s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.718s
  Time for CFA construction:      2.316s
    Time for parsing file(s):     0.621s
    Time for AST to CFA:          0.733s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.596s
      Time for var class.:        0.332s
Time for Analysis:              896.295s
CPU time for analysis:          896.130s
Total time for CPAchecker:      900.265s
Total CPU time for CPAchecker:  900.090s
Time for statistics:              0.659s

Time for Garbage Collector:      42.941s (in 1329 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                696MB (   664 MiB) max;    291MB (   277 MiB) avg;    703MB (   670 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           729MB (   695 MiB) max;    417MB (   398 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9449MB (  9011 MiB) max;   8655MB (  8254 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
