scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8193z_87/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            482138 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  475709 (99%)
  Because of loop head:            6311 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         118 (0%)
  Times precision was empty:       3864 (1%)
  Times precision was {false}:     235 (0%)
  Times result was cached:         453392 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24647 (5%)
  Times result was 'false':        28637 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1116886
  BDD entailment checks:           355832
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          109
Number of abstraction locations:          149
Max number of predicates per location:    44
Avg number of predicates per location:    17
Total predicates per abstraction:         5081705
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 204.23
Number of irrelevant predicates:          1233123 (24%)
Number of preds handled by boolean abs:   447891 (9%)
  Total number of models for allsat:      2888167
  Max number of models for allsat:        47232
  Avg number of models for allsat:        117.18

Time for post operator:                 16.791s
  Time for path formula creation:       15.463s
Time for strengthen operator:            2.449s
Time for prec operator:                790.383s
  Time for abstraction:                785.480s (Max:    10.915s, Count: 482138)
    Boolean abstraction:               589.366s
    Solving time:                       61.593s (Max:     0.048s)
    Model enumeration time:            327.624s
    Time for BDD construction:         194.537s (Max:     2.659s)
Time for merge operator:                 2.745s
Time for coverage check:                 1.917s
  Time for BDD entailment checks:        1.790s
Total time for SMT solver (w/o itp):   389.229s

Number of path formula cache hits:   3356168 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.459s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               265903
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      935022 (count: 872617, min: 0, max: 8513, avg: 1.07)
Time for BDD node cleanup:                             0.267s
Time for BDD garbage collection:                      12.682s (in 1528 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.699s
  Time for transition matches:                         1.883s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      3157486 (count: 3157486, min: 1, max: 1, avg: 1.00) [1 x 3157486]

CPA algorithm statistics
------------------------
Number of iterations:            2406554
Max size of waitlist:            55
Average size of waitlist:        25
Number of computed successors:   2844083
Max successors for one state:    2
Number of times merged:          380527
Number of times stopped:         407021
Number of times breaked:         118

Total time for CPA algorithm:       873.918s (Max:   106.717s)
  Time for choose from waitlist:      1.022s
  Time for precision adjustment:    806.931s
  Time for transfer relation:        43.190s
  Time for merge operator:            7.242s
  Time for stop operator:             5.097s
  Time for adding to reached set:     3.985s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   118
Avg. length of target path (in blocks):               17122 (count: 118, min: 61, max: 224, avg: 145.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.832s
  Counterexample analysis:                            14.905s (Max:     0.358s, Calls: 118)
    Refinement sat check:                              4.613s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.287s
  Precision update:                                    0.204s
  ARG update:                                          4.208s

Length of refined path (in blocks):                   11196 (count: 118, min: 46, max: 161, avg: 94.88)
Number of affected states:                             8993 (count: 118, min: 1, max: 155, avg: 76.21)
Length (states) of path with itp 'true':               2085 (count: 118, min: 0, max: 108, avg: 17.67)
Length (states) of path with itp non-trivial itp:      8993 (count: 118, min: 1, max: 155, avg: 76.21)
Length (states) of path with itp 'false':               118 (count: 118, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         960 (count: 118, min: 0, max: 31, avg: 8.14)
Equal non-trivial interpolants along paths:            7915 (count: 118, min: 0, max: 153, avg: 67.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                118
Number of successful refinements:     118
Number of failed refinements:         0
Max. size of reached set before ref.: 247383
Max. size of reached set after ref.:  239056
Avg. size of reached set before ref.: 24009.78
Avg. size of reached set after ref.:  5725.40

Total time for CEGAR algorithm:     896.318s
Time for refinements:                21.872s
Average time for refinement:          0.185s
Max time for refinement:              1.017s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             250868
  Number of reached locations:   792 (41%)
    Avg states per location:     316
    Max states per location:     2922 (at node N400)
  Number of reached functions:   60 (56%)
  Number of partitions:          247691
    Avg size of partitions:      1
    Max size of partitions:      221 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [7835ce7d], stack [main, test]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          3.938s
  Time for loading CPAs:          0.796s
  Time for loading parser:        0.678s
  Time for CFA construction:      2.277s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.667s
    Time for CFA sanity check:    0.206s
    Time for post-processing:     0.562s
      Time for var class.:        0.307s
Time for Analysis:              896.318s
CPU time for analysis:          896.190s
Total time for CPAchecker:      900.261s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.988s

Time for Garbage Collector:      36.872s (in 1064 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                787MB (   751 MiB) max;    341MB (   325 MiB) avg;    801MB (   764 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           809MB (   771 MiB) max;    493MB (   470 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   9818MB (  9363 MiB) max;   8865MB (  8455 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
