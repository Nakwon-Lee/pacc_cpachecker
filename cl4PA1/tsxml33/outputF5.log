scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jd5o6tlv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            479301 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  472889 (99%)
  Because of loop head:            6295 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         117 (0%)
  Times precision was empty:       3856 (1%)
  Times precision was {false}:     235 (0%)
  Times result was cached:         450694 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24516 (5%)
  Times result was 'false':        28507 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1108357
  BDD entailment checks:           351457
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          109
Number of abstraction locations:          149
Max number of predicates per location:    44
Avg number of predicates per location:    17
Total predicates per abstraction:         5053826
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 204.19
Number of irrelevant predicates:          1226174 (24%)
Number of preds handled by boolean abs:   444936 (9%)
  Total number of models for allsat:      2841145
  Max number of models for allsat:        47232
  Avg number of models for allsat:        115.89

Time for post operator:                 16.276s
  Time for path formula creation:       15.036s
Time for strengthen operator:            2.683s
Time for prec operator:                790.225s
  Time for abstraction:                784.058s (Max:    10.688s, Count: 479301)
    Boolean abstraction:               583.539s
    Solving time:                       61.576s (Max:     0.077s)
    Model enumeration time:            325.887s
    Time for BDD construction:         190.476s (Max:     2.567s)
Time for merge operator:                 2.602s
Time for coverage check:                 2.022s
  Time for BDD entailment checks:        1.874s
Total time for SMT solver (w/o itp):   387.465s

Number of path formula cache hits:   3342817 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.120s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               268254
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      929021 (count: 865275, min: 0, max: 7186, avg: 1.07)
Time for BDD node cleanup:                             0.309s
Time for BDD garbage collection:                      12.436s (in 1492 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.100s
  Time for transition matches:                         2.256s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3139656 (count: 3139656, min: 1, max: 1, avg: 1.00) [1 x 3139656]

CPA algorithm statistics
------------------------
Number of iterations:            2392925
Max size of waitlist:            55
Average size of waitlist:        25
Number of computed successors:   2828077
Max successors for one state:    2
Number of times merged:          378450
Number of times stopped:         404783
Number of times breaked:         117

Total time for CPA algorithm:       873.370s (Max:   110.636s)
  Time for choose from waitlist:      1.067s
  Time for precision adjustment:    806.189s
  Time for transfer relation:        43.468s
  Time for merge operator:            6.905s
  Time for stop operator:             5.118s
  Time for adding to reached set:     4.052s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   117
Avg. length of target path (in blocks):               16912 (count: 117, min: 61, max: 224, avg: 144.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.648s
  Counterexample analysis:                            14.747s (Max:     0.360s, Calls: 117)
    Refinement sat check:                              4.581s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.219s
  Precision update:                                    0.178s
  ARG update:                                          4.299s

Length of refined path (in blocks):                   11079 (count: 117, min: 46, max: 161, avg: 94.69)
Number of affected states:                             8978 (count: 117, min: 1, max: 155, avg: 76.74)
Length (states) of path with itp 'true':               1984 (count: 117, min: 0, max: 108, avg: 16.96)
Length (states) of path with itp non-trivial itp:      8978 (count: 117, min: 1, max: 155, avg: 76.74)
Length (states) of path with itp 'false':               117 (count: 117, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         960 (count: 117, min: 0, max: 31, avg: 8.21)
Equal non-trivial interpolants along paths:            7901 (count: 117, min: 0, max: 153, avg: 67.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                117
Number of successful refinements:     117
Number of failed refinements:         0
Max. size of reached set before ref.: 226787
Max. size of reached set after ref.:  216740
Avg. size of reached set before ref.: 22100.61
Avg. size of reached set after ref.:  3731.12

Total time for CEGAR algorithm:     896.658s
Time for refinements:                22.906s
Average time for refinement:          0.195s
Max time for refinement:              2.008s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             245557
  Number of reached locations:   792 (41%)
    Avg states per location:     310
    Max states per location:     2850 (at node N400)
  Number of reached functions:   60 (56%)
  Number of partitions:          242443
    Avg size of partitions:      1
    Max size of partitions:      220 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [46c28eb0], stack [main, test]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          3.643s
  Time for loading CPAs:          0.756s
  Time for loading parser:        0.606s
  Time for CFA construction:      2.117s
    Time for parsing file(s):     0.598s
    Time for AST to CFA:          0.641s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.538s
      Time for var class.:        0.285s
Time for Analysis:              896.659s
CPU time for analysis:          896.520s
Total time for CPAchecker:      900.305s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              1.993s

Time for Garbage Collector:      37.816s (in 1103 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                781MB (   745 MiB) max;    317MB (   302 MiB) avg;    808MB (   771 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           844MB (   805 MiB) max;    479MB (   457 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9752MB (  9300 MiB) max;   8860MB (  8450 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
