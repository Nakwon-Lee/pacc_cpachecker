scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z1gzt498/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            500878 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  494467 (99%)
  Because of loop head:            6294 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         117 (0%)
  Times precision was empty:       3926 (1%)
  Times precision was {false}:     238 (0%)
  Times result was cached:         471971 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24743 (5%)
  Times result was 'false':        29197 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1131755
  BDD entailment checks:           354063
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          109
Number of abstraction locations:          149
Max number of predicates per location:    44
Avg number of predicates per location:    17
Total predicates per abstraction:         5214206
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 208.73
Number of irrelevant predicates:          1252842 (24%)
Number of preds handled by boolean abs:   445905 (9%)
  Total number of models for allsat:      2759241
  Max number of models for allsat:        47232
  Avg number of models for allsat:        111.52

Time for post operator:                 19.151s
  Time for path formula creation:       17.835s
Time for strengthen operator:            2.393s
Time for prec operator:                785.010s
  Time for abstraction:                779.113s (Max:    12.023s, Count: 500878)
    Boolean abstraction:               573.881s
    Solving time:                       62.562s (Max:     0.019s)
    Model enumeration time:            318.614s
    Time for BDD construction:         186.713s (Max:     3.484s)
Time for merge operator:                 3.024s
Time for coverage check:                 1.994s
  Time for BDD entailment checks:        1.858s
Total time for SMT solver (w/o itp):   381.178s

Number of path formula cache hits:   3462087 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.269s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               269047
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      926048 (count: 867799, min: 0, max: 7877, avg: 1.07)
Time for BDD node cleanup:                             0.374s
Time for BDD garbage collection:                      11.812s (in 1407 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.312s
  Time for transition matches:                         2.235s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      3254586 (count: 3254586, min: 1, max: 1, avg: 1.00) [1 x 3254586]

CPA algorithm statistics
------------------------
Number of iterations:            2480566
Max size of waitlist:            55
Average size of waitlist:        25
Number of computed successors:   2928122
Max successors for one state:    2
Number of times merged:          388846
Number of times stopped:         416519
Number of times breaked:         117

Total time for CPA algorithm:       873.550s (Max:   111.818s)
  Time for choose from waitlist:      1.098s
  Time for precision adjustment:    801.683s
  Time for transfer relation:        46.041s
  Time for merge operator:            7.320s
  Time for stop operator:             6.475s
  Time for adding to reached set:     4.122s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   117
Avg. length of target path (in blocks):               16912 (count: 117, min: 61, max: 224, avg: 144.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.288s
  Counterexample analysis:                            14.934s (Max:     0.376s, Calls: 117)
    Refinement sat check:                              4.615s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.357s
  Precision update:                                    0.216s
  ARG update:                                          4.598s

Length of refined path (in blocks):                   11079 (count: 117, min: 46, max: 161, avg: 94.69)
Number of affected states:                             8978 (count: 117, min: 1, max: 155, avg: 76.74)
Length (states) of path with itp 'true':               1984 (count: 117, min: 0, max: 108, avg: 16.96)
Length (states) of path with itp non-trivial itp:      8978 (count: 117, min: 1, max: 155, avg: 76.74)
Length (states) of path with itp 'false':               117 (count: 117, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         960 (count: 117, min: 0, max: 31, avg: 8.21)
Equal non-trivial interpolants along paths:            7901 (count: 117, min: 0, max: 153, avg: 67.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                117
Number of successful refinements:     117
Number of failed refinements:         0
Max. size of reached set before ref.: 237177
Max. size of reached set after ref.:  226415
Avg. size of reached set before ref.: 22888.82
Avg. size of reached set after ref.:  3864.53

Total time for CEGAR algorithm:     896.266s
Time for refinements:                22.308s
Average time for refinement:          0.190s
Max time for refinement:              1.026s

Code Coverage
-----------------------------
  Function coverage:      0.561
  Visited lines:          778
  Total lines:            1397
  Line coverage:          0.557
  Visited conditions:     308
  Total conditions:       488
  Condition coverage:     0.631

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             256564
  Number of reached locations:   792 (41%)
    Avg states per location:     323
    Max states per location:     3198 (at node N400)
  Number of reached functions:   60 (56%)
  Number of partitions:          253278
    Avg size of partitions:      1
    Max size of partitions:      220 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [4df19da8], stack [main, test]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          3.997s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.638s
  Time for CFA construction:      2.309s
    Time for parsing file(s):     0.766s
    Time for AST to CFA:          0.671s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.530s
      Time for var class.:        0.282s
Time for Analysis:              896.266s
CPU time for analysis:          896.120s
Total time for CPAchecker:      900.267s
Total CPU time for CPAchecker:  900.110s
Time for statistics:              2.105s

Time for Garbage Collector:      38.662s (in 1085 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                741MB (   707 MiB) max;    320MB (   305 MiB) avg;    767MB (   731 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           764MB (   729 MiB) max;    478MB (   456 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9748MB (  9297 MiB) max;   8836MB (  8427 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
