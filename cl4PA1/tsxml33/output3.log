scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_usdqstwk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31987 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31312 (98%)
  Because of loop head:            623 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (0%)
  Times precision was empty:       4145 (13%)
  Times precision was {false}:     243 (1%)
  Times result was cached:         26790 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      809 (3%)
  Times result was 'false':        351 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         75421
  BDD entailment checks:           4011
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          17
Number of abstraction locations:          142
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         69866
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 66.41
Number of irrelevant predicates:          41387 (59%)
Number of preds handled by boolean abs:   1400 (2%)
  Total number of models for allsat:      863
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  3.483s
  Time for path formula creation:        3.284s
Time for strengthen operator:            0.396s
Time for prec operator:                  8.049s
  Time for abstraction:                  7.379s (Max:     0.030s, Count: 31987)
    Boolean abstraction:                 1.240s
    Solving time:                        1.179s (Max:     0.015s)
    Model enumeration time:              0.111s
    Time for BDD construction:           0.093s (Max:     0.009s)
Time for merge operator:                 0.618s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     1.290s

Number of path formula cache hits:   266880 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.009s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1899 (count: 14593, min: 0, max: 374, avg: 0.13)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.796s
  Time for transition matches:                         0.429s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       252384 (count: 252384, min: 1, max: 1, avg: 1.00) [1 x 252384]

CPA algorithm statistics
------------------------
Number of iterations:            191884
Max size of waitlist:            36
Average size of waitlist:        15
Number of computed successors:   230632
Max successors for one state:    2
Number of times merged:          35705
Number of times stopped:         37865
Number of times breaked:         52

Total time for CPA algorithm:        21.918s (Max:     1.372s)
  Time for choose from waitlist:      0.255s
  Time for precision adjustment:      9.924s
  Time for transfer relation:         7.825s
  Time for merge operator:            1.487s
  Time for stop operator:             0.558s
  Time for adding to reached set:     0.650s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   52
Avg. length of target path (in blocks):                5149 (count: 52, min: 61, max: 115, avg: 99.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.915s
  Counterexample analysis:                             3.082s (Max:     0.131s, Calls: 52)
    Refinement sat check:                              1.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.085s
  ARG update:                                          0.561s

Length of refined path (in blocks):                    4799 (count: 52, min: 58, max: 111, avg: 92.29)
Number of affected states:                             4118 (count: 52, min: 57, max: 110, avg: 79.19)
Length (states) of path with itp 'true':                629 (count: 52, min: 0, max: 37, avg: 12.10)
Length (states) of path with itp non-trivial itp:      4118 (count: 52, min: 57, max: 110, avg: 79.19)
Length (states) of path with itp 'false':                52 (count: 52, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         367 (count: 52, min: 0, max: 15, avg: 7.06)
Equal non-trivial interpolants along paths:            3699 (count: 52, min: 52, max: 99, avg: 71.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                52
Number of successful refinements:     52
Number of failed refinements:         0
Max. size of reached set before ref.: 7785
Max. size of reached set after ref.:  5964
Avg. size of reached set before ref.: 5335.87
Avg. size of reached set after ref.:  1750.21

Total time for CEGAR algorithm:      26.360s
Time for refinements:                 4.388s
Average time for refinement:          0.084s
Max time for refinement:              0.164s

Code Coverage
-----------------------------
  Function coverage:      0.579
  Visited lines:          786
  Total lines:            1397
  Line coverage:          0.563
  Visited conditions:     306
  Total conditions:       488
  Condition coverage:     0.627

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             5962
  Number of reached locations:   795 (42%)
    Avg states per location:     7
    Max states per location:     32 (at node N377)
  Number of reached functions:   62 (58%)
  Number of partitions:          5921
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [47a8bc8e], stack [main, test]])
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          3.907s
  Time for loading CPAs:          0.823s
  Time for loading parser:        0.725s
  Time for CFA construction:      2.179s
    Time for parsing file(s):     0.645s
    Time for AST to CFA:          0.646s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.551s
      Time for var class.:        0.304s
Time for Analysis:               26.360s
CPU time for analysis:           26.360s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.173s

Time for Garbage Collector:       0.914s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    87 MiB) max;     51MB (    48 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
