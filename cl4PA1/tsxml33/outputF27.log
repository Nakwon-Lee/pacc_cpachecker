scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec8_product14_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hmxpa7m9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 667: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 710: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1550: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2083: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2878: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2901: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            344912 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  338325 (98%)
  Because of loop head:            6510 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         77 (0%)
  Times precision was empty:       2039 (1%)
  Times precision was {false}:     268 (0%)
  Times result was cached:         291189 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51416 (15%)
  Times result was 'false':        13753 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1934665
  BDD entailment checks:           950849
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          105
Number of abstraction locations:          149
Max number of predicates per location:    40
Avg number of predicates per location:    13
Total predicates per abstraction:         4955353
Max number of predicates per abstraction: 40
Avg number of predicates per abstraction: 95.88
Number of irrelevant predicates:          1901839 (38%)
Number of preds handled by boolean abs:   799704 (16%)
  Total number of models for allsat:      2996067
  Max number of models for allsat:        13824
  Avg number of models for allsat:        58.27

Time for post operator:                 29.436s
  Time for path formula creation:       27.873s
Time for strengthen operator:            2.678s
Time for prec operator:                766.912s
  Time for abstraction:                762.060s (Max:     2.665s, Count: 344912)
    Boolean abstraction:               542.991s
    Solving time:                      113.823s (Max:     0.317s)
    Model enumeration time:            275.345s
    Time for BDD construction:         142.818s (Max:     1.356s)
Time for merge operator:                 6.309s
Time for coverage check:                 2.886s
  Time for BDD entailment checks:        2.631s
Total time for SMT solver (w/o itp):   389.168s

Number of path formula cache hits:   2590893 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.598s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               208823
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      773398 (count: 1533289, min: 0, max: 9068, avg: 0.50)
Time for BDD node cleanup:                             0.420s
Time for BDD garbage collection:                       3.363s (in 533 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.796s
  Time for transition matches:                         2.497s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3195133 (count: 3195133, min: 1, max: 1, avg: 1.00) [1 x 3195133]

CPA algorithm statistics
------------------------
Number of iterations:            2398375
Max size of waitlist:            1246
Average size of waitlist:        376
Number of computed successors:   2933283
Max successors for one state:    2
Number of times merged:          491908
Number of times stopped:         517122
Number of times breaked:         77

Total time for CPA algorithm:       879.260s (Max:   170.093s)
  Time for choose from waitlist:      1.251s
  Time for precision adjustment:    787.988s
  Time for transfer relation:        58.687s
  Time for merge operator:           12.675s
  Time for stop operator:             6.428s
  Time for adding to reached set:     4.989s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   77
Avg. length of target path (in blocks):               10681 (count: 77, min: 65, max: 196, avg: 138.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.550s
  Counterexample analysis:                             7.262s (Max:     0.243s, Calls: 77)
    Refinement sat check:                              2.835s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.147s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.158s
  Precision update:                                    0.121s
  ARG update:                                          5.740s

Length of refined path (in blocks):                    6975 (count: 77, min: 39, max: 170, avg: 90.58)
Number of affected states:                             6099 (count: 77, min: 1, max: 169, avg: 79.21)
Length (states) of path with itp 'true':                799 (count: 77, min: 0, max: 68, avg: 10.38)
Length (states) of path with itp non-trivial itp:      6099 (count: 77, min: 1, max: 169, avg: 79.21)
Length (states) of path with itp 'false':                77 (count: 77, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         383 (count: 77, min: 0, max: 25, avg: 4.97)
Equal non-trivial interpolants along paths:            5639 (count: 77, min: 0, max: 167, avg: 73.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                77
Number of successful refinements:     77
Number of failed refinements:         0
Max. size of reached set before ref.: 409542
Max. size of reached set after ref.:  251070
Avg. size of reached set before ref.: 41296.69
Avg. size of reached set after ref.:  11364.01

Total time for CEGAR algorithm:     895.995s
Time for refinements:                15.921s
Average time for refinement:          0.206s
Max time for refinement:              1.394s

Code Coverage
-----------------------------
  Function coverage:      0.346
  Visited lines:          511
  Total lines:            1397
  Line coverage:          0.366
  Visited conditions:     200
  Total conditions:       488
  Condition coverage:     0.410

CPAchecker general statistics
-----------------------------
Number of program locations:     1914
Number of CFA edges:             2166
Number of relevant variables:    315
Number of functions:             107
Number of loops:                 4
Size of reached set:             97592
  Number of reached locations:   491 (26%)
    Avg states per location:     198
    Max states per location:     965 (at node N1641)
  Number of reached functions:   37 (35%)
  Number of partitions:          96718
    Avg size of partitions:      1
    Max size of partitions:      178 (with key [N948 (before lines 1339-1506), Function test called from node N2052, stack depth 2 [39532605], stack [main, test]])
  Number of target states:       0
  Size of final wait list        333

Time for analysis setup:          4.275s
  Time for loading CPAs:          0.949s
  Time for loading parser:        0.726s
  Time for CFA construction:      2.382s
    Time for parsing file(s):     0.821s
    Time for AST to CFA:          0.672s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     0.539s
      Time for var class.:        0.289s
Time for Analysis:              895.995s
CPU time for analysis:          895.850s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.167s

Time for Garbage Collector:      44.798s (in 669 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1296MB (  1236 MiB) max;    604MB (   576 MiB) avg;   1318MB (  1257 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1325MB (  1263 MiB) max;    877MB (   836 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9881MB (  9424 MiB) max;   8948MB (  8533 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
