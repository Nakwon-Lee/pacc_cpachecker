scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product19_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jce85gwi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 143: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 180: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 256: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 295: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 369: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 443: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 534: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1223: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1351: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1383: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1872: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1967: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2012: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2090: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2159: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2578: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2685: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 691: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9632 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9497 (99%)
  Because of loop head:            90 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       4204 (44%)
  Times precision was {false}:     170 (2%)
  Times result was cached:         5141 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      117 (1%)
  Times result was 'false':        165 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         12549
  BDD entailment checks:           891
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          5
Number of abstraction locations:          124
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         6024
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 20.99
Number of irrelevant predicates:          4165 (69%)
Number of preds handled by boolean abs:   119 (2%)
  Total number of models for allsat:      118
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.920s
  Time for path formula creation:        1.831s
Time for strengthen operator:            0.152s
Time for prec operator:                  2.554s
  Time for abstraction:                  2.181s (Max:     0.017s, Count: 9632)
    Boolean abstraction:                 0.236s
    Solving time:                        0.406s (Max:     0.015s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.032s (Max:     0.008s)
Time for merge operator:                 0.298s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.411s

Number of path formula cache hits:   56756 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.662s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         235 (count: 6661, min: 0, max: 137, avg: 0.04)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.411s
Automaton transfers with branching:                0
Automaton transfer successors:                        57071 (count: 57071, min: 1, max: 1, avg: 1.00) [1 x 57071]

CPA algorithm statistics
------------------------
Number of iterations:            42217
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   48986
Max successors for one state:    2
Number of times merged:          5829
Number of times stopped:         6399
Number of times breaked:         45

Total time for CPA algorithm:         9.399s (Max:     0.966s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:      3.515s
  Time for transfer relation:         3.827s
  Time for merge operator:            0.602s
  Time for stop operator:             0.246s
  Time for adding to reached set:     0.340s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                4203 (count: 45, min: 62, max: 131, avg: 93.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.828s
  Counterexample analysis:                             2.252s (Max:     0.078s, Calls: 45)
    Refinement sat check:                              1.080s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.108s
  ARG update:                                          0.288s

Length of refined path (in blocks):                    3878 (count: 45, min: 61, max: 130, avg: 86.18)
Number of affected states:                             1021 (count: 45, min: 1, max: 96, avg: 22.69)
Length (states) of path with itp 'true':               2812 (count: 45, min: 0, max: 128, avg: 62.49)
Length (states) of path with itp non-trivial itp:      1021 (count: 45, min: 1, max: 96, avg: 22.69)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 45, min: 0, max: 1, avg: 0.24)
Equal non-trivial interpolants along paths:             965 (count: 45, min: 0, max: 94, avg: 21.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 2775
Max. size of reached set after ref.:  1211
Avg. size of reached set before ref.: 1430.84
Avg. size of reached set after ref.:  536.22

Total time for CEGAR algorithm:      12.489s
Time for refinements:                 3.067s
Average time for refinement:          0.068s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          760
  Total lines:            1373
  Line coverage:          0.554
  Visited conditions:     252
  Total conditions:       486
  Condition coverage:     0.519

CPAchecker general statistics
-----------------------------
Number of program locations:     1890
Number of CFA edges:             2133
Number of relevant variables:    321
Number of functions:             108
Number of loops:                 4
Size of reached set:             2165
  Number of reached locations:   741 (39%)
    Avg states per location:     2
    Max states per location:     15 (at node N1042)
  Number of reached functions:   69 (64%)
  Number of partitions:          2156
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N915 (before line 1282), Function outgoing called from node N965, stack depth 5 [6e15cbbd], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          3.883s
  Time for loading CPAs:          0.755s
  Time for loading parser:        0.735s
  Time for CFA construction:      2.217s
    Time for parsing file(s):     0.658s
    Time for AST to CFA:          0.660s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.565s
      Time for var class.:        0.299s
Time for Analysis:               12.489s
CPU time for analysis:           12.490s
Time for analyzing result:        0.003s
Total time for CPAchecker:       16.376s
Total CPU time for CPAchecker:   16.360s
Time for statistics:              0.140s

Time for Garbage Collector:       0.279s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8064MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
