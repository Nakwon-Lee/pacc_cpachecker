scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product24_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ygatnnv_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1223: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1445: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1508: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1615: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1788: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1820: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1935: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2038: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2114: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2153: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2190: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2264: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2301: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2338: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2371: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9386 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9167 (98%)
  Because of loop head:            158 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (1%)
  Times precision was empty:       4482 (48%)
  Times precision was {false}:     210 (2%)
  Times result was cached:         4573 (49%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      121 (1%)
  Times result was 'false':        132 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         16543
  BDD entailment checks:           1019
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          5
Number of abstraction locations:          130
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         5252
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 15.87
Number of irrelevant predicates:          3609 (69%)
Number of preds handled by boolean abs:   122 (2%)
  Total number of models for allsat:      122
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.931s
  Time for path formula creation:        2.807s
Time for strengthen operator:            0.210s
Time for prec operator:                  2.715s
  Time for abstraction:                  2.335s (Max:     0.019s, Count: 9386)
    Boolean abstraction:                 0.225s
    Solving time:                        0.438s (Max:     0.014s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.028s (Max:     0.008s)
Time for merge operator:                 0.460s
Time for coverage check:                 0.063s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     0.446s

Number of path formula cache hits:   48732 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.609s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         238 (count: 7289, min: 0, max: 138, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.479s
Automaton transfers with branching:                0
Automaton transfer successors:                        63678 (count: 63678, min: 1, max: 1, avg: 1.00) [1 x 63678]

CPA algorithm statistics
------------------------
Number of iterations:            47799
Max size of waitlist:            20
Average size of waitlist:        12
Number of computed successors:   56538
Max successors for one state:    2
Number of times merged:          7762
Number of times stopped:         8451
Number of times breaked:         61

Total time for CPA algorithm:        11.277s (Max:     1.110s)
  Time for choose from waitlist:      0.166s
  Time for precision adjustment:      3.573s
  Time for transfer relation:         5.312s
  Time for merge operator:            0.814s
  Time for stop operator:             0.298s
  Time for adding to reached set:     0.348s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   61
Avg. length of target path (in blocks):                5448 (count: 61, min: 74, max: 134, avg: 89.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.512s
  Counterexample analysis:                             2.989s (Max:     0.083s, Calls: 61)
    Refinement sat check:                              1.530s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.121s
  ARG update:                                          0.226s

Length of refined path (in blocks):                    4942 (count: 61, min: 60, max: 97, avg: 81.02)
Number of affected states:                             1122 (count: 61, min: 1, max: 96, avg: 18.39)
Length (states) of path with itp 'true':               3759 (count: 61, min: 0, max: 88, avg: 61.62)
Length (states) of path with itp non-trivial itp:      1122 (count: 61, min: 1, max: 96, avg: 18.39)
Length (states) of path with itp 'false':                61 (count: 61, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 61, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:            1049 (count: 61, min: 0, max: 94, avg: 17.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                61
Number of successful refinements:     61
Number of failed refinements:         0
Max. size of reached set before ref.: 3998
Max. size of reached set after ref.:  3153
Avg. size of reached set before ref.: 1953.41
Avg. size of reached set after ref.:  1207.33

Total time for CEGAR algorithm:      15.284s
Time for refinements:                 3.920s
Average time for refinement:          0.064s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          799
  Total lines:            1393
  Line coverage:          0.574
  Visited conditions:     266
  Total conditions:       488
  Condition coverage:     0.545

CPAchecker general statistics
-----------------------------
Number of program locations:     1921
Number of CFA edges:             2170
Number of relevant variables:    334
Number of functions:             111
Number of loops:                 4
Size of reached set:             2445
  Number of reached locations:   789 (41%)
    Avg states per location:     3
    Max states per location:     15 (at node N2130)
  Number of reached functions:   74 (67%)
  Number of partitions:          2434
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1976 (before line 2656), Function outgoing called from node N2037, stack depth 5 [41ff6f38], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.015s
  Time for loading CPAs:          0.765s
  Time for loading parser:        0.687s
  Time for CFA construction:      2.342s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          0.703s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.550s
      Time for var class.:        0.293s
Time for Analysis:               15.285s
CPU time for analysis:           15.290s
Time for analyzing result:        0.010s
Total time for CPAchecker:       19.304s
Total CPU time for CPAchecker:   19.300s
Time for statistics:              0.155s

Time for Garbage Collector:       0.325s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8068MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
