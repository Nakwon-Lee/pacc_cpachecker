scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product08_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p7jrmyy1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 387: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 556: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 634: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 967: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1014: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1547: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1556: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1590: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2053: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2181: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2220: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2407: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2444: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2512: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1844: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4279 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4067 (95%)
  Because of loop head:            179 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (1%)
  Times precision was empty:       1419 (33%)
  Times precision was {false}:     160 (4%)
  Times result was cached:         2604 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      96 (2%)
  Times result was 'false':        36 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         9568
  BDD entailment checks:           552
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       41
Number of predicates discovered:          4
Number of abstraction locations:          108
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2860
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.17
Number of irrelevant predicates:          1573 (55%)
Number of preds handled by boolean abs:   96 (3%)
  Total number of models for allsat:      98
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.280s
  Time for path formula creation:        2.205s
Time for strengthen operator:            0.077s
Time for prec operator:                  2.002s
  Time for abstraction:                  1.785s (Max:     0.021s, Count: 4279)
    Boolean abstraction:                 0.193s
    Solving time:                        0.340s (Max:     0.013s)
    Model enumeration time:              0.024s
    Time for BDD construction:           0.008s (Max:     0.004s)
Time for merge operator:                 0.306s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.364s

Number of path formula cache hits:   21908 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.086s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         195 (count: 3356, min: 0, max: 70, avg: 0.06)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.294s
Automaton transfers with branching:                0
Automaton transfer successors:                        32650 (count: 32650, min: 1, max: 1, avg: 1.00) [1 x 32650]

CPA algorithm statistics
------------------------
Number of iterations:            24796
Max size of waitlist:            34
Average size of waitlist:        13
Number of computed successors:   29749
Max successors for one state:    2
Number of times merged:          4508
Number of times stopped:         4862
Number of times breaked:         33

Total time for CPA algorithm:         8.198s (Max:     1.312s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:      2.502s
  Time for transfer relation:         3.946s
  Time for merge operator:            0.660s
  Time for stop operator:             0.272s
  Time for adding to reached set:     0.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                2554 (count: 33, min: 63, max: 105, avg: 77.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.736s
  Counterexample analysis:                             1.366s (Max:     0.069s, Calls: 33)
    Refinement sat check:                              0.672s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.045s
  ARG update:                                          0.184s

Length of refined path (in blocks):                    2268 (count: 33, min: 62, max: 81, avg: 68.73)
Number of affected states:                              815 (count: 33, min: 1, max: 80, avg: 24.70)
Length (states) of path with itp 'true':               1420 (count: 33, min: 0, max: 77, avg: 43.03)
Length (states) of path with itp non-trivial itp:       815 (count: 33, min: 1, max: 80, avg: 24.70)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 33, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:             771 (count: 33, min: 0, max: 78, avg: 23.36)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 2299
Max. size of reached set after ref.:  2037
Avg. size of reached set before ref.: 1873.70
Avg. size of reached set after ref.:  1157.58

Total time for CEGAR algorithm:      10.242s
Time for refinements:                 2.007s
Average time for refinement:          0.060s
Max time for refinement:              0.108s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          582
  Total lines:            1321
  Line coverage:          0.441
  Visited conditions:     186
  Total conditions:       476
  Condition coverage:     0.391

CPAchecker general statistics
-----------------------------
Number of program locations:     1813
Number of CFA edges:             2038
Number of relevant variables:    275
Number of functions:             102
Number of loops:                 4
Size of reached set:             1220
  Number of reached locations:   551 (30%)
    Avg states per location:     2
    Max states per location:     10 (at node N723)
  Number of reached functions:   52 (51%)
  Number of partitions:          1215
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1054 (before line 1450), Function mail called from node N1061, stack depth 6 [511f21f9], stack [main, test, bobToRjh, sendEmail, outgoing, mail]])
  Number of target states:       0

Time for analysis setup:          4.135s
  Time for loading CPAs:          0.734s
  Time for loading parser:        0.732s
  Time for CFA construction:      2.442s
    Time for parsing file(s):     0.726s
    Time for AST to CFA:          0.748s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.570s
      Time for var class.:        0.306s
Time for Analysis:               10.243s
CPU time for analysis:           10.240s
Time for analyzing result:        0.001s
Total time for CPAchecker:       14.381s
Total CPU time for CPAchecker:   14.370s
Time for statistics:              0.118s

Time for Garbage Collector:       0.266s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     39MB (    37 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8061MB (  7688 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
