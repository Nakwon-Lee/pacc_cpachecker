scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product07_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fd4hy9f3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 521: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 569: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 616: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 808: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 942: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1025: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1388: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1507: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1819: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1869: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1938: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1974: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1997: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2521: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2567: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2358: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1583 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1549 (98%)
  Because of loop head:            23 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (1%)
  Times precision was empty:       569 (36%)
  Times precision was {false}:     137 (9%)
  Times result was cached:         794 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      83 (5%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2883
  BDD entailment checks:           97
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          4
Number of abstraction locations:          78
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1014
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.61
Number of irrelevant predicates:          625 (62%)
Number of preds handled by boolean abs:   83 (8%)
  Total number of models for allsat:      85
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.319s
  Time for path formula creation:        1.258s
Time for strengthen operator:            0.093s
Time for prec operator:                  1.124s
  Time for abstraction:                  0.980s (Max:     0.029s, Count: 1583)
    Boolean abstraction:                 0.172s
    Solving time:                        0.205s (Max:     0.015s)
    Model enumeration time:              0.030s
    Time for BDD construction:           0.018s (Max:     0.012s)
Time for merge operator:                 0.203s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.235s

Number of path formula cache hits:   6256 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.218s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         166 (count: 1858, min: 0, max: 66, avg: 0.09)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.137s
Automaton transfers with branching:                0
Automaton transfer successors:                        11052 (count: 11052, min: 1, max: 1, avg: 1.00) [1 x 11052]

CPA algorithm statistics
------------------------
Number of iterations:            8118
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   9602
Max successors for one state:    2
Number of times merged:          1393
Number of times stopped:         1448
Number of times breaked:         11

Total time for CPA algorithm:         4.505s (Max:     1.420s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:      1.452s
  Time for transfer relation:         2.217s
  Time for merge operator:            0.348s
  Time for stop operator:             0.108s
  Time for adding to reached set:     0.116s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                1057 (count: 11, min: 54, max: 125, avg: 96.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.802s
  Counterexample analysis:                             0.636s (Max:     0.094s, Calls: 11)
    Refinement sat check:                              0.291s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.019s
  ARG update:                                          0.076s

Length of refined path (in blocks):                     942 (count: 11, min: 53, max: 124, avg: 85.64)
Number of affected states:                              333 (count: 11, min: 1, max: 96, avg: 30.27)
Length (states) of path with itp 'true':                598 (count: 11, min: 0, max: 122, avg: 54.36)
Length (states) of path with itp non-trivial itp:       333 (count: 11, min: 1, max: 96, avg: 30.27)
Length (states) of path with itp 'false':                11 (count: 11, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 11, min: 0, max: 1, avg: 0.36)
Equal non-trivial interpolants along paths:             318 (count: 11, min: 0, max: 94, avg: 28.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 1608
Max. size of reached set after ref.:  1547
Avg. size of reached set before ref.: 1391.73
Avg. size of reached set after ref.:  795.55

Total time for CEGAR algorithm:       5.468s
Time for refinements:                 0.943s
Average time for refinement:          0.085s
Max time for refinement:              0.207s

Code Coverage
-----------------------------
  Function coverage:      0.451
  Visited lines:          532
  Total lines:            1280
  Line coverage:          0.416
  Visited conditions:     180
  Total conditions:       474
  Condition coverage:     0.380

CPAchecker general statistics
-----------------------------
Number of program locations:     1740
Number of CFA edges:             1952
Number of relevant variables:    288
Number of functions:             91
Number of loops:                 4
Size of reached set:             1584
  Number of reached locations:   486 (28%)
    Avg states per location:     3
    Max states per location:     14 (at node N1332)
  Number of reached functions:   41 (45%)
  Number of partitions:          1570
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1283 (before line 1717), Function mail called from node N1290, stack depth 7 [72ce812e], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail]])
  Number of target states:       0

Time for analysis setup:          3.909s
  Time for loading CPAs:          0.771s
  Time for loading parser:        0.725s
  Time for CFA construction:      2.174s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.639s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.520s
      Time for var class.:        0.260s
Time for Analysis:                5.468s
CPU time for analysis:            5.470s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.381s
Total CPU time for CPAchecker:    9.370s
Time for statistics:              0.103s

Time for Garbage Collector:       0.161s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     35MB (    34 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8050MB (  7677 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
