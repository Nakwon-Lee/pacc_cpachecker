scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product36_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ev6ogo61/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 94: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 131: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 168: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 207: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 357: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1354: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1593: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1727: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1949: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2012: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2173: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2245: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2292: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2329: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2528: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2627: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 604: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2786 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2733 (98%)
  Because of loop head:            25 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (1%)
  Times precision was empty:       1428 (51%)
  Times precision was {false}:     115 (4%)
  Times result was cached:         1177 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      66 (2%)
  Times result was 'false':        40 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         4084
  BDD entailment checks:           170
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          4
Number of abstraction locations:          76
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1358
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 7.50
Number of irrelevant predicates:          1035 (76%)
Number of preds handled by boolean abs:   66 (5%)
  Total number of models for allsat:      68
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.181s
  Time for path formula creation:        1.136s
Time for strengthen operator:            0.049s
Time for prec operator:                  1.155s
  Time for abstraction:                  1.006s (Max:     0.028s, Count: 2786)
    Boolean abstraction:                 0.142s
    Solving time:                        0.183s (Max:     0.026s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.006s (Max:     0.004s)
Time for merge operator:                 0.173s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.185s

Number of path formula cache hits:   12536 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.051s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         121 (count: 2578, min: 0, max: 74, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.201s
Automaton transfers with branching:                0
Automaton transfer successors:                        17638 (count: 17638, min: 1, max: 1, avg: 1.00) [1 x 17638]

CPA algorithm statistics
------------------------
Number of iterations:            12909
Max size of waitlist:            12
Average size of waitlist:        6
Number of computed successors:   15069
Max successors for one state:    2
Number of times merged:          1957
Number of times stopped:         2075
Number of times breaked:         28

Total time for CPA algorithm:         4.743s (Max:     0.668s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      1.536s
  Time for transfer relation:         2.260s
  Time for merge operator:            0.349s
  Time for stop operator:             0.094s
  Time for adding to reached set:     0.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                2092 (count: 28, min: 55, max: 100, avg: 74.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.324s
  Counterexample analysis:                             1.071s (Max:     0.056s, Calls: 28)
    Refinement sat check:                              0.558s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.040s
  ARG update:                                          0.104s

Length of refined path (in blocks):                    1956 (count: 28, min: 54, max: 99, avg: 69.86)
Number of affected states:                              281 (count: 28, min: 1, max: 70, avg: 10.04)
Length (states) of path with itp 'true':               1647 (count: 28, min: 0, max: 97, avg: 58.82)
Length (states) of path with itp non-trivial itp:       281 (count: 28, min: 1, max: 70, avg: 10.04)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 28, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             249 (count: 28, min: 0, max: 68, avg: 8.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 3161
Max. size of reached set after ref.:  2774
Avg. size of reached set before ref.: 1539.25
Avg. size of reached set after ref.:  1147.29

Total time for CEGAR algorithm:       6.305s
Time for refinements:                 1.516s
Average time for refinement:          0.054s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.511
  Visited lines:          597
  Total lines:            1296
  Line coverage:          0.461
  Visited conditions:     198
  Total conditions:       476
  Condition coverage:     0.416

CPAchecker general statistics
-----------------------------
Number of program locations:     1767
Number of CFA edges:             1985
Number of relevant variables:    300
Number of functions:             94
Number of loops:                 4
Size of reached set:             1980
  Number of reached locations:   554 (31%)
    Avg states per location:     3
    Max states per location:     18 (at node N88)
  Number of reached functions:   48 (51%)
  Number of partitions:          1972
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1858 (before line 2452), Function incoming called from node N1792, stack depth 8 [4df13dd0], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          3.845s
  Time for loading CPAs:          0.777s
  Time for loading parser:        0.705s
  Time for CFA construction:      2.178s
    Time for parsing file(s):     0.594s
    Time for AST to CFA:          0.700s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.545s
      Time for var class.:        0.289s
Time for Analysis:                6.306s
CPU time for analysis:            6.310s
Time for analyzing result:        0.002s
Total time for CPAchecker:       10.155s
Total CPU time for CPAchecker:   10.150s
Time for statistics:              0.121s

Time for Garbage Collector:       0.151s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     37MB (    35 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8054MB (  7681 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
