scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jyjtbw51/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 79: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14650 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14244 (97%)
  Because of loop head:            281 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         125 (1%)
  Times precision was empty:       4983 (34%)
  Times precision was {false}:     301 (2%)
  Times result was cached:         9222 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      144 (1%)
  Times result was 'false':        291 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         29973
  BDD entailment checks:           1581
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          149
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10543
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.69
Number of irrelevant predicates:          8096 (77%)
Number of preds handled by boolean abs:   145 (1%)
  Total number of models for allsat:      145
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.530s
  Time for path formula creation:        3.340s
Time for strengthen operator:            0.206s
Time for prec operator:                  3.476s
  Time for abstraction:                  2.987s (Max:     0.017s, Count: 14650)
    Boolean abstraction:                 0.295s
    Solving time:                        0.566s (Max:     0.015s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.033s (Max:     0.010s)
Time for merge operator:                 0.491s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.579s

Number of path formula cache hits:   80786 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.076s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         286 (count: 8945, min: 0, max: 76, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.522s
  Time for transition matches:                         0.220s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       106379 (count: 106379, min: 1, max: 1, avg: 1.00) [1 x 106379]

CPA algorithm statistics
------------------------
Number of iterations:            80652
Max size of waitlist:            29
Average size of waitlist:        10
Number of computed successors:   96524
Max successors for one state:    2
Number of times merged:          14196
Number of times stopped:         15319
Number of times breaked:         125

Total time for CPA algorithm:        14.106s (Max:     1.557s)
  Time for choose from waitlist:      0.143s
  Time for precision adjustment:      4.796s
  Time for transfer relation:         6.503s
  Time for merge operator:            0.954s
  Time for stop operator:             0.383s
  Time for adding to reached set:     0.374s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   125
Avg. length of target path (in blocks):               12580 (count: 125, min: 76, max: 136, avg: 100.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.817s
  Counterexample analysis:                             5.884s (Max:     0.096s, Calls: 125)
    Refinement sat check:                              2.976s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.110s
  Precision update:                                    0.152s
  ARG update:                                          0.364s

Length of refined path (in blocks):                   11823 (count: 125, min: 63, max: 130, avg: 94.58)
Number of affected states:                             1538 (count: 125, min: 1, max: 96, avg: 12.30)
Length (states) of path with itp 'true':              10160 (count: 125, min: 0, max: 128, avg: 81.28)
Length (states) of path with itp non-trivial itp:      1538 (count: 125, min: 1, max: 96, avg: 12.30)
Length (states) of path with itp 'false':               125 (count: 125, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 125, min: 0, max: 1, avg: 0.13)
Equal non-trivial interpolants along paths:            1397 (count: 125, min: 0, max: 94, avg: 11.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                125
Number of successful refinements:     125
Number of failed refinements:         0
Max. size of reached set before ref.: 5726
Max. size of reached set after ref.:  5446
Avg. size of reached set before ref.: 3650.93
Avg. size of reached set after ref.:  3027.12

Total time for CEGAR algorithm:      22.384s
Time for refinements:                 7.902s
Average time for refinement:          0.063s
Max time for refinement:              0.136s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          839
  Total lines:            1408
  Line coverage:          0.596
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2192
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             2939
  Number of reached locations:   874 (45%)
    Avg states per location:     3
    Max states per location:     30 (at node N2145)
  Number of reached functions:   72 (65%)
  Number of partitions:          2931
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2036 (before line 2748), Function incoming called from node N1965, stack depth 9 [6333f59], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          4.030s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.711s
  Time for CFA construction:      2.343s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.701s
    Time for CFA sanity check:    0.221s
    Time for post-processing:     0.577s
      Time for var class.:        0.306s
Time for Analysis:               22.384s
CPU time for analysis:           22.380s
Time for analyzing result:        0.003s
Total time for CPAchecker:       26.418s
Total CPU time for CPAchecker:   26.400s
Time for statistics:              0.134s

Time for Garbage Collector:       0.639s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     50MB (    48 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
