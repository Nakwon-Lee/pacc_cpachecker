scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6pz1gvw5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 79: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13994 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13757 (98%)
  Because of loop head:            104 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         133 (1%)
  Times precision was empty:       5562 (40%)
  Times precision was {false}:     211 (2%)
  Times result was cached:         8093 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (1%)
  Times result was 'false':        336 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         20323
  BDD entailment checks:           1299
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          135
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         9362
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 27.62
Number of irrelevant predicates:          7381 (79%)
Number of preds handled by boolean abs:   129 (1%)
  Total number of models for allsat:      129
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.856s
  Time for path formula creation:        1.750s
Time for strengthen operator:            0.205s
Time for prec operator:                  3.150s
  Time for abstraction:                  2.705s (Max:     0.032s, Count: 13994)
    Boolean abstraction:                 0.226s
    Solving time:                        0.472s (Max:     0.015s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.021s (Max:     0.004s)
Time for merge operator:                 0.260s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     0.476s

Number of path formula cache hits:   91721 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.613s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         254 (count: 8696, min: 0, max: 144, avg: 0.03)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.397s
Automaton transfers with branching:                0
Automaton transfer successors:                        85010 (count: 85010, min: 1, max: 1, avg: 1.00) [1 x 85010]

CPA algorithm statistics
------------------------
Number of iterations:            64140
Max size of waitlist:            31
Average size of waitlist:        15
Number of computed successors:   75216
Max successors for one state:    2
Number of times merged:          9512
Number of times stopped:         10473
Number of times breaked:         133

Total time for CPA algorithm:        10.459s (Max:     0.906s)
  Time for choose from waitlist:      0.093s
  Time for precision adjustment:      4.272s
  Time for transfer relation:         4.206s
  Time for merge operator:            0.575s
  Time for stop operator:             0.260s
  Time for adding to reached set:     0.281s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   133
Avg. length of target path (in blocks):               14864 (count: 133, min: 78, max: 171, avg: 111.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.185s
  Counterexample analysis:                             7.462s (Max:     0.113s, Calls: 133)
    Refinement sat check:                              3.407s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.115s
  ARG update:                                          0.278s

Length of refined path (in blocks):                   14222 (count: 133, min: 63, max: 170, avg: 106.93)
Number of affected states:                             1200 (count: 133, min: 1, max: 96, avg: 9.02)
Length (states) of path with itp 'true':              12889 (count: 133, min: 0, max: 168, avg: 96.91)
Length (states) of path with itp non-trivial itp:      1200 (count: 133, min: 1, max: 96, avg: 9.02)
Length (states) of path with itp 'false':               133 (count: 133, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 133, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:            1055 (count: 133, min: 0, max: 94, avg: 7.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                133
Number of successful refinements:     133
Number of failed refinements:         0
Max. size of reached set before ref.: 4345
Max. size of reached set after ref.:  2908
Avg. size of reached set before ref.: 1980.80
Avg. size of reached set after ref.:  1525.60

Total time for CEGAR algorithm:      19.754s
Time for refinements:                 8.964s
Average time for refinement:          0.067s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          839
  Total lines:            1408
  Line coverage:          0.596
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2192
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             3867
  Number of reached locations:   874 (45%)
    Avg states per location:     4
    Max states per location:     45 (at node N2145)
  Number of reached functions:   72 (65%)
  Number of partitions:          3857
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2008 (before line 2697), Function outgoing called from node N2055, stack depth 5 [7bca7915], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.168s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.747s
  Time for CFA construction:      2.380s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.749s
    Time for CFA sanity check:    0.213s
    Time for post-processing:     0.604s
      Time for var class.:        0.332s
Time for Analysis:               19.754s
CPU time for analysis:           19.760s
Time for analyzing result:        0.003s
Total time for CPAchecker:       23.931s
Total CPU time for CPAchecker:   23.930s
Time for statistics:              0.133s

Time for Garbage Collector:       0.399s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
