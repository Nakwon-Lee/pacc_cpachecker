scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_say8cehf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 79: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12971 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12697 (98%)
  Because of loop head:            165 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109 (1%)
  Times precision was empty:       3684 (28%)
  Times precision was {false}:     294 (2%)
  Times result was cached:         8850 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      143 (1%)
  Times result was 'false':        266 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         24692
  BDD entailment checks:           1132
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          149
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         10097
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.11
Number of irrelevant predicates:          7705 (76%)
Number of preds handled by boolean abs:   144 (1%)
  Total number of models for allsat:      144
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.361s
  Time for path formula creation:        3.124s
Time for strengthen operator:            0.140s
Time for prec operator:                  3.434s
  Time for abstraction:                  2.939s (Max:     0.030s, Count: 12971)
    Boolean abstraction:                 0.259s
    Solving time:                        0.583s (Max:     0.015s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.030s (Max:     0.006s)
Time for merge operator:                 0.512s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.600s

Number of path formula cache hits:   70401 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.913s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         279 (count: 7155, min: 0, max: 81, avg: 0.04)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.478s
Automaton transfers with branching:                0
Automaton transfer successors:                        91114 (count: 91114, min: 1, max: 1, avg: 1.00) [1 x 91114]

CPA algorithm statistics
------------------------
Number of iterations:            68958
Max size of waitlist:            19
Average size of waitlist:        12
Number of computed successors:   82255
Max successors for one state:    2
Number of times merged:          11780
Number of times stopped:         12767
Number of times breaked:         109

Total time for CPA algorithm:        13.082s (Max:     1.308s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:      4.433s
  Time for transfer relation:         6.050s
  Time for merge operator:            1.014s
  Time for stop operator:             0.253s
  Time for adding to reached set:     0.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   109
Avg. length of target path (in blocks):               11020 (count: 109, min: 76, max: 136, avg: 101.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.260s
  Counterexample analysis:                             5.535s (Max:     0.085s, Calls: 109)
    Refinement sat check:                              2.701s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.075s
  Precision update:                                    0.192s
  ARG update:                                          0.285s

Length of refined path (in blocks):                   10279 (count: 109, min: 63, max: 130, avg: 94.30)
Number of affected states:                             1522 (count: 109, min: 1, max: 96, avg: 13.96)
Length (states) of path with itp 'true':               8648 (count: 109, min: 0, max: 128, avg: 79.34)
Length (states) of path with itp non-trivial itp:      1522 (count: 109, min: 1, max: 96, avg: 13.96)
Length (states) of path with itp 'false':               109 (count: 109, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 109, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:            1397 (count: 109, min: 0, max: 94, avg: 12.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                109
Number of successful refinements:     109
Number of failed refinements:         0
Max. size of reached set before ref.: 4922
Max. size of reached set after ref.:  4584
Avg. size of reached set before ref.: 2717.39
Avg. size of reached set after ref.:  2109.10

Total time for CEGAR algorithm:      20.421s
Time for refinements:                 7.104s
Average time for refinement:          0.065s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          839
  Total lines:            1408
  Line coverage:          0.596
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2192
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             2919
  Number of reached locations:   874 (45%)
    Avg states per location:     3
    Max states per location:     30 (at node N2145)
  Number of reached functions:   72 (65%)
  Number of partitions:          2918
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2036 (before line 2748), Function incoming called from node N1965, stack depth 9 [330bbae4], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AddressBook, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          4.112s
  Time for loading CPAs:          0.840s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.480s
    Time for parsing file(s):     0.744s
    Time for AST to CFA:          0.785s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.589s
      Time for var class.:        0.307s
Time for Analysis:               20.421s
CPU time for analysis:           20.410s
Time for analyzing result:        0.003s
Total time for CPAchecker:       24.538s
Total CPU time for CPAchecker:   24.520s
Time for statistics:              0.147s

Time for Garbage Collector:       0.543s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     44MB (    42 MiB) avg;     76MB (    72 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
