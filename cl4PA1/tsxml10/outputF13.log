scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m6x9ey5q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 79: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 641: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 765: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 957: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1174: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1537: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1609: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2239: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2334: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2449: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2486: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2523: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2597: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2813: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2838: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            13990 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13698 (98%)
  Because of loop head:            158 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         134 (1%)
  Times precision was empty:       5943 (42%)
  Times precision was {false}:     247 (2%)
  Times result was cached:         7672 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      128 (1%)
  Times result was 'false':        324 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         26096
  BDD entailment checks:           1384
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          135
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8959
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 23.89
Number of irrelevant predicates:          7089 (79%)
Number of preds handled by boolean abs:   129 (1%)
  Total number of models for allsat:      129
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.483s
  Time for path formula creation:        3.279s
Time for strengthen operator:            0.168s
Time for prec operator:                  3.013s
  Time for abstraction:                  2.618s (Max:     0.017s, Count: 13990)
    Boolean abstraction:                 0.247s
    Solving time:                        0.425s (Max:     0.015s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.041s (Max:     0.008s)
Time for merge operator:                 0.612s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     0.435s

Number of path formula cache hits:   76850 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.062s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         256 (count: 9342, min: 0, max: 125, avg: 0.03)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.545s
  Time for transition matches:                         0.180s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                        96758 (count: 96758, min: 1, max: 1, avg: 1.00) [1 x 96758]

CPA algorithm statistics
------------------------
Number of iterations:            73210
Max size of waitlist:            21
Average size of waitlist:        13
Number of computed successors:   87185
Max successors for one state:    2
Number of times merged:          12356
Number of times stopped:         13410
Number of times breaked:         134

Total time for CPA algorithm:        13.478s (Max:     1.088s)
  Time for choose from waitlist:      0.140s
  Time for precision adjustment:      4.159s
  Time for transfer relation:         6.309s
  Time for merge operator:            1.246s
  Time for stop operator:             0.363s
  Time for adding to reached set:     0.349s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   134
Avg. length of target path (in blocks):               13248 (count: 134, min: 76, max: 136, avg: 98.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.765s
  Counterexample analysis:                             6.900s (Max:     0.088s, Calls: 134)
    Refinement sat check:                              3.394s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.028s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.119s
  ARG update:                                          0.394s

Length of refined path (in blocks):                   12634 (count: 134, min: 63, max: 130, avg: 94.28)
Number of affected states:                             1201 (count: 134, min: 1, max: 96, avg: 8.96)
Length (states) of path with itp 'true':              11299 (count: 134, min: 0, max: 128, avg: 84.32)
Length (states) of path with itp non-trivial itp:      1201 (count: 134, min: 1, max: 96, avg: 8.96)
Length (states) of path with itp 'false':               134 (count: 134, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 134, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:            1055 (count: 134, min: 0, max: 94, avg: 7.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                134
Number of successful refinements:     134
Number of failed refinements:         0
Max. size of reached set before ref.: 6049
Max. size of reached set after ref.:  5189
Avg. size of reached set before ref.: 2681.69
Avg. size of reached set after ref.:  2162.40

Total time for CEGAR algorithm:      22.861s
Time for refinements:                 8.983s
Average time for refinement:          0.067s
Max time for refinement:              0.163s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          839
  Total lines:            1408
  Line coverage:          0.596
  Visited conditions:     330
  Total conditions:       488
  Condition coverage:     0.676

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2192
Number of relevant variables:    341
Number of functions:             111
Number of loops:                 4
Size of reached set:             3867
  Number of reached locations:   874 (45%)
    Avg states per location:     4
    Max states per location:     45 (at node N2145)
  Number of reached functions:   72 (65%)
  Number of partitions:          3857
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2008 (before line 2697), Function outgoing called from node N2055, stack depth 5 [38f907ec], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.158s
  Time for loading CPAs:          0.900s
  Time for loading parser:        0.664s
  Time for CFA construction:      2.399s
    Time for parsing file(s):     0.698s
    Time for AST to CFA:          0.723s
    Time for CFA sanity check:    0.212s
    Time for post-processing:     0.623s
      Time for var class.:        0.342s
Time for Analysis:               22.867s
CPU time for analysis:           22.860s
Time for analyzing result:        0.005s
Total time for CPAchecker:       27.029s
Total CPU time for CPAchecker:   27.020s
Time for statistics:              0.196s

Time for Garbage Collector:       0.675s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     49MB (    47 MiB) avg;     82MB (    79 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
