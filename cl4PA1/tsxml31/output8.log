scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product40_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x81xoxf4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 83: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 106: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 306: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 315: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 349: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 808: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1125: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1575: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1658: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1705: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1797: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1860: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1967: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2021: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2093: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2214: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2288: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2477: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2514: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 645: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9787 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9476 (97%)
  Because of loop head:            233 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         78 (1%)
  Times precision was empty:       4315 (44%)
  Times precision was {false}:     244 (2%)
  Times result was cached:         5111 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      117 (1%)
  Times result was 'false':        82 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         20271
  BDD entailment checks:           941
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          4
Number of abstraction locations:          129
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         5472
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 15.16
Number of irrelevant predicates:          3831 (70%)
Number of preds handled by boolean abs:   117 (2%)
  Total number of models for allsat:      119
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.270s
  Time for path formula creation:        3.148s
Time for strengthen operator:            0.184s
Time for prec operator:                  2.905s
  Time for abstraction:                  2.462s (Max:     0.020s, Count: 9787)
    Boolean abstraction:                 0.231s
    Solving time:                        0.475s (Max:     0.015s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.030s (Max:     0.010s)
Time for merge operator:                 0.477s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     0.486s

Number of path formula cache hits:   47478 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.986s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         243 (count: 7187, min: 0, max: 91, avg: 0.03)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.360s
Automaton transfers with branching:                0
Automaton transfer successors:                        71620 (count: 71620, min: 1, max: 1, avg: 1.00) [1 x 71620]

CPA algorithm statistics
------------------------
Number of iterations:            54164
Max size of waitlist:            30
Average size of waitlist:        11
Number of computed successors:   64692
Max successors for one state:    2
Number of times merged:          9665
Number of times stopped:         10228
Number of times breaked:         78

Total time for CPA algorithm:        12.064s (Max:     1.369s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:      4.034s
  Time for transfer relation:         5.564s
  Time for merge operator:            0.992s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.178s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   78
Avg. length of target path (in blocks):                6641 (count: 78, min: 67, max: 115, avg: 85.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.983s
  Counterexample analysis:                             3.380s (Max:     0.070s, Calls: 78)
    Refinement sat check:                              1.700s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.051s
  Precision update:                                    0.108s
  ARG update:                                          0.278s

Length of refined path (in blocks):                    6212 (count: 78, min: 66, max: 100, avg: 79.64)
Number of affected states:                             1100 (count: 78, min: 1, max: 86, avg: 14.10)
Length (states) of path with itp 'true':               5034 (count: 78, min: 0, max: 98, avg: 64.54)
Length (states) of path with itp non-trivial itp:      1100 (count: 78, min: 1, max: 86, avg: 14.10)
Length (states) of path with itp 'false':                78 (count: 78, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          13 (count: 78, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:            1009 (count: 78, min: 0, max: 84, avg: 12.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                78
Number of successful refinements:     78
Number of failed refinements:         0
Max. size of reached set before ref.: 4351
Max. size of reached set after ref.:  3969
Avg. size of reached set before ref.: 3077.91
Avg. size of reached set after ref.:  2415.37

Total time for CEGAR algorithm:      16.917s
Time for refinements:                 4.579s
Average time for refinement:          0.058s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          780
  Total lines:            1368
  Line coverage:          0.570
  Visited conditions:     290
  Total conditions:       480
  Condition coverage:     0.604

CPAchecker general statistics
-----------------------------
Number of program locations:     1882
Number of CFA edges:             2126
Number of relevant variables:    306
Number of functions:             108
Number of loops:                 4
Size of reached set:             2705
  Number of reached locations:   796 (42%)
    Avg states per location:     3
    Max states per location:     18 (at node N1727)
  Number of reached functions:   67 (62%)
  Number of partitions:          2697
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N106 (before line 248), Function incoming called from node N40, stack depth 8 [617e89b5], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          3.911s
  Time for loading CPAs:          0.698s
  Time for loading parser:        0.748s
  Time for CFA construction:      2.305s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          0.651s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.568s
      Time for var class.:        0.302s
Time for Analysis:               16.918s
CPU time for analysis:           16.910s
Time for analyzing result:        0.003s
Total time for CPAchecker:       20.832s
Total CPU time for CPAchecker:   20.810s
Time for statistics:              0.128s

Time for Garbage Collector:       0.408s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     44MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8068MB (  7694 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
