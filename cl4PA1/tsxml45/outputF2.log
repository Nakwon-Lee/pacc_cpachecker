scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dut3qqyt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1196: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1288: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1569: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1961: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2015: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2948: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            59802 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  59156 (99%)
  Because of loop head:            414 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         232 (0%)
  Times precision was empty:       15619 (26%)
  Times precision was {false}:     185 (0%)
  Times result was cached:         42960 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1038 (2%)
  Times result was 'false':        675 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         111691
  BDD entailment checks:           7491
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          152
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         127742
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 104.45
Number of irrelevant predicates:          61886 (48%)
Number of preds handled by boolean abs:   2296 (2%)
  Total number of models for allsat:      1872
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.80

Time for post operator:                  4.601s
  Time for path formula creation:        4.242s
Time for strengthen operator:            0.556s
Time for prec operator:                 10.787s
  Time for abstraction:                  9.776s (Max:     0.024s, Count: 59802)
    Boolean abstraction:                 1.448s
    Solving time:                        1.158s (Max:     0.013s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.154s (Max:     0.012s)
Time for merge operator:                 0.705s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     1.314s

Number of path formula cache hits:   436970 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.525s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               508
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2776 (count: 30568, min: 0, max: 624, avg: 0.09)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.949s
  Time for transition matches:                         0.477s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       416593 (count: 416593, min: 1, max: 1, avg: 1.00) [1 x 416593]

CPA algorithm statistics
------------------------
Number of iterations:            316145
Max size of waitlist:            115
Average size of waitlist:        45
Number of computed successors:   375989
Max successors for one state:    2
Number of times merged:          52100
Number of times stopped:         56462
Number of times breaked:         232

Total time for CPA algorithm:        28.844s (Max:     1.420s)
  Time for choose from waitlist:      0.265s
  Time for precision adjustment:     13.666s
  Time for transfer relation:        10.271s
  Time for merge operator:            1.604s
  Time for stop operator:             0.712s
  Time for adding to reached set:     0.650s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   232
Avg. length of target path (in blocks):               27651 (count: 232, min: 65, max: 134, avg: 119.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.120s
  Counterexample analysis:                             9.638s (Max:     0.101s, Calls: 232)
    Refinement sat check:                              4.453s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.116s
  Precision update:                                    0.178s
  ARG update:                                          0.799s

Length of refined path (in blocks):                   19139 (count: 232, min: 62, max: 105, avg: 82.50)
Number of affected states:                             3640 (count: 232, min: 1, max: 104, avg: 15.69)
Length (states) of path with itp 'true':              15267 (count: 232, min: 0, max: 91, avg: 65.81)
Length (states) of path with itp non-trivial itp:      3640 (count: 232, min: 1, max: 104, avg: 15.69)
Length (states) of path with itp 'false':               232 (count: 232, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         267 (count: 232, min: 0, max: 12, avg: 1.15)
Equal non-trivial interpolants along paths:            3141 (count: 232, min: 0, max: 102, avg: 13.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                232
Number of successful refinements:     232
Number of failed refinements:         0
Max. size of reached set before ref.: 9655
Max. size of reached set after ref.:  9115
Avg. size of reached set before ref.: 6637.98
Avg. size of reached set after ref.:  5281.53

Total time for CEGAR algorithm:      42.476s
Time for refinements:                12.868s
Average time for refinement:          0.055s
Max time for refinement:              0.202s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          726
  Total lines:            1413
  Line coverage:          0.514
  Visited conditions:     258
  Total conditions:       496
  Condition coverage:     0.520

CPAchecker general statistics
-----------------------------
Number of program locations:     1941
Number of CFA edges:             2198
Number of relevant variables:    343
Number of functions:             109
Number of loops:                 4
Size of reached set:             4155
  Number of reached locations:   723 (37%)
    Avg states per location:     5
    Max states per location:     96 (at node N198)
  Number of reached functions:   63 (58%)
  Number of partitions:          4138
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N66 (before line 189), Function outgoing called from node N128, stack depth 5 [7c6cfc67], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.049s
  Time for loading CPAs:          0.777s
  Time for loading parser:        0.668s
  Time for CFA construction:      2.386s
    Time for parsing file(s):     0.733s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.564s
      Time for var class.:        0.287s
Time for Analysis:               42.476s
CPU time for analysis:           42.460s
Time for analyzing result:        0.002s
Total time for CPAchecker:       46.533s
Total CPU time for CPAchecker:   46.520s
Time for statistics:              0.139s

Time for Garbage Collector:       1.780s (in 141 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     65MB (    62 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
