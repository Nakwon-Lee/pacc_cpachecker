scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sk0tt0tc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1196: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1288: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1569: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1961: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2015: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2948: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            38132 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37890 (99%)
  Because of loop head:            188 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (0%)
  Times precision was empty:       8496 (22%)
  Times precision was {false}:     169 (0%)
  Times result was cached:         28603 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      864 (2%)
  Times result was 'false':        1069 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         68963
  BDD entailment checks:           5737
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          144
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         70263
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 68.02
Number of irrelevant predicates:          33137 (47%)
Number of preds handled by boolean abs:   1971 (3%)
  Total number of models for allsat:      1554
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.80

Time for post operator:                  3.608s
  Time for path formula creation:        3.367s
Time for strengthen operator:            0.383s
Time for prec operator:                  7.796s
  Time for abstraction:                  7.094s (Max:     0.026s, Count: 38132)
    Boolean abstraction:                 1.122s
    Solving time:                        0.818s (Max:     0.013s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.140s (Max:     0.012s)
Time for merge operator:                 0.483s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.948s

Number of path formula cache hits:   267364 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.994s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               525
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2421 (count: 20557, min: 0, max: 376, avg: 0.12)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.690s
  Time for transition matches:                         0.342s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       262025 (count: 262025, min: 1, max: 1, avg: 1.00) [1 x 262025]

CPA algorithm statistics
------------------------
Number of iterations:            197011
Max size of waitlist:            95
Average size of waitlist:        31
Number of computed successors:   234587
Max successors for one state:    2
Number of times merged:          31613
Number of times stopped:         35611
Number of times breaked:         54

Total time for CPA algorithm:        21.796s (Max:     1.417s)
  Time for choose from waitlist:      0.220s
  Time for precision adjustment:      9.861s
  Time for transfer relation:         8.056s
  Time for merge operator:            1.167s
  Time for stop operator:             0.518s
  Time for adding to reached set:     0.581s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   54
Avg. length of target path (in blocks):                5794 (count: 54, min: 65, max: 134, avg: 107.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.950s
  Counterexample analysis:                             3.053s (Max:     0.106s, Calls: 54)
    Refinement sat check:                              1.357s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.134s
  Precision update:                                    0.052s
  ARG update:                                          0.605s

Length of refined path (in blocks):                    4550 (count: 54, min: 62, max: 105, avg: 84.26)
Number of affected states:                             2913 (count: 54, min: 1, max: 104, avg: 53.94)
Length (states) of path with itp 'true':               1583 (count: 54, min: 0, max: 91, avg: 29.31)
Length (states) of path with itp non-trivial itp:      2913 (count: 54, min: 1, max: 104, avg: 53.94)
Length (states) of path with itp 'false':                54 (count: 54, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         222 (count: 54, min: 0, max: 12, avg: 4.11)
Equal non-trivial interpolants along paths:            2637 (count: 54, min: 0, max: 102, avg: 48.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                54
Number of successful refinements:     54
Number of failed refinements:         0
Max. size of reached set before ref.: 8375
Max. size of reached set after ref.:  7978
Avg. size of reached set before ref.: 5220.09
Avg. size of reached set after ref.:  1610.15

Total time for CEGAR algorithm:      26.313s
Time for refinements:                 4.426s
Average time for refinement:          0.081s
Max time for refinement:              0.170s

Code Coverage
-----------------------------
  Function coverage:      0.569
  Visited lines:          697
  Total lines:            1413
  Line coverage:          0.493
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1941
Number of CFA edges:             2198
Number of relevant variables:    343
Number of functions:             109
Number of loops:                 4
Size of reached set:             2971
  Number of reached locations:   673 (35%)
    Avg states per location:     4
    Max states per location:     48 (at node N198)
  Number of reached functions:   62 (57%)
  Number of partitions:          2963
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N66 (before line 189), Function outgoing called from node N128, stack depth 5 [51e7e06b], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          3.947s
  Time for loading CPAs:          0.770s
  Time for loading parser:        0.724s
  Time for CFA construction:      2.280s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.717s
    Time for CFA sanity check:    0.185s
    Time for post-processing:     0.568s
      Time for var class.:        0.308s
Time for Analysis:               26.313s
CPU time for analysis:           26.320s
Total time for CPAchecker:       30.264s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.124s

Time for Garbage Collector:       0.993s (in 83 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    89 MiB) max;     52MB (    50 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
