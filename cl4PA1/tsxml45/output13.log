scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec4_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qchzvibn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 61: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 84: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 278: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 310: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 319: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 458: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 579: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 657: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1196: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1288: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1569: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1699: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1746: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1961: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2015: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2134: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2246: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2266: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2902: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2948: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            28883 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28353 (98%)
  Because of loop head:            490 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       8914 (31%)
  Times precision was {false}:     164 (1%)
  Times result was cached:         18894 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      911 (3%)
  Times result was 'false':        203 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         62277
  BDD entailment checks:           4369
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          135
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         50677
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 47.14
Number of irrelevant predicates:          23070 (46%)
Number of preds handled by boolean abs:   2002 (4%)
  Total number of models for allsat:      1657
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.82

Time for post operator:                  3.781s
  Time for path formula creation:        3.550s
Time for strengthen operator:            0.289s
Time for prec operator:                  8.077s
  Time for abstraction:                  7.285s (Max:     0.026s, Count: 28883)
    Boolean abstraction:                 1.514s
    Solving time:                        1.272s (Max:     0.015s)
    Model enumeration time:              0.184s
    Time for BDD construction:           0.144s (Max:     0.011s)
Time for merge operator:                 0.582s
Time for coverage check:                 0.099s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     1.456s

Number of path formula cache hits:   210166 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.180s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               480
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2478 (count: 19855, min: 0, max: 498, avg: 0.12)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.717s
  Time for transition matches:                         0.300s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       218315 (count: 218315, min: 1, max: 1, avg: 1.00) [1 x 218315]

CPA algorithm statistics
------------------------
Number of iterations:            164553
Max size of waitlist:            62
Average size of waitlist:        20
Number of computed successors:   197282
Max successors for one state:    2
Number of times merged:          28954
Number of times stopped:         32045
Number of times breaked:         40

Total time for CPA algorithm:        22.330s (Max:     1.390s)
  Time for choose from waitlist:      0.272s
  Time for precision adjustment:     10.253s
  Time for transfer relation:         7.934s
  Time for merge operator:            1.404s
  Time for stop operator:             0.590s
  Time for adding to reached set:     0.604s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                3810 (count: 40, min: 65, max: 127, avg: 95.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.458s
  Counterexample analysis:                             2.497s (Max:     0.102s, Calls: 40)
    Refinement sat check:                              1.110s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.105s
  Precision update:                                    0.063s
  ARG update:                                          0.690s

Length of refined path (in blocks):                    3186 (count: 40, min: 62, max: 101, avg: 79.65)
Number of affected states:                             2485 (count: 40, min: 2, max: 100, avg: 62.13)
Length (states) of path with itp 'true':                661 (count: 40, min: 0, max: 73, avg: 16.52)
Length (states) of path with itp non-trivial itp:      2485 (count: 40, min: 2, max: 100, avg: 62.13)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         249 (count: 40, min: 1, max: 12, avg: 6.22)
Equal non-trivial interpolants along paths:            2196 (count: 40, min: 0, max: 98, avg: 54.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 8954
Max. size of reached set after ref.:  8512
Avg. size of reached set before ref.: 5803.80
Avg. size of reached set after ref.:  1678.83

Total time for CEGAR algorithm:      26.217s
Time for refinements:                 3.829s
Average time for refinement:          0.095s
Max time for refinement:              0.140s

Code Coverage
-----------------------------
  Function coverage:      0.073
  Visited lines:          132
  Total lines:            1413
  Line coverage:          0.093
  Visited conditions:     8
  Total conditions:       496
  Condition coverage:     0.016

CPAchecker general statistics
-----------------------------
Number of program locations:     1941
Number of CFA edges:             2198
Number of relevant variables:    343
Number of functions:             109
Number of loops:                 4
Size of reached set:             36
  Number of reached locations:   36 (2%)
    Avg states per location:     1
    Max states per location:     1 (at node N9)
  Number of reached functions:   8 (7%)
  Number of partitions:          36
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.036s
  Time for loading CPAs:          0.806s
  Time for loading parser:        0.667s
  Time for CFA construction:      2.345s
    Time for parsing file(s):     0.712s
    Time for AST to CFA:          0.675s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.577s
      Time for var class.:        0.318s
Time for Analysis:               26.217s
CPU time for analysis:           26.220s
Total time for CPAchecker:       30.270s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.081s

Time for Garbage Collector:       1.009s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                112MB (   107 MiB) max;     51MB (    48 MiB) avg;    118MB (   112 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
