scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sshthnkx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1424: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1648: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2528: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2754: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2916: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2925: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2232: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            696 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  682 (98%)
  Because of loop head:            12 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       684 (98%)
  Times precision was {false}:     1 (0%)
  Times result was cached:         7 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (1%)
  Times result was 'false':        6 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1257
  BDD entailment checks:           59
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.40
Number of irrelevant predicates:          6 (50%)
Number of preds handled by boolean abs:   4 (33%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.112s
  Time for path formula creation:        1.091s
Time for strengthen operator:            0.046s
Time for prec operator:                  0.218s
  Time for abstraction:                  0.082s (Max:     0.016s, Count: 696)
    Boolean abstraction:                 0.004s
    Solving time:                        0.002s (Max:     0.002s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.114s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.002s

Number of path formula cache hits:   434 (8%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.071s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 777, min: 0, max: 5, avg: 0.01)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.142s
Automaton transfers with branching:                0
Automaton transfer successors:                         5070 (count: 5070, min: 1, max: 1, avg: 1.00) [1 x 5070]

CPA algorithm statistics
------------------------
Number of iterations:            3621
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   4286
Max successors for one state:    2
Number of times merged:          599
Number of times stopped:         658
Number of times breaked:         2

Total time for CPA algorithm:         2.618s (Max:     1.308s)
  Time for choose from waitlist:      0.024s
  Time for precision adjustment:      0.466s
  Time for transfer relation:         1.670s
  Time for merge operator:            0.231s
  Time for stop operator:             0.031s
  Time for adding to reached set:     0.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                 138 (count: 2, min: 65, max: 73, avg: 69.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.126s
  Counterexample analysis:                             0.094s (Max:     0.053s, Calls: 2)
    Refinement sat check:                              0.043s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.010s

Length of refined path (in blocks):                     136 (count: 2, min: 64, max: 72, avg: 68.00)
Number of affected states:                                2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                132 (count: 2, min: 62, max: 70, avg: 66.00)
Length (states) of path with itp non-trivial itp:         2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1349
Max. size of reached set after ref.:  1227
Avg. size of reached set before ref.: 1227.00
Avg. size of reached set after ref.:  1105.00

Total time for CEGAR algorithm:       2.810s
Time for refinements:                 0.177s
Average time for refinement:          0.088s
Max time for refinement:              0.097s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          893
  Total lines:            1404
  Line coverage:          0.636
  Visited conditions:     338
  Total conditions:       488
  Condition coverage:     0.693

CPAchecker general statistics
-----------------------------
Number of program locations:     1932
Number of CFA edges:             2188
Number of relevant variables:    340
Number of functions:             111
Number of loops:                 4
Size of reached set:             3379
  Number of reached locations:   918 (48%)
    Avg states per location:     3
    Max states per location:     30 (at node N179)
  Number of reached functions:   77 (69%)
  Number of partitions:          3379
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.076s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.670s
  Time for CFA construction:      2.347s
    Time for parsing file(s):     0.666s
    Time for AST to CFA:          0.725s
    Time for CFA sanity check:    0.207s
    Time for post-processing:     0.608s
      Time for var class.:        0.328s
Time for Analysis:                2.815s
CPU time for analysis:            2.810s
Time for analyzing result:        0.012s
Total time for CPAchecker:        6.894s
Total CPU time for CPAchecker:    6.890s
Time for statistics:              0.143s

Time for Garbage Collector:       0.135s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    31 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8040MB (  7667 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
