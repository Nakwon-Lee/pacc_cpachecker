scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3y7hz71m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 302: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 442: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 752: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 999: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1068: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1332: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1424: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1594: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1648: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2441: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2470: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2491: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2528: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2565: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2643: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2754: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2916: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2925: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2232: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            25697 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25472 (99%)
  Because of loop head:            104 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (0%)
  Times precision was empty:       12038 (47%)
  Times precision was {false}:     233 (1%)
  Times result was cached:         13293 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      133 (1%)
  Times result was 'false':        516 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         36103
  BDD entailment checks:           2009
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          5
Number of abstraction locations:          137
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         15666
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 42.80
Number of irrelevant predicates:          13175 (84%)
Number of preds handled by boolean abs:   135 (1%)
  Total number of models for allsat:      134
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.268s
  Time for path formula creation:        2.056s
Time for strengthen operator:            0.239s
Time for prec operator:                  3.264s
  Time for abstraction:                  2.785s (Max:     0.020s, Count: 25697)
    Boolean abstraction:                 0.204s
    Solving time:                        0.399s (Max:     0.015s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.033s (Max:     0.013s)
Time for merge operator:                 0.289s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.419s

Number of path formula cache hits:   179009 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.818s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         267 (count: 16024, min: 0, max: 141, avg: 0.02)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.569s
  Time for transition matches:                         0.211s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       158588 (count: 158588, min: 1, max: 1, avg: 1.00) [1 x 158588]

CPA algorithm statistics
------------------------
Number of iterations:            117376
Max size of waitlist:            34
Average size of waitlist:        16
Number of computed successors:   136768
Max successors for one state:    2
Number of times merged:          17047
Number of times stopped:         18610
Number of times breaked:         121

Total time for CPA algorithm:        12.705s (Max:     1.008s)
  Time for choose from waitlist:      0.212s
  Time for precision adjustment:      4.601s
  Time for transfer relation:         5.328s
  Time for merge operator:            0.797s
  Time for stop operator:             0.346s
  Time for adding to reached set:     0.462s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):               13153 (count: 121, min: 65, max: 180, avg: 108.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.262s
  Counterexample analysis:                             5.533s (Max:     0.117s, Calls: 121)
    Refinement sat check:                              2.563s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.068s
  ARG update:                                          0.397s

Length of refined path (in blocks):                   12690 (count: 121, min: 64, max: 179, avg: 104.88)
Number of affected states:                             1236 (count: 121, min: 1, max: 100, avg: 10.21)
Length (states) of path with itp 'true':              11333 (count: 121, min: 0, max: 177, avg: 93.66)
Length (states) of path with itp non-trivial itp:      1236 (count: 121, min: 1, max: 100, avg: 10.21)
Length (states) of path with itp 'false':               121 (count: 121, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 121, min: 0, max: 1, avg: 0.10)
Equal non-trivial interpolants along paths:            1103 (count: 121, min: 0, max: 98, avg: 9.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 5282
Max. size of reached set after ref.:  3331
Avg. size of reached set before ref.: 2608.15
Avg. size of reached set after ref.:  1674.12

Total time for CEGAR algorithm:      19.798s
Time for refinements:                 6.884s
Average time for refinement:          0.056s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.694
  Visited lines:          893
  Total lines:            1404
  Line coverage:          0.636
  Visited conditions:     338
  Total conditions:       488
  Condition coverage:     0.693

CPAchecker general statistics
-----------------------------
Number of program locations:     1932
Number of CFA edges:             2188
Number of relevant variables:    340
Number of functions:             111
Number of loops:                 4
Size of reached set:             4626
  Number of reached locations:   918 (48%)
    Avg states per location:     5
    Max states per location:     45 (at node N179)
  Number of reached functions:   77 (69%)
  Number of partitions:          4616
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N48 (before line 158), Function outgoing called from node N98, stack depth 5 [6b422b5c], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.060s
  Time for loading CPAs:          0.835s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.344s
    Time for parsing file(s):     0.677s
    Time for AST to CFA:          0.769s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.552s
      Time for var class.:        0.279s
Time for Analysis:               19.798s
CPU time for analysis:           19.800s
Time for analyzing result:        0.004s
Total time for CPAchecker:       23.862s
Total CPU time for CPAchecker:   23.860s
Time for statistics:              0.195s

Time for Garbage Collector:       0.476s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8070MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
