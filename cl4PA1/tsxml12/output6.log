scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product39_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jwvap17y/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1567: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2206: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2280: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2794: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6542 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6327 (97%)
  Because of loop head:            169 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (1%)
  Times precision was empty:       1873 (29%)
  Times precision was {false}:     255 (4%)
  Times result was cached:         4296 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      118 (2%)
  Times result was 'false':        54 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         15692
  BDD entailment checks:           486
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          4
Number of abstraction locations:          130
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4669
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 12.52
Number of irrelevant predicates:          2887 (62%)
Number of preds handled by boolean abs:   118 (3%)
  Total number of models for allsat:      120
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  2.975s
  Time for path formula creation:        2.837s
Time for strengthen operator:            0.157s
Time for prec operator:                  2.831s
  Time for abstraction:                  2.446s (Max:     0.021s, Count: 6542)
    Boolean abstraction:                 0.216s
    Solving time:                        0.512s (Max:     0.015s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.013s (Max:     0.002s)
Time for merge operator:                 0.447s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.532s

Number of path formula cache hits:   32458 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.705s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         240 (count: 4350, min: 0, max: 111, avg: 0.06)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.390s
Automaton transfers with branching:                0
Automaton transfer successors:                        52386 (count: 52386, min: 1, max: 1, avg: 1.00) [1 x 52386]

CPA algorithm statistics
------------------------
Number of iterations:            39877
Max size of waitlist:            38
Average size of waitlist:        16
Number of computed successors:   48083
Max successors for one state:    2
Number of times merged:          7603
Number of times stopped:         7952
Number of times breaked:         46

Total time for CPA algorithm:        11.138s (Max:     1.423s)
  Time for choose from waitlist:      0.142s
  Time for precision adjustment:      3.646s
  Time for transfer relation:         5.070s
  Time for merge operator:            0.947s
  Time for stop operator:             0.279s
  Time for adding to reached set:     0.305s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   46
Avg. length of target path (in blocks):                4669 (count: 46, min: 66, max: 150, avg: 101.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.151s
  Counterexample analysis:                             2.599s (Max:     0.106s, Calls: 46)
    Refinement sat check:                              1.236s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.084s
  Precision update:                                    0.082s
  ARG update:                                          0.250s

Length of refined path (in blocks):                    4215 (count: 46, min: 65, max: 115, avg: 91.63)
Number of affected states:                             1309 (count: 46, min: 1, max: 114, avg: 28.46)
Length (states) of path with itp 'true':               2860 (count: 46, min: 0, max: 110, avg: 62.17)
Length (states) of path with itp non-trivial itp:      1309 (count: 46, min: 1, max: 114, avg: 28.46)
Length (states) of path with itp 'false':                46 (count: 46, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 46, min: 0, max: 1, avg: 0.26)
Equal non-trivial interpolants along paths:            1251 (count: 46, min: 0, max: 112, avg: 27.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                46
Number of successful refinements:     46
Number of failed refinements:         0
Max. size of reached set before ref.: 3738
Max. size of reached set after ref.:  3428
Avg. size of reached set before ref.: 2583.24
Avg. size of reached set after ref.:  1757.96

Total time for CEGAR algorithm:      14.765s
Time for refinements:                 3.537s
Average time for refinement:          0.076s
Max time for refinement:              0.151s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          715
  Total lines:            1352
  Line coverage:          0.529
  Visited conditions:     272
  Total conditions:       478
  Condition coverage:     0.569

CPAchecker general statistics
-----------------------------
Number of program locations:     1855
Number of CFA edges:             2093
Number of relevant variables:    294
Number of functions:             105
Number of loops:                 4
Size of reached set:             2115
  Number of reached locations:   728 (39%)
    Avg states per location:     2
    Max states per location:     12 (at node N1770)
  Number of reached functions:   60 (57%)
  Number of partitions:          2113
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1721 (before line 2321), Function mail called from node N1728, stack depth 7 [4fb8d97a], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail]])
  Number of target states:       0

Time for analysis setup:          3.890s
  Time for loading CPAs:          0.772s
  Time for loading parser:        0.607s
  Time for CFA construction:      2.333s
    Time for parsing file(s):     0.688s
    Time for AST to CFA:          0.754s
    Time for CFA sanity check:    0.195s
    Time for post-processing:     0.519s
      Time for var class.:        0.268s
Time for Analysis:               14.765s
CPU time for analysis:           14.760s
Time for analyzing result:        0.011s
Total time for CPAchecker:       18.659s
Total CPU time for CPAchecker:   18.640s
Time for statistics:              0.150s

Time for Garbage Collector:       0.352s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
