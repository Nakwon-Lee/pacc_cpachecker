scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product39_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zyeefv_7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1567: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2206: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2280: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2794: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7699 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  7511 (98%)
  Because of loop head:            104 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (1%)
  Times precision was empty:       2926 (38%)
  Times precision was {false}:     175 (2%)
  Times result was cached:         4489 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      109 (1%)
  Times result was 'false':        120 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         10975
  BDD entailment checks:           565
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          4
Number of abstraction locations:          121
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4773
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 16.81
Number of irrelevant predicates:          3188 (67%)
Number of preds handled by boolean abs:   109 (2%)
  Total number of models for allsat:      111
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.275s
  Time for path formula creation:        1.186s
Time for strengthen operator:            0.112s
Time for prec operator:                  2.235s
  Time for abstraction:                  1.912s (Max:     0.020s, Count: 7699)
    Boolean abstraction:                 0.168s
    Solving time:                        0.401s (Max:     0.015s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.012s (Max:     0.005s)
Time for merge operator:                 0.160s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.409s

Number of path formula cache hits:   47834 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.118s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         211 (count: 5029, min: 0, max: 109, avg: 0.04)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.393s
Automaton transfers with branching:                0
Automaton transfer successors:                        45957 (count: 45957, min: 1, max: 1, avg: 1.00) [1 x 45957]

CPA algorithm statistics
------------------------
Number of iterations:            34810
Max size of waitlist:            27
Average size of waitlist:        12
Number of computed successors:   40732
Max successors for one state:    2
Number of times merged:          5205
Number of times stopped:         5588
Number of times breaked:         84

Total time for CPA algorithm:         7.273s (Max:     0.751s)
  Time for choose from waitlist:      0.116s
  Time for precision adjustment:      2.960s
  Time for transfer relation:         2.885s
  Time for merge operator:            0.419s
  Time for stop operator:             0.170s
  Time for adding to reached set:     0.177s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                8387 (count: 84, min: 66, max: 137, avg: 99.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.330s
  Counterexample analysis:                             3.787s (Max:     0.090s, Calls: 84)
    Refinement sat check:                              1.852s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.059s
  Precision update:                                    0.087s
  ARG update:                                          0.232s

Length of refined path (in blocks):                    7991 (count: 84, min: 65, max: 136, avg: 95.13)
Number of affected states:                              983 (count: 84, min: 1, max: 82, avg: 11.70)
Length (states) of path with itp 'true':               6924 (count: 84, min: 0, max: 134, avg: 82.43)
Length (states) of path with itp non-trivial itp:       983 (count: 84, min: 1, max: 82, avg: 11.70)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 84, min: 0, max: 1, avg: 0.14)
Equal non-trivial interpolants along paths:             887 (count: 84, min: 0, max: 80, avg: 10.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 2493
Max. size of reached set after ref.:  1258
Avg. size of reached set before ref.: 1126.33
Avg. size of reached set after ref.:  734.71

Total time for CEGAR algorithm:      12.010s
Time for refinements:                 4.644s
Average time for refinement:          0.055s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          715
  Total lines:            1352
  Line coverage:          0.529
  Visited conditions:     272
  Total conditions:       478
  Condition coverage:     0.569

CPAchecker general statistics
-----------------------------
Number of program locations:     1855
Number of CFA edges:             2093
Number of relevant variables:    294
Number of functions:             105
Number of loops:                 4
Size of reached set:             2129
  Number of reached locations:   728 (39%)
    Avg states per location:     2
    Max states per location:     12 (at node N1770)
  Number of reached functions:   60 (57%)
  Number of partitions:          2123
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1721 (before line 2321), Function mail called from node N1728, stack depth 7 [23f77c2d], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail]])
  Number of target states:       0

Time for analysis setup:          3.802s
  Time for loading CPAs:          0.749s
  Time for loading parser:        0.661s
  Time for CFA construction:      2.229s
    Time for parsing file(s):     0.700s
    Time for AST to CFA:          0.631s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.544s
      Time for var class.:        0.279s
Time for Analysis:               12.010s
CPU time for analysis:           12.000s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.817s
Total CPU time for CPAchecker:   15.810s
Time for statistics:              0.163s

Time for Garbage Collector:       0.242s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     40MB (    38 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
