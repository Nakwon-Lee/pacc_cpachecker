scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product39_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e4x7ewba/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 402: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 743: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 832: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 861: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 956: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1148: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1412: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1567: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1800: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1847: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1922: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1943: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2169: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2206: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2243: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2280: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2794: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 580: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6895 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6720 (97%)
  Because of loop head:            103 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         72 (1%)
  Times precision was empty:       2202 (32%)
  Times precision was {false}:     211 (3%)
  Times result was cached:         4364 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      118 (2%)
  Times result was 'false':        108 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         11855
  BDD entailment checks:           353
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          4
Number of abstraction locations:          130
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4693
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 14.26
Number of irrelevant predicates:          2879 (61%)
Number of preds handled by boolean abs:   118 (3%)
  Total number of models for allsat:      120
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.932s
  Time for path formula creation:        1.815s
Time for strengthen operator:            0.089s
Time for prec operator:                  2.404s
  Time for abstraction:                  2.134s (Max:     0.027s, Count: 6895)
    Boolean abstraction:                 0.173s
    Solving time:                        0.315s (Max:     0.014s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.188s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):     0.326s

Number of path formula cache hits:   40272 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.702s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         240 (count: 4326, min: 0, max: 122, avg: 0.06)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.435s
Automaton transfers with branching:                0
Automaton transfer successors:                        45827 (count: 45827, min: 1, max: 1, avg: 1.00) [1 x 45827]

CPA algorithm statistics
------------------------
Number of iterations:            34571
Max size of waitlist:            28
Average size of waitlist:        13
Number of computed successors:   41017
Max successors for one state:    2
Number of times merged:          5751
Number of times stopped:         6057
Number of times breaked:         72

Total time for CPA algorithm:         8.694s (Max:     1.095s)
  Time for choose from waitlist:      0.143s
  Time for precision adjustment:      3.118s
  Time for transfer relation:         3.803s
  Time for merge operator:            0.539s
  Time for stop operator:             0.249s
  Time for adding to reached set:     0.240s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   72
Avg. length of target path (in blocks):                6456 (count: 72, min: 66, max: 142, avg: 89.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.928s
  Counterexample analysis:                             3.354s (Max:     0.091s, Calls: 72)
    Refinement sat check:                              1.647s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.133s
  ARG update:                                          0.245s

Length of refined path (in blocks):                    6072 (count: 72, min: 65, max: 115, avg: 84.33)
Number of affected states:                             1335 (count: 72, min: 1, max: 114, avg: 18.54)
Length (states) of path with itp 'true':               4665 (count: 72, min: 0, max: 110, avg: 64.79)
Length (states) of path with itp non-trivial itp:      1335 (count: 72, min: 1, max: 114, avg: 18.54)
Length (states) of path with itp 'false':                72 (count: 72, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 72, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:            1251 (count: 72, min: 0, max: 112, avg: 17.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                72
Number of successful refinements:     72
Number of failed refinements:         0
Max. size of reached set before ref.: 2866
Max. size of reached set after ref.:  2695
Avg. size of reached set before ref.: 1770.24
Avg. size of reached set after ref.:  1315.54

Total time for CEGAR algorithm:      13.099s
Time for refinements:                 4.311s
Average time for refinement:          0.059s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          715
  Total lines:            1352
  Line coverage:          0.529
  Visited conditions:     272
  Total conditions:       478
  Condition coverage:     0.569

CPAchecker general statistics
-----------------------------
Number of program locations:     1855
Number of CFA edges:             2093
Number of relevant variables:    294
Number of functions:             105
Number of loops:                 4
Size of reached set:             2115
  Number of reached locations:   728 (39%)
    Avg states per location:     2
    Max states per location:     12 (at node N1770)
  Number of reached functions:   60 (57%)
  Number of partitions:          2113
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1721 (before line 2321), Function mail called from node N1728, stack depth 7 [6b7ded28], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__AutoResponder, mail]])
  Number of target states:       0

Time for analysis setup:          3.872s
  Time for loading CPAs:          0.774s
  Time for loading parser:        0.717s
  Time for CFA construction:      2.181s
    Time for parsing file(s):     0.620s
    Time for AST to CFA:          0.656s
    Time for CFA sanity check:    0.203s
    Time for post-processing:     0.561s
      Time for var class.:        0.306s
Time for Analysis:               13.099s
CPU time for analysis:           13.110s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.975s
Total CPU time for CPAchecker:   16.970s
Time for statistics:              0.140s

Time for Garbage Collector:       0.278s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     42MB (    40 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8065MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
