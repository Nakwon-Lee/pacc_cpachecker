scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec7_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vjhyw4a2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 524: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 572: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 664: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 742: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 945: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1028: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1075: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1122: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1167: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1230: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1337: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1391: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1663: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1702: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1852: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2016: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2025: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2040: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2078: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2760: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2769: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2778: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 223: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            9003 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8745 (97%)
  Because of loop head:            236 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       2152 (24%)
  Times precision was {false}:     315 (3%)
  Times result was cached:         6357 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      179 (2%)
  Times result was 'false':        88 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         20811
  BDD entailment checks:           819
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          5
Number of abstraction locations:          153
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         7239
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 14.65
Number of irrelevant predicates:          4195 (58%)
Number of preds handled by boolean abs:   183 (3%)
  Total number of models for allsat:      178
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  3.727s
  Time for path formula creation:        3.558s
Time for strengthen operator:            0.177s
Time for prec operator:                  3.545s
  Time for abstraction:                  3.204s (Max:     0.023s, Count: 9003)
    Boolean abstraction:                 0.347s
    Solving time:                        0.688s (Max:     0.015s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.022s (Max:     0.006s)
Time for merge operator:                 0.542s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.722s

Number of path formula cache hits:   42997 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.413s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         376 (count: 5636, min: 0, max: 70, avg: 0.07)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.471s
Automaton transfers with branching:                0
Automaton transfer successors:                        70742 (count: 70742, min: 1, max: 1, avg: 1.00) [1 x 70742]

CPA algorithm statistics
------------------------
Number of iterations:            53291
Max size of waitlist:            24
Average size of waitlist:        8
Number of computed successors:   64151
Max successors for one state:    2
Number of times merged:          9996
Number of times stopped:         10630
Number of times breaked:         22

Total time for CPA algorithm:        13.314s (Max:     1.832s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:      4.464s
  Time for transfer relation:         6.137s
  Time for merge operator:            0.988s
  Time for stop operator:             0.349s
  Time for adding to reached set:     0.365s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                3629 (count: 22, min: 65, max: 199, avg: 164.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.711s
  Counterexample analysis:                             2.162s (Max:     0.162s, Calls: 22)
    Refinement sat check:                              0.912s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.112s
  Precision update:                                    0.054s
  ARG update:                                          0.289s

Length of refined path (in blocks):                    2497 (count: 22, min: 64, max: 135, avg: 113.50)
Number of affected states:                             2000 (count: 22, min: 1, max: 134, avg: 90.91)
Length (states) of path with itp 'true':                475 (count: 22, min: 0, max: 100, avg: 21.59)
Length (states) of path with itp non-trivial itp:      2000 (count: 22, min: 1, max: 134, avg: 90.91)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 22, min: 0, max: 1, avg: 0.73)
Equal non-trivial interpolants along paths:            1962 (count: 22, min: 0, max: 132, avg: 89.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 3674
Max. size of reached set after ref.:  1686
Avg. size of reached set before ref.: 2741.86
Avg. size of reached set after ref.:  395.77

Total time for CEGAR algorithm:      16.312s
Time for refinements:                 2.972s
Average time for refinement:          0.135s
Max time for refinement:              0.262s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          787
  Total lines:            1388
  Line coverage:          0.567
  Visited conditions:     316
  Total conditions:       486
  Condition coverage:     0.650

CPAchecker general statistics
-----------------------------
Number of program locations:     1905
Number of CFA edges:             2155
Number of relevant variables:    328
Number of functions:             108
Number of loops:                 4
Size of reached set:             1820
  Number of reached locations:   814 (43%)
    Avg states per location:     2
    Max states per location:     15 (at node N2111)
  Number of reached functions:   64 (59%)
  Number of partitions:          1820
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.901s
  Time for loading CPAs:          0.799s
  Time for loading parser:        0.649s
  Time for CFA construction:      2.294s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.695s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.563s
      Time for var class.:        0.318s
Time for Analysis:               16.312s
CPU time for analysis:           16.310s
Time for analyzing result:        0.002s
Total time for CPAchecker:       20.218s
Total CPU time for CPAchecker:   20.210s
Time for statistics:              0.145s

Time for Garbage Collector:       0.475s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     45MB (    43 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
