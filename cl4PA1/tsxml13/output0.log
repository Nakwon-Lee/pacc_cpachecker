scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n1l0ieeu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27300 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27085 (99%)
  Because of loop head:            152 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       7132 (26%)
  Times precision was {false}:     121 (0%)
  Times result was cached:         18248 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1799 (7%)
  Times result was 'false':        1176 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         37598
  BDD entailment checks:           2816
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          111
Number of abstraction locations:          112
Max number of predicates per location:    26
Avg number of predicates per location:    9
Total predicates per abstraction:         95779
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 49.88
Number of irrelevant predicates:          47601 (50%)
Number of preds handled by boolean abs:   8996 (9%)
  Total number of models for allsat:      8161
  Max number of models for allsat:        240
  Avg number of models for allsat:        4.54

Time for post operator:                  2.770s
  Time for path formula creation:        2.618s
Time for strengthen operator:            0.242s
Time for prec operator:                 10.419s
  Time for abstraction:                  9.782s (Max:     0.068s, Count: 27300)
    Boolean abstraction:                 2.662s
    Solving time:                        1.605s (Max:     0.040s)
    Model enumeration time:              0.611s
    Time for BDD construction:           0.304s (Max:     0.010s)
Time for merge operator:                 0.256s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     2.217s

Number of path formula cache hits:   170473 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.299s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               34608
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14211 (count: 25676, min: 0, max: 2536, avg: 0.55)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.634s
  Time for transition matches:                         0.277s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       165031 (count: 165031, min: 1, max: 1, avg: 1.00) [1 x 165031]

CPA algorithm statistics
------------------------
Number of iterations:            121582
Max size of waitlist:            45
Average size of waitlist:        19
Number of computed successors:   142775
Max successors for one state:    2
Number of times merged:          17391
Number of times stopped:         19215
Number of times breaked:         63

Total time for CPA algorithm:        21.326s (Max:     1.820s)
  Time for choose from waitlist:      0.173s
  Time for precision adjustment:     11.887s
  Time for transfer relation:         6.320s
  Time for merge operator:            0.752s
  Time for stop operator:             0.500s
  Time for adding to reached set:     0.508s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                6048 (count: 63, min: 81, max: 148, avg: 96.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.476s
  Counterexample analysis:                             3.684s (Max:     0.117s, Calls: 63)
    Refinement sat check:                              1.651s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.121s
  Precision update:                                    0.118s
  ARG update:                                          0.403s

Length of refined path (in blocks):                    5004 (count: 63, min: 57, max: 106, avg: 79.43)
Number of affected states:                             2370 (count: 63, min: 1, max: 105, avg: 37.62)
Length (states) of path with itp 'true':               2571 (count: 63, min: 0, max: 82, avg: 40.81)
Length (states) of path with itp non-trivial itp:      2370 (count: 63, min: 1, max: 105, avg: 37.62)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         306 (count: 63, min: 0, max: 26, avg: 4.86)
Equal non-trivial interpolants along paths:            2001 (count: 63, min: 0, max: 103, avg: 31.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 5237
Max. size of reached set after ref.:  3188
Avg. size of reached set before ref.: 3468.06
Avg. size of reached set after ref.:  1550.32

Total time for CEGAR algorithm:      26.370s
Time for refinements:                 4.917s
Average time for refinement:          0.078s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          703
  Total lines:            1417
  Line coverage:          0.496
  Visited conditions:     242
  Total conditions:       496
  Condition coverage:     0.488

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             1566
  Number of reached locations:   679 (35%)
    Avg states per location:     2
    Max states per location:     10 (at node N1696)
  Number of reached functions:   60 (55%)
  Number of partitions:          1563
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [79504c52], stack [main, test]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.892s
  Time for loading CPAs:          0.791s
  Time for loading parser:        0.699s
  Time for CFA construction:      2.234s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.679s
    Time for CFA sanity check:    0.195s
    Time for post-processing:     0.560s
      Time for var class.:        0.304s
Time for Analysis:               26.370s
CPU time for analysis:           26.370s
Total time for CPAchecker:       30.266s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.136s

Time for Garbage Collector:       0.693s (in 65 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    44 MiB) avg;     79MB (    75 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
