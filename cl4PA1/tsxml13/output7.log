scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1ct1g_mc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            26604 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26198 (98%)
  Because of loop head:            313 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       10652 (40%)
  Times precision was {false}:     134 (1%)
  Times result was cached:         15381 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      437 (2%)
  Times result was 'false':        131 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         53640
  BDD entailment checks:           3522
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          23
Number of abstraction locations:          122
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         37580
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 65.81
Number of irrelevant predicates:          20613 (55%)
Number of preds handled by boolean abs:   673 (2%)
  Total number of models for allsat:      492
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.13

Time for post operator:                  3.687s
  Time for path formula creation:        3.490s
Time for strengthen operator:            0.313s
Time for prec operator:                  5.827s
  Time for abstraction:                  5.177s (Max:     0.038s, Count: 26604)
    Boolean abstraction:                 0.855s
    Solving time:                        0.705s (Max:     0.016s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.098s (Max:     0.012s)
Time for merge operator:                 0.428s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     0.767s

Number of path formula cache hits:   200029 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.125s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               275
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1196 (count: 17614, min: 0, max: 385, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.691s
  Time for transition matches:                         0.340s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       197278 (count: 197278, min: 1, max: 1, avg: 1.00) [1 x 197278]

CPA algorithm statistics
------------------------
Number of iterations:            145913
Max size of waitlist:            95
Average size of waitlist:        35
Number of computed successors:   174865
Max successors for one state:    2
Number of times merged:          25059
Number of times stopped:         27362
Number of times breaked:         93

Total time for CPA algorithm:        18.960s (Max:     2.480s)
  Time for choose from waitlist:      0.216s
  Time for precision adjustment:      7.729s
  Time for transfer relation:         7.586s
  Time for merge operator:            1.092s
  Time for stop operator:             0.491s
  Time for adding to reached set:     0.559s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                8096 (count: 93, min: 81, max: 96, avg: 87.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.702s
  Counterexample analysis:                             4.708s (Max:     0.111s, Calls: 93)
    Refinement sat check:                              2.173s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.145s
  Precision update:                                    0.109s
  ARG update:                                          0.598s

Length of refined path (in blocks):                    7089 (count: 93, min: 69, max: 91, avg: 76.23)
Number of affected states:                             2156 (count: 93, min: 2, max: 90, avg: 23.18)
Length (states) of path with itp 'true':               4840 (count: 93, min: 0, max: 80, avg: 52.04)
Length (states) of path with itp non-trivial itp:      2156 (count: 93, min: 2, max: 90, avg: 23.18)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         477 (count: 93, min: 1, max: 13, avg: 5.13)
Equal non-trivial interpolants along paths:            1586 (count: 93, min: 0, max: 76, avg: 17.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 7785
Max. size of reached set after ref.:  7593
Avg. size of reached set before ref.: 5764.23
Avg. size of reached set after ref.:  4234.35

Total time for CEGAR algorithm:      26.074s
Time for refinements:                 6.743s
Average time for refinement:          0.072s
Max time for refinement:              0.243s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          726
  Total lines:            1417
  Line coverage:          0.512
  Visited conditions:     258
  Total conditions:       496
  Condition coverage:     0.520

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             5094
  Number of reached locations:   712 (37%)
    Avg states per location:     7
    Max states per location:     42 (at node N1061)
  Number of reached functions:   63 (58%)
  Number of partitions:          5065
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [28fc0d60], stack [main, test]])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          4.193s
  Time for loading CPAs:          0.930s
  Time for loading parser:        0.697s
  Time for CFA construction:      2.372s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.781s
    Time for CFA sanity check:    0.195s
    Time for post-processing:     0.566s
      Time for var class.:        0.301s
Time for Analysis:               26.074s
CPU time for analysis:           26.070s
Total time for CPAchecker:       30.271s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.160s

Time for Garbage Collector:       1.081s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    93 MiB) max;     53MB (    50 MiB) avg;    102MB (    97 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
