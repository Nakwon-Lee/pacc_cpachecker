scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gfpxjvkc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            303884 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  300521 (99%)
  Because of loop head:            3110 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         253 (0%)
  Times precision was empty:       20527 (7%)
  Times precision was {false}:     167 (0%)
  Times result was cached:         255695 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27495 (9%)
  Times result was 'false':        22758 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         696084
  BDD entailment checks:           77822
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          264
Number of abstraction locations:          141
Max number of predicates per location:    44
Avg number of predicates per location:    21
Total predicates per abstraction:         5091089
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 184.05
Number of irrelevant predicates:          1572468 (31%)
Number of preds handled by boolean abs:   418601 (8%)
  Total number of models for allsat:      3849927
  Max number of models for allsat:        24576
  Avg number of models for allsat:        140.02

Time for post operator:                 12.917s
  Time for path formula creation:       11.731s
Time for strengthen operator:            2.002s
Time for prec operator:                805.614s
  Time for abstraction:                801.948s (Max:     5.690s, Count: 303884)
    Boolean abstraction:               615.171s
    Solving time:                       55.685s (Max:     0.034s)
    Model enumeration time:            363.947s
    Time for BDD construction:         189.425s (Max:     1.225s)
Time for merge operator:                 1.918s
Time for coverage check:                 0.394s
  Time for BDD entailment checks:        0.309s
Total time for SMT solver (w/o itp):   419.632s

Number of path formula cache hits:   2536468 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.974s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               162411
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      515911 (count: 448479, min: 0, max: 3567, avg: 1.15)
Time for BDD node cleanup:                             0.205s
Time for BDD garbage collection:                       3.977s (in 719 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.472s
  Time for transition matches:                         1.901s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      2339099 (count: 2339099, min: 1, max: 1, avg: 1.00) [1 x 2339099]

CPA algorithm statistics
------------------------
Number of iterations:            1736115
Max size of waitlist:            829
Average size of waitlist:        192
Number of computed successors:   2091375
Max successors for one state:    2
Number of times merged:          309131
Number of times stopped:         321657
Number of times breaked:         253

Total time for CPA algorithm:       869.664s (Max:    83.938s)
  Time for choose from waitlist:      0.759s
  Time for precision adjustment:    817.625s
  Time for transfer relation:        34.714s
  Time for merge operator:            5.351s
  Time for stop operator:             2.703s
  Time for adding to reached set:     2.830s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   253
Avg. length of target path (in blocks):               27204 (count: 253, min: 81, max: 152, avg: 107.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.116s
  Counterexample analysis:                            17.867s (Max:     0.297s, Calls: 253)
    Refinement sat check:                              6.908s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.030s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.261s
  Precision update:                                    0.263s
  ARG update:                                          3.453s

Length of refined path (in blocks):                   19465 (count: 253, min: 39, max: 142, avg: 76.94)
Number of affected states:                             8364 (count: 253, min: 1, max: 134, avg: 33.06)
Length (states) of path with itp 'true':              10848 (count: 253, min: 0, max: 83, avg: 42.88)
Length (states) of path with itp non-trivial itp:      8364 (count: 253, min: 1, max: 134, avg: 33.06)
Length (states) of path with itp 'false':               253 (count: 253, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1976 (count: 253, min: 0, max: 55, avg: 7.81)
Equal non-trivial interpolants along paths:            6135 (count: 253, min: 0, max: 93, avg: 24.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                253
Number of successful refinements:     253
Number of failed refinements:         0
Max. size of reached set before ref.: 106954
Max. size of reached set after ref.:  92974
Avg. size of reached set before ref.: 12560.63
Avg. size of reached set after ref.:  5901.83

Total time for CEGAR algorithm:     895.961s
Time for refinements:                24.978s
Average time for refinement:          0.098s
Max time for refinement:              0.576s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          726
  Total lines:            1417
  Line coverage:          0.512
  Visited conditions:     260
  Total conditions:       496
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             62283
  Number of reached locations:   712 (37%)
    Avg states per location:     87
    Max states per location:     377 (at node N1696)
  Number of reached functions:   63 (58%)
  Number of partitions:          61982
    Avg size of partitions:      1
    Max size of partitions:      40 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [40a0de3c], stack [main, test]])
  Number of target states:       0
  Size of final wait list        482

Time for analysis setup:          4.305s
  Time for loading CPAs:          1.055s
  Time for loading parser:        0.713s
  Time for CFA construction:      2.371s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.704s
    Time for CFA sanity check:    0.229s
    Time for post-processing:     0.624s
      Time for var class.:        0.319s
Time for Analysis:              895.961s
CPU time for analysis:          895.790s
Total time for CPAchecker:      900.270s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              0.805s

Time for Garbage Collector:      29.182s (in 1425 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                423MB (   403 MiB) max;    197MB (   188 MiB) avg;    435MB (   415 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           511MB (   487 MiB) max;    289MB (   275 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   9586MB (  9142 MiB) max;   8674MB (  8272 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
