scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wbz0dqsk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20076 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19796 (99%)
  Because of loop head:            244 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       4325 (22%)
  Times precision was {false}:     202 (1%)
  Times result was cached:         13756 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1793 (9%)
  Times result was 'false':        1088 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         31734
  BDD entailment checks:           1718
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          111
Number of abstraction locations:          151
Max number of predicates per location:    26
Avg number of predicates per location:    7
Total predicates per abstraction:         103624
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 51.94
Number of irrelevant predicates:          43980 (42%)
Number of preds handled by boolean abs:   9189 (9%)
  Total number of models for allsat:      7125
  Max number of models for allsat:        240
  Avg number of models for allsat:        3.97

Time for post operator:                  3.077s
  Time for path formula creation:        2.880s
Time for strengthen operator:            0.201s
Time for prec operator:                 11.479s
  Time for abstraction:                 11.053s (Max:     0.039s, Count: 20076)
    Boolean abstraction:                 3.151s
    Solving time:                        2.026s (Max:     0.015s)
    Model enumeration time:              0.578s
    Time for BDD construction:           0.325s (Max:     0.025s)
Time for merge operator:                 0.404s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     2.604s

Number of path formula cache hits:   114494 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.558s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               27805
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13778 (count: 22107, min: 0, max: 1983, avg: 0.62)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.465s
Automaton transfers with branching:                0
Automaton transfer successors:                       130324 (count: 130324, min: 1, max: 1, avg: 1.00) [1 x 130324]

CPA algorithm statistics
------------------------
Number of iterations:            96522
Max size of waitlist:            32
Average size of waitlist:        11
Number of computed successors:   114251
Max successors for one state:    2
Number of times merged:          15008
Number of times stopped:         16095
Number of times breaked:         36

Total time for CPA algorithm:        21.453s (Max:     1.904s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:     12.686s
  Time for transfer relation:         5.947s
  Time for merge operator:            0.839s
  Time for stop operator:             0.315s
  Time for adding to reached set:     0.390s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                3721 (count: 36, min: 81, max: 166, avg: 103.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.947s
  Counterexample analysis:                             3.271s (Max:     0.219s, Calls: 36)
    Refinement sat check:                              1.285s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.138s
  Precision update:                                    0.078s
  ARG update:                                          0.385s

Length of refined path (in blocks):                    3096 (count: 36, min: 57, max: 120, avg: 86.00)
Number of affected states:                             2910 (count: 36, min: 2, max: 119, avg: 80.83)
Length (states) of path with itp 'true':                150 (count: 36, min: 0, max: 69, avg: 4.17)
Length (states) of path with itp non-trivial itp:      2910 (count: 36, min: 2, max: 119, avg: 80.83)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         396 (count: 36, min: 1, max: 26, avg: 11.00)
Equal non-trivial interpolants along paths:            2478 (count: 36, min: 0, max: 117, avg: 68.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 3681
Max. size of reached set after ref.:  2118
Avg. size of reached set before ref.: 2806.25
Avg. size of reached set after ref.:  111.53

Total time for CEGAR algorithm:      25.717s
Time for refinements:                 4.260s
Average time for refinement:          0.118s
Max time for refinement:              0.242s

Code Coverage
-----------------------------
  Function coverage:      0.092
  Visited lines:          148
  Total lines:            1417
  Line coverage:          0.104
  Visited conditions:     14
  Total conditions:       496
  Condition coverage:     0.028

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             59
  Number of reached locations:   59 (3%)
    Avg states per location:     1
    Max states per location:     1 (at node N20)
  Number of reached functions:   10 (9%)
  Number of partitions:          59
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.045s
  Time for loading CPAs:          0.801s
  Time for loading parser:        0.761s
  Time for CFA construction:      2.298s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.722s
    Time for CFA sanity check:    0.196s
    Time for post-processing:     0.560s
      Time for var class.:        0.304s
Time for Analysis:               25.717s
CPU time for analysis:           25.720s
Total time for CPAchecker:       29.766s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.085s

Time for Garbage Collector:       0.623s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    70 MiB) max;     45MB (    43 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8074MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
