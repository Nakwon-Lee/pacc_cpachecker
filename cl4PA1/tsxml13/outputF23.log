scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vhp_v0gn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            227005 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  224430 (99%)
  Because of loop head:            2455 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         120 (0%)
  Times precision was empty:       11103 (5%)
  Times precision was {false}:     159 (0%)
  Times result was cached:         195499 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20244 (9%)
  Times result was 'false':        16209 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         493678
  BDD entailment checks:           52984
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          262
Number of abstraction locations:          154
Max number of predicates per location:    46
Avg number of predicates per location:    21
Total predicates per abstraction:         3626744
Max number of predicates per abstraction: 46
Avg number of predicates per abstraction: 177.76
Number of irrelevant predicates:          946238 (26%)
Number of preds handled by boolean abs:   309487 (9%)
  Total number of models for allsat:      3735284
  Max number of models for allsat:        73278
  Avg number of models for allsat:        184.51

Time for post operator:                  7.300s
  Time for path formula creation:        6.519s
Time for strengthen operator:            1.349s
Time for prec operator:                835.242s
  Time for abstraction:                832.475s (Max:    20.176s, Count: 227005)
    Boolean abstraction:               694.255s
    Solving time:                       40.971s (Max:     0.052s)
    Model enumeration time:            439.547s
    Time for BDD construction:         208.831s (Max:     5.732s)
Time for merge operator:                 1.213s
Time for coverage check:                 0.311s
  Time for BDD entailment checks:        0.251s
Total time for SMT solver (w/o itp):   480.518s

Number of path formula cache hits:   1925708 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.772s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               129532
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      444169 (count: 351576, min: 0, max: 5097, avg: 1.26)
Time for BDD node cleanup:                             0.240s
Time for BDD garbage collection:                       4.873s (in 883 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.979s
  Time for transition matches:                         1.384s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      1676222 (count: 1676222, min: 1, max: 1, avg: 1.00) [1 x 1676222]

CPA algorithm statistics
------------------------
Number of iterations:            1257754
Max size of waitlist:            76
Average size of waitlist:        29
Number of computed successors:   1510807
Max successors for one state:    2
Number of times merged:          220347
Number of times stopped:         234274
Number of times breaked:         120

Total time for CPA algorithm:       879.519s (Max:   353.769s)
  Time for choose from waitlist:      0.605s
  Time for precision adjustment:    843.774s
  Time for transfer relation:        23.698s
  Time for merge operator:            3.669s
  Time for stop operator:             1.958s
  Time for adding to reached set:     2.165s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   120
Avg. length of target path (in blocks):               13525 (count: 120, min: 81, max: 165, avg: 112.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.394s
  Counterexample analysis:                            12.406s (Max:     0.278s, Calls: 120)
    Refinement sat check:                              3.986s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.230s
  Precision update:                                    0.225s
  ARG update:                                          2.352s

Length of refined path (in blocks):                   10058 (count: 120, min: 39, max: 125, avg: 83.82)
Number of affected states:                             9400 (count: 120, min: 1, max: 124, avg: 78.33)
Length (states) of path with itp 'true':                538 (count: 120, min: 0, max: 69, avg: 4.48)
Length (states) of path with itp non-trivial itp:      9400 (count: 120, min: 1, max: 124, avg: 78.33)
Length (states) of path with itp 'false':               120 (count: 120, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1752 (count: 120, min: 0, max: 53, avg: 14.60)
Equal non-trivial interpolants along paths:            7528 (count: 120, min: 0, max: 120, avg: 62.73)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                120
Number of successful refinements:     120
Number of failed refinements:         0
Max. size of reached set before ref.: 43031
Max. size of reached set after ref.:  34965
Avg. size of reached set before ref.: 12088.82
Avg. size of reached set after ref.:  1604.86

Total time for CEGAR algorithm:     896.174s
Time for refinements:                16.486s
Average time for refinement:          0.137s
Max time for refinement:              0.356s

Code Coverage
-----------------------------
  Function coverage:      0.569
  Visited lines:          715
  Total lines:            1417
  Line coverage:          0.505
  Visited conditions:     250
  Total conditions:       496
  Condition coverage:     0.504

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             2249
  Number of reached locations:   701 (36%)
    Avg states per location:     3
    Max states per location:     20 (at node N1696)
  Number of reached functions:   62 (57%)
  Number of partitions:          2240
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [6c6b8834], stack [main, test]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          4.085s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.743s
  Time for CFA construction:      2.268s
    Time for parsing file(s):     0.656s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.511s
      Time for var class.:        0.260s
Time for Analysis:              896.174s
CPU time for analysis:          895.960s
Total time for CPAchecker:      900.264s
Total CPU time for CPAchecker:  900.030s
Time for statistics:              0.141s

Time for Garbage Collector:      19.109s (in 1612 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                239MB (   228 MiB) max;    150MB (   143 MiB) avg;    251MB (   239 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           278MB (   265 MiB) max;    222MB (   212 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   9184MB (  8758 MiB) max;   8741MB (  8336 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
