scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nz4g352_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            220466 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  218629 (99%)
  Because of loop head:            1746 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         91 (0%)
  Times precision was empty:       6516 (3%)
  Times precision was {false}:     199 (0%)
  Times result was cached:         184611 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29140 (13%)
  Times result was 'false':        19052 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         424187
  BDD entailment checks:           41629
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          248
Number of abstraction locations:          154
Max number of predicates per location:    47
Avg number of predicates per location:    20
Total predicates per abstraction:         3880200
Max number of predicates per abstraction: 47
Avg number of predicates per abstraction: 132.25
Number of irrelevant predicates:          1243283 (32%)
Number of preds handled by boolean abs:   415640 (11%)
  Total number of models for allsat:      3862184
  Max number of models for allsat:        25920
  Avg number of models for allsat:        132.54

Time for post operator:                 16.198s
  Time for path formula creation:       15.342s
Time for strengthen operator:            1.319s
Time for prec operator:                825.948s
  Time for abstraction:                822.953s (Max:     5.522s, Count: 220466)
    Boolean abstraction:               675.155s
    Solving time:                       75.734s (Max:     0.020s)
    Model enumeration time:            394.909s
    Time for BDD construction:         199.043s (Max:     1.927s)
Time for merge operator:                 2.653s
Time for coverage check:                 0.322s
  Time for BDD entailment checks:        0.241s
Total time for SMT solver (w/o itp):   470.645s

Number of path formula cache hits:   1260352 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.306s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               150229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      586351 (count: 439722, min: 0, max: 5339, avg: 1.33)
Time for BDD node cleanup:                             0.198s
Time for BDD garbage collection:                       5.501s (in 938 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.320s
  Time for transition matches:                         1.274s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1568934 (count: 1568934, min: 1, max: 1, avg: 1.00) [1 x 1568934]

CPA algorithm statistics
------------------------
Number of iterations:            1154966
Max size of waitlist:            718
Average size of waitlist:        197
Number of computed successors:   1380417
Max successors for one state:    2
Number of times merged:          191279
Number of times stopped:         197504
Number of times breaked:         91

Total time for CPA algorithm:       880.239s (Max:   478.986s)
  Time for choose from waitlist:      0.667s
  Time for precision adjustment:    834.429s
  Time for transfer relation:        31.630s
  Time for merge operator:            5.267s
  Time for stop operator:             1.854s
  Time for adding to reached set:     2.693s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   91
Avg. length of target path (in blocks):               13840 (count: 91, min: 81, max: 278, avg: 152.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.981s
  Counterexample analysis:                            12.555s (Max:     0.670s, Calls: 91)
    Refinement sat check:                              4.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.291s
  Precision update:                                    0.157s
  ARG update:                                          1.805s

Length of refined path (in blocks):                   10215 (count: 91, min: 39, max: 201, avg: 112.25)
Number of affected states:                             8704 (count: 91, min: 1, max: 193, avg: 95.65)
Length (states) of path with itp 'true':               1420 (count: 91, min: 0, max: 108, avg: 15.60)
Length (states) of path with itp non-trivial itp:      8704 (count: 91, min: 1, max: 193, avg: 95.65)
Length (states) of path with itp 'false':                91 (count: 91, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         986 (count: 91, min: 0, max: 59, avg: 10.84)
Equal non-trivial interpolants along paths:            7627 (count: 91, min: 0, max: 191, avg: 83.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                91
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 64646
Max. size of reached set after ref.:  19093
Avg. size of reached set before ref.: 12183.87
Avg. size of reached set after ref.:  1872.63

Total time for CEGAR algorithm:     896.482s
Time for refinements:                16.131s
Average time for refinement:          0.177s
Max time for refinement:              0.730s

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          739
  Total lines:            1417
  Line coverage:          0.522
  Visited conditions:     262
  Total conditions:       496
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             225538
  Number of reached locations:   735 (38%)
    Avg states per location:     306
    Max states per location:     2304 (at node N1061)
  Number of reached functions:   64 (59%)
  Number of partitions:          224465
    Avg size of partitions:      1
    Max size of partitions:      105 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [8e89254], stack [main, test]])
  Number of target states:       0
  Size of final wait list        194

Time for analysis setup:          3.782s
  Time for loading CPAs:          0.704s
  Time for loading parser:        0.669s
  Time for CFA construction:      2.222s
    Time for parsing file(s):     0.642s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.188s
    Time for post-processing:     0.544s
      Time for var class.:        0.303s
Time for Analysis:              896.483s
CPU time for analysis:          896.330s
Total time for CPAchecker:      900.268s
Total CPU time for CPAchecker:  900.120s
Time for statistics:              1.843s

Time for Garbage Collector:      24.424s (in 1022 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                638MB (   608 MiB) max;    263MB (   251 MiB) avg;    646MB (   616 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           800MB (   763 MiB) max;    387MB (   369 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:  12378MB ( 11804 MiB) max;   9664MB (  9217 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
