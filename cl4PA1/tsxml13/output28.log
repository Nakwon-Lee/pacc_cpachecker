scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d2oc9vt8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12737 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12578 (99%)
  Because of loop head:            114 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       950 (7%)
  Times precision was {false}:     93 (1%)
  Times result was cached:         9711 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1983 (16%)
  Times result was 'false':        907 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         15925
  BDD entailment checks:           583
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          186
Number of abstraction locations:          122
Max number of predicates per location:    36
Avg number of predicates per location:    15
Total predicates per abstraction:         82396
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 39.69
Number of irrelevant predicates:          18342 (22%)
Number of preds handled by boolean abs:   16463 (20%)
  Total number of models for allsat:      9147
  Max number of models for allsat:        224
  Avg number of models for allsat:        4.61

Time for post operator:                  2.134s
  Time for path formula creation:        2.004s
Time for strengthen operator:            0.164s
Time for prec operator:                 13.407s
  Time for abstraction:                 12.925s (Max:     0.081s, Count: 12737)
    Boolean abstraction:                 4.849s
    Solving time:                        2.790s (Max:     0.016s)
    Model enumeration time:              1.048s
    Time for BDD construction:           0.656s (Max:     0.032s)
Time for merge operator:                 0.207s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     3.838s

Number of path formula cache hits:   74423 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.787s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               242586
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30216 (count: 24623, min: 0, max: 3597, avg: 1.23)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.416s
Automaton transfers with branching:                0
Automaton transfer successors:                        76222 (count: 76222, min: 1, max: 1, avg: 1.00) [1 x 76222]

CPA algorithm statistics
------------------------
Number of iterations:            55307
Max size of waitlist:            31
Average size of waitlist:        11
Number of computed successors:   64935
Max successors for one state:    2
Number of times merged:          7671
Number of times stopped:         8063
Number of times breaked:         45

Total time for CPA algorithm:        20.664s (Max:     1.822s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:     14.257s
  Time for transfer relation:         4.397s
  Time for merge operator:            0.525s
  Time for stop operator:             0.222s
  Time for adding to reached set:     0.331s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                4931 (count: 45, min: 81, max: 148, avg: 109.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.932s
  Counterexample analysis:                             4.216s (Max:     0.231s, Calls: 45)
    Refinement sat check:                              1.713s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.188s
  Precision update:                                    0.098s
  ARG update:                                          0.276s

Length of refined path (in blocks):                    3810 (count: 45, min: 39, max: 109, avg: 84.67)
Number of affected states:                             3608 (count: 45, min: 2, max: 108, avg: 80.18)
Length (states) of path with itp 'true':                157 (count: 45, min: 0, max: 69, avg: 3.49)
Length (states) of path with itp non-trivial itp:      3608 (count: 45, min: 2, max: 108, avg: 80.18)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         466 (count: 45, min: 1, max: 37, avg: 10.36)
Equal non-trivial interpolants along paths:            3097 (count: 45, min: 0, max: 103, avg: 68.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 2382
Max. size of reached set after ref.:  414
Avg. size of reached set before ref.: 1198.09
Avg. size of reached set after ref.:  22.89

Total time for CEGAR algorithm:      25.818s
Time for refinements:                 5.150s
Average time for refinement:          0.114s
Max time for refinement:              0.248s

Code Coverage
-----------------------------
  Function coverage:      0.541
  Visited lines:          619
  Total lines:            1417
  Line coverage:          0.437
  Visited conditions:     214
  Total conditions:       496
  Condition coverage:     0.431

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             3082
  Number of reached locations:   594 (31%)
    Avg states per location:     5
    Max states per location:     28 (at node N1061)
  Number of reached functions:   59 (54%)
  Number of partitions:          3073
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [6f846ea1], stack [main, test]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          3.910s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.707s
  Time for CFA construction:      2.298s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.676s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.540s
      Time for var class.:        0.311s
Time for Analysis:               25.818s
CPU time for analysis:           25.810s
Total time for CPAchecker:       29.732s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.139s

Time for Garbage Collector:       0.448s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     44MB (    42 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
