scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_36x6be8d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            95146 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  94122 (99%)
  Because of loop head:            912 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         112 (0%)
  Times precision was empty:       2226 (2%)
  Times precision was {false}:     125 (0%)
  Times result was cached:         85142 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7653 (8%)
  Times result was 'false':        9518 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         131905
  BDD entailment checks:           7527
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          286
Number of abstraction locations:          154
Max number of predicates per location:    57
Avg number of predicates per location:    21
Total predicates per abstraction:         1464970
Max number of predicates per abstraction: 57
Avg number of predicates per abstraction: 188.35
Number of irrelevant predicates:          309422 (21%)
Number of preds handled by boolean abs:   113577 (8%)
  Total number of models for allsat:      3238744
  Max number of models for allsat:        220416
  Avg number of models for allsat:        423.20

Time for post operator:                  4.414s
  Time for path formula creation:        4.063s
Time for strengthen operator:            0.607s
Time for prec operator:                860.862s
  Time for abstraction:                859.620s (Max:   103.543s, Count: 95146)
    Boolean abstraction:               797.252s
    Solving time:                       16.800s (Max:     0.044s)
    Model enumeration time:            572.100s
    Time for BDD construction:         206.646s (Max:    18.722s)
Time for merge operator:                 0.619s
Time for coverage check:                 0.185s
  Time for BDD entailment checks:        0.156s
Total time for SMT solver (w/o itp):   588.900s

Number of path formula cache hits:   636569 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.385s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               76117
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      282510 (count: 166005, min: 0, max: 7511, avg: 1.70)
Time for BDD node cleanup:                             0.097s
Time for BDD garbage collection:                       4.356s (in 960 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.041s
  Time for transition matches:                         0.512s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       587052 (count: 587052, min: 1, max: 1, avg: 1.00) [1 x 587052]

CPA algorithm statistics
------------------------
Number of iterations:            431277
Max size of waitlist:            72
Average size of waitlist:        32
Number of computed successors:   509750
Max successors for one state:    2
Number of times merged:          62189
Number of times stopped:         65929
Number of times breaked:         112

Total time for CPA algorithm:       880.430s (Max:   118.771s)
  Time for choose from waitlist:      0.290s
  Time for precision adjustment:    864.090s
  Time for transfer relation:        10.851s
  Time for merge operator:            1.501s
  Time for stop operator:             0.813s
  Time for adding to reached set:     1.110s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   112
Avg. length of target path (in blocks):               14915 (count: 112, min: 81, max: 191, avg: 133.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.953s
  Counterexample analysis:                            13.341s (Max:     0.480s, Calls: 112)
    Refinement sat check:                              4.550s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.316s
  Precision update:                                    0.222s
  ARG update:                                          0.847s

Length of refined path (in blocks):                   11137 (count: 112, min: 39, max: 165, avg: 99.44)
Number of affected states:                             9421 (count: 112, min: 1, max: 157, avg: 84.12)
Length (states) of path with itp 'true':               1604 (count: 112, min: 0, max: 91, avg: 14.32)
Length (states) of path with itp non-trivial itp:      9421 (count: 112, min: 1, max: 157, avg: 84.12)
Length (states) of path with itp 'false':               112 (count: 112, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1236 (count: 112, min: 0, max: 59, avg: 11.04)
Equal non-trivial interpolants along paths:            8073 (count: 112, min: 0, max: 143, avg: 72.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                112
Number of successful refinements:     112
Number of failed refinements:         0
Max. size of reached set before ref.: 11755
Max. size of reached set after ref.:  8030
Avg. size of reached set before ref.: 4592.27
Avg. size of reached set after ref.:  752.09

Total time for CEGAR algorithm:     896.193s
Time for refinements:                15.706s
Average time for refinement:          0.140s
Max time for refinement:              0.504s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          624
  Total lines:            1417
  Line coverage:          0.440
  Visited conditions:     214
  Total conditions:       496
  Condition coverage:     0.431

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             4203
  Number of reached locations:   603 (31%)
    Avg states per location:     6
    Max states per location:     36 (at node N1061)
  Number of reached functions:   60 (55%)
  Number of partitions:          4192
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [2ed45230], stack [main, test]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          4.070s
  Time for loading CPAs:          0.840s
  Time for loading parser:        0.675s
  Time for CFA construction:      2.317s
    Time for parsing file(s):     0.707s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.543s
      Time for var class.:        0.289s
Time for Analysis:              896.193s
CPU time for analysis:          896.010s
Total time for CPAchecker:      900.267s
Total CPU time for CPAchecker:  900.080s
Time for statistics:              0.148s

Time for Garbage Collector:      10.064s (in 1564 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                144MB (   138 MiB) max;     97MB (    92 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           160MB (   153 MiB) max;    141MB (   135 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8433MB (  8042 MiB) max;   8271MB (  7888 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
