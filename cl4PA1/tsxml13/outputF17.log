scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ij1kzrn6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            634275 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  630097 (99%)
  Because of loop head:            3932 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         246 (0%)
  Times precision was empty:       19000 (3%)
  Times precision was {false}:     351 (0%)
  Times result was cached:         593834 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21090 (3%)
  Times result was 'false':        33809 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1285545
  BDD entailment checks:           164873
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          264
Number of abstraction locations:          154
Max number of predicates per location:    45
Avg number of predicates per location:    20
Total predicates per abstraction:         7783270
Max number of predicates per abstraction: 45
Avg number of predicates per abstraction: 363.01
Number of irrelevant predicates:          3004777 (39%)
Number of preds handled by boolean abs:   315629 (4%)
  Total number of models for allsat:      2487737
  Max number of models for allsat:        53768
  Avg number of models for allsat:        117.96

Time for post operator:                 21.753s
  Time for path formula creation:       19.931s
Time for strengthen operator:            3.848s
Time for prec operator:                736.731s
  Time for abstraction:                729.435s (Max:    14.489s, Count: 634275)
    Boolean abstraction:               455.908s
    Solving time:                       40.139s (Max:     0.026s)
    Model enumeration time:            278.815s
    Time for BDD construction:         132.465s (Max:     3.618s)
Time for merge operator:                 2.915s
Time for coverage check:                 0.541s
  Time for BDD entailment checks:        0.421s
Total time for SMT solver (w/o itp):   318.955s

Number of path formula cache hits:   5045055 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.710s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               142179
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      348535 (count: 436087, min: 0, max: 5804, avg: 0.80)
Time for BDD node cleanup:                             0.139s
Time for BDD garbage collection:                       1.481s (in 372 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.213s
  Time for transition matches:                         3.422s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      4511819 (count: 4511819, min: 1, max: 1, avg: 1.00) [1 x 4511819]

CPA algorithm statistics
------------------------
Number of iterations:            3366594
Max size of waitlist:            669
Average size of waitlist:        183
Number of computed successors:   4024022
Max successors for one state:    2
Number of times merged:          560336
Number of times stopped:         618141
Number of times breaked:         246

Total time for CPA algorithm:       852.992s (Max:   152.632s)
  Time for choose from waitlist:      1.327s
  Time for precision adjustment:    762.301s
  Time for transfer relation:        61.106s
  Time for merge operator:            8.844s
  Time for stop operator:             4.655s
  Time for adding to reached set:     5.302s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   246
Avg. length of target path (in blocks):               29462 (count: 246, min: 81, max: 147, avg: 119.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.486s
  Counterexample analysis:                            19.210s (Max:     0.322s, Calls: 246)
    Refinement sat check:                              7.004s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.265s
  Precision update:                                    0.319s
  ARG update:                                          6.390s

Length of refined path (in blocks):                   20224 (count: 246, min: 39, max: 127, avg: 82.21)
Number of affected states:                            11819 (count: 246, min: 1, max: 116, avg: 48.04)
Length (states) of path with itp 'true':               8159 (count: 246, min: 0, max: 83, avg: 33.17)
Length (states) of path with itp non-trivial itp:     11819 (count: 246, min: 1, max: 116, avg: 48.04)
Length (states) of path with itp 'false':               246 (count: 246, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2493 (count: 246, min: 0, max: 55, avg: 10.13)
Equal non-trivial interpolants along paths:            9080 (count: 246, min: 0, max: 102, avg: 36.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                246
Number of successful refinements:     246
Number of failed refinements:         0
Max. size of reached set before ref.: 135017
Max. size of reached set after ref.:  133330
Avg. size of reached set before ref.: 46018.85
Avg. size of reached set after ref.:  32673.36

Total time for CEGAR algorithm:     896.212s
Time for refinements:                36.273s
Average time for refinement:          0.147s
Max time for refinement:              0.652s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          707
  Total lines:            1417
  Line coverage:          0.499
  Visited conditions:     252
  Total conditions:       496
  Condition coverage:     0.508

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             89081
  Number of reached locations:   684 (35%)
    Avg states per location:     130
    Max states per location:     602 (at node N1696)
  Number of reached functions:   63 (58%)
  Number of partitions:          88756
    Avg size of partitions:      1
    Max size of partitions:      63 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [4f670b7c], stack [main, test]])
  Number of target states:       0
  Size of final wait list        383

Time for analysis setup:          4.076s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.736s
  Time for CFA construction:      2.327s
    Time for parsing file(s):     0.694s
    Time for AST to CFA:          0.692s
    Time for CFA sanity check:    0.214s
    Time for post-processing:     0.577s
      Time for var class.:        0.318s
Time for Analysis:              896.212s
CPU time for analysis:          896.060s
Total time for CPAchecker:      900.293s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              1.107s

Time for Garbage Collector:      43.443s (in 1065 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                733MB (   699 MiB) max;    359MB (   343 MiB) avg;    742MB (   707 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           745MB (   711 MiB) max;    551MB (   526 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9032MB (  8614 MiB) max;   8415MB (  8025 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
