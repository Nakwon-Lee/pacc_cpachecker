scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nccsuh7x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            387876 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  385340 (99%)
  Because of loop head:            2392 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144 (0%)
  Times precision was empty:       15519 (4%)
  Times precision was {false}:     147 (0%)
  Times result was cached:         347988 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24222 (6%)
  Times result was 'false':        31202 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         704869
  BDD entailment checks:           57773
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          248
Number of abstraction locations:          153
Max number of predicates per location:    44
Avg number of predicates per location:    19
Total predicates per abstraction:         5493078
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 225.41
Number of irrelevant predicates:          1265014 (23%)
Number of preds handled by boolean abs:   354264 (6%)
  Total number of models for allsat:      3615492
  Max number of models for allsat:        35400
  Avg number of models for allsat:        149.26

Time for post operator:                  9.194s
  Time for path formula creation:        8.113s
Time for strengthen operator:            2.045s
Time for prec operator:                814.184s
  Time for abstraction:                810.088s (Max:     8.042s, Count: 387876)
    Boolean abstraction:               610.691s
    Solving time:                       45.474s (Max:     0.016s)
    Model enumeration time:            379.492s
    Time for BDD construction:         180.430s (Max:     2.177s)
Time for merge operator:                 1.208s
Time for coverage check:                 0.237s
  Time for BDD entailment checks:        0.169s
Total time for SMT solver (w/o itp):   424.966s

Number of path formula cache hits:   3151051 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.214s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               160162
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      358717 (count: 352243, min: 0, max: 4949, avg: 1.02)
Time for BDD node cleanup:                             0.146s
Time for BDD garbage collection:                       2.861s (in 585 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.377s
  Time for transition matches:                         1.859s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2663543 (count: 2663543, min: 1, max: 1, avg: 1.00) [1 x 2663543]

CPA algorithm statistics
------------------------
Number of iterations:            1980699
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   2362717
Max successors for one state:    2
Number of times merged:          323548
Number of times stopped:         348718
Number of times breaked:         144

Total time for CPA algorithm:       876.572s (Max:   220.368s)
  Time for choose from waitlist:      0.856s
  Time for precision adjustment:    827.673s
  Time for transfer relation:        31.692s
  Time for merge operator:            4.983s
  Time for stop operator:             2.755s
  Time for adding to reached set:     3.187s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   144
Avg. length of target path (in blocks):               18048 (count: 144, min: 81, max: 169, avg: 125.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.507s
  Counterexample analysis:                            13.141s (Max:     0.298s, Calls: 144)
    Refinement sat check:                              4.763s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.279s
  Precision update:                                    0.248s
  ARG update:                                          3.591s

Length of refined path (in blocks):                   11463 (count: 144, min: 39, max: 142, avg: 79.60)
Number of affected states:                             8656 (count: 144, min: 1, max: 141, avg: 60.11)
Length (states) of path with itp 'true':               2663 (count: 144, min: 0, max: 69, avg: 18.49)
Length (states) of path with itp non-trivial itp:      8656 (count: 144, min: 1, max: 141, avg: 60.11)
Length (states) of path with itp 'false':               144 (count: 144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1420 (count: 144, min: 0, max: 53, avg: 9.86)
Equal non-trivial interpolants along paths:            7092 (count: 144, min: 0, max: 120, avg: 49.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                144
Number of successful refinements:     144
Number of failed refinements:         0
Max. size of reached set before ref.: 70288
Max. size of reached set after ref.:  16928
Avg. size of reached set before ref.: 17050.76
Avg. size of reached set after ref.:  3500.08

Total time for CEGAR algorithm:     896.228s
Time for refinements:                19.331s
Average time for refinement:          0.134s
Max time for refinement:              0.361s

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          734
  Total lines:            1417
  Line coverage:          0.518
  Visited conditions:     262
  Total conditions:       496
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             31498
  Number of reached locations:   729 (37%)
    Avg states per location:     43
    Max states per location:     219 (at node N1061)
  Number of reached functions:   64 (59%)
  Number of partitions:          31358
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [663adfd], stack [main, test]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          4.043s
  Time for loading CPAs:          0.912s
  Time for loading parser:        0.709s
  Time for CFA construction:      2.260s
    Time for parsing file(s):     0.643s
    Time for AST to CFA:          0.684s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.580s
      Time for var class.:        0.329s
Time for Analysis:              896.228s
CPU time for analysis:          896.050s
Total time for CPAchecker:      900.277s
Total CPU time for CPAchecker:  900.080s
Time for statistics:              0.467s

Time for Garbage Collector:      26.681s (in 1821 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                251MB (   239 MiB) max;    162MB (   155 MiB) avg;    265MB (   253 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           280MB (   267 MiB) max;    235MB (   224 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   9437MB (  9000 MiB) max;   8839MB (  8430 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
