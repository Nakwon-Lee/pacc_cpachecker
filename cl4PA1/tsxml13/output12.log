scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_57re6kti/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27007 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26818 (99%)
  Because of loop head:            156 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       5964 (22%)
  Times precision was {false}:     204 (1%)
  Times result was cached:         19661 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1178 (4%)
  Times result was 'false':        1045 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         43800
  BDD entailment checks:           3552
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          111
Number of abstraction locations:          108
Max number of predicates per location:    26
Avg number of predicates per location:    10
Total predicates per abstraction:         58428
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 42.28
Number of irrelevant predicates:          21537 (37%)
Number of preds handled by boolean abs:   6279 (11%)
  Total number of models for allsat:      2397
  Max number of models for allsat:        80
  Avg number of models for allsat:        2.03

Time for post operator:                  4.091s
  Time for path formula creation:        3.858s
Time for strengthen operator:            0.320s
Time for prec operator:                  8.372s
  Time for abstraction:                  7.690s (Max:     0.040s, Count: 27007)
    Boolean abstraction:                 1.869s
    Solving time:                        1.229s (Max:     0.039s)
    Model enumeration time:              0.262s
    Time for BDD construction:           0.289s (Max:     0.015s)
Time for merge operator:                 0.437s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.492s

Number of path formula cache hits:   176640 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.553s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               18020
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11542 (count: 21596, min: 0, max: 2256, avg: 0.53)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.671s
  Time for transition matches:                         0.311s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       177143 (count: 177143, min: 1, max: 1, avg: 1.00) [1 x 177143]

CPA algorithm statistics
------------------------
Number of iterations:            131397
Max size of waitlist:            60
Average size of waitlist:        20
Number of computed successors:   155477
Max successors for one state:    2
Number of times merged:          20124
Number of times stopped:         22432
Number of times breaked:         33

Total time for CPA algorithm:        21.974s (Max:     2.974s)
  Time for choose from waitlist:      0.213s
  Time for precision adjustment:     10.255s
  Time for transfer relation:         8.044s
  Time for merge operator:            1.112s
  Time for stop operator:             0.475s
  Time for adding to reached set:     0.451s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                3577 (count: 33, min: 81, max: 144, avg: 108.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.328s
  Counterexample analysis:                             2.543s (Max:     0.131s, Calls: 33)
    Refinement sat check:                              1.080s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.123s
  Precision update:                                    0.058s
  ARG update:                                          0.470s

Length of refined path (in blocks):                    2732 (count: 33, min: 57, max: 102, avg: 82.79)
Number of affected states:                             2481 (count: 33, min: 1, max: 101, avg: 75.18)
Length (states) of path with itp 'true':                218 (count: 33, min: 0, max: 69, avg: 6.61)
Length (states) of path with itp non-trivial itp:      2481 (count: 33, min: 1, max: 101, avg: 75.18)
Length (states) of path with itp 'false':                33 (count: 33, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         288 (count: 33, min: 0, max: 26, avg: 8.73)
Equal non-trivial interpolants along paths:            2160 (count: 33, min: 0, max: 99, avg: 65.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 6382
Max. size of reached set after ref.:  4303
Avg. size of reached set before ref.: 4188.06
Avg. size of reached set after ref.:  267.64

Total time for CEGAR algorithm:      25.625s
Time for refinements:                 3.643s
Average time for refinement:          0.110s
Max time for refinement:              0.248s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          729
  Total lines:            1417
  Line coverage:          0.514
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             2626
  Number of reached locations:   718 (37%)
    Avg states per location:     3
    Max states per location:     20 (at node N1696)
  Number of reached functions:   63 (58%)
  Number of partitions:          2623
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [3c1634c4], stack [main, test]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          4.141s
  Time for loading CPAs:          0.898s
  Time for loading parser:        0.665s
  Time for CFA construction:      2.372s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.784s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.547s
      Time for var class.:        0.271s
Time for Analysis:               25.625s
CPU time for analysis:           25.630s
Total time for CPAchecker:       29.771s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.144s

Time for Garbage Collector:       0.738s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     52MB (    50 MiB) avg;     83MB (    80 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
