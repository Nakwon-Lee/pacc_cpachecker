scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5h7w36_9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29584 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29116 (98%)
  Because of loop head:            359 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109 (0%)
  Times precision was empty:       11610 (39%)
  Times precision was {false}:     134 (0%)
  Times result was cached:         17373 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      467 (2%)
  Times result was 'false':        147 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         59628
  BDD entailment checks:           3918
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          23
Number of abstraction locations:          121
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         42401
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 70.55
Number of irrelevant predicates:          22870 (54%)
Number of preds handled by boolean abs:   716 (2%)
  Total number of models for allsat:      522
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  3.503s
  Time for path formula creation:        3.261s
Time for strengthen operator:            0.280s
Time for prec operator:                  5.438s
  Time for abstraction:                  4.795s (Max:     0.028s, Count: 29584)
    Boolean abstraction:                 0.683s
    Solving time:                        0.586s (Max:     0.013s)
    Model enumeration time:              0.066s
    Time for BDD construction:           0.086s (Max:     0.012s)
Time for merge operator:                 0.498s
Time for coverage check:                 0.069s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     0.652s

Number of path formula cache hits:   224854 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.920s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               275
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1246 (count: 19148, min: 0, max: 375, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.695s
  Time for transition matches:                         0.319s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       219273 (count: 219273, min: 1, max: 1, avg: 1.00) [1 x 219273]

CPA algorithm statistics
------------------------
Number of iterations:            162258
Max size of waitlist:            95
Average size of waitlist:        34
Number of computed successors:   194440
Max successors for one state:    2
Number of times merged:          27855
Number of times stopped:         30437
Number of times breaked:         109

Total time for CPA algorithm:        18.757s (Max:     2.345s)
  Time for choose from waitlist:      0.210s
  Time for precision adjustment:      7.549s
  Time for transfer relation:         7.440s
  Time for merge operator:            1.113s
  Time for stop operator:             0.518s
  Time for adding to reached set:     0.603s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   109
Avg. length of target path (in blocks):                9536 (count: 109, min: 81, max: 100, avg: 87.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.128s
  Counterexample analysis:                             5.187s (Max:     0.102s, Calls: 109)
    Refinement sat check:                              2.311s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.128s
  Precision update:                                    0.104s
  ARG update:                                          0.562s

Length of refined path (in blocks):                    8368 (count: 109, min: 69, max: 95, avg: 76.77)
Number of affected states:                             2563 (count: 109, min: 2, max: 94, avg: 23.51)
Length (states) of path with itp 'true':               5696 (count: 109, min: 0, max: 84, avg: 52.26)
Length (states) of path with itp non-trivial itp:      2563 (count: 109, min: 2, max: 94, avg: 23.51)
Length (states) of path with itp 'false':               109 (count: 109, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         565 (count: 109, min: 1, max: 13, avg: 5.18)
Equal non-trivial interpolants along paths:            1889 (count: 109, min: 0, max: 80, avg: 17.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                109
Number of successful refinements:     109
Number of failed refinements:         0
Max. size of reached set before ref.: 7785
Max. size of reached set after ref.:  7593
Avg. size of reached set before ref.: 5564.79
Avg. size of reached set after ref.:  4070.88

Total time for CEGAR algorithm:      26.174s
Time for refinements:                 7.010s
Average time for refinement:          0.064s
Max time for refinement:              0.202s

Code Coverage
-----------------------------
  Function coverage:      0.385
  Visited lines:          547
  Total lines:            1417
  Line coverage:          0.386
  Visited conditions:     192
  Total conditions:       496
  Condition coverage:     0.387

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             1021
  Number of reached locations:   507 (26%)
    Avg states per location:     2
    Max states per location:     10 (at node N1696)
  Number of reached functions:   42 (39%)
  Number of partitions:          1020
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N924 (before line 1362), Function outgoing called from node N991, stack depth 5 [237affb5], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.037s
  Time for loading CPAs:          0.819s
  Time for loading parser:        0.799s
  Time for CFA construction:      2.218s
    Time for parsing file(s):     0.667s
    Time for AST to CFA:          0.645s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.558s
      Time for var class.:        0.318s
Time for Analysis:               26.174s
CPU time for analysis:           26.180s
Total time for CPAchecker:       30.216s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.106s

Time for Garbage Collector:       1.002s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                100MB (    96 MiB) max;     56MB (    53 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
