scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_21w7rtxx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15563 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15397 (99%)
  Because of loop head:            124 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       2693 (17%)
  Times precision was {false}:     84 (1%)
  Times result was cached:         10612 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2174 (14%)
  Times result was 'false':        1031 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         26808
  BDD entailment checks:           970
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          128
Number of abstraction locations:          126
Max number of predicates per location:    27
Avg number of predicates per location:    11
Total predicates per abstraction:         109429
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 48.46
Number of irrelevant predicates:          30663 (28%)
Number of preds handled by boolean abs:   15918 (15%)
  Total number of models for allsat:      11070
  Max number of models for allsat:        160
  Avg number of models for allsat:        5.09

Time for post operator:                  2.205s
  Time for path formula creation:        2.082s
Time for strengthen operator:            0.245s
Time for prec operator:                 13.317s
  Time for abstraction:                 12.925s (Max:     0.033s, Count: 15563)
    Boolean abstraction:                 4.487s
    Solving time:                        2.405s (Max:     0.056s)
    Model enumeration time:              1.157s
    Time for BDD construction:           0.574s (Max:     0.015s)
Time for merge operator:                 0.269s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     3.563s

Number of path formula cache hits:   112220 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.856s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               62196
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24039 (count: 25209, min: 0, max: 2448, avg: 0.95)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.340s
Automaton transfers with branching:                0
Automaton transfer successors:                       107886 (count: 107886, min: 1, max: 1, avg: 1.00) [1 x 107886]

CPA algorithm statistics
------------------------
Number of iterations:            79534
Max size of waitlist:            29
Average size of waitlist:        13
Number of computed successors:   94807
Max successors for one state:    2
Number of times merged:          12919
Number of times stopped:         13587
Number of times breaked:         42

Total time for CPA algorithm:        21.241s (Max:     1.143s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:     14.349s
  Time for transfer relation:         4.605s
  Time for merge operator:            0.652s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.309s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                4427 (count: 42, min: 81, max: 161, avg: 105.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.583s
  Counterexample analysis:                             3.932s (Max:     0.237s, Calls: 42)
    Refinement sat check:                              1.546s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.082s
  ARG update:                                          0.326s

Length of refined path (in blocks):                    3562 (count: 42, min: 39, max: 119, avg: 84.81)
Number of affected states:                             3363 (count: 42, min: 2, max: 118, avg: 80.07)
Length (states) of path with itp 'true':                157 (count: 42, min: 0, max: 69, avg: 3.74)
Length (states) of path with itp non-trivial itp:      3363 (count: 42, min: 2, max: 118, avg: 80.07)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         469 (count: 42, min: 1, max: 29, avg: 11.17)
Equal non-trivial interpolants along paths:            2852 (count: 42, min: 0, max: 116, avg: 67.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 4352
Max. size of reached set after ref.:  497
Avg. size of reached set before ref.: 1846.95
Avg. size of reached set after ref.:  28.19

Total time for CEGAR algorithm:      26.170s
Time for refinements:                 4.914s
Average time for refinement:          0.117s
Max time for refinement:              0.273s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          722
  Total lines:            1417
  Line coverage:          0.510
  Visited conditions:     256
  Total conditions:       496
  Condition coverage:     0.516

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             3801
  Number of reached locations:   710 (37%)
    Avg states per location:     5
    Max states per location:     23 (at node N1061)
  Number of reached functions:   63 (58%)
  Number of partitions:          3794
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [7ff07f20], stack [main, test]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.064s
  Time for loading CPAs:          0.825s
  Time for loading parser:        0.757s
  Time for CFA construction:      2.299s
    Time for parsing file(s):     0.687s
    Time for AST to CFA:          0.672s
    Time for CFA sanity check:    0.202s
    Time for post-processing:     0.593s
      Time for var class.:        0.324s
Time for Analysis:               26.170s
CPU time for analysis:           26.160s
Total time for CPAchecker:       30.238s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.189s

Time for Garbage Collector:       0.576s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
