scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fbj7bb9t/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            571111 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  565971 (99%)
  Because of loop head:            4436 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         704 (0%)
  Times precision was empty:       77113 (14%)
  Times precision was {false}:     149 (0%)
  Times result was cached:         472565 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21284 (4%)
  Times result was 'false':        31971 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1159286
  BDD entailment checks:           169162
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          242
Number of abstraction locations:          141
Max number of predicates per location:    40
Avg number of predicates per location:    19
Total predicates per abstraction:         7226514
Max number of predicates per abstraction: 40
Avg number of predicates per abstraction: 337.17
Number of irrelevant predicates:          2872796 (40%)
Number of preds handled by boolean abs:   316713 (4%)
  Total number of models for allsat:      2531828
  Max number of models for allsat:        26884
  Avg number of models for allsat:        118.95

Time for post operator:                 19.348s
  Time for path formula creation:       16.914s
Time for strengthen operator:            3.303s
Time for prec operator:                675.241s
  Time for abstraction:                668.668s (Max:     6.328s, Count: 571111)
    Boolean abstraction:               420.333s
    Solving time:                       45.649s (Max:     0.036s)
    Model enumeration time:            245.183s
    Time for BDD construction:         124.911s (Max:     1.785s)
Time for merge operator:                 2.400s
Time for coverage check:                 0.841s
  Time for BDD entailment checks:        0.706s
Total time for SMT solver (w/o itp):   290.832s

Number of path formula cache hits:   4576365 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.444s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               175952
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      364447 (count: 503849, min: 0, max: 3099, avg: 0.72)
Time for BDD node cleanup:                             0.177s
Time for BDD garbage collection:                       1.898s (in 395 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.486s
  Time for transition matches:                         2.928s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      4004360 (count: 4004360, min: 1, max: 1, avg: 1.00) [1 x 4004360]

CPA algorithm statistics
------------------------
Number of iterations:            2983908
Max size of waitlist:            561
Average size of waitlist:        164
Number of computed successors:   3563999
Max successors for one state:    2
Number of times merged:          495062
Number of times stopped:         541309
Number of times breaked:         704

Total time for CPA algorithm:       781.277s (Max:    81.538s)
  Time for choose from waitlist:      1.584s
  Time for precision adjustment:    696.296s
  Time for transfer relation:        55.843s
  Time for merge operator:            7.877s
  Time for stop operator:             4.636s
  Time for adding to reached set:     6.442s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   704
Avg. length of target path (in blocks):               76927 (count: 704, min: 81, max: 129, avg: 109.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  60.338s
  Counterexample analysis:                            52.190s (Max:     0.289s, Calls: 704)
    Refinement sat check:                             19.165s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.049s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.447s
  Precision update:                                    0.990s
  ARG update:                                          6.059s

Length of refined path (in blocks):                   59155 (count: 704, min: 39, max: 124, avg: 84.03)
Number of affected states:                            26563 (count: 704, min: 1, max: 116, avg: 37.73)
Length (states) of path with itp 'true':              31888 (count: 704, min: 0, max: 84, avg: 45.30)
Length (states) of path with itp non-trivial itp:     26563 (count: 704, min: 1, max: 116, avg: 37.73)
Length (states) of path with itp 'false':               704 (count: 704, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        8160 (count: 704, min: 0, max: 56, avg: 11.59)
Equal non-trivial interpolants along paths:           17699 (count: 704, min: 0, max: 80, avg: 25.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                704
Number of successful refinements:     704
Number of failed refinements:         0
Max. size of reached set before ref.: 105330
Max. size of reached set after ref.:  103852
Avg. size of reached set before ref.: 39851.34
Avg. size of reached set after ref.:  35689.75

Total time for CEGAR algorithm:     896.229s
Time for refinements:                91.813s
Average time for refinement:          0.130s
Max time for refinement:              1.699s

Code Coverage
-----------------------------
  Function coverage:      0.477
  Visited lines:          611
  Total lines:            1417
  Line coverage:          0.431
  Visited conditions:     216
  Total conditions:       496
  Condition coverage:     0.435

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             60958
  Number of reached locations:   579 (30%)
    Avg states per location:     105
    Max states per location:     710 (at node N1696)
  Number of reached functions:   52 (48%)
  Number of partitions:          60386
    Avg size of partitions:      1
    Max size of partitions:      93 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [7f90f16c], stack [main, test]])
  Number of target states:       0
  Size of final wait list        512

Time for analysis setup:          4.045s
  Time for loading CPAs:          0.822s
  Time for loading parser:        0.722s
  Time for CFA construction:      2.279s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.664s
    Time for CFA sanity check:    0.189s
    Time for post-processing:     0.573s
      Time for var class.:        0.317s
Time for Analysis:              896.229s
CPU time for analysis:          896.100s
Total time for CPAchecker:      900.279s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.752s

Time for Garbage Collector:      44.486s (in 1471 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                529MB (   505 MiB) max;    253MB (   241 MiB) avg;    535MB (   510 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           573MB (   546 MiB) max;    366MB (   349 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8974MB (  8559 MiB) max;   8452MB (  8061 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
