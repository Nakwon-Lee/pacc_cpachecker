scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u_skxqrf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            387525 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  384991 (99%)
  Because of loop head:            2390 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         144 (0%)
  Times precision was empty:       15517 (4%)
  Times precision was {false}:     147 (0%)
  Times result was cached:         347692 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24169 (6%)
  Times result was 'false':        31180 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         704056
  BDD entailment checks:           57672
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          248
Number of abstraction locations:          153
Max number of predicates per location:    44
Avg number of predicates per location:    19
Total predicates per abstraction:         5487017
Max number of predicates per abstraction: 44
Avg number of predicates per abstraction: 225.65
Number of irrelevant predicates:          1263898 (23%)
Number of preds handled by boolean abs:   353136 (6%)
  Total number of models for allsat:      3510972
  Max number of models for allsat:        35400
  Avg number of models for allsat:        145.27

Time for post operator:                  8.398s
  Time for path formula creation:        7.426s
Time for strengthen operator:            2.220s
Time for prec operator:                813.149s
  Time for abstraction:                808.915s (Max:     8.277s, Count: 387525)
    Boolean abstraction:               607.321s
    Solving time:                       46.596s (Max:     0.016s)
    Model enumeration time:            379.668s
    Time for BDD construction:         175.618s (Max:     2.177s)
Time for merge operator:                 1.265s
Time for coverage check:                 0.249s
  Time for BDD entailment checks:        0.183s
Total time for SMT solver (w/o itp):   426.264s

Number of path formula cache hits:   3147726 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.781s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               68053
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      358084 (count: 351600, min: 0, max: 5379, avg: 1.02)
Time for BDD node cleanup:                             0.166s
Time for BDD garbage collection:                       2.745s (in 565 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.574s
  Time for transition matches:                         1.935s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2660885 (count: 2660885, min: 1, max: 1, avg: 1.00) [1 x 2660885]

CPA algorithm statistics
------------------------
Number of iterations:            1978703
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   2360314
Max successors for one state:    2
Number of times merged:          323192
Number of times stopped:         348331
Number of times breaked:         144

Total time for CPA algorithm:       877.053s (Max:   206.317s)
  Time for choose from waitlist:      0.983s
  Time for precision adjustment:    826.607s
  Time for transfer relation:        32.842s
  Time for merge operator:            4.900s
  Time for stop operator:             2.853s
  Time for adding to reached set:     3.611s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   144
Avg. length of target path (in blocks):               18048 (count: 144, min: 81, max: 169, avg: 125.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.270s
  Counterexample analysis:                            13.007s (Max:     0.300s, Calls: 144)
    Refinement sat check:                              4.700s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.238s
  Precision update:                                    0.275s
  ARG update:                                          3.549s

Length of refined path (in blocks):                   11463 (count: 144, min: 39, max: 142, avg: 79.60)
Number of affected states:                             8656 (count: 144, min: 1, max: 141, avg: 60.11)
Length (states) of path with itp 'true':               2663 (count: 144, min: 0, max: 69, avg: 18.49)
Length (states) of path with itp non-trivial itp:      8656 (count: 144, min: 1, max: 141, avg: 60.11)
Length (states) of path with itp 'false':               144 (count: 144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1420 (count: 144, min: 0, max: 53, avg: 9.86)
Equal non-trivial interpolants along paths:            7092 (count: 144, min: 0, max: 120, avg: 49.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                144
Number of successful refinements:     144
Number of failed refinements:         0
Max. size of reached set before ref.: 70288
Max. size of reached set after ref.:  16928
Avg. size of reached set before ref.: 17050.76
Avg. size of reached set after ref.:  3500.08

Total time for CEGAR algorithm:     896.385s
Time for refinements:                19.023s
Average time for refinement:          0.132s
Max time for refinement:              0.396s

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          734
  Total lines:            1417
  Line coverage:          0.518
  Visited conditions:     262
  Total conditions:       496
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             29504
  Number of reached locations:   729 (37%)
    Avg states per location:     40
    Max states per location:     201 (at node N1061)
  Number of reached functions:   64 (59%)
  Number of partitions:          29372
    Avg size of partitions:      1
    Max size of partitions:      18 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [51101197], stack [main, test]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          3.878s
  Time for loading CPAs:          0.802s
  Time for loading parser:        0.630s
  Time for CFA construction:      2.292s
    Time for parsing file(s):     0.650s
    Time for AST to CFA:          0.695s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.597s
      Time for var class.:        0.318s
Time for Analysis:              896.385s
CPU time for analysis:          896.190s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.060s
Time for statistics:              0.546s

Time for Garbage Collector:      26.979s (in 1761 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                270MB (   258 MiB) max;    152MB (   145 MiB) avg;    273MB (   260 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           274MB (   262 MiB) max;    235MB (   224 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   9370MB (  8936 MiB) max;   8828MB (  8419 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
