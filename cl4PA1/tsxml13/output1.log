scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qgltp22j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27722 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27368 (99%)
  Because of loop head:            328 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       9674 (35%)
  Times precision was {false}:     267 (1%)
  Times result was cached:         17279 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      502 (2%)
  Times result was 'false':        76 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         52684
  BDD entailment checks:           4184
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          19
Number of abstraction locations:          139
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         31091
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 40.43
Number of irrelevant predicates:          20168 (65%)
Number of preds handled by boolean abs:   763 (2%)
  Total number of models for allsat:      550
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.10

Time for post operator:                  5.570s
  Time for path formula creation:        5.311s
Time for strengthen operator:            0.430s
Time for prec operator:                  6.171s
  Time for abstraction:                  5.424s (Max:     0.030s, Count: 27722)
    Boolean abstraction:                 0.858s
    Solving time:                        0.906s (Max:     0.019s)
    Model enumeration time:              0.107s
    Time for BDD construction:           0.071s (Max:     0.010s)
Time for merge operator:                 0.702s
Time for coverage check:                 0.064s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     1.013s

Number of path formula cache hits:   168791 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.854s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               270
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1194 (count: 18335, min: 0, max: 279, avg: 0.07)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.657s
  Time for transition matches:                         0.268s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       201180 (count: 201180, min: 1, max: 1, avg: 1.00) [1 x 201180]

CPA algorithm statistics
------------------------
Number of iterations:            147590
Max size of waitlist:            47
Average size of waitlist:        19
Number of computed successors:   175981
Max successors for one state:    2
Number of times merged:          24250
Number of times stopped:         27703
Number of times breaked:         26

Total time for CPA algorithm:        22.289s (Max:     3.223s)
  Time for choose from waitlist:      0.265s
  Time for precision adjustment:      8.093s
  Time for transfer relation:        10.083s
  Time for merge operator:            1.394s
  Time for stop operator:             0.481s
  Time for adding to reached set:     0.563s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                3211 (count: 26, min: 85, max: 153, avg: 123.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.859s
  Counterexample analysis:                             2.034s (Max:     0.124s, Calls: 26)
    Refinement sat check:                              0.876s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.035s
  ARG update:                                          0.642s

Length of refined path (in blocks):                    2428 (count: 26, min: 74, max: 107, avg: 93.38)
Number of affected states:                             2257 (count: 26, min: 1, max: 106, avg: 86.81)
Length (states) of path with itp 'true':                145 (count: 26, min: 0, max: 73, avg: 5.58)
Length (states) of path with itp non-trivial itp:      2257 (count: 26, min: 1, max: 106, avg: 86.81)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         157 (count: 26, min: 0, max: 13, avg: 6.04)
Equal non-trivial interpolants along paths:            2074 (count: 26, min: 0, max: 104, avg: 79.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 8009
Max. size of reached set after ref.:  2355
Avg. size of reached set before ref.: 5767.85
Avg. size of reached set after ref.:  183.31

Total time for CEGAR algorithm:      25.442s
Time for refinements:                 3.150s
Average time for refinement:          0.121s
Max time for refinement:              0.231s

Code Coverage
-----------------------------
  Function coverage:      0.606
  Visited lines:          745
  Total lines:            1417
  Line coverage:          0.526
  Visited conditions:     260
  Total conditions:       496
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             3005
  Number of reached locations:   737 (38%)
    Avg states per location:     4
    Max states per location:     50 (at node N1061)
  Number of reached functions:   66 (61%)
  Number of partitions:          2994
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1071 (before line 1577), Function verify called from node N944, stack depth 11 [6d5fbd56], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Encrypt, outgoing__wrappee__Keys, mail, incoming, incoming__wrappee__Verify, verify]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.329s
  Time for loading CPAs:          0.935s
  Time for loading parser:        0.725s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.736s
    Time for AST to CFA:          0.726s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.644s
      Time for var class.:        0.325s
Time for Analysis:               25.442s
CPU time for analysis:           25.440s
Total time for CPAchecker:       29.779s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.156s

Time for Garbage Collector:       1.050s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   112 MiB) max;     66MB (    63 MiB) avg;    122MB (   116 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8089MB (  7715 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
