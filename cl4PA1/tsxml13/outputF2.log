scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec27_product28_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__s4d78__/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 495: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 504: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 839: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 934: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 971: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1008: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1047: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1160: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1234: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1487: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1496: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1505: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1670: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1828: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1873: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2376: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2600: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2719: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 676: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            201658 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  198997 (99%)
  Because of loop head:            2543 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         118 (0%)
  Times precision was empty:       12840 (6%)
  Times precision was {false}:     309 (0%)
  Times result was cached:         168566 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19943 (10%)
  Times result was 'false':        12695 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         413985
  BDD entailment checks:           43889
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          262
Number of abstraction locations:          154
Max number of predicates per location:    45
Avg number of predicates per location:    20
Total predicates per abstraction:         2807332
Max number of predicates per abstraction: 45
Avg number of predicates per abstraction: 138.62
Number of irrelevant predicates:          886867 (32%)
Number of preds handled by boolean abs:   294917 (11%)
  Total number of models for allsat:      3757110
  Max number of models for allsat:        103400
  Avg number of models for allsat:        188.39

Time for post operator:                 10.380s
  Time for path formula creation:        9.552s
Time for strengthen operator:            1.254s
Time for prec operator:                773.182s
  Time for abstraction:                770.499s (Max:    35.343s, Count: 201658)
    Boolean abstraction:               661.748s
    Solving time:                       37.743s (Max:     0.032s)
    Model enumeration time:            442.638s
    Time for BDD construction:         176.923s (Max:     6.294s)
Time for merge operator:                 1.242s
Time for coverage check:                 0.312s
  Time for BDD entailment checks:        0.251s
Total time for SMT solver (w/o itp):   480.381s

Number of path formula cache hits:   1537528 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.950s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               181050
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      406309 (count: 325303, min: 0, max: 3839, avg: 1.25)
Time for BDD node cleanup:                             0.142s
Time for BDD garbage collection:                       2.807s (in 592 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.442s
  Time for transition matches:                         1.287s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      1446066 (count: 1446066, min: 1, max: 1, avg: 1.00) [1 x 1446066]

CPA algorithm statistics
------------------------
Number of iterations:            1083264
Max size of waitlist:            65
Average size of waitlist:        16
Number of computed successors:   1296986
Max successors for one state:    2
Number of times merged:          185048
Number of times stopped:         199593
Number of times breaked:         118

Total time for CPA algorithm:       817.946s (Max:   214.229s)
  Time for choose from waitlist:      0.590s
  Time for precision adjustment:    781.104s
  Time for transfer relation:        25.358s
  Time for merge operator:            3.550s
  Time for stop operator:             1.871s
  Time for adding to reached set:     1.929s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   118
Avg. length of target path (in blocks):               13263 (count: 118, min: 81, max: 165, avg: 112.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.988s
  Counterexample analysis:                            10.983s (Max:     0.303s, Calls: 118)
    Refinement sat check:                              3.633s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.268s
  Precision update:                                    0.213s
  ARG update:                                          1.980s

Length of refined path (in blocks):                    9617 (count: 118, min: 39, max: 142, avg: 81.50)
Number of affected states:                             8701 (count: 118, min: 1, max: 141, avg: 73.74)
Length (states) of path with itp 'true':                798 (count: 118, min: 0, max: 69, avg: 6.76)
Length (states) of path with itp non-trivial itp:      8701 (count: 118, min: 1, max: 141, avg: 73.74)
Length (states) of path with itp 'false':               118 (count: 118, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1547 (count: 118, min: 0, max: 53, avg: 13.11)
Equal non-trivial interpolants along paths:            7036 (count: 118, min: 0, max: 120, avg: 59.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                118
Number of successful refinements:     118
Number of failed refinements:         0
Max. size of reached set before ref.: 31094
Max. size of reached set after ref.:  12288
Avg. size of reached set before ref.: 9957.51
Avg. size of reached set after ref.:  1309.61

Total time for CEGAR algorithm:     833.040s
Time for refinements:                14.974s
Average time for refinement:          0.126s
Max time for refinement:              0.474s

Code Coverage
-----------------------------
  Function coverage:      0.587
  Visited lines:          739
  Total lines:            1417
  Line coverage:          0.522
  Visited conditions:     262
  Total conditions:       496
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     1945
Number of CFA edges:             2203
Number of relevant variables:    353
Number of functions:             109
Number of loops:                 4
Size of reached set:             64247
  Number of reached locations:   735 (38%)
    Avg states per location:     87
    Max states per location:     439 (at node N1061)
  Number of reached functions:   64 (59%)
  Number of partitions:          63941
    Avg size of partitions:      1
    Max size of partitions:      33 (with key [N2059 (before lines 2782-2946), Function test called from node N106, stack depth 2 [6e2c98a4], stack [main, test]])
  Number of target states:       0

Time for analysis setup:          4.166s
  Time for loading CPAs:          0.876s
  Time for loading parser:        0.737s
  Time for CFA construction:      2.377s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.224s
    Time for post-processing:     0.635s
      Time for var class.:        0.343s
Time for Analysis:              833.041s
CPU time for analysis:          832.850s
Time for analyzing result:        0.051s
Total time for CPAchecker:      837.212s
Total CPU time for CPAchecker:  837.020s
Time for statistics:              0.865s

Time for Garbage Collector:      17.920s (in 1245 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                266MB (   254 MiB) max;    157MB (   150 MiB) avg;    287MB (   274 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           331MB (   316 MiB) max;    235MB (   224 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8905MB (  8493 MiB) max;   8434MB (  8044 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
