scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product37_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tu6q57a1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 53: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 648: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 693: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 722: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 770: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1009: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1226: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1273: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1428: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1661: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1708: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1754: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1777: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1867: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1941: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2019: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2093: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2167: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2623: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2664: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2673: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2698: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2788: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5050 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4868 (96%)
  Because of loop head:            158 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       1783 (35%)
  Times precision was {false}:     177 (4%)
  Times result was cached:         2985 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      105 (2%)
  Times result was 'false':        36 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         8525
  BDD entailment checks:           569
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       44
Number of predicates discovered:          4
Number of abstraction locations:          116
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         3267
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 11.59
Number of irrelevant predicates:          1797 (55%)
Number of preds handled by boolean abs:   105 (3%)
  Total number of models for allsat:      107
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.830s
  Time for path formula creation:        1.710s
Time for strengthen operator:            0.101s
Time for prec operator:                  2.610s
  Time for abstraction:                  2.286s (Max:     0.028s, Count: 5050)
    Boolean abstraction:                 0.247s
    Solving time:                        0.508s (Max:     0.015s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.040s (Max:     0.007s)
Time for merge operator:                 0.232s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     0.513s

Number of path formula cache hits:   28003 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.610s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         215 (count: 3876, min: 0, max: 115, avg: 0.06)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.341s
Automaton transfers with branching:                0
Automaton transfer successors:                        33142 (count: 33142, min: 1, max: 1, avg: 1.00) [1 x 33142]

CPA algorithm statistics
------------------------
Number of iterations:            25080
Max size of waitlist:            18
Average size of waitlist:        10
Number of computed successors:   29609
Max successors for one state:    2
Number of times merged:          3978
Number of times stopped:         4345
Number of times breaked:         24

Total time for CPA algorithm:         8.308s (Max:     1.116s)
  Time for choose from waitlist:      0.065s
  Time for precision adjustment:      3.136s
  Time for transfer relation:         3.566s
  Time for merge operator:            0.533s
  Time for stop operator:             0.217s
  Time for adding to reached set:     0.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                1985 (count: 24, min: 64, max: 108, avg: 82.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.525s
  Counterexample analysis:                             1.154s (Max:     0.072s, Calls: 24)
    Refinement sat check:                              0.552s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.036s
  ARG update:                                          0.191s

Length of refined path (in blocks):                    1673 (count: 24, min: 63, max: 83, avg: 69.71)
Number of affected states:                              917 (count: 24, min: 1, max: 82, avg: 38.21)
Length (states) of path with itp 'true':                732 (count: 24, min: 0, max: 61, avg: 30.50)
Length (states) of path with itp non-trivial itp:       917 (count: 24, min: 1, max: 82, avg: 38.21)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          12 (count: 24, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:             881 (count: 24, min: 0, max: 80, avg: 36.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 2206
Max. size of reached set after ref.:  645
Avg. size of reached set before ref.: 1313.17
Avg. size of reached set after ref.:  322.17

Total time for CEGAR algorithm:       9.999s
Time for refinements:                 1.680s
Average time for refinement:          0.070s
Max time for refinement:              0.144s

Code Coverage
-----------------------------
  Function coverage:      0.562
  Visited lines:          647
  Total lines:            1337
  Line coverage:          0.484
  Visited conditions:     204
  Total conditions:       478
  Condition coverage:     0.427

CPAchecker general statistics
-----------------------------
Number of program locations:     1840
Number of CFA edges:             2071
Number of relevant variables:    287
Number of functions:             105
Number of loops:                 4
Size of reached set:             1445
  Number of reached locations:   619 (34%)
    Avg states per location:     2
    Max states per location:     11 (at node N58)
  Number of reached functions:   59 (56%)
  Number of partitions:          1438
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1925 (before line 2597), Function incoming called from node N1888, stack depth 7 [1107cbd8], stack [main, test, bobToRjh, sendEmail, outgoing, mail, incoming]])
  Number of target states:       0

Time for analysis setup:          4.648s
  Time for loading CPAs:          0.958s
  Time for loading parser:        0.812s
  Time for CFA construction:      2.659s
    Time for parsing file(s):     0.786s
    Time for AST to CFA:          0.869s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     0.599s
      Time for var class.:        0.307s
Time for Analysis:                9.999s
CPU time for analysis:           10.000s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.653s
Total CPU time for CPAchecker:   14.650s
Time for statistics:              0.125s

Time for Garbage Collector:       0.249s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    61 MiB) max;     40MB (    38 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     31MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8059MB (  7686 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
