scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec11_product18_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qcngboiv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 139: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 396: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 411: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 434: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 485: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 598: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 637: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 674: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 748: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 785: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 883: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 912: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 960: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1007: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1199: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1463: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1510: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1555: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1779: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1851: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1898: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2238: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2284: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2435: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2444: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2453: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2075: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6356 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6156 (97%)
  Because of loop head:            144 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         56 (1%)
  Times precision was empty:       2294 (36%)
  Times precision was {false}:     177 (3%)
  Times result was cached:         3773 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      112 (2%)
  Times result was 'false':        121 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         9901
  BDD entailment checks:           735
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       54
Number of predicates discovered:          5
Number of abstraction locations:          122
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4320
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 14.95
Number of irrelevant predicates:          2797 (65%)
Number of preds handled by boolean abs:   113 (3%)
  Total number of models for allsat:      113
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.266s
  Time for path formula creation:        2.155s
Time for strengthen operator:            0.126s
Time for prec operator:                  2.568s
  Time for abstraction:                  2.244s (Max:     0.025s, Count: 6356)
    Boolean abstraction:                 0.234s
    Solving time:                        0.470s (Max:     0.016s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.024s (Max:     0.010s)
Time for merge operator:                 0.330s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.478s

Number of path formula cache hits:   33308 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.048s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         222 (count: 4598, min: 0, max: 109, avg: 0.05)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.363s
Automaton transfers with branching:                0
Automaton transfer successors:                        39856 (count: 39856, min: 1, max: 1, avg: 1.00) [1 x 39856]

CPA algorithm statistics
------------------------
Number of iterations:            30131
Max size of waitlist:            18
Average size of waitlist:        10
Number of computed successors:   35465
Max successors for one state:    2
Number of times merged:          4583
Number of times stopped:         5068
Number of times breaked:         56

Total time for CPA algorithm:         8.939s (Max:     1.118s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:      3.227s
  Time for transfer relation:         3.998s
  Time for merge operator:            0.558s
  Time for stop operator:             0.305s
  Time for adding to reached set:     0.188s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   56
Avg. length of target path (in blocks):                4907 (count: 56, min: 73, max: 129, avg: 87.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.261s
  Counterexample analysis:                             2.749s (Max:     0.087s, Calls: 56)
    Refinement sat check:                              1.335s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.095s
  Precision update:                                    0.093s
  ARG update:                                          0.189s

Length of refined path (in blocks):                    4454 (count: 56, min: 60, max: 93, avg: 79.54)
Number of affected states:                              988 (count: 56, min: 1, max: 92, avg: 17.64)
Length (states) of path with itp 'true':               3410 (count: 56, min: 0, max: 87, avg: 60.89)
Length (states) of path with itp non-trivial itp:       988 (count: 56, min: 1, max: 92, avg: 17.64)
Length (states) of path with itp 'false':                56 (count: 56, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          11 (count: 56, min: 0, max: 1, avg: 0.20)
Equal non-trivial interpolants along paths:             921 (count: 56, min: 0, max: 90, avg: 16.45)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                56
Number of successful refinements:     56
Number of failed refinements:         0
Max. size of reached set before ref.: 2808
Max. size of reached set after ref.:  2678
Avg. size of reached set before ref.: 1652.84
Avg. size of reached set after ref.:  1145.54

Total time for CEGAR algorithm:      12.670s
Time for refinements:                 3.585s
Average time for refinement:          0.064s
Max time for refinement:              0.158s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          706
  Total lines:            1377
  Line coverage:          0.513
  Visited conditions:     244
  Total conditions:       486
  Condition coverage:     0.502

CPAchecker general statistics
-----------------------------
Number of program locations:     1894
Number of CFA edges:             2137
Number of relevant variables:    322
Number of functions:             108
Number of loops:                 4
Size of reached set:             1868
  Number of reached locations:   697 (37%)
    Avg states per location:     2
    Max states per location:     15 (at node N1924)
  Number of reached functions:   64 (59%)
  Number of partitions:          1859
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1791 (before line 2337), Function outgoing called from node N1838, stack depth 5 [2c002f95], stack [main, test, bobToRjh, sendEmail, outgoing]])
  Number of target states:       0

Time for analysis setup:          4.064s
  Time for loading CPAs:          0.876s
  Time for loading parser:        0.738s
  Time for CFA construction:      2.274s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.702s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.512s
      Time for var class.:        0.259s
Time for Analysis:               12.670s
CPU time for analysis:           12.660s
Time for analyzing result:        0.002s
Total time for CPAchecker:       16.738s
Total CPU time for CPAchecker:   16.740s
Time for statistics:              0.148s

Time for Garbage Collector:       0.259s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     32MB (    30 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8065MB (  7691 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
