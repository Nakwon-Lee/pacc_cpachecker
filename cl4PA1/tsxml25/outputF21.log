scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/email_spec0_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jdb23d52/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 494: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 531: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 646: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 683: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 757: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 794: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1167: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1213: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1253: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1330: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1500: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1569: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1880: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1925: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1988: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2095: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2149: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2221: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2268: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2418: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2468: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2530: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2554: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2571: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1004: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1474 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1437 (97%)
  Because of loop head:            19 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (1%)
  Times precision was empty:       746 (51%)
  Times precision was {false}:     95 (6%)
  Times result was cached:         575 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      58 (4%)
  Times result was 'false':        21 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2431
  BDD entailment checks:           73
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          4
Number of abstraction locations:          68
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         728
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.76
Number of irrelevant predicates:          513 (70%)
Number of preds handled by boolean abs:   58 (8%)
  Total number of models for allsat:      60
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  1.172s
  Time for path formula creation:        1.122s
Time for strengthen operator:            0.076s
Time for prec operator:                  1.125s
  Time for abstraction:                  0.988s (Max:     0.033s, Count: 1474)
    Boolean abstraction:                 0.153s
    Solving time:                        0.180s (Max:     0.013s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.043s (Max:     0.008s)
Time for merge operator:                 0.158s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.182s

Number of path formula cache hits:   5542 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.079s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         123 (count: 1651, min: 0, max: 52, avg: 0.07)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.173s
Automaton transfers with branching:                0
Automaton transfer successors:                         9976 (count: 9976, min: 1, max: 1, avg: 1.00) [1 x 9976]

CPA algorithm statistics
------------------------
Number of iterations:            7264
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   8541
Max successors for one state:    2
Number of times merged:          1179
Number of times stopped:         1224
Number of times breaked:         18

Total time for CPA algorithm:         4.296s (Max:     1.016s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      1.429s
  Time for transfer relation:         2.035s
  Time for merge operator:            0.352s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.165s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                1281 (count: 18, min: 56, max: 96, avg: 71.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.883s
  Counterexample analysis:                             0.703s (Max:     0.070s, Calls: 18)
    Refinement sat check:                              0.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.042s
  ARG update:                                          0.066s

Length of refined path (in blocks):                    1179 (count: 18, min: 55, max: 85, avg: 65.50)
Number of affected states:                              196 (count: 18, min: 1, max: 66, avg: 10.89)
Length (states) of path with itp 'true':                965 (count: 18, min: 0, max: 83, avg: 53.61)
Length (states) of path with itp non-trivial itp:       196 (count: 18, min: 1, max: 66, avg: 10.89)
Length (states) of path with itp 'false':                18 (count: 18, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 18, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:             175 (count: 18, min: 0, max: 64, avg: 9.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 2241
Max. size of reached set after ref.:  2013
Avg. size of reached set before ref.: 1307.33
Avg. size of reached set after ref.:  991.22

Total time for CEGAR algorithm:       5.377s
Time for refinements:                 1.048s
Average time for refinement:          0.058s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.473
  Visited lines:          559
  Total lines:            1277
  Line coverage:          0.438
  Visited conditions:     184
  Total conditions:       474
  Condition coverage:     0.388

CPAchecker general statistics
-----------------------------
Number of program locations:     1737
Number of CFA edges:             1949
Number of relevant variables:    274
Number of functions:             91
Number of loops:                 4
Size of reached set:             1607
  Number of reached locations:   507 (29%)
    Avg states per location:     3
    Max states per location:     14 (at node N342)
  Number of reached functions:   43 (47%)
  Number of partitions:          1601
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1770 (before line 2313), Function mail called from node N1777, stack depth 7 [1ab14636], stack [main, test, bobToRjh, sendEmail, outgoing, outgoing__wrappee__Base, mail]])
  Number of target states:       0

Time for analysis setup:          4.101s
  Time for loading CPAs:          0.912s
  Time for loading parser:        0.677s
  Time for CFA construction:      2.281s
    Time for parsing file(s):     0.672s
    Time for AST to CFA:          0.693s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     0.560s
      Time for var class.:        0.286s
Time for Analysis:                5.377s
CPU time for analysis:            5.380s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.482s
Total CPU time for CPAchecker:    9.460s
Time for statistics:              0.135s

Time for Garbage Collector:       0.151s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     36MB (    34 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
