scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-mthreaded/pals_STARTPALS_ActiveStandby_true-unreach-call.ufo.UNBOUNDED.pals.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jhmxbsdl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 652: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            263 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         252 (96%)
  Times precision was empty:       24 (9%)
  Times precision was {false}:     163 (62%)
  Times result was cached:         66 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (4%)
  Times result was 'false':        227 (86%)
Number of strengthen sat checks:   0
Number of coverage checks:         2918
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       383
Number of predicates discovered:          72
Number of abstraction locations:          2
Max number of predicates per location:    71
Avg number of predicates per location:    36
Total predicates per abstraction:         780
Max number of predicates per abstraction: 71
Avg number of predicates per abstraction: 4.51
Number of irrelevant predicates:          230 (29%)
Number of preds handled by boolean abs:   550 (71%)
  Total number of models for allsat:      810
  Max number of models for allsat:        249
  Avg number of models for allsat:        81.00

Time for post operator:                  1.009s
  Time for path formula creation:        0.985s
Time for strengthen operator:            0.047s
Time for prec operator:                  5.482s
  Time for abstraction:                  5.405s (Max:     0.755s, Count: 263)
    Boolean abstraction:                 2.630s
    Solving time:                        1.292s (Max:     0.093s)
    Model enumeration time:              1.795s
    Time for BDD construction:           0.361s (Max:     0.152s)
Time for merge operator:                 0.186s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     3.087s

Number of path formula cache hits:   6394 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.952s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               110042
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13183 (count: 6489, min: 0, max: 4972, avg: 2.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.253s
Automaton transfers with branching:                0
Automaton transfer successors:                         9345 (count: 9345, min: 1, max: 1, avg: 1.00) [1 x 9345]

CPA algorithm statistics
------------------------
Number of iterations:            6460
Max size of waitlist:            13
Average size of waitlist:        4
Number of computed successors:   8142
Max successors for one state:    2
Number of times merged:          1452
Number of times stopped:         1453
Number of times breaked:         25

Total time for CPA algorithm:         8.405s (Max:     3.955s)
  Time for choose from waitlist:      0.057s
  Time for precision adjustment:      5.760s
  Time for transfer relation:         1.893s
  Time for merge operator:            0.340s
  Time for stop operator:             0.079s
  Time for adding to reached set:     0.085s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                  53 (count: 25, min: 2, max: 4, avg: 2.12)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.831s
  Counterexample analysis:                             0.648s (Max:     0.263s, Calls: 25)
    Refinement sat check:                              0.510s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.017s
  ARG update:                                          0.061s

Length of refined path (in blocks):                      53 (count: 25, min: 2, max: 4, avg: 2.12)
Number of affected states:                                6 (count: 25, min: 0, max: 3, avg: 0.24)
Length (states) of path with itp 'true':                 22 (count: 25, min: 0, max: 1, avg: 0.88)
Length (states) of path with itp non-trivial itp:         6 (count: 25, min: 0, max: 3, avg: 0.24)
Length (states) of path with itp 'false':                 0 (count: 25, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 25, min: 0, max: 2, avg: 0.12)
Equal non-trivial interpolants along paths:               0 (count: 25, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1956
Max. size of reached set after ref.:  661
Avg. size of reached set before ref.: 562.76
Avg. size of reached set after ref.:  408.16

Total time for CEGAR algorithm:       9.401s
Time for refinements:                 0.974s
Average time for refinement:          0.038s
Max time for refinement:              0.307s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          389
  Total lines:            389
  Line coverage:          1.000
  Visited conditions:     208
  Total conditions:       208
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     568
Number of CFA edges:             693
Number of relevant variables:    105
Number of functions:             17
Number of loops:                 1
Size of reached set:             2598
  Number of reached locations:   355 (63%)
    Avg states per location:     7
    Max states per location:     92 (at node N569)
  Number of reached functions:   17 (100%)
  Number of partitions:          2595
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N543 (before lines 625-650), Function main called from node N503, stack depth 1 [2b72cb8a], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.630s
  Time for loading CPAs:          0.956s
  Time for loading parser:        0.805s
  Time for CFA construction:      1.677s
    Time for parsing file(s):     0.577s
    Time for AST to CFA:          0.394s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.391s
      Time for var class.:        0.225s
Time for Analysis:                9.402s
CPU time for analysis:            9.410s
Time for analyzing result:        0.003s
Total time for CPAchecker:       13.038s
Total CPU time for CPAchecker:   13.040s
Time for statistics:              0.156s

Time for Garbage Collector:       0.215s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8104MB (  7729 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
