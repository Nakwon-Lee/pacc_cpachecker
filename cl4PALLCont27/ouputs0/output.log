scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product25_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w15nua1_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 758: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1069: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1472: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1842: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1876: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1925: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2005: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2018: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2370: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2474: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3049: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3275: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3314: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3353: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            31 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (81%)
  Times precision was empty:       10 (32%)
  Times precision was {false}:     16 (52%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (16%)
  Times result was 'false':        16 (52%)
Number of strengthen sat checks:   0
Number of coverage checks:         20272
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3723
Number of predicates discovered:          9
Number of abstraction locations:          2
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         56
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 2.67
Number of irrelevant predicates:          16 (29%)
Number of preds handled by boolean abs:   40 (71%)
  Total number of models for allsat:      37
  Max number of models for allsat:        12
  Avg number of models for allsat:        7.40

Time for post operator:                  4.495s
  Time for path formula creation:        4.352s
Time for strengthen operator:            0.153s
Time for prec operator:                  9.764s
  Time for abstraction:                  9.601s (Max:     1.633s, Count: 31)
    Boolean abstraction:                 3.113s
    Solving time:                        6.924s (Max:     1.256s)
    Model enumeration time:              1.037s
    Time for BDD construction:           0.010s (Max:     0.003s)
Time for merge operator:                 1.123s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     7.961s

Number of path formula cache hits:   6643 (13%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.242s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               559
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         154 (count: 214, min: 0, max: 52, avg: 0.72)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.440s
Automaton transfers with branching:                0
Automaton transfer successors:                        49416 (count: 49416, min: 1, max: 1, avg: 1.00) [1 x 49416]

CPA algorithm statistics
------------------------
Number of iterations:            36822
Max size of waitlist:            19
Average size of waitlist:        8
Number of computed successors:   46973
Max successors for one state:    2
Number of times merged:          10131
Number of times stopped:         10132
Number of times breaked:         9

Total time for CPA algorithm:        21.144s (Max:     8.811s)
  Time for choose from waitlist:      0.130s
  Time for precision adjustment:     10.667s
  Time for transfer relation:         6.968s
  Time for merge operator:            1.773s
  Time for stop operator:             0.336s
  Time for adding to reached set:     0.334s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.090s
  Counterexample analysis:                             6.818s (Max:     2.379s, Calls: 9)
    Refinement sat check:                              6.382s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.003s
  ARG update:                                          0.044s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 20307
Max. size of reached set after ref.:  16194
Avg. size of reached set before ref.: 11258.78
Avg. size of reached set after ref.:  10800.89

Total time for CEGAR algorithm:      29.123s
Time for refinements:                 7.859s
Average time for refinement:          0.873s
Max time for refinement:              2.654s

Code Coverage
-----------------------------
  Function coverage:      0.643
  Visited lines:          1085
  Total lines:            1703
  Line coverage:          0.637
  Visited conditions:     606
  Total conditions:       750
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2230
Number of CFA edges:             2725
Number of relevant variables:    288
Number of functions:             70
Number of loops:                 9
Size of reached set:             32705
  Number of reached locations:   1182 (53%)
    Avg states per location:     27
    Max states per location:     188 (at node N339)
  Number of reached functions:   45 (64%)
  Number of partitions:          32702
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1014 (before lines 1268-1296), Function cleanup called from node N1228, stack depth 4 [77cf329d], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.477s
  Time for loading CPAs:          1.016s
  Time for loading parser:        0.713s
  Time for CFA construction:      2.602s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.741s
    Time for CFA sanity check:    0.296s
    Time for post-processing:     0.608s
      Time for var class.:        0.332s
Time for Analysis:               29.124s
CPU time for analysis:           29.130s
Time for analyzing result:        0.036s
Total time for CPAchecker:       33.606s
Total CPU time for CPAchecker:   33.560s
Time for statistics:              0.565s

Time for Garbage Collector:       0.789s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    93 MiB) max;     59MB (    56 MiB) avg;    107MB (   102 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8159MB (  7781 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
