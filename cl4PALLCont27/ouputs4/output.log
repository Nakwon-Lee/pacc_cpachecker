scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_coa0ft3x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1716 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1348 (79%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         368 (21%)
  Times precision was empty:       360 (21%)
  Times precision was {false}:     272 (16%)
  Times result was cached:         289 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      795 (46%)
  Times result was 'false':        870 (51%)
Number of strengthen sat checks:   0
Number of coverage checks:         98938
  BDD entailment checks:           936
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          155
Number of abstraction locations:          5
Max number of predicates per location:    114
Avg number of predicates per location:    47
Total predicates per abstraction:         26709
Max number of predicates per abstraction: 114
Avg number of predicates per abstraction: 25.03
Number of irrelevant predicates:          4599 (17%)
Number of preds handled by boolean abs:   17780 (67%)
  Total number of models for allsat:      6808
  Max number of models for allsat:        2816
  Avg number of models for allsat:        8.56

Time for post operator:                  8.346s
  Time for path formula creation:        8.049s
Time for strengthen operator:            0.350s
Time for prec operator:                792.205s
  Time for abstraction:                791.801s (Max:   618.518s, Count: 1716)
    Boolean abstraction:               775.577s
    Solving time:                       41.863s (Max:     4.599s)
    Model enumeration time:            727.941s
    Time for BDD construction:           8.471s (Max:     1.078s)
Time for merge operator:                 1.990s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):   769.805s

Number of path formula cache hits:   85168 (32%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.680s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               109728
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33689 (count: 21154, min: 0, max: 4773, avg: 1.59)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.167s (in 49 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.799s
  Time for transition matches:                         0.364s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       251548 (count: 251548, min: 1, max: 1, avg: 1.00) [1 x 251548]

CPA algorithm statistics
------------------------
Number of iterations:            186311
Max size of waitlist:            144
Average size of waitlist:        22
Number of computed successors:   237179
Max successors for one state:    2
Number of times merged:          49001
Number of times stopped:         49253
Number of times breaked:         94

Total time for CPA algorithm:       814.030s (Max:   639.178s)
  Time for choose from waitlist:      0.203s
  Time for precision adjustment:    794.556s
  Time for transfer relation:        13.232s
  Time for merge operator:            3.061s
  Time for stop operator:             0.477s
  Time for adding to reached set:     0.991s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):                 364 (count: 94, min: 1, max: 19, avg: 3.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  72.890s
  Counterexample analysis:                            71.312s (Max:    18.996s, Calls: 94)
    Refinement sat check:                             63.250s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.058s
  Precision update:                                    0.046s
  ARG update:                                          0.438s

Length of refined path (in blocks):                     259 (count: 94, min: 1, max: 15, avg: 2.76)
Number of affected states:                               95 (count: 94, min: 0, max: 14, avg: 1.01)
Length (states) of path with itp 'true':                 70 (count: 94, min: 0, max: 4, avg: 0.74)
Length (states) of path with itp non-trivial itp:        95 (count: 94, min: 0, max: 14, avg: 1.01)
Length (states) of path with itp 'false':                56 (count: 94, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:          62 (count: 94, min: 0, max: 11, avg: 0.66)
Equal non-trivial interpolants along paths:              12 (count: 94, min: 0, max: 5, avg: 0.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 81002
Max. size of reached set after ref.:  50801
Avg. size of reached set before ref.: 28597.06
Avg. size of reached set after ref.:  27582.01

Total time for CEGAR algorithm:     896.386s
Time for refinements:                80.037s
Average time for refinement:          0.851s
Max time for refinement:             20.241s

Code Coverage
-----------------------------
  Function coverage:      0.681
  Visited lines:          1117
  Total lines:            1678
  Line coverage:          0.666
  Visited conditions:     640
  Total conditions:       724
  Condition coverage:     0.884

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             91641
  Number of reached locations:   1258 (57%)
    Avg states per location:     72
    Max states per location:     1016 (at node N39)
  Number of reached functions:   49 (68%)
  Number of partitions:          91609
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N2157 (before lines 2723-2751), Function cleanup called from node N584, stack depth 4 [329fdc4e], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          4.460s
  Time for loading CPAs:          0.903s
  Time for loading parser:        0.792s
  Time for CFA construction:      2.550s
    Time for parsing file(s):     0.733s
    Time for AST to CFA:          0.737s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.596s
      Time for var class.:        0.335s
Time for Analysis:              896.386s
CPU time for analysis:          896.350s
Total time for CPAchecker:      900.852s
Total CPU time for CPAchecker:  900.800s
Time for statistics:              1.102s

Time for Garbage Collector:       5.568s (in 167 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                336MB (   320 MiB) max;    239MB (   228 MiB) avg;    342MB (   326 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           431MB (   411 MiB) max;    375MB (   358 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8959MB (  8544 MiB) max;   8606MB (  8208 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
