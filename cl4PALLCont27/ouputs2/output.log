scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_08sw7gai/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 457: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 503: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1042: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1084: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1293: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1618: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1631: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2052: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2086: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2142: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2201: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2787: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2798: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3481: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 294: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            47 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            25 (53%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (47%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     21 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23 (49%)
  Times result was 'false':        18 (38%)
Number of strengthen sat checks:   0
Number of coverage checks:         64925
  BDD entailment checks:           73
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       979
Number of predicates discovered:          44
Number of abstraction locations:          2
Max number of predicates per location:    43
Avg number of predicates per location:    22
Total predicates per abstraction:         658
Max number of predicates per abstraction: 43
Avg number of predicates per abstraction: 14.95
Number of irrelevant predicates:          27 (4%)
Number of preds handled by boolean abs:   631 (96%)
  Total number of models for allsat:      22175
  Max number of models for allsat:        3240
  Avg number of models for allsat:        964.13

Time for post operator:                  5.950s
  Time for path formula creation:        5.724s
Time for strengthen operator:            0.248s
Time for prec operator:                876.011s
  Time for abstraction:                875.681s (Max:   169.552s, Count: 47)
    Boolean abstraction:               873.826s
    Solving time:                        6.150s (Max:     0.433s)
    Model enumeration time:            864.711s
    Time for BDD construction:           3.256s (Max:     0.417s)
Time for merge operator:                 1.269s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):   870.862s

Number of path formula cache hits:   90138 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.451s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               90421
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24439 (count: 10220, min: 0, max: 5051, avg: 2.39)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.097s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.574s
  Time for transition matches:                         0.259s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       157349 (count: 157349, min: 1, max: 1, avg: 1.00) [1 x 157349]

CPA algorithm statistics
------------------------
Number of iterations:            115977
Max size of waitlist:            26
Average size of waitlist:        12
Number of computed successors:   148446
Max successors for one state:    2
Number of times merged:          32426
Number of times stopped:         32430
Number of times breaked:         4

Total time for CPA algorithm:       892.145s (Max:   751.789s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:    877.972s
  Time for transfer relation:         9.660s
  Time for merge operator:            2.183s
  Time for stop operator:             0.414s
  Time for adding to reached set:     0.482s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.178s
  Counterexample analysis:                             2.498s (Max:     1.316s, Calls: 4)
    Refinement sat check:                              2.216s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.008s
  ARG update:                                          0.561s

Length of refined path (in blocks):                      11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of affected states:                                7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 4, min: 0, max: 2, avg: 0.75)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 60874
Max. size of reached set after ref.:  5731
Avg. size of reached set before ref.: 26416.50
Avg. size of reached set after ref.:  5731.00

Total time for CEGAR algorithm:     895.720s
Time for refinements:                 3.543s
Average time for refinement:          0.885s
Max time for refinement:              1.847s

Code Coverage
-----------------------------
  Function coverage:      0.610
  Visited lines:          1061
  Total lines:            1753
  Line coverage:          0.605
  Visited conditions:     604
  Total conditions:       760
  Condition coverage:     0.795

CPAchecker general statistics
-----------------------------
Number of program locations:     2298
Number of CFA edges:             2799
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             33256
  Number of reached locations:   1175 (51%)
    Avg states per location:     28
    Max states per location:     415 (at node N2200)
  Number of reached functions:   47 (61%)
  Number of partitions:          33252
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N615 (before lines 835-863), Function cleanup called from node N868, stack depth 4 [5c84624f], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          4.593s
  Time for loading CPAs:          0.906s
  Time for loading parser:        0.786s
  Time for CFA construction:      2.664s
    Time for parsing file(s):     0.786s
    Time for AST to CFA:          0.767s
    Time for CFA sanity check:    0.279s
    Time for post-processing:     0.628s
      Time for var class.:        0.351s
Time for Analysis:              895.720s
CPU time for analysis:          895.700s
Total time for CPAchecker:      900.318s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.703s

Time for Garbage Collector:       1.786s (in 58 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;    102MB (    97 MiB) avg;    160MB (   152 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           185MB (   176 MiB) max;    156MB (   148 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8448MB (  8057 MiB) max;   8296MB (  7911 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
