scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product20_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bylv5fx2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 129: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 269: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 772: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 426: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2191 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2126 (97%)
  Because of loop head:            46 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (1%)
  Times precision was empty:       295 (13%)
  Times precision was {false}:     54 (2%)
  Times result was cached:         1636 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      206 (9%)
  Times result was 'false':        258 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         565
  BDD entailment checks:           425
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          39
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         4043
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 15.55
Number of irrelevant predicates:          1531 (38%)
Number of preds handled by boolean abs:   354 (9%)
  Total number of models for allsat:      221
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.686s
  Time for path formula creation:        0.648s
Time for strengthen operator:            0.033s
Time for prec operator:                  1.732s
  Time for abstraction:                  1.598s (Max:     0.018s, Count: 2191)
    Boolean abstraction:                 0.293s
    Solving time:                        0.193s (Max:     0.017s)
    Model enumeration time:              0.052s
    Time for BDD construction:           0.040s (Max:     0.007s)
Time for merge operator:                 0.016s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):     0.245s

Number of path formula cache hits:   5364 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.591s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         451 (count: 2301, min: 0, max: 157, avg: 0.20)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.152s
Automaton transfers with branching:                0
Automaton transfer successors:                         8009 (count: 8009, min: 1, max: 1, avg: 1.00) [1 x 8009]

CPA algorithm statistics
------------------------
Number of iterations:            6197
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   6919
Max successors for one state:    2
Number of times merged:          70
Number of times stopped:         374
Number of times breaked:         19

Total time for CPA algorithm:         3.993s (Max:     0.379s)
  Time for choose from waitlist:      0.047s
  Time for precision adjustment:      2.024s
  Time for transfer relation:         1.508s
  Time for merge operator:            0.043s
  Time for stop operator:             0.089s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                 756 (count: 19, min: 24, max: 52, avg: 39.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.429s
  Counterexample analysis:                             0.253s (Max:     0.022s, Calls: 19)
    Refinement sat check:                              0.104s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.038s
  ARG update:                                          0.054s

Length of refined path (in blocks):                     483 (count: 19, min: 14, max: 43, avg: 25.42)
Number of affected states:                              397 (count: 19, min: 2, max: 42, avg: 20.89)
Length (states) of path with itp 'true':                 67 (count: 19, min: 0, max: 12, avg: 3.53)
Length (states) of path with itp non-trivial itp:       397 (count: 19, min: 2, max: 42, avg: 20.89)
Length (states) of path with itp 'false':                19 (count: 19, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 19, min: 0, max: 1, avg: 0.21)
Equal non-trivial interpolants along paths:             374 (count: 19, min: 1, max: 40, avg: 19.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 711
Max. size of reached set after ref.:  477
Avg. size of reached set before ref.: 397.42
Avg. size of reached set after ref.:  109.21

Total time for CEGAR algorithm:       4.507s
Time for refinements:                 0.492s
Average time for refinement:          0.025s
Max time for refinement:              0.064s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          103
  Total lines:            423
  Line coverage:          0.243
  Visited conditions:     30
  Total conditions:       66
  Condition coverage:     0.455

CPAchecker general statistics
-----------------------------
Number of program locations:     604
Number of CFA edges:             647
Number of relevant variables:    109
Number of functions:             36
Number of loops:                 5
Size of reached set:             812
  Number of reached locations:   139 (23%)
    Avg states per location:     5
    Max states per location:     34 (at node N453)
  Number of reached functions:   18 (50%)
  Number of partitions:          798
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N581 (before lines 864-913), Function test called from node N128, stack depth 3 [58b5a2f3], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.129s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.698s
  Time for CFA construction:      1.404s
    Time for parsing file(s):     0.532s
    Time for AST to CFA:          0.314s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.284s
      Time for var class.:        0.115s
Time for Analysis:                4.507s
CPU time for analysis:            4.510s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.640s
Total CPU time for CPAchecker:    7.630s
Time for statistics:              0.110s

Time for Garbage Collector:       0.137s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     62MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8094MB (  7719 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
