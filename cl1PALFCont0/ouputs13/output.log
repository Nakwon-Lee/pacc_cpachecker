scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0jz8f605/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12562 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12393 (99%)
  Because of loop head:            106 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (1%)
  Times precision was empty:       430 (3%)
  Times precision was {false}:     147 (1%)
  Times result was cached:         10096 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1889 (15%)
  Times result was 'false':        1436 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         4947
  BDD entailment checks:           3167
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         41882
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.57
Number of irrelevant predicates:          14833 (35%)
Number of preds handled by boolean abs:   5042 (12%)
  Total number of models for allsat:      1864
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  1.870s
  Time for path formula creation:        1.773s
Time for strengthen operator:            0.121s
Time for prec operator:                  8.364s
  Time for abstraction:                  7.935s (Max:     0.036s, Count: 12562)
    Boolean abstraction:                 1.961s
    Solving time:                        1.335s (Max:     0.016s)
    Model enumeration time:              0.158s
    Time for BDD construction:           0.225s (Max:     0.012s)
Time for merge operator:                 0.142s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     1.493s

Number of path formula cache hits:   29551 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.546s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               449
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4231 (count: 16165, min: 0, max: 470, avg: 0.26)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.299s
Automaton transfers with branching:                0
Automaton transfer successors:                        46080 (count: 46080, min: 1, max: 1, avg: 1.00) [1 x 46080]

CPA algorithm statistics
------------------------
Number of iterations:            35957
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   39630
Max successors for one state:    2
Number of times merged:          890
Number of times stopped:         2094
Number of times breaked:         63

Total time for CPA algorithm:        14.331s (Max:     0.803s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:      9.233s
  Time for transfer relation:         3.646s
  Time for merge operator:            0.231s
  Time for stop operator:             0.199s
  Time for adding to reached set:     0.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                3854 (count: 63, min: 26, max: 101, avg: 61.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.550s
  Counterexample analysis:                             1.056s (Max:     0.036s, Calls: 63)
    Refinement sat check:                              0.502s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.091s
  ARG update:                                          0.216s

Length of refined path (in blocks):                    3073 (count: 63, min: 14, max: 84, avg: 48.78)
Number of affected states:                             1042 (count: 63, min: 3, max: 62, avg: 16.54)
Length (states) of path with itp 'true':               1968 (count: 63, min: 0, max: 76, avg: 31.24)
Length (states) of path with itp non-trivial itp:      1042 (count: 63, min: 3, max: 62, avg: 16.54)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          34 (count: 63, min: 0, max: 3, avg: 0.54)
Equal non-trivial interpolants along paths:             945 (count: 63, min: 2, max: 59, avg: 15.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 4415
Max. size of reached set after ref.:  3462
Avg. size of reached set before ref.: 1859.60
Avg. size of reached set after ref.:  1329.73

Total time for CEGAR algorithm:      16.234s
Time for refinements:                 1.793s
Average time for refinement:          0.028s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.676
  Visited lines:          142
  Total lines:            434
  Line coverage:          0.327
  Visited conditions:     42
  Total conditions:       72
  Condition coverage:     0.583

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2719
  Number of reached locations:   193 (31%)
    Avg states per location:     14
    Max states per location:     76 (at node N296)
  Number of reached functions:   25 (68%)
  Number of partitions:          2642
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N31 (after line 87), Function test called from node N207, stack depth 3 [26caf4b6], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.494s
  Time for loading CPAs:          0.931s
  Time for loading parser:        0.833s
  Time for CFA construction:      1.517s
    Time for parsing file(s):     0.546s
    Time for AST to CFA:          0.383s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.319s
      Time for var class.:        0.128s
Time for Analysis:               16.235s
CPU time for analysis:           16.230s
Time for analyzing result:        0.003s
Total time for CPAchecker:       19.735s
Total CPU time for CPAchecker:   19.720s
Time for statistics:              0.174s

Time for Garbage Collector:       0.403s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     41MB (    40 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8067MB (  7693 MiB) max;   8051MB (  7678 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
