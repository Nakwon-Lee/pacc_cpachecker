scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product38_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hbfbtckm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 151: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 522: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 620: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 666: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 786: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 795: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 870: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 893: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 359: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            14017 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13821 (99%)
  Because of loop head:            103 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (1%)
  Times precision was empty:       676 (5%)
  Times precision was {false}:     214 (2%)
  Times result was cached:         9155 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3972 (28%)
  Times result was 'false':        1950 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         10532
  BDD entailment checks:           7388
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          23
Number of abstraction locations:          54
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         92433
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 22.08
Number of irrelevant predicates:          23718 (26%)
Number of preds handled by boolean abs:   25835 (28%)
  Total number of models for allsat:      6411
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.61

Time for post operator:                  2.096s
  Time for path formula creation:        2.005s
Time for strengthen operator:            0.108s
Time for prec operator:                 16.305s
  Time for abstraction:                 15.801s (Max:     0.029s, Count: 14017)
    Boolean abstraction:                 5.261s
    Solving time:                        3.497s (Max:     0.014s)
    Model enumeration time:              0.526s
    Time for BDD construction:           0.419s (Max:     0.027s)
Time for merge operator:                 0.074s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     4.023s

Number of path formula cache hits:   36140 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.708s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4323
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13470 (count: 35927, min: 0, max: 962, avg: 0.37)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.384s
Automaton transfers with branching:                0
Automaton transfer successors:                        53604 (count: 53604, min: 1, max: 1, avg: 1.00) [1 x 53604]

CPA algorithm statistics
------------------------
Number of iterations:            41830
Max size of waitlist:            25
Average size of waitlist:        8
Number of computed successors:   46957
Max successors for one state:    2
Number of times merged:          1572
Number of times stopped:         2948
Number of times breaked:         93

Total time for CPA algorithm:        22.589s (Max:     2.068s)
  Time for choose from waitlist:      0.119s
  Time for precision adjustment:     17.164s
  Time for transfer relation:         3.930s
  Time for merge operator:            0.253s
  Time for stop operator:             0.220s
  Time for adding to reached set:     0.167s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):                6336 (count: 93, min: 32, max: 151, avg: 68.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.582s
  Counterexample analysis:                             1.978s (Max:     0.110s, Calls: 93)
    Refinement sat check:                              0.821s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.151s
  ARG update:                                          0.212s

Length of refined path (in blocks):                    5342 (count: 93, min: 14, max: 148, avg: 57.44)
Number of affected states:                             2049 (count: 93, min: 1, max: 88, avg: 22.03)
Length (states) of path with itp 'true':               3200 (count: 93, min: 0, max: 82, avg: 34.41)
Length (states) of path with itp non-trivial itp:      2049 (count: 93, min: 1, max: 88, avg: 22.03)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          78 (count: 93, min: 0, max: 7, avg: 0.84)
Equal non-trivial interpolants along paths:            1878 (count: 93, min: 0, max: 80, avg: 20.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 4152
Max. size of reached set after ref.:  2701
Avg. size of reached set before ref.: 1257.11
Avg. size of reached set after ref.:  857.63

Total time for CEGAR algorithm:      25.665s
Time for refinements:                 2.977s
Average time for refinement:          0.032s
Max time for refinement:              0.129s

Code Coverage
-----------------------------
  Function coverage:      0.684
  Visited lines:          132
  Total lines:            437
  Line coverage:          0.302
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     628
Number of CFA edges:             677
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             4909
  Number of reached locations:   179 (29%)
    Avg states per location:     27
    Max states per location:     135 (at node N82)
  Number of reached functions:   26 (68%)
  Number of partitions:          4817
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N629 (after line 939), Function test called from node N53, stack depth 3 [12039ae0], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.117s
  Time for loading CPAs:          0.784s
  Time for loading parser:        0.706s
  Time for CFA construction:      1.447s
    Time for parsing file(s):     0.553s
    Time for AST to CFA:          0.329s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.283s
      Time for var class.:        0.117s
Time for Analysis:               25.665s
CPU time for analysis:           25.670s
Time for analyzing result:        0.004s
Total time for CPAchecker:       28.790s
Total CPU time for CPAchecker:   28.790s
Time for statistics:              0.230s

Time for Garbage Collector:       0.576s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     43MB (    41 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8121MB (  7745 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
