scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product27_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_foa3e4_l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 546: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 578: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 875: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 283: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1557 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1512 (97%)
  Because of loop head:            31 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       224 (14%)
  Times precision was {false}:     45 (3%)
  Times result was cached:         1156 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      132 (8%)
  Times result was 'false':        145 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         468
  BDD entailment checks:           228
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          42
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1975
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 11.16
Number of irrelevant predicates:          699 (35%)
Number of preds handled by boolean abs:   196 (10%)
  Total number of models for allsat:      141
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.682s
  Time for path formula creation:        0.630s
Time for strengthen operator:            0.068s
Time for prec operator:                  1.226s
  Time for abstraction:                  1.075s (Max:     0.028s, Count: 1557)
    Boolean abstraction:                 0.142s
    Solving time:                        0.086s (Max:     0.008s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.026s (Max:     0.010s)
Time for merge operator:                 0.041s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.091s

Number of path formula cache hits:   3543 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.593s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         251 (count: 1500, min: 0, max: 138, avg: 0.17)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.117s
Automaton transfers with branching:                0
Automaton transfer successors:                         5863 (count: 5863, min: 1, max: 1, avg: 1.00) [1 x 5863]

CPA algorithm statistics
------------------------
Number of iterations:            4510
Max size of waitlist:            13
Average size of waitlist:        6
Number of computed successors:   5037
Max successors for one state:    2
Number of times merged:          120
Number of times stopped:         304
Number of times breaked:         14

Total time for CPA algorithm:         3.201s (Max:     0.366s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      1.493s
  Time for transfer relation:         1.299s
  Time for merge operator:            0.077s
  Time for stop operator:             0.062s
  Time for adding to reached set:     0.060s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 679 (count: 14, min: 30, max: 66, avg: 48.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.358s
  Counterexample analysis:                             0.201s (Max:     0.024s, Calls: 14)
    Refinement sat check:                              0.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.031s
  ARG update:                                          0.055s

Length of refined path (in blocks):                     417 (count: 14, min: 19, max: 50, avg: 29.79)
Number of affected states:                              333 (count: 14, min: 6, max: 49, avg: 23.79)
Length (states) of path with itp 'true':                 70 (count: 14, min: 0, max: 18, avg: 5.00)
Length (states) of path with itp non-trivial itp:       333 (count: 14, min: 6, max: 49, avg: 23.79)
Length (states) of path with itp 'false':                14 (count: 14, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 14, min: 0, max: 1, avg: 0.07)
Equal non-trivial interpolants along paths:             318 (count: 14, min: 5, max: 48, avg: 22.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 759
Max. size of reached set after ref.:  506
Avg. size of reached set before ref.: 438.14
Avg. size of reached set after ref.:  159.36

Total time for CEGAR algorithm:       3.626s
Time for refinements:                 0.420s
Average time for refinement:          0.030s
Max time for refinement:              0.073s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          108
  Total lines:            433
  Line coverage:          0.249
  Visited conditions:     32
  Total conditions:       70
  Condition coverage:     0.457

CPAchecker general statistics
-----------------------------
Number of program locations:     624
Number of CFA edges:             671
Number of relevant variables:    115
Number of functions:             38
Number of loops:                 5
Size of reached set:             686
  Number of reached locations:   147 (24%)
    Avg states per location:     4
    Max states per location:     26 (at node N34)
  Number of reached functions:   19 (50%)
  Number of partitions:          679
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N491 (before lines 711-758), Function test called from node N463, stack depth 3 [468dda3e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.510s
  Time for loading CPAs:          0.960s
  Time for loading parser:        0.791s
  Time for CFA construction:      1.489s
    Time for parsing file(s):     0.478s
    Time for AST to CFA:          0.394s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.318s
      Time for var class.:        0.124s
Time for Analysis:                3.627s
CPU time for analysis:            3.620s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.142s
Total CPU time for CPAchecker:    7.130s
Time for statistics:              0.115s

Time for Garbage Collector:       0.165s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     34MB (    32 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8084MB (  7709 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
