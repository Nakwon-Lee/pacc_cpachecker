scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j0qp6mpi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5021 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3721 (74%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1300 (26%)
  Times precision was empty:       873 (17%)
  Times precision was {false}:     206 (4%)
  Times result was cached:         3597 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      345 (7%)
  Times result was 'false':        1383 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         57679
  BDD entailment checks:           3041
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       288
Number of predicates discovered:          4
Number of abstraction locations:          11
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         7834
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 14.22
Number of irrelevant predicates:          2032 (26%)
Number of preds handled by boolean abs:   644 (8%)
  Total number of models for allsat:      431
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.25

Time for post operator:                  5.415s
  Time for path formula creation:        5.195s
Time for strengthen operator:            0.293s
Time for prec operator:                  9.930s
  Time for abstraction:                  9.431s (Max:     0.269s, Count: 5021)
    Boolean abstraction:                 4.195s
    Solving time:                        4.571s (Max:     0.203s)
    Model enumeration time:              0.596s
    Time for BDD construction:           0.143s (Max:     0.012s)
Time for merge operator:                 0.695s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     5.168s

Number of path formula cache hits:   330389 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.345s

Total number of created targets for pointer analysis: 759
   Number of created targets for uf: *unsigned_char is 11
   Number of created targets for uf: *(struct_list_head)* is 211
   Number of created targets for uf: *(struct_firmware)* is 15


Number of BDD nodes:                               213
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         704 (count: 7184, min: 0, max: 45, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.716s
  Time for transition matches:                         0.306s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       350986 (count: 350986, min: 1, max: 1, avg: 1.00) [1 x 350986]

CPA algorithm statistics
------------------------
Number of iterations:            237932
Max size of waitlist:            39
Average size of waitlist:        21
Number of computed successors:   269155
Max successors for one state:    2
Number of times merged:          27319
Number of times stopped:         29362
Number of times breaked:         21

Total time for CPA algorithm:        24.515s (Max:     4.607s)
  Time for choose from waitlist:      0.134s
  Time for precision adjustment:     12.004s
  Time for transfer relation:         9.444s
  Time for merge operator:            1.148s
  Time for stop operator:             0.319s
  Time for adding to reached set:     0.468s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                  70 (count: 21, min: 1, max: 5, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.279s
  Counterexample analysis:                             0.461s (Max:     0.038s, Calls: 21)
    Refinement sat check:                              0.400s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.032s
  ARG update:                                          0.733s

Length of refined path (in blocks):                      68 (count: 21, min: 1, max: 5, avg: 3.24)
Number of affected states:                               47 (count: 21, min: 0, max: 4, avg: 2.24)
Length (states) of path with itp 'true':                  0 (count: 21, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        47 (count: 21, min: 0, max: 4, avg: 2.24)
Length (states) of path with itp 'false':                 1 (count: 21, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              28 (count: 21, min: 0, max: 3, avg: 1.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 28359
Max. size of reached set after ref.:  46
Avg. size of reached set before ref.: 11267.67
Avg. size of reached set after ref.:  45.43

Total time for CEGAR algorithm:      26.076s
Time for refinements:                 1.560s
Average time for refinement:          0.074s
Max time for refinement:              0.223s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          1706
  Total lines:            2342
  Line coverage:          0.728
  Visited conditions:     268
  Total conditions:       410
  Condition coverage:     0.654

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             2743
  Number of reached locations:   1002 (32%)
    Avg states per location:     2
    Max states per location:     37 (at node N151)
  Number of reached functions:   58 (74%)
  Number of partitions:          2742
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2783 (before lines 7650-7857), Function main called from node N2754, stack depth 1 [1abc9f14], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          4.241s
  Time for loading CPAs:          0.862s
  Time for loading parser:        0.547s
  Time for CFA construction:      2.733s
    Time for parsing file(s):     0.763s
    Time for AST to CFA:          0.939s
    Time for CFA sanity check:    0.208s
    Time for post-processing:     0.647s
      Time for var class.:        0.320s
Time for Analysis:               26.076s
CPU time for analysis:           26.070s
Total time for CPAchecker:       30.325s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.110s

Time for Garbage Collector:       1.941s (in 103 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                120MB (   114 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8122MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
