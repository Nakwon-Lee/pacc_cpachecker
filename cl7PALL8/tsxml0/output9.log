scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-usb-serial-whiteheat.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zokk8izb/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3767: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3770: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3776: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3778: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7914: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 7977: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_set_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ezusb_writememory to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_insert_flip_string_fixed_flag to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2526 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2219 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         307 (12%)
  Times precision was empty:       860 (34%)
  Times precision was {false}:     191 (8%)
  Times result was cached:         1168 (46%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      307 (12%)
  Times result was 'false':        417 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         39054
  BDD entailment checks:           732
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       288
Number of predicates discovered:          3
Number of abstraction locations:          21
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         2833
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 5.69
Number of irrelevant predicates:          540 (19%)
Number of preds handled by boolean abs:   463 (16%)
  Total number of models for allsat:      296
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  6.084s
  Time for path formula creation:        5.924s
Time for strengthen operator:            0.271s
Time for prec operator:                  9.409s
  Time for abstraction:                  9.159s (Max:     0.274s, Count: 2526)
    Boolean abstraction:                 3.431s
    Solving time:                        6.095s (Max:     0.215s)
    Model enumeration time:              0.358s
    Time for BDD construction:           0.038s (Max:     0.008s)
Time for merge operator:                 1.086s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.004s
Total time for SMT solver (w/o itp):     6.453s

Number of path formula cache hits:   192700 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.205s

Total number of created targets for pointer analysis: 1392
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *unsigned_char is 7
   Number of created targets for uf: *(struct_list_head)* is 831
   Number of created targets for uf: *(struct_firmware)* is 5
   Number of created targets for uf: *(struct_usb_serial_port)* is 2


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         590 (count: 4523, min: 0, max: 47, avg: 0.13)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.635s
  Time for transition matches:                         0.322s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       241055 (count: 241055, min: 1, max: 1, avg: 1.00) [1 x 241055]

CPA algorithm statistics
------------------------
Number of iterations:            153821
Max size of waitlist:            59
Average size of waitlist:        27
Number of computed successors:   175094
Max successors for one state:    2
Number of times merged:          19161
Number of times stopped:         19845
Number of times breaked:         30

Total time for CPA algorithm:        23.520s (Max:     2.108s)
  Time for choose from waitlist:      0.169s
  Time for precision adjustment:     10.940s
  Time for transfer relation:         9.422s
  Time for merge operator:            1.493s
  Time for stop operator:             0.333s
  Time for adding to reached set:     0.378s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 120 (count: 30, min: 1, max: 9, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.197s
  Counterexample analysis:                             0.714s (Max:     0.045s, Calls: 30)
    Refinement sat check:                              0.613s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.030s
  ARG update:                                          0.392s

Length of refined path (in blocks):                     120 (count: 30, min: 1, max: 9, avg: 4.00)
Number of affected states:                               90 (count: 30, min: 0, max: 8, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 30, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        90 (count: 30, min: 0, max: 8, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 30, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 30, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              62 (count: 30, min: 0, max: 7, avg: 2.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 13519
Max. size of reached set after ref.:  46
Avg. size of reached set before ref.: 4772.43
Avg. size of reached set after ref.:  45.60

Total time for CEGAR algorithm:      24.985s
Time for refinements:                 1.451s
Average time for refinement:          0.048s
Max time for refinement:              0.101s

Code Coverage
-----------------------------
  Function coverage:      0.821
  Visited lines:          1998
  Total lines:            2342
  Line coverage:          0.853
  Visited conditions:     324
  Total conditions:       410
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     3151
Number of CFA edges:             3482
Number of relevant variables:    395
Number of functions:             78
Number of loops:                 24
Size of reached set:             13028
  Number of reached locations:   1313 (42%)
    Avg states per location:     9
    Max states per location:     171 (at node N151)
  Number of reached functions:   64 (82%)
  Number of partitions:          13028
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.194s
  Time for loading CPAs:          0.859s
  Time for loading parser:        0.510s
  Time for CFA construction:      2.678s
    Time for parsing file(s):     0.753s
    Time for AST to CFA:          0.976s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.564s
      Time for var class.:        0.269s
Time for Analysis:               24.985s
CPU time for analysis:           24.990s
Time for analyzing result:        0.023s
Total time for CPAchecker:       29.183s
Total CPU time for CPAchecker:   29.180s
Time for statistics:              0.254s

Time for Garbage Collector:       1.234s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    98 MiB) max;     60MB (    57 MiB) avg;    109MB (   104 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     41MB (    39 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8136MB (  7759 MiB) max;   8124MB (  7748 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
