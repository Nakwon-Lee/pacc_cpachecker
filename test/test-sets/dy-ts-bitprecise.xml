<?xml version="1.0"?>
<!DOCTYPE benchmark PUBLIC "+//IDN sosy-lab.org//DTD BenchExec benchmark 1.0//EN" "http://www.sosy-lab.org/benchexec/benchmark-1.0.dtd">
<benchmark tool="cpachecker" timelimit="900 s" hardtimelimit="960 s" memlimit="8 GB" cpuCores="1">
  <option name="-heap">7000M</option>
  <option name="-noout"/>
  <option name="-disable-java-assertions"/>
  <!-- SV-Comp files assume that malloc always succeeds -->

  <option name="-setprop">cpa.predicate.memoryAllocationsAlwaysSucceed=true</option>

  <!-- Witness files are several GB in total, ignore them for now. Currently our BuildBot cannot handle this.
  <resultfiles>**.graphml</resultfiles>
  -->
<!--
  <tasks name="ReachSafety-ArraysReach">
    <includesfile>../programs/benchmarks/ReachSafety-Arrays.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-BitVectorsReach">
    <includesfile>../programs/benchmarks/ReachSafety-BitVectors.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-HeapReach">
    <includesfile>../programs/benchmarks/ReachSafety-Heap.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Floats">
    <includesfile>../programs/benchmarks/ReachSafety-Floats.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
-->
  <tasks name="ReachSafety-ControlFlow">
    <includesfile>../../../sv-benchmarks/c/ReachSafety-ControlFlow.set</includesfile>
    <propertyfile>../../../sv-benchmarks/c/ReachSafety.prp</propertyfile>
  </tasks>
<!--
  <tasks name="ReachSafety-ECA">
    <includesfile>../programs/benchmarks/ReachSafety-ECA.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Loops">
    <includesfile>../programs/benchmarks/ReachSafety-Loops.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Recursive">
    <includesfile>../programs/benchmarks/ReachSafety-Recursive.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-ProductLines">
    <includesfile>../programs/benchmarks/ReachSafety-ProductLines.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="ReachSafety-Sequentialized">
    <includesfile>../programs/benchmarks/ReachSafety-Sequentialized.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
  </tasks>
  <tasks name="Concurrency">
    <includesfile>../programs/benchmarks/ConcurrencySafety-Main.set</includesfile>
    <propertyfile>../programs/benchmarks/ConcurrencySafety.prp</propertyfile>
  </tasks>
  <tasks name="Systems_DeviceDriversLinux64_ReachSafety">
    <includesfile>../programs/benchmarks/Systems_DeviceDriversLinux64_ReachSafety.set</includesfile>
    <propertyfile>../programs/benchmarks/ReachSafety.prp</propertyfile>
    <option name="-64"/>
  </tasks>
-->

  <rundefinition name="dy-ts-bitprecise-abel-my">
    <option name="-sv-comp17--03-predicateAnalysis-bitprecise-my"/>
  </rundefinition>
</benchmark>
