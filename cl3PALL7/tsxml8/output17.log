scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ca5awifs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1626 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            296 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1330 (82%)
  Times precision was empty:       202 (12%)
  Times precision was {false}:     1412 (87%)
  Times result was cached:         1 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (1%)
  Times result was 'false':        1324 (81%)
Number of strengthen sat checks:   0
Number of coverage checks:         9759
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          9
Number of abstraction locations:          4
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         1467
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 1.03
Number of irrelevant predicates:          1413 (96%)
Number of preds handled by boolean abs:   54 (4%)
  Total number of models for allsat:      13
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.18

Time for post operator:                  4.604s
  Time for path formula creation:        4.394s
Time for strengthen operator:            0.218s
Time for prec operator:                 10.783s
  Time for abstraction:                 10.417s (Max:     0.705s, Count: 1626)
    Boolean abstraction:                 2.053s
    Solving time:                        5.707s (Max:     0.533s)
    Model enumeration time:              0.422s
    Time for BDD construction:           0.033s (Max:     0.017s)
Time for merge operator:                 1.299s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     6.129s

Number of path formula cache hits:   68045 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.636s

Total number of created targets for pointer analysis: 401
   Number of created targets for uf: *unsigned_short_int is 22


Number of BDD nodes:                               258
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         219 (count: 8739, min: 0, max: 75, avg: 0.03)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.672s
  Time for transition matches:                         0.245s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                        82996 (count: 82996, min: 1, max: 1, avg: 1.00) [1 x 82996]

CPA algorithm statistics
------------------------
Number of iterations:            56677
Max size of waitlist:            73
Average size of waitlist:        64
Number of computed successors:   63431
Max successors for one state:    2
Number of times merged:          4878
Number of times stopped:         4879
Number of times breaked:         8

Total time for CPA algorithm:        22.916s (Max:     6.376s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     11.860s
  Time for transfer relation:         7.877s
  Time for merge operator:            1.633s
  Time for stop operator:             0.275s
  Time for adding to reached set:     0.358s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  19 (count: 8, min: 2, max: 3, avg: 2.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.555s
  Counterexample analysis:                             0.247s (Max:     0.041s, Calls: 8)
    Refinement sat check:                              0.204s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.009s
  ARG update:                                          0.272s

Length of refined path (in blocks):                      16 (count: 8, min: 2, max: 2, avg: 2.00)
Number of affected states:                                8 (count: 8, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 8, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 3 (count: 8, min: 0, max: 1, avg: 0.38)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 8, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 12503
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 6579.75
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      23.653s
Time for refinements:                 0.737s
Average time for refinement:          0.092s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.465
  Visited lines:          1862
  Total lines:            3065
  Line coverage:          0.608
  Visited conditions:     418
  Total conditions:       902
  Condition coverage:     0.463

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             4654
  Number of reached locations:   1068 (27%)
    Avg states per location:     4
    Max states per location:     110 (at node N3191)
  Number of reached functions:   60 (47%)
  Number of partitions:          4654
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          6.583s
  Time for loading CPAs:          0.974s
  Time for loading parser:        0.815s
  Time for CFA construction:      4.601s
    Time for parsing file(s):     1.128s
    Time for AST to CFA:          1.486s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     1.471s
      Time for var class.:        0.607s
Time for Analysis:               23.653s
CPU time for analysis:           23.660s
Total time for CPAchecker:       30.244s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.181s

Time for Garbage Collector:       0.752s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    88 MiB) max;     54MB (    52 MiB) avg;     95MB (    91 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
