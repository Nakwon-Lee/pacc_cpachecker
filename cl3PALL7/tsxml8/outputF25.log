scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zadfyt2e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49562 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8771 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40791 (82%)
  Times precision was empty:       554 (1%)
  Times precision was {false}:     42177 (85%)
  Times result was cached:         6218 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      613 (1%)
  Times result was 'false':        42743 (86%)
Number of strengthen sat checks:   0
Number of coverage checks:         313553
  BDD entailment checks:           469
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          67
Number of abstraction locations:          4
Max number of predicates per location:    64
Avg number of predicates per location:    18
Total predicates per abstraction:         58124
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 1.36
Number of irrelevant predicates:          49156 (85%)
Number of preds handled by boolean abs:   6880 (12%)
  Total number of models for allsat:      695
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.13

Time for post operator:                 31.986s
  Time for path formula creation:       30.104s
Time for strengthen operator:            2.449s
Time for prec operator:                771.557s
  Time for abstraction:                769.079s (Max:   453.661s, Count: 49562)
    Boolean abstraction:               566.627s
    Solving time:                      168.417s (Max:     0.747s)
    Model enumeration time:            498.804s
    Time for BDD construction:           0.800s (Max:     0.089s)
Time for merge operator:                 6.805s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):   667.221s

Number of path formula cache hits:   2600986 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.986s

Total number of created targets for pointer analysis: 20226
   Number of created targets for uf: *unsigned_short_int is 85
   Number of created targets for uf: *signed_long_int is 433
   Number of created targets for uf: *unsigned_long_int is 760


Number of BDD nodes:                               266674
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21788 (count: 261208, min: 0, max: 346, avg: 0.08)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.088s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.450s
  Time for transition matches:                         2.394s
  Time for transition assertions:                      0.015s
  Time for transition actions:                         0.064s
Automaton transfers with branching:                0
Automaton transfer successors:                      2545730 (count: 2545730, min: 1, max: 1, avg: 1.00) [1 x 2545730]

CPA algorithm statistics
------------------------
Number of iterations:            1777799
Max size of waitlist:            189
Average size of waitlist:        71
Number of computed successors:   1983859
Max successors for one state:    2
Number of times merged:          156542
Number of times stopped:         156849
Number of times breaked:         107

Total time for CPA algorithm:       874.067s (Max:   462.083s)
  Time for choose from waitlist:      0.871s
  Time for precision adjustment:    786.314s
  Time for transfer relation:        65.205s
  Time for merge operator:            9.401s
  Time for stop operator:             2.230s
  Time for adding to reached set:     4.417s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                 402 (count: 107, min: 2, max: 5, avg: 3.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  16.608s
  Counterexample analysis:                            12.210s (Max:     0.350s, Calls: 107)
    Refinement sat check:                             10.181s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.031s
  ARG update:                                          3.979s

Length of refined path (in blocks):                     307 (count: 107, min: 2, max: 5, avg: 2.87)
Number of affected states:                              124 (count: 107, min: 1, max: 4, avg: 1.16)
Length (states) of path with itp 'true':                 76 (count: 107, min: 0, max: 2, avg: 0.71)
Length (states) of path with itp non-trivial itp:       124 (count: 107, min: 1, max: 4, avg: 1.16)
Length (states) of path with itp 'false':                95 (count: 107, min: 0, max: 1, avg: 0.89)
Different non-trivial interpolants along paths:           5 (count: 107, min: 0, max: 3, avg: 0.05)
Equal non-trivial interpolants along paths:              12 (count: 107, min: 0, max: 3, avg: 0.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 54931
Max. size of reached set after ref.:  43091
Avg. size of reached set before ref.: 29318.93
Avg. size of reached set after ref.:  13227.90

Total time for CEGAR algorithm:     894.280s
Time for refinements:                18.986s
Average time for refinement:          0.177s
Max time for refinement:              0.465s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2769
  Total lines:            3065
  Line coverage:          0.903
  Visited conditions:     784
  Total conditions:       902
  Condition coverage:     0.869

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             62527
  Number of reached locations:   2018 (50%)
    Avg states per location:     30
    Max states per location:     1382 (at node N3191)
  Number of reached functions:   90 (70%)
  Number of partitions:          62523
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [42c28305], stack [main]])
  Number of target states:       0
  Size of final wait list        175

Time for analysis setup:          6.455s
  Time for loading CPAs:          0.921s
  Time for loading parser:        0.787s
  Time for CFA construction:      4.571s
    Time for parsing file(s):     1.094s
    Time for AST to CFA:          1.412s
    Time for CFA sanity check:    0.314s
    Time for post-processing:     1.518s
      Time for var class.:        0.624s
Time for Analysis:              894.280s
CPU time for analysis:          894.220s
Total time for CPAchecker:      900.741s
Total CPU time for CPAchecker:  900.670s
Time for statistics:              1.061s

Time for Garbage Collector:      17.704s (in 854 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                221MB (   211 MiB) max;    120MB (   115 MiB) avg;    230MB (   219 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           237MB (   226 MiB) max;    193MB (   184 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8856MB (  8446 MiB) max;   8543MB (  8147 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
