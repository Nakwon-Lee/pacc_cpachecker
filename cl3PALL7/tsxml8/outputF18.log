scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y1e5ujzi/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            62022 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            13345 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48677 (78%)
  Times precision was empty:       1625 (3%)
  Times precision was {false}:     22125 (36%)
  Times result was cached:         37558 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      714 (1%)
  Times result was 'false':        50038 (81%)
Number of strengthen sat checks:   0
Number of coverage checks:         435990
  BDD entailment checks:           15088
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          69
Number of abstraction locations:          5
Max number of predicates per location:    64
Avg number of predicates per location:    15
Total predicates per abstraction:         96202
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 4.21
Number of irrelevant predicates:          77326 (80%)
Number of preds handled by boolean abs:   5444 (6%)
  Total number of models for allsat:      778
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                114.560s
  Time for path formula creation:      111.712s
Time for strengthen operator:            3.223s
Time for prec operator:                172.975s
  Time for abstraction:                169.352s (Max:     1.811s, Count: 62022)
    Boolean abstraction:                49.628s
    Solving time:                       73.733s (Max:     1.013s)
    Model enumeration time:             14.841s
    Time for BDD construction:           0.117s (Max:     0.006s)
Time for merge operator:                10.755s
Time for coverage check:                 0.110s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):    88.574s

Number of path formula cache hits:   3284468 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.318s

Total number of created targets for pointer analysis: 33572
   Number of created targets for uf: *unsigned_short_int is 43
   Number of created targets for uf: *signed_long_int is 145
   Number of created targets for uf: *unsigned_long_int is 254


Number of BDD nodes:                               16601
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22523 (count: 160626, min: 0, max: 625, avg: 0.14)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.268s
  Time for transition matches:                         3.593s
  Time for transition assertions:                      0.015s
  Time for transition actions:                         0.068s
Automaton transfers with branching:                0
Automaton transfer successors:                      3270829 (count: 3270829, min: 1, max: 1, avg: 1.00) [1 x 3270829]

CPA algorithm statistics
------------------------
Number of iterations:            2351206
Max size of waitlist:            131
Average size of waitlist:        58
Number of computed successors:   2619804
Max successors for one state:    2
Number of times merged:          210451
Number of times stopped:         213258
Number of times breaked:         1325

Total time for CPA algorithm:       384.290s (Max:    10.217s)
  Time for choose from waitlist:      1.142s
  Time for precision adjustment:    193.390s
  Time for transfer relation:       157.980s
  Time for merge operator:           14.142s
  Time for stop operator:             3.318s
  Time for adding to reached set:     6.875s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1325
Avg. length of target path (in blocks):                7975 (count: 1325, min: 2, max: 7, avg: 6.02)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 321.045s
  Counterexample analysis:                           307.427s (Max:     0.565s, Calls: 1325)
    Refinement sat check:                            260.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.182s
  Precision update:                                    0.249s
  ARG update:                                          6.247s

Length of refined path (in blocks):                    7569 (count: 1324, min: 2, max: 7, avg: 5.72)
Number of affected states:                             3109 (count: 1324, min: 1, max: 5, avg: 2.35)
Length (states) of path with itp 'true':               3136 (count: 1324, min: 0, max: 3, avg: 2.37)
Length (states) of path with itp non-trivial itp:      3109 (count: 1324, min: 1, max: 5, avg: 2.35)
Length (states) of path with itp 'false':               400 (count: 1324, min: 0, max: 1, avg: 0.30)
Different non-trivial interpolants along paths:           5 (count: 1324, min: 0, max: 2, avg: 0.00)
Equal non-trivial interpolants along paths:            1780 (count: 1324, min: 0, max: 3, avg: 1.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1325
Number of successful refinements:     1324
Number of failed refinements:         0
Max. size of reached set before ref.: 138585
Max. size of reached set after ref.:  131705
Avg. size of reached set before ref.: 75946.24
Avg. size of reached set after ref.:  74223.76

Total time for CEGAR algorithm:     893.761s
Time for refinements:               418.338s
Average time for refinement:          0.315s
Max time for refinement:              1.594s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2768
  Total lines:            3065
  Line coverage:          0.903
  Visited conditions:     780
  Total conditions:       902
  Condition coverage:     0.865

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             74231
  Number of reached locations:   2017 (50%)
    Avg states per location:     36
    Max states per location:     1606 (at node N0)
  Number of reached functions:   90 (70%)
  Number of partitions:          74172
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [42c28305], stack [main]])
  Number of target states:       1
  Size of final wait list        61

Time for analysis setup:          6.465s
  Time for loading CPAs:          1.038s
  Time for loading parser:        0.724s
  Time for CFA construction:      4.521s
    Time for parsing file(s):     1.017s
    Time for AST to CFA:          1.363s
    Time for CFA sanity check:    0.322s
    Time for post-processing:     1.614s
      Time for var class.:        0.667s
Time for Analysis:              893.761s
CPU time for analysis:          893.710s
Total time for CPAchecker:      900.232s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              1.020s

Time for Garbage Collector:      25.930s (in 902 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                434MB (   414 MiB) max;    225MB (   215 MiB) avg;    442MB (   422 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           444MB (   423 MiB) max;    343MB (   327 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8829MB (  8420 MiB) max;   8488MB (  8095 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
