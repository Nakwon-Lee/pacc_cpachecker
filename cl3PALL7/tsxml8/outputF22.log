scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y8icw13s/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            45543 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9803 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35740 (78%)
  Times precision was empty:       2382 (5%)
  Times precision was {false}:     18227 (40%)
  Times result was cached:         21242 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3692 (8%)
  Times result was 'false':        37206 (82%)
Number of strengthen sat checks:   0
Number of coverage checks:         311776
  BDD entailment checks:           3174
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          66
Number of abstraction locations:          5
Max number of predicates per location:    63
Avg number of predicates per location:    16
Total predicates per abstraction:         60665
Max number of predicates per abstraction: 63
Avg number of predicates per abstraction: 2.77
Number of irrelevant predicates:          43111 (71%)
Number of preds handled by boolean abs:   9222 (15%)
  Total number of models for allsat:      2537
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.69

Time for post operator:                 71.651s
  Time for path formula creation:       69.945s
Time for strengthen operator:            2.925s
Time for prec operator:                699.179s
  Time for abstraction:                696.335s (Max:   529.858s, Count: 45543)
    Boolean abstraction:               595.812s
    Solving time:                       76.747s (Max:     0.689s)
    Model enumeration time:            553.263s
    Time for BDD construction:           0.728s (Max:     0.032s)
Time for merge operator:                 8.956s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):   630.019s

Number of path formula cache hits:   2414421 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.014s

Total number of created targets for pointer analysis: 13921
   Number of created targets for uf: *unsigned_short_int is 64
   Number of created targets for uf: *signed_long_int is 289
   Number of created targets for uf: *unsigned_long_int is 507


Number of BDD nodes:                               234736
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20168 (count: 142765, min: 0, max: 333, avg: 0.14)
Time for BDD node cleanup:                             0.049s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.351s
  Time for transition matches:                         2.427s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.070s
Automaton transfers with branching:                0
Automaton transfer successors:                      2399222 (count: 2399222, min: 1, max: 1, avg: 1.00) [1 x 2399222]

CPA algorithm statistics
------------------------
Number of iterations:            1716098
Max size of waitlist:            131
Average size of waitlist:        67
Number of computed successors:   1913318
Max successors for one state:    2
Number of times merged:          154301
Number of times stopped:         156829
Number of times breaked:         153

Total time for CPA algorithm:       846.653s (Max:   542.601s)
  Time for choose from waitlist:      1.012s
  Time for precision adjustment:    715.991s
  Time for transfer relation:       104.994s
  Time for merge operator:           11.719s
  Time for stop operator:             2.580s
  Time for adding to reached set:     4.861s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   153
Avg. length of target path (in blocks):                 790 (count: 153, min: 2, max: 8, avg: 5.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.812s
  Counterexample analysis:                            28.574s (Max:     0.492s, Calls: 153)
    Refinement sat check:                             24.442s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.049s
  Precision update:                                    0.064s
  ARG update:                                          4.405s

Length of refined path (in blocks):                     678 (count: 153, min: 2, max: 8, avg: 4.43)
Number of affected states:                              235 (count: 153, min: 1, max: 7, avg: 1.54)
Length (states) of path with itp 'true':                290 (count: 153, min: 0, max: 3, avg: 1.90)
Length (states) of path with itp non-trivial itp:       235 (count: 153, min: 1, max: 7, avg: 1.54)
Length (states) of path with itp 'false':                85 (count: 153, min: 0, max: 1, avg: 0.56)
Different non-trivial interpolants along paths:           1 (count: 153, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:              81 (count: 153, min: 0, max: 6, avg: 0.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                153
Number of successful refinements:     153
Number of failed refinements:         0
Max. size of reached set before ref.: 80312
Max. size of reached set after ref.:  73881
Avg. size of reached set before ref.: 55206.33
Avg. size of reached set after ref.:  44543.75

Total time for CEGAR algorithm:     894.077s
Time for refinements:                41.283s
Average time for refinement:          0.269s
Max time for refinement:              0.614s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2805
  Total lines:            3065
  Line coverage:          0.915
  Visited conditions:     784
  Total conditions:       902
  Condition coverage:     0.869

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             87908
  Number of reached locations:   2044 (51%)
    Avg states per location:     43
    Max states per location:     1792 (at node N3191)
  Number of reached functions:   90 (70%)
  Number of partitions:          87849
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [42c28305], stack [main]])
  Number of target states:       0
  Size of final wait list        117

Time for analysis setup:          6.634s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.790s
  Time for CFA construction:      4.671s
    Time for parsing file(s):     1.076s
    Time for AST to CFA:          1.393s
    Time for CFA sanity check:    0.296s
    Time for post-processing:     1.693s
      Time for var class.:        0.606s
Time for Analysis:              894.077s
CPU time for analysis:          894.020s
Total time for CPAchecker:      900.716s
Total CPU time for CPAchecker:  900.640s
Time for statistics:              1.198s

Time for Garbage Collector:      17.285s (in 630 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                262MB (   250 MiB) max;    180MB (   172 MiB) avg;    270MB (   257 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           271MB (   258 MiB) max;    237MB (   226 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8823MB (  8414 MiB) max;   8478MB (  8086 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
