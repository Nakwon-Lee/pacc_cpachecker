scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i8wpo98v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31010 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5827 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25183 (81%)
  Times precision was empty:       611 (2%)
  Times precision was {false}:     22433 (72%)
  Times result was cached:         7385 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      581 (2%)
  Times result was 'false':        27040 (87%)
Number of strengthen sat checks:   0
Number of coverage checks:         198404
  BDD entailment checks:           824
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          69
Number of abstraction locations:          4
Max number of predicates per location:    64
Avg number of predicates per location:    18
Total predicates per abstraction:         38707
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 1.68
Number of irrelevant predicates:          31270 (81%)
Number of preds handled by boolean abs:   5082 (13%)
  Total number of models for allsat:      654
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.13

Time for post operator:                 32.774s
  Time for path formula creation:       31.557s
Time for strengthen operator:            1.556s
Time for prec operator:                754.903s
  Time for abstraction:                752.992s (Max:   606.783s, Count: 31010)
    Boolean abstraction:               655.872s
    Solving time:                       73.050s (Max:     0.642s)
    Model enumeration time:            623.733s
    Time for BDD construction:           0.971s (Max:     0.092s)
Time for merge operator:                 5.660s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):   696.784s

Number of path formula cache hits:   1539768 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.363s

Total number of created targets for pointer analysis: 23603
   Number of created targets for uf: *unsigned_short_int is 64
   Number of created targets for uf: *signed_long_int is 289
   Number of created targets for uf: *unsigned_long_int is 507


Number of BDD nodes:                               110139
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21857 (count: 146227, min: 0, max: 625, avg: 0.15)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.095s (in 2 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.752s
  Time for transition matches:                         1.608s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.051s
Automaton transfers with branching:                0
Automaton transfer successors:                      1593725 (count: 1593725, min: 1, max: 1, avg: 1.00) [1 x 1593725]

CPA algorithm statistics
------------------------
Number of iterations:            1119050
Max size of waitlist:            131
Average size of waitlist:        49
Number of computed successors:   1248514
Max successors for one state:    2
Number of times merged:          98790
Number of times stopped:         99236
Number of times breaked:         239

Total time for CPA algorithm:       837.510s (Max:   614.068s)
  Time for choose from waitlist:      0.653s
  Time for precision adjustment:    764.517s
  Time for transfer relation:        55.453s
  Time for merge operator:            7.506s
  Time for stop operator:             1.817s
  Time for adding to reached set:     3.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   239
Avg. length of target path (in blocks):                1248 (count: 239, min: 2, max: 7, avg: 5.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.109s
  Counterexample analysis:                            43.575s (Max:     0.530s, Calls: 239)
    Refinement sat check:                             37.264s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.086s
  ARG update:                                          2.416s

Length of refined path (in blocks):                    1133 (count: 239, min: 2, max: 7, avg: 4.74)
Number of affected states:                              480 (count: 239, min: 1, max: 5, avg: 2.01)
Length (states) of path with itp 'true':                414 (count: 239, min: 0, max: 3, avg: 1.73)
Length (states) of path with itp non-trivial itp:       480 (count: 239, min: 1, max: 5, avg: 2.01)
Length (states) of path with itp 'false':               115 (count: 239, min: 0, max: 1, avg: 0.48)
Different non-trivial interpolants along paths:           5 (count: 239, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:             236 (count: 239, min: 0, max: 3, avg: 0.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                239
Number of successful refinements:     239
Number of failed refinements:         0
Max. size of reached set before ref.: 43796
Max. size of reached set after ref.:  43091
Avg. size of reached set before ref.: 24536.16
Avg. size of reached set after ref.:  20055.64

Total time for CEGAR algorithm:     894.040s
Time for refinements:                52.440s
Average time for refinement:          0.219s
Max time for refinement:              0.602s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2769
  Total lines:            3065
  Line coverage:          0.903
  Visited conditions:     784
  Total conditions:       902
  Condition coverage:     0.869

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             51392
  Number of reached locations:   2018 (50%)
    Avg states per location:     25
    Max states per location:     1119 (at node N3191)
  Number of reached functions:   90 (70%)
  Number of partitions:          51387
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [42c28305], stack [main]])
  Number of target states:       0
  Size of final wait list        117

Time for analysis setup:          6.635s
  Time for loading CPAs:          0.973s
  Time for loading parser:        0.825s
  Time for CFA construction:      4.706s
    Time for parsing file(s):     1.190s
    Time for AST to CFA:          1.457s
    Time for CFA sanity check:    0.341s
    Time for post-processing:     1.494s
      Time for var class.:        0.600s
Time for Analysis:              894.040s
CPU time for analysis:          893.970s
Total time for CPAchecker:      900.681s
Total CPU time for CPAchecker:  900.590s
Time for statistics:              0.703s

Time for Garbage Collector:      10.671s (in 583 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                219MB (   208 MiB) max;    137MB (   131 MiB) avg;    238MB (   227 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           281MB (   268 MiB) max;    231MB (   221 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8823MB (  8414 MiB) max;   8523MB (  8128 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
