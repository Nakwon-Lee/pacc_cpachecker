scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i9rk3_8y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            59959 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12623 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47336 (79%)
  Times precision was empty:       1398 (2%)
  Times precision was {false}:     22562 (38%)
  Times result was cached:         35448 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      551 (1%)
  Times result was 'false':        48754 (81%)
Number of strengthen sat checks:   0
Number of coverage checks:         422141
  BDD entailment checks:           14157
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          69
Number of abstraction locations:          6
Max number of predicates per location:    64
Avg number of predicates per location:    13
Total predicates per abstraction:         94118
Max number of predicates per abstraction: 64
Avg number of predicates per abstraction: 4.07
Number of irrelevant predicates:          75894 (81%)
Number of preds handled by boolean abs:   5215 (6%)
  Total number of models for allsat:      682
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.24

Time for post operator:                112.359s
  Time for path formula creation:      109.784s
Time for strengthen operator:            3.328s
Time for prec operator:                331.504s
  Time for abstraction:                327.573s (Max:   168.301s, Count: 59959)
    Boolean abstraction:               207.835s
    Solving time:                       67.580s (Max:     0.830s)
    Model enumeration time:            181.173s
    Time for BDD construction:           0.412s (Max:     0.022s)
Time for merge operator:                11.047s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):   248.770s

Number of path formula cache hits:   3168127 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.514s

Total number of created targets for pointer analysis: 37433
   Number of created targets for uf: *unsigned_short_int is 64
   Number of created targets for uf: *signed_long_int is 289
   Number of created targets for uf: *unsigned_long_int is 507


Number of BDD nodes:                               248439
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22298 (count: 161304, min: 0, max: 625, avg: 0.14)
Time for BDD node cleanup:                             0.038s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.073s
  Time for transition matches:                         3.482s
  Time for transition assertions:                      0.017s
  Time for transition actions:                         0.073s
Automaton transfers with branching:                0
Automaton transfer successors:                      3173201 (count: 3173201, min: 1, max: 1, avg: 1.00) [1 x 3173201]

CPA algorithm statistics
------------------------
Number of iterations:            2278967
Max size of waitlist:            131
Average size of waitlist:        55
Number of computed successors:   2539432
Max successors for one state:    2
Number of times merged:          203992
Number of times stopped:         206578
Number of times breaked:         1211

Total time for CPA algorithm:       538.253s (Max:   184.957s)
  Time for choose from waitlist:      0.942s
  Time for precision adjustment:    349.993s
  Time for transfer relation:       156.043s
  Time for merge operator:           14.521s
  Time for stop operator:             3.308s
  Time for adding to reached set:     5.730s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1211
Avg. length of target path (in blocks):                7348 (count: 1211, min: 2, max: 7, avg: 6.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 297.441s
  Counterexample analysis:                           286.843s (Max:     0.494s, Calls: 1211)
    Refinement sat check:                            243.290s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.162s
  Precision update:                                    0.238s
  ARG update:                                          4.932s

Length of refined path (in blocks):                    7005 (count: 1211, min: 2, max: 7, avg: 5.78)
Number of affected states:                             2940 (count: 1211, min: 1, max: 5, avg: 2.43)
Length (states) of path with itp 'true':               2854 (count: 1211, min: 0, max: 3, avg: 2.36)
Length (states) of path with itp non-trivial itp:      2940 (count: 1211, min: 1, max: 5, avg: 2.43)
Length (states) of path with itp 'false':               343 (count: 1211, min: 0, max: 1, avg: 0.28)
Different non-trivial interpolants along paths:           5 (count: 1211, min: 0, max: 2, avg: 0.00)
Equal non-trivial interpolants along paths:            1724 (count: 1211, min: 0, max: 3, avg: 1.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1211
Number of successful refinements:     1211
Number of failed refinements:         0
Max. size of reached set before ref.: 138585
Max. size of reached set after ref.:  27221
Avg. size of reached set before ref.: 27279.06
Avg. size of reached set after ref.:  25513.64

Total time for CEGAR algorithm:     893.527s
Time for refinements:               328.688s
Average time for refinement:          0.271s
Max time for refinement:              0.900s

Code Coverage
-----------------------------
  Function coverage:      0.698
  Visited lines:          2819
  Total lines:            3065
  Line coverage:          0.920
  Visited conditions:     790
  Total conditions:       902
  Condition coverage:     0.876

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             146181
  Number of reached locations:   2057 (51%)
    Avg states per location:     71
    Max states per location:     3321 (at node N0)
  Number of reached functions:   90 (70%)
  Number of partitions:          146062
    Avg size of partitions:      1
    Max size of partitions:      61 (with key [N1326 (before line 4113), Function main called from node N1201, stack depth 1 [42c28305], stack [main]])
  Number of target states:       0
  Size of final wait list        117

Time for analysis setup:          6.854s
  Time for loading CPAs:          1.080s
  Time for loading parser:        0.842s
  Time for CFA construction:      4.750s
    Time for parsing file(s):     1.117s
    Time for AST to CFA:          1.489s
    Time for CFA sanity check:    0.337s
    Time for post-processing:     1.570s
      Time for var class.:        0.680s
Time for Analysis:              893.528s
CPU time for analysis:          893.470s
Total time for CPAchecker:      900.389s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              1.562s

Time for Garbage Collector:      17.552s (in 834 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                381MB (   364 MiB) max;    199MB (   190 MiB) avg;    389MB (   371 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           423MB (   404 MiB) max;    308MB (   294 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8837MB (  8428 MiB) max;   8519MB (  8125 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
