scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--asb100.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0s00aawl/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2296: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2296: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1426 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            262 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1164 (82%)
  Times precision was empty:       147 (10%)
  Times precision was {false}:     1269 (89%)
  Times result was cached:         1 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (1%)
  Times result was 'false':        1160 (81%)
Number of strengthen sat checks:   0
Number of coverage checks:         8560
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       388
Number of predicates discovered:          8
Number of abstraction locations:          3
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         1309
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1.02
Number of irrelevant predicates:          1270 (97%)
Number of preds handled by boolean abs:   39 (3%)
  Total number of models for allsat:      10
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  4.635s
  Time for path formula creation:        4.510s
Time for strengthen operator:            0.172s
Time for prec operator:                 10.953s
  Time for abstraction:                 10.729s (Max:     0.858s, Count: 1426)
    Boolean abstraction:                 1.777s
    Solving time:                        5.833s (Max:     0.609s)
    Model enumeration time:              0.349s
    Time for BDD construction:           0.008s (Max:     0.007s)
Time for merge operator:                 1.282s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     6.182s

Number of path formula cache hits:   57446 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.801s

Total number of created targets for pointer analysis: 401
   Number of created targets for uf: *unsigned_short_int is 22


Number of BDD nodes:                               233
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         144 (count: 7763, min: 0, max: 37, avg: 0.02)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.710s
  Time for transition matches:                         0.184s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                        73004 (count: 73004, min: 1, max: 1, avg: 1.00) [1 x 73004]

CPA algorithm statistics
------------------------
Number of iterations:            49657
Max size of waitlist:            73
Average size of waitlist:        64
Number of computed successors:   55586
Max successors for one state:    2
Number of times merged:          4279
Number of times stopped:         4280
Number of times breaked:         7

Total time for CPA algorithm:        22.742s (Max:     6.474s)
  Time for choose from waitlist:      0.139s
  Time for precision adjustment:     11.907s
  Time for transfer relation:         7.673s
  Time for merge operator:            1.544s
  Time for stop operator:             0.288s
  Time for adding to reached set:     0.329s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.554s
  Counterexample analysis:                             0.285s (Max:     0.068s, Calls: 7)
    Refinement sat check:                              0.235s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.006s
  ARG update:                                          0.231s

Length of refined path (in blocks):                      14 (count: 7, min: 2, max: 2, avg: 2.00)
Number of affected states:                                7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 2 (count: 7, min: 0, max: 1, avg: 0.29)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 12503
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 5734.14
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      23.461s
Time for refinements:                 0.718s
Average time for refinement:          0.102s
Max time for refinement:              0.142s

Code Coverage
-----------------------------
  Function coverage:      0.628
  Visited lines:          2552
  Total lines:            3065
  Line coverage:          0.833
  Visited conditions:     702
  Total conditions:       902
  Condition coverage:     0.778

CPAchecker general statistics
-----------------------------
Number of program locations:     4029
Number of CFA edges:             4655
Number of relevant variables:    630
Number of functions:             129
Number of loops:                 5
Size of reached set:             10063
  Number of reached locations:   1772 (44%)
    Avg states per location:     5
    Max states per location:     232 (at node N3191)
  Number of reached functions:   81 (63%)
  Number of partitions:          10063
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        62

Time for analysis setup:          6.249s
  Time for loading CPAs:          0.961s
  Time for loading parser:        0.852s
  Time for CFA construction:      4.305s
    Time for parsing file(s):     1.042s
    Time for AST to CFA:          1.326s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     1.423s
      Time for var class.:        0.629s
Time for Analysis:               23.461s
CPU time for analysis:           23.460s
Total time for CPAchecker:       29.716s
Total CPU time for CPAchecker:   29.700s
Time for statistics:              0.313s

Time for Garbage Collector:       0.671s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     53MB (    51 MiB) avg;     93MB (    88 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
