scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xtndnvxd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            35462 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9954 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25508 (72%)
  Times precision was empty:       7328 (21%)
  Times precision was {false}:     8979 (25%)
  Times result was cached:         18255 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      900 (3%)
  Times result was 'false':        26122 (74%)
Number of strengthen sat checks:   0
Number of coverage checks:         526606
  BDD entailment checks:           1114
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1310
Number of predicates discovered:          6
Number of abstraction locations:          15
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         35598
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.60
Number of irrelevant predicates:          27203 (76%)
Number of preds handled by boolean abs:   2268 (6%)
  Total number of models for allsat:      567
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.63

Time for post operator:                 37.832s
  Time for path formula creation:       36.274s
Time for strengthen operator:            3.078s
Time for prec operator:                748.322s
  Time for abstraction:                745.497s (Max:    28.435s, Count: 35462)
    Boolean abstraction:               360.602s
    Solving time:                      539.323s (Max:    26.335s)
    Model enumeration time:             59.459s
    Time for BDD construction:           0.079s (Max:     0.024s)
Time for merge operator:                 7.405s
Time for coverage check:                 0.087s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):   598.787s

Number of path formula cache hits:   3084785 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.279s

Total number of created targets for pointer analysis: 25100
   Number of created targets for uf: *signed_int is 37
   Number of created targets for uf: *unsigned_char is 237
   Number of created targets for uf: *char is 269
   Number of created targets for uf: *unsigned_int is 52


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1551 (count: 67838, min: 0, max: 96, avg: 0.02)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.550s
  Time for transition matches:                         2.933s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.055s
Automaton transfers with branching:                0
Automaton transfer successors:                      3235651 (count: 3235651, min: 1, max: 1, avg: 1.00) [1 x 3235651]

CPA algorithm statistics
------------------------
Number of iterations:            2096495
Max size of waitlist:            203
Average size of waitlist:        105
Number of computed successors:   2394366
Max successors for one state:    2
Number of times merged:          262746
Number of times stopped:         263798
Number of times breaked:         153

Total time for CPA algorithm:       878.368s (Max:    38.786s)
  Time for choose from waitlist:      1.207s
  Time for precision adjustment:    766.168s
  Time for transfer relation:        84.123s
  Time for merge operator:           11.480s
  Time for stop operator:             2.835s
  Time for adding to reached set:     5.644s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   153
Avg. length of target path (in blocks):                 562 (count: 153, min: 2, max: 17, avg: 3.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.236s
  Counterexample analysis:                             3.046s (Max:     0.146s, Calls: 153)
    Refinement sat check:                              2.437s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.036s
  ARG update:                                          5.000s

Length of refined path (in blocks):                     555 (count: 153, min: 2, max: 17, avg: 3.63)
Number of affected states:                              298 (count: 153, min: 1, max: 16, avg: 1.95)
Length (states) of path with itp 'true':                104 (count: 153, min: 0, max: 1, avg: 0.68)
Length (states) of path with itp non-trivial itp:       298 (count: 153, min: 1, max: 16, avg: 1.95)
Length (states) of path with itp 'false':                 1 (count: 153, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           4 (count: 153, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:             141 (count: 153, min: 0, max: 15, avg: 0.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                153
Number of successful refinements:     153
Number of failed refinements:         0
Max. size of reached set before ref.: 60054
Max. size of reached set after ref.:  34216
Avg. size of reached set before ref.: 31373.51
Avg. size of reached set after ref.:  18011.38

Total time for CEGAR algorithm:     892.577s
Time for refinements:                11.885s
Average time for refinement:          0.077s
Max time for refinement:              0.288s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          3914
  Total lines:            4539
  Line coverage:          0.862
  Visited conditions:     872
  Total conditions:       1110
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             60040
  Number of reached locations:   2489 (41%)
    Avg states per location:     24
    Max states per location:     1271 (at node N4935)
  Number of reached functions:   115 (72%)
  Number of partitions:          60039
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4837 (before line 11419), Function main called from node N4575, stack depth 1 [43f03c23], stack [main]])
  Number of target states:       0
  Size of final wait list        183

Time for analysis setup:          7.707s
  Time for loading CPAs:          1.145s
  Time for loading parser:        0.767s
  Time for CFA construction:      5.661s
    Time for parsing file(s):     1.320s
    Time for AST to CFA:          2.112s
    Time for CFA sanity check:    0.512s
    Time for post-processing:     1.484s
      Time for var class.:        0.801s
Time for Analysis:              892.577s
CPU time for analysis:          892.520s
Total time for CPAchecker:      900.292s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.839s

Time for Garbage Collector:      27.548s (in 909 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                367MB (   350 MiB) max;    192MB (   184 MiB) avg;    407MB (   388 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           481MB (   459 MiB) max;    279MB (   266 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8604MB (  8205 MiB) max;   8363MB (  7976 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
