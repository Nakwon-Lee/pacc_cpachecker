scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a9188_ca/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            38593 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12600 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25993 (67%)
  Times precision was empty:       6687 (17%)
  Times precision was {false}:     7969 (21%)
  Times result was cached:         22891 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1046 (3%)
  Times result was 'false':        26305 (68%)
Number of strengthen sat checks:   0
Number of coverage checks:         539925
  BDD entailment checks:           3435
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1310
Number of predicates discovered:          5
Number of abstraction locations:          17
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         38473
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 4.27
Number of irrelevant predicates:          28502 (74%)
Number of preds handled by boolean abs:   1910 (5%)
  Total number of models for allsat:      695
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.66

Time for post operator:                 33.754s
  Time for path formula creation:       31.703s
Time for strengthen operator:            3.077s
Time for prec operator:                627.061s
  Time for abstraction:                624.316s (Max:    18.752s, Count: 38593)
    Boolean abstraction:               291.084s
    Solving time:                      446.153s (Max:    16.515s)
    Model enumeration time:             50.238s
    Time for BDD construction:           0.082s (Max:     0.013s)
Time for merge operator:                 6.637s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):   496.398s

Number of path formula cache hits:   3292804 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.176s

Total number of created targets for pointer analysis: 21886
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *unsigned_char is 213
   Number of created targets for uf: *char is 187
   Number of created targets for uf: *unsigned_int is 43


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1765 (count: 64324, min: 0, max: 23, avg: 0.03)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.401s
  Time for transition matches:                         2.359s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                      3378120 (count: 3378120, min: 1, max: 1, avg: 1.00) [1 x 3378120]

CPA algorithm statistics
------------------------
Number of iterations:            2170336
Max size of waitlist:            146
Average size of waitlist:        70
Number of computed successors:   2482494
Max successors for one state:    2
Number of times merged:          268245
Number of times stopped:         271012
Number of times breaked:         1866

Total time for CPA algorithm:       748.003s (Max:    33.066s)
  Time for choose from waitlist:      0.971s
  Time for precision adjustment:    644.959s
  Time for transfer relation:        76.966s
  Time for merge operator:           10.557s
  Time for stop operator:             2.994s
  Time for adding to reached set:     5.231s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1866
Avg. length of target path (in blocks):                5661 (count: 1866, min: 2, max: 4, avg: 3.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  76.743s
  Counterexample analysis:                            70.000s (Max:     0.163s, Calls: 1866)
    Refinement sat check:                             58.812s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.143s
  Precision update:                                    0.225s
  ARG update:                                          5.249s

Length of refined path (in blocks):                    5661 (count: 1866, min: 2, max: 4, avg: 3.03)
Number of affected states:                             1939 (count: 1866, min: 1, max: 3, avg: 1.04)
Length (states) of path with itp 'true':               1856 (count: 1866, min: 0, max: 2, avg: 0.99)
Length (states) of path with itp non-trivial itp:      1939 (count: 1866, min: 1, max: 3, avg: 1.04)
Length (states) of path with itp 'false':                 0 (count: 1866, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 1866, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:              69 (count: 1866, min: 0, max: 2, avg: 0.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1866
Number of successful refinements:     1866
Number of failed refinements:         0
Max. size of reached set before ref.: 74872
Max. size of reached set after ref.:  51700
Avg. size of reached set before ref.: 23545.35
Avg. size of reached set after ref.:  22410.38

Total time for CEGAR algorithm:     892.955s
Time for refinements:               114.324s
Average time for refinement:          0.061s
Max time for refinement:              0.302s

Code Coverage
-----------------------------
  Function coverage:      0.704
  Visited lines:          3718
  Total lines:            4539
  Line coverage:          0.819
  Visited conditions:     786
  Total conditions:       1110
  Condition coverage:     0.708

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             67329
  Number of reached locations:   2298 (38%)
    Avg states per location:     29
    Max states per location:     1377 (at node N4935)
  Number of reached functions:   112 (70%)
  Number of partitions:          67321
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4837 (before line 11419), Function main called from node N4575, stack depth 1 [43f03c23], stack [main]])
  Number of target states:       0
  Size of final wait list        91

Time for analysis setup:          7.504s
  Time for loading CPAs:          1.016s
  Time for loading parser:        0.782s
  Time for CFA construction:      5.513s
    Time for parsing file(s):     1.197s
    Time for AST to CFA:          2.110s
    Time for CFA sanity check:    0.441s
    Time for post-processing:     1.520s
      Time for var class.:        0.786s
Time for Analysis:              892.955s
CPU time for analysis:          892.890s
Total time for CPAchecker:      900.464s
Total CPU time for CPAchecker:  900.390s
Time for statistics:              0.995s

Time for Garbage Collector:      27.096s (in 1092 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                413MB (   394 MiB) max;    189MB (   181 MiB) avg;    426MB (   407 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           443MB (   423 MiB) max;    278MB (   265 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8600MB (  8202 MiB) max;   8369MB (  7981 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
