scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sxrxzm5l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            72583 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            33397 (46%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39186 (54%)
  Times precision was empty:       4047 (6%)
  Times precision was {false}:     7167 (10%)
  Times result was cached:         58906 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2463 (3%)
  Times result was 'false':        46703 (64%)
Number of strengthen sat checks:   0
Number of coverage checks:         847816
  BDD entailment checks:           18608
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1182
Number of predicates discovered:          5
Number of abstraction locations:          14
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         116466
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 12.09
Number of irrelevant predicates:          63642 (55%)
Number of preds handled by boolean abs:   5299 (5%)
  Total number of models for allsat:      1387
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.56

Time for post operator:                 40.677s
  Time for path formula creation:       38.098s
Time for strengthen operator:            4.829s
Time for prec operator:                599.298s
  Time for abstraction:                595.057s (Max:    24.138s, Count: 72583)
    Boolean abstraction:               268.755s
    Solving time:                      392.020s (Max:    21.772s)
    Model enumeration time:             46.062s
    Time for BDD construction:           0.127s (Max:     0.014s)
Time for merge operator:                 7.376s
Time for coverage check:                 0.114s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):   438.082s

Number of path formula cache hits:   5413418 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.354s

Total number of created targets for pointer analysis: 22569
   Number of created targets for uf: *signed_int is 61
   Number of created targets for uf: *unsigned_char is 1075
   Number of created targets for uf: *unsigned_int is 51
   Number of created targets for uf: *char is 209


Number of BDD nodes:                               216
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3881 (count: 80984, min: 0, max: 108, avg: 0.05)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.233s
  Time for transition matches:                         4.313s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.056s
Automaton transfers with branching:                0
Automaton transfer successors:                      5323114 (count: 5323114, min: 1, max: 1, avg: 1.00) [1 x 5323114]

CPA algorithm statistics
------------------------
Number of iterations:            3413959
Max size of waitlist:            103
Average size of waitlist:        44
Number of computed successors:   3894529
Max successors for one state:    2
Number of times merged:          414604
Number of times stopped:         428378
Number of times breaked:         773

Total time for CPA algorithm:       776.177s (Max:    35.416s)
  Time for choose from waitlist:      1.366s
  Time for precision adjustment:    629.898s
  Time for transfer relation:       108.334s
  Time for merge operator:           12.892s
  Time for stop operator:             4.271s
  Time for adding to reached set:     9.268s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   773
Avg. length of target path (in blocks):                2617 (count: 773, min: 2, max: 11, avg: 3.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.665s
  Counterexample analysis:                            34.848s (Max:     0.203s, Calls: 773)
    Refinement sat check:                             29.916s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.097s
  ARG update:                                          8.918s

Length of refined path (in blocks):                    2617 (count: 773, min: 2, max: 11, avg: 3.39)
Number of affected states:                              862 (count: 773, min: 1, max: 10, avg: 1.12)
Length (states) of path with itp 'true':                982 (count: 773, min: 0, max: 3, avg: 1.27)
Length (states) of path with itp non-trivial itp:       862 (count: 773, min: 1, max: 10, avg: 1.12)
Length (states) of path with itp 'false':                 0 (count: 773, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 773, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:              85 (count: 773, min: 0, max: 9, avg: 0.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                773
Number of successful refinements:     773
Number of failed refinements:         0
Max. size of reached set before ref.: 130736
Max. size of reached set after ref.:  107912
Avg. size of reached set before ref.: 54597.10
Avg. size of reached set after ref.:  50324.48

Total time for CEGAR algorithm:     892.658s
Time for refinements:                82.926s
Average time for refinement:          0.107s
Max time for refinement:              0.699s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          3799
  Total lines:            4539
  Line coverage:          0.837
  Visited conditions:     814
  Total conditions:       1110
  Condition coverage:     0.733

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             116712
  Number of reached locations:   2355 (39%)
    Avg states per location:     49
    Max states per location:     2587 (at node N4935)
  Number of reached functions:   115 (72%)
  Number of partitions:          116709
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4837 (before line 11419), Function main called from node N4575, stack depth 1 [2921199d], stack [main]])
  Number of target states:       0
  Size of final wait list        54

Time for analysis setup:          7.611s
  Time for loading CPAs:          1.156s
  Time for loading parser:        0.735s
  Time for CFA construction:      5.529s
    Time for parsing file(s):     1.310s
    Time for AST to CFA:          2.080s
    Time for CFA sanity check:    0.433s
    Time for post-processing:     1.458s
      Time for var class.:        0.756s
Time for Analysis:              892.658s
CPU time for analysis:          892.600s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              1.361s

Time for Garbage Collector:      41.199s (in 1020 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                392MB (   374 MiB) max;    225MB (   214 MiB) avg;    432MB (   412 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           509MB (   486 MiB) max;    335MB (   319 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8613MB (  8214 MiB) max;   8356MB (  7969 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
