scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k81pfq1y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            33608 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            9470 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24138 (72%)
  Times precision was empty:       7079 (21%)
  Times precision was {false}:     8368 (25%)
  Times result was cached:         17528 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      633 (2%)
  Times result was 'false':        24379 (73%)
Number of strengthen sat checks:   0
Number of coverage checks:         489766
  BDD entailment checks:           1492
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1310
Number of predicates discovered:          5
Number of abstraction locations:          15
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         31986
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 3.55
Number of irrelevant predicates:          25170 (79%)
Number of preds handled by boolean abs:   1344 (4%)
  Total number of models for allsat:      488
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.77

Time for post operator:                 33.871s
  Time for path formula creation:       32.385s
Time for strengthen operator:            2.921s
Time for prec operator:                734.519s
  Time for abstraction:                731.979s (Max:    37.477s, Count: 33608)
    Boolean abstraction:               370.069s
    Solving time:                      539.504s (Max:    35.346s)
    Model enumeration time:             58.600s
    Time for BDD construction:           0.061s (Max:     0.014s)
Time for merge operator:                 7.496s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):   598.104s

Number of path formula cache hits:   2880004 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.551s

Total number of created targets for pointer analysis: 24625
   Number of created targets for uf: *signed_int is 61
   Number of created targets for uf: *unsigned_char is 229
   Number of created targets for uf: *char is 201
   Number of created targets for uf: *unsigned_int is 49


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1153 (count: 62820, min: 0, max: 20, avg: 0.02)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.776s
  Time for transition matches:                         3.108s
  Time for transition assertions:                      0.023s
  Time for transition actions:                         0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                      3006955 (count: 3006955, min: 1, max: 1, avg: 1.00) [1 x 3006955]

CPA algorithm statistics
------------------------
Number of iterations:            1951957
Max size of waitlist:            198
Average size of waitlist:        94
Number of computed successors:   2229234
Max successors for one state:    2
Number of times merged:          244137
Number of times stopped:         245570
Number of times breaked:         413

Total time for CPA algorithm:       853.435s (Max:    51.633s)
  Time for choose from waitlist:      1.058s
  Time for precision adjustment:    751.588s
  Time for transfer relation:        75.165s
  Time for merge operator:           11.006s
  Time for stop operator:             2.946s
  Time for adding to reached set:     5.810s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   413
Avg. length of target path (in blocks):                1315 (count: 413, min: 2, max: 5, avg: 3.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.226s
  Counterexample analysis:                            15.627s (Max:     0.208s, Calls: 413)
    Refinement sat check:                             13.170s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.097s
  ARG update:                                          5.137s

Length of refined path (in blocks):                    1315 (count: 413, min: 2, max: 5, avg: 3.18)
Number of affected states:                              497 (count: 413, min: 1, max: 4, avg: 1.20)
Length (states) of path with itp 'true':                405 (count: 413, min: 0, max: 3, avg: 0.98)
Length (states) of path with itp non-trivial itp:       497 (count: 413, min: 1, max: 4, avg: 1.20)
Length (states) of path with itp 'false':                 0 (count: 413, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 413, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:              80 (count: 413, min: 0, max: 3, avg: 0.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                413
Number of successful refinements:     413
Number of failed refinements:         0
Max. size of reached set before ref.: 56430
Max. size of reached set after ref.:  33673
Avg. size of reached set before ref.: 27768.09
Avg. size of reached set after ref.:  23116.22

Total time for CEGAR algorithm:     892.600s
Time for refinements:                31.226s
Average time for refinement:          0.075s
Max time for refinement:              0.314s

Code Coverage
-----------------------------
  Function coverage:      0.723
  Visited lines:          3916
  Total lines:            4539
  Line coverage:          0.863
  Visited conditions:     872
  Total conditions:       1110
  Condition coverage:     0.786

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             38060
  Number of reached locations:   2490 (41%)
    Avg states per location:     15
    Max states per location:     777 (at node N4935)
  Number of reached functions:   115 (72%)
  Number of partitions:          38060
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        58

Time for analysis setup:          7.614s
  Time for loading CPAs:          1.227s
  Time for loading parser:        0.746s
  Time for CFA construction:      5.521s
    Time for parsing file(s):     1.255s
    Time for AST to CFA:          2.027s
    Time for CFA sanity check:    0.488s
    Time for post-processing:     1.537s
      Time for var class.:        0.812s
Time for Analysis:              892.601s
CPU time for analysis:          892.540s
Total time for CPAchecker:      900.220s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.745s

Time for Garbage Collector:      25.992s (in 929 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                395MB (   376 MiB) max;    188MB (   179 MiB) avg;    406MB (   388 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           422MB (   402 MiB) max;    273MB (   261 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8546MB (  8150 MiB) max;   8365MB (  7977 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
