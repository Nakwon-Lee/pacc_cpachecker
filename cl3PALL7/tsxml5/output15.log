scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f6243eih/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            315 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            79 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         236 (75%)
  Times precision was empty:       79 (25%)
  Times precision was {false}:     235 (75%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1 (0%)
  Times result was 'false':        234 (74%)
Number of strengthen sat checks:   0
Number of coverage checks:         5014
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1139
Number of predicates discovered:          2
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         236
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          235 (100%)
Number of preds handled by boolean abs:   1 (0%)
  Total number of models for allsat:      1
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.464s
  Time for path formula creation:        5.291s
Time for strengthen operator:            0.163s
Time for prec operator:                 12.164s
  Time for abstraction:                 11.983s (Max:     0.219s, Count: 315)
    Boolean abstraction:                 0.024s
    Solving time:                        9.297s (Max:     0.186s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.014s (Max:     0.014s)
Time for merge operator:                 1.085s
Time for coverage check:                 0.001s
Total time for SMT solver (w/o itp):     9.297s

Number of path formula cache hits:   498 (2%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.951s

Total number of created targets for pointer analysis: 1730
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 1495, min: 0, max: 5, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.392s
Automaton transfers with branching:                0
Automaton transfer successors:                        32069 (count: 32069, min: 1, max: 1, avg: 1.00) [1 x 32069]

CPA algorithm statistics
------------------------
Number of iterations:            19943
Max size of waitlist:            101
Average size of waitlist:        69
Number of computed successors:   22814
Max successors for one state:    2
Number of times merged:          2507
Number of times stopped:         2507
Number of times breaked:         1

Total time for CPA algorithm:        22.798s (Max:    21.547s)
  Time for choose from waitlist:      0.129s
  Time for precision adjustment:     12.855s
  Time for transfer relation:         7.562s
  Time for merge operator:            1.394s
  Time for stop operator:             0.140s
  Time for adding to reached set:     0.189s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                   2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.059s
  Counterexample analysis:                             0.018s (Max:     0.018s, Calls: 1)
    Refinement sat check:                              0.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.002s
  ARG update:                                          0.010s

Length of refined path (in blocks):                       2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of affected states:                                1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 1, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 1, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 1, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 314
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 314.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:      22.878s
Time for refinements:                 0.080s
Average time for refinement:          0.080s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.616
  Visited lines:          3134
  Total lines:            4539
  Line coverage:          0.690
  Visited conditions:     620
  Total conditions:       1110
  Condition coverage:     0.559

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             19766
  Number of reached locations:   1830 (30%)
    Avg states per location:     10
    Max states per location:     403 (at node N4935)
  Number of reached functions:   98 (62%)
  Number of partitions:          19766
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        89

Time for analysis setup:          7.341s
  Time for loading CPAs:          1.193s
  Time for loading parser:        0.730s
  Time for CFA construction:      5.294s
    Time for parsing file(s):     1.278s
    Time for AST to CFA:          1.987s
    Time for CFA sanity check:    0.407s
    Time for post-processing:     1.345s
      Time for var class.:        0.740s
Time for Analysis:               22.879s
CPU time for analysis:           22.880s
Total time for CPAchecker:       30.224s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.541s

Time for Garbage Collector:       0.737s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     56MB (    54 MiB) avg;     96MB (    91 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
