scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83791d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_172kd7i9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4903: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2215: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7023 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6036 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         987 (14%)
  Times precision was empty:       649 (9%)
  Times precision was {false}:     221 (3%)
  Times result was cached:         5660 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      493 (7%)
  Times result was 'false':        1040 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         27872
  BDD entailment checks:           3784
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       146
Number of predicates discovered:          11
Number of abstraction locations:          20
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         23029
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 32.25
Number of irrelevant predicates:          3166 (14%)
Number of preds handled by boolean abs:   1407 (6%)
  Total number of models for allsat:      525
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.06

Time for post operator:                  6.922s
  Time for path formula creation:        6.678s
Time for strengthen operator:            0.350s
Time for prec operator:                 16.726s
  Time for abstraction:                 16.193s (Max:     0.214s, Count: 7023)
    Boolean abstraction:                 8.827s
    Solving time:                        9.475s (Max:     0.132s)
    Model enumeration time:              0.482s
    Time for BDD construction:           0.112s (Max:     0.023s)
Time for merge operator:                 0.528s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     9.957s

Number of path formula cache hits:   233806 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.639s

Total number of created targets for pointer analysis: 11790
   Number of created targets for uf: *unsigned_char is 773
   Number of created targets for uf: *unsigned_long_int is 85


Number of BDD nodes:                               554
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1285 (count: 8849, min: 0, max: 77, avg: 0.15)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.691s
  Time for transition matches:                         0.274s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                       237743 (count: 237743, min: 1, max: 1, avg: 1.00) [1 x 237743]

CPA algorithm statistics
------------------------
Number of iterations:            141403
Max size of waitlist:            28
Average size of waitlist:        13
Number of computed successors:   157872
Max successors for one state:    2
Number of times merged:          12044
Number of times stopped:         14912
Number of times breaked:         45

Total time for CPA algorithm:        33.359s (Max:     2.236s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:     18.402s
  Time for transfer relation:        11.727s
  Time for merge operator:            0.931s
  Time for stop operator:             0.351s
  Time for adding to reached set:     0.550s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                 494 (count: 45, min: 2, max: 20, avg: 10.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.817s
  Counterexample analysis:                             3.213s (Max:     0.168s, Calls: 45)
    Refinement sat check:                              2.864s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.037s
  ARG update:                                          0.456s

Length of refined path (in blocks):                     470 (count: 45, min: 2, max: 20, avg: 10.44)
Number of affected states:                              353 (count: 45, min: 1, max: 19, avg: 7.84)
Length (states) of path with itp 'true':                 72 (count: 45, min: 0, max: 7, avg: 1.60)
Length (states) of path with itp non-trivial itp:       353 (count: 45, min: 1, max: 19, avg: 7.84)
Length (states) of path with itp 'false':                 5 (count: 45, min: 0, max: 1, avg: 0.11)
Different non-trivial interpolants along paths:           0 (count: 45, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             308 (count: 45, min: 0, max: 18, avg: 6.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 8920
Max. size of reached set after ref.:  4388
Avg. size of reached set before ref.: 4278.44
Avg. size of reached set after ref.:  1326.13

Total time for CEGAR algorithm:      37.655s
Time for refinements:                 4.237s
Average time for refinement:          0.094s
Max time for refinement:              0.181s

Code Coverage
-----------------------------
  Function coverage:      0.256
  Visited lines:          1359
  Total lines:            2376
  Line coverage:          0.572
  Visited conditions:     236
  Total conditions:       424
  Condition coverage:     0.557

CPAchecker general statistics
-----------------------------
Number of program locations:     3055
Number of CFA edges:             3404
Number of relevant variables:    407
Number of functions:             125
Number of loops:                 21
Size of reached set:             9067
  Number of reached locations:   737 (24%)
    Avg states per location:     12
    Max states per location:     343 (at node N2350)
  Number of reached functions:   32 (26%)
  Number of partitions:          9063
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1950 (before line 4694), Function main called from node N1935, stack depth 1 [2ec3633f], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.743s
  Time for loading CPAs:          1.080s
  Time for loading parser:        0.830s
  Time for CFA construction:      4.622s
    Time for parsing file(s):     1.199s
    Time for AST to CFA:          1.633s
    Time for CFA sanity check:    0.330s
    Time for post-processing:     1.243s
      Time for var class.:        0.623s
Time for Analysis:               37.655s
CPU time for analysis:           37.650s
Time for analyzing result:        0.009s
Total time for CPAchecker:       44.406s
Total CPU time for CPAchecker:   44.390s
Time for statistics:              0.281s

Time for Garbage Collector:       1.107s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    86 MiB) max;     51MB (    48 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8122MB (  7746 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
