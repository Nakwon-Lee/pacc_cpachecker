scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83791d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1ku1svgu/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4903: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2215: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1987 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1641 (83%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         346 (17%)
  Times precision was empty:       594 (30%)
  Times precision was {false}:     139 (7%)
  Times result was cached:         1027 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      227 (11%)
  Times result was 'false':        342 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         7833
  BDD entailment checks:           883
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       146
Number of predicates discovered:          8
Number of abstraction locations:          18
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         3338
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 9.12
Number of irrelevant predicates:          809 (24%)
Number of preds handled by boolean abs:   497 (15%)
  Total number of models for allsat:      232
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  5.013s
  Time for path formula creation:        4.851s
Time for strengthen operator:            0.192s
Time for prec operator:                  9.632s
  Time for abstraction:                  9.315s (Max:     0.204s, Count: 1987)
    Boolean abstraction:                 5.495s
    Solving time:                        6.317s (Max:     0.126s)
    Model enumeration time:              0.253s
    Time for BDD construction:           0.071s (Max:     0.021s)
Time for merge operator:                 0.307s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     6.571s

Number of path formula cache hits:   59395 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.827s

Total number of created targets for pointer analysis: 9145
   Number of created targets for uf: *unsigned_char is 621
   Number of created targets for uf: *unsigned_long_int is 73


Number of BDD nodes:                               345
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         640 (count: 3746, min: 0, max: 68, avg: 0.17)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.572s
  Time for transition matches:                         0.152s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                        68713 (count: 68713, min: 1, max: 1, avg: 1.00) [1 x 68713]

CPA algorithm statistics
------------------------
Number of iterations:            40171
Max size of waitlist:            28
Average size of waitlist:        13
Number of computed successors:   45006
Max successors for one state:    2
Number of times merged:          3475
Number of times stopped:         4174
Number of times breaked:         31

Total time for CPA algorithm:        20.489s (Max:     2.870s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     10.577s
  Time for transfer relation:         7.870s
  Time for merge operator:            0.595s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.283s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 370 (count: 31, min: 2, max: 20, avg: 11.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.292s
  Counterexample analysis:                             2.955s (Max:     0.174s, Calls: 31)
    Refinement sat check:                              2.642s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.037s
  ARG update:                                          0.215s

Length of refined path (in blocks):                     350 (count: 31, min: 2, max: 20, avg: 11.29)
Number of affected states:                              247 (count: 31, min: 1, max: 19, avg: 7.97)
Length (states) of path with itp 'true':                 72 (count: 31, min: 0, max: 7, avg: 2.32)
Length (states) of path with itp non-trivial itp:       247 (count: 31, min: 1, max: 19, avg: 7.97)
Length (states) of path with itp 'false':                 3 (count: 31, min: 0, max: 1, avg: 0.10)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             216 (count: 31, min: 0, max: 18, avg: 6.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 5137
Max. size of reached set after ref.:  4388
Avg. size of reached set before ref.: 3065.97
Avg. size of reached set after ref.:  1921.42

Total time for CEGAR algorithm:      24.218s
Time for refinements:                 3.652s
Average time for refinement:          0.117s
Max time for refinement:              0.210s

Code Coverage
-----------------------------
  Function coverage:      0.240
  Visited lines:          1307
  Total lines:            2376
  Line coverage:          0.550
  Visited conditions:     214
  Total conditions:       424
  Condition coverage:     0.505

CPAchecker general statistics
-----------------------------
Number of program locations:     3055
Number of CFA edges:             3404
Number of relevant variables:    407
Number of functions:             125
Number of loops:                 21
Size of reached set:             5009
  Number of reached locations:   673 (22%)
    Avg states per location:     7
    Max states per location:     166 (at node N61)
  Number of reached functions:   30 (24%)
  Number of partitions:          5005
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1950 (before line 4694), Function main called from node N1935, stack depth 1 [2ec3633f], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          5.976s
  Time for loading CPAs:          0.960s
  Time for loading parser:        0.710s
  Time for CFA construction:      4.144s
    Time for parsing file(s):     1.082s
    Time for AST to CFA:          1.390s
    Time for CFA sanity check:    0.315s
    Time for post-processing:     1.173s
      Time for var class.:        0.633s
Time for Analysis:               24.218s
CPU time for analysis:           24.220s
Total time for CPAchecker:       30.200s
Total CPU time for CPAchecker:   30.190s
Time for statistics:              0.261s

Time for Garbage Collector:       0.531s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     46MB (    44 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
