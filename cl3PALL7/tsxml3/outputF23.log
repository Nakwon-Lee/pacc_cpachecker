scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83791d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z9heqi3i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4903: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2215: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            4631 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3750 (81%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         881 (19%)
  Times precision was empty:       783 (17%)
  Times precision was {false}:     240 (5%)
  Times result was cached:         3223 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      385 (8%)
  Times result was 'false':        873 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         19158
  BDD entailment checks:           2248
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       146
Number of predicates discovered:          11
Number of abstraction locations:          20
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         11276
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 18.04
Number of irrelevant predicates:          3176 (28%)
Number of preds handled by boolean abs:   1037 (9%)
  Total number of models for allsat:      417
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.08

Time for post operator:                  4.872s
  Time for path formula creation:        4.713s
Time for strengthen operator:            0.249s
Time for prec operator:                 14.403s
  Time for abstraction:                 14.089s (Max:     0.193s, Count: 4631)
    Boolean abstraction:                 7.645s
    Solving time:                        9.074s (Max:     0.134s)
    Model enumeration time:              0.387s
    Time for BDD construction:           0.088s (Max:     0.015s)
Time for merge operator:                 0.376s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     9.461s

Number of path formula cache hits:   165946 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.356s

Total number of created targets for pointer analysis: 8379
   Number of created targets for uf: *unsigned_char is 457
   Number of created targets for uf: *unsigned_long_int is 49


Number of BDD nodes:                               519
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1121 (count: 6920, min: 0, max: 98, avg: 0.16)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.616s
  Time for transition matches:                         0.288s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                       170483 (count: 170483, min: 1, max: 1, avg: 1.00) [1 x 170483]

CPA algorithm statistics
------------------------
Number of iterations:            100561
Max size of waitlist:            25
Average size of waitlist:        11
Number of computed successors:   112455
Max successors for one state:    2
Number of times merged:          8455
Number of times stopped:         10071
Number of times breaked:         112

Total time for CPA algorithm:        26.642s (Max:     1.613s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:     15.664s
  Time for transfer relation:         8.477s
  Time for merge operator:            0.684s
  Time for stop operator:             0.299s
  Time for adding to reached set:     0.435s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   112
Avg. length of target path (in blocks):                1419 (count: 112, min: 2, max: 22, avg: 12.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.403s
  Counterexample analysis:                             7.820s (Max:     0.157s, Calls: 112)
    Refinement sat check:                              7.021s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.052s
  ARG update:                                          0.377s

Length of refined path (in blocks):                    1390 (count: 112, min: 2, max: 22, avg: 12.41)
Number of affected states:                              922 (count: 112, min: 1, max: 19, avg: 8.23)
Length (states) of path with itp 'true':                356 (count: 112, min: 0, max: 14, avg: 3.18)
Length (states) of path with itp non-trivial itp:       922 (count: 112, min: 1, max: 19, avg: 8.23)
Length (states) of path with itp 'false':                 5 (count: 112, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           0 (count: 112, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             810 (count: 112, min: 0, max: 18, avg: 7.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                112
Number of successful refinements:     112
Number of failed refinements:         0
Max. size of reached set before ref.: 3962
Max. size of reached set after ref.:  3500
Avg. size of reached set before ref.: 2972.60
Avg. size of reached set after ref.:  2109.54

Total time for CEGAR algorithm:      35.834s
Time for refinements:                 8.969s
Average time for refinement:          0.080s
Max time for refinement:              0.166s

Code Coverage
-----------------------------
  Function coverage:      0.256
  Visited lines:          1359
  Total lines:            2376
  Line coverage:          0.572
  Visited conditions:     236
  Total conditions:       424
  Condition coverage:     0.557

CPAchecker general statistics
-----------------------------
Number of program locations:     3055
Number of CFA edges:             3404
Number of relevant variables:    407
Number of functions:             125
Number of loops:                 21
Size of reached set:             4849
  Number of reached locations:   737 (24%)
    Avg states per location:     6
    Max states per location:     175 (at node N2350)
  Number of reached functions:   32 (26%)
  Number of partitions:          4847
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1950 (before line 4694), Function main called from node N1935, stack depth 1 [78226c36], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.893s
  Time for loading CPAs:          0.947s
  Time for loading parser:        0.789s
  Time for CFA construction:      3.983s
    Time for parsing file(s):     1.100s
    Time for AST to CFA:          1.323s
    Time for CFA sanity check:    0.248s
    Time for post-processing:     1.110s
      Time for var class.:        0.676s
Time for Analysis:               35.834s
CPU time for analysis:           35.830s
Time for analyzing result:        0.005s
Total time for CPAchecker:       41.732s
Total CPU time for CPAchecker:   41.710s
Time for statistics:              0.224s

Time for Garbage Collector:       0.657s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     48MB (    46 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8123MB (  7747 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
