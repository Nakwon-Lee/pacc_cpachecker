scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83791d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x0hedd78/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4903: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2215: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2215: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            6080 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5232 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         848 (14%)
  Times precision was empty:       867 (14%)
  Times precision was {false}:     224 (4%)
  Times result was cached:         4445 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      544 (9%)
  Times result was 'false':        881 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         24443
  BDD entailment checks:           3331
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       146
Number of predicates discovered:          8
Number of abstraction locations:          20
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         18829
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 24.52
Number of irrelevant predicates:          1907 (10%)
Number of preds handled by boolean abs:   1628 (9%)
  Total number of models for allsat:      554
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  6.735s
  Time for path formula creation:        6.503s
Time for strengthen operator:            0.324s
Time for prec operator:                 15.842s
  Time for abstraction:                 15.380s (Max:     0.195s, Count: 6080)
    Boolean abstraction:                 9.473s
    Solving time:                        9.549s (Max:     0.129s)
    Model enumeration time:              0.416s
    Time for BDD construction:           0.100s (Max:     0.014s)
Time for merge operator:                 0.507s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     9.965s

Number of path formula cache hits:   193886 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.912s

Total number of created targets for pointer analysis: 15775
   Number of created targets for uf: *unsigned_char is 1101
   Number of created targets for uf: *unsigned_long_int is 79


Number of BDD nodes:                               399
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1297 (count: 8926, min: 0, max: 94, avg: 0.15)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.660s
  Time for transition matches:                         0.279s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                       207393 (count: 207393, min: 1, max: 1, avg: 1.00) [1 x 207393]

CPA algorithm statistics
------------------------
Number of iterations:            123206
Max size of waitlist:            34
Average size of waitlist:        16
Number of computed successors:   137571
Max successors for one state:    2
Number of times merged:          10556
Number of times stopped:         13022
Number of times breaked:         30

Total time for CPA algorithm:        31.548s (Max:     2.753s)
  Time for choose from waitlist:      0.162s
  Time for precision adjustment:     17.331s
  Time for transfer relation:        11.196s
  Time for merge operator:            0.944s
  Time for stop operator:             0.353s
  Time for adding to reached set:     0.498s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   30
Avg. length of target path (in blocks):                 372 (count: 30, min: 2, max: 23, avg: 12.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.905s
  Counterexample analysis:                             2.275s (Max:     0.190s, Calls: 30)
    Refinement sat check:                              2.007s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.027s
  ARG update:                                          0.469s

Length of refined path (in blocks):                     362 (count: 30, min: 2, max: 23, avg: 12.07)
Number of affected states:                              310 (count: 30, min: 1, max: 22, avg: 10.33)
Length (states) of path with itp 'true':                 22 (count: 30, min: 0, max: 7, avg: 0.73)
Length (states) of path with itp non-trivial itp:       310 (count: 30, min: 1, max: 22, avg: 10.33)
Length (states) of path with itp 'false':                 2 (count: 30, min: 0, max: 1, avg: 0.07)
Different non-trivial interpolants along paths:           0 (count: 30, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             280 (count: 30, min: 0, max: 21, avg: 9.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                30
Number of successful refinements:     30
Number of failed refinements:         0
Max. size of reached set before ref.: 8995
Max. size of reached set after ref.:  5838
Avg. size of reached set before ref.: 4659.93
Avg. size of reached set after ref.:  846.80

Total time for CEGAR algorithm:      34.711s
Time for refinements:                 3.147s
Average time for refinement:          0.104s
Max time for refinement:              0.244s

Code Coverage
-----------------------------
  Function coverage:      0.256
  Visited lines:          1359
  Total lines:            2376
  Line coverage:          0.572
  Visited conditions:     236
  Total conditions:       424
  Condition coverage:     0.557

CPAchecker general statistics
-----------------------------
Number of program locations:     3055
Number of CFA edges:             3404
Number of relevant variables:    407
Number of functions:             125
Number of loops:                 21
Size of reached set:             9275
  Number of reached locations:   737 (24%)
    Avg states per location:     12
    Max states per location:     344 (at node N2350)
  Number of reached functions:   32 (26%)
  Number of partitions:          9271
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1950 (before line 4694), Function main called from node N1935, stack depth 1 [78226c36], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.068s
  Time for loading CPAs:          1.034s
  Time for loading parser:        0.770s
  Time for CFA construction:      4.106s
    Time for parsing file(s):     1.199s
    Time for AST to CFA:          1.292s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     1.156s
      Time for var class.:        0.619s
Time for Analysis:               34.712s
CPU time for analysis:           34.710s
Time for analyzing result:        0.009s
Total time for CPAchecker:       40.787s
Total CPU time for CPAchecker:   40.760s
Time for statistics:              0.286s

Time for Garbage Collector:       1.049s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    92 MiB) max;     52MB (    50 MiB) avg;    102MB (    97 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8122MB (  7746 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
