scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers-simplified/floppy_simpl4_true-unreach-call_true-valid-memsafety_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__ls5i87n/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            120 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         114 (95%)
  Times precision was empty:       56 (47%)
  Times precision was {false}:     60 (50%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (3%)
  Times result was 'false':        60 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         470
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       245
Number of predicates discovered:          4
Number of abstraction locations:          2
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         68
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.06
Number of irrelevant predicates:          60 (88%)
Number of preds handled by boolean abs:   8 (12%)
  Total number of models for allsat:      3
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.75

Time for post operator:                  0.447s
  Time for path formula creation:        0.429s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.655s
  Time for abstraction:                  0.633s (Max:     0.039s, Count: 120)
    Boolean abstraction:                 0.042s
    Solving time:                        0.304s (Max:     0.026s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.006s (Max:     0.006s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.307s

Number of path formula cache hits:   301 (10%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.413s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 452, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.089s
Automaton transfers with branching:                0
Automaton transfer successors:                         2940 (count: 2940, min: 1, max: 1, avg: 1.00) [1 x 2940]

CPA algorithm statistics
------------------------
Number of iterations:            1794
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   2096
Max successors for one state:    2
Number of times merged:          234
Number of times stopped:         236
Number of times breaked:         55

Total time for CPA algorithm:         1.669s (Max:     0.155s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.723s
  Time for transfer relation:         0.728s
  Time for merge operator:            0.112s
  Time for stop operator:             0.018s
  Time for adding to reached set:     0.035s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                  57 (count: 55, min: 1, max: 2, avg: 1.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.621s
  Counterexample analysis:                             0.535s (Max:     0.037s, Calls: 55)
    Refinement sat check:                              0.382s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.021s
  ARG update:                                          0.018s

Length of refined path (in blocks):                      57 (count: 55, min: 1, max: 2, avg: 1.04)
Number of affected states:                                2 (count: 55, min: 0, max: 1, avg: 0.04)
Length (states) of path with itp 'true':                  0 (count: 55, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 55, min: 0, max: 1, avg: 0.04)
Length (states) of path with itp 'false':                 0 (count: 55, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 55, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 55, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 1564
Max. size of reached set after ref.:  1450
Avg. size of reached set before ref.: 760.18
Avg. size of reached set after ref.:  756.04

Total time for CEGAR algorithm:       2.548s
Time for refinements:                 0.809s
Average time for refinement:          0.014s
Max time for refinement:              0.044s

Code Coverage
-----------------------------
  Function coverage:      0.964
  Visited lines:          880
  Total lines:            882
  Line coverage:          0.998
  Visited conditions:     254
  Total conditions:       254
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     1210
Number of CFA edges:             1378
Number of relevant variables:    128
Number of functions:             28
Number of loops:                 1
Size of reached set:             1573
  Number of reached locations:   606 (50%)
    Avg states per location:     2
    Max states per location:     57 (at node N1377)
  Number of reached functions:   27 (96%)
  Number of partitions:          1573
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.715s
  Time for loading CPAs:          0.680s
  Time for loading parser:        0.547s
  Time for CFA construction:      1.328s
    Time for parsing file(s):     0.429s
    Time for AST to CFA:          0.316s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.317s
      Time for var class.:        0.156s
Time for Analysis:                2.548s
CPU time for analysis:            2.550s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.267s
Total CPU time for CPAchecker:    5.270s
Time for statistics:              0.110s

Time for Garbage Collector:       0.129s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    25 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8084MB (  7710 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
