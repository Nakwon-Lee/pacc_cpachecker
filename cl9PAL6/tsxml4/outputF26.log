scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ntdrivers-simplified/diskperf_simpl1_true-unreach-call_true-valid-memsafety_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6jv8vxah/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            118 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         112 (95%)
  Times precision was empty:       54 (46%)
  Times precision was {false}:     60 (51%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (3%)
  Times result was 'false':        59 (50%)
Number of strengthen sat checks:   0
Number of coverage checks:         457
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       447
Number of predicates discovered:          3
Number of abstraction locations:          2
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         66
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.03
Number of irrelevant predicates:          60 (91%)
Number of preds handled by boolean abs:   6 (9%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.374s
  Time for path formula creation:        0.342s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.741s
  Time for abstraction:                  0.725s (Max:     0.042s, Count: 118)
    Boolean abstraction:                 0.027s
    Solving time:                        0.435s (Max:     0.031s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.011s (Max:     0.011s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.436s

Number of path formula cache hits:   179 (6%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.334s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 448, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.103s
Automaton transfers with branching:                0
Automaton transfer successors:                         2942 (count: 2942, min: 1, max: 1, avg: 1.00) [1 x 2942]

CPA algorithm statistics
------------------------
Number of iterations:            1628
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   1922
Max successors for one state:    2
Number of times merged:          227
Number of times stopped:         230
Number of times breaked:         53

Total time for CPA algorithm:         1.862s (Max:     0.173s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      0.822s
  Time for transfer relation:         0.756s
  Time for merge operator:            0.114s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.042s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   53
Avg. length of target path (in blocks):                  55 (count: 53, min: 1, max: 2, avg: 1.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.831s
  Counterexample analysis:                             0.726s (Max:     0.074s, Calls: 53)
    Refinement sat check:                              0.595s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.017s
  ARG update:                                          0.024s

Length of refined path (in blocks):                      55 (count: 53, min: 1, max: 2, avg: 1.04)
Number of affected states:                                2 (count: 53, min: 0, max: 1, avg: 0.04)
Length (states) of path with itp 'true':                  0 (count: 53, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         2 (count: 53, min: 0, max: 1, avg: 0.04)
Length (states) of path with itp 'false':                 0 (count: 53, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 53, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 53, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                53
Number of successful refinements:     53
Number of failed refinements:         0
Max. size of reached set before ref.: 1486
Max. size of reached set after ref.:  1412
Avg. size of reached set before ref.: 777.79
Avg. size of reached set after ref.:  775.09

Total time for CEGAR algorithm:       2.862s
Time for refinements:                 0.946s
Average time for refinement:          0.017s
Max time for refinement:              0.077s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          613
  Total lines:            614
  Line coverage:          0.998
  Visited conditions:     164
  Total conditions:       164
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     868
Number of CFA edges:             984
Number of relevant variables:    88
Number of functions:             25
Number of loops:                 1
Size of reached set:             1491
  Number of reached locations:   420 (48%)
    Avg states per location:     3
    Max states per location:     56 (at node N1)
  Number of reached functions:   25 (100%)
  Number of partitions:          1491
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.568s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.562s
  Time for CFA construction:      1.191s
    Time for parsing file(s):     0.400s
    Time for AST to CFA:          0.282s
    Time for CFA sanity check:    0.093s
    Time for post-processing:     0.275s
      Time for var class.:        0.143s
Time for Analysis:                2.862s
CPU time for analysis:            2.860s
Time for analyzing result:        0.002s
Total time for CPAchecker:        5.434s
Total CPU time for CPAchecker:    5.420s
Time for statistics:              0.099s

Time for Garbage Collector:       0.113s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    32 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8086MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
