scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--usb--serial--ir-usb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9bl3cnds/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_register_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_deregister_drivers to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            879 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  813 (92%)
  Because of loop head:            58 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       453 (52%)
  Times precision was {false}:     64 (7%)
  Times result was cached:         311 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51 (6%)
  Times result was 'false':        15 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2185
  BDD entailment checks:           203
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       71
Number of predicates discovered:          2
Number of abstraction locations:          44
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         426
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.70
Number of irrelevant predicates:          185 (43%)
Number of preds handled by boolean abs:   51 (12%)
  Total number of models for allsat:      51
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.474s
  Time for path formula creation:        1.415s
Time for strengthen operator:            0.050s
Time for prec operator:                  0.653s
  Time for abstraction:                  0.590s (Max:     0.026s, Count: 879)
    Boolean abstraction:                 0.127s
    Solving time:                        0.129s (Max:     0.014s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.017s (Max:     0.008s)
Time for merge operator:                 0.089s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     0.139s

Number of path formula cache hits:   12226 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.312s

Total number of created targets for pointer analysis: 11
   Number of created targets for uf: *unsigned_char is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         101 (count: 1287, min: 0, max: 42, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.162s
Automaton transfers with branching:                0
Automaton transfer successors:                        19797 (count: 19797, min: 1, max: 1, avg: 1.00) [1 x 19797]

CPA algorithm statistics
------------------------
Number of iterations:            8549
Max size of waitlist:            19
Average size of waitlist:        11
Number of computed successors:   9785
Max successors for one state:    2
Number of times merged:          991
Number of times stopped:         1150
Number of times breaked:         8

Total time for CPA algorithm:         3.667s (Max:     1.166s)
  Time for choose from waitlist:      0.035s
  Time for precision adjustment:      0.832s
  Time for transfer relation:         2.315s
  Time for merge operator:            0.195s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.050s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 115 (count: 8, min: 5, max: 21, avg: 14.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.220s
  Counterexample analysis:                             0.119s (Max:     0.025s, Calls: 8)
    Refinement sat check:                              0.070s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.003s
  ARG update:                                          0.072s

Length of refined path (in blocks):                     107 (count: 8, min: 4, max: 20, avg: 13.38)
Number of affected states:                               99 (count: 8, min: 3, max: 19, avg: 12.38)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        99 (count: 8, min: 3, max: 19, avg: 12.38)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              91 (count: 8, min: 2, max: 18, avg: 11.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 1256
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1001.75
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.944s
Time for refinements:                 0.276s
Average time for refinement:          0.034s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.645
  Visited lines:          1612
  Total lines:            1709
  Line coverage:          0.943
  Visited conditions:     158
  Total conditions:       184
  Condition coverage:     0.859

CPAchecker general statistics
-----------------------------
Number of program locations:     1967
Number of CFA edges:             2060
Number of relevant variables:    261
Number of functions:             31
Number of loops:                 2
Size of reached set:             631
  Number of reached locations:   540 (27%)
    Avg states per location:     1
    Max states per location:     6 (at node N1373)
  Number of reached functions:   20 (65%)
  Number of partitions:          631
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.519s
  Time for loading CPAs:          0.653s
  Time for loading parser:        0.470s
  Time for CFA construction:      2.283s
    Time for parsing file(s):     0.693s
    Time for AST to CFA:          0.734s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.497s
      Time for var class.:        0.243s
Time for Analysis:                3.945s
CPU time for analysis:            3.940s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.467s
Total CPU time for CPAchecker:    7.450s
Time for statistics:              0.076s

Time for Garbage Collector:       0.182s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     38MB (    36 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8099MB (  7724 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
