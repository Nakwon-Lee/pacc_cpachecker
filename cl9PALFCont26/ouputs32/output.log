scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--mwifiex--mwifiex_pcie.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g4ez5305/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_handle_rx_packet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mwifiex_process_sleep_confirm_resp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            278849 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  254031 (91%)
  Because of loop head:            24676 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         142 (0%)
  Times precision was empty:       44633 (16%)
  Times precision was {false}:     11917 (4%)
  Times result was cached:         213391 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8908 (3%)
  Times result was 'false':        1918 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         259093
  BDD entailment checks:           86455
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       152
Number of predicates discovered:          4
Number of abstraction locations:          239
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         391482
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 18.80
Number of irrelevant predicates:          226888 (58%)
Number of preds handled by boolean abs:   9625 (2%)
  Total number of models for allsat:      8880
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 74.635s
  Time for path formula creation:       73.152s
Time for strengthen operator:            3.500s
Time for prec operator:                 54.571s
  Time for abstraction:                 50.878s (Max:     0.486s, Count: 278849)
    Boolean abstraction:                 6.749s
    Solving time:                       15.683s (Max:     0.016s)
    Model enumeration time:              0.448s
    Time for BDD construction:           0.149s (Max:     0.009s)
Time for merge operator:                 3.486s
Time for coverage check:                 0.156s
  Time for BDD entailment checks:        0.130s
Total time for SMT solver (w/o itp):    16.131s

Number of path formula cache hits:   3461168 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    55.677s

Total number of created targets for pointer analysis: 17168
   Number of created targets for uf: *unsigned_short_int is 3
   Number of created targets for uf: *unsigned_char is 47
   Number of created targets for uf: *unsigned_int is 132


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17829 (count: 244930, min: 0, max: 1256, avg: 0.07)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.891s
  Time for transition matches:                         2.668s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      5278209 (count: 5278209, min: 1, max: 1, avg: 1.00) [1 x 5278209]

CPA algorithm statistics
------------------------
Number of iterations:            1489586
Max size of waitlist:            50
Average size of waitlist:        28
Number of computed successors:   1650333
Max successors for one state:    2
Number of times merged:          86319
Number of times stopped:         158632
Number of times breaked:         142

Total time for CPA algorithm:       190.552s (Max:     3.167s)
  Time for choose from waitlist:      0.486s
  Time for precision adjustment:     66.580s
  Time for transfer relation:       111.701s
  Time for merge operator:            4.823s
  Time for stop operator:             1.648s
  Time for adding to reached set:     2.064s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   142
Avg. length of target path (in blocks):                6764 (count: 142, min: 9, max: 125, avg: 47.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.437s
  Counterexample analysis:                             2.711s (Max:     0.057s, Calls: 142)
    Refinement sat check:                              1.921s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.077s
  ARG update:                                          2.507s

Length of refined path (in blocks):                    5985 (count: 142, min: 8, max: 115, avg: 42.15)
Number of affected states:                             5485 (count: 142, min: 7, max: 109, avg: 38.63)
Length (states) of path with itp 'true':                358 (count: 142, min: 0, max: 8, avg: 2.52)
Length (states) of path with itp non-trivial itp:      5485 (count: 142, min: 7, max: 109, avg: 38.63)
Length (states) of path with itp 'false':               142 (count: 142, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 142, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5343 (count: 142, min: 6, max: 108, avg: 37.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                142
Number of successful refinements:     142
Number of failed refinements:         0
Max. size of reached set before ref.: 13532
Max. size of reached set after ref.:  4076
Avg. size of reached set before ref.: 10542.82
Avg. size of reached set after ref.:  80.18

Total time for CEGAR algorithm:     200.618s
Time for refinements:                10.052s
Average time for refinement:          0.070s
Max time for refinement:              3.725s

Code Coverage
-----------------------------
  Function coverage:      0.794
  Visited lines:          7085
  Total lines:            7559
  Line coverage:          0.937
  Visited conditions:     478
  Total conditions:       552
  Condition coverage:     0.866

CPAchecker general statistics
-----------------------------
Number of program locations:     8341
Number of CFA edges:             8737
Number of relevant variables:    1745
Number of functions:             68
Number of loops:                 18
Size of reached set:             4089
  Number of reached locations:   1803 (22%)
    Avg states per location:     2
    Max states per location:     91 (at node N7759)
  Number of reached functions:   54 (79%)
  Number of partitions:          4088
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5886 (before lines 13055-13104), Function mwifiex_check_fw_status called from node N7608, stack depth 2 [21a24398], stack [main, mwifiex_check_fw_status]])
  Number of target states:       0

Time for analysis setup:          5.161s
  Time for loading CPAs:          0.878s
  Time for loading parser:        0.479s
  Time for CFA construction:      3.652s
    Time for parsing file(s):     0.800s
    Time for AST to CFA:          1.115s
    Time for CFA sanity check:    0.406s
    Time for post-processing:     1.178s
      Time for var class.:        0.517s
Time for Analysis:              200.619s
CPU time for analysis:          200.610s
Time for analyzing result:        0.004s
Total time for CPAchecker:      205.783s
Total CPU time for CPAchecker:  205.750s
Time for statistics:              0.188s

Time for Garbage Collector:      23.649s (in 238 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1296MB (  1236 MiB) max;    545MB (   520 MiB) avg;   1322MB (  1261 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1697MB (  1618 MiB) max;    822MB (   784 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8269MB (  7886 MiB) max;   8178MB (  7800 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
