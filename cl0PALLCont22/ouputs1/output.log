scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ztravr1y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement failed: Interpolation failed (build_model: too many iterations) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            396 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            377 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (5%)
  Times precision was empty:       28 (7%)
  Times precision was {false}:     174 (44%)
  Times result was cached:         45 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      149 (38%)
  Times result was 'false':        88 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         17679
  BDD entailment checks:           369
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       397
Number of predicates discovered:          20
Number of abstraction locations:          6
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         1049
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 3.25
Number of irrelevant predicates:          340 (32%)
Number of preds handled by boolean abs:   707 (67%)
  Total number of models for allsat:      354
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.38

Time for post operator:                  4.340s
  Time for path formula creation:        4.290s
Time for strengthen operator:            0.076s
Time for prec operator:                 32.242s
  Time for abstraction:                 32.122s (Max:     1.707s, Count: 396)
    Boolean abstraction:                 0.655s
    Solving time:                       29.730s (Max:     1.689s)
    Model enumeration time:              0.243s
    Time for BDD construction:           0.027s (Max:     0.002s)
Time for merge operator:                 1.119s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):    29.973s

Number of path formula cache hits:   14002 (19%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.037s

Total number of created targets for pointer analysis: 35303
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_char is 3246
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 9
   Number of created targets for uf: *unsigned_int is 281
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 23


Number of BDD nodes:                               1439
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1030 (count: 2515, min: 0, max: 457, avg: 0.41)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.224s
Automaton transfers with branching:                0
Automaton transfer successors:                        71835 (count: 71835, min: 1, max: 1, avg: 1.00) [1 x 71835]

CPA algorithm statistics
------------------------
Number of iterations:            46114
Max size of waitlist:            153
Average size of waitlist:        22
Number of computed successors:   56654
Max successors for one state:    2
Number of times merged:          8655
Number of times stopped:         8756
Number of times breaked:         14

Total time for CPA algorithm:        40.602s (Max:     5.366s)
  Time for choose from waitlist:      0.078s
  Time for precision adjustment:     32.711s
  Time for transfer relation:         5.830s
  Time for merge operator:            1.376s
  Time for stop operator:             0.096s
  Time for adding to reached set:     0.159s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 161 (count: 14, min: 2, max: 26, avg: 11.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 387.510s
  Counterexample analysis:                           387.312s (Max:   385.367s, Calls: 14)
    Refinement sat check:                            332.798s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.021s
  ARG update:                                          0.126s

Length of refined path (in blocks):                      97 (count: 13, min: 2, max: 24, avg: 7.46)
Number of affected states:                               59 (count: 13, min: 1, max: 23, avg: 4.54)
Length (states) of path with itp 'true':                 25 (count: 13, min: 0, max: 5, avg: 1.92)
Length (states) of path with itp non-trivial itp:        59 (count: 13, min: 1, max: 23, avg: 4.54)
Length (states) of path with itp 'false':                12 (count: 13, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:          26 (count: 13, min: 0, max: 11, avg: 2.00)
Equal non-trivial interpolants along paths:              20 (count: 13, min: 0, max: 11, avg: 1.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     13
Number of failed refinements:         1
Max. size of reached set before ref.: 4843
Max. size of reached set after ref.:  599
Avg. size of reached set before ref.: 3753.29
Avg. size of reached set after ref.:  364.23

Total time for CEGAR algorithm:     428.221s
Time for refinements:               387.618s
Average time for refinement:         27.687s
Max time for refinement:            385.369s

Code Coverage
-----------------------------
  Function coverage:      0.680
  Visited lines:          367
  Total lines:            400
  Line coverage:          0.918
  Visited conditions:     181
  Total conditions:       212
  Condition coverage:     0.854

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             3672
  Number of reached locations:   347 (37%)
    Avg states per location:     10
    Max states per location:     162 (at node N8)
  Number of reached functions:   17 (68%)
  Number of partitions:          3652
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [5a709816], stack [main]])
  Number of target states:       1
  Size of final wait list        94

Time for analysis setup:          2.933s
  Time for loading CPAs:          0.620s
  Time for loading parser:        0.581s
  Time for CFA construction:      1.617s
    Time for parsing file(s):     0.505s
    Time for AST to CFA:          0.526s
    Time for CFA sanity check:    0.110s
    Time for post-processing:     0.357s
      Time for var class.:        0.124s
Time for Analysis:              428.221s
CPU time for analysis:          428.200s
Total time for CPAchecker:      431.158s
Total CPU time for CPAchecker:  431.130s
Time for statistics:              0.123s

Time for Garbage Collector:       0.515s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     67MB (    63 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8131MB (  7754 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
