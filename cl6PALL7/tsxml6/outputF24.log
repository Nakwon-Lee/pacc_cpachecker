scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nv3bn3gh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3839: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6041 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            600 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5441 (90%)
  Times precision was empty:       87 (1%)
  Times precision was {false}:     3647 (60%)
  Times result was cached:         1914 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      393 (7%)
  Times result was 'false':        5470 (91%)
Number of strengthen sat checks:   0
Number of coverage checks:         76114
  BDD entailment checks:           768
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1717
Number of predicates discovered:          19
Number of abstraction locations:          5
Max number of predicates per location:    18
Avg number of predicates per location:    6
Total predicates per abstraction:         8924
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 2.21
Number of irrelevant predicates:          5599 (63%)
Number of preds handled by boolean abs:   2722 (31%)
  Total number of models for allsat:      808
  Max number of models for allsat:        14
  Avg number of models for allsat:        2.06

Time for post operator:                 25.195s
  Time for path formula creation:       24.564s
Time for strengthen operator:            0.787s
Time for prec operator:                819.895s
  Time for abstraction:                819.213s (Max:     1.397s, Count: 6041)
    Boolean abstraction:                64.347s
    Solving time:                      621.445s (Max:     0.954s)
    Model enumeration time:              9.933s
    Time for BDD construction:           0.118s (Max:     0.010s)
Time for merge operator:                13.690s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):   631.378s

Number of path formula cache hits:   452229 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.433s

Total number of created targets for pointer analysis: 554387
   Number of created targets for uf: *(void)* is 950
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *(struct_dentry)* is 34
   Number of created targets for uf: *(struct_sabi_config)* is 74
   Number of created targets for uf: *enum_rfkill_type is 166
   Number of created targets for uf: *(struct_platform_device)* is 41
   Number of created targets for uf: *(struct_rfkill)* is 149
   Number of created targets for uf: *unsigned_short_int is 5232
   Number of created targets for uf: *(struct_backlight_device)* is 34
   Number of created targets for uf: *signed_int is 166
   Number of created targets for uf: *unsigned_char is 8524
   Number of created targets for uf: *_Bool is 129
   Number of created targets for uf: *(struct_workqueue_struct)* is 34
   Number of created targets for uf: *unsigned_int is 1328
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               4919
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3536 (count: 26211, min: 0, max: 919, avg: 0.13)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.571s
  Time for transition matches:                         0.686s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.029s
Automaton transfers with branching:                0
Automaton transfer successors:                       663566 (count: 663566, min: 1, max: 1, avg: 1.00) [1 x 663566]

CPA algorithm statistics
------------------------
Number of iterations:            472679
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   516179
Max successors for one state:    2
Number of times merged:          37673
Number of times stopped:         37918
Number of times breaked:         59

Total time for CPA algorithm:       876.471s (Max:   172.219s)
  Time for choose from waitlist:      0.245s
  Time for precision adjustment:    823.195s
  Time for transfer relation:        34.700s
  Time for merge operator:           14.396s
  Time for stop operator:             0.845s
  Time for adding to reached set:     1.311s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                 174 (count: 59, min: 1, max: 15, avg: 2.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  17.428s
  Counterexample analysis:                            16.121s (Max:     0.628s, Calls: 59)
    Refinement sat check:                             14.913s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.015s
  ARG update:                                          1.100s

Length of refined path (in blocks):                     160 (count: 59, min: 1, max: 13, avg: 2.71)
Number of affected states:                              101 (count: 59, min: 0, max: 12, avg: 1.71)
Length (states) of path with itp 'true':                  0 (count: 59, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       101 (count: 59, min: 0, max: 12, avg: 1.71)
Length (states) of path with itp 'false':                 7 (count: 59, min: 0, max: 1, avg: 0.12)
Different non-trivial interpolants along paths:          36 (count: 59, min: 0, max: 11, avg: 0.61)
Equal non-trivial interpolants along paths:              35 (count: 59, min: 0, max: 2, avg: 0.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 67037
Max. size of reached set after ref.:  12024
Avg. size of reached set before ref.: 9740.31
Avg. size of reached set after ref.:  2098.66

Total time for CEGAR algorithm:     894.635s
Time for refinements:                18.064s
Average time for refinement:          0.306s
Max time for refinement:              0.794s

Code Coverage
-----------------------------
  Function coverage:      0.492
  Visited lines:          1325
  Total lines:            1928
  Line coverage:          0.687
  Visited conditions:     230
  Total conditions:       440
  Condition coverage:     0.523

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             21934
  Number of reached locations:   739 (27%)
    Avg states per location:     29
    Max states per location:     672 (at node N32)
  Number of reached functions:   61 (49%)
  Number of partitions:          21918
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N706 (before line 4610), Function find_signature called from node N1206, stack depth 5 [4f186450], stack [main, samsung_init, samsung_sabi_init, samsung_sabi_diag, find_signature]])
  Number of target states:       0
  Size of final wait list        4

Time for analysis setup:          5.622s
  Time for loading CPAs:          1.083s
  Time for loading parser:        0.752s
  Time for CFA construction:      3.613s
    Time for parsing file(s):     1.060s
    Time for AST to CFA:          1.169s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.957s
      Time for var class.:        0.491s
Time for Analysis:              894.635s
CPU time for analysis:          894.590s
Total time for CPAchecker:      900.274s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.425s

Time for Garbage Collector:      16.595s (in 1619 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                230MB (   219 MiB) max;    113MB (   108 MiB) avg;    235MB (   224 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           238MB (   227 MiB) max;    167MB (   159 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   9059MB (  8639 MiB) max;   8573MB (  8176 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
