scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--arcnet--com90xx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fxip4yb1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1232 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            907 (74%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         325 (26%)
  Times precision was empty:       94 (8%)
  Times precision was {false}:     98 (8%)
  Times result was cached:         867 (70%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      173 (14%)
  Times result was 'false':        372 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         5833
  BDD entailment checks:           787
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       83
Number of predicates discovered:          7
Number of abstraction locations:          18
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         3236
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.94
Number of irrelevant predicates:          715 (22%)
Number of preds handled by boolean abs:   412 (13%)
  Total number of models for allsat:      173
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.734s
  Time for path formula creation:        1.630s
Time for strengthen operator:            0.093s
Time for prec operator:                  3.265s
  Time for abstraction:                  3.064s (Max:     0.046s, Count: 1232)
    Boolean abstraction:                 1.008s
    Solving time:                        0.964s (Max:     0.041s)
    Model enumeration time:              0.063s
    Time for BDD construction:           0.099s (Max:     0.013s)
Time for merge operator:                 0.175s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     1.027s

Number of path formula cache hits:   26239 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.360s

Total number of created targets for pointer analysis: 628
   Number of created targets for uf: *(struct_net_device)* is 17
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *unsigned_long_int is 4


Number of BDD nodes:                               237
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         462 (count: 2564, min: 0, max: 157, avg: 0.18)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.390s
Automaton transfers with branching:                0
Automaton transfer successors:                        27485 (count: 27485, min: 1, max: 1, avg: 1.00) [1 x 27485]

CPA algorithm statistics
------------------------
Number of iterations:            19262
Max size of waitlist:            9
Average size of waitlist:        4
Number of computed successors:   22661
Max successors for one state:    2
Number of times merged:          2523
Number of times stopped:         2944
Number of times breaked:         25

Total time for CPA algorithm:         8.528s (Max:     0.895s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:      3.801s
  Time for transfer relation:         3.396s
  Time for merge operator:            0.390s
  Time for stop operator:             0.203s
  Time for adding to reached set:     0.208s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 214 (count: 25, min: 2, max: 17, avg: 8.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.745s
  Counterexample analysis:                             0.491s (Max:     0.057s, Calls: 25)
    Refinement sat check:                              0.396s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.037s
  ARG update:                                          0.147s

Length of refined path (in blocks):                     207 (count: 25, min: 2, max: 17, avg: 8.28)
Number of affected states:                              181 (count: 25, min: 1, max: 16, avg: 7.24)
Length (states) of path with itp 'true':                  1 (count: 25, min: 0, max: 1, avg: 0.04)
Length (states) of path with itp non-trivial itp:       181 (count: 25, min: 1, max: 16, avg: 7.24)
Length (states) of path with itp 'false':                 4 (count: 25, min: 0, max: 1, avg: 0.16)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             156 (count: 25, min: 0, max: 15, avg: 6.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1717
Max. size of reached set after ref.:  153
Avg. size of reached set before ref.: 733.04
Avg. size of reached set after ref.:  21.48

Total time for CEGAR algorithm:       9.386s
Time for refinements:                 0.851s
Average time for refinement:          0.034s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          1428
  Total lines:            1668
  Line coverage:          0.856
  Visited conditions:     258
  Total conditions:       342
  Condition coverage:     0.754

CPAchecker general statistics
-----------------------------
Number of program locations:     2136
Number of CFA edges:             2331
Number of relevant variables:    147
Number of functions:             55
Number of loops:                 18
Size of reached set:             1557
  Number of reached locations:   666 (31%)
    Avg states per location:     2
    Max states per location:     21 (at node N1112)
  Number of reached functions:   18 (33%)
  Number of partitions:          1547
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N189 (before line 4887), Function com90xx_probe called from node N988, stack depth 3 [2f40a43], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          5.222s
  Time for loading CPAs:          0.945s
  Time for loading parser:        0.736s
  Time for CFA construction:      3.382s
    Time for parsing file(s):     1.056s
    Time for AST to CFA:          1.158s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     0.732s
      Time for var class.:        0.278s
Time for Analysis:                9.387s
CPU time for analysis:            9.390s
Time for analyzing result:        0.002s
Total time for CPAchecker:       14.614s
Total CPU time for CPAchecker:   14.600s
Time for statistics:              0.153s

Time for Garbage Collector:       0.252s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     40MB (    38 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8107MB (  7731 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
