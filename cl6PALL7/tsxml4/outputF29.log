scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dm5zwod9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11783: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            128669 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            128636 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       128622 (100%)
  Times precision was {false}:     21 (0%)
  Times result was cached:         12 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (0%)
  Times result was 'false':        24 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1549655
  BDD entailment checks:           67775
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1347
Number of predicates discovered:          4
Number of abstraction locations:          3
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         71
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.03
Number of irrelevant predicates:          35 (49%)
Number of preds handled by boolean abs:   27 (38%)
  Total number of models for allsat:      14
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 60.318s
  Time for path formula creation:       53.735s
Time for strengthen operator:            9.158s
Time for prec operator:                 10.781s
  Time for abstraction:                  1.482s (Max:     0.151s, Count: 128669)
    Boolean abstraction:                 0.250s
    Solving time:                        0.310s (Max:     0.094s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 6.887s
Time for coverage check:                 0.228s
  Time for BDD entailment checks:        0.122s
Total time for SMT solver (w/o itp):     0.324s

Number of path formula cache hits:   10276240 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.701s

Total number of created targets for pointer analysis: 67326
   Number of created targets for uf: *(struct_net_device)* is 4
   Number of created targets for uf: *signed_int is 571
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *enum_ldv_28506 is 2
   Number of created targets for uf: *unsigned_int is 91
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          52 (count: 196615, min: 0, max: 52, avg: 0.00)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.376s
  Time for transition matches:                         6.879s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      9569805 (count: 9569805, min: 1, max: 1, avg: 1.00) [1 x 9569805]

CPA algorithm statistics
------------------------
Number of iterations:            6718340
Max size of waitlist:            38258
Average size of waitlist:        19136
Number of computed successors:   7565338
Max successors for one state:    2
Number of times merged:          740940
Number of times stopped:         808712
Number of times breaked:         9

Total time for CPA algorithm:       890.787s (Max:   888.590s)
  Time for choose from waitlist:      4.458s
  Time for precision adjustment:    163.945s
  Time for transfer relation:       636.787s
  Time for merge operator:           28.704s
  Time for stop operator:             7.612s
  Time for adding to reached set:    26.146s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  21 (count: 9, min: 1, max: 4, avg: 2.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.448s
  Counterexample analysis:                             0.390s (Max:     0.078s, Calls: 9)
    Refinement sat check:                              0.342s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.009s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      21 (count: 9, min: 1, max: 4, avg: 2.33)
Number of affected states:                               12 (count: 9, min: 0, max: 3, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        12 (count: 9, min: 0, max: 3, avg: 1.33)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               6 (count: 9, min: 0, max: 2, avg: 0.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 165
Max. size of reached set after ref.:  48
Avg. size of reached set before ref.: 98.67
Avg. size of reached set after ref.:  45.00

Total time for CEGAR algorithm:     891.277s
Time for refinements:                 0.490s
Average time for refinement:          0.054s
Max time for refinement:              0.083s

Code Coverage
-----------------------------
  Function coverage:      0.095
  Visited lines:          1442
  Total lines:            6363
  Line coverage:          0.227
  Visited conditions:     504
  Total conditions:       3026
  Condition coverage:     0.167

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             6756120
  Size of final wait list        38248

Time for analysis setup:          8.950s
  Time for loading CPAs:          1.256s
  Time for loading parser:        0.790s
  Time for CFA construction:      6.720s
    Time for parsing file(s):     1.386s
    Time for AST to CFA:          2.742s
    Time for CFA sanity check:    0.485s
    Time for post-processing:     1.812s
      Time for var class.:        0.950s
Time for Analysis:              891.277s
CPU time for analysis:          891.240s
Total time for CPAchecker:      900.232s
Total CPU time for CPAchecker:  900.170s
Time for statistics:            285.142s

Time for Garbage Collector:     474.989s (in 268 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5414MB (  5163 MiB) max;   2536MB (  2418 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     37MB (    35 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   3363MB (  3208 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8268MB (  7885 MiB) max;   8177MB (  7798 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
