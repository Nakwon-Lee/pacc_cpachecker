scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3qxsmwb_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4673: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7112: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31457 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            31448 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       31445 (100%)
  Times precision was {false}:     8 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (0%)
  Times result was 'false':        6 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         367253
  BDD entailment checks:           18377
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       888
Number of predicates discovered:          4
Number of abstraction locations:          2
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         17
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.42
Number of irrelevant predicates:          8 (47%)
Number of preds handled by boolean abs:   9 (53%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                586.609s
  Time for path formula creation:      584.732s
Time for strengthen operator:            3.123s
Time for prec operator:                  4.508s
  Time for abstraction:                  1.693s (Max:     0.534s, Count: 31457)
    Boolean abstraction:                 1.067s
    Solving time:                        0.998s (Max:     0.325s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.006s (Max:     0.004s)
Time for merge operator:               173.343s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     1.060s

Number of path formula cache hits:   402155 (16%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   568.624s

Total number of created targets for pointer analysis: 13694376
   Number of created targets for uf: *unsigned_short_int is 80
   Number of created targets for uf: *enum_ldv_24926 is 21
   Number of created targets for uf: *enum_ldv_24924 is 20
   Number of created targets for uf: *(struct_scsi_device)* is 2
   Number of created targets for uf: *signed_int is 9397
   Number of created targets for uf: *(char)* is 66
   Number of created targets for uf: *unsigned_char is 627
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(unsigned_int)* is 16
   Number of created targets for uf: *unsigned_int is 69
   Number of created targets for uf: *enum_ldv_24928 is 21


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          32 (count: 49906, min: 0, max: 15, avg: 0.00)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.248s
  Time for transition matches:                         2.765s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2422386 (count: 2422386, min: 1, max: 1, avg: 1.00) [1 x 2422386]

CPA algorithm statistics
------------------------
Number of iterations:            1641503
Max size of waitlist:            1615
Average size of waitlist:        712
Number of computed successors:   1835819
Max successors for one state:    2
Number of times merged:          174438
Number of times stopped:         192815
Number of times breaked:         3

Total time for CPA algorithm:       890.014s (Max:   887.253s)
  Time for choose from waitlist:      1.050s
  Time for precision adjustment:     19.835s
  Time for transfer relation:       673.241s
  Time for merge operator:          174.999s
  Time for stop operator:             2.541s
  Time for adding to reached set:     6.484s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.889s
  Counterexample analysis:                             0.849s (Max:     0.306s, Calls: 3)
    Refinement sat check:                              0.805s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.004s
  ARG update:                                          0.004s

Length of refined path (in blocks):                       6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of affected states:                                3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 33
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 27.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:     890.922s
Time for refinements:                 0.900s
Average time for refinement:          0.300s
Max time for refinement:              0.348s

Code Coverage
-----------------------------
  Function coverage:      0.483
  Visited lines:          4273
  Total lines:            7726
  Line coverage:          0.553
  Visited conditions:     1100
  Total conditions:       2544
  Condition coverage:     0.432

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             1642938
  Size of final wait list        1490

Time for analysis setup:          9.301s
  Time for loading CPAs:          1.277s
  Time for loading parser:        0.741s
  Time for CFA construction:      7.124s
    Time for parsing file(s):     1.461s
    Time for AST to CFA:          2.631s
    Time for CFA sanity check:    0.574s
    Time for post-processing:     2.153s
      Time for var class.:        1.216s
Time for Analysis:              890.922s
CPU time for analysis:          890.890s
Total time for CPAchecker:      900.231s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              9.613s

Time for Garbage Collector:      55.235s (in 488 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2506MB (  2390 MiB) max;   1038MB (   990 MiB) avg;   2600MB (  2479 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2721MB (  2595 MiB) max;   1525MB (  1454 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8141MB (  7764 MiB) max;   8140MB (  7763 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
