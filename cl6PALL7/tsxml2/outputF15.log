scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_poqt5617/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4673: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4749: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4782: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8731 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            8424 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         307 (4%)
  Times precision was empty:       6021 (69%)
  Times precision was {false}:     198 (2%)
  Times result was cached:         1896 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      616 (7%)
  Times result was 'false':        385 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         369597
  BDD entailment checks:           1845
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       917
Number of predicates discovered:          6
Number of abstraction locations:          17
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         10191
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 12.52
Number of irrelevant predicates:          1958 (19%)
Number of preds handled by boolean abs:   2115 (21%)
  Total number of models for allsat:      607
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                150.473s
  Time for path formula creation:      148.555s
Time for strengthen operator:            2.922s
Time for prec operator:                353.428s
  Time for abstraction:                351.003s (Max:    11.122s, Count: 8731)
    Boolean abstraction:               280.205s
    Solving time:                      327.220s (Max:    10.834s)
    Model enumeration time:              4.756s
    Time for BDD construction:           0.060s (Max:     0.007s)
Time for merge operator:                42.754s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):   331.976s

Number of path formula cache hits:   2558605 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   130.063s

Total number of created targets for pointer analysis: 3140263
   Number of created targets for uf: *enum_ldv_24926 is 649
   Number of created targets for uf: *(struct_aic7xxx_host)* is 251
   Number of created targets for uf: *(struct_hw_scatterlist)* is 2
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 2
   Number of created targets for uf: *enum_ldv_24924 is 647
   Number of created targets for uf: *(struct_scsi_device)* is 12
   Number of created targets for uf: *enum_ldv_24922 is 7
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 22
   Number of created targets for uf: *(struct_pci_dev)* is 5
   Number of created targets for uf: *(struct_scsi_cmnd)* is 5
   Number of created targets for uf: *(unsigned_char)* is 13
   Number of created targets for uf: *(struct___anonstruct_scb_data_type_192)* is 5
   Number of created targets for uf: *(unsigned_int)* is 166
   Number of created targets for uf: *(struct_Scsi_Host)* is 5
   Number of created targets for uf: *enum_ldv_24928 is 418
   Number of created targets for uf: *unsigned_long_int is 10
   Number of created targets for uf: *unsigned_short_int is 2691
   Number of created targets for uf: *(char)* is 716
   Number of created targets for uf: *signed_int is 1384
   Number of created targets for uf: *unsigned_char is 53379
   Number of created targets for uf: *signed_long_int is 4
   Number of created targets for uf: *(struct_list_head)* is 16
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 20
   Number of created targets for uf: *unsigned_int is 18


Number of BDD nodes:                               250
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1312 (count: 12649, min: 0, max: 78, avg: 0.10)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.260s
  Time for transition matches:                         2.498s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      2957983 (count: 2957983, min: 1, max: 1, avg: 1.00) [1 x 2957983]

CPA algorithm statistics
------------------------
Number of iterations:            1984670
Max size of waitlist:            220
Average size of waitlist:        85
Number of computed successors:   2176379
Max successors for one state:    2
Number of times merged:          183876
Number of times stopped:         185122
Number of times breaked:         55

Total time for CPA algorithm:       711.852s (Max:    44.940s)
  Time for choose from waitlist:      1.126s
  Time for precision adjustment:    371.297s
  Time for transfer relation:       277.959s
  Time for merge operator:           45.968s
  Time for stop operator:             2.617s
  Time for adding to reached set:     6.523s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   55
Avg. length of target path (in blocks):                 465 (count: 55, min: 2, max: 15, avg: 8.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 178.302s
  Counterexample analysis:                           173.961s (Max:     7.624s, Calls: 55)
    Refinement sat check:                            169.164s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.020s
  ARG update:                                          4.260s

Length of refined path (in blocks):                     366 (count: 55, min: 2, max: 10, avg: 6.65)
Number of affected states:                              311 (count: 55, min: 1, max: 9, avg: 5.65)
Length (states) of path with itp 'true':                  0 (count: 55, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       311 (count: 55, min: 1, max: 9, avg: 5.65)
Length (states) of path with itp 'false':                22 (count: 55, min: 0, max: 1, avg: 0.40)
Different non-trivial interpolants along paths:           0 (count: 55, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             256 (count: 55, min: 0, max: 8, avg: 4.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                55
Number of successful refinements:     55
Number of failed refinements:         0
Max. size of reached set before ref.: 74077
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 35742.55
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:     891.187s
Time for refinements:               179.330s
Average time for refinement:          3.260s
Max time for refinement:              7.794s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          3865
  Total lines:            7726
  Line coverage:          0.500
  Visited conditions:     1040
  Total conditions:       2544
  Condition coverage:     0.409

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             25417
  Number of reached locations:   2694 (24%)
    Avg states per location:     9
    Max states per location:     937 (at node N64)
  Number of reached functions:   93 (53%)
  Number of partitions:          25417
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        87

Time for analysis setup:          9.080s
  Time for loading CPAs:          1.181s
  Time for loading parser:        0.688s
  Time for CFA construction:      7.091s
    Time for parsing file(s):     1.384s
    Time for AST to CFA:          2.679s
    Time for CFA sanity check:    0.592s
    Time for post-processing:     2.147s
      Time for var class.:        1.225s
Time for Analysis:              891.187s
CPU time for analysis:          891.180s
Total time for CPAchecker:      900.273s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.550s

Time for Garbage Collector:      24.561s (in 646 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                464MB (   442 MiB) max;    209MB (   200 MiB) avg;    498MB (   475 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           533MB (   508 MiB) max;    312MB (   297 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8468MB (  8076 MiB) max;   8366MB (  7979 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
