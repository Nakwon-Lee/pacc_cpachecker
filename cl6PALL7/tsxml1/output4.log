scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gvqv8g98/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1178 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1046 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (11%)
  Times precision was empty:       983 (83%)
  Times precision was {false}:     93 (8%)
  Times result was cached:         59 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (4%)
  Times result was 'false':        139 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         10240
  BDD entailment checks:           36
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       492
Number of predicates discovered:          16
Number of abstraction locations:          5
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         461
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 3.39
Number of irrelevant predicates:          186 (40%)
Number of preds handled by boolean abs:   176 (38%)
  Total number of models for allsat:      44
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  6.116s
  Time for path formula creation:        5.912s
Time for strengthen operator:            0.247s
Time for prec operator:                  8.200s
  Time for abstraction:                  7.888s (Max:     1.064s, Count: 1178)
    Boolean abstraction:                 4.853s
    Solving time:                        5.578s (Max:     0.795s)
    Model enumeration time:              0.928s
    Time for BDD construction:           0.022s (Max:     0.010s)
Time for merge operator:                 1.365s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     6.506s

Number of path formula cache hits:   93120 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.070s

Total number of created targets for pointer analysis: 8341
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *signed_int is 37
   Number of created targets for uf: *(struct_usb_device)* is 4
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *unsigned_int is 313
   Number of created targets for uf: *char is 47
   Number of created targets for uf: *(struct_dlfb_data)* is 2
   Number of created targets for uf: *(struct_device)* is 4
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               380
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         387 (count: 1962, min: 0, max: 81, avg: 0.20)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.573s
  Time for transition matches:                         0.237s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       105827 (count: 105847, min: 0, max: 1, avg: 1.00) [0 x 20, 1 x 105827]

CPA algorithm statistics
------------------------
Number of iterations:            54816
Max size of waitlist:            151
Average size of waitlist:        67
Number of computed successors:   61106
Max successors for one state:    2
Number of times merged:          5102
Number of times stopped:         5117
Number of times breaked:         13

Total time for CPA algorithm:        21.748s (Max:     5.099s)
  Time for choose from waitlist:      0.121s
  Time for precision adjustment:      9.344s
  Time for transfer relation:         9.235s
  Time for merge operator:            1.596s
  Time for stop operator:             0.209s
  Time for adding to reached set:     0.382s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                  48 (count: 13, min: 2, max: 6, avg: 3.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.807s
  Counterexample analysis:                             1.487s (Max:     0.239s, Calls: 13)
    Refinement sat check:                              1.348s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.016s
  ARG update:                                          0.239s

Length of refined path (in blocks):                      47 (count: 13, min: 2, max: 6, avg: 3.62)
Number of affected states:                               30 (count: 13, min: 1, max: 5, avg: 2.31)
Length (states) of path with itp 'true':                  4 (count: 13, min: 0, max: 2, avg: 0.31)
Length (states) of path with itp non-trivial itp:        30 (count: 13, min: 1, max: 5, avg: 2.31)
Length (states) of path with itp 'false':                 1 (count: 13, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:           2 (count: 13, min: 0, max: 2, avg: 0.15)
Equal non-trivial interpolants along paths:              15 (count: 13, min: 0, max: 4, avg: 1.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 8255
Max. size of reached set after ref.:  5542
Avg. size of reached set before ref.: 4729.31
Avg. size of reached set after ref.:  859.38

Total time for CEGAR algorithm:      23.759s
Time for refinements:                 2.004s
Average time for refinement:          0.154s
Max time for refinement:              0.289s

Code Coverage
-----------------------------
  Function coverage:      0.517
  Visited lines:          1678
  Total lines:            2807
  Line coverage:          0.598
  Visited conditions:     337
  Total conditions:       628
  Condition coverage:     0.537

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             5541
  Number of reached locations:   946 (25%)
    Avg states per location:     5
    Max states per location:     94 (at node N2803)
  Number of reached functions:   76 (52%)
  Number of partitions:          5540
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [3533df16], stack [main]])
  Number of target states:       0
  Size of final wait list        98

Time for analysis setup:          6.509s
  Time for loading CPAs:          1.099s
  Time for loading parser:        0.782s
  Time for CFA construction:      4.465s
    Time for parsing file(s):     1.146s
    Time for AST to CFA:          1.680s
    Time for CFA sanity check:    0.377s
    Time for post-processing:     1.135s
      Time for var class.:        0.507s
Time for Analysis:               23.759s
CPU time for analysis:           23.760s
Total time for CPAchecker:       30.277s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.204s

Time for Garbage Collector:       0.598s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     50MB (    48 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
