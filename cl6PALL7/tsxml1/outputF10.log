scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pc_e1hqq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            118018 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            116169 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1849 (2%)
  Times precision was empty:       64840 (55%)
  Times precision was {false}:     1382 (1%)
  Times result was cached:         46379 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5417 (5%)
  Times result was 'false':        14765 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         427483
  BDD entailment checks:           75565
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       641
Number of predicates discovered:          23
Number of abstraction locations:          17
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         259850
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 38.22
Number of irrelevant predicates:          103518 (40%)
Number of preds handled by boolean abs:   20122 (8%)
  Total number of models for allsat:      5372
  Max number of models for allsat:        48
  Avg number of models for allsat:        0.99

Time for post operator:                 78.729s
  Time for path formula creation:       75.156s
Time for strengthen operator:            4.741s
Time for prec operator:                286.000s
  Time for abstraction:                281.192s (Max:     6.198s, Count: 118018)
    Boolean abstraction:               168.073s
    Solving time:                      163.240s (Max:     1.933s)
    Model enumeration time:             30.827s
    Time for BDD construction:           0.337s (Max:     0.007s)
Time for merge operator:                10.824s
Time for coverage check:                 0.166s
  Time for BDD entailment checks:        0.124s
Total time for SMT solver (w/o itp):   194.067s

Number of path formula cache hits:   4481058 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    44.112s

Total number of created targets for pointer analysis: 268325
   Number of created targets for uf: *signed_int is 503
   Number of created targets for uf: *(char)* is 27
   Number of created targets for uf: *(struct_usb_device)* is 15
   Number of created targets for uf: *(struct_urb)* is 302
   Number of created targets for uf: *(struct_list_head)* is 2783
   Number of created targets for uf: *(unsigned_char)* is 44
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *(struct_device)* is 15
   Number of created targets for uf: *unsigned_int is 2247
   Number of created targets for uf: *char is 853
   Number of created targets for uf: *(struct_dlfb_data)* is 18
   Number of created targets for uf: *unsigned_long_int is 41


Number of BDD nodes:                               3568
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11752 (count: 188465, min: 0, max: 211, avg: 0.06)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.319s
  Time for transition matches:                         3.843s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      4657185 (count: 4657463, min: 0, max: 1, avg: 1.00) [0 x 278, 1 x 4657185]

CPA algorithm statistics
------------------------
Number of iterations:            2549711
Max size of waitlist:            60
Average size of waitlist:        22
Number of computed successors:   2797513
Max successors for one state:    2
Number of times merged:          175959
Number of times stopped:         229977
Number of times breaked:         99

Total time for CPA algorithm:       469.299s (Max:    25.893s)
  Time for choose from waitlist:      1.220s
  Time for precision adjustment:    306.881s
  Time for transfer relation:       130.349s
  Time for merge operator:           13.703s
  Time for stop operator:             3.708s
  Time for adding to reached set:     6.070s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):                1144 (count: 99, min: 2, max: 25, avg: 11.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  32.185s
  Counterexample analysis:                            26.566s (Max:     0.564s, Calls: 99)
    Refinement sat check:                             24.316s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.045s
  ARG update:                                          5.358s

Length of refined path (in blocks):                    1082 (count: 99, min: 2, max: 25, avg: 10.93)
Number of affected states:                              905 (count: 99, min: 1, max: 24, avg: 9.14)
Length (states) of path with itp 'true':                 78 (count: 99, min: 0, max: 18, avg: 0.79)
Length (states) of path with itp non-trivial itp:       905 (count: 99, min: 1, max: 24, avg: 9.14)
Length (states) of path with itp 'false':                18 (count: 99, min: 0, max: 1, avg: 0.18)
Different non-trivial interpolants along paths:          25 (count: 99, min: 0, max: 2, avg: 0.25)
Equal non-trivial interpolants along paths:             781 (count: 99, min: 0, max: 23, avg: 7.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 56052
Max. size of reached set after ref.:  29323
Avg. size of reached set before ref.: 28000.42
Avg. size of reached set after ref.:  2788.59

Total time for CEGAR algorithm:     503.399s
Time for refinements:                33.888s
Average time for refinement:          0.342s
Max time for refinement:              0.717s

Code Coverage
-----------------------------
  Function coverage:      0.612
  Visited lines:          2153
  Total lines:            2807
  Line coverage:          0.767
  Visited conditions:     419
  Total conditions:       628
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             56800
  Number of reached locations:   1281 (33%)
    Avg states per location:     44
    Max states per location:     921 (at node N267)
  Number of reached functions:   90 (61%)
  Number of partitions:          56738
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.145s
  Time for loading CPAs:          1.000s
  Time for loading parser:        0.747s
  Time for CFA construction:      4.261s
    Time for parsing file(s):     1.074s
    Time for AST to CFA:          1.510s
    Time for CFA sanity check:    0.336s
    Time for post-processing:     1.137s
      Time for var class.:        0.513s
Time for Analysis:              503.399s
CPU time for analysis:          503.370s
Time for analyzing result:        0.050s
Total time for CPAchecker:      509.560s
Total CPU time for CPAchecker:  509.520s
Time for statistics:              0.757s

Time for Garbage Collector:      25.146s (in 656 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                431MB (   411 MiB) max;    224MB (   213 MiB) avg;    455MB (   434 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           484MB (   461 MiB) max;    328MB (   313 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8623MB (  8224 MiB) max;   8294MB (  7910 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
