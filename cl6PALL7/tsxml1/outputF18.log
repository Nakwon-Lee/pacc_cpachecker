scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0fqv2li0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            40945 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            38788 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2157 (5%)
  Times precision was empty:       20315 (50%)
  Times precision was {false}:     280 (1%)
  Times result was cached:         17552 (43%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2798 (7%)
  Times result was 'false':        5398 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         236912
  BDD entailment checks:           17910
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       641
Number of predicates discovered:          20
Number of abstraction locations:          18
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         133069
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 43.23
Number of irrelevant predicates:          21834 (16%)
Number of preds handled by boolean abs:   13809 (10%)
  Total number of models for allsat:      2680
  Max number of models for allsat:        12
  Avg number of models for allsat:        0.96

Time for post operator:                 46.776s
  Time for path formula creation:       45.048s
Time for strengthen operator:            2.353s
Time for prec operator:                122.336s
  Time for abstraction:                120.108s (Max:     2.190s, Count: 40945)
    Boolean abstraction:                80.336s
    Solving time:                       67.895s (Max:     0.951s)
    Model enumeration time:             14.818s
    Time for BDD construction:           0.210s (Max:     0.008s)
Time for merge operator:                 8.436s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):    82.713s

Number of path formula cache hits:   2243289 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.508s

Total number of created targets for pointer analysis: 176300
   Number of created targets for uf: *signed_int is 489
   Number of created targets for uf: *(char)* is 33
   Number of created targets for uf: *(struct_usb_device)* is 16
   Number of created targets for uf: *(struct_urb)* is 273
   Number of created targets for uf: *(struct_list_head)* is 3594
   Number of created targets for uf: *(unsigned_char)* is 21
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *(struct_device)* is 16
   Number of created targets for uf: *unsigned_int is 1425
   Number of created targets for uf: *char is 530
   Number of created targets for uf: *(struct_dlfb_data)* is 21
   Number of created targets for uf: *unsigned_long_int is 45


Number of BDD nodes:                               1489
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5775 (count: 57409, min: 0, max: 106, avg: 0.10)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.844s
  Time for transition matches:                         2.236s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                      2391700 (count: 2392024, min: 0, max: 1, avg: 1.00) [0 x 324, 1 x 2391700]

CPA algorithm statistics
------------------------
Number of iterations:            1305248
Max size of waitlist:            278
Average size of waitlist:        140
Number of computed successors:   1446953
Max successors for one state:    2
Number of times merged:          109501
Number of times stopped:         119936
Number of times breaked:         84

Total time for CPA algorithm:       228.938s (Max:    50.873s)
  Time for choose from waitlist:      0.738s
  Time for precision adjustment:    132.490s
  Time for transfer relation:        75.241s
  Time for merge operator:           10.399s
  Time for stop operator:             1.945s
  Time for adding to reached set:     3.563s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                 996 (count: 84, min: 2, max: 24, avg: 11.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  28.155s
  Counterexample analysis:                            25.516s (Max:     0.603s, Calls: 84)
    Refinement sat check:                             23.553s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.045s
  ARG update:                                          2.367s

Length of refined path (in blocks):                     985 (count: 84, min: 2, max: 24, avg: 11.73)
Number of affected states:                              874 (count: 84, min: 1, max: 23, avg: 10.40)
Length (states) of path with itp 'true':                 27 (count: 84, min: 0, max: 15, avg: 0.32)
Length (states) of path with itp non-trivial itp:       874 (count: 84, min: 1, max: 23, avg: 10.40)
Length (states) of path with itp 'false':                 4 (count: 84, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:          26 (count: 84, min: 0, max: 3, avg: 0.31)
Equal non-trivial interpolants along paths:             764 (count: 84, min: 0, max: 22, avg: 9.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 26301
Max. size of reached set after ref.:  18830
Avg. size of reached set before ref.: 14826.93
Avg. size of reached set after ref.:  472.79

Total time for CEGAR algorithm:     258.082s
Time for refinements:                29.107s
Average time for refinement:          0.346s
Max time for refinement:              0.672s

Code Coverage
-----------------------------
  Function coverage:      0.612
  Visited lines:          2153
  Total lines:            2807
  Line coverage:          0.767
  Visited conditions:     419
  Total conditions:       628
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             115872
  Number of reached locations:   1281 (33%)
    Avg states per location:     90
    Max states per location:     1947 (at node N2803)
  Number of reached functions:   90 (61%)
  Number of partitions:          115609
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.251s
  Time for loading CPAs:          1.005s
  Time for loading parser:        0.730s
  Time for CFA construction:      4.318s
    Time for parsing file(s):     1.121s
    Time for AST to CFA:          1.523s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     1.142s
      Time for var class.:        0.579s
Time for Analysis:              258.082s
CPU time for analysis:          258.060s
Time for analyzing result:        0.099s
Total time for CPAchecker:      264.339s
Total CPU time for CPAchecker:  264.300s
Time for statistics:              1.362s

Time for Garbage Collector:      12.586s (in 539 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                274MB (   262 MiB) max;    122MB (   116 MiB) avg;    294MB (   281 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           309MB (   295 MiB) max;    184MB (   175 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8279MB (  7896 MiB) max;   8191MB (  7811 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
