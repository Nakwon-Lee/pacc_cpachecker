scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f9jhwpgd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            72848 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            70860 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1988 (3%)
  Times precision was empty:       41540 (57%)
  Times precision was {false}:     1135 (2%)
  Times result was cached:         26368 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3805 (5%)
  Times result was 'false':        10181 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         307503
  BDD entailment checks:           40049
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       640
Number of predicates discovered:          23
Number of abstraction locations:          17
Max number of predicates per location:    15
Avg number of predicates per location:    6
Total predicates per abstraction:         167298
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 33.87
Number of irrelevant predicates:          62076 (37%)
Number of preds handled by boolean abs:   15802 (9%)
  Total number of models for allsat:      4381
  Max number of models for allsat:        96
  Avg number of models for allsat:        1.15

Time for post operator:                 49.052s
  Time for path formula creation:       47.629s
Time for strengthen operator:            2.983s
Time for prec operator:                249.733s
  Time for abstraction:                246.605s (Max:    12.889s, Count: 72848)
    Boolean abstraction:               181.733s
    Solving time:                      114.358s (Max:     0.794s)
    Model enumeration time:             77.212s
    Time for BDD construction:           0.330s (Max:     0.017s)
Time for merge operator:                 8.370s
Time for coverage check:                 0.124s
  Time for BDD entailment checks:        0.093s
Total time for SMT solver (w/o itp):   191.570s

Number of path formula cache hits:   3087319 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.148s

Total number of created targets for pointer analysis: 190981
   Number of created targets for uf: *signed_int is 445
   Number of created targets for uf: *(char)* is 44
   Number of created targets for uf: *(struct_usb_device)* is 25
   Number of created targets for uf: *(struct_urb)* is 160
   Number of created targets for uf: *(struct_list_head)* is 3221
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(struct_device)* is 25
   Number of created targets for uf: *unsigned_int is 1735
   Number of created targets for uf: *char is 763
   Number of created targets for uf: *(struct_dlfb_data)* is 31
   Number of created targets for uf: *unsigned_long_int is 68


Number of BDD nodes:                               8427
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8727 (count: 115391, min: 0, max: 198, avg: 0.08)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.576s
  Time for transition matches:                         2.650s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      3174123 (count: 3174423, min: 0, max: 1, avg: 1.00) [0 x 300, 1 x 3174123]

CPA algorithm statistics
------------------------
Number of iterations:            1752635
Max size of waitlist:            163
Average size of waitlist:        67
Number of computed successors:   1933875
Max successors for one state:    2
Number of times merged:          133727
Number of times stopped:         163660
Number of times breaked:         89

Total time for CPA algorithm:       373.446s (Max:    43.414s)
  Time for choose from waitlist:      0.815s
  Time for precision adjustment:    265.234s
  Time for transfer relation:        83.910s
  Time for merge operator:           10.742s
  Time for stop operator:             2.709s
  Time for adding to reached set:     4.394s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                 842 (count: 89, min: 2, max: 26, avg: 9.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.609s
  Counterexample analysis:                            22.800s (Max:     0.919s, Calls: 89)
    Refinement sat check:                             20.886s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.035s
  ARG update:                                          3.584s

Length of refined path (in blocks):                     816 (count: 89, min: 2, max: 26, avg: 9.17)
Number of affected states:                              702 (count: 89, min: 1, max: 25, avg: 7.89)
Length (states) of path with itp 'true':                 25 (count: 89, min: 0, max: 17, avg: 0.28)
Length (states) of path with itp non-trivial itp:       702 (count: 89, min: 1, max: 25, avg: 7.89)
Length (states) of path with itp 'false':                11 (count: 89, min: 0, max: 1, avg: 0.12)
Different non-trivial interpolants along paths:          25 (count: 89, min: 0, max: 2, avg: 0.28)
Equal non-trivial interpolants along paths:             588 (count: 89, min: 0, max: 24, avg: 6.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 55512
Max. size of reached set after ref.:  42461
Avg. size of reached set before ref.: 19450.21
Avg. size of reached set after ref.:  620.57

Total time for CEGAR algorithm:     401.143s
Time for refinements:                27.645s
Average time for refinement:          0.310s
Max time for refinement:              1.003s

Code Coverage
-----------------------------
  Function coverage:      0.612
  Visited lines:          2153
  Total lines:            2807
  Line coverage:          0.767
  Visited conditions:     419
  Total conditions:       628
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             84197
  Number of reached locations:   1281 (33%)
    Avg states per location:     65
    Max states per location:     1367 (at node N267)
  Number of reached functions:   90 (61%)
  Number of partitions:          84101
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.236s
  Time for loading CPAs:          1.089s
  Time for loading parser:        0.771s
  Time for CFA construction:      4.203s
    Time for parsing file(s):     1.087s
    Time for AST to CFA:          1.565s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     1.022s
      Time for var class.:        0.505s
Time for Analysis:              401.143s
CPU time for analysis:          401.120s
Time for analyzing result:        0.071s
Total time for CPAchecker:      407.387s
Total CPU time for CPAchecker:  407.340s
Time for statistics:              1.049s

Time for Garbage Collector:      16.554s (in 562 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                322MB (   307 MiB) max;    168MB (   160 MiB) avg;    342MB (   326 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           372MB (   355 MiB) max;    253MB (   241 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8427MB (  8036 MiB) max;   8239MB (  7857 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
