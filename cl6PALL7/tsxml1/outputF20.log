scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rbtaj836/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            73896 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            71469 (97%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2427 (3%)
  Times precision was empty:       34294 (46%)
  Times precision was {false}:     300 (0%)
  Times result was cached:         36830 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2472 (3%)
  Times result was 'false':        10217 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         393839
  BDD entailment checks:           33447
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       641
Number of predicates discovered:          20
Number of abstraction locations:          18
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         267178
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 96.38
Number of irrelevant predicates:          43138 (16%)
Number of preds handled by boolean abs:   10222 (4%)
  Total number of models for allsat:      2628
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.06

Time for post operator:                 56.689s
  Time for path formula creation:       54.545s
Time for strengthen operator:            4.006s
Time for prec operator:                131.213s
  Time for abstraction:                127.748s (Max:     2.218s, Count: 73896)
    Boolean abstraction:                61.852s
    Solving time:                       55.330s (Max:     1.088s)
    Model enumeration time:             10.312s
    Time for BDD construction:           0.236s (Max:     0.016s)
Time for merge operator:                 9.609s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):    65.642s

Number of path formula cache hits:   4028353 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.622s

Total number of created targets for pointer analysis: 200444
   Number of created targets for uf: *signed_int is 129
   Number of created targets for uf: *(char)* is 2387
   Number of created targets for uf: *(struct_usb_device)* is 10
   Number of created targets for uf: *(struct_urb)* is 227
   Number of created targets for uf: *(struct_list_head)* is 71
   Number of created targets for uf: *(unsigned_char)* is 131
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *char is 27492
   Number of created targets for uf: *unsigned_int is 9965
   Number of created targets for uf: *(struct_device)* is 9
   Number of created targets for uf: *(struct_dlfb_data)* is 14
   Number of created targets for uf: *unsigned_long_int is 4


Number of BDD nodes:                               1530
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5526 (count: 85457, min: 0, max: 119, avg: 0.06)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.894s
  Time for transition matches:                         3.339s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      4062606 (count: 4062972, min: 0, max: 1, avg: 1.00) [0 x 366, 1 x 4062606]

CPA algorithm statistics
------------------------
Number of iterations:            2291214
Max size of waitlist:            588
Average size of waitlist:        279
Number of computed successors:   2532360
Max successors for one state:    2
Number of times merged:          180196
Number of times stopped:         197349
Number of times breaked:         111

Total time for CPA algorithm:       280.811s (Max:    11.040s)
  Time for choose from waitlist:      0.909s
  Time for precision adjustment:    152.055s
  Time for transfer relation:        99.115s
  Time for merge operator:           12.372s
  Time for stop operator:             3.690s
  Time for adding to reached set:     5.968s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   111
Avg. length of target path (in blocks):                1183 (count: 111, min: 2, max: 18, avg: 10.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.449s
  Counterexample analysis:                            32.618s (Max:     0.636s, Calls: 111)
    Refinement sat check:                             30.146s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.032s
  ARG update:                                          5.518s

Length of refined path (in blocks):                    1074 (count: 111, min: 2, max: 18, avg: 9.68)
Number of affected states:                              697 (count: 111, min: 1, max: 17, avg: 6.28)
Length (states) of path with itp 'true':                266 (count: 111, min: 0, max: 11, avg: 2.40)
Length (states) of path with itp non-trivial itp:       697 (count: 111, min: 1, max: 17, avg: 6.28)
Length (states) of path with itp 'false':                31 (count: 111, min: 0, max: 1, avg: 0.28)
Different non-trivial interpolants along paths:          25 (count: 111, min: 0, max: 3, avg: 0.23)
Equal non-trivial interpolants along paths:             561 (count: 111, min: 0, max: 16, avg: 5.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                111
Number of successful refinements:     111
Number of failed refinements:         0
Max. size of reached set before ref.: 42697
Max. size of reached set after ref.:  39735
Avg. size of reached set before ref.: 29916.17
Avg. size of reached set after ref.:  9460.18

Total time for CEGAR algorithm:     322.504s
Time for refinements:                40.870s
Average time for refinement:          0.368s
Max time for refinement:              0.786s

Code Coverage
-----------------------------
  Function coverage:      0.612
  Visited lines:          2153
  Total lines:            2807
  Line coverage:          0.767
  Visited conditions:     419
  Total conditions:       628
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             54180
  Number of reached locations:   1281 (33%)
    Avg states per location:     42
    Max states per location:     892 (at node N267)
  Number of reached functions:   90 (61%)
  Number of partitions:          54114
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [ce9b9a9], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.244s
  Time for loading CPAs:          1.010s
  Time for loading parser:        0.743s
  Time for CFA construction:      4.314s
    Time for parsing file(s):     1.109s
    Time for AST to CFA:          1.544s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     1.151s
      Time for var class.:        0.559s
Time for Analysis:              322.505s
CPU time for analysis:          322.500s
Time for analyzing result:        0.047s
Total time for CPAchecker:      328.753s
Total CPU time for CPAchecker:  328.730s
Time for statistics:              0.761s

Time for Garbage Collector:      21.819s (in 744 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                337MB (   322 MiB) max;    151MB (   144 MiB) avg;    348MB (   332 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           378MB (   360 MiB) max;    225MB (   214 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8219MB (  7838 MiB) max;   8128MB (  7751 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
