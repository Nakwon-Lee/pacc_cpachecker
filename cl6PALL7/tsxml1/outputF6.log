scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zm2c_47n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            115581 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            113115 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2466 (2%)
  Times precision was empty:       80709 (70%)
  Times precision was {false}:     1450 (1%)
  Times result was cached:         28269 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5153 (4%)
  Times result was 'false':        11057 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         443576
  BDD entailment checks:           82168
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       641
Number of predicates discovered:          24
Number of abstraction locations:          17
Max number of predicates per location:    15
Avg number of predicates per location:    7
Total predicates per abstraction:         253429
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 38.38
Number of irrelevant predicates:          131667 (52%)
Number of preds handled by boolean abs:   28161 (11%)
  Total number of models for allsat:      7577
  Max number of models for allsat:        96
  Avg number of models for allsat:        1.47

Time for post operator:                117.866s
  Time for path formula creation:      114.973s
Time for strengthen operator:            4.288s
Time for prec operator:                577.507s
  Time for abstraction:                572.882s (Max:    23.987s, Count: 115581)
    Boolean abstraction:               480.244s
    Solving time:                      160.247s (Max:     1.673s)
    Model enumeration time:            345.841s
    Time for BDD construction:           0.497s (Max:     0.014s)
Time for merge operator:                17.984s
Time for coverage check:                 0.162s
  Time for BDD entailment checks:        0.115s
Total time for SMT solver (w/o itp):   506.089s

Number of path formula cache hits:   4186114 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    86.615s

Total number of created targets for pointer analysis: 661219
   Number of created targets for uf: *signed_int is 1213
   Number of created targets for uf: *(char)* is 142
   Number of created targets for uf: *(struct_usb_device)* is 110
   Number of created targets for uf: *(struct_urb)* is 509
   Number of created targets for uf: *(struct_list_head)* is 8582
   Number of created targets for uf: *(unsigned_char)* is 79
   Number of created targets for uf: *_Bool is 25
   Number of created targets for uf: *(struct_device)* is 110
   Number of created targets for uf: *unsigned_int is 4715
   Number of created targets for uf: *char is 2410
   Number of created targets for uf: *(struct_dlfb_data)* is 71
   Number of created targets for uf: *unsigned_long_int is 238


Number of BDD nodes:                               9984
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11230 (count: 206691, min: 0, max: 295, avg: 0.05)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.471s
  Time for transition matches:                         4.492s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      4784128 (count: 4784490, min: 0, max: 1, avg: 1.00) [0 x 362, 1 x 4784128]

CPA algorithm statistics
------------------------
Number of iterations:            2587327
Max size of waitlist:            188
Average size of waitlist:        51
Number of computed successors:   2839735
Max successors for one state:    2
Number of times merged:          180704
Number of times stopped:         234731
Number of times breaked:         121

Total time for CPA algorithm:       816.365s (Max:    77.612s)
  Time for choose from waitlist:      1.638s
  Time for precision adjustment:    602.123s
  Time for transfer relation:       170.980s
  Time for merge operator:           21.550s
  Time for stop operator:             4.892s
  Time for adding to reached set:     6.858s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   121
Avg. length of target path (in blocks):                2406 (count: 121, min: 2, max: 65, avg: 19.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  72.906s
  Counterexample analysis:                            66.212s (Max:     2.323s, Calls: 121)
    Refinement sat check:                             61.591s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.041s
  ARG update:                                          6.274s

Length of refined path (in blocks):                    2113 (count: 121, min: 2, max: 51, avg: 17.46)
Number of affected states:                             1723 (count: 121, min: 1, max: 50, avg: 14.24)
Length (states) of path with itp 'true':                269 (count: 121, min: 0, max: 30, avg: 2.22)
Length (states) of path with itp non-trivial itp:      1723 (count: 121, min: 1, max: 50, avg: 14.24)
Length (states) of path with itp 'false':                36 (count: 121, min: 0, max: 1, avg: 0.30)
Different non-trivial interpolants along paths:          33 (count: 121, min: 0, max: 2, avg: 0.27)
Equal non-trivial interpolants along paths:            1569 (count: 121, min: 0, max: 47, avg: 12.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                121
Number of successful refinements:     121
Number of failed refinements:         0
Max. size of reached set before ref.: 112176
Max. size of reached set after ref.:  56239
Avg. size of reached set before ref.: 32190.86
Avg. size of reached set after ref.:  11073.16

Total time for CEGAR algorithm:     894.089s
Time for refinements:                76.510s
Average time for refinement:          0.632s
Max time for refinement:              2.446s

Code Coverage
-----------------------------
  Function coverage:      0.612
  Visited lines:          2136
  Total lines:            2807
  Line coverage:          0.761
  Visited conditions:     413
  Total conditions:       628
  Condition coverage:     0.658

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             38705
  Number of reached locations:   1267 (33%)
    Avg states per location:     30
    Max states per location:     1055 (at node N267)
  Number of reached functions:   90 (61%)
  Number of partitions:          38673
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        179

Time for analysis setup:          6.108s
  Time for loading CPAs:          1.003s
  Time for loading parser:        0.789s
  Time for CFA construction:      4.195s
    Time for parsing file(s):     1.052s
    Time for AST to CFA:          1.494s
    Time for CFA sanity check:    0.352s
    Time for post-processing:     1.104s
      Time for var class.:        0.499s
Time for Analysis:              894.089s
CPU time for analysis:          894.050s
Total time for CPAchecker:      900.203s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.651s

Time for Garbage Collector:      29.522s (in 556 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                658MB (   627 MiB) max;    345MB (   329 MiB) avg;    741MB (   707 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           922MB (   879 MiB) max;    492MB (   469 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    41 MiB) avg
Total process virtual memory:   8868MB (  8457 MiB) max;   8455MB (  8064 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
