scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_owlbuj0f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12882 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11463 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1419 (11%)
  Times precision was empty:       9093 (71%)
  Times precision was {false}:     463 (4%)
  Times result was cached:         2563 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      763 (6%)
  Times result was 'false':        2209 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         111466
  BDD entailment checks:           2988
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       492
Number of predicates discovered:          34
Number of abstraction locations:          8
Max number of predicates per location:    32
Avg number of predicates per location:    10
Total predicates per abstraction:         23301
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 19.01
Number of irrelevant predicates:          5088 (22%)
Number of preds handled by boolean abs:   4718 (20%)
  Total number of models for allsat:      4794
  Max number of models for allsat:        800
  Avg number of models for allsat:        6.28

Time for post operator:                 26.674s
  Time for path formula creation:       25.971s
Time for strengthen operator:            1.492s
Time for prec operator:                779.519s
  Time for abstraction:                778.439s (Max:   152.485s, Count: 12882)
    Boolean abstraction:               764.072s
    Solving time:                       29.062s (Max:     1.555s)
    Model enumeration time:            734.711s
    Time for BDD construction:           0.791s (Max:     0.105s)
Time for merge operator:                 6.230s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):   763.774s

Number of path formula cache hits:   1059772 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.603s

Total number of created targets for pointer analysis: 193297
   Number of created targets for uf: *(char)* is 65
   Number of created targets for uf: *(struct_usb_device)* is 66
   Number of created targets for uf: *signed_int is 805
   Number of created targets for uf: *(struct_urb)* is 19
   Number of created targets for uf: *(struct_list_head)* is 113
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_int is 1807
   Number of created targets for uf: *char is 1589
   Number of created targets for uf: *(struct_device)* is 66
   Number of created targets for uf: *(struct_dlfb_data)* is 19
   Number of created targets for uf: *unsigned_long_int is 51


Number of BDD nodes:                               226409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5885 (count: 21288, min: 0, max: 528, avg: 0.28)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.057s
  Time for transition matches:                         1.082s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      1114595 (count: 1114805, min: 0, max: 1, avg: 1.00) [0 x 210, 1 x 1114595]

CPA algorithm statistics
------------------------
Number of iterations:            587105
Max size of waitlist:            454
Average size of waitlist:        191
Number of computed successors:   653801
Max successors for one state:    2
Number of times merged:          54239
Number of times stopped:         54864
Number of times breaked:         36

Total time for CPA algorithm:       840.525s (Max:   361.569s)
  Time for choose from waitlist:      0.471s
  Time for precision adjustment:    785.276s
  Time for transfer relation:        41.852s
  Time for merge operator:            7.328s
  Time for stop operator:             0.972s
  Time for adding to reached set:     2.110s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 331 (count: 36, min: 2, max: 17, avg: 9.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  53.262s
  Counterexample analysis:                            51.696s (Max:     3.611s, Calls: 36)
    Refinement sat check:                             49.395s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.017s
  ARG update:                                          1.352s

Length of refined path (in blocks):                     327 (count: 36, min: 2, max: 17, avg: 9.08)
Number of affected states:                              291 (count: 36, min: 1, max: 16, avg: 8.08)
Length (states) of path with itp 'true':                  0 (count: 36, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       291 (count: 36, min: 1, max: 16, avg: 8.08)
Length (states) of path with itp 'false':                 2 (count: 36, min: 0, max: 1, avg: 0.06)
Different non-trivial interpolants along paths:          23 (count: 36, min: 0, max: 8, avg: 0.64)
Equal non-trivial interpolants along paths:             232 (count: 36, min: 0, max: 15, avg: 6.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 28773
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 16122.19
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     894.257s
Time for refinements:                53.728s
Average time for refinement:          1.492s
Max time for refinement:              3.683s

Code Coverage
-----------------------------
  Function coverage:      0.517
  Visited lines:          1695
  Total lines:            2807
  Line coverage:          0.604
  Visited conditions:     343
  Total conditions:       628
  Condition coverage:     0.546

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             16617
  Number of reached locations:   960 (25%)
    Avg states per location:     17
    Max states per location:     282 (at node N2803)
  Number of reached functions:   76 (52%)
  Number of partitions:          16612
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [3533df16], stack [main]])
  Number of target states:       0
  Size of final wait list        278

Time for analysis setup:          6.051s
  Time for loading CPAs:          0.974s
  Time for loading parser:        0.686s
  Time for CFA construction:      4.274s
    Time for parsing file(s):     1.077s
    Time for AST to CFA:          1.527s
    Time for CFA sanity check:    0.344s
    Time for post-processing:     1.107s
      Time for var class.:        0.547s
Time for Analysis:              894.257s
CPU time for analysis:          894.220s
Total time for CPAchecker:      900.313s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.422s

Time for Garbage Collector:       6.193s (in 260 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                181MB (   173 MiB) max;    126MB (   120 MiB) avg;    193MB (   184 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           203MB (   193 MiB) max;    184MB (   175 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8442MB (  8051 MiB) max;   8286MB (  7902 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
