scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__i25kh9c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            199226 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            196562 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2664 (1%)
  Times precision was empty:       115078 (58%)
  Times precision was {false}:     1922 (1%)
  Times result was cached:         77182 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5044 (3%)
  Times result was 'false':        24511 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         727482
  BDD entailment checks:           151314
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       641
Number of predicates discovered:          24
Number of abstraction locations:          17
Max number of predicates per location:    15
Avg number of predicates per location:    6
Total predicates per abstraction:         556477
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 79.88
Number of irrelevant predicates:          282274 (51%)
Number of preds handled by boolean abs:   19654 (4%)
  Total number of models for allsat:      4997
  Max number of models for allsat:        96
  Avg number of models for allsat:        0.99

Time for post operator:                 91.796s
  Time for path formula creation:       88.425s
Time for strengthen operator:            6.187s
Time for prec operator:                357.053s
  Time for abstraction:                350.369s (Max:    12.712s, Count: 199226)
    Boolean abstraction:               183.876s
    Solving time:                      170.272s (Max:     1.639s)
    Model enumeration time:             46.718s
    Time for BDD construction:           0.296s (Max:     0.014s)
Time for merge operator:                11.381s
Time for coverage check:                 0.288s
  Time for BDD entailment checks:        0.219s
Total time for SMT solver (w/o itp):   216.990s

Number of path formula cache hits:   7490392 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    45.729s

Total number of created targets for pointer analysis: 284370
   Number of created targets for uf: *signed_int is 197
   Number of created targets for uf: *(char)* is 3634
   Number of created targets for uf: *(struct_usb_device)* is 15
   Number of created targets for uf: *(struct_urb)* is 33
   Number of created targets for uf: *(struct_list_head)* is 93
   Number of created targets for uf: *(unsigned_char)* is 741
   Number of created targets for uf: *_Bool is 2
   Number of created targets for uf: *unsigned_int is 32579
   Number of created targets for uf: *char is 30532
   Number of created targets for uf: *(struct_device)* is 13
   Number of created targets for uf: *(struct_dlfb_data)* is 18
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               5526
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10834 (count: 316576, min: 0, max: 152, avg: 0.03)
Time for BDD node cleanup:                             0.063s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.850s
  Time for transition matches:                         6.401s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      7532333 (count: 7532696, min: 0, max: 1, avg: 1.00) [0 x 363, 1 x 7532333]

CPA algorithm statistics
------------------------
Number of iterations:            4175243
Max size of waitlist:            73
Average size of waitlist:        29
Number of computed successors:   4583124
Max successors for one state:    2
Number of times merged:          288084
Number of times stopped:         381071
Number of times breaked:         183

Total time for CPA algorithm:       598.142s (Max:    36.341s)
  Time for choose from waitlist:      1.932s
  Time for precision adjustment:    389.432s
  Time for transfer relation:       165.811s
  Time for merge operator:           15.496s
  Time for stop operator:             6.070s
  Time for adding to reached set:     8.599s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   183
Avg. length of target path (in blocks):                1595 (count: 183, min: 2, max: 16, avg: 8.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  58.438s
  Counterexample analysis:                            48.305s (Max:     0.660s, Calls: 183)
    Refinement sat check:                             44.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.050s
  ARG update:                                          9.564s

Length of refined path (in blocks):                    1327 (count: 183, min: 2, max: 16, avg: 7.25)
Number of affected states:                              714 (count: 183, min: 1, max: 15, avg: 3.90)
Length (states) of path with itp 'true':                430 (count: 183, min: 0, max: 7, avg: 2.35)
Length (states) of path with itp non-trivial itp:       714 (count: 183, min: 1, max: 15, avg: 3.90)
Length (states) of path with itp 'false':                61 (count: 183, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:          25 (count: 183, min: 0, max: 2, avg: 0.14)
Equal non-trivial interpolants along paths:             506 (count: 183, min: 0, max: 14, avg: 2.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                183
Number of successful refinements:     183
Number of failed refinements:         0
Max. size of reached set before ref.: 103765
Max. size of reached set after ref.:  99517
Avg. size of reached set before ref.: 36461.97
Avg. size of reached set after ref.:  13944.25

Total time for CEGAR algorithm:     664.119s
Time for refinements:                63.710s
Average time for refinement:          0.348s
Max time for refinement:              0.973s

Code Coverage
-----------------------------
  Function coverage:      0.612
  Visited lines:          2153
  Total lines:            2807
  Line coverage:          0.767
  Visited conditions:     419
  Total conditions:       628
  Condition coverage:     0.667

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             56800
  Number of reached locations:   1281 (33%)
    Avg states per location:     44
    Max states per location:     921 (at node N267)
  Number of reached functions:   90 (61%)
  Number of partitions:          56738
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [ce9b9a9], stack [main]])
  Number of target states:       0

Time for analysis setup:          6.503s
  Time for loading CPAs:          1.067s
  Time for loading parser:        0.765s
  Time for CFA construction:      4.491s
    Time for parsing file(s):     1.161s
    Time for AST to CFA:          1.631s
    Time for CFA sanity check:    0.360s
    Time for post-processing:     1.177s
      Time for var class.:        0.548s
Time for Analysis:              664.120s
CPU time for analysis:          664.090s
Time for analyzing result:        0.052s
Total time for CPAchecker:      670.633s
Total CPU time for CPAchecker:  670.590s
Time for statistics:              0.816s

Time for Garbage Collector:      43.436s (in 880 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                619MB (   591 MiB) max;    261MB (   249 MiB) avg;    631MB (   601 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           634MB (   604 MiB) max;    387MB (   369 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8627MB (  8227 MiB) max;   8290MB (  7905 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
