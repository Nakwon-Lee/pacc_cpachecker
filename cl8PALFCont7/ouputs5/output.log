scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k3042f3h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            867927 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  765170 (88%)
  Because of loop head:            90761 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11996 (1%)
  Times precision was empty:       121917 (14%)
  Times precision was {false}:     920 (0%)
  Times result was cached:         742555 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2535 (0%)
  Times result was 'false':        30915 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         373656
  BDD entailment checks:           161918
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          171
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         1566227
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 453.32
Number of irrelevant predicates:          855543 (55%)
Number of preds handled by boolean abs:   4613 (0%)
  Total number of models for allsat:      2513
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 31.943s
  Time for path formula creation:       29.319s
Time for strengthen operator:            3.729s
Time for prec operator:                 93.511s
  Time for abstraction:                 80.589s (Max:     0.321s, Count: 867927)
    Boolean abstraction:                 2.847s
    Solving time:                        3.386s (Max:     0.022s)
    Model enumeration time:              0.211s
    Time for BDD construction:           0.106s (Max:     0.009s)
Time for merge operator:                 1.771s
Time for coverage check:                 0.323s
  Time for BDD entailment checks:        0.278s
Total time for SMT solver (w/o itp):     3.597s

Number of path formula cache hits:   4933889 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.245s

Total number of created targets for pointer analysis: 18523
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *signed_int is 602
   Number of created targets for uf: *(struct_sm501_platdata)* is 21
   Number of created targets for uf: *(struct_list_head)* is 46
   Number of created targets for uf: *signed_long_int is 208
   Number of created targets for uf: *(struct_resource)* is 14
   Number of created targets for uf: *unsigned_char_:_1 is 66
   Number of created targets for uf: *unsigned_long_long_int is 340
   Number of created targets for uf: *unsigned_int is 990
   Number of created targets for uf: *(struct_device)* is 21
   Number of created targets for uf: *unsigned_long_int is 897


Number of BDD nodes:                               344
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5351 (count: 306066, min: 0, max: 233, avg: 0.02)
Time for BDD node cleanup:                             0.058s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.762s
  Time for transition matches:                         3.632s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.049s
Automaton transfers with branching:                0
Automaton transfer successors:                      4140675 (count: 4140675, min: 1, max: 1, avg: 1.00) [1 x 4140675]

CPA algorithm statistics
------------------------
Number of iterations:            2815175
Max size of waitlist:            59
Average size of waitlist:        33
Number of computed successors:   3086152
Max successors for one state:    2
Number of times merged:          105869
Number of times stopped:         212756
Number of times breaked:         11996

Total time for CPA algorithm:       227.075s (Max:     1.474s)
  Time for choose from waitlist:      1.333s
  Time for precision adjustment:    119.932s
  Time for transfer relation:        81.731s
  Time for merge operator:            4.004s
  Time for stop operator:             4.687s
  Time for adding to reached set:     6.038s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11996
Avg. length of target path (in blocks):             1484382 (count: 11996, min: 10, max: 283, avg: 123.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 449.964s
  Counterexample analysis:                           431.906s (Max:     0.181s, Calls: 11996)
    Refinement sat check:                            230.209s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.693s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.850s
  Precision update:                                    4.594s
  ARG update:                                          5.292s

Length of refined path (in blocks):                 1432952 (count: 11996, min: 4, max: 282, avg: 119.45)
Number of affected states:                           272486 (count: 11996, min: 1, max: 118, avg: 22.71)
Length (states) of path with itp 'true':            1148470 (count: 11996, min: 1, max: 245, avg: 95.74)
Length (states) of path with itp non-trivial itp:    272486 (count: 11996, min: 1, max: 118, avg: 22.71)
Length (states) of path with itp 'false':             11996 (count: 11996, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1092 (count: 11996, min: 0, max: 1, avg: 0.09)
Equal non-trivial interpolants along paths:          259398 (count: 11996, min: 0, max: 117, avg: 21.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11996
Number of successful refinements:     11996
Number of failed refinements:         0
Max. size of reached set before ref.: 40898
Max. size of reached set after ref.:  39903
Avg. size of reached set before ref.: 12641.21
Avg. size of reached set after ref.:  12404.38

Total time for CEGAR algorithm:     894.718s
Time for refinements:               572.677s
Average time for refinement:          0.047s
Max time for refinement:              0.522s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          1203
  Total lines:            2197
  Line coverage:          0.548
  Visited conditions:     188
  Total conditions:       440
  Condition coverage:     0.427

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             1485
  Number of reached locations:   573 (19%)
    Avg states per location:     2
    Max states per location:     26 (at node N26)
  Number of reached functions:   38 (33%)
  Number of partitions:          1484
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [4b2a30d], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          5.531s
  Time for loading CPAs:          0.968s
  Time for loading parser:        0.742s
  Time for CFA construction:      3.656s
    Time for parsing file(s):     1.052s
    Time for AST to CFA:          1.210s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.950s
      Time for var class.:        0.483s
Time for Analysis:              894.718s
CPU time for analysis:          894.650s
Total time for CPAchecker:      900.256s
Total CPU time for CPAchecker:  900.170s
Time for statistics:              0.122s

Time for Garbage Collector:      19.513s (in 2022 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                196MB (   187 MiB) max;    104MB (    99 MiB) avg;    198MB (   189 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           224MB (   214 MiB) max;    155MB (   148 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8268MB (  7885 MiB) max;   8185MB (  7806 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
