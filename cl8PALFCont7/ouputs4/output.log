scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nki9iji5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1096246 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  889616 (81%)
  Because of loop head:            206401 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         229 (0%)
  Times precision was empty:       243324 (22%)
  Times precision was {false}:     1689 (0%)
  Times result was cached:         845491 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5742 (1%)
  Times result was 'false':        29224 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1135008
  BDD entailment checks:           237682
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          20
Number of abstraction locations:          195
Max number of predicates per location:    16
Avg number of predicates per location:    5
Total predicates per abstraction:         4363325
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 587.18
Number of irrelevant predicates:          1453124 (33%)
Number of preds handled by boolean abs:   17579 (0%)
  Total number of models for allsat:      10811
  Max number of models for allsat:        512
  Avg number of models for allsat:        1.88

Time for post operator:                 65.682s
  Time for path formula creation:       60.900s
Time for strengthen operator:            6.980s
Time for prec operator:                246.372s
  Time for abstraction:                227.905s (Max:     0.875s, Count: 1096246)
    Boolean abstraction:                13.109s
    Solving time:                       11.902s (Max:     0.027s)
    Model enumeration time:              2.826s
    Time for BDD construction:           0.386s (Max:     0.058s)
Time for merge operator:                 8.229s
Time for coverage check:                 0.442s
  Time for BDD entailment checks:        0.340s
Total time for SMT solver (w/o itp):    14.728s

Number of path formula cache hits:   8355334 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.547s

Total number of created targets for pointer analysis: 133154
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *signed_int is 659
   Number of created targets for uf: *unsigned_char is 217
   Number of created targets for uf: *unsigned_int is 7085
   Number of created targets for uf: *enum_controller is 1861
   Number of created targets for uf: *unsigned_long_int is 2941


Number of BDD nodes:                               30205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13773 (count: 527796, min: 0, max: 274, avg: 0.03)
Time for BDD node cleanup:                             0.090s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.738s
  Time for transition matches:                         6.226s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      7339037 (count: 7339037, min: 1, max: 1, avg: 1.00) [1 x 7339037]

CPA algorithm statistics
------------------------
Number of iterations:            4358284
Max size of waitlist:            64
Average size of waitlist:        33
Number of computed successors:   5050586
Max successors for one state:    2
Number of times merged:          448663
Number of times stopped:         656537
Number of times breaked:         229

Total time for CPA algorithm:       478.593s (Max:     5.727s)
  Time for choose from waitlist:      1.877s
  Time for precision adjustment:    283.899s
  Time for transfer relation:       147.661s
  Time for merge operator:           14.929s
  Time for stop operator:             6.999s
  Time for adding to reached set:     8.762s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   229
Avg. length of target path (in blocks):               16572 (count: 229, min: 9, max: 232, avg: 72.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.702s
  Counterexample analysis:                            17.966s (Max:     0.225s, Calls: 229)
    Refinement sat check:                             14.090s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.160s
  Precision update:                                    0.184s
  ARG update:                                          8.188s

Length of refined path (in blocks):                   13352 (count: 229, min: 4, max: 179, avg: 58.31)
Number of affected states:                            12944 (count: 229, min: 1, max: 178, avg: 56.52)
Length (states) of path with itp 'true':                179 (count: 229, min: 0, max: 4, avg: 0.78)
Length (states) of path with itp non-trivial itp:     12944 (count: 229, min: 1, max: 178, avg: 56.52)
Length (states) of path with itp 'false':               229 (count: 229, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 229, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           12714 (count: 229, min: 0, max: 177, avg: 55.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                229
Number of successful refinements:     229
Number of failed refinements:         0
Max. size of reached set before ref.: 39236
Max. size of reached set after ref.:  343
Avg. size of reached set before ref.: 18935.00
Avg. size of reached set after ref.:  15.08

Total time for CEGAR algorithm:     507.773s
Time for refinements:                29.157s
Average time for refinement:          0.127s
Max time for refinement:              0.339s

Code Coverage
-----------------------------
  Function coverage:      0.588
  Visited lines:          2072
  Total lines:            2343
  Line coverage:          0.884
  Visited conditions:     436
  Total conditions:       540
  Condition coverage:     0.807

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             32165
  Number of reached locations:   1149 (38%)
    Avg states per location:     27
    Max states per location:     467 (at node N106)
  Number of reached functions:   47 (59%)
  Number of partitions:          32118
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [42f9c19a], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.454s
  Time for loading CPAs:          0.906s
  Time for loading parser:        0.706s
  Time for CFA construction:      3.732s
    Time for parsing file(s):     1.085s
    Time for AST to CFA:          1.251s
    Time for CFA sanity check:    0.245s
    Time for post-processing:     0.974s
      Time for var class.:        0.472s
Time for Analysis:              507.774s
CPU time for analysis:          507.730s
Time for analyzing result:        0.030s
Total time for CPAchecker:      513.233s
Total CPU time for CPAchecker:  513.180s
Time for statistics:              0.614s

Time for Garbage Collector:      42.386s (in 1273 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                406MB (   387 MiB) max;    201MB (   192 MiB) avg;    428MB (   408 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           442MB (   421 MiB) max;    295MB (   281 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8199MB (  7820 MiB) max;   8179MB (  7800 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
