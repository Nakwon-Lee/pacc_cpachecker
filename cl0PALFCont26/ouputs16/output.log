scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--mtd--devices--phram.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nlt_j8pz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1602: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

line 1645: Dead code detected: Goto: while_break___1 (CFACreationUtils.addEdgeToCFA, INFO)

line 1665: Dead code detected: Goto: while_break___2 (CFACreationUtils.addEdgeToCFA, INFO)

line 1706: Dead code detected: Goto: while_break___3 (CFACreationUtils.addEdgeToCFA, INFO)

line 1734: Dead code detected: Goto: while_break___4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strnlen to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_parse_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            321 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  277 (86%)
  Because of loop head:            39 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       137 (43%)
  Times precision was {false}:     9 (3%)
  Times result was cached:         129 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46 (14%)
  Times result was 'false':        6 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         274
  BDD entailment checks:           82
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          2
Number of abstraction locations:          33
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         184
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.35
Number of irrelevant predicates:          26 (14%)
Number of preds handled by boolean abs:   46 (25%)
  Total number of models for allsat:      46
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.405s
  Time for path formula creation:        0.392s
Time for strengthen operator:            0.014s
Time for prec operator:                  0.319s
  Time for abstraction:                  0.280s (Max:     0.019s, Count: 321)
    Boolean abstraction:                 0.083s
    Solving time:                        0.076s (Max:     0.013s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.051s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.079s

Number of path formula cache hits:   3969 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.365s

Total number of created targets for pointer analysis: 105
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *char is 41


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          57 (count: 545, min: 0, max: 57, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.068s
Automaton transfers with branching:                0
Automaton transfer successors:                         4673 (count: 4673, min: 1, max: 1, avg: 1.00) [1 x 4673]

CPA algorithm statistics
------------------------
Number of iterations:            1479
Max size of waitlist:            12
Average size of waitlist:        6
Number of computed successors:   1666
Max successors for one state:    2
Number of times merged:          96
Number of times stopped:         169
Number of times breaked:         5

Total time for CPA algorithm:         1.306s (Max:     0.675s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.408s
  Time for transfer relation:         0.707s
  Time for merge operator:            0.073s
  Time for stop operator:             0.043s
  Time for adding to reached set:     0.011s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                 106 (count: 5, min: 14, max: 32, avg: 21.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.130s
  Counterexample analysis:                             0.099s (Max:     0.030s, Calls: 5)
    Refinement sat check:                              0.058s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.012s
  ARG update:                                          0.007s

Length of refined path (in blocks):                     101 (count: 5, min: 13, max: 31, avg: 20.20)
Number of affected states:                               96 (count: 5, min: 12, max: 30, avg: 19.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        96 (count: 5, min: 12, max: 30, avg: 19.20)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              91 (count: 5, min: 11, max: 29, avg: 18.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 256
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 251.80
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       1.461s
Time for refinements:                 0.152s
Average time for refinement:          0.030s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.484
  Visited lines:          749
  Total lines:            893
  Line coverage:          0.839
  Visited conditions:     50
  Total conditions:       72
  Condition coverage:     0.694

CPAchecker general statistics
-----------------------------
Number of program locations:     1063
Number of CFA edges:             1093
Number of relevant variables:    234
Number of functions:             31
Number of loops:                 3
Size of reached set:             248
  Number of reached locations:   198 (19%)
    Avg states per location:     1
    Max states per location:     6 (at node N527)
  Number of reached functions:   15 (48%)
  Number of partitions:          248
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.743s
  Time for loading CPAs:          0.664s
  Time for loading parser:        0.478s
  Time for CFA construction:      1.518s
    Time for parsing file(s):     0.508s
    Time for AST to CFA:          0.416s
    Time for CFA sanity check:    0.106s
    Time for post-processing:     0.347s
      Time for var class.:        0.183s
Time for Analysis:                1.461s
CPU time for analysis:            1.450s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.207s
Total CPU time for CPAchecker:    4.190s
Time for statistics:              0.121s

Time for Garbage Collector:       0.113s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    55 MiB) max;     31MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     26MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
