scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_true-termination.4-32_1-drivers--mtd--mtdoops.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i470xa4c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2101: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2104: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2107: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2113: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2601: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 2604: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 2607: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 2613: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

line 2674: Dead code detected: Goto: case_1___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2677: Dead code detected: Goto: case_2___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2680: Dead code detected: Goto: case_4___0 (CFACreationUtils.addEdgeToCFA, INFO)

line 2686: Dead code detected: Goto: switch_default___0 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_4___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1___0 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmsg_dump_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_mtd_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            826 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  685 (83%)
  Because of loop head:            133 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (1%)
  Times precision was empty:       428 (52%)
  Times precision was {false}:     48 (6%)
  Times result was cached:         288 (35%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      62 (8%)
  Times result was 'false':        22 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1675
  BDD entailment checks:           265
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       94
Number of predicates discovered:          3
Number of abstraction locations:          37
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         438
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.98
Number of irrelevant predicates:          193 (44%)
Number of preds handled by boolean abs:   67 (15%)
  Total number of models for allsat:      79
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.27

Time for post operator:                  1.253s
  Time for path formula creation:        1.216s
Time for strengthen operator:            0.034s
Time for prec operator:                  0.973s
  Time for abstraction:                  0.879s (Max:     0.049s, Count: 826)
    Boolean abstraction:                 0.449s
    Solving time:                        0.380s (Max:     0.039s)
    Model enumeration time:              0.079s
    Time for BDD construction:           0.012s (Max:     0.005s)
Time for merge operator:                 0.222s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.459s

Number of path formula cache hits:   9956 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.139s

Total number of created targets for pointer analysis: 32
   Number of created targets for uf: *unsigned_int is 16
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         133 (count: 1320, min: 0, max: 44, avg: 0.10)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.126s
Automaton transfers with branching:                0
Automaton transfer successors:                        17477 (count: 17477, min: 1, max: 1, avg: 1.00) [1 x 17477]

CPA algorithm statistics
------------------------
Number of iterations:            5517
Max size of waitlist:            47
Average size of waitlist:        16
Number of computed successors:   6436
Max successors for one state:    2
Number of times merged:          705
Number of times stopped:         884
Number of times breaked:         8

Total time for CPA algorithm:         3.632s (Max:     0.937s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      1.106s
  Time for transfer relation:         1.942s
  Time for merge operator:            0.310s
  Time for stop operator:             0.080s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 181 (count: 8, min: 9, max: 39, avg: 22.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.250s
  Counterexample analysis:                             0.160s (Max:     0.034s, Calls: 8)
    Refinement sat check:                              0.106s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.018s
  ARG update:                                          0.049s

Length of refined path (in blocks):                     161 (count: 8, min: 8, max: 38, avg: 20.13)
Number of affected states:                              140 (count: 8, min: 1, max: 37, avg: 17.50)
Length (states) of path with itp 'true':                 13 (count: 8, min: 0, max: 13, avg: 1.63)
Length (states) of path with itp non-trivial itp:       140 (count: 8, min: 1, max: 37, avg: 17.50)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             132 (count: 8, min: 0, max: 36, avg: 16.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 907
Max. size of reached set after ref.:  168
Avg. size of reached set before ref.: 663.50
Avg. size of reached set after ref.:  23.63

Total time for CEGAR algorithm:       3.924s
Time for refinements:                 0.292s
Average time for refinement:          0.036s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1280
  Total lines:            2173
  Line coverage:          0.589
  Visited conditions:     82
  Total conditions:       156
  Condition coverage:     0.526

CPAchecker general statistics
-----------------------------
Number of program locations:     2438
Number of CFA edges:             2517
Number of relevant variables:    567
Number of functions:             36
Number of loops:                 5
Size of reached set:             412
  Number of reached locations:   277 (11%)
    Avg states per location:     1
    Max states per location:     5 (at node N1311)
  Number of reached functions:   18 (50%)
  Number of partitions:          411
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1171 (before lines 3570-3753), Function find_next_position called from node N1720, stack depth 3 [1ac6dd3d], stack [main, mtdoops_notify_add, find_next_position]])
  Number of target states:       0

Time for analysis setup:          3.979s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.507s
  Time for CFA construction:      2.485s
    Time for parsing file(s):     0.769s
    Time for AST to CFA:          0.814s
    Time for CFA sanity check:    0.135s
    Time for post-processing:     0.556s
      Time for var class.:        0.276s
Time for Analysis:                3.924s
CPU time for analysis:            3.920s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.905s
Total CPU time for CPAchecker:    7.880s
Time for statistics:              0.068s

Time for Garbage Collector:       0.262s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     38MB (    36 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8098MB (  7723 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
