scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8wcj7vx8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1189522 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1169328 (98%)
  Because of loop head:            11492 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8702 (1%)
  Times precision was empty:       64914 (5%)
  Times precision was {false}:     1162 (0%)
  Times result was cached:         1116749 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6697 (1%)
  Times result was 'false':        113049 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1005769
  BDD entailment checks:           211155
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          8
Number of abstraction locations:          321
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         2169941
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 276.11
Number of irrelevant predicates:          1189245 (55%)
Number of preds handled by boolean abs:   8414 (0%)
  Total number of models for allsat:      6651
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                 38.687s
  Time for path formula creation:       34.749s
Time for strengthen operator:            6.291s
Time for prec operator:                123.160s
  Time for abstraction:                107.878s (Max:     0.239s, Count: 1189522)
    Boolean abstraction:                 4.486s
    Solving time:                        3.914s (Max:     0.014s)
    Model enumeration time:              0.460s
    Time for BDD construction:           0.196s (Max:     0.008s)
Time for merge operator:                 2.748s
Time for coverage check:                 0.471s
  Time for BDD entailment checks:        0.353s
Total time for SMT solver (w/o itp):     4.374s

Number of path formula cache hits:   7891723 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.149s

Total number of created targets for pointer analysis: 9456
   Number of created targets for uf: *signed_int is 51
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               234
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13458 (count: 322322, min: 0, max: 334, avg: 0.04)
Time for BDD node cleanup:                             0.089s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.509s
  Time for transition matches:                         5.276s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.055s
Automaton transfers with branching:                0
Automaton transfer successors:                      6732325 (count: 6732325, min: 1, max: 1, avg: 1.00) [1 x 6732325]

CPA algorithm statistics
------------------------
Number of iterations:            4756875
Max size of waitlist:            72
Average size of waitlist:        51
Number of computed successors:   5461727
Max successors for one state:    2
Number of times merged:          397307
Number of times stopped:         602085
Number of times breaked:         8702

Total time for CPA algorithm:       316.037s (Max:     1.218s)
  Time for choose from waitlist:      2.269s
  Time for precision adjustment:    159.576s
  Time for transfer relation:       115.522s
  Time for merge operator:            8.342s
  Time for stop operator:             6.840s
  Time for adding to reached set:     9.250s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8702
Avg. length of target path (in blocks):              857402 (count: 8702, min: 15, max: 202, avg: 98.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 260.309s
  Counterexample analysis:                           242.944s (Max:     0.230s, Calls: 8702)
    Refinement sat check:                            140.005s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.450s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.198s
  Precision update:                                    2.859s
  ARG update:                                          8.789s

Length of refined path (in blocks):                  842936 (count: 8701, min: 14, max: 201, avg: 96.88)
Number of affected states:                           149064 (count: 8701, min: 1, max: 85, avg: 17.13)
Length (states) of path with itp 'true':             685171 (count: 8701, min: 1, max: 177, avg: 78.75)
Length (states) of path with itp non-trivial itp:    149064 (count: 8701, min: 1, max: 85, avg: 17.13)
Length (states) of path with itp 'false':              8701 (count: 8701, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          82 (count: 8701, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:          140281 (count: 8701, min: 0, max: 84, avg: 16.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8702
Number of successful refinements:     8701
Number of failed refinements:         0
Max. size of reached set before ref.: 84196
Max. size of reached set after ref.:  83743
Avg. size of reached set before ref.: 23471.82
Avg. size of reached set after ref.:  22928.99

Total time for CEGAR algorithm:     893.480s
Time for refinements:               437.444s
Average time for refinement:          0.050s
Max time for refinement:              0.678s

Code Coverage
-----------------------------
  Function coverage:      0.629
  Visited lines:          3406
  Total lines:            4539
  Line coverage:          0.750
  Visited conditions:     706
  Total conditions:       1110
  Condition coverage:     0.636

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             71973
  Number of reached locations:   2075 (34%)
    Avg states per location:     34
    Max states per location:     1497 (at node N5022)
  Number of reached functions:   100 (63%)
  Number of partitions:          71970
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1704 (before line 8065), Function set_multicast_list called from node N4526, stack depth 3 [7a4fa032], stack [main, rndis_wlan_reset, set_multicast_list]])
  Number of target states:       1
  Size of final wait list        53

Time for analysis setup:          6.760s
  Time for loading CPAs:          1.112s
  Time for loading parser:        0.749s
  Time for CFA construction:      4.745s
    Time for parsing file(s):     1.127s
    Time for AST to CFA:          1.777s
    Time for CFA sanity check:    0.383s
    Time for post-processing:     1.224s
      Time for var class.:        0.657s
Time for Analysis:              893.480s
CPU time for analysis:          893.440s
Total time for CPAchecker:      900.245s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.964s

Time for Garbage Collector:      33.764s (in 2402 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                304MB (   290 MiB) max;    124MB (   119 MiB) avg;    332MB (   316 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           382MB (   365 MiB) max;    187MB (   179 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8199MB (  7819 MiB) max;   8160MB (  7782 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
