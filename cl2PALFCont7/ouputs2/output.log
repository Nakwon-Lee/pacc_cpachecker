scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tejz76q3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1967202 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1744198 (89%)
  Because of loop head:            222596 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         408 (0%)
  Times precision was empty:       161295 (8%)
  Times precision was {false}:     5619 (0%)
  Times result was cached:         1791167 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9121 (0%)
  Times result was 'false':        6936 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1840022
  BDD entailment checks:           322632
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          8
Number of abstraction locations:          161
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         8629058
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 585.42
Number of irrelevant predicates:          6242675 (72%)
Number of preds handled by boolean abs:   25694 (0%)
  Total number of models for allsat:      10215
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                142.909s
  Time for path formula creation:      137.729s
Time for strengthen operator:           10.401s
Time for prec operator:                401.601s
  Time for abstraction:                374.395s (Max:     2.669s, Count: 1967202)
    Boolean abstraction:                30.215s
    Solving time:                       49.817s (Max:     0.190s)
    Model enumeration time:              2.909s
    Time for BDD construction:           0.242s (Max:     0.008s)
Time for merge operator:                13.042s
Time for coverage check:                 0.576s
  Time for BDD entailment checks:        0.379s
Total time for SMT solver (w/o itp):    52.726s

Number of path formula cache hits:   11993571 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    90.334s

Total number of created targets for pointer analysis: 1095965
   Number of created targets for uf: *(struct_pi_adapter)* is 149
   Number of created targets for uf: *signed_int is 1788
   Number of created targets for uf: *(char)* is 33
   Number of created targets for uf: *char is 19577


Number of BDD nodes:                               354
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18479 (count: 566895, min: 0, max: 1084, avg: 0.03)
Time for BDD node cleanup:                             0.094s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.617s
  Time for transition matches:                         9.675s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     11076213 (count: 11076213, min: 1, max: 1, avg: 1.00) [1 x 11076213]

CPA algorithm statistics
------------------------
Number of iterations:            6953819
Max size of waitlist:            40
Average size of waitlist:        23
Number of computed successors:   8030672
Max successors for one state:    2
Number of times merged:          758695
Number of times stopped:         1068261
Number of times breaked:         408

Total time for CPA algorithm:       807.721s (Max:    21.367s)
  Time for choose from waitlist:      3.096s
  Time for precision adjustment:    462.419s
  Time for transfer relation:       269.670s
  Time for merge operator:           23.844s
  Time for stop operator:            10.601s
  Time for adding to reached set:    17.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   408
Avg. length of target path (in blocks):               50086 (count: 408, min: 10, max: 357, avg: 122.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  47.611s
  Counterexample analysis:                            31.141s (Max:     0.395s, Calls: 408)
    Refinement sat check:                             20.867s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.042s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.303s
  Precision update:                                    0.227s
  ARG update:                                         15.555s

Length of refined path (in blocks):                   44704 (count: 408, min: 4, max: 210, avg: 109.57)
Number of affected states:                            35319 (count: 408, min: 0, max: 209, avg: 86.57)
Length (states) of path with itp 'true':               8977 (count: 408, min: 0, max: 135, avg: 22.00)
Length (states) of path with itp non-trivial itp:     35319 (count: 408, min: 0, max: 209, avg: 86.57)
Length (states) of path with itp 'false':               408 (count: 408, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 408, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           34965 (count: 408, min: 0, max: 208, avg: 85.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                408
Number of successful refinements:     408
Number of failed refinements:         0
Max. size of reached set before ref.: 118077
Max. size of reached set after ref.:  74968
Avg. size of reached set before ref.: 63623.97
Avg. size of reached set after ref.:  46752.15

Total time for CEGAR algorithm:     895.134s
Time for refinements:                70.272s
Average time for refinement:          0.172s
Max time for refinement:              0.681s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1606
  Total lines:            1833
  Line coverage:          0.876
  Visited conditions:     314
  Total conditions:       410
  Condition coverage:     0.766

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             71773
  Number of reached locations:   964 (40%)
    Avg states per location:     74
    Max states per location:     4112 (at node N95)
  Number of reached functions:   56 (62%)
  Number of partitions:          71766
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1491 (before line 4496), Function main called from node N1442, stack depth 1 [49d98dc5], stack [main]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          5.091s
  Time for loading CPAs:          0.893s
  Time for loading parser:        0.685s
  Time for CFA construction:      3.389s
    Time for parsing file(s):     0.971s
    Time for AST to CFA:          1.218s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.810s
      Time for var class.:        0.385s
Time for Analysis:              895.134s
CPU time for analysis:          895.100s
Total time for CPAchecker:      900.230s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              1.033s

Time for Garbage Collector:      76.606s (in 1411 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1135MB (  1082 MiB) max;    467MB (   445 MiB) avg;   1173MB (  1119 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1239MB (  1181 MiB) max;    669MB (   638 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8339MB (  7952 MiB) max;   8250MB (  7867 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
