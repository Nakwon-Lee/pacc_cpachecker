scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-staging-comedi-drivers-ni_6527-ko--107_1a--adbbc36.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fga655jo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 1703: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 1703: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1704: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 1709: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 1709: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1710: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 1713: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 1717: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 1513-1518: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_buf_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_unsetup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_list_devices to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            15 (56%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (44%)
  Times precision was empty:       21 (78%)
  Times precision was {false}:     6 (22%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        6 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         76
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          1
Number of abstraction locations:          1
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         6
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          6 (100%)

Time for post operator:                  0.587s
  Time for path formula creation:        0.567s
Time for strengthen operator:            0.013s
Time for prec operator:                  0.070s
  Time for abstraction:                  0.062s (Max:     0.040s, Count: 27)
    Solving time:                        0.006s (Max:     0.005s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.117s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.006s

Number of path formula cache hits:   54 (5%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.540s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_mite_struct)* is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 69, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.042s
Automaton transfers with branching:                0
Automaton transfer successors:                         1174 (count: 1174, min: 1, max: 1, avg: 1.00) [1 x 1174]

CPA algorithm statistics
------------------------
Number of iterations:            506
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   554
Max successors for one state:    2
Number of times merged:          33
Number of times stopped:         43
Number of times breaked:         6

Total time for CPA algorithm:         1.187s (Max:     0.554s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.167s
  Time for transfer relation:         0.788s
  Time for merge operator:            0.142s
  Time for stop operator:             0.009s
  Time for adding to reached set:     0.024s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                   9 (count: 6, min: 1, max: 2, avg: 1.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.058s
  Counterexample analysis:                             0.038s (Max:     0.013s, Calls: 6)
    Refinement sat check:                              0.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.003s
  ARG update:                                          0.001s

Length of refined path (in blocks):                       9 (count: 6, min: 1, max: 2, avg: 1.50)
Number of affected states:                                0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  3 (count: 6, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp non-trivial itp:         0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 179
Max. size of reached set after ref.:  178
Avg. size of reached set before ref.: 103.00
Avg. size of reached set after ref.:  102.00

Total time for CEGAR algorithm:       1.277s
Time for refinements:                 0.078s
Average time for refinement:          0.013s
Max time for refinement:              0.030s

Code Coverage
-----------------------------
  Function coverage:      0.548
  Visited lines:          518
  Total lines:            747
  Line coverage:          0.693
  Visited conditions:     70
  Total conditions:       200
  Condition coverage:     0.350

CPAchecker general statistics
-----------------------------
Number of program locations:     1124
Number of CFA edges:             1244
Number of relevant variables:    135
Number of functions:             42
Number of loops:                 5
Size of reached set:             500
  Number of reached locations:   236 (21%)
    Avg states per location:     2
    Max states per location:     22 (at node N263)
  Number of reached functions:   23 (55%)
  Number of partitions:          500
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.381s
  Time for loading CPAs:          0.955s
  Time for loading parser:        0.743s
  Time for CFA construction:      2.584s
    Time for parsing file(s):     0.806s
    Time for AST to CFA:          0.817s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.613s
      Time for var class.:        0.318s
Time for Analysis:                1.277s
CPU time for analysis:            1.270s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.663s
Total CPU time for CPAchecker:    5.650s
Time for statistics:              0.119s

Time for Garbage Collector:       0.144s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 47MB (    44 MiB) max;     28MB (    27 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     25MB (    24 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8071MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
