scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--rtc--rtc-v3020.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_af4_jvyw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3861: Ignoring call via function pointer rtc_remove::__cil_tmp16 for which no suitable target was found in line: (*__cil_tmp16)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3861: Ignoring function call through function pointer *__cil_tmp16: (*__cil_tmp16)(chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3664: Ignoring call via function pointer rtc_probe::__cil_tmp30 for which no suitable target was found in line: retval = (*__cil_tmp30)(chip, pdev, pdata); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3664: Ignoring function call through function pointer *__cil_tmp30: retval = (*__cil_tmp30)(chip, pdev, pdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2455: Ignoring call via function pointer v3020_set_reg::__cil_tmp11 for which no suitable target was found in line: (*__cil_tmp11)(chip, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2455: Ignoring function call through function pointer *__cil_tmp11: (*__cil_tmp11)(chip, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2485: Ignoring call via function pointer v3020_set_reg::__cil_tmp23 for which no suitable target was found in line: (*__cil_tmp23)(chip, __cil_tmp26); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2485: Ignoring function call through function pointer *__cil_tmp23: (*__cil_tmp23)(chip, __cil_tmp26); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2544: Ignoring call via function pointer v3020_get_reg::__cil_tmp11 for which no suitable target was found in line: (*__cil_tmp11)(chip, __cil_tmp14); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2544: Ignoring function call through function pointer *__cil_tmp11: (*__cil_tmp11)(chip, __cil_tmp14); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 2569: Ignoring call via function pointer v3020_get_reg::__cil_tmp22 for which no suitable target was found in line: tmp = (*__cil_tmp22)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2569: Ignoring function call through function pointer *__cil_tmp22: tmp = (*__cil_tmp22)(chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function bcd2bin to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3681: Ignoring call via function pointer rtc_probe::__cil_tmp36 for which no suitable target was found in line: tmp___0 = (*__cil_tmp36)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3805: Ignoring call via function pointer rtc_probe::__cil_tmp103 for which no suitable target was found in line: (*__cil_tmp103)(chip); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3805: Ignoring function call through function pointer *__cil_tmp103: (*__cil_tmp103)(chip); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtc_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10044 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            10028 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (0%)
  Times precision was empty:       2938 (29%)
  Times precision was {false}:     144 (1%)
  Times result was cached:         6708 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      254 (3%)
  Times result was 'false':        42 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         23729
  BDD entailment checks:           6811
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       254
Number of predicates discovered:          2
Number of abstraction locations:          10
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         7106
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 17.85
Number of irrelevant predicates:          1557 (22%)
Number of preds handled by boolean abs:   254 (4%)
  Total number of models for allsat:      254
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.152s
  Time for path formula creation:        4.671s
Time for strengthen operator:            0.829s
Time for prec operator:                  3.350s
  Time for abstraction:                  2.711s (Max:     0.064s, Count: 10044)
    Boolean abstraction:                 0.381s
    Solving time:                        0.507s (Max:     0.029s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.013s (Max:     0.006s)
Time for merge operator:                 0.424s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     0.535s

Number of path formula cache hits:   693060 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.122s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         507 (count: 12008, min: 0, max: 80, avg: 0.04)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.652s
  Time for transition matches:                         0.951s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       705678 (count: 705678, min: 1, max: 1, avg: 1.00) [1 x 705678]

CPA algorithm statistics
------------------------
Number of iterations:            208445
Max size of waitlist:            116
Average size of waitlist:        70
Number of computed successors:   223040
Max successors for one state:    2
Number of times merged:          8459
Number of times stopped:         14405
Number of times breaked:         8

Total time for CPA algorithm:        23.846s (Max:     8.282s)
  Time for choose from waitlist:      0.194s
  Time for precision adjustment:      5.754s
  Time for transfer relation:        14.156s
  Time for merge operator:            0.883s
  Time for stop operator:             0.551s
  Time for adding to reached set:     0.805s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  69 (count: 8, min: 2, max: 18, avg: 8.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.160s
  Counterexample analysis:                             0.156s (Max:     0.036s, Calls: 8)
    Refinement sat check:                              0.101s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.002s
  ARG update:                                          0.977s

Length of refined path (in blocks):                      69 (count: 8, min: 2, max: 18, avg: 8.63)
Number of affected states:                               61 (count: 8, min: 1, max: 17, avg: 7.63)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        61 (count: 8, min: 1, max: 17, avg: 7.63)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              53 (count: 8, min: 0, max: 16, avg: 6.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 30209
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 25842.88
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      25.310s
Time for refinements:                 1.463s
Average time for refinement:          0.182s
Max time for refinement:              0.360s

Code Coverage
-----------------------------
  Function coverage:      0.727
  Visited lines:          1750
  Total lines:            2133
  Line coverage:          0.820
  Visited conditions:     110
  Total conditions:       150
  Condition coverage:     0.733

CPAchecker general statistics
-----------------------------
Number of program locations:     2372
Number of CFA edges:             2483
Number of relevant variables:    491
Number of functions:             33
Number of loops:                 9
Size of reached set:             1875
  Number of reached locations:   378 (16%)
    Avg states per location:     4
    Max states per location:     124 (at node N66)
  Number of reached functions:   24 (73%)
  Number of partitions:          1875
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          4.933s
  Time for loading CPAs:          0.931s
  Time for loading parser:        0.765s
  Time for CFA construction:      3.073s
    Time for parsing file(s):     0.956s
    Time for AST to CFA:          0.943s
    Time for CFA sanity check:    0.226s
    Time for post-processing:     0.742s
      Time for var class.:        0.429s
Time for Analysis:               25.310s
CPU time for analysis:           25.310s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.119s

Time for Garbage Collector:       2.090s (in 90 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     64MB (    61 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
