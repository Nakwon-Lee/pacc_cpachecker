scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--w1--slaves--w1_ds2408.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j5g3f1p5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_register_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function w1_unregister_family to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            76 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            65 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (14%)
  Times precision was empty:       17 (22%)
  Times precision was {false}:     13 (17%)
  Times result was cached:         29 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (22%)
  Times result was 'false':        7 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         53
  BDD entailment checks:           41
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          3
Number of abstraction locations:          5
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         69
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.30
Number of irrelevant predicates:          28 (41%)
Number of preds handled by boolean abs:   20 (29%)
  Total number of models for allsat:      19
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  0.353s
  Time for path formula creation:        0.336s
Time for strengthen operator:            0.018s
Time for prec operator:                  0.228s
  Time for abstraction:                  0.195s (Max:     0.023s, Count: 76)
    Boolean abstraction:                 0.045s
    Solving time:                        0.040s (Max:     0.011s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.040s

Number of path formula cache hits:   582 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.308s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 237, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.056s
Automaton transfers with branching:                0
Automaton transfer successors:                         1298 (count: 1298, min: 1, max: 1, avg: 1.00) [1 x 1298]

CPA algorithm statistics
------------------------
Number of iterations:            564
Max size of waitlist:            5
Average size of waitlist:        2
Number of computed successors:   622
Max successors for one state:    2
Number of times merged:          6
Number of times stopped:         35
Number of times breaked:         6

Total time for CPA algorithm:         1.019s (Max:     0.278s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.339s
  Time for transfer relation:         0.619s
  Time for merge operator:            0.020s
  Time for stop operator:             0.006s
  Time for adding to reached set:     0.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  22 (count: 6, min: 1, max: 6, avg: 3.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.076s
  Counterexample analysis:                             0.034s (Max:     0.010s, Calls: 6)
    Refinement sat check:                              0.023s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.002s
  ARG update:                                          0.019s

Length of refined path (in blocks):                      20 (count: 6, min: 1, max: 6, avg: 3.33)
Number of affected states:                               13 (count: 6, min: 0, max: 5, avg: 2.17)
Length (states) of path with itp 'true':                  1 (count: 6, min: 0, max: 1, avg: 0.17)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 0, max: 5, avg: 2.17)
Length (states) of path with itp 'false':                 1 (count: 6, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 6, min: 0, max: 4, avg: 1.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 163
Max. size of reached set after ref.:  75
Avg. size of reached set before ref.: 106.67
Avg. size of reached set after ref.:  30.33

Total time for CEGAR algorithm:       1.112s
Time for refinements:                 0.092s
Average time for refinement:          0.015s
Max time for refinement:              0.029s

Code Coverage
-----------------------------
  Function coverage:      0.250
  Visited lines:          295
  Total lines:            1340
  Line coverage:          0.220
  Visited conditions:     20
  Total conditions:       128
  Condition coverage:     0.156

CPAchecker general statistics
-----------------------------
Number of program locations:     1548
Number of CFA edges:             1641
Number of relevant variables:    295
Number of functions:             28
Number of loops:                 7
Size of reached set:             123
  Number of reached locations:   85 (5%)
    Avg states per location:     1
    Max states per location:     5 (at node N1351)
  Number of reached functions:   7 (25%)
  Number of partitions:          122
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1221 (before lines 2296-2319), Function w1_f29_add_slave called from node N1364, stack depth 2 [2ca65ce4], stack [main, w1_f29_add_slave]])
  Number of target states:       0

Time for analysis setup:          4.547s
  Time for loading CPAs:          0.916s
  Time for loading parser:        0.760s
  Time for CFA construction:      2.716s
    Time for parsing file(s):     0.861s
    Time for AST to CFA:          0.775s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.697s
      Time for var class.:        0.352s
Time for Analysis:                1.112s
CPU time for analysis:            1.110s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.664s
Total CPU time for CPAchecker:    5.650s
Time for statistics:              0.082s

Time for Garbage Collector:       0.165s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 48MB (    46 MiB) max;     29MB (    28 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    23 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8070MB (  7697 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
