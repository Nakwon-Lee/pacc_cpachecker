scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--staging--comedi--drivers--adl_pci7296_true-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nni5lqyn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function subdev_8255_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function subdev_8255_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            36 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            27 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (25%)
  Times precision was empty:       11 (31%)
  Times precision was {false}:     9 (25%)
  Times result was cached:         12 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (11%)
  Times result was 'false':        11 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         158
  BDD entailment checks:           14
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       195
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         25
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.92
Number of irrelevant predicates:          16 (64%)
Number of preds handled by boolean abs:   4 (16%)
  Total number of models for allsat:      2
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.50

Time for post operator:                  0.682s
  Time for path formula creation:        0.631s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.325s
  Time for abstraction:                  0.289s (Max:     0.090s, Count: 36)
    Boolean abstraction:                 0.084s
    Solving time:                        0.086s (Max:     0.033s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.016s (Max:     0.015s)
Time for merge operator:                 0.067s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.099s

Number of path formula cache hits:   1361 (42%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.613s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 101, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.104s
Automaton transfers with branching:                0
Automaton transfer successors:                         3166 (count: 3166, min: 1, max: 1, avg: 1.00) [1 x 3166]

CPA algorithm statistics
------------------------
Number of iterations:            747
Max size of waitlist:            8
Average size of waitlist:        3
Number of computed successors:   853
Max successors for one state:    2
Number of times merged:          72
Number of times stopped:         84
Number of times breaked:         3

Total time for CPA algorithm:         1.734s (Max:     0.733s)
  Time for choose from waitlist:      0.023s
  Time for precision adjustment:      0.434s
  Time for transfer relation:         1.057s
  Time for merge operator:            0.095s
  Time for stop operator:             0.018s
  Time for adding to reached set:     0.014s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  11 (count: 3, min: 2, max: 5, avg: 3.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.087s
  Counterexample analysis:                             0.048s (Max:     0.018s, Calls: 3)
    Refinement sat check:                              0.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.003s
  ARG update:                                          0.013s

Length of refined path (in blocks):                      11 (count: 3, min: 2, max: 5, avg: 3.67)
Number of affected states:                                8 (count: 3, min: 1, max: 4, avg: 2.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 3, min: 1, max: 4, avg: 2.67)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               5 (count: 3, min: 0, max: 3, avg: 1.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 289
Max. size of reached set after ref.:  16
Avg. size of reached set before ref.: 220.67
Avg. size of reached set after ref.:  16.00

Total time for CEGAR algorithm:       1.846s
Time for refinements:                 0.111s
Average time for refinement:          0.037s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.583
  Visited lines:          686
  Total lines:            897
  Line coverage:          0.765
  Visited conditions:     34
  Total conditions:       70
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     1036
Number of CFA edges:             1066
Number of relevant variables:    196
Number of functions:             24
Number of loops:                 3
Size of reached set:             145
  Number of reached locations:   130 (13%)
    Avg states per location:     1
    Max states per location:     2 (at node N653)
  Number of reached functions:   14 (58%)
  Number of partitions:          145
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.164s
  Time for loading CPAs:          0.924s
  Time for loading parser:        0.868s
  Time for CFA construction:      2.253s
    Time for parsing file(s):     0.794s
    Time for AST to CFA:          0.631s
    Time for CFA sanity check:    0.143s
    Time for post-processing:     0.500s
      Time for var class.:        0.217s
Time for Analysis:                1.846s
CPU time for analysis:            1.850s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.018s
Total CPU time for CPAchecker:    6.010s
Time for statistics:              0.108s

Time for Garbage Collector:       0.145s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     25MB (    24 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8070MB (  7696 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
