scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3n01fjvq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            857 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            812 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (5%)
  Times precision was empty:       434 (51%)
  Times precision was {false}:     42 (5%)
  Times result was cached:         348 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      33 (4%)
  Times result was 'false':        35 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         16103
  BDD entailment checks:           705
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1398
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         423
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.64
Number of irrelevant predicates:          266 (63%)
Number of preds handled by boolean abs:   33 (8%)
  Total number of models for allsat:      32
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  5.484s
  Time for path formula creation:        5.259s
Time for strengthen operator:            0.282s
Time for prec operator:                  9.196s
  Time for abstraction:                  8.933s (Max:     0.782s, Count: 857)
    Boolean abstraction:                 4.786s
    Solving time:                        6.517s (Max:     0.668s)
    Model enumeration time:              0.225s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.980s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.042s
Total time for SMT solver (w/o itp):     6.744s

Number of path formula cache hits:   143732 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.537s

Total number of created targets for pointer analysis: 49
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 1553, min: 0, max: 8, avg: 0.04)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.568s
  Time for transition matches:                         0.273s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       164137 (count: 164137, min: 1, max: 1, avg: 1.00) [1 x 164137]

CPA algorithm statistics
------------------------
Number of iterations:            53816
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   62151
Max successors for one state:    2
Number of times merged:          7699
Number of times stopped:         8198
Number of times breaked:         10

Total time for CPA algorithm:        22.186s (Max:     4.748s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:     10.196s
  Time for transfer relation:         8.996s
  Time for merge operator:            1.387s
  Time for stop operator:             0.305s
  Time for adding to reached set:     0.439s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  40 (count: 10, min: 2, max: 7, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.449s
  Counterexample analysis:                             1.139s (Max:     0.221s, Calls: 10)
    Refinement sat check:                              1.013s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.003s
  ARG update:                                          0.274s

Length of refined path (in blocks):                      40 (count: 10, min: 2, max: 7, avg: 4.00)
Number of affected states:                               30 (count: 10, min: 1, max: 6, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        30 (count: 10, min: 1, max: 6, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              20 (count: 10, min: 0, max: 5, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 7950
Max. size of reached set after ref.:  26
Avg. size of reached set before ref.: 5352.80
Avg. size of reached set after ref.:  26.00

Total time for CEGAR algorithm:      23.800s
Time for refinements:                 1.612s
Average time for refinement:          0.161s
Max time for refinement:              0.257s

Code Coverage
-----------------------------
  Function coverage:      0.536
  Visited lines:          2738
  Total lines:            4407
  Line coverage:          0.621
  Visited conditions:     186
  Total conditions:       360
  Condition coverage:     0.517

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             650
  Number of reached locations:   532 (11%)
    Avg states per location:     1
    Max states per location:     13 (at node N17)
  Number of reached functions:   30 (54%)
  Number of partitions:          650
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          6.467s
  Time for loading CPAs:          1.046s
  Time for loading parser:        0.738s
  Time for CFA construction:      4.505s
    Time for parsing file(s):     1.124s
    Time for AST to CFA:          1.630s
    Time for CFA sanity check:    0.407s
    Time for post-processing:     1.154s
      Time for var class.:        0.652s
Time for Analysis:               23.801s
CPU time for analysis:           23.800s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.106s

Time for Garbage Collector:       0.780s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    86 MiB) max;     53MB (    50 MiB) avg;     95MB (    91 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
