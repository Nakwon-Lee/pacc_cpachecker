scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--hwmon--asus_atk0110.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6zvkgyhg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_resources_are_enforced to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object_typed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_get_handle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_x32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            819 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            779 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (5%)
  Times precision was empty:       430 (53%)
  Times precision was {false}:     39 (5%)
  Times result was cached:         319 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31 (4%)
  Times result was 'false':        31 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         15191
  BDD entailment checks:           687
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1398
Number of predicates discovered:          2
Number of abstraction locations:          10
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         389
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.56
Number of irrelevant predicates:          251 (65%)
Number of preds handled by boolean abs:   31 (8%)
  Total number of models for allsat:      31
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.681s
  Time for path formula creation:        5.431s
Time for strengthen operator:            0.320s
Time for prec operator:                  9.450s
  Time for abstraction:                  9.229s (Max:     0.843s, Count: 819)
    Boolean abstraction:                 5.455s
    Solving time:                        6.865s (Max:     0.768s)
    Model enumeration time:              0.262s
    Time for BDD construction:           0.020s (Max:     0.015s)
Time for merge operator:                 0.999s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     7.127s

Number of path formula cache hits:   134837 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.644s

Total number of created targets for pointer analysis: 48
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 1508, min: 0, max: 6, avg: 0.04)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.593s
  Time for transition matches:                         0.260s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                       155055 (count: 155055, min: 1, max: 1, avg: 1.00) [1 x 155055]

CPA algorithm statistics
------------------------
Number of iterations:            50831
Max size of waitlist:            22
Average size of waitlist:        11
Number of computed successors:   58688
Max successors for one state:    2
Number of times merged:          7252
Number of times stopped:         7737
Number of times breaked:         9

Total time for CPA algorithm:        22.548s (Max:     4.859s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:     10.486s
  Time for transfer relation:         9.310s
  Time for merge operator:            1.374s
  Time for stop operator:             0.252s
  Time for adding to reached set:     0.231s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  33 (count: 9, min: 2, max: 5, avg: 3.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.106s
  Counterexample analysis:                             0.864s (Max:     0.217s, Calls: 9)
    Refinement sat check:                              0.761s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.022s
  ARG update:                                          0.194s

Length of refined path (in blocks):                      33 (count: 9, min: 2, max: 5, avg: 3.67)
Number of affected states:                               24 (count: 9, min: 1, max: 4, avg: 2.67)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        24 (count: 9, min: 1, max: 4, avg: 2.67)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              15 (count: 9, min: 0, max: 3, avg: 1.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 7950
Max. size of reached set after ref.:  26
Avg. size of reached set before ref.: 5119.89
Avg. size of reached set after ref.:  26.00

Total time for CEGAR algorithm:      23.819s
Time for refinements:                 1.271s
Average time for refinement:          0.141s
Max time for refinement:              0.259s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          3810
  Total lines:            4407
  Line coverage:          0.865
  Visited conditions:     292
  Total conditions:       360
  Condition coverage:     0.811

CPAchecker general statistics
-----------------------------
Number of program locations:     4826
Number of CFA edges:             5053
Number of relevant variables:    1274
Number of functions:             56
Number of loops:                 11
Size of reached set:             5075
  Number of reached locations:   880 (18%)
    Avg states per location:     5
    Max states per location:     77 (at node N25)
  Number of reached functions:   37 (66%)
  Number of partitions:          5074
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4381 (before line 8845), Function main called from node N4280, stack depth 1 [52d97ab6], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          6.409s
  Time for loading CPAs:          1.033s
  Time for loading parser:        0.804s
  Time for CFA construction:      4.379s
    Time for parsing file(s):     1.123s
    Time for AST to CFA:          1.436s
    Time for CFA sanity check:    0.499s
    Time for post-processing:     1.174s
      Time for var class.:        0.638s
Time for Analysis:               23.819s
CPU time for analysis:           23.820s
Total time for CPAchecker:       30.236s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.199s

Time for Garbage Collector:       0.745s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     53MB (    51 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
