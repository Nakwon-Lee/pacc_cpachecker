scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--iuu_phoenix.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2hf1pdnk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            125 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            41 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (67%)
  Times precision was empty:       17 (14%)
  Times precision was {false}:     28 (22%)
  Times result was cached:         69 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (9%)
  Times result was 'false':        85 (68%)
Number of strengthen sat checks:   0
Number of coverage checks:         2015
  BDD entailment checks:           15
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2461
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         108
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.77
Number of irrelevant predicates:          83 (77%)
Number of preds handled by boolean abs:   11 (10%)
  Total number of models for allsat:      7
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.64

Time for post operator:                  2.813s
  Time for path formula creation:        2.747s
Time for strengthen operator:            0.110s
Time for prec operator:                  5.504s
  Time for abstraction:                  5.430s (Max:     3.349s, Count: 125)
    Boolean abstraction:                 3.705s
    Solving time:                        3.361s (Max:     2.539s)
    Model enumeration time:              0.686s
    Time for BDD construction:           0.019s (Max:     0.019s)
Time for merge operator:                 0.581s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     4.047s

Number of path formula cache hits:   21196 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.616s

Total number of created targets for pointer analysis: 831
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 8
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          20 (count: 270, min: 0, max: 11, avg: 0.07)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.329s
Automaton transfers with branching:                0
Automaton transfer successors:                        31908 (count: 31908, min: 1, max: 1, avg: 1.00) [1 x 31908]

CPA algorithm statistics
------------------------
Number of iterations:            7751
Max size of waitlist:            21
Average size of waitlist:        11
Number of computed successors:   8919
Max successors for one state:    2
Number of times merged:          1000
Number of times stopped:         1012
Number of times breaked:         6

Total time for CPA algorithm:        11.313s (Max:     8.010s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:      5.781s
  Time for transfer relation:         4.376s
  Time for merge operator:            0.700s
  Time for stop operator:             0.082s
  Time for adding to reached set:     0.116s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  20 (count: 6, min: 2, max: 4, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.386s
  Counterexample analysis:                             0.325s (Max:     0.187s, Calls: 6)
    Refinement sat check:                              0.291s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.002s
  ARG update:                                          0.044s

Length of refined path (in blocks):                      20 (count: 6, min: 2, max: 4, avg: 3.33)
Number of affected states:                               11 (count: 6, min: 1, max: 2, avg: 1.83)
Length (states) of path with itp 'true':                  3 (count: 6, min: 0, max: 1, avg: 0.50)
Length (states) of path with itp non-trivial itp:        11 (count: 6, min: 1, max: 2, avg: 1.83)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               5 (count: 6, min: 0, max: 1, avg: 0.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 2526
Max. size of reached set after ref.:  2412
Avg. size of reached set before ref.: 2101.17
Avg. size of reached set after ref.:  1206.33

Total time for CEGAR algorithm:      11.807s
Time for refinements:                 0.486s
Average time for refinement:          0.081s
Max time for refinement:              0.230s

Code Coverage
-----------------------------
  Function coverage:      0.735
  Visited lines:          4230
  Total lines:            5082
  Line coverage:          0.832
  Visited conditions:     292
  Total conditions:       416
  Condition coverage:     0.702

CPAchecker general statistics
-----------------------------
Number of program locations:     5603
Number of CFA edges:             5888
Number of relevant variables:    1622
Number of functions:             68
Number of loops:                 6
Size of reached set:             2454
  Number of reached locations:   960 (17%)
    Avg states per location:     2
    Max states per location:     27 (at node N65)
  Number of reached functions:   50 (74%)
  Number of partitions:          2454
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.668s
  Time for loading CPAs:          1.074s
  Time for loading parser:        0.771s
  Time for CFA construction:      4.642s
    Time for parsing file(s):     1.206s
    Time for AST to CFA:          1.538s
    Time for CFA sanity check:    0.470s
    Time for post-processing:     1.232s
      Time for var class.:        0.616s
Time for Analysis:               11.807s
CPU time for analysis:           11.810s
Time for analyzing result:        0.012s
Total time for CPAchecker:       18.480s
Total CPU time for CPAchecker:   18.450s
Time for statistics:              0.166s

Time for Garbage Collector:       0.458s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     44MB (    42 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    30 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8200MB (  7820 MiB) max;   8130MB (  7753 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
