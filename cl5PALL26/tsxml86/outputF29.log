scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--usb--serial--iuu_phoenix.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z0q341zf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_copy_hw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_serial_port_softint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            120 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            38 (32%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         82 (68%)
  Times precision was empty:       17 (14%)
  Times precision was {false}:     28 (23%)
  Times result was cached:         64 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (9%)
  Times result was 'false':        84 (70%)
Number of strengthen sat checks:   0
Number of coverage checks:         2007
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2461
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         103
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.64
Number of irrelevant predicates:          81 (79%)
Number of preds handled by boolean abs:   11 (11%)
  Total number of models for allsat:      7
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.64

Time for post operator:                  3.013s
  Time for path formula creation:        2.908s
Time for strengthen operator:            0.110s
Time for prec operator:                  5.296s
  Time for abstraction:                  5.221s (Max:     3.306s, Count: 120)
    Boolean abstraction:                 3.649s
    Solving time:                        3.304s (Max:     2.523s)
    Model enumeration time:              0.696s
    Time for BDD construction:           0.017s (Max:     0.008s)
Time for merge operator:                 0.542s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     4.000s

Number of path formula cache hits:   20964 (65%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.741s

Total number of created targets for pointer analysis: 831
   Number of created targets for uf: *signed_int is 65
   Number of created targets for uf: *unsigned_char is 13
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          20 (count: 267, min: 0, max: 6, avg: 0.07)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.264s
Automaton transfers with branching:                0
Automaton transfer successors:                        31683 (count: 31683, min: 1, max: 1, avg: 1.00) [1 x 31683]

CPA algorithm statistics
------------------------
Number of iterations:            7663
Max size of waitlist:            20
Average size of waitlist:        11
Number of computed successors:   8811
Max successors for one state:    2
Number of times merged:          997
Number of times stopped:         1007
Number of times breaked:         5

Total time for CPA algorithm:        11.187s (Max:     8.000s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:      5.585s
  Time for transfer relation:         4.384s
  Time for merge operator:            0.706s
  Time for stop operator:             0.077s
  Time for adding to reached set:     0.153s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.212s
  Counterexample analysis:                             0.143s (Max:     0.049s, Calls: 5)
    Refinement sat check:                              0.125s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.050s

Length of refined path (in blocks):                      16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of affected states:                                9 (count: 5, min: 1, max: 2, avg: 1.80)
Length (states) of path with itp 'true':                  2 (count: 5, min: 0, max: 1, avg: 0.40)
Length (states) of path with itp non-trivial itp:         9 (count: 5, min: 1, max: 2, avg: 1.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 5, min: 0, max: 1, avg: 0.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 2526
Max. size of reached set after ref.:  2410
Avg. size of reached set before ref.: 2018.60
Avg. size of reached set after ref.:  965.20

Total time for CEGAR algorithm:      11.473s
Time for refinements:                 0.283s
Average time for refinement:          0.056s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.735
  Visited lines:          4230
  Total lines:            5082
  Line coverage:          0.832
  Visited conditions:     292
  Total conditions:       416
  Condition coverage:     0.702

CPAchecker general statistics
-----------------------------
Number of program locations:     5603
Number of CFA edges:             5888
Number of relevant variables:    1622
Number of functions:             68
Number of loops:                 6
Size of reached set:             2454
  Number of reached locations:   960 (17%)
    Avg states per location:     2
    Max states per location:     27 (at node N65)
  Number of reached functions:   50 (74%)
  Number of partitions:          2454
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.434s
  Time for loading CPAs:          1.036s
  Time for loading parser:        0.759s
  Time for CFA construction:      4.462s
    Time for parsing file(s):     1.219s
    Time for AST to CFA:          1.394s
    Time for CFA sanity check:    0.442s
    Time for post-processing:     1.228s
      Time for var class.:        0.587s
Time for Analysis:               11.473s
CPU time for analysis:           11.470s
Time for analyzing result:        0.002s
Total time for CPAchecker:       17.912s
Total CPU time for CPAchecker:   17.890s
Time for statistics:              0.173s

Time for Garbage Collector:       0.395s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     45MB (    43 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8198MB (  7818 MiB) max;   8127MB (  7751 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
