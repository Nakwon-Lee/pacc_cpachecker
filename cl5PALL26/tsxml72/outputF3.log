scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--isdn--hardware--avm--b1pci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sd8mdp8b/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_capi_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_alloc_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function avmcard_dma_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1dma_reset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1pciv4_detect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_getrevision to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function attach_capi_ctr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function avmcard_dma_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_free_card to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_capi_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function b1_detect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            27 (77%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (23%)
  Times precision was empty:       11 (31%)
  Times precision was {false}:     5 (14%)
  Times result was cached:         3 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16 (46%)
  Times result was 'false':        6 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         126
  BDD entailment checks:           12
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       304
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.14
Number of irrelevant predicates:          6 (25%)
Number of preds handled by boolean abs:   16 (67%)
  Total number of models for allsat:      15
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  0.777s
  Time for path formula creation:        0.747s
Time for strengthen operator:            0.033s
Time for prec operator:                  0.462s
  Time for abstraction:                  0.450s (Max:     0.146s, Count: 35)
    Boolean abstraction:                 0.213s
    Solving time:                        0.178s (Max:     0.108s)
    Model enumeration time:              0.018s
    Time for BDD construction:           0.007s (Max:     0.007s)
Time for merge operator:                 0.145s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.196s

Number of path formula cache hits:   1918 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.654s

Total number of created targets for pointer analysis: 20
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           7 (count: 152, min: 0, max: 7, avg: 0.05)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.130s
Automaton transfers with branching:                0
Automaton transfer successors:                         3758 (count: 3758, min: 1, max: 1, avg: 1.00) [1 x 3758]

CPA algorithm statistics
------------------------
Number of iterations:            837
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   919
Max successors for one state:    2
Number of times merged:          57
Number of times stopped:         69
Number of times breaked:         3

Total time for CPA algorithm:         2.169s (Max:     0.728s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.590s
  Time for transfer relation:         1.310s
  Time for merge operator:            0.166s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   8 (count: 3, min: 1, max: 5, avg: 2.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.155s
  Counterexample analysis:                             0.103s (Max:     0.058s, Calls: 3)
    Refinement sat check:                              0.070s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.005s
  ARG update:                                          0.009s

Length of refined path (in blocks):                       8 (count: 3, min: 1, max: 5, avg: 2.67)
Number of affected states:                                5 (count: 3, min: 0, max: 4, avg: 1.67)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 3, min: 0, max: 4, avg: 1.67)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               3 (count: 3, min: 0, max: 3, avg: 1.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 307
Max. size of reached set after ref.:  45
Avg. size of reached set before ref.: 181.33
Avg. size of reached set after ref.:  44.00

Total time for CEGAR algorithm:       2.356s
Time for refinements:                 0.177s
Average time for refinement:          0.059s
Max time for refinement:              0.087s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1377
  Total lines:            1827
  Line coverage:          0.754
  Visited conditions:     64
  Total conditions:       112
  Condition coverage:     0.571

CPAchecker general statistics
-----------------------------
Number of program locations:     2065
Number of CFA edges:             2125
Number of relevant variables:    350
Number of functions:             30
Number of loops:                 4
Size of reached set:             433
  Number of reached locations:   247 (12%)
    Avg states per location:     1
    Max states per location:     6 (at node N6)
  Number of reached functions:   15 (50%)
  Number of partitions:          433
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.765s
  Time for loading CPAs:          0.929s
  Time for loading parser:        0.830s
  Time for CFA construction:      2.853s
    Time for parsing file(s):     0.876s
    Time for AST to CFA:          0.878s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.667s
      Time for var class.:        0.400s
Time for Analysis:                2.356s
CPU time for analysis:            2.350s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.126s
Total CPU time for CPAchecker:    7.120s
Time for statistics:              0.118s

Time for Garbage Collector:       0.170s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     34MB (    32 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    25 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
