scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gvb0y_io/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3424: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3481: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3424: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3424: Ignoring function call through function pointer *__cil_tmp15: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3481: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3481: Ignoring function call through function pointer *__cil_tmp19: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7284 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            7248 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       2375 (33%)
  Times precision was {false}:     986 (14%)
  Times result was cached:         3693 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      230 (3%)
  Times result was 'false':        606 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         42249
  BDD entailment checks:           5439
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       697
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         4909
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.04
Number of irrelevant predicates:          2562 (52%)
Number of preds handled by boolean abs:   230 (5%)
  Total number of models for allsat:      228
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 21.181s
  Time for path formula creation:       20.708s
Time for strengthen operator:            0.703s
Time for prec operator:                 43.151s
  Time for abstraction:                 42.643s (Max:     0.425s, Count: 7284)
    Boolean abstraction:                 5.557s
    Solving time:                       31.451s (Max:     0.405s)
    Model enumeration time:              0.360s
    Time for BDD construction:           0.015s (Max:     0.003s)
Time for merge operator:                 3.227s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):    31.811s

Number of path formula cache hits:   511130 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.541s

Total number of created targets for pointer analysis: 84593
   Number of created targets for uf: *unsigned_short_int is 37
   Number of created targets for uf: *unsigned_char is 81
   Number of created targets for uf: *unsigned_long_int is 1858


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         457 (count: 14436, min: 0, max: 72, avg: 0.03)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.343s
  Time for transition matches:                         0.720s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       664338 (count: 664338, min: 1, max: 1, avg: 1.00) [1 x 664338]

CPA algorithm statistics
------------------------
Number of iterations:            168550
Max size of waitlist:            20
Average size of waitlist:        9
Number of computed successors:   192192
Max successors for one state:    2
Number of times merged:          18405
Number of times stopped:         22969
Number of times breaked:         18

Total time for CPA algorithm:        82.249s (Max:    12.501s)
  Time for choose from waitlist:      0.198s
  Time for precision adjustment:     45.712s
  Time for transfer relation:        30.330s
  Time for merge operator:            3.802s
  Time for stop operator:             0.508s
  Time for adding to reached set:     0.569s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 145 (count: 18, min: 1, max: 13, avg: 8.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.152s
  Counterexample analysis:                             1.582s (Max:     0.165s, Calls: 18)
    Refinement sat check:                              1.429s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.009s
  ARG update:                                          0.520s

Length of refined path (in blocks):                     145 (count: 18, min: 1, max: 13, avg: 8.06)
Number of affected states:                              127 (count: 18, min: 0, max: 12, avg: 7.06)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       127 (count: 18, min: 0, max: 12, avg: 7.06)
Length (states) of path with itp 'false':                 0 (count: 18, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             110 (count: 18, min: 0, max: 11, avg: 6.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 16655
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 8991.78
Avg. size of reached set after ref.:  21.83

Total time for CEGAR algorithm:      84.666s
Time for refinements:                 2.412s
Average time for refinement:          0.134s
Max time for refinement:              0.214s

Code Coverage
-----------------------------
  Function coverage:      0.805
  Visited lines:          5099
  Total lines:            5144
  Line coverage:          0.991
  Visited conditions:     382
  Total conditions:       402
  Condition coverage:     0.950

CPAchecker general statistics
-----------------------------
Number of program locations:     5603
Number of CFA edges:             5850
Number of relevant variables:    1783
Number of functions:             41
Number of loops:                 25
Size of reached set:             7159
  Number of reached locations:   1162 (21%)
    Avg states per location:     6
    Max states per location:     78 (at node N48)
  Number of reached functions:   33 (80%)
  Number of partitions:          7159
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.477s
  Time for loading CPAs:          1.068s
  Time for loading parser:        0.759s
  Time for CFA construction:      4.466s
    Time for parsing file(s):     1.127s
    Time for AST to CFA:          1.412s
    Time for CFA sanity check:    0.468s
    Time for post-processing:     1.322s
      Time for var class.:        0.557s
Time for Analysis:               84.666s
CPU time for analysis:           84.660s
Time for analyzing result:        0.007s
Total time for CPAchecker:       91.148s
Total CPU time for CPAchecker:   91.120s
Time for statistics:              0.259s

Time for Garbage Collector:       3.459s (in 146 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                217MB (   207 MiB) max;    105MB (   100 MiB) avg;    222MB (   212 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           240MB (   229 MiB) max;    167MB (   159 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8137MB (  7760 MiB) max;   8128MB (  7751 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
