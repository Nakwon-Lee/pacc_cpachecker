scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--nftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bwo64ho2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3424: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3481: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3424: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3424: Ignoring function call through function pointer *__cil_tmp15: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3481: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3481: Ignoring function call through function pointer *__cil_tmp19: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2997 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2961 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       547 (18%)
  Times precision was {false}:     342 (11%)
  Times result was cached:         1864 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      244 (8%)
  Times result was 'false':        134 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         16634
  BDD entailment checks:           2110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       697
Number of predicates discovered:          2
Number of abstraction locations:          27
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2450
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.18
Number of irrelevant predicates:          696 (28%)
Number of preds handled by boolean abs:   244 (10%)
  Total number of models for allsat:      228
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.93

Time for post operator:                 10.220s
  Time for path formula creation:        9.952s
Time for strengthen operator:            0.335s
Time for prec operator:                 20.156s
  Time for abstraction:                 19.959s (Max:     0.449s, Count: 2997)
    Boolean abstraction:                 5.786s
    Solving time:                       14.529s (Max:     0.426s)
    Model enumeration time:              0.369s
    Time for BDD construction:           0.017s (Max:     0.001s)
Time for merge operator:                 1.482s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):    14.898s

Number of path formula cache hits:   218041 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.042s

Total number of created targets for pointer analysis: 22114
   Number of created targets for uf: *unsigned_short_int is 28
   Number of created targets for uf: *unsigned_char is 61
   Number of created targets for uf: *unsigned_long_int is 1061


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         436 (count: 5912, min: 0, max: 68, avg: 0.07)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.709s
  Time for transition matches:                         0.339s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       287793 (count: 287793, min: 1, max: 1, avg: 1.00) [1 x 287793]

CPA algorithm statistics
------------------------
Number of iterations:            65042
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   74417
Max successors for one state:    2
Number of times merged:          7262
Number of times stopped:         9114
Number of times breaked:         18

Total time for CPA algorithm:        39.020s (Max:     6.391s)
  Time for choose from waitlist:      0.098s
  Time for precision adjustment:     21.488s
  Time for transfer relation:        14.508s
  Time for merge operator:            1.766s
  Time for stop operator:             0.259s
  Time for adding to reached set:     0.255s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 138 (count: 18, min: 1, max: 11, avg: 7.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.698s
  Counterexample analysis:                             1.401s (Max:     0.139s, Calls: 18)
    Refinement sat check:                              1.273s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.011s
  ARG update:                                          0.263s

Length of refined path (in blocks):                     138 (count: 18, min: 1, max: 11, avg: 7.67)
Number of affected states:                              120 (count: 18, min: 0, max: 10, avg: 6.67)
Length (states) of path with itp 'true':                  0 (count: 18, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       120 (count: 18, min: 0, max: 10, avg: 6.67)
Length (states) of path with itp 'false':                 0 (count: 18, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 18, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             103 (count: 18, min: 0, max: 9, avg: 5.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     18
Number of failed refinements:         0
Max. size of reached set before ref.: 7307
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 3244.67
Avg. size of reached set after ref.:  21.83

Total time for CEGAR algorithm:      40.900s
Time for refinements:                 1.879s
Average time for refinement:          0.104s
Max time for refinement:              0.205s

Code Coverage
-----------------------------
  Function coverage:      0.805
  Visited lines:          5099
  Total lines:            5144
  Line coverage:          0.991
  Visited conditions:     382
  Total conditions:       402
  Condition coverage:     0.950

CPAchecker general statistics
-----------------------------
Number of program locations:     5603
Number of CFA edges:             5850
Number of relevant variables:    1783
Number of functions:             41
Number of loops:                 25
Size of reached set:             7159
  Number of reached locations:   1162 (21%)
    Avg states per location:     6
    Max states per location:     78 (at node N48)
  Number of reached functions:   33 (80%)
  Number of partitions:          7159
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.509s
  Time for loading CPAs:          1.025s
  Time for loading parser:        0.690s
  Time for CFA construction:      4.621s
    Time for parsing file(s):     1.191s
    Time for AST to CFA:          1.380s
    Time for CFA sanity check:    0.496s
    Time for post-processing:     1.420s
      Time for var class.:        0.632s
Time for Analysis:               40.901s
CPU time for analysis:           40.900s
Time for analyzing result:        0.006s
Total time for CPAchecker:       47.422s
Total CPU time for CPAchecker:   47.400s
Time for statistics:              0.286s

Time for Garbage Collector:       1.613s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     71MB (    68 MiB) avg;    141MB (   135 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           173MB (   165 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8124MB (  7748 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
