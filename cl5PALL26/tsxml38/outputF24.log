scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mtd--inftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n7iz8x3h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4666: Dead code detected: tmp___25 = silly2; (CFACreationUtils.addEdgeToCFA, INFO)

line 4668: Dead code detected: [!(tmp___25 == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 4671: Dead code detected: Goto: while_break___0 (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 2123: Function pointer *__cil_tmp15 with type int (*)(struct mtd_info *mtd, loff_t from, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 2180: Function pointer *__cil_tmp19 with type int (*)(struct mtd_info *mtd, loff_t to, struct mtd_oob_ops *ops) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2123: Ignoring call via function pointer mtd_read_oob::__cil_tmp15 for which no suitable target was found in line: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2123: Ignoring function call through function pointer *__cil_tmp15: tmp___8 = (*__cil_tmp15)(mtd, from, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_block_isbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2180: Ignoring call via function pointer mtd_write_oob::__cil_tmp19 for which no suitable target was found in line: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2180: Ignoring function call through function pointer *__cil_tmp19: tmp___8 = (*__cil_tmp19)(mtd, to, ops); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_block_markbad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _cond_resched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            5181 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5127 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (1%)
  Times precision was empty:       2203 (43%)
  Times precision was {false}:     301 (6%)
  Times result was cached:         2464 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      213 (4%)
  Times result was 'false':        292 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         26159
  BDD entailment checks:           2913
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       865
Number of predicates discovered:          2
Number of abstraction locations:          40
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         2978
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 5.79
Number of irrelevant predicates:          957 (32%)
Number of preds handled by boolean abs:   213 (7%)
  Total number of models for allsat:      198
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.93

Time for post operator:                 13.968s
  Time for path formula creation:       13.576s
Time for strengthen operator:            0.608s
Time for prec operator:                 25.420s
  Time for abstraction:                 25.010s (Max:     1.964s, Count: 5181)
    Boolean abstraction:                 9.028s
    Solving time:                       18.847s (Max:     1.889s)
    Model enumeration time:              0.393s
    Time for BDD construction:           0.030s (Max:     0.009s)
Time for merge operator:                 1.729s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):    19.240s

Number of path formula cache hits:   438995 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.565s

Total number of created targets for pointer analysis: 19426
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *unsigned_char is 321
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         407 (count: 8011, min: 0, max: 64, avg: 0.05)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.105s
  Time for transition matches:                         0.656s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       511735 (count: 511735, min: 1, max: 1, avg: 1.00) [1 x 511735]

CPA algorithm statistics
------------------------
Number of iterations:            118213
Max size of waitlist:            46
Average size of waitlist:        15
Number of computed successors:   133199
Max successors for one state:    2
Number of times merged:          11623
Number of times stopped:         13996
Number of times breaked:         27

Total time for CPA algorithm:        52.701s (Max:     7.985s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:     26.919s
  Time for transfer relation:        21.469s
  Time for merge operator:            2.153s
  Time for stop operator:             0.431s
  Time for adding to reached set:     0.409s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 284 (count: 27, min: 1, max: 21, avg: 10.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.560s
  Counterexample analysis:                             2.070s (Max:     0.168s, Calls: 27)
    Refinement sat check:                              1.831s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.035s
  ARG update:                                          0.377s

Length of refined path (in blocks):                     284 (count: 27, min: 1, max: 21, avg: 10.52)
Number of affected states:                              257 (count: 27, min: 0, max: 20, avg: 9.52)
Length (states) of path with itp 'true':                  0 (count: 27, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       257 (count: 27, min: 0, max: 20, avg: 9.52)
Length (states) of path with itp 'false':                 0 (count: 27, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 27, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             231 (count: 27, min: 0, max: 19, avg: 8.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     27
Number of failed refinements:         0
Max. size of reached set before ref.: 5725
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 4211.85
Avg. size of reached set after ref.:  21.89

Total time for CEGAR algorithm:      55.541s
Time for refinements:                 2.838s
Average time for refinement:          0.105s
Max time for refinement:              0.198s

Code Coverage
-----------------------------
  Function coverage:      0.818
  Visited lines:          6354
  Total lines:            6399
  Line coverage:          0.993
  Visited conditions:     494
  Total conditions:       514
  Condition coverage:     0.961

CPAchecker general statistics
-----------------------------
Number of program locations:     7008
Number of CFA edges:             7336
Number of relevant variables:    2199
Number of functions:             44
Number of loops:                 39
Size of reached set:             5783
  Number of reached locations:   1630 (23%)
    Avg states per location:     3
    Max states per location:     83 (at node N3651)
  Number of reached functions:   36 (82%)
  Number of partitions:          5783
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          7.064s
  Time for loading CPAs:          1.225s
  Time for loading parser:        0.814s
  Time for CFA construction:      4.840s
    Time for parsing file(s):     1.212s
    Time for AST to CFA:          1.517s
    Time for CFA sanity check:    0.536s
    Time for post-processing:     1.421s
      Time for var class.:        0.653s
Time for Analysis:               55.541s
CPU time for analysis:           55.540s
Time for analyzing result:        0.005s
Total time for CPAchecker:       62.616s
Total CPU time for CPAchecker:   62.600s
Time for statistics:              0.226s

Time for Garbage Collector:       1.910s (in 105 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                132MB (   126 MiB) max;     81MB (    77 MiB) avg;    140MB (   133 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     41MB (    39 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           168MB (   160 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8136MB (  7759 MiB) max;   8126MB (  7750 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
