scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__y9se3d1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            631 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            409 (65%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         222 (35%)
  Times precision was empty:       7 (1%)
  Times precision was {false}:     211 (33%)
  Times result was cached:         29 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      384 (61%)
  Times result was 'false':        281 (45%)
Number of strengthen sat checks:   0
Number of coverage checks:         1756
  BDD entailment checks:           1754
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          25
Number of abstraction locations:          4
Max number of predicates per location:    15
Avg number of predicates per location:    9
Total predicates per abstraction:         3814
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 6.41
Number of irrelevant predicates:          228 (6%)
Number of preds handled by boolean abs:   3433 (90%)
  Total number of models for allsat:      956
  Max number of models for allsat:        17
  Avg number of models for allsat:        2.49

Time for post operator:                  0.367s
  Time for path formula creation:        0.358s
Time for strengthen operator:            0.043s
Time for prec operator:                  3.491s
  Time for abstraction:                  3.424s (Max:     0.024s, Count: 631)
    Boolean abstraction:                 1.419s
    Solving time:                        1.067s (Max:     0.014s)
    Model enumeration time:              0.167s
    Time for BDD construction:           0.129s (Max:     0.012s)
Time for merge operator:                 0.004s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.234s

Number of path formula cache hits:   2681 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.336s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               6374
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6095 (count: 7882, min: 0, max: 2503, avg: 0.77)
Time for BDD node cleanup:                             0.041s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.090s
Automaton transfers with branching:                0
Automaton transfer successors:                         3359 (count: 3359, min: 1, max: 1, avg: 1.00) [1 x 3359]

CPA algorithm statistics
------------------------
Number of iterations:            2822
Max size of waitlist:            7
Average size of waitlist:        4
Number of computed successors:   3268
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         128
Number of times breaked:         22

Total time for CPA algorithm:         4.755s (Max:     0.826s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      3.658s
  Time for transfer relation:         0.849s
  Time for merge operator:            0.023s
  Time for stop operator:             0.074s
  Time for adding to reached set:     0.066s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 182 (count: 22, min: 3, max: 11, avg: 8.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.308s
  Counterexample analysis:                             0.207s (Max:     0.019s, Calls: 22)
    Refinement sat check:                              0.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.020s
  ARG update:                                          0.028s

Length of refined path (in blocks):                     178 (count: 22, min: 3, max: 11, avg: 8.09)
Number of affected states:                               84 (count: 22, min: 2, max: 8, avg: 3.82)
Length (states) of path with itp 'true':                 72 (count: 22, min: 0, max: 7, avg: 3.27)
Length (states) of path with itp non-trivial itp:        84 (count: 22, min: 2, max: 8, avg: 3.82)
Length (states) of path with itp 'false':                 2 (count: 22, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:          35 (count: 22, min: 0, max: 6, avg: 1.59)
Equal non-trivial interpolants along paths:              27 (count: 22, min: 0, max: 3, avg: 1.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 592
Max. size of reached set after ref.:  546
Avg. size of reached set before ref.: 348.14
Avg. size of reached set after ref.:  244.09

Total time for CEGAR algorithm:       5.201s
Time for refinements:                 0.433s
Average time for refinement:          0.019s
Max time for refinement:              0.109s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             571
  Number of reached locations:   37 (73%)
    Avg states per location:     15
    Max states per location:     43 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          540
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [53aac487], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.461s
  Time for loading CPAs:          0.744s
  Time for loading parser:        0.709s
  Time for CFA construction:      0.883s
    Time for parsing file(s):     0.392s
    Time for AST to CFA:          0.143s
    Time for CFA sanity check:    0.024s
    Time for post-processing:     0.142s
      Time for var class.:        0.047s
Time for Analysis:                5.202s
CPU time for analysis:            5.200s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.669s
Total CPU time for CPAchecker:    7.670s
Time for statistics:              0.087s

Time for Garbage Collector:       0.123s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8093MB (  7718 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
