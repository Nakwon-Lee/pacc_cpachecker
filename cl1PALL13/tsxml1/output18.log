scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2hptxpyq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            569 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            364 (64%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         205 (36%)
  Times precision was empty:       7 (1%)
  Times precision was {false}:     204 (36%)
  Times result was cached:         1 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      357 (63%)
  Times result was 'false':        237 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         1572
  BDD entailment checks:           1570
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          25
Number of abstraction locations:          4
Max number of predicates per location:    15
Avg number of predicates per location:    9
Total predicates per abstraction:         3343
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 5.96
Number of irrelevant predicates:          210 (6%)
Number of preds handled by boolean abs:   3127 (94%)
  Total number of models for allsat:      952
  Max number of models for allsat:        14
  Avg number of models for allsat:        2.67

Time for post operator:                  0.346s
  Time for path formula creation:        0.339s
Time for strengthen operator:            0.018s
Time for prec operator:                  3.397s
  Time for abstraction:                  3.291s (Max:     0.028s, Count: 569)
    Boolean abstraction:                 1.344s
    Solving time:                        0.943s (Max:     0.014s)
    Model enumeration time:              0.149s
    Time for BDD construction:           0.098s (Max:     0.012s)
Time for merge operator:                 0.005s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     1.092s

Number of path formula cache hits:   2287 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.297s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5593
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6413 (count: 7312, min: 0, max: 2445, avg: 0.88)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.158s
Automaton transfers with branching:                0
Automaton transfer successors:                         3054 (count: 3054, min: 1, max: 1, avg: 1.00) [1 x 3054]

CPA algorithm statistics
------------------------
Number of iterations:            2560
Max size of waitlist:            12
Average size of waitlist:        4
Number of computed successors:   2972
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         137
Number of times breaked:         23

Total time for CPA algorithm:         4.702s (Max:     0.604s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      3.560s
  Time for transfer relation:         0.896s
  Time for merge operator:            0.021s
  Time for stop operator:             0.053s
  Time for adding to reached set:     0.045s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 183 (count: 23, min: 3, max: 11, avg: 7.96)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.335s
  Counterexample analysis:                             0.213s (Max:     0.016s, Calls: 23)
    Refinement sat check:                              0.098s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.018s
  ARG update:                                          0.027s

Length of refined path (in blocks):                     181 (count: 23, min: 3, max: 11, avg: 7.87)
Number of affected states:                               73 (count: 23, min: 2, max: 8, avg: 3.17)
Length (states) of path with itp 'true':                 85 (count: 23, min: 0, max: 8, avg: 3.70)
Length (states) of path with itp non-trivial itp:        73 (count: 23, min: 2, max: 8, avg: 3.17)
Length (states) of path with itp 'false':                 1 (count: 23, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:          26 (count: 23, min: 0, max: 6, avg: 1.13)
Equal non-trivial interpolants along paths:              24 (count: 23, min: 0, max: 3, avg: 1.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 624
Max. size of reached set after ref.:  590
Avg. size of reached set before ref.: 311.43
Avg. size of reached set after ref.:  223.26

Total time for CEGAR algorithm:       5.176s
Time for refinements:                 0.468s
Average time for refinement:          0.020s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             571
  Number of reached locations:   37 (73%)
    Avg states per location:     15
    Max states per location:     43 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          540
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N40 (before line 22), Function main called from node N9, stack depth 1 [53aac487], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.673s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.821s
  Time for CFA construction:      0.861s
    Time for parsing file(s):     0.398s
    Time for AST to CFA:          0.141s
    Time for CFA sanity check:    0.045s
    Time for post-processing:     0.138s
      Time for var class.:        0.054s
Time for Analysis:                5.177s
CPU time for analysis:            5.170s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.855s
Total CPU time for CPAchecker:    7.860s
Time for statistics:              0.080s

Time for Garbage Collector:       0.124s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8090MB (  7715 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
