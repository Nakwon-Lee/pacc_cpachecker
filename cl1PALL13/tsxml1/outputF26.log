scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loop-invgen/nested6_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h3r1o6hz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            706 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            450 (64%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         256 (36%)
  Times precision was empty:       7 (1%)
  Times precision was {false}:     249 (35%)
  Times result was cached:         15 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      435 (62%)
  Times result was 'false':        314 (44%)
Number of strengthen sat checks:   0
Number of coverage checks:         2061
  BDD entailment checks:           2059
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          26
Number of abstraction locations:          4
Max number of predicates per location:    15
Avg number of predicates per location:    9
Total predicates per abstraction:         4388
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 6.42
Number of irrelevant predicates:          261 (6%)
Number of preds handled by boolean abs:   4046 (92%)
  Total number of models for allsat:      1254
  Max number of models for allsat:        17
  Avg number of models for allsat:        2.88

Time for post operator:                  0.513s
  Time for path formula creation:        0.484s
Time for strengthen operator:            0.034s
Time for prec operator:                  4.251s
  Time for abstraction:                  4.174s (Max:     0.026s, Count: 706)
    Boolean abstraction:                 1.902s
    Solving time:                        1.349s (Max:     0.014s)
    Model enumeration time:              0.223s
    Time for BDD construction:           0.178s (Max:     0.013s)
Time for merge operator:                 0.005s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     1.572s

Number of path formula cache hits:   2836 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.424s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8140
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8303 (count: 9217, min: 0, max: 2287, avg: 0.90)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.165s
Automaton transfers with branching:                0
Automaton transfer successors:                         3833 (count: 3833, min: 1, max: 1, avg: 1.00) [1 x 3833]

CPA algorithm statistics
------------------------
Number of iterations:            3217
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   3731
Max successors for one state:    2
Number of times merged:          1
Number of times stopped:         147
Number of times breaked:         23

Total time for CPA algorithm:         5.767s (Max:     0.463s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:      4.420s
  Time for transfer relation:         1.068s
  Time for merge operator:            0.031s
  Time for stop operator:             0.063s
  Time for adding to reached set:     0.047s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                 202 (count: 23, min: 3, max: 14, avg: 8.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.386s
  Counterexample analysis:                             0.242s (Max:     0.021s, Calls: 23)
    Refinement sat check:                              0.131s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.033s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     194 (count: 23, min: 3, max: 12, avg: 8.43)
Number of affected states:                               90 (count: 23, min: 2, max: 8, avg: 3.91)
Length (states) of path with itp 'true':                 81 (count: 23, min: 0, max: 7, avg: 3.52)
Length (states) of path with itp non-trivial itp:        90 (count: 23, min: 2, max: 8, avg: 3.91)
Length (states) of path with itp 'false':                 4 (count: 23, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:          43 (count: 23, min: 0, max: 6, avg: 1.87)
Equal non-trivial interpolants along paths:              24 (count: 23, min: 0, max: 3, avg: 1.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 716
Max. size of reached set after ref.:  600
Avg. size of reached set before ref.: 342.22
Avg. size of reached set after ref.:  227.22

Total time for CEGAR algorithm:       6.306s
Time for refinements:                 0.526s
Average time for refinement:          0.022s
Max time for refinement:              0.115s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          18
  Total lines:            18
  Line coverage:          1.000
  Visited conditions:     14
  Total conditions:       14
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     51
Number of CFA edges:             59
Number of relevant variables:    7
Number of functions:             2
Number of loops:                 3
Size of reached set:             626
  Number of reached locations:   37 (73%)
    Avg states per location:     16
    Max states per location:     48 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          593
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N30 (before line 20), Function main called from node N9, stack depth 1 [53aac487], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.564s
  Time for loading CPAs:          0.774s
  Time for loading parser:        0.736s
  Time for CFA construction:      0.917s
    Time for parsing file(s):     0.333s
    Time for AST to CFA:          0.218s
    Time for CFA sanity check:    0.034s
    Time for post-processing:     0.169s
      Time for var class.:        0.072s
Time for Analysis:                6.306s
CPU time for analysis:            6.300s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.875s
Total CPU time for CPAchecker:    8.870s
Time for statistics:              0.098s

Time for Garbage Collector:       0.129s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     36MB (    35 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     28MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8098MB (  7723 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
