scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--net--ethernet--icplus--ipg.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_21lhs5r3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7416: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7439: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 9839: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9859: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9862: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 9864: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10165: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10190: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10203: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10278: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10314: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10392: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10399: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10400: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10406: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10407: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10408: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10415: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10416: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10417: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10418: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10424: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10425: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10426: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10427: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10428: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10435: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10436: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10437: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10438: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10439: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10440: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10446: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10447: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10448: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10449: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10450: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10451: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10452: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10460: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10461: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10462: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10463: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10464: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10465: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10466: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10467: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10474: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10475: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10476: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10477: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10478: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10479: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10480: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10481: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10482: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10489: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10490: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10491: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10492: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10493: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10494: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10495: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10496: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10497: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10498: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 10622: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10653: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10748: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10788: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10789: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10833: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 10846: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10889: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10904: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10995: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11172: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11188: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11218: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6704: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6744: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6578-6579: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6617: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10539: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10550: Function pointer *arg0 with type int (*)(struct pci_dev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10573: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10585: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10855: Function pointer *arg0 with type void (*)(unsigned long) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10618: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 9978: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 10855: Ignoring call via function pointer ldv_timer_instance_callback_3_2::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10855: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10561: Ignoring call via function pointer ldv_pci_instance_shutdown_2_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10561: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10573: Ignoring call via function pointer ldv_pci_instance_suspend_2_8::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10573: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10585: Ignoring call via function pointer ldv_pci_instance_suspend_late_2_7::arg0 for which no suitable target was found in line: tmp = (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10585: Ignoring function call through function pointer *arg0: tmp = (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10550: Ignoring call via function pointer ldv_pci_instance_resume_early_2_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10550: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10539: Ignoring call via function pointer ldv_pci_instance_resume_2_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10539: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10225: Ignoring call via function pointer ldv_interrupt_instance_thread_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1, arg2); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 10225: Ignoring function call through function pointer *arg0: (*arg0)(arg1, arg2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6704: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6313: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_unreachable to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6744: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6607: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

line 6617: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_tx_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6571: Return type of function __builtin_unreachable is void, but result is used as type int: __builtin_unreachable(); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44914 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            42089 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2825 (6%)
  Times precision was empty:       5575 (12%)
  Times precision was {false}:     905 (2%)
  Times result was cached:         2482 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35952 (80%)
  Times result was 'false':        25188 (56%)
Number of strengthen sat checks:   0
Number of coverage checks:         2000149
  BDD entailment checks:           1952523
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       587
Number of predicates discovered:          84
Number of abstraction locations:          33
Max number of predicates per location:    81
Avg number of predicates per location:    7
Total predicates per abstraction:         1762194
Max number of predicates per abstraction: 81
Avg number of predicates per abstraction: 47.81
Number of irrelevant predicates:          18279 (1%)
Number of preds handled by boolean abs:   1737864 (99%)
  Total number of models for allsat:      1179445
  Max number of models for allsat:        473
  Avg number of models for allsat:        32.81

Time for post operator:                 13.437s
  Time for path formula creation:       12.610s
Time for strengthen operator:            0.915s
Time for prec operator:                767.122s
  Time for abstraction:                765.634s (Max:     0.681s, Count: 44914)
    Boolean abstraction:               637.666s
    Solving time:                      113.207s (Max:     0.093s)
    Model enumeration time:            137.364s
    Time for BDD construction:         359.437s (Max:     0.609s)
Time for merge operator:                 0.689s
Time for coverage check:                20.078s
  Time for BDD entailment checks:       19.822s
Total time for SMT solver (w/o itp):   250.572s

Number of path formula cache hits:   1036589 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.467s

Total number of created targets for pointer analysis: 10702
   Number of created targets for uf: *(void)* is 157
   Number of created targets for uf: *(Return_type:_[enum_irqreturn],_Parameters:_2,_Parameter_1_type:_[signed_int],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 53
   Number of created targets for uf: *unsigned_short_int is 10461
   Number of created targets for uf: *(struct_net_device)* is 2
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *(struct_timer_list)* is 4
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *unsigned_int is 5
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               381766
Size of BDD node table:                            470689
Size of BDD cache:                                 47087
Size of BDD node cleanup queue:                     1781116 (count: 2869842, min: 0, max: 5372, avg: 0.62)
Time for BDD node cleanup:                             0.833s
Time for BDD garbage collection:                      86.549s (in 6966 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.190s
  Time for transition matches:                         1.066s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                      1070140 (count: 1070140, min: 1, max: 1, avg: 1.00) [1 x 1070140]

CPA algorithm statistics
------------------------
Number of iterations:            611457
Max size of waitlist:            87
Average size of waitlist:        50
Number of computed successors:   667162
Max successors for one state:    2
Number of times merged:          23813
Number of times stopped:         25866
Number of times breaked:         677

Total time for CPA algorithm:       831.381s (Max:    60.698s)
  Time for choose from waitlist:      0.424s
  Time for precision adjustment:    772.365s
  Time for transfer relation:        29.468s
  Time for merge operator:            2.797s
  Time for stop operator:            22.349s
  Time for adding to reached set:     1.798s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   677
Avg. length of target path (in blocks):               20179 (count: 677, min: 1, max: 520, avg: 29.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  52.209s
  Counterexample analysis:                            49.713s (Max:     1.477s, Calls: 677)
    Refinement sat check:                             28.944s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.207s
  Precision update:                                    0.196s
  ARG update:                                          1.353s

Length of refined path (in blocks):                   19956 (count: 677, min: 1, max: 519, avg: 29.48)
Number of affected states:                            12300 (count: 677, min: 0, max: 517, avg: 18.17)
Length (states) of path with itp 'true':               6979 (count: 677, min: 0, max: 15, avg: 10.31)
Length (states) of path with itp non-trivial itp:     12300 (count: 677, min: 0, max: 517, avg: 18.17)
Length (states) of path with itp 'false':               137 (count: 677, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:         971 (count: 677, min: 0, max: 43, avg: 1.43)
Equal non-trivial interpolants along paths:           10966 (count: 677, min: 0, max: 473, avg: 16.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                677
Number of successful refinements:     677
Number of failed refinements:         0
Max. size of reached set before ref.: 18643
Max. size of reached set after ref.:  18426
Avg. size of reached set before ref.: 8459.79
Avg. size of reached set after ref.:  7572.25

Total time for CEGAR algorithm:     892.577s
Time for refinements:                57.819s
Average time for refinement:          0.085s
Max time for refinement:              1.517s

Code Coverage
-----------------------------
  Function coverage:      0.219
  Visited lines:          1657
  Total lines:            4834
  Line coverage:          0.343
  Visited conditions:     120
  Total conditions:       956
  Condition coverage:     0.126

CPAchecker general statistics
-----------------------------
Number of program locations:     7336
Number of CFA edges:             8105
Number of relevant variables:    966
Number of functions:             562
Number of loops:                 32
Size of reached set:             15241
  Number of reached locations:   772 (11%)
    Avg states per location:     19
    Max states per location:     505 (at node N368)
  Number of reached functions:   123 (22%)
  Number of partitions:          14744
    Avg size of partitions:      1
    Max size of partitions:      457 (with key [N2161 (before line 9231), Function read_eeprom called from node N2237, stack depth 12 [694fe9cd], stack [main, ldv_entry_EMGentry_13, ldv_EMGentry_init_ipg_pci_driver_init_13_9, ipg_pci_driver_init, ldv___pci_register_driver_143, ldv___pci_register_driver, ldv_dispatch_register_12_2, ldv_pci_pci_instance_2, ldv_pci_instance_probe_2_17, ipg_probe, ipg_hw_init, read_eeprom]])
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          7.651s
  Time for loading CPAs:          1.269s
  Time for loading parser:        0.744s
  Time for CFA construction:      5.471s
    Time for parsing file(s):     1.238s
    Time for AST to CFA:          2.283s
    Time for CFA sanity check:    0.451s
    Time for post-processing:     1.212s
      Time for var class.:        0.661s
Time for Analysis:              892.577s
CPU time for analysis:          892.530s
Total time for CPAchecker:      900.252s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.406s

Time for Garbage Collector:      16.026s (in 1085 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                296MB (   282 MiB) max;    165MB (   157 MiB) avg;    332MB (   316 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           376MB (   359 MiB) max;    245MB (   233 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13443MB ( 12820 MiB) max;  10517MB ( 10029 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
