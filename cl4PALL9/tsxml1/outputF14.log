scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---sound--drivers--vx--snd-vx-lib.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6n3uca5o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 5948: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 6793: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6853: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 8371: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8401: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8459: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8465: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8466: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8473: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8474: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8475: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8482: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8483: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8484: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8485: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8492: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8493: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8494: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8495: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8496: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8502: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8503: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8504: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8505: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8506: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8507: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8553: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8583: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8641: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8647: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8648: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8655: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8656: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8657: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8664: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8665: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8666: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8667: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8674: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8675: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8676: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8677: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8678: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8684: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8685: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8686: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8687: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8688: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 8689: Dead code detected: goto ldv_call_1; (CFACreationUtils.addEdgeToCFA, INFO)

line 4581: Function pointer *(chip->ops->in8) with type unsigned char (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10580: Function pointer *(chip->ops->in32) with type unsigned int (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4592: Function pointer *(chip->ops->out8) with type void (*)(struct vx_core *, int, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10591: Function pointer *(chip->ops->out32) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5733: Function pointer *(chip->ops->load_dsp) with type int (*)(struct vx_core *, int, const struct firmware *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6184: Function pointer *(chip->ops->load_dsp) with type int (*)(struct vx_core *, int, const struct firmware *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8962: Function pointer *(chip->ops->change_audio_source) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10834: Function pointer *(chip->ops->set_clock_source) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6388: Function pointer *(chip->ops->dma_read) with type void (*)(struct vx_core *, struct snd_pcm_runtime *, struct vx_pipe *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6376: Function pointer *(chip->ops->dma_write) with type void (*)(struct vx_core *, struct snd_pcm_runtime *, struct vx_pipe *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5436: Function pointer *(chip->ops->reset_board) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8856: Function pointer *(chip->ops->akm_write) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8857: Function pointer *(chip->ops->akm_write) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8880: Function pointer *(chip->ops->akm_write) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4570: Function pointer *(chip->ops->validate_irq) with type void (*)(struct vx_core *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8823: Function pointer *(chip->ops->write_codec) with type void (*)(struct vx_core *, int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 5897: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8365: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_hw_constraint_step to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5900: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8547: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(608UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function snd_pcm_lib_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_lib_get_vmalloc_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __snd_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8962: Ignoring function call through function pointer *(chip->ops->change_audio_source): (*(chip->ops->change_audio_source))(chip, src); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10591: Ignoring function call through function pointer *(chip->ops->out32): (*(chip->ops->out32))(chip, reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4592: Ignoring function call through function pointer *(chip->ops->out8): (*(chip->ops->out8))(chip, reg, (int)val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snd_pcm_format_little_endian to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snd_pcm_format_physical_width to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8823: Ignoring function call through function pointer *(chip->ops->write_codec): (*(chip->ops->write_codec))(chip, codec, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8880: Ignoring function call through function pointer *(chip->ops->akm_write): (*(chip->ops->akm_write))(chip, 2, (unsigned int)mute); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10834: Ignoring function call through function pointer *(chip->ops->set_clock_source): (*(chip->ops->set_clock_source))(chip, source); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10025 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3819 (38%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6206 (62%)
  Times precision was empty:       4601 (46%)
  Times precision was {false}:     2807 (28%)
  Times result was cached:         2140 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      477 (5%)
  Times result was 'false':        4609 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         24844
  BDD entailment checks:           586
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       516
Number of predicates discovered:          25
Number of abstraction locations:          32
Max number of predicates per location:    24
Avg number of predicates per location:    3
Total predicates per abstraction:         15591
Max number of predicates per abstraction: 24
Avg number of predicates per abstraction: 4.75
Number of irrelevant predicates:          6649 (43%)
Number of preds handled by boolean abs:   4472 (29%)
  Total number of models for allsat:      471
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  6.949s
  Time for path formula creation:        6.744s
Time for strengthen operator:            0.352s
Time for prec operator:                447.734s
  Time for abstraction:                447.223s (Max:    24.455s, Count: 10025)
    Boolean abstraction:               288.168s
    Solving time:                      307.726s (Max:    14.585s)
    Model enumeration time:             80.470s
    Time for BDD construction:           0.074s (Max:     0.009s)
Time for merge operator:                 1.808s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):   388.196s

Number of path formula cache hits:   316940 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.595s

Total number of created targets for pointer analysis: 64940
   Number of created targets for uf: *unsigned_short_int is 57
   Number of created targets for uf: *(void)* is 7
   Number of created targets for uf: *(struct_snd_pcm_substream)* is 2
   Number of created targets for uf: *signed_int is 205
   Number of created targets for uf: *(struct_vx_pipe)* is 12
   Number of created targets for uf: *unsigned_char_:_1 is 17
   Number of created targets for uf: *unsigned_long_long_int is 17
   Number of created targets for uf: *unsigned_int is 403
   Number of created targets for uf: *signed_short_int is 2


Number of BDD nodes:                               730
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2463 (count: 25478, min: 0, max: 129, avg: 0.10)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.031s
  Time for transition matches:                         0.362s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                       315928 (count: 315928, min: 1, max: 1, avg: 1.00) [1 x 315928]

CPA algorithm statistics
------------------------
Number of iterations:            199610
Max size of waitlist:            116
Average size of waitlist:        54
Number of computed successors:   220340
Max successors for one state:    2
Number of times merged:          12129
Number of times stopped:         12588
Number of times breaked:         1700

Total time for CPA algorithm:       465.683s (Max:    24.580s)
  Time for choose from waitlist:      0.163s
  Time for precision adjustment:    449.515s
  Time for transfer relation:        12.287s
  Time for merge operator:            2.086s
  Time for stop operator:             0.341s
  Time for adding to reached set:     0.506s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1700
Avg. length of target path (in blocks):                6789 (count: 1700, min: 1, max: 8, avg: 3.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 416.928s
  Counterexample analysis:                           414.917s (Max:     1.473s, Calls: 1700)
    Refinement sat check:                            383.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.349s
  ARG update:                                          0.484s

Length of refined path (in blocks):                    6733 (count: 1699, min: 1, max: 8, avg: 3.96)
Number of affected states:                              241 (count: 1699, min: 0, max: 7, avg: 0.14)
Length (states) of path with itp 'true':               4793 (count: 1699, min: 0, max: 7, avg: 2.82)
Length (states) of path with itp non-trivial itp:       241 (count: 1699, min: 0, max: 7, avg: 0.14)
Length (states) of path with itp 'false':                49 (count: 1699, min: 0, max: 1, avg: 0.03)
Different non-trivial interpolants along paths:           3 (count: 1699, min: 0, max: 2, avg: 0.00)
Equal non-trivial interpolants along paths:             129 (count: 1699, min: 0, max: 6, avg: 0.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1700
Number of successful refinements:     1699
Number of failed refinements:         0
Max. size of reached set before ref.: 8487
Max. size of reached set after ref.:  8339
Avg. size of reached set before ref.: 3464.76
Avg. size of reached set after ref.:  3347.24

Total time for CEGAR algorithm:     892.554s
Time for refinements:               423.427s
Average time for refinement:          0.249s
Max time for refinement:              1.481s

Code Coverage
-----------------------------
  Function coverage:      0.263
  Visited lines:          1934
  Total lines:            5030
  Line coverage:          0.384
  Visited conditions:     316
  Total conditions:       1250
  Condition coverage:     0.253

CPAchecker general statistics
-----------------------------
Number of program locations:     7771
Number of CFA edges:             8730
Number of relevant variables:    1105
Number of functions:             579
Number of loops:                 40
Size of reached set:             7082
  Number of reached locations:   1311 (17%)
    Avg states per location:     5
    Max states per location:     126 (at node N5513)
  Number of reached functions:   152 (26%)
  Number of partitions:          7080
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2792 (before lines 8554-8557), Function ldv_struct_snd_pcm_ops_io_instance_1 called from node N964, stack depth 4 [48bfb325], stack [main, ldv_entry_EMGentry_2, ldv_dispatch_register_io_instance_1_2_5, ldv_struct_snd_pcm_ops_io_instance_1]])
  Number of target states:       1
  Size of final wait list        101

Time for analysis setup:          7.712s
  Time for loading CPAs:          1.227s
  Time for loading parser:        0.749s
  Time for CFA construction:      5.518s
    Time for parsing file(s):     1.278s
    Time for AST to CFA:          2.148s
    Time for CFA sanity check:    0.479s
    Time for post-processing:     1.379s
      Time for var class.:        0.792s
Time for Analysis:              892.554s
CPU time for analysis:          892.510s
Total time for CPAchecker:      900.271s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.257s

Time for Garbage Collector:       4.123s (in 610 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     77MB (    74 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8613MB (  8214 MiB) max;   8398MB (  8009 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
