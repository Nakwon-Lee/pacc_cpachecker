scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_diqxxiy3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function jiffies_to_msecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_find_sta to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_shift_right to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_stopped to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_scuttle_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unpoison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25895 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            22551 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3344 (13%)
  Times precision was empty:       3284 (13%)
  Times precision was {false}:     634 (2%)
  Times result was cached:         20072 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1905 (7%)
  Times result was 'false':        10784 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         703173
  BDD entailment checks:           8227
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       5977
Number of predicates discovered:          5
Number of abstraction locations:          35
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         35535
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.00
Number of irrelevant predicates:          6797 (19%)
Number of preds handled by boolean abs:   2963 (8%)
  Total number of models for allsat:      1082
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.57

Time for post operator:                 85.996s
  Time for path formula creation:       84.712s
Time for strengthen operator:            2.660s
Time for prec operator:                494.313s
  Time for abstraction:                491.359s (Max:    11.918s, Count: 25895)
    Boolean abstraction:               314.583s
    Solving time:                      320.487s (Max:     9.605s)
    Model enumeration time:             36.413s
    Time for BDD construction:           0.071s (Max:     0.005s)
Time for merge operator:                15.432s
Time for coverage check:                 0.078s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):   356.906s

Number of path formula cache hits:   4066818 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.718s

Total number of created targets for pointer analysis: 654548
   Number of created targets for uf: *unsigned_short_int is 96
   Number of created targets for uf: *(struct_sk_buff)* is 5
   Number of created targets for uf: *unsigned_char is 34
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *_Bool is 15
   Number of created targets for uf: *unsigned_int is 1128
   Number of created targets for uf: *unsigned_long_int is 1061


Number of BDD nodes:                               220
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3030 (count: 26589, min: 0, max: 59, avg: 0.11)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.762s
  Time for transition matches:                         2.692s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      4413356 (count: 4413356, min: 1, max: 1, avg: 1.00) [1 x 4413356]

CPA algorithm statistics
------------------------
Number of iterations:            2998171
Max size of waitlist:            96
Average size of waitlist:        44
Number of computed successors:   3366770
Max successors for one state:    2
Number of times merged:          347473
Number of times stopped:         355558
Number of times breaked:         80

Total time for CPA algorithm:       702.721s (Max:   250.704s)
  Time for choose from waitlist:      0.816s
  Time for precision adjustment:    509.894s
  Time for transfer relation:       161.816s
  Time for merge operator:           18.358s
  Time for stop operator:             2.417s
  Time for adding to reached set:     4.194s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                 801 (count: 80, min: 2, max: 19, avg: 10.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 180.888s
  Counterexample analysis:                           174.661s (Max:    11.350s, Calls: 80)
    Refinement sat check:                            170.671s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.022s
  ARG update:                                          6.106s

Length of refined path (in blocks):                     798 (count: 80, min: 2, max: 19, avg: 9.98)
Number of affected states:                              666 (count: 80, min: 1, max: 18, avg: 8.32)
Length (states) of path with itp 'true':                 52 (count: 80, min: 0, max: 1, avg: 0.65)
Length (states) of path with itp non-trivial itp:       666 (count: 80, min: 1, max: 18, avg: 8.32)
Length (states) of path with itp 'false':                 1 (count: 80, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 80, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             586 (count: 80, min: 0, max: 17, avg: 7.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 325533
Max. size of reached set after ref.:  299724
Avg. size of reached set before ref.: 75390.06
Avg. size of reached set after ref.:  41700.73

Total time for CEGAR algorithm:     892.251s
Time for refinements:               187.016s
Average time for refinement:          2.337s
Max time for refinement:             13.727s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          3797
  Total lines:            10392
  Line coverage:          0.365
  Visited conditions:     974
  Total conditions:       3378
  Condition coverage:     0.288

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             305281
  Number of reached locations:   2807 (19%)
    Avg states per location:     108
    Max states per location:     9460 (at node N14473)
  Number of reached functions:   155 (33%)
  Number of partitions:          305280
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2050 (before line 8625), Function carl9170_op_sta_remove called from node N2920, stack depth 2 [65034f2b], stack [main, carl9170_op_sta_remove]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          8.061s
  Time for loading CPAs:          1.138s
  Time for loading parser:        0.497s
  Time for CFA construction:      6.308s
    Time for parsing file(s):     1.040s
    Time for AST to CFA:          2.250s
    Time for CFA sanity check:    0.847s
    Time for post-processing:     2.041s
      Time for var class.:        0.956s
Time for Analysis:              892.251s
CPU time for analysis:          892.250s
Total time for CPAchecker:      900.316s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              2.305s

Time for Garbage Collector:      39.262s (in 736 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1139MB (  1086 MiB) max;    490MB (   467 MiB) avg;   1152MB (  1098 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1158MB (  1104 MiB) max;    711MB (   678 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8656MB (  8255 MiB) max;   8473MB (  8080 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
