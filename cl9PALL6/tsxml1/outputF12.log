scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fb7nv4wg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function jiffies_to_msecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_scuttle_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_find_sta to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_shift_right to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_stopped to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 16653: Unsupported feature (recursion): err = carl9170_set_channel(ar, channel, _bw, 2); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            32955 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            31035 (94%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1920 (6%)
  Times precision was empty:       25450 (77%)
  Times precision was {false}:     388 (1%)
  Times result was cached:         6388 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      729 (2%)
  Times result was 'false':        1863 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         535047
  BDD entailment checks:           11079
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       2803
Number of predicates discovered:          5
Number of abstraction locations:          24
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         12563
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 11.25
Number of irrelevant predicates:          4164 (33%)
Number of preds handled by boolean abs:   1132 (9%)
  Total number of models for allsat:      672
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.92

Time for post operator:                 78.741s
  Time for path formula creation:       77.341s
Time for strengthen operator:            2.563s
Time for prec operator:                145.083s
  Time for abstraction:                142.893s (Max:     2.192s, Count: 32955)
    Boolean abstraction:                85.026s
    Solving time:                       99.842s (Max:     1.607s)
    Model enumeration time:              6.479s
    Time for BDD construction:           0.078s (Max:     0.018s)
Time for merge operator:                13.562s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):   106.321s

Number of path formula cache hits:   3487706 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    60.955s

Total number of created targets for pointer analysis: 573265
   Number of created targets for uf: *unsigned_short_int is 96
   Number of created targets for uf: *(struct_sk_buff)* is 15
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 34
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 168
   Number of created targets for uf: *unsigned_long_int is 1701


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1436 (count: 43073, min: 0, max: 49, avg: 0.03)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.743s
  Time for transition matches:                         2.207s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                      3762559 (count: 3762559, min: 1, max: 1, avg: 1.00) [1 x 3762559]

CPA algorithm statistics
------------------------
Number of iterations:            2529421
Max size of waitlist:            463
Average size of waitlist:        221
Number of computed successors:   2813992
Max successors for one state:    2
Number of times merged:          261984
Number of times stopped:         272739
Number of times breaked:         382

Total time for CPA algorithm:       335.368s (Max:    18.475s)
  Time for choose from waitlist:      0.604s
  Time for precision adjustment:    162.334s
  Time for transfer relation:       146.586s
  Time for merge operator:           15.806s
  Time for stop operator:             2.036s
  Time for adding to reached set:     3.474s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   382
Avg. length of target path (in blocks):                1994 (count: 382, min: 2, max: 11, avg: 5.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 260.423s
  Counterexample analysis:                           254.792s (Max:     6.671s, Calls: 382)
    Refinement sat check:                            244.989s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.085s
  ARG update:                                          5.110s

Length of refined path (in blocks):                    1988 (count: 382, min: 2, max: 11, avg: 5.20)
Number of affected states:                             1207 (count: 382, min: 1, max: 10, avg: 3.16)
Length (states) of path with itp 'true':                399 (count: 382, min: 0, max: 2, avg: 1.04)
Length (states) of path with itp non-trivial itp:      1207 (count: 382, min: 1, max: 10, avg: 3.16)
Length (states) of path with itp 'false':                 2 (count: 382, min: 0, max: 1, avg: 0.01)
Different non-trivial interpolants along paths:           0 (count: 382, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             825 (count: 382, min: 0, max: 9, avg: 2.16)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                382
Number of successful refinements:     382
Number of failed refinements:         0
Max. size of reached set before ref.: 137690
Max. size of reached set after ref.:  120154
Avg. size of reached set before ref.: 48295.24
Avg. size of reached set after ref.:  41832.19

Total time for CEGAR algorithm:     625.668s
Time for refinements:               276.048s
Average time for refinement:          0.722s
Max time for refinement:              6.828s

Code Coverage
-----------------------------
  Function coverage:      0.335
  Visited lines:          4213
  Total lines:            10392
  Line coverage:          0.405
  Visited conditions:     1182
  Total conditions:       3378
  Condition coverage:     0.350

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             70505
  Number of reached locations:   3204 (22%)
    Avg states per location:     22
    Max states per location:     2213 (at node N14473)
  Number of reached functions:   156 (34%)
  Number of partitions:          70503
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2947 (before line 9602), Function main called from node N2812, stack depth 1 [1f8a1b], stack [main]])
  Number of target states:       0
  Size of final wait list        367

Time for analysis setup:          7.438s
  Time for loading CPAs:          0.878s
  Time for loading parser:        0.532s
  Time for CFA construction:      5.905s
    Time for parsing file(s):     1.234s
    Time for AST to CFA:          1.976s
    Time for CFA sanity check:    0.687s
    Time for post-processing:     1.692s
      Time for var class.:        0.911s
Time for Analysis:              625.668s
CPU time for analysis:          625.650s
Total time for CPAchecker:      633.110s
Total CPU time for CPAchecker:  633.060s
Time for statistics:              1.104s

Time for Garbage Collector:      26.378s (in 577 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                752MB (   717 MiB) max;    340MB (   324 MiB) avg;    778MB (   742 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           871MB (   831 MiB) max;    499MB (   475 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8416MB (  8026 MiB) max;   8293MB (  7909 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
