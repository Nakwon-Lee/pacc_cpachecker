scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lv_5kkm_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function jiffies_to_msecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_find_sta to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_shift_right to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_stopped to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_scuttle_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 16653: Unsupported feature (recursion): err = carl9170_set_channel(ar, channel, _bw, 2); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1869 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1825 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (2%)
  Times precision was empty:       1779 (95%)
  Times precision was {false}:     46 (2%)
  Times result was cached:         8 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36 (2%)
  Times result was 'false':        55 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         43766
  BDD entailment checks:           946
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1445
Number of predicates discovered:          4
Number of abstraction locations:          6
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         96
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.17
Number of irrelevant predicates:          52 (54%)
Number of preds handled by boolean abs:   38 (40%)
  Total number of models for allsat:      9
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.25

Time for post operator:                 39.394s
  Time for path formula creation:       39.226s
Time for strengthen operator:            0.369s
Time for prec operator:                 18.079s
  Time for abstraction:                 17.792s (Max:     2.049s, Count: 1869)
    Boolean abstraction:                 7.382s
    Solving time:                       14.466s (Max:     1.755s)
    Model enumeration time:              0.655s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 9.003s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):    15.121s

Number of path formula cache hits:   15026 (5%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    37.338s

Total number of created targets for pointer analysis: 305738
   Number of created targets for uf: *unsigned_short_int is 96
   Number of created targets for uf: *(struct_sk_buff)* is 5
   Number of created targets for uf: *signed_int is 36
   Number of created targets for uf: *unsigned_char is 96
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *(unsigned_char)* is 36
   Number of created targets for uf: *_Bool is 533
   Number of created targets for uf: *unsigned_int is 481
   Number of created targets for uf: *unsigned_long_int is 2661


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          59 (count: 3207, min: 0, max: 10, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.674s
  Time for transition matches:                         0.407s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       296760 (count: 296760, min: 1, max: 1, avg: 1.00) [1 x 296760]

CPA algorithm statistics
------------------------
Number of iterations:            200445
Max size of waitlist:            64
Average size of waitlist:        33
Number of computed successors:   223036
Max successors for one state:    2
Number of times merged:          21410
Number of times stopped:         22352
Number of times breaked:         21

Total time for CPA algorithm:        79.556s (Max:    27.637s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     19.600s
  Time for transfer relation:        48.513s
  Time for merge operator:            9.518s
  Time for stop operator:             0.383s
  Time for adding to reached set:     0.443s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 148 (count: 21, min: 2, max: 9, avg: 7.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.691s
  Counterexample analysis:                            18.117s (Max:     1.680s, Calls: 21)
    Refinement sat check:                             17.417s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.006s
  ARG update:                                          0.505s

Length of refined path (in blocks):                     148 (count: 21, min: 2, max: 9, avg: 7.05)
Number of affected states:                              108 (count: 21, min: 1, max: 7, avg: 5.14)
Length (states) of path with itp 'true':                 19 (count: 21, min: 0, max: 1, avg: 0.90)
Length (states) of path with itp non-trivial itp:       108 (count: 21, min: 1, max: 7, avg: 5.14)
Length (states) of path with itp 'false':                 0 (count: 21, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 21, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              87 (count: 21, min: 0, max: 6, avg: 4.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 78742
Max. size of reached set after ref.:  50308
Avg. size of reached set before ref.: 38917.57
Avg. size of reached set after ref.:  31692.90

Total time for CEGAR algorithm:      99.855s
Time for refinements:                19.650s
Average time for refinement:          0.935s
Max time for refinement:              1.745s

Code Coverage
-----------------------------
  Function coverage:      0.323
  Visited lines:          3380
  Total lines:            10392
  Line coverage:          0.325
  Visited conditions:     732
  Total conditions:       3378
  Condition coverage:     0.217

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             48912
  Number of reached locations:   2244 (15%)
    Avg states per location:     21
    Max states per location:     2194 (at node N14473)
  Number of reached functions:   150 (32%)
  Number of partitions:          48911
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2947 (before line 9602), Function main called from node N2812, stack depth 1 [1f8a1b], stack [main]])
  Number of target states:       0
  Size of final wait list        37

Time for analysis setup:          7.922s
  Time for loading CPAs:          1.163s
  Time for loading parser:        0.625s
  Time for CFA construction:      6.018s
    Time for parsing file(s):     1.070s
    Time for AST to CFA:          2.237s
    Time for CFA sanity check:    0.718s
    Time for post-processing:     1.840s
      Time for var class.:        0.992s
Time for Analysis:               99.855s
CPU time for analysis:           99.850s
Total time for CPAchecker:      107.781s
Total CPU time for CPAchecker:  107.750s
Time for statistics:              0.624s

Time for Garbage Collector:       6.035s (in 181 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                345MB (   329 MiB) max;    155MB (   147 MiB) avg;    370MB (   352 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           502MB (   479 MiB) max;    240MB (   229 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8203MB (  7823 MiB) max;   8184MB (  7805 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
