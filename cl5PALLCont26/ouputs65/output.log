scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--staging--serqt_usb2--serqt_usb2_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_84jkbdwf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3593: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3596: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3599: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3605: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            166 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            112 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         54 (33%)
  Times precision was empty:       33 (20%)
  Times precision was {false}:     21 (13%)
  Times result was cached:         92 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20 (12%)
  Times result was 'false':        54 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         4211
  BDD entailment checks:           57
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       780
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         133
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.24
Number of irrelevant predicates:          63 (47%)
Number of preds handled by boolean abs:   20 (15%)
  Total number of models for allsat:      19
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                  2.325s
  Time for path formula creation:        2.255s
Time for strengthen operator:            0.126s
Time for prec operator:                  2.871s
  Time for abstraction:                  2.785s (Max:     1.765s, Count: 166)
    Boolean abstraction:                 2.013s
    Solving time:                        1.788s (Max:     1.437s)
    Model enumeration time:              0.282s
    Time for BDD construction:           0.025s (Max:     0.022s)
Time for merge operator:                 0.490s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     2.070s

Number of path formula cache hits:   37439 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.027s

Total number of created targets for pointer analysis: 8
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *_Bool is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          34 (count: 327, min: 0, max: 9, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.362s
Automaton transfers with branching:                0
Automaton transfer successors:                        44760 (count: 44760, min: 1, max: 1, avg: 1.00) [1 x 44760]

CPA algorithm statistics
------------------------
Number of iterations:            13786
Max size of waitlist:            38
Average size of waitlist:        16
Number of computed successors:   16107
Max successors for one state:    2
Number of times merged:          2077
Number of times stopped:         2129
Number of times breaked:         6

Total time for CPA algorithm:         8.856s (Max:     3.305s)
  Time for choose from waitlist:      0.060s
  Time for precision adjustment:      3.347s
  Time for transfer relation:         4.117s
  Time for merge operator:            0.694s
  Time for stop operator:             0.122s
  Time for adding to reached set:     0.125s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  30 (count: 6, min: 3, max: 6, avg: 5.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.274s
  Counterexample analysis:                             0.143s (Max:     0.052s, Calls: 6)
    Refinement sat check:                              0.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.003s
  ARG update:                                          0.095s

Length of refined path (in blocks):                      30 (count: 6, min: 3, max: 6, avg: 5.00)
Number of affected states:                               24 (count: 6, min: 2, max: 5, avg: 4.00)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        24 (count: 6, min: 2, max: 5, avg: 4.00)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              18 (count: 6, min: 1, max: 4, avg: 3.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 2323
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 1948.83
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       9.220s
Time for refinements:                 0.355s
Average time for refinement:          0.059s
Max time for refinement:              0.100s

Code Coverage
-----------------------------
  Function coverage:      0.794
  Visited lines:          4506
  Total lines:            5246
  Line coverage:          0.859
  Visited conditions:     442
  Total conditions:       540
  Condition coverage:     0.819

CPAchecker general statistics
-----------------------------
Number of program locations:     5857
Number of CFA edges:             6186
Number of relevant variables:    1563
Number of functions:             68
Number of loops:                 8
Size of reached set:             2250
  Number of reached locations:   1300 (22%)
    Avg states per location:     1
    Max states per location:     25 (at node N311)
  Number of reached functions:   54 (79%)
  Number of partitions:          2250
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.384s
  Time for loading CPAs:          1.150s
  Time for loading parser:        0.779s
  Time for CFA construction:      4.313s
    Time for parsing file(s):     1.093s
    Time for AST to CFA:          1.391s
    Time for CFA sanity check:    0.486s
    Time for post-processing:     1.213s
      Time for var class.:        0.586s
Time for Analysis:                9.220s
CPU time for analysis:            9.230s
Time for analyzing result:        0.002s
Total time for CPAchecker:       15.609s
Total CPU time for CPAchecker:   15.600s
Time for statistics:              0.143s

Time for Garbage Collector:       0.404s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     46MB (    44 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8107MB (  7731 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
