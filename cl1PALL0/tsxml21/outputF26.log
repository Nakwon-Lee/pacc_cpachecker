scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec4_product59_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__9s3ed9_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 315: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 379: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 398: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 509: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 557: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 603: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 612: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 941: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 778: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            35 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         17 (49%)
  Times precision was empty:       6 (17%)
  Times precision was {false}:     13 (37%)
  Times result was cached:         10 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (17%)
  Times result was 'false':        17 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         683
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       73
Number of predicates discovered:          7
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         73
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.84
Number of irrelevant predicates:          19 (26%)
Number of preds handled by boolean abs:   30 (41%)
  Total number of models for allsat:      45
  Max number of models for allsat:        13
  Avg number of models for allsat:        7.50

Time for post operator:                  0.481s
  Time for path formula creation:        0.465s
Time for strengthen operator:            0.027s
Time for prec operator:                  0.457s
  Time for abstraction:                  0.390s (Max:     0.034s, Count: 35)
    Boolean abstraction:                 0.114s
    Solving time:                        0.141s (Max:     0.016s)
    Model enumeration time:              0.021s
    Time for BDD construction:           0.024s (Max:     0.010s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.162s

Number of path formula cache hits:   2759 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.416s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               336
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         113 (count: 179, min: 0, max: 113, avg: 0.63)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.128s
Automaton transfers with branching:                0
Automaton transfer successors:                         4447 (count: 4447, min: 1, max: 1, avg: 1.00) [1 x 4447]

CPA algorithm statistics
------------------------
Number of iterations:            3423
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   3788
Max successors for one state:    2
Number of times merged:          335
Number of times stopped:         337
Number of times breaked:         3

Total time for CPA algorithm:         2.100s (Max:     0.819s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      0.705s
  Time for transfer relation:         1.049s
  Time for merge operator:            0.114s
  Time for stop operator:             0.046s
  Time for adding to reached set:     0.059s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  10 (count: 3, min: 2, max: 5, avg: 3.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.144s
  Counterexample analysis:                             0.077s (Max:     0.048s, Calls: 3)
    Refinement sat check:                              0.060s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.001s
  ARG update:                                          0.039s

Length of refined path (in blocks):                       9 (count: 3, min: 2, max: 4, avg: 3.00)
Number of affected states:                                6 (count: 3, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 3, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 1 (count: 3, min: 0, max: 1, avg: 0.33)
Different non-trivial interpolants along paths:           2 (count: 3, min: 0, max: 1, avg: 0.67)
Equal non-trivial interpolants along paths:               1 (count: 3, min: 0, max: 1, avg: 0.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1438
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 755.67
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       2.285s
Time for refinements:                 0.185s
Average time for refinement:          0.061s
Max time for refinement:              0.089s

Code Coverage
-----------------------------
  Function coverage:      0.744
  Visited lines:          150
  Total lines:            448
  Line coverage:          0.335
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     646
Number of CFA edges:             697
Number of relevant variables:    121
Number of functions:             39
Number of loops:                 5
Size of reached set:             1252
  Number of reached locations:   200 (31%)
    Avg states per location:     6
    Max states per location:     24 (at node N93)
  Number of reached functions:   29 (74%)
  Number of partitions:          1250
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N48 (before lines 122-169), Function test called from node N265, stack depth 3 [1b45c0e], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.428s
  Time for loading CPAs:          0.842s
  Time for loading parser:        0.764s
  Time for CFA construction:      1.542s
    Time for parsing file(s):     0.526s
    Time for AST to CFA:          0.412s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.316s
      Time for var class.:        0.118s
Time for Analysis:                2.285s
CPU time for analysis:            2.280s
Time for analyzing result:        0.013s
Total time for CPAchecker:        5.741s
Total CPU time for CPAchecker:    5.730s
Time for statistics:              0.113s

Time for Garbage Collector:       0.139s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    53 MiB) max;     31MB (    30 MiB) avg;     61MB (    59 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8075MB (  7701 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
