scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product55_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ps618cju/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 176: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 185: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 483: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 864: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1001: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 655: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       5 (15%)
  Times precision was {false}:     11 (33%)
  Times result was cached:         7 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (30%)
  Times result was 'false':        13 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         997
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         56
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.67
Number of irrelevant predicates:          15 (27%)
Number of preds handled by boolean abs:   29 (52%)
  Total number of models for allsat:      32
  Max number of models for allsat:        6
  Avg number of models for allsat:        3.20

Time for post operator:                  0.628s
  Time for path formula creation:        0.606s
Time for strengthen operator:            0.065s
Time for prec operator:                  0.412s
  Time for abstraction:                  0.377s (Max:     0.037s, Count: 33)
    Boolean abstraction:                 0.130s
    Solving time:                        0.137s (Max:     0.022s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.033s (Max:     0.009s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.151s

Number of path formula cache hits:   3738 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.556s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               253
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          56 (count: 175, min: 0, max: 56, avg: 0.32)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.164s
Automaton transfers with branching:                0
Automaton transfer successors:                         6277 (count: 6277, min: 1, max: 1, avg: 1.00) [1 x 6277]

CPA algorithm statistics
------------------------
Number of iterations:            4877
Max size of waitlist:            10
Average size of waitlist:        6
Number of computed successors:   5400
Max successors for one state:    2
Number of times merged:          493
Number of times stopped:         497
Number of times breaked:         3

Total time for CPA algorithm:         2.631s (Max:     0.766s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      0.679s
  Time for transfer relation:         1.372s
  Time for merge operator:            0.200s
  Time for stop operator:             0.070s
  Time for adding to reached set:     0.102s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   9 (count: 3, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.168s
  Counterexample analysis:                             0.085s (Max:     0.032s, Calls: 3)
    Refinement sat check:                              0.055s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.020s
  Precision update:                                    0.004s
  ARG update:                                          0.040s

Length of refined path (in blocks):                       9 (count: 3, min: 2, max: 4, avg: 3.00)
Number of affected states:                                6 (count: 3, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         6 (count: 3, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           3 (count: 3, min: 0, max: 2, avg: 1.00)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 1558
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 936.33
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       2.834s
Time for refinements:                 0.201s
Average time for refinement:          0.067s
Max time for refinement:              0.081s

Code Coverage
-----------------------------
  Function coverage:      0.725
  Visited lines:          169
  Total lines:            459
  Line coverage:          0.368
  Visited conditions:     50
  Total conditions:       80
  Condition coverage:     0.625

CPAchecker general statistics
-----------------------------
Number of program locations:     664
Number of CFA edges:             719
Number of relevant variables:    120
Number of functions:             40
Number of loops:                 5
Size of reached set:             2178
  Number of reached locations:   229 (34%)
    Avg states per location:     9
    Max states per location:     56 (at node N148)
  Number of reached functions:   29 (73%)
  Number of partitions:          2176
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N103 (before lines 202-249), Function test called from node N652, stack depth 3 [7d898981], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.615s
  Time for loading CPAs:          0.963s
  Time for loading parser:        0.740s
  Time for CFA construction:      1.679s
    Time for parsing file(s):     0.520s
    Time for AST to CFA:          0.458s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.346s
      Time for var class.:        0.149s
Time for Analysis:                2.834s
CPU time for analysis:            2.830s
Time for analyzing result:        0.013s
Total time for CPAchecker:        6.454s
Total CPU time for CPAchecker:    6.440s
Time for statistics:              0.161s

Time for Garbage Collector:       0.155s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 57MB (    54 MiB) max;     32MB (    31 MiB) avg;     61MB (    59 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8082MB (  7707 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
