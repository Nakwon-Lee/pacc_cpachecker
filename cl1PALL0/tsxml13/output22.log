scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec1_product46_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i6y65x1t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 538: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 570: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 584: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 904: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 950: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            45 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            23 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (49%)
  Times precision was empty:       7 (16%)
  Times precision was {false}:     17 (38%)
  Times result was cached:         7 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (31%)
  Times result was 'false':        19 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         813
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         63
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.03
Number of irrelevant predicates:          23 (37%)
Number of preds handled by boolean abs:   31 (49%)
  Total number of models for allsat:      23
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.64

Time for post operator:                  0.466s
  Time for path formula creation:        0.434s
Time for strengthen operator:            0.073s
Time for prec operator:                  0.479s
  Time for abstraction:                  0.428s (Max:     0.024s, Count: 45)
    Boolean abstraction:                 0.133s
    Solving time:                        0.163s (Max:     0.016s)
    Model enumeration time:              0.016s
    Time for BDD construction:           0.019s (Max:     0.011s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.179s

Number of path formula cache hits:   4207 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.419s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          42 (count: 225, min: 0, max: 42, avg: 0.19)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.076s
Automaton transfers with branching:                0
Automaton transfer successors:                         5440 (count: 5440, min: 1, max: 1, avg: 1.00) [1 x 5440]

CPA algorithm statistics
------------------------
Number of iterations:            4216
Max size of waitlist:            9
Average size of waitlist:        5
Number of computed successors:   4656
Max successors for one state:    2
Number of times merged:          401
Number of times stopped:         405
Number of times breaked:         5

Total time for CPA algorithm:         2.190s (Max:     0.468s)
  Time for choose from waitlist:      0.040s
  Time for precision adjustment:      0.707s
  Time for transfer relation:         1.039s
  Time for merge operator:            0.133s
  Time for stop operator:             0.054s
  Time for adding to reached set:     0.049s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  14 (count: 5, min: 2, max: 4, avg: 2.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.172s
  Counterexample analysis:                             0.100s (Max:     0.036s, Calls: 5)
    Refinement sat check:                              0.063s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.004s
  ARG update:                                          0.044s

Length of refined path (in blocks):                      13 (count: 5, min: 2, max: 3, avg: 2.60)
Number of affected states:                                8 (count: 5, min: 1, max: 2, avg: 1.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 5, min: 1, max: 2, avg: 1.60)
Length (states) of path with itp 'false':                 1 (count: 5, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           2 (count: 5, min: 0, max: 1, avg: 0.40)
Equal non-trivial interpolants along paths:               1 (count: 5, min: 0, max: 1, avg: 0.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1171
Max. size of reached set after ref.:  28
Avg. size of reached set before ref.: 713.80
Avg. size of reached set after ref.:  28.00

Total time for CEGAR algorithm:       2.403s
Time for refinements:                 0.213s
Average time for refinement:          0.042s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.703
  Visited lines:          133
  Total lines:            434
  Line coverage:          0.306
  Visited conditions:     40
  Total conditions:       72
  Condition coverage:     0.556

CPAchecker general statistics
-----------------------------
Number of program locations:     622
Number of CFA edges:             671
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             804
  Number of reached locations:   179 (29%)
    Avg states per location:     4
    Max states per location:     16 (at node N54)
  Number of reached functions:   26 (70%)
  Number of partitions:          803
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9 (before lines 55-102), Function test called from node N207, stack depth 3 [16b2bb0c], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.448s
  Time for loading CPAs:          0.885s
  Time for loading parser:        0.785s
  Time for CFA construction:      1.584s
    Time for parsing file(s):     0.565s
    Time for AST to CFA:          0.396s
    Time for CFA sanity check:    0.109s
    Time for post-processing:     0.311s
      Time for var class.:        0.128s
Time for Analysis:                2.403s
CPU time for analysis:            2.400s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.857s
Total CPU time for CPAchecker:    5.850s
Time for statistics:              0.133s

Time for Garbage Collector:       0.132s (in 5 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     31MB (    29 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
