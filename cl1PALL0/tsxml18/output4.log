scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_productSimulator_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4jwtrp3f/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            41 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            21 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (49%)
  Times precision was empty:       8 (20%)
  Times precision was {false}:     22 (54%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (27%)
  Times result was 'false':        19 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         3479
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       93
Number of predicates discovered:          11
Number of abstraction locations:          3
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         111
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 3.36
Number of irrelevant predicates:          22 (20%)
Number of preds handled by boolean abs:   89 (80%)
  Total number of models for allsat:      272
  Max number of models for allsat:        43
  Avg number of models for allsat:        24.73

Time for post operator:                  1.159s
  Time for path formula creation:        1.064s
Time for strengthen operator:            0.082s
Time for prec operator:                  1.169s
  Time for abstraction:                  1.055s (Max:     0.096s, Count: 41)
    Boolean abstraction:                 0.472s
    Solving time:                        0.392s (Max:     0.021s)
    Model enumeration time:              0.199s
    Time for BDD construction:           0.127s (Max:     0.035s)
Time for merge operator:                 0.268s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.591s

Number of path formula cache hits:   15539 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.971s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         257 (count: 343, min: 0, max: 74, avg: 0.75)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.316s
Automaton transfers with branching:                0
Automaton transfer successors:                        22311 (count: 22311, min: 1, max: 1, avg: 1.00) [1 x 22311]

CPA algorithm statistics
------------------------
Number of iterations:            17722
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   19494
Max successors for one state:    2
Number of times merged:          1733
Number of times stopped:         1735
Number of times breaked:         4

Total time for CPA algorithm:         5.669s (Max:     1.641s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:      1.627s
  Time for transfer relation:         2.681s
  Time for merge operator:            0.499s
  Time for stop operator:             0.154s
  Time for adding to reached set:     0.217s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 2, max: 5, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.307s
  Counterexample analysis:                             0.152s (Max:     0.057s, Calls: 4)
    Refinement sat check:                              0.118s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.013s
  ARG update:                                          0.102s

Length of refined path (in blocks):                      11 (count: 4, min: 2, max: 4, avg: 2.75)
Number of affected states:                                7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 1, max: 3, avg: 1.75)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           2 (count: 4, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               1 (count: 4, min: 0, max: 1, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 6242
Max. size of reached set after ref.:  56
Avg. size of reached set before ref.: 3146.75
Avg. size of reached set after ref.:  56.00

Total time for CEGAR algorithm:       6.057s
Time for refinements:                 0.388s
Average time for refinement:          0.097s
Max time for refinement:              0.140s

Code Coverage
-----------------------------
  Function coverage:      0.809
  Visited lines:          211
  Total lines:            505
  Line coverage:          0.418
  Visited conditions:     62
  Total conditions:       94
  Condition coverage:     0.660

CPAchecker general statistics
-----------------------------
Number of program locations:     737
Number of CFA edges:             811
Number of relevant variables:    133
Number of functions:             47
Number of loops:                 5
Size of reached set:             5378
  Number of reached locations:   272 (37%)
    Avg states per location:     19
    Max states per location:     162 (at node N536)
  Number of reached functions:   38 (81%)
  Number of partitions:          5376
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N483 (before lines 695-752), Function test called from node N117, stack depth 3 [5b367418], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.410s
  Time for loading CPAs:          0.893s
  Time for loading parser:        0.756s
  Time for CFA construction:      1.540s
    Time for parsing file(s):     0.548s
    Time for AST to CFA:          0.371s
    Time for CFA sanity check:    0.107s
    Time for post-processing:     0.319s
      Time for var class.:        0.129s
Time for Analysis:                6.057s
CPU time for analysis:            6.060s
Time for analyzing result:        0.014s
Total time for CPAchecker:        9.473s
Total CPU time for CPAchecker:    9.460s
Time for statistics:              0.211s

Time for Garbage Collector:       0.226s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     35MB (    34 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8099MB (  7724 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
