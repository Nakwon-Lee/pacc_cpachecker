scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_productSimulator_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qg81s9be/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 100: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 146: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 155: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 259: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 271: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 633: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 679: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 991: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1055: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1074: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 470: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            33 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (48%)
  Times precision was empty:       4 (12%)
  Times precision was {false}:     18 (55%)
  Times result was cached:         4 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7 (21%)
  Times result was 'false':        17 (52%)
Number of strengthen sat checks:   0
Number of coverage checks:         2774
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       93
Number of predicates discovered:          10
Number of abstraction locations:          3
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         79
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 3.16
Number of irrelevant predicates:          20 (25%)
Number of preds handled by boolean abs:   49 (62%)
  Total number of models for allsat:      142
  Max number of models for allsat:        43
  Avg number of models for allsat:        20.29

Time for post operator:                  1.114s
  Time for path formula creation:        1.052s
Time for strengthen operator:            0.073s
Time for prec operator:                  0.970s
  Time for abstraction:                  0.834s (Max:     0.120s, Count: 33)
    Boolean abstraction:                 0.276s
    Solving time:                        0.303s (Max:     0.022s)
    Model enumeration time:              0.119s
    Time for BDD construction:           0.073s (Max:     0.036s)
Time for merge operator:                 0.279s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.422s

Number of path formula cache hits:   10739 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.981s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               913
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         129 (count: 237, min: 0, max: 69, avg: 0.54)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.296s
Automaton transfers with branching:                0
Automaton transfer successors:                        17865 (count: 17865, min: 1, max: 1, avg: 1.00) [1 x 17865]

CPA algorithm statistics
------------------------
Number of iterations:            14174
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   15590
Max successors for one state:    2
Number of times merged:          1383
Number of times stopped:         1384
Number of times breaked:         4

Total time for CPA algorithm:         5.085s (Max:     1.431s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:      1.398s
  Time for transfer relation:         2.417s
  Time for merge operator:            0.447s
  Time for stop operator:             0.154s
  Time for adding to reached set:     0.190s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  10 (count: 4, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.269s
  Counterexample analysis:                             0.151s (Max:     0.055s, Calls: 4)
    Refinement sat check:                              0.103s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.003s
  ARG update:                                          0.078s

Length of refined path (in blocks):                       9 (count: 4, min: 2, max: 3, avg: 2.25)
Number of affected states:                                5 (count: 4, min: 1, max: 2, avg: 1.25)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 4, min: 1, max: 2, avg: 1.25)
Length (states) of path with itp 'false':                 1 (count: 4, min: 0, max: 1, avg: 0.25)
Different non-trivial interpolants along paths:           1 (count: 4, min: 0, max: 1, avg: 0.25)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 3600
Max. size of reached set after ref.:  56
Avg. size of reached set before ref.: 2259.00
Avg. size of reached set after ref.:  56.00

Total time for CEGAR algorithm:       5.440s
Time for refinements:                 0.355s
Average time for refinement:          0.088s
Max time for refinement:              0.114s

Code Coverage
-----------------------------
  Function coverage:      0.809
  Visited lines:          211
  Total lines:            505
  Line coverage:          0.418
  Visited conditions:     62
  Total conditions:       94
  Condition coverage:     0.660

CPAchecker general statistics
-----------------------------
Number of program locations:     737
Number of CFA edges:             811
Number of relevant variables:    133
Number of functions:             47
Number of loops:                 5
Size of reached set:             5378
  Number of reached locations:   272 (37%)
    Avg states per location:     19
    Max states per location:     162 (at node N536)
  Number of reached functions:   38 (81%)
  Number of partitions:          5376
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N483 (before lines 695-752), Function test called from node N117, stack depth 3 [5b367418], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.665s
  Time for loading CPAs:          0.918s
  Time for loading parser:        0.816s
  Time for CFA construction:      1.702s
    Time for parsing file(s):     0.612s
    Time for AST to CFA:          0.420s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.372s
      Time for var class.:        0.159s
Time for Analysis:                5.441s
CPU time for analysis:            5.430s
Time for analyzing result:        0.012s
Total time for CPAchecker:        9.111s
Total CPU time for CPAchecker:    9.090s
Time for statistics:              0.237s

Time for Garbage Collector:       0.203s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     35MB (    33 MiB) avg;     63MB (    61 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8093MB (  7718 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
