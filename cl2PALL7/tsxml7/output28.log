scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83781d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7yo327su/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7822: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2360: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_word_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            819 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            91 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         728 (89%)
  Times precision was empty:       87 (11%)
  Times precision was {false}:     727 (89%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (1%)
  Times result was 'false':        722 (88%)
Number of strengthen sat checks:   0
Number of coverage checks:         5624
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       601
Number of predicates discovered:          6
Number of abstraction locations:          2
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         742
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 1.01
Number of irrelevant predicates:          727 (98%)
Number of preds handled by boolean abs:   15 (2%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.199s
  Time for path formula creation:        5.078s
Time for strengthen operator:            0.189s
Time for prec operator:                  8.851s
  Time for abstraction:                  8.663s (Max:     0.136s, Count: 819)
    Boolean abstraction:                 0.359s
    Solving time:                        4.684s (Max:     0.081s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.009s (Max:     0.007s)
Time for merge operator:                 1.191s
Time for coverage check:                 0.015s
Total time for SMT solver (w/o itp):     4.703s

Number of path formula cache hits:   27709 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.311s

Total number of created targets for pointer analysis: 181
   Number of created targets for uf: *unsigned_short_int is 14
   Number of created targets for uf: *unsigned_char is 11


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          75 (count: 4503, min: 0, max: 25, avg: 0.02)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.809s
  Time for transition matches:                         0.195s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                        45699 (count: 45699, min: 1, max: 1, avg: 1.00) [1 x 45699]

CPA algorithm statistics
------------------------
Number of iterations:            30733
Max size of waitlist:            105
Average size of waitlist:        96
Number of computed successors:   34830
Max successors for one state:    2
Number of times merged:          2812
Number of times stopped:         2812
Number of times breaked:         5

Total time for CPA algorithm:        20.792s (Max:     7.050s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:      9.705s
  Time for transfer relation:         8.186s
  Time for merge operator:            1.480s
  Time for stop operator:             0.179s
  Time for adding to reached set:     0.307s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  10 (count: 5, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.518s
  Counterexample analysis:                             0.324s (Max:     0.083s, Calls: 5)
    Refinement sat check:                              0.281s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.007s
  ARG update:                                          0.154s

Length of refined path (in blocks):                      10 (count: 5, min: 2, max: 2, avg: 2.00)
Number of affected states:                                5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 5969
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 3684.40
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      21.434s
Time for refinements:                 0.642s
Average time for refinement:          0.128s
Max time for refinement:              0.160s

Code Coverage
-----------------------------
  Function coverage:      0.588
  Visited lines:          2838
  Total lines:            4373
  Line coverage:          0.649
  Visited conditions:     700
  Total conditions:       1498
  Condition coverage:     0.467

CPAchecker general statistics
-----------------------------
Number of program locations:     5805
Number of CFA edges:             6836
Number of relevant variables:    928
Number of functions:             148
Number of loops:                 9
Size of reached set:             12914
  Number of reached locations:   1719 (30%)
    Avg states per location:     7
    Max states per location:     304 (at node N4961)
  Number of reached functions:   87 (59%)
  Number of partitions:          12914
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        102

Time for analysis setup:          8.227s
  Time for loading CPAs:          1.179s
  Time for loading parser:        0.905s
  Time for CFA construction:      5.969s
    Time for parsing file(s):     1.123s
    Time for AST to CFA:          1.828s
    Time for CFA sanity check:    0.545s
    Time for post-processing:     2.373s
      Time for var class.:        0.841s
Time for Analysis:               21.434s
CPU time for analysis:           21.430s
Total time for CPAchecker:       29.670s
Total CPU time for CPAchecker:   29.660s
Time for statistics:              0.425s

Time for Garbage Collector:       0.834s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    98 MiB) max;     54MB (    52 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    32 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8115MB (  7739 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
