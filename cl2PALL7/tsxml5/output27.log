scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pfzxqwn0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4904: Unsupported feature (recursion): ret = tda18271_set_config(fe, enable); (line was originally pointer call(tda18271_set_config) ret = (*(fe->ops.i2c_gate_ctrl))(fe, enable);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            20 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            5 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (75%)
  Times precision was empty:       2 (10%)
  Times precision was {false}:     14 (70%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (20%)
  Times result was 'false':        11 (55%)
Number of strengthen sat checks:   0
Number of coverage checks:         58
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       58
Number of predicates discovered:          5
Number of abstraction locations:          2
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         24
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          14 (58%)
Number of preds handled by boolean abs:   10 (42%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.061s
  Time for path formula creation:        2.056s
Time for strengthen operator:            0.016s
Time for prec operator:                  1.696s
  Time for abstraction:                  1.675s (Max:     0.497s, Count: 20)
    Boolean abstraction:                 1.293s
    Solving time:                        1.227s (Max:     0.341s)
    Model enumeration time:              0.054s
    Time for BDD construction:           0.006s (Max:     0.005s)
Time for merge operator:                 0.075s
Time for coverage check:                 0.000s
Total time for SMT solver (w/o itp):     1.281s

Number of path formula cache hits:   110 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.017s

Total number of created targets for pointer analysis: 1721
   Number of created targets for uf: *unsigned_char is 343
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 260


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          50 (count: 129, min: 0, max: 50, avg: 0.39)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                         1242 (count: 1242, min: 1, max: 1, avg: 1.00) [1 x 1242]

CPA algorithm statistics
------------------------
Number of iterations:            310
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   371
Max successors for one state:    2
Number of times merged:          29
Number of times stopped:         29
Number of times breaked:         4

Total time for CPA algorithm:         4.138s (Max:     1.791s)
  Time for choose from waitlist:      0.001s
  Time for precision adjustment:      1.757s
  Time for transfer relation:         2.221s
  Time for merge operator:            0.079s
  Time for stop operator:             0.004s
  Time for adding to reached set:     0.025s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                   8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.880s
  Counterexample analysis:                             0.853s (Max:     0.309s, Calls: 4)
    Refinement sat check:                              0.804s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.003s
  ARG update:                                          0.006s

Length of refined path (in blocks):                       8 (count: 4, min: 2, max: 2, avg: 2.00)
Number of affected states:                                4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 39
Max. size of reached set after ref.:  7
Avg. size of reached set before ref.: 30.00
Avg. size of reached set after ref.:  7.00

Total time for CEGAR algorithm:       5.045s
Time for refinements:                 0.906s
Average time for refinement:          0.226s
Max time for refinement:              0.357s

Code Coverage
-----------------------------
  Function coverage:      0.152
  Visited lines:          816
  Total lines:            3050
  Line coverage:          0.268
  Visited conditions:     90
  Total conditions:       906
  Condition coverage:     0.099

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             240
  Number of reached locations:   225 (5%)
    Avg states per location:     1
    Max states per location:     5 (at node N3480)
  Number of reached functions:   20 (15%)
  Number of partitions:          240
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        15

Time for analysis setup:          6.571s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.758s
  Time for CFA construction:      4.667s
    Time for parsing file(s):     1.136s
    Time for AST to CFA:          1.734s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     1.284s
      Time for var class.:        0.743s
Time for Analysis:                5.045s
CPU time for analysis:            5.040s
Total time for CPAchecker:       11.626s
Total CPU time for CPAchecker:   11.600s
Time for statistics:              0.096s

Time for Garbage Collector:       0.279s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     40MB (    38 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     28MB (    27 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8097MB (  7722 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
