scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--usb--tm6000--tm6000.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hbsse6h9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7433: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8659: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9290: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9405: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9408: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9411: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6331;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6331;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6331;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6331;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 12879: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12937: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12995: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13659: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14358: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11633: Function pointer *(__sd->ops->tuner->s_radio) with type int (*)(struct v4l2_subdev *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9556: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11348: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11385: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8475: Function pointer *(ops->fillbuf) with type int (*)(struct tm6000_core *, char *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8602: Function pointer *(ops->fini) with type int (*)(struct tm6000_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6709: Function pointer *(__sd___1->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6681: Function pointer *(__sd___0->ops->tuner->s_config) with type int (*)(struct v4l2_subdev *, const struct v4l2_priv_tun_config *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6639: Function pointer *(__sd->ops->tuner->s_type_addr) with type int (*)(struct v4l2_subdev *, struct tuner_setup *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7933: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6936: Function pointer *(__sd___0->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6913: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8566: Function pointer *(ops->init) with type int (*)(struct tm6000_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8507: Function pointer *(ops->init) with type int (*)(struct tm6000_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8534: Function pointer *(ops->fini) with type int (*)(struct tm6000_core *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11234: Function pointer *(__sd->ops->tuner->g_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11139: Function pointer *(__sd->ops->tuner->g_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11291: Function pointer *(__sd->ops->tuner->s_frequency) with type int (*)(struct v4l2_subdev *, struct v4l2_frequency *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10916: Function pointer *(__sd->ops->core->s_std) with type int (*)(struct v4l2_subdev *, v4l2_std_id ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11189: Function pointer *(__sd->ops->tuner->s_tuner) with type int (*)(struct v4l2_subdev *, struct v4l2_tuner *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function video_ioctl2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9556: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_streamoff to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_tm6000_template_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_iolock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_vmalloc_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_add_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24599 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12215 (50%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12384 (50%)
  Times precision was empty:       9357 (38%)
  Times precision was {false}:     5006 (20%)
  Times result was cached:         9208 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1028 (4%)
  Times result was 'false':        14330 (58%)
Number of strengthen sat checks:   0
Number of coverage checks:         182603
  BDD entailment checks:           271
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       815
Number of predicates discovered:          21
Number of abstraction locations:          5
Max number of predicates per location:    18
Avg number of predicates per location:    8
Total predicates per abstraction:         31444
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 5.21
Number of irrelevant predicates:          15412 (49%)
Number of preds handled by boolean abs:   5965 (19%)
  Total number of models for allsat:      1576
  Max number of models for allsat:        384
  Avg number of models for allsat:        1.53

Time for post operator:                 29.248s
  Time for path formula creation:       28.400s
Time for strengthen operator:            1.175s
Time for prec operator:                756.623s
  Time for abstraction:                755.402s (Max:   176.420s, Count: 24599)
    Boolean abstraction:               528.049s
    Solving time:                      319.736s (Max:     8.738s)
    Model enumeration time:            331.276s
    Time for BDD construction:           0.197s (Max:     0.058s)
Time for merge operator:                 7.355s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):   651.013s

Number of path formula cache hits:   1063144 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.610s

Total number of created targets for pointer analysis: 123051
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct_video_device)* is 2
   Number of created targets for uf: *(struct_usb_device)* is 6
   Number of created targets for uf: *(struct_tm6000_fh)* is 4
   Number of created targets for uf: *enum_tm6000_mux is 581
   Number of created targets for uf: *enum_tm6000_itype is 291
   Number of created targets for uf: *enum_v4l2_buf_type is 9
   Number of created targets for uf: *unsigned_long_int is 135
   Number of created targets for uf: *(struct_tm6000_IR)* is 2
   Number of created targets for uf: *signed_int is 1403
   Number of created targets for uf: *(char)* is 85
   Number of created targets for uf: *unsigned_char is 44615
   Number of created targets for uf: *(struct_list_head)* is 4
   Number of created targets for uf: *(struct_tm6000_buffer)* is 4
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_long_long_int is 99
   Number of created targets for uf: *enum_tm6000_devtype is 75
   Number of created targets for uf: *unsigned_int is 513
   Number of created targets for uf: *(struct_tm6000_core)* is 9
   Number of created targets for uf: *(struct_device)* is 7


Number of BDD nodes:                               16638
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3343 (count: 47772, min: 0, max: 94, avg: 0.07)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.046s
  Time for transition matches:                         0.842s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.037s
Automaton transfers with branching:                0
Automaton transfer successors:                      1054199 (count: 1054199, min: 1, max: 1, avg: 1.00) [1 x 1054199]

CPA algorithm statistics
------------------------
Number of iterations:            760052
Max size of waitlist:            675
Average size of waitlist:        256
Number of computed successors:   875923
Max successors for one state:    2
Number of times merged:          91166
Number of times stopped:         91303
Number of times breaked:         60

Total time for CPA algorithm:       822.833s (Max:   230.823s)
  Time for choose from waitlist:      0.440s
  Time for precision adjustment:    762.665s
  Time for transfer relation:        45.263s
  Time for merge operator:            8.734s
  Time for stop operator:             1.114s
  Time for adding to reached set:     2.066s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   60
Avg. length of target path (in blocks):                 272 (count: 60, min: 2, max: 7, avg: 4.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  66.401s
  Counterexample analysis:                            64.265s (Max:     2.197s, Calls: 60)
    Refinement sat check:                             61.666s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.029s
  ARG update:                                          1.819s

Length of refined path (in blocks):                     267 (count: 60, min: 2, max: 7, avg: 4.45)
Number of affected states:                              107 (count: 60, min: 1, max: 4, avg: 1.78)
Length (states) of path with itp 'true':                100 (count: 60, min: 0, max: 5, avg: 1.67)
Length (states) of path with itp non-trivial itp:       107 (count: 60, min: 1, max: 4, avg: 1.78)
Length (states) of path with itp 'false':                 5 (count: 60, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:          10 (count: 60, min: 0, max: 2, avg: 0.17)
Equal non-trivial interpolants along paths:              37 (count: 60, min: 0, max: 3, avg: 0.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                60
Number of successful refinements:     60
Number of failed refinements:         0
Max. size of reached set before ref.: 45904
Max. size of reached set after ref.:  42570
Avg. size of reached set before ref.: 34560.73
Avg. size of reached set after ref.:  22707.73

Total time for CEGAR algorithm:     891.904s
Time for refinements:                68.010s
Average time for refinement:          1.133s
Max time for refinement:              2.252s

Code Coverage
-----------------------------
  Function coverage:      0.466
  Visited lines:          2881
  Total lines:            5624
  Line coverage:          0.512
  Visited conditions:     730
  Total conditions:       1694
  Condition coverage:     0.431

CPAchecker general statistics
-----------------------------
Number of program locations:     7853
Number of CFA edges:             9062
Number of relevant variables:    1029
Number of functions:             320
Number of loops:                 53
Size of reached set:             59110
  Number of reached locations:   1905 (24%)
    Avg states per location:     31
    Max states per location:     943 (at node N6642)
  Number of reached functions:   149 (47%)
  Number of partitions:          59107
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N942 (before line 7255), Function main called from node N926, stack depth 1 [24fc2c80], stack [main]])
  Number of target states:       0
  Size of final wait list        631

Time for analysis setup:          8.931s
  Time for loading CPAs:          1.217s
  Time for loading parser:        0.743s
  Time for CFA construction:      6.805s
    Time for parsing file(s):     1.430s
    Time for AST to CFA:          2.383s
    Time for CFA sanity check:    0.613s
    Time for post-processing:     2.131s
      Time for var class.:        1.014s
Time for Analysis:              891.904s
CPU time for analysis:          891.850s
Total time for CPAchecker:      900.850s
Total CPU time for CPAchecker:  900.780s
Time for statistics:              0.830s

Time for Garbage Collector:      12.041s (in 919 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                181MB (   172 MiB) max;    116MB (   110 MiB) avg;    188MB (   179 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           189MB (   180 MiB) max;    163MB (   155 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8685MB (  8283 MiB) max;   8421MB (  8031 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
