scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8dh9zzbu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            299075 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            177062 (59%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         122013 (41%)
  Times precision was empty:       30728 (10%)
  Times precision was {false}:     7465 (2%)
  Times result was cached:         252829 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8053 (3%)
  Times result was 'false':        139366 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         879083
  BDD entailment checks:           121287
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       98
Number of predicates discovered:          6
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         707142
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 45.57
Number of irrelevant predicates:          122541 (17%)
Number of preds handled by boolean abs:   31847 (5%)
  Total number of models for allsat:      5901
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.73

Time for post operator:                 77.190s
  Time for path formula creation:       72.804s
Time for strengthen operator:            5.948s
Time for prec operator:                649.877s
  Time for abstraction:                641.842s (Max:    15.232s, Count: 299075)
    Boolean abstraction:               274.859s
    Solving time:                      271.450s (Max:     0.663s)
    Model enumeration time:             11.453s
    Time for BDD construction:           0.345s (Max:     0.007s)
Time for merge operator:                10.752s
Time for coverage check:                 0.250s
  Time for BDD entailment checks:        0.168s
Total time for SMT solver (w/o itp):   282.903s

Number of path formula cache hits:   6547779 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.587s

Total number of created targets for pointer analysis: 513858
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 147965


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14001 (count: 245159, min: 0, max: 440, avg: 0.06)
Time for BDD node cleanup:                             0.061s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.606s
  Time for transition matches:                         5.239s
  Time for transition assertions:                      0.046s
  Time for transition actions:                         0.123s
Automaton transfers with branching:                0
Automaton transfer successors:                      6890189 (count: 6890189, min: 1, max: 1, avg: 1.00) [1 x 6890189]

CPA algorithm statistics
------------------------
Number of iterations:            4946217
Max size of waitlist:            20
Average size of waitlist:        12
Number of computed successors:   5586022
Max successors for one state:    2
Number of times merged:          378898
Number of times stopped:         500138
Number of times breaked:         39

Total time for CPA algorithm:       892.876s (Max:   875.741s)
  Time for choose from waitlist:      2.211s
  Time for precision adjustment:    683.920s
  Time for transfer relation:       155.684s
  Time for merge operator:           17.002s
  Time for stop operator:             7.117s
  Time for adding to reached set:    13.178s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 245 (count: 39, min: 1, max: 15, avg: 6.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.978s
  Counterexample analysis:                             1.782s (Max:     0.172s, Calls: 39)
    Refinement sat check:                              1.588s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.047s
  ARG update:                                          0.103s

Length of refined path (in blocks):                     207 (count: 39, min: 1, max: 15, avg: 5.31)
Number of affected states:                              131 (count: 39, min: 0, max: 14, avg: 3.36)
Length (states) of path with itp 'true':                 37 (count: 39, min: 0, max: 12, avg: 0.95)
Length (states) of path with itp non-trivial itp:       131 (count: 39, min: 0, max: 14, avg: 3.36)
Length (states) of path with itp 'false':                 7 (count: 39, min: 0, max: 1, avg: 0.18)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             102 (count: 39, min: 0, max: 13, avg: 2.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 1581
Max. size of reached set after ref.:  1288
Avg. size of reached set before ref.: 657.28
Avg. size of reached set after ref.:  165.13

Total time for CEGAR algorithm:     895.007s
Time for refinements:                 2.107s
Average time for refinement:          0.054s
Max time for refinement:              0.181s

Code Coverage
-----------------------------
  Function coverage:      0.318
  Visited lines:          1033
  Total lines:            1760
  Line coverage:          0.587
  Visited conditions:     134
  Total conditions:       394
  Condition coverage:     0.340

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             4927325
  Size of final wait list        11

Time for analysis setup:          5.213s
  Time for loading CPAs:          0.953s
  Time for loading parser:        0.712s
  Time for CFA construction:      3.369s
    Time for parsing file(s):     0.948s
    Time for AST to CFA:          1.234s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.781s
      Time for var class.:        0.368s
Time for Analysis:              895.008s
CPU time for analysis:          894.960s
Total time for CPAchecker:      900.229s
Total CPU time for CPAchecker:  900.180s
Time for statistics:             23.077s

Time for Garbage Collector:     119.360s (in 426 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               4819MB (  4595 MiB) max;   1818MB (  1734 MiB) avg;   4920MB (  4692 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2562MB (  2443 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8412MB (  8022 MiB) max;   8234MB (  7852 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
