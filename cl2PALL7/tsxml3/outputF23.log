scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6yk8kidk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            365708 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            210564 (58%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         155144 (42%)
  Times precision was empty:       323 (0%)
  Times precision was {false}:     4266 (1%)
  Times result was cached:         352684 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8435 (2%)
  Times result was 'false':        171444 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         1029025
  BDD entailment checks:           109177
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          7
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         995761
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 78.40
Number of irrelevant predicates:          155695 (16%)
Number of preds handled by boolean abs:   33266 (3%)
  Total number of models for allsat:      6168
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.73

Time for post operator:                 83.279s
  Time for path formula creation:       79.454s
Time for strengthen operator:            7.934s
Time for prec operator:                572.996s
  Time for abstraction:                562.087s (Max:    21.191s, Count: 365708)
    Boolean abstraction:               262.285s
    Solving time:                      256.533s (Max:     1.128s)
    Model enumeration time:             10.149s
    Time for BDD construction:           0.378s (Max:     0.009s)
Time for merge operator:                14.757s
Time for coverage check:                 0.269s
  Time for BDD entailment checks:        0.195s
Total time for SMT solver (w/o itp):   266.682s

Number of path formula cache hits:   7692610 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    44.320s

Total number of created targets for pointer analysis: 436224
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 266
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 125


Number of BDD nodes:                               259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14306 (count: 185807, min: 0, max: 694, avg: 0.08)
Time for BDD node cleanup:                             0.070s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.904s
  Time for transition matches:                         6.631s
  Time for transition assertions:                      0.035s
  Time for transition actions:                         0.089s
Automaton transfers with branching:                0
Automaton transfer successors:                      7878578 (count: 7878578, min: 1, max: 1, avg: 1.00) [1 x 7878578]

CPA algorithm statistics
------------------------
Number of iterations:            5869418
Max size of waitlist:            34
Average size of waitlist:        25
Number of computed successors:   6610467
Max successors for one state:    2
Number of times merged:          459924
Number of times stopped:         569062
Number of times breaked:         41

Total time for CPA algorithm:       892.067s (Max:   873.796s)
  Time for choose from waitlist:      2.500s
  Time for precision adjustment:    625.345s
  Time for transfer relation:       179.683s
  Time for merge operator:           21.049s
  Time for stop operator:             7.200s
  Time for adding to reached set:    18.779s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                 322 (count: 41, min: 1, max: 18, avg: 7.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.623s
  Counterexample analysis:                             2.394s (Max:     0.172s, Calls: 41)
    Refinement sat check:                              2.104s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.035s
  ARG update:                                          0.112s

Length of refined path (in blocks):                     282 (count: 41, min: 1, max: 18, avg: 6.88)
Number of affected states:                              188 (count: 41, min: 0, max: 17, avg: 4.59)
Length (states) of path with itp 'true':                 53 (count: 41, min: 0, max: 13, avg: 1.29)
Length (states) of path with itp non-trivial itp:       188 (count: 41, min: 0, max: 17, avg: 4.59)
Length (states) of path with itp 'false':                 8 (count: 41, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           1 (count: 41, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             157 (count: 41, min: 0, max: 16, avg: 3.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 2175
Max. size of reached set after ref.:  1704
Avg. size of reached set before ref.: 890.34
Avg. size of reached set after ref.:  254.66

Total time for CEGAR algorithm:     894.911s
Time for refinements:                 2.832s
Average time for refinement:          0.069s
Max time for refinement:              0.190s

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          1309
  Total lines:            1760
  Line coverage:          0.744
  Visited conditions:     208
  Total conditions:       394
  Condition coverage:     0.528

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             5843898
  Size of final wait list        25

Time for analysis setup:          5.325s
  Time for loading CPAs:          1.122s
  Time for loading parser:        0.745s
  Time for CFA construction:      3.306s
    Time for parsing file(s):     0.968s
    Time for AST to CFA:          1.094s
    Time for CFA sanity check:    0.211s
    Time for post-processing:     0.827s
      Time for var class.:        0.389s
Time for Analysis:              894.911s
CPU time for analysis:          894.860s
Total time for CPAchecker:      900.241s
Total CPU time for CPAchecker:  900.180s
Time for statistics:             94.400s

Time for Garbage Collector:     217.289s (in 340 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               5292MB (  5047 MiB) max;   2134MB (  2035 MiB) avg;   5414MB (  5163 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          5414MB (  5163 MiB) max;   2878MB (  2745 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8342MB (  7955 MiB) max;   8223MB (  7842 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
