scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_64y512z6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            239079 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            163261 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75818 (32%)
  Times precision was empty:       42907 (18%)
  Times precision was {false}:     8245 (3%)
  Times result was cached:         177964 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9963 (4%)
  Times result was 'false':        109324 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         930871
  BDD entailment checks:           72111
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       98
Number of predicates discovered:          7
Number of abstraction locations:          17
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         563926
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 30.97
Number of irrelevant predicates:          153153 (27%)
Number of preds handled by boolean abs:   33603 (6%)
  Total number of models for allsat:      6075
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.61

Time for post operator:                 70.720s
  Time for path formula creation:       66.527s
Time for strengthen operator:            5.725s
Time for prec operator:                629.659s
  Time for abstraction:                623.064s (Max:     8.251s, Count: 239079)
    Boolean abstraction:               342.129s
    Solving time:                      338.790s (Max:     0.604s)
    Model enumeration time:             12.892s
    Time for BDD construction:           0.339s (Max:     0.017s)
Time for merge operator:                 9.856s
Time for coverage check:                 0.225s
  Time for BDD entailment checks:        0.151s
Total time for SMT solver (w/o itp):   351.682s

Number of path formula cache hits:   6725235 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.461s

Total number of created targets for pointer analysis: 453311
   Number of created targets for uf: *(struct_pi_adapter)* is 25
   Number of created targets for uf: *signed_int is 148
   Number of created targets for uf: *(char)* is 397
   Number of created targets for uf: *char is 141373


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15903 (count: 224470, min: 0, max: 635, avg: 0.07)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.439s
  Time for transition matches:                         6.231s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.080s
Automaton transfers with branching:                0
Automaton transfer successors:                      6846145 (count: 6846145, min: 1, max: 1, avg: 1.00) [1 x 6846145]

CPA algorithm statistics
------------------------
Number of iterations:            4629374
Max size of waitlist:            14643
Average size of waitlist:        5415
Number of computed successors:   5263177
Max successors for one state:    2
Number of times merged:          429380
Number of times stopped:         500527
Number of times breaked:         101

Total time for CPA algorithm:       872.516s (Max:   515.963s)
  Time for choose from waitlist:      2.783s
  Time for precision adjustment:    665.043s
  Time for transfer relation:       155.683s
  Time for merge operator:           16.468s
  Time for stop operator:             5.800s
  Time for adding to reached set:    14.512s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                 732 (count: 101, min: 1, max: 35, avg: 7.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.579s
  Counterexample analysis:                             4.381s (Max:     0.361s, Calls: 101)
    Refinement sat check:                              3.820s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.066s
  ARG update:                                         13.989s

Length of refined path (in blocks):                     725 (count: 101, min: 1, max: 33, avg: 7.18)
Number of affected states:                              429 (count: 101, min: 0, max: 32, avg: 4.25)
Length (states) of path with itp 'true':                195 (count: 101, min: 0, max: 3, avg: 1.93)
Length (states) of path with itp non-trivial itp:       429 (count: 101, min: 0, max: 32, avg: 4.25)
Length (states) of path with itp 'false':                 4 (count: 101, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           0 (count: 101, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             333 (count: 101, min: 0, max: 31, avg: 3.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 2795734
Max. size of reached set after ref.:  22368
Avg. size of reached set before ref.: 40704.92
Avg. size of reached set after ref.:  9130.50

Total time for CEGAR algorithm:     894.604s
Time for refinements:                21.398s
Average time for refinement:          0.211s
Max time for refinement:             14.762s

Code Coverage
-----------------------------
  Function coverage:      0.625
  Visited lines:          1511
  Total lines:            1760
  Line coverage:          0.859
  Visited conditions:     284
  Total conditions:       394
  Condition coverage:     0.721

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             1464311
  Size of final wait list        7404

Time for analysis setup:          5.388s
  Time for loading CPAs:          0.976s
  Time for loading parser:        0.829s
  Time for CFA construction:      3.446s
    Time for parsing file(s):     0.948s
    Time for AST to CFA:          1.264s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.790s
      Time for var class.:        0.380s
Time for Analysis:              894.605s
CPU time for analysis:          894.570s
Total time for CPAchecker:      900.001s
Total CPU time for CPAchecker:  899.950s
Time for statistics:              7.710s

Time for Garbage Collector:      87.167s (in 566 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3753MB (  3580 MiB) max;   1576MB (  1503 MiB) avg;   3840MB (  3662 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          3833MB (  3656 MiB) max;   2292MB (  2185 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8414MB (  8024 MiB) max;   8241MB (  7859 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
