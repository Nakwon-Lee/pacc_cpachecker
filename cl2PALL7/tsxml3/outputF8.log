scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o4xyoypm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            208513 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            181866 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26647 (13%)
  Times precision was empty:       5601 (3%)
  Times precision was {false}:     3059 (1%)
  Times result was cached:         187948 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11905 (6%)
  Times result was 'false':        72168 (35%)
Number of strengthen sat checks:   0
Number of coverage checks:         815780
  BDD entailment checks:           66392
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       98
Number of predicates discovered:          9
Number of abstraction locations:          22
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         855543
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 57.17
Number of irrelevant predicates:          141935 (17%)
Number of preds handled by boolean abs:   46778 (5%)
  Total number of models for allsat:      9337
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.78

Time for post operator:                 70.602s
  Time for path formula creation:       67.248s
Time for strengthen operator:            6.536s
Time for prec operator:                641.688s
  Time for abstraction:                635.442s (Max:     3.315s, Count: 208513)
    Boolean abstraction:               369.843s
    Solving time:                      369.844s (Max:     0.309s)
    Model enumeration time:             24.489s
    Time for BDD construction:           0.490s (Max:     0.010s)
Time for merge operator:                 8.965s
Time for coverage check:                 0.206s
  Time for BDD entailment checks:        0.139s
Total time for SMT solver (w/o itp):   394.333s

Number of path formula cache hits:   6778388 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    41.799s

Total number of created targets for pointer analysis: 589703
   Number of created targets for uf: *(struct_pi_adapter)* is 25
   Number of created targets for uf: *signed_int is 1378
   Number of created targets for uf: *(char)* is 25
   Number of created targets for uf: *char is 3103


Number of BDD nodes:                               436
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20106 (count: 173358, min: 0, max: 284, avg: 0.12)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.518s
  Time for transition matches:                         5.463s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                      6917820 (count: 6917820, min: 1, max: 1, avg: 1.00) [1 x 6917820]

CPA algorithm statistics
------------------------
Number of iterations:            4045937
Max size of waitlist:            4745
Average size of waitlist:        930
Number of computed successors:   4583158
Max successors for one state:    2
Number of times merged:          374694
Number of times stopped:         433668
Number of times breaked:         274

Total time for CPA algorithm:       859.557s (Max:   147.992s)
  Time for choose from waitlist:      2.057s
  Time for precision adjustment:    673.647s
  Time for transfer relation:       141.476s
  Time for merge operator:           14.346s
  Time for stop operator:             5.539s
  Time for adding to reached set:    11.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   274
Avg. length of target path (in blocks):                2257 (count: 274, min: 1, max: 17, avg: 8.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.900s
  Counterexample analysis:                            13.231s (Max:     0.194s, Calls: 274)
    Refinement sat check:                             11.383s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.089s
  ARG update:                                         12.323s

Length of refined path (in blocks):                    2213 (count: 274, min: 1, max: 16, avg: 8.08)
Number of affected states:                              981 (count: 274, min: 0, max: 15, avg: 3.58)
Length (states) of path with itp 'true':                958 (count: 274, min: 0, max: 11, avg: 3.50)
Length (states) of path with itp non-trivial itp:       981 (count: 274, min: 0, max: 15, avg: 3.58)
Length (states) of path with itp 'false':                12 (count: 274, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           1 (count: 274, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:             716 (count: 274, min: 0, max: 14, avg: 2.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                274
Number of successful refinements:     274
Number of failed refinements:         0
Max. size of reached set before ref.: 537810
Max. size of reached set after ref.:  485943
Avg. size of reached set before ref.: 26077.36
Avg. size of reached set after ref.:  13541.92

Total time for CEGAR algorithm:     894.367s
Time for refinements:                31.716s
Average time for refinement:          0.115s
Max time for refinement:              5.020s

Code Coverage
-----------------------------
  Function coverage:      0.602
  Visited lines:          1521
  Total lines:            1760
  Line coverage:          0.864
  Visited conditions:     288
  Total conditions:       394
  Condition coverage:     0.731

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             642610
  Number of reached locations:   885 (38%)
    Avg states per location:     726
    Max states per location:     20174 (at node N95)
  Number of reached functions:   53 (60%)
  Number of partitions:          642607
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N773 (before line 3789), Function pt_detect called from node N1274, stack depth 3 [19f9d595], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        4744

Time for analysis setup:          5.450s
  Time for loading CPAs:          1.010s
  Time for loading parser:        0.788s
  Time for CFA construction:      3.516s
    Time for parsing file(s):     1.061s
    Time for AST to CFA:          1.245s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.805s
      Time for var class.:        0.366s
Time for Analysis:              894.367s
CPU time for analysis:          894.320s
Total time for CPAchecker:      899.828s
Total CPU time for CPAchecker:  899.770s
Time for statistics:              4.669s

Time for Garbage Collector:      57.523s (in 1150 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1231MB (  1174 MiB) max;    394MB (   375 MiB) avg;   1272MB (  1213 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1334MB (  1272 MiB) max;    581MB (   554 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8338MB (  7952 MiB) max;   8224MB (  7843 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
