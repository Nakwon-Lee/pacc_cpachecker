scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_506i9f9e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2090 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1416 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         674 (32%)
  Times precision was empty:       323 (15%)
  Times precision was {false}:     214 (10%)
  Times result was cached:         1171 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      382 (18%)
  Times result was 'false':        865 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         4442
  BDD entailment checks:           400
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       87
Number of predicates discovered:          7
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4699
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 7.88
Number of irrelevant predicates:          1225 (26%)
Number of preds handled by boolean abs:   1054 (22%)
  Total number of models for allsat:      329
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.86

Time for post operator:                  3.207s
  Time for path formula creation:        3.063s
Time for strengthen operator:            0.101s
Time for prec operator:                 14.167s
  Time for abstraction:                 13.988s (Max:     0.163s, Count: 2090)
    Boolean abstraction:                 9.756s
    Solving time:                       10.367s (Max:     0.149s)
    Model enumeration time:              0.354s
    Time for BDD construction:           0.054s (Max:     0.007s)
Time for merge operator:                 0.404s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):    10.721s

Number of path formula cache hits:   42352 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.755s

Total number of created targets for pointer analysis: 9686
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 99
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 1589


Number of BDD nodes:                               259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         811 (count: 4395, min: 0, max: 72, avg: 0.18)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.453s
Automaton transfers with branching:                0
Automaton transfer successors:                        53124 (count: 53124, min: 1, max: 1, avg: 1.00) [1 x 53124]

CPA algorithm statistics
------------------------
Number of iterations:            32469
Max size of waitlist:            34
Average size of waitlist:        19
Number of computed successors:   36261
Max successors for one state:    2
Number of times merged:          2021
Number of times stopped:         2382
Number of times breaked:         41

Total time for CPA algorithm:        21.360s (Max:     3.413s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:     14.831s
  Time for transfer relation:         5.014s
  Time for merge operator:            0.548s
  Time for stop operator:             0.158s
  Time for adding to reached set:     0.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                 322 (count: 41, min: 1, max: 18, avg: 7.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.718s
  Counterexample analysis:                             2.465s (Max:     0.220s, Calls: 41)
    Refinement sat check:                              2.204s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.034s
  ARG update:                                          0.129s

Length of refined path (in blocks):                     282 (count: 41, min: 1, max: 18, avg: 6.88)
Number of affected states:                              188 (count: 41, min: 0, max: 17, avg: 4.59)
Length (states) of path with itp 'true':                 53 (count: 41, min: 0, max: 13, avg: 1.29)
Length (states) of path with itp non-trivial itp:       188 (count: 41, min: 0, max: 17, avg: 4.59)
Length (states) of path with itp 'false':                 8 (count: 41, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           1 (count: 41, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             157 (count: 41, min: 0, max: 16, avg: 3.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 2175
Max. size of reached set after ref.:  1704
Avg. size of reached set before ref.: 890.34
Avg. size of reached set after ref.:  254.66

Total time for CEGAR algorithm:      24.270s
Time for refinements:                 2.896s
Average time for refinement:          0.070s
Max time for refinement:              0.246s

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          1301
  Total lines:            1760
  Line coverage:          0.739
  Visited conditions:     202
  Total conditions:       394
  Condition coverage:     0.513

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             6951
  Number of reached locations:   635 (27%)
    Avg states per location:     10
    Max states per location:     175 (at node N1577)
  Number of reached functions:   51 (58%)
  Number of partitions:          6950
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 3789), Function pt_detect called from node N1274, stack depth 3 [5bdaf2ce], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          5.480s
  Time for loading CPAs:          0.967s
  Time for loading parser:        0.815s
  Time for CFA construction:      3.513s
    Time for parsing file(s):     0.996s
    Time for AST to CFA:          1.332s
    Time for CFA sanity check:    0.209s
    Time for post-processing:     0.773s
      Time for var class.:        0.363s
Time for Analysis:               24.270s
CPU time for analysis:           24.260s
Total time for CPAchecker:       29.756s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.249s

Time for Garbage Collector:       0.394s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     45MB (    42 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8118MB (  7742 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
