scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wx7n4c3p/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2834 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2146 (76%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         688 (24%)
  Times precision was empty:       563 (20%)
  Times precision was {false}:     196 (7%)
  Times result was cached:         1734 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      341 (12%)
  Times result was 'false':        937 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         5453
  BDD entailment checks:           769
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       93
Number of predicates discovered:          7
Number of abstraction locations:          15
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         6073
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.31
Number of irrelevant predicates:          2132 (35%)
Number of preds handled by boolean abs:   787 (13%)
  Total number of models for allsat:      293
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.86

Time for post operator:                  3.396s
  Time for path formula creation:        3.298s
Time for strengthen operator:            0.106s
Time for prec operator:                 15.216s
  Time for abstraction:                 14.944s (Max:     0.208s, Count: 2834)
    Boolean abstraction:                 9.105s
    Solving time:                       10.479s (Max:     0.190s)
    Model enumeration time:              0.388s
    Time for BDD construction:           0.048s (Max:     0.011s)
Time for merge operator:                 0.308s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):    10.867s

Number of path formula cache hits:   63600 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.907s

Total number of created targets for pointer analysis: 11075
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 425
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 695


Number of BDD nodes:                               231
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         657 (count: 4686, min: 0, max: 58, avg: 0.14)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.434s
Automaton transfers with branching:                0
Automaton transfer successors:                        71786 (count: 71786, min: 1, max: 1, avg: 1.00) [1 x 71786]

CPA algorithm statistics
------------------------
Number of iterations:            41498
Max size of waitlist:            77
Average size of waitlist:        28
Number of computed successors:   46197
Max successors for one state:    2
Number of times merged:          2342
Number of times stopped:         3033
Number of times breaked:         45

Total time for CPA algorithm:        23.095s (Max:     2.956s)
  Time for choose from waitlist:      0.087s
  Time for precision adjustment:     15.877s
  Time for transfer relation:         5.548s
  Time for merge operator:            0.532s
  Time for stop operator:             0.217s
  Time for adding to reached set:     0.279s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                 182 (count: 45, min: 1, max: 6, avg: 4.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.504s
  Counterexample analysis:                             1.254s (Max:     0.135s, Calls: 45)
    Refinement sat check:                              1.070s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.031s
  ARG update:                                          0.143s

Length of refined path (in blocks):                     174 (count: 44, min: 1, max: 6, avg: 3.95)
Number of affected states:                              100 (count: 44, min: 0, max: 5, avg: 2.27)
Length (states) of path with itp 'true':                 30 (count: 44, min: 0, max: 3, avg: 0.68)
Length (states) of path with itp non-trivial itp:       100 (count: 44, min: 0, max: 5, avg: 2.27)
Length (states) of path with itp 'false':                 2 (count: 44, min: 0, max: 1, avg: 0.05)
Different non-trivial interpolants along paths:           0 (count: 44, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              61 (count: 44, min: 0, max: 4, avg: 1.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 5489
Max. size of reached set after ref.:  4996
Avg. size of reached set before ref.: 1844.98
Avg. size of reached set after ref.:  927.18

Total time for CEGAR algorithm:      24.855s
Time for refinements:                 1.708s
Average time for refinement:          0.037s
Max time for refinement:              0.151s

Code Coverage
-----------------------------
  Function coverage:      0.545
  Visited lines:          1338
  Total lines:            1760
  Line coverage:          0.760
  Visited conditions:     216
  Total conditions:       394
  Condition coverage:     0.548

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             5024
  Number of reached locations:   672 (29%)
    Avg states per location:     7
    Max states per location:     106 (at node N101)
  Number of reached functions:   48 (55%)
  Number of partitions:          5019
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1468 (before line 4549), Function main called from node N1373, stack depth 1 [2a3a299], stack [main]])
  Number of target states:       1
  Size of final wait list        68

Time for analysis setup:          5.376s
  Time for loading CPAs:          0.988s
  Time for loading parser:        0.734s
  Time for CFA construction:      3.502s
    Time for parsing file(s):     1.027s
    Time for AST to CFA:          1.263s
    Time for CFA sanity check:    0.196s
    Time for post-processing:     0.809s
      Time for var class.:        0.386s
Time for Analysis:               24.856s
CPU time for analysis:           24.850s
Total time for CPAchecker:       30.238s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.196s

Time for Garbage Collector:       0.463s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     45MB (    43 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
