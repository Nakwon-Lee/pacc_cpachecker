scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3f4ncbr2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2893 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2185 (76%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         708 (24%)
  Times precision was empty:       563 (19%)
  Times precision was {false}:     196 (7%)
  Times result was cached:         1792 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      342 (12%)
  Times result was 'false':        962 (33%)
Number of strengthen sat checks:   0
Number of coverage checks:         5509
  BDD entailment checks:           785
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       93
Number of predicates discovered:          7
Number of abstraction locations:          14
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6257
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.63
Number of irrelevant predicates:          2161 (35%)
Number of preds handled by boolean abs:   790 (13%)
  Total number of models for allsat:      294
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.86

Time for post operator:                  3.568s
  Time for path formula creation:        3.448s
Time for strengthen operator:            0.148s
Time for prec operator:                 14.915s
  Time for abstraction:                 14.686s (Max:     0.193s, Count: 2893)
    Boolean abstraction:                 9.048s
    Solving time:                       10.275s (Max:     0.188s)
    Model enumeration time:              0.416s
    Time for BDD construction:           0.072s (Max:     0.012s)
Time for merge operator:                 0.268s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):    10.691s

Number of path formula cache hits:   64739 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.962s

Total number of created targets for pointer analysis: 11075
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *signed_int is 354
   Number of created targets for uf: *char is 585


Number of BDD nodes:                               233
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         704 (count: 4714, min: 0, max: 69, avg: 0.15)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.413s
Automaton transfers with branching:                0
Automaton transfer successors:                        72871 (count: 72871, min: 1, max: 1, avg: 1.00) [1 x 72871]

CPA algorithm statistics
------------------------
Number of iterations:            42178
Max size of waitlist:            77
Average size of waitlist:        28
Number of computed successors:   46946
Max successors for one state:    2
Number of times merged:          2362
Number of times stopped:         3068
Number of times breaked:         45

Total time for CPA algorithm:        22.950s (Max:     3.094s)
  Time for choose from waitlist:      0.111s
  Time for precision adjustment:     15.664s
  Time for transfer relation:         5.757s
  Time for merge operator:            0.459s
  Time for stop operator:             0.149s
  Time for adding to reached set:     0.259s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                 182 (count: 45, min: 1, max: 6, avg: 4.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.417s
  Counterexample analysis:                             1.105s (Max:     0.062s, Calls: 45)
    Refinement sat check:                              0.946s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.039s
  ARG update:                                          0.190s

Length of refined path (in blocks):                     180 (count: 45, min: 1, max: 6, avg: 4.00)
Number of affected states:                              105 (count: 45, min: 0, max: 5, avg: 2.33)
Length (states) of path with itp 'true':                 30 (count: 45, min: 0, max: 3, avg: 0.67)
Length (states) of path with itp non-trivial itp:       105 (count: 45, min: 0, max: 5, avg: 2.33)
Length (states) of path with itp 'false':                 2 (count: 45, min: 0, max: 1, avg: 0.04)
Different non-trivial interpolants along paths:           0 (count: 45, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              65 (count: 45, min: 0, max: 4, avg: 1.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 5489
Max. size of reached set after ref.:  4996
Avg. size of reached set before ref.: 1844.98
Avg. size of reached set after ref.:  907.73

Total time for CEGAR algorithm:      24.620s
Time for refinements:                 1.626s
Average time for refinement:          0.036s
Max time for refinement:              0.090s

Code Coverage
-----------------------------
  Function coverage:      0.261
  Visited lines:          835
  Total lines:            1760
  Line coverage:          0.474
  Visited conditions:     56
  Total conditions:       394
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             740
  Number of reached locations:   219 (9%)
    Avg states per location:     3
    Max states per location:     24 (at node N1577)
  Number of reached functions:   23 (26%)
  Number of partitions:          739
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 3789), Function pt_detect called from node N1274, stack depth 3 [1532c619], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          5.140s
  Time for loading CPAs:          0.954s
  Time for loading parser:        0.778s
  Time for CFA construction:      3.276s
    Time for parsing file(s):     0.964s
    Time for AST to CFA:          1.189s
    Time for CFA sanity check:    0.179s
    Time for post-processing:     0.746s
      Time for var class.:        0.355s
Time for Analysis:               24.620s
CPU time for analysis:           24.620s
Total time for CPAchecker:       29.765s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.092s

Time for Garbage Collector:       0.440s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     45MB (    43 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
