scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_naoyvl_o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3250 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3227 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (1%)
  Times precision was empty:       2772 (85%)
  Times precision was {false}:     165 (5%)
  Times result was cached:         305 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (0%)
  Times result was 'false':        216 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         16744
  BDD entailment checks:           1412
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          5
Number of abstraction locations:          3
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         1846
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 10.67
Number of irrelevant predicates:          1826 (99%)
Number of preds handled by boolean abs:   20 (1%)
  Total number of models for allsat:      8
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 10.142s
  Time for path formula creation:        9.918s
Time for strengthen operator:            0.289s
Time for prec operator:                  6.028s
  Time for abstraction:                  5.757s (Max:     0.082s, Count: 3250)
    Boolean abstraction:                 0.411s
    Solving time:                        3.857s (Max:     0.061s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.004s (Max:     0.001s)
Time for merge operator:                 1.335s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     3.883s

Number of path formula cache hits:   73367 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.021s

Total number of created targets for pointer analysis: 51718
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 50
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 20077


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          58 (count: 5172, min: 0, max: 53, avg: 0.01)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.643s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       122085 (count: 122085, min: 1, max: 1, avg: 1.00) [1 x 122085]

CPA algorithm statistics
------------------------
Number of iterations:            72301
Max size of waitlist:            946
Average size of waitlist:        513
Number of computed successors:   82330
Max successors for one state:    2
Number of times merged:          7666
Number of times stopped:         8827
Number of times breaked:         9

Total time for CPA algorithm:        25.169s (Max:    23.257s)
  Time for choose from waitlist:      0.159s
  Time for precision adjustment:      7.658s
  Time for transfer relation:        13.780s
  Time for merge operator:            1.730s
  Time for stop operator:             0.352s
  Time for adding to reached set:     0.475s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  14 (count: 9, min: 1, max: 2, avg: 1.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.162s
  Counterexample analysis:                             0.078s (Max:     0.031s, Calls: 9)
    Refinement sat check:                              0.052s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.002s
  ARG update:                                          0.031s

Length of refined path (in blocks):                      13 (count: 9, min: 1, max: 2, avg: 1.44)
Number of affected states:                                4 (count: 9, min: 0, max: 1, avg: 0.44)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 9, min: 0, max: 1, avg: 0.44)
Length (states) of path with itp 'false':                 1 (count: 9, min: 0, max: 1, avg: 0.11)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 205
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 120.67
Avg. size of reached set after ref.:  47.33

Total time for CEGAR algorithm:      25.359s
Time for refinements:                 0.190s
Average time for refinement:          0.021s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.318
  Visited lines:          1023
  Total lines:            1760
  Line coverage:          0.581
  Visited conditions:     128
  Total conditions:       394
  Condition coverage:     0.325

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             72627
  Number of reached locations:   405 (17%)
    Avg states per location:     179
    Max states per location:     2907 (at node N95)
  Number of reached functions:   28 (32%)
  Number of partitions:          72626
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 3789), Function pt_detect called from node N1274, stack depth 3 [1ce93c18], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        946

Time for analysis setup:          5.051s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.744s
  Time for CFA construction:      3.261s
    Time for parsing file(s):     0.961s
    Time for AST to CFA:          1.139s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.775s
      Time for var class.:        0.374s
Time for Analysis:               25.359s
CPU time for analysis:           25.360s
Total time for CPAchecker:       30.424s
Total CPU time for CPAchecker:   30.410s
Time for statistics:              0.954s

Time for Garbage Collector:       1.549s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     60MB (    57 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           208MB (   199 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
