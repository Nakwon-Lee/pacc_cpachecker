scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9l7ko8n1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            212932 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            212773 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         159 (0%)
  Times precision was empty:       1561 (1%)
  Times precision was {false}:     2426 (1%)
  Times result was cached:         200790 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8155 (4%)
  Times result was 'false':        25574 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1316378
  BDD entailment checks:           116576
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          6
Number of abstraction locations:          10
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1043630
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 98.63
Number of irrelevant predicates:          84179 (8%)
Number of preds handled by boolean abs:   36723 (4%)
  Total number of models for allsat:      6469
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.79

Time for post operator:                 90.155s
  Time for path formula creation:       85.212s
Time for strengthen operator:            6.799s
Time for prec operator:                595.952s
  Time for abstraction:                586.690s (Max:     7.263s, Count: 212932)
    Boolean abstraction:               284.698s
    Solving time:                      343.383s (Max:     0.514s)
    Model enumeration time:             11.895s
    Time for BDD construction:           0.350s (Max:     0.013s)
Time for merge operator:                13.492s
Time for coverage check:                 0.276s
  Time for BDD entailment checks:        0.187s
Total time for SMT solver (w/o itp):   355.278s

Number of path formula cache hits:   7634344 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    52.208s

Total number of created targets for pointer analysis: 733169
   Number of created targets for uf: *(struct_pi_adapter)* is 37
   Number of created targets for uf: *signed_int is 497
   Number of created targets for uf: *(char)* is 37
   Number of created targets for uf: *char is 219169


Number of BDD nodes:                               248
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14635 (count: 181566, min: 0, max: 375, avg: 0.08)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.059s
  Time for transition matches:                         6.416s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      7702979 (count: 7702979, min: 1, max: 1, avg: 1.00) [1 x 7702979]

CPA algorithm statistics
------------------------
Number of iterations:            5035715
Max size of waitlist:            2029
Average size of waitlist:        921
Number of computed successors:   5780827
Max successors for one state:    2
Number of times merged:          599901
Number of times stopped:         712693
Number of times breaked:         29

Total time for CPA algorithm:       887.282s (Max:   734.472s)
  Time for choose from waitlist:      2.644s
  Time for precision adjustment:    638.032s
  Time for transfer relation:       171.644s
  Time for merge operator:           21.619s
  Time for stop operator:             6.685s
  Time for adding to reached set:    29.366s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                 402 (count: 29, min: 1, max: 45, avg: 13.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.704s
  Counterexample analysis:                             3.745s (Max:     0.393s, Calls: 29)
    Refinement sat check:                              3.345s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.006s
  ARG update:                                          2.855s

Length of refined path (in blocks):                     393 (count: 29, min: 1, max: 43, avg: 13.55)
Number of affected states:                              364 (count: 29, min: 0, max: 42, avg: 12.55)
Length (states) of path with itp 'true':                  0 (count: 29, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       364 (count: 29, min: 0, max: 42, avg: 12.55)
Length (states) of path with itp 'false':                 5 (count: 29, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           0 (count: 29, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             340 (count: 29, min: 0, max: 41, avg: 11.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 159010
Max. size of reached set after ref.:  53
Avg. size of reached set before ref.: 28038.93
Avg. size of reached set after ref.:  50.52

Total time for CEGAR algorithm:     894.774s
Time for refinements:                 7.484s
Average time for refinement:          0.258s
Max time for refinement:              1.352s

Code Coverage
-----------------------------
  Function coverage:      0.318
  Visited lines:          1026
  Total lines:            1760
  Line coverage:          0.583
  Visited conditions:     130
  Total conditions:       394
  Condition coverage:     0.330

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             4230896
  Size of final wait list        1146

Time for analysis setup:          5.444s
  Time for loading CPAs:          0.987s
  Time for loading parser:        0.833s
  Time for CFA construction:      3.443s
    Time for parsing file(s):     0.943s
    Time for AST to CFA:          1.227s
    Time for CFA sanity check:    0.216s
    Time for post-processing:     0.836s
      Time for var class.:        0.397s
Time for Analysis:              894.774s
CPU time for analysis:          894.730s
Total time for CPAchecker:      900.227s
Total CPU time for CPAchecker:  900.170s
Time for statistics:             20.722s

Time for Garbage Collector:      97.941s (in 470 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               4287MB (  4089 MiB) max;   1459MB (  1392 MiB) avg;   4454MB (  4247 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          5087MB (  4851 MiB) max;   2165MB (  2064 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8411MB (  8022 MiB) max;   8248MB (  7866 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
