scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__51s4_77/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            297675 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            176238 (59%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121437 (41%)
  Times precision was empty:       30584 (10%)
  Times precision was {false}:     7465 (3%)
  Times result was cached:         251582 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8044 (3%)
  Times result was 'false':        138712 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         874947
  BDD entailment checks:           120717
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       98
Number of predicates discovered:          6
Number of abstraction locations:          12
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         703846
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 45.38
Number of irrelevant predicates:          121965 (17%)
Number of preds handled by boolean abs:   31811 (5%)
  Total number of models for allsat:      5892
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.73

Time for post operator:                 78.384s
  Time for path formula creation:       74.901s
Time for strengthen operator:            5.976s
Time for prec operator:                647.480s
  Time for abstraction:                639.495s (Max:    12.265s, Count: 297675)
    Boolean abstraction:               275.273s
    Solving time:                      272.209s (Max:     1.048s)
    Model enumeration time:             11.399s
    Time for BDD construction:           0.362s (Max:     0.013s)
Time for merge operator:                10.978s
Time for coverage check:                 0.258s
  Time for BDD entailment checks:        0.169s
Total time for SMT solver (w/o itp):   283.608s

Number of path formula cache hits:   6521886 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    44.544s

Total number of created targets for pointer analysis: 508775
   Number of created targets for uf: *(struct_pi_adapter)* is 5
   Number of created targets for uf: *signed_int is 327
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 125


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13969 (count: 244391, min: 0, max: 466, avg: 0.06)
Time for BDD node cleanup:                             0.050s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.072s
  Time for transition matches:                         5.058s
  Time for transition assertions:                      0.023s
  Time for transition actions:                         0.099s
Automaton transfers with branching:                0
Automaton transfer successors:                      6858009 (count: 6858009, min: 1, max: 1, avg: 1.00) [1 x 6858009]

CPA algorithm statistics
------------------------
Number of iterations:            4923040
Max size of waitlist:            20
Average size of waitlist:        12
Number of computed successors:   5559841
Max successors for one state:    2
Number of times merged:          377115
Number of times stopped:         497785
Number of times breaked:         39

Total time for CPA algorithm:       892.804s (Max:   875.927s)
  Time for choose from waitlist:      2.070s
  Time for precision adjustment:    685.749s
  Time for transfer relation:       155.893s
  Time for merge operator:           16.207s
  Time for stop operator:             6.499s
  Time for adding to reached set:    13.337s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 245 (count: 39, min: 1, max: 15, avg: 6.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.897s
  Counterexample analysis:                             1.725s (Max:     0.174s, Calls: 39)
    Refinement sat check:                              1.509s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.010s
  ARG update:                                          0.103s

Length of refined path (in blocks):                     207 (count: 39, min: 1, max: 15, avg: 5.31)
Number of affected states:                              131 (count: 39, min: 0, max: 14, avg: 3.36)
Length (states) of path with itp 'true':                 37 (count: 39, min: 0, max: 12, avg: 0.95)
Length (states) of path with itp non-trivial itp:       131 (count: 39, min: 0, max: 14, avg: 3.36)
Length (states) of path with itp 'false':                 7 (count: 39, min: 0, max: 1, avg: 0.18)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             102 (count: 39, min: 0, max: 13, avg: 2.62)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 1581
Max. size of reached set after ref.:  1288
Avg. size of reached set before ref.: 657.28
Avg. size of reached set after ref.:  165.13

Total time for CEGAR algorithm:     894.848s
Time for refinements:                 2.025s
Average time for refinement:          0.051s
Max time for refinement:              0.189s

Code Coverage
-----------------------------
  Function coverage:      0.318
  Visited lines:          1033
  Total lines:            1760
  Line coverage:          0.587
  Visited conditions:     134
  Total conditions:       394
  Condition coverage:     0.340

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             4904151
  Size of final wait list        13

Time for analysis setup:          5.392s
  Time for loading CPAs:          1.026s
  Time for loading parser:        0.774s
  Time for CFA construction:      3.422s
    Time for parsing file(s):     0.996s
    Time for AST to CFA:          1.208s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.814s
      Time for var class.:        0.381s
Time for Analysis:              894.848s
CPU time for analysis:          894.820s
Total time for CPAchecker:      900.247s
Total CPU time for CPAchecker:  900.200s
Time for statistics:             47.306s

Time for Garbage Collector:     130.808s (in 424 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               4565MB (  4354 MiB) max;   1837MB (  1752 MiB) avg;   4928MB (  4700 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          4731MB (  4512 MiB) max;   2624MB (  2502 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8349MB (  7962 MiB) max;   8231MB (  7850 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
