scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1j2gx5gd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8018: Ignoring function call through function pointer *(serial->write_data): res = (*(serial->write_data))(serial); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_set to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1058 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            632 (60%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         426 (40%)
  Times precision was empty:       477 (45%)
  Times precision was {false}:     196 (19%)
  Times result was cached:         295 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      90 (9%)
  Times result was 'false':        416 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         9183
  BDD entailment checks:           117
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       210
Number of predicates discovered:          11
Number of abstraction locations:          5
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         1104
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 3.86
Number of irrelevant predicates:          477 (43%)
Number of preds handled by boolean abs:   371 (34%)
  Total number of models for allsat:      82
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.91

Time for post operator:                  5.506s
  Time for path formula creation:        5.344s
Time for strengthen operator:            0.198s
Time for prec operator:                  8.107s
  Time for abstraction:                  7.818s (Max:     0.383s, Count: 1058)
    Boolean abstraction:                 2.734s
    Solving time:                        5.114s (Max:     0.348s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.058s (Max:     0.010s)
Time for merge operator:                 1.593s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     5.264s

Number of path formula cache hits:   51024 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.720s

Total number of created targets for pointer analysis: 2516
   Number of created targets for uf: *(struct_hso_device)* is 218
   Number of created targets for uf: *(struct_hso_serial)* is 8
   Number of created targets for uf: *signed_int is 211
   Number of created targets for uf: *(struct_usb_device)* is 22
   Number of created targets for uf: *(struct_urb)* is 8
   Number of created targets for uf: *(struct_hso_tiocmget)* is 15
   Number of created targets for uf: *unsigned_char is 246
   Number of created targets for uf: *(struct_usb_interface)* is 22
   Number of created targets for uf: *unsigned_int is 22
   Number of created targets for uf: *(struct_hso_net)* is 15


Number of BDD nodes:                               422
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         737 (count: 2599, min: 0, max: 234, avg: 0.28)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.685s
  Time for transition matches:                         0.179s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                        68614 (count: 68614, min: 1, max: 1, avg: 1.00) [1 x 68614]

CPA algorithm statistics
------------------------
Number of iterations:            45003
Max size of waitlist:            57
Average size of waitlist:        31
Number of computed successors:   50593
Max successors for one state:    2
Number of times merged:          4533
Number of times stopped:         4608
Number of times breaked:         20

Total time for CPA algorithm:        21.282s (Max:     1.696s)
  Time for choose from waitlist:      0.198s
  Time for precision adjustment:      9.193s
  Time for transfer relation:         8.347s
  Time for merge operator:            2.007s
  Time for stop operator:             0.207s
  Time for adding to reached set:     0.386s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                  82 (count: 20, min: 2, max: 7, avg: 4.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.055s
  Counterexample analysis:                             0.721s (Max:     0.096s, Calls: 20)
    Refinement sat check:                              0.614s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.030s
  ARG update:                                          0.241s

Length of refined path (in blocks):                      74 (count: 20, min: 2, max: 5, avg: 3.70)
Number of affected states:                               54 (count: 20, min: 1, max: 4, avg: 2.70)
Length (states) of path with itp 'true':                  0 (count: 20, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        54 (count: 20, min: 1, max: 4, avg: 2.70)
Length (states) of path with itp 'false':                 4 (count: 20, min: 0, max: 1, avg: 0.20)
Different non-trivial interpolants along paths:           6 (count: 20, min: 0, max: 3, avg: 0.30)
Equal non-trivial interpolants along paths:              28 (count: 20, min: 0, max: 3, avg: 1.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 3938
Max. size of reached set after ref.:  15
Avg. size of reached set before ref.: 2194.70
Avg. size of reached set after ref.:  15.00

Total time for CEGAR algorithm:      22.486s
Time for refinements:                 1.202s
Average time for refinement:          0.060s
Max time for refinement:              0.122s

Code Coverage
-----------------------------
  Function coverage:      0.485
  Visited lines:          2028
  Total lines:            3653
  Line coverage:          0.555
  Visited conditions:     365
  Total conditions:       1024
  Condition coverage:     0.356

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             1976
  Number of reached locations:   1149 (22%)
    Avg states per location:     1
    Max states per location:     28 (at node N4147)
  Number of reached functions:   96 (48%)
  Number of partitions:          1972
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3728 (before line 10046), Function hso_init called from node N3813, stack depth 2 [36920bd6], stack [main, hso_init]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          7.270s
  Time for loading CPAs:          1.170s
  Time for loading parser:        0.745s
  Time for CFA construction:      5.220s
    Time for parsing file(s):     1.249s
    Time for AST to CFA:          1.992s
    Time for CFA sanity check:    0.378s
    Time for post-processing:     1.333s
      Time for var class.:        0.671s
Time for Analysis:               22.486s
CPU time for analysis:           22.490s
Total time for CPAchecker:       29.761s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.179s

Time for Garbage Collector:       0.617s (in 38 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    74 MiB) max;     50MB (    48 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     34MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8117MB (  7741 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
