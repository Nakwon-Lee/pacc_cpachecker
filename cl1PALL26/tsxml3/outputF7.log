scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--fit3.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ue0trb2q/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            97 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            83 (86%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (14%)
  Times precision was empty:       23 (24%)
  Times precision was {false}:     8 (8%)
  Times result was cached:         49 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17 (18%)
  Times result was 'false':        7 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1430
  BDD entailment checks:           46
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       150
Number of predicates discovered:          2
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         74
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.96
Number of irrelevant predicates:          17 (23%)
Number of preds handled by boolean abs:   17 (23%)
  Total number of models for allsat:      17
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.888s
  Time for path formula creation:        0.790s
Time for strengthen operator:            0.105s
Time for prec operator:                  0.625s
  Time for abstraction:                  0.552s (Max:     0.229s, Count: 97)
    Boolean abstraction:                 0.281s
    Solving time:                        0.230s (Max:     0.131s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.168s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.278s

Number of path formula cache hits:   17388 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.717s

Total number of created targets for pointer analysis: 9
   Number of created targets for uf: *(char)* is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          27 (count: 217, min: 0, max: 12, avg: 0.12)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.189s
Automaton transfers with branching:                0
Automaton transfer successors:                        20635 (count: 20635, min: 1, max: 1, avg: 1.00) [1 x 20635]

CPA algorithm statistics
------------------------
Number of iterations:            7084
Max size of waitlist:            14
Average size of waitlist:        9
Number of computed successors:   7851
Max successors for one state:    2
Number of times merged:          692
Number of times stopped:         733
Number of times breaked:         7

Total time for CPA algorithm:         3.998s (Max:     1.717s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:      0.994s
  Time for transfer relation:         2.267s
  Time for merge operator:            0.310s
  Time for stop operator:             0.079s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  23 (count: 7, min: 1, max: 4, avg: 3.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.142s
  Counterexample analysis:                             0.064s (Max:     0.016s, Calls: 7)
    Refinement sat check:                              0.028s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.003s
  ARG update:                                          0.062s

Length of refined path (in blocks):                      23 (count: 7, min: 1, max: 4, avg: 3.29)
Number of affected states:                               16 (count: 7, min: 0, max: 3, avg: 2.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        16 (count: 7, min: 0, max: 3, avg: 2.29)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              10 (count: 7, min: 0, max: 2, avg: 1.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1301
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 855.29
Avg. size of reached set after ref.:  21.57

Total time for CEGAR algorithm:       4.186s
Time for refinements:                 0.188s
Average time for refinement:          0.026s
Max time for refinement:              0.048s

Code Coverage
-----------------------------
  Function coverage:      0.609
  Visited lines:          2863
  Total lines:            2909
  Line coverage:          0.984
  Visited conditions:     272
  Total conditions:       292
  Condition coverage:     0.932

CPAchecker general statistics
-----------------------------
Number of program locations:     3242
Number of CFA edges:             3486
Number of relevant variables:    316
Number of functions:             23
Number of loops:                 6
Size of reached set:             1276
  Number of reached locations:   934 (29%)
    Avg states per location:     1
    Max states per location:     88 (at node N0)
  Number of reached functions:   14 (61%)
  Number of partitions:          1276
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.105s
  Time for loading CPAs:          0.938s
  Time for loading parser:        0.781s
  Time for CFA construction:      3.244s
    Time for parsing file(s):     0.904s
    Time for AST to CFA:          0.925s
    Time for CFA sanity check:    0.331s
    Time for post-processing:     0.932s
      Time for var class.:        0.452s
Time for Analysis:                4.187s
CPU time for analysis:            4.200s
Time for analyzing result:        0.009s
Total time for CPAchecker:        9.297s
Total CPU time for CPAchecker:    9.300s
Time for statistics:              0.127s

Time for Garbage Collector:       0.219s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     36MB (    34 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8092MB (  7717 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
