scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--tty--serial--mfd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9v577fm3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3452: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3455: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3461: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 3464: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3903: Function pointer *__cil_tmp20 with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3968: Function pointer *__cil_tmp20 with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4031: Function pointer *__cil_tmp20 with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_handle_dcd_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_handle_cts_change to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_resume_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_suspend_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_add_one_port to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_schedule_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_get_divisor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_update_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3903: Ignoring call via function pointer dma_map_single_attrs::__cil_tmp20 for which no suitable target was found in line: addr = (*__cil_tmp20)(dev, __cil_tmp23, __cil_tmp25, size, dir, attrs); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3903: Ignoring function call through function pointer *__cil_tmp20: addr = (*__cil_tmp20)(dev, __cil_tmp23, __cil_tmp25, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4031: Ignoring call via function pointer dma_sync_single_for_device::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(dev, addr, size, dir); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4031: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_write_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_read_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_SAK to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function uart_insert_char to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_flip_buffer_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3968: Ignoring call via function pointer dma_sync_single_for_cpu::__cil_tmp20 for which no suitable target was found in line: (*__cil_tmp20)(dev, addr, size, dir); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3968: Ignoring function call through function pointer *__cil_tmp20: (*__cil_tmp20)(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_runtime_allow to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            176 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            153 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         23 (13%)
  Times precision was empty:       112 (64%)
  Times precision was {false}:     13 (7%)
  Times result was cached:         30 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (12%)
  Times result was 'false':        15 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         3872
  BDD entailment checks:           72
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       566
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         64
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.88
Number of irrelevant predicates:          25 (39%)
Number of preds handled by boolean abs:   21 (33%)
  Total number of models for allsat:      21
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.488s
  Time for path formula creation:        4.290s
Time for strengthen operator:            0.166s
Time for prec operator:                  2.010s
  Time for abstraction:                  1.873s (Max:     1.057s, Count: 176)
    Boolean abstraction:                 1.313s
    Solving time:                        1.170s (Max:     0.805s)
    Model enumeration time:              0.139s
    Time for BDD construction:           0.008s (Max:     0.007s)
Time for merge operator:                 1.900s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     1.309s

Number of path formula cache hits:   29900 (43%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.914s

Total number of created targets for pointer analysis: 53
   Number of created targets for uf: *(struct_uart_hsu_port)* is 4
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 388, min: 0, max: 6, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.419s
Automaton transfers with branching:                0
Automaton transfer successors:                        67996 (count: 67996, min: 1, max: 1, avg: 1.00) [1 x 67996]

CPA algorithm statistics
------------------------
Number of iterations:            19631
Max size of waitlist:            44
Average size of waitlist:        22
Number of computed successors:   21674
Max successors for one state:    2
Number of times merged:          1900
Number of times stopped:         1965
Number of times breaked:         8

Total time for CPA algorithm:        12.569s (Max:     3.621s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:      2.491s
  Time for transfer relation:         6.967s
  Time for merge operator:            2.090s
  Time for stop operator:             0.193s
  Time for adding to reached set:     0.246s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  27 (count: 8, min: 1, max: 6, avg: 3.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.266s
  Counterexample analysis:                             0.112s (Max:     0.029s, Calls: 8)
    Refinement sat check:                              0.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.021s
  ARG update:                                          0.111s

Length of refined path (in blocks):                      27 (count: 8, min: 1, max: 6, avg: 3.38)
Number of affected states:                               15 (count: 8, min: 0, max: 5, avg: 1.88)
Length (states) of path with itp 'true':                  4 (count: 8, min: 0, max: 3, avg: 0.50)
Length (states) of path with itp non-trivial itp:        15 (count: 8, min: 0, max: 5, avg: 1.88)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              10 (count: 8, min: 0, max: 4, avg: 1.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 5270
Max. size of reached set after ref.:  4603
Avg. size of reached set before ref.: 3631.00
Avg. size of reached set after ref.:  1577.13

Total time for CEGAR algorithm:      13.028s
Time for refinements:                 0.432s
Average time for refinement:          0.054s
Max time for refinement:              0.075s

Code Coverage
-----------------------------
  Function coverage:      0.911
  Visited lines:          5108
  Total lines:            5190
  Line coverage:          0.984
  Visited conditions:     356
  Total conditions:       368
  Condition coverage:     0.967

CPAchecker general statistics
-----------------------------
Number of program locations:     5693
Number of CFA edges:             5998
Number of relevant variables:    1390
Number of functions:             79
Number of loops:                 12
Size of reached set:             3264
  Number of reached locations:   1299 (23%)
    Avg states per location:     2
    Max states per location:     69 (at node N155)
  Number of reached functions:   72 (91%)
  Number of partitions:          3264
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.545s
  Time for loading CPAs:          1.164s
  Time for loading parser:        0.796s
  Time for CFA construction:      4.446s
    Time for parsing file(s):     1.125s
    Time for AST to CFA:          1.435s
    Time for CFA sanity check:    0.497s
    Time for post-processing:     1.224s
      Time for var class.:        0.693s
Time for Analysis:               13.028s
CPU time for analysis:           13.030s
Time for analyzing result:        0.002s
Total time for CPAchecker:       19.580s
Total CPU time for CPAchecker:   19.560s
Time for statistics:              0.195s

Time for Garbage Collector:       0.676s (in 27 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     50MB (    48 MiB) avg;     93MB (    89 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     32MB (    30 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8110MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
