scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--i2c--busses--i2c-diolan-u2c_false-termination.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ogl0v7qn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_add_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1000 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            988 (99%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       188 (19%)
  Times precision was {false}:     70 (7%)
  Times result was cached:         597 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      145 (14%)
  Times result was 'false':        197 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         8325
  BDD entailment checks:           499
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1009
Number of predicates discovered:          2
Number of abstraction locations:          7
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         812
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.78
Number of irrelevant predicates:          117 (14%)
Number of preds handled by boolean abs:   145 (18%)
  Total number of models for allsat:      117
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.81

Time for post operator:                  5.168s
  Time for path formula creation:        4.989s
Time for strengthen operator:            0.189s
Time for prec operator:                  8.695s
  Time for abstraction:                  8.522s (Max:     0.284s, Count: 1000)
    Boolean abstraction:                 3.157s
    Solving time:                        5.784s (Max:     0.234s)
    Model enumeration time:              0.222s
    Time for BDD construction:           0.029s (Max:     0.015s)
Time for merge operator:                 0.843s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):     6.006s

Number of path formula cache hits:   97833 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.614s

Total number of created targets for pointer analysis: 2502
   Number of created targets for uf: *signed_int is 177
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *unsigned_int is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         220 (count: 1961, min: 0, max: 51, avg: 0.11)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.410s
Automaton transfers with branching:                0
Automaton transfer successors:                       126072 (count: 126072, min: 1, max: 1, avg: 1.00) [1 x 126072]

CPA algorithm statistics
------------------------
Number of iterations:            34543
Max size of waitlist:            69
Average size of waitlist:        17
Number of computed successors:   39267
Max successors for one state:    2
Number of times merged:          3913
Number of times stopped:         4362
Number of times breaked:         6

Total time for CPA algorithm:        18.980s (Max:     6.420s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      9.264s
  Time for transfer relation:         7.715s
  Time for merge operator:            1.088s
  Time for stop operator:             0.143s
  Time for adding to reached set:     0.231s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  25 (count: 6, min: 2, max: 5, avg: 4.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.544s
  Counterexample analysis:                             0.369s (Max:     0.110s, Calls: 6)
    Refinement sat check:                              0.309s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.005s
  ARG update:                                          0.140s

Length of refined path (in blocks):                      25 (count: 6, min: 2, max: 5, avg: 4.17)
Number of affected states:                               19 (count: 6, min: 1, max: 4, avg: 3.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        19 (count: 6, min: 1, max: 4, avg: 3.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              13 (count: 6, min: 0, max: 3, avg: 2.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 6922
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 4549.17
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      19.628s
Time for refinements:                 0.647s
Average time for refinement:          0.107s
Max time for refinement:              0.166s

Code Coverage
-----------------------------
  Function coverage:      0.842
  Visited lines:          1894
  Total lines:            1917
  Line coverage:          0.988
  Visited conditions:     126
  Total conditions:       134
  Condition coverage:     0.940

CPAchecker general statistics
-----------------------------
Number of program locations:     2130
Number of CFA edges:             2210
Number of relevant variables:    488
Number of functions:             38
Number of loops:                 4
Size of reached set:             7432
  Number of reached locations:   430 (20%)
    Avg states per location:     17
    Max states per location:     148 (at node N39)
  Number of reached functions:   32 (84%)
  Number of partitions:          7432
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.894s
  Time for loading CPAs:          0.967s
  Time for loading parser:        0.752s
  Time for CFA construction:      3.030s
    Time for parsing file(s):     0.957s
    Time for AST to CFA:          0.994s
    Time for CFA sanity check:    0.184s
    Time for post-processing:     0.676s
      Time for var class.:        0.340s
Time for Analysis:               19.630s
CPU time for analysis:           19.630s
Time for analyzing result:        0.005s
Total time for CPAchecker:       24.528s
Total CPU time for CPAchecker:   24.520s
Time for statistics:              0.238s

Time for Garbage Collector:       0.597s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 88MB (    84 MiB) max;     50MB (    48 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
