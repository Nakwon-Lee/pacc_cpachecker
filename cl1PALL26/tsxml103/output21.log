scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_em4wwp7x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            168 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            130 (77%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (23%)
  Times precision was empty:       67 (40%)
  Times precision was {false}:     27 (16%)
  Times result was cached:         37 (22%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37 (22%)
  Times result was 'false':        33 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         1405
  BDD entailment checks:           59
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         101
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.58
Number of irrelevant predicates:          39 (39%)
Number of preds handled by boolean abs:   37 (37%)
  Total number of models for allsat:      29
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.78

Time for post operator:                  3.511s
  Time for path formula creation:        3.414s
Time for strengthen operator:            0.129s
Time for prec operator:                  1.578s
  Time for abstraction:                  1.432s (Max:     0.233s, Count: 168)
    Boolean abstraction:                 0.530s
    Solving time:                        0.832s (Max:     0.203s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.022s (Max:     0.008s)
Time for merge operator:                 0.446s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     0.854s

Number of path formula cache hits:   14883 (39%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.046s

Total number of created targets for pointer analysis: 1146
   Number of created targets for uf: *(struct_ide_hw)* is 13
   Number of created targets for uf: *unsigned_char is 101
   Number of created targets for uf: *_Bool is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          56 (count: 502, min: 0, max: 20, avg: 0.11)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.413s
Automaton transfers with branching:                0
Automaton transfer successors:                        38012 (count: 38012, min: 1, max: 1, avg: 1.00) [1 x 38012]

CPA algorithm statistics
------------------------
Number of iterations:            20906
Max size of waitlist:            20
Average size of waitlist:        8
Number of computed successors:   21704
Max successors for one state:    2
Number of times merged:          673
Number of times stopped:         715
Number of times breaked:         16

Total time for CPA algorithm:         9.450s (Max:     1.435s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:      2.198s
  Time for transfer relation:         5.683s
  Time for merge operator:            0.577s
  Time for stop operator:             0.117s
  Time for adding to reached set:     0.207s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                  43 (count: 16, min: 1, max: 5, avg: 2.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.598s
  Counterexample analysis:                             0.357s (Max:     0.055s, Calls: 16)
    Refinement sat check:                              0.291s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.041s
  ARG update:                                          0.137s

Length of refined path (in blocks):                      43 (count: 16, min: 1, max: 5, avg: 2.69)
Number of affected states:                               27 (count: 16, min: 0, max: 4, avg: 1.69)
Length (states) of path with itp 'true':                  0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        27 (count: 16, min: 0, max: 4, avg: 1.69)
Length (states) of path with itp 'false':                 0 (count: 16, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              13 (count: 16, min: 0, max: 3, avg: 0.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 5343
Max. size of reached set after ref.:  4159
Avg. size of reached set before ref.: 3662.81
Avg. size of reached set after ref.:  2788.19

Total time for CEGAR algorithm:      10.435s
Time for refinements:                 0.920s
Average time for refinement:          0.057s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      0.837
  Visited lines:          2063
  Total lines:            2107
  Line coverage:          0.979
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             6963
  Number of reached locations:   750 (30%)
    Avg states per location:     9
    Max states per location:     239 (at node N0)
  Number of reached functions:   41 (84%)
  Number of partitions:          6946
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1512 (before line 5926), Function cmd640x_init called from node N1687, stack depth 2 [49bd54f7], stack [main, cmd640x_init], ABS0: true])
  Number of target states:       0

Time for analysis setup:          5.415s
  Time for loading CPAs:          1.027s
  Time for loading parser:        0.892s
  Time for CFA construction:      3.382s
    Time for parsing file(s):     0.999s
    Time for AST to CFA:          1.110s
    Time for CFA sanity check:    0.274s
    Time for post-processing:     0.815s
      Time for var class.:        0.375s
Time for Analysis:               10.436s
CPU time for analysis:           10.430s
Time for analyzing result:        0.017s
Total time for CPAchecker:       15.857s
Total CPU time for CPAchecker:   15.840s
Time for statistics:              0.262s

Time for Garbage Collector:       0.416s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     42MB (    40 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     31MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    31 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8107MB (  7731 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
