scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--ide--cmd640.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t72wt54h/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4053: Function pointer *__cil_tmp2 with type void (*)() is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4053: Ignoring call via function pointer slow_down_io::__cil_tmp2 for which no suitable target was found in line: (*__cil_tmp2)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4053: Ignoring function call through function pointer *__cil_tmp2: (*__cil_tmp2)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4447: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(reg); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4447: Ignoring function call through function pointer *__get_cmd640_reg: b = (*__get_cmd640_reg)(reg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ide_pio_cycle_time to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ide_timing_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5173: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5173: Ignoring function call through function pointer *__get_cmd640_reg: tmp___9 = (*__get_cmd640_reg)(__cil_tmp45); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5183: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5183: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp53, setup_count); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5189: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5189: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp57, tmp___10); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4872: Ignoring call via function pointer __get_cmd640_reg for which no suitable target was found in line: b = (*__get_cmd640_reg)(__cil_tmp13); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(__cil_tmp27, b); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4895: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(__cil_tmp27, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4477: Ignoring call via function pointer __put_cmd640_reg for which no suitable target was found in line: (*__put_cmd640_reg)(reg, val); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4477: Ignoring function call through function pointer *__put_cmd640_reg: (*__put_cmd640_reg)(reg, val); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            180 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            144 (80%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (20%)
  Times precision was empty:       85 (47%)
  Times precision was {false}:     24 (13%)
  Times result was cached:         34 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      37 (21%)
  Times result was 'false':        32 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         1145
  BDD entailment checks:           73
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       386
Number of predicates discovered:          2
Number of abstraction locations:          6
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         95
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.56
Number of irrelevant predicates:          33 (35%)
Number of preds handled by boolean abs:   37 (39%)
  Total number of models for allsat:      29
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.78

Time for post operator:                  2.862s
  Time for path formula creation:        2.716s
Time for strengthen operator:            0.115s
Time for prec operator:                  1.319s
  Time for abstraction:                  1.176s (Max:     0.290s, Count: 180)
    Boolean abstraction:                 0.611s
    Solving time:                        0.676s (Max:     0.247s)
    Model enumeration time:              0.048s
    Time for BDD construction:           0.018s (Max:     0.012s)
Time for merge operator:                 0.295s
Time for coverage check:                 0.007s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     0.724s

Number of path formula cache hits:   16225 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.385s

Total number of created targets for pointer analysis: 866
   Number of created targets for uf: *(struct_ide_hw)* is 9
   Number of created targets for uf: *unsigned_char is 125
   Number of created targets for uf: *_Bool is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          66 (count: 518, min: 0, max: 20, avg: 0.13)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.280s
Automaton transfers with branching:                0
Automaton transfer successors:                        32551 (count: 32551, min: 1, max: 1, avg: 1.00) [1 x 32551]

CPA algorithm statistics
------------------------
Number of iterations:            18526
Max size of waitlist:            14
Average size of waitlist:        7
Number of computed successors:   19191
Max successors for one state:    2
Number of times merged:          536
Number of times stopped:         607
Number of times breaked:         14

Total time for CPA algorithm:         7.923s (Max:     1.316s)
  Time for choose from waitlist:      0.063s
  Time for precision adjustment:      1.838s
  Time for transfer relation:         4.790s
  Time for merge operator:            0.390s
  Time for stop operator:             0.129s
  Time for adding to reached set:     0.243s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                  38 (count: 14, min: 1, max: 5, avg: 2.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.543s
  Counterexample analysis:                             0.369s (Max:     0.061s, Calls: 14)
    Refinement sat check:                              0.285s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.025s
  ARG update:                                          0.101s

Length of refined path (in blocks):                      38 (count: 14, min: 1, max: 5, avg: 2.71)
Number of affected states:                               24 (count: 14, min: 0, max: 4, avg: 1.71)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        24 (count: 14, min: 0, max: 4, avg: 1.71)
Length (states) of path with itp 'false':                 0 (count: 14, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 14, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              12 (count: 14, min: 0, max: 3, avg: 0.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 7923
Max. size of reached set after ref.:  6963
Avg. size of reached set before ref.: 3128.21
Avg. size of reached set after ref.:  2300.36

Total time for CEGAR algorithm:       8.722s
Time for refinements:                 0.754s
Average time for refinement:          0.053s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.837
  Visited lines:          2063
  Total lines:            2107
  Line coverage:          0.979
  Visited conditions:     202
  Total conditions:       222
  Condition coverage:     0.910

CPAchecker general statistics
-----------------------------
Number of program locations:     2477
Number of CFA edges:             2662
Number of relevant variables:    405
Number of functions:             49
Number of loops:                 5
Size of reached set:             6963
  Number of reached locations:   750 (30%)
    Avg states per location:     9
    Max states per location:     239 (at node N0)
  Number of reached functions:   41 (84%)
  Number of partitions:          6946
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1512 (before line 5926), Function cmd640x_init called from node N1687, stack depth 2 [49bd54f7], stack [main, cmd640x_init], ABS0: true])
  Number of target states:       0

Time for analysis setup:          5.317s
  Time for loading CPAs:          0.977s
  Time for loading parser:        0.815s
  Time for CFA construction:      3.345s
    Time for parsing file(s):     0.974s
    Time for AST to CFA:          1.096s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.856s
      Time for var class.:        0.391s
Time for Analysis:                8.723s
CPU time for analysis:            8.720s
Time for analyzing result:        0.015s
Total time for CPAchecker:       14.045s
Total CPU time for CPAchecker:   14.030s
Time for statistics:              0.268s

Time for Garbage Collector:       0.330s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     41MB (    39 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8104MB (  7729 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
