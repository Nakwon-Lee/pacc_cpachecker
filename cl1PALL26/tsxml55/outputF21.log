scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--orinoco--orinoco_nortel.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jppwvrxa/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_orinocodev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hermes_struct_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function orinoco_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function orinoco_if_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_orinocodev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            38 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            27 (71%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (29%)
  Times precision was empty:       10 (26%)
  Times precision was {false}:     7 (18%)
  Times result was cached:         11 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (26%)
  Times result was 'false':        7 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         219
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       139
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         28
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.65
Number of irrelevant predicates:          10 (36%)
Number of preds handled by boolean abs:   10 (36%)
  Total number of models for allsat:      10
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.776s
  Time for path formula creation:        0.758s
Time for strengthen operator:            0.041s
Time for prec operator:                  0.232s
  Time for abstraction:                  0.218s (Max:     0.030s, Count: 38)
    Boolean abstraction:                 0.061s
    Solving time:                        0.082s (Max:     0.019s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.105s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.084s

Number of path formula cache hits:   2074 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.699s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          15 (count: 126, min: 0, max: 15, avg: 0.12)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                         3830 (count: 3830, min: 1, max: 1, avg: 1.00) [1 x 3830]

CPA algorithm statistics
------------------------
Number of iterations:            1062
Max size of waitlist:            14
Average size of waitlist:        5
Number of computed successors:   1194
Max successors for one state:    2
Number of times merged:          103
Number of times stopped:         115
Number of times breaked:         4

Total time for CPA algorithm:         1.896s (Max:     0.563s)
  Time for choose from waitlist:      0.007s
  Time for precision adjustment:      0.371s
  Time for transfer relation:         1.222s
  Time for merge operator:            0.130s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.053s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  12 (count: 4, min: 1, max: 5, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.097s
  Counterexample analysis:                             0.039s (Max:     0.017s, Calls: 4)
    Refinement sat check:                              0.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.001s
  ARG update:                                          0.025s

Length of refined path (in blocks):                      12 (count: 4, min: 1, max: 5, avg: 3.00)
Number of affected states:                                8 (count: 4, min: 0, max: 4, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         8 (count: 4, min: 0, max: 4, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               5 (count: 4, min: 0, max: 3, avg: 1.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 362
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 197.50
Avg. size of reached set after ref.:  21.25

Total time for CEGAR algorithm:       2.031s
Time for refinements:                 0.133s
Average time for refinement:          0.033s
Max time for refinement:              0.038s

Code Coverage
-----------------------------
  Function coverage:      0.435
  Visited lines:          1235
  Total lines:            1423
  Line coverage:          0.868
  Visited conditions:     56
  Total conditions:       80
  Condition coverage:     0.700

CPAchecker general statistics
-----------------------------
Number of program locations:     1594
Number of CFA edges:             1634
Number of relevant variables:    129
Number of functions:             23
Number of loops:                 4
Size of reached set:             368
  Number of reached locations:   189 (12%)
    Avg states per location:     1
    Max states per location:     6 (at node N14)
  Number of reached functions:   10 (43%)
  Number of partitions:          368
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.125s
  Time for loading CPAs:          1.022s
  Time for loading parser:        0.804s
  Time for CFA construction:      3.164s
    Time for parsing file(s):     0.979s
    Time for AST to CFA:          1.043s
    Time for CFA sanity check:    0.180s
    Time for post-processing:     0.753s
      Time for var class.:        0.250s
Time for Analysis:                2.031s
CPU time for analysis:            2.040s
Time for analyzing result:        0.000s
Total time for CPAchecker:        7.161s
Total CPU time for CPAchecker:    7.150s
Time for statistics:              0.130s

Time for Garbage Collector:       0.187s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     34MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
