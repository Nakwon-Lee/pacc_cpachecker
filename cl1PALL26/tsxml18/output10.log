scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--hwmon--gpio-fan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v1ftttlw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 891: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: tmp___0 = (int )_kstrtoul(s, base, res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_input to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_to_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function irq_set_irq_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_get_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            127 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            108 (85%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (15%)
  Times precision was empty:       38 (30%)
  Times precision was {false}:     16 (13%)
  Times result was cached:         46 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (21%)
  Times result was 'false':        14 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         524
  BDD entailment checks:           58
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       248
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         89
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.07
Number of irrelevant predicates:          26 (29%)
Number of preds handled by boolean abs:   27 (30%)
  Total number of models for allsat:      27
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.041s
  Time for path formula creation:        0.997s
Time for strengthen operator:            0.048s
Time for prec operator:                  0.829s
  Time for abstraction:                  0.787s (Max:     0.100s, Count: 127)
    Boolean abstraction:                 0.230s
    Solving time:                        0.310s (Max:     0.069s)
    Model enumeration time:              0.013s
    Time for BDD construction:           0.024s (Max:     0.008s)
Time for merge operator:                 0.178s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.323s

Number of path formula cache hits:   5934 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.899s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          37 (count: 348, min: 0, max: 28, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.151s
Automaton transfers with branching:                0
Automaton transfer successors:                         8538 (count: 8538, min: 1, max: 1, avg: 1.00) [1 x 8538]

CPA algorithm statistics
------------------------
Number of iterations:            3192
Max size of waitlist:            16
Average size of waitlist:        7
Number of computed successors:   3523
Max successors for one state:    2
Number of times merged:          233
Number of times stopped:         286
Number of times breaked:         5

Total time for CPA algorithm:         3.334s (Max:     0.917s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      1.022s
  Time for transfer relation:         1.805s
  Time for merge operator:            0.224s
  Time for stop operator:             0.035s
  Time for adding to reached set:     0.079s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  18 (count: 5, min: 2, max: 5, avg: 3.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.226s
  Counterexample analysis:                             0.164s (Max:     0.052s, Calls: 5)
    Refinement sat check:                              0.121s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.008s
  ARG update:                                          0.041s

Length of refined path (in blocks):                      18 (count: 5, min: 2, max: 5, avg: 3.60)
Number of affected states:                               13 (count: 5, min: 1, max: 4, avg: 2.60)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 5, min: 1, max: 4, avg: 2.60)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 5, min: 0, max: 3, avg: 1.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 679
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 498.60
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.593s
Time for refinements:                 0.257s
Average time for refinement:          0.051s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.519
  Visited lines:          968
  Total lines:            1481
  Line coverage:          0.654
  Visited conditions:     88
  Total conditions:       136
  Condition coverage:     0.647

CPAchecker general statistics
-----------------------------
Number of program locations:     1795
Number of CFA edges:             1867
Number of relevant variables:    368
Number of functions:             52
Number of loops:                 8
Size of reached set:             746
  Number of reached locations:   358 (20%)
    Avg states per location:     2
    Max states per location:     8 (at node N1498)
  Number of reached functions:   27 (52%)
  Number of partitions:          746
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.541s
  Time for loading CPAs:          0.908s
  Time for loading parser:        0.748s
  Time for CFA construction:      2.756s
    Time for parsing file(s):     0.837s
    Time for AST to CFA:          0.855s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.672s
      Time for var class.:        0.358s
Time for Analysis:                3.593s
CPU time for analysis:            3.600s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.141s
Total CPU time for CPAchecker:    8.130s
Time for statistics:              0.102s

Time for Garbage Collector:       0.183s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8087MB (  7713 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
