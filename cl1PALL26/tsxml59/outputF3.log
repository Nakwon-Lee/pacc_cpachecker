scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--media--dvb--dvb-usb--dvb-usb-vp702x.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__1y7sjur/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6786: Dead code detected: tmp = kmalloc(10UL, 208U); (CFACreationUtils.addEdgeToCFA, INFO)

line 6793: Dead code detected: [!(__cil_tmp10 == __cil_tmp9)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6794: Dead code detected: return (-12); (CFACreationUtils.addEdgeToCFA, INFO)

line 6800: Dead code detected: __cil_tmp11 = (u8 )180; (CFACreationUtils.addEdgeToCFA, INFO)

line 6809: Dead code detected: [!(__cil_tmp16 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6811: Dead code detected: __cil_tmp17 = key + 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6824: Dead code detected: __cil_tmp23 = key + 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6827: Dead code detected: [!(__cil_tmp25 == 68U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6829: Dead code detected: *state = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 6838: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_exit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_usb_device_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_interruptible_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            73 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            64 (88%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (12%)
  Times precision was empty:       25 (34%)
  Times precision was {false}:     6 (8%)
  Times result was cached:         15 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27 (37%)
  Times result was 'false':        7 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         333
  BDD entailment checks:           33
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       318
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         48
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.45
Number of irrelevant predicates:          9 (19%)
Number of preds handled by boolean abs:   27 (56%)
  Total number of models for allsat:      26
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  1.576s
  Time for path formula creation:        1.522s
Time for strengthen operator:            0.103s
Time for prec operator:                  0.566s
  Time for abstraction:                  0.518s (Max:     0.045s, Count: 73)
    Boolean abstraction:                 0.215s
    Solving time:                        0.213s (Max:     0.029s)
    Model enumeration time:              0.006s
    Time for BDD construction:           0.016s (Max:     0.014s)
Time for merge operator:                 0.091s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.219s

Number of path formula cache hits:   2194 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.486s

Total number of created targets for pointer analysis: 225
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 11


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          36 (count: 257, min: 0, max: 29, avg: 0.14)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.156s
Automaton transfers with branching:                0
Automaton transfer successors:                         7226 (count: 7226, min: 1, max: 1, avg: 1.00) [1 x 7226]

CPA algorithm statistics
------------------------
Number of iterations:            1632
Max size of waitlist:            10
Average size of waitlist:        3
Number of computed successors:   1837
Max successors for one state:    2
Number of times merged:          150
Number of times stopped:         182
Number of times breaked:         3

Total time for CPA algorithm:         3.423s (Max:     1.188s)
  Time for choose from waitlist:      0.033s
  Time for precision adjustment:      0.763s
  Time for transfer relation:         2.345s
  Time for merge operator:            0.121s
  Time for stop operator:             0.033s
  Time for adding to reached set:     0.056s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  13 (count: 3, min: 2, max: 8, avg: 4.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.137s
  Counterexample analysis:                             0.076s (Max:     0.040s, Calls: 3)
    Refinement sat check:                              0.065s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.003s
  ARG update:                                          0.023s

Length of refined path (in blocks):                      13 (count: 3, min: 2, max: 8, avg: 4.33)
Number of affected states:                               10 (count: 3, min: 1, max: 7, avg: 3.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 3, min: 1, max: 7, avg: 3.33)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               7 (count: 3, min: 0, max: 6, avg: 2.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 692
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 310.33
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       3.596s
Time for refinements:                 0.173s
Average time for refinement:          0.057s
Max time for refinement:              0.082s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          2062
  Total lines:            3266
  Line coverage:          0.631
  Visited conditions:     70
  Total conditions:       186
  Condition coverage:     0.376

CPAchecker general statistics
-----------------------------
Number of program locations:     3570
Number of CFA edges:             3684
Number of relevant variables:    851
Number of functions:             54
Number of loops:                 7
Size of reached set:             727
  Number of reached locations:   302 (8%)
    Avg states per location:     2
    Max states per location:     12 (at node N20)
  Number of reached functions:   24 (44%)
  Number of partitions:          727
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.504s
  Time for loading CPAs:          1.179s
  Time for loading parser:        0.762s
  Time for CFA construction:      4.394s
    Time for parsing file(s):     1.217s
    Time for AST to CFA:          1.562s
    Time for CFA sanity check:    0.367s
    Time for post-processing:     1.078s
      Time for var class.:        0.485s
Time for Analysis:                3.596s
CPU time for analysis:            3.610s
Time for analyzing result:        0.000s
Total time for CPAchecker:       10.117s
Total CPU time for CPAchecker:   10.110s
Time for statistics:              0.134s

Time for Garbage Collector:       0.257s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     37MB (    36 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    27 MiB) avg
Total process virtual memory:   8131MB (  7754 MiB) max;   8092MB (  7717 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
