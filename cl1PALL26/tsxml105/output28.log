scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--misc--sgi-xp--xp.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b81lgoiv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function is_uv_system to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            19 (79%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (21%)
  Times precision was empty:       14 (58%)
  Times precision was {false}:     3 (13%)
  Times result was cached:         3 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (17%)
  Times result was 'false':        3 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         34
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         10
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.43
Number of irrelevant predicates:          4 (40%)
Number of preds handled by boolean abs:   4 (40%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.413s
  Time for path formula creation:        0.402s
Time for strengthen operator:            0.009s
Time for prec operator:                  0.141s
  Time for abstraction:                  0.109s (Max:     0.042s, Count: 24)
    Boolean abstraction:                 0.041s
    Solving time:                        0.038s (Max:     0.027s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.034s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):     0.040s

Number of path formula cache hits:   303 (33%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.357s

Total number of created targets for pointer analysis: 11
   Number of created targets for uf: *(Return_type:_[unsigned_long_int],_Parameters:_1,_Parameter_1_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[signed_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[unsigned_long_int],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *unsigned_char is 2
   Number of created targets for uf: *(Return_type:_[enum_xp_retval],_Parameters:_3,_Parameter_1_type:_[unsigned_long_int],_Parameter_2_type:_[unsigned_long_int],_Parameter_3_type:_[unsigned_long_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[enum_xp_retval],_Parameters:_2,_Parameter_1_type:_[unsigned_long_int],_Parameter_2_type:_[unsigned_long_int],_VarArgs:_false)* is 3
   Number of created targets for uf: *signed_short_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 67, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.050s
Automaton transfers with branching:                0
Automaton transfer successors:                          911 (count: 911, min: 1, max: 1, avg: 1.00) [1 x 911]

CPA algorithm statistics
------------------------
Number of iterations:            301
Max size of waitlist:            4
Average size of waitlist:        2
Number of computed successors:   329
Max successors for one state:    2
Number of times merged:          13
Number of times stopped:         21
Number of times breaked:         2

Total time for CPA algorithm:         0.931s (Max:     0.637s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.201s
  Time for transfer relation:         0.649s
  Time for merge operator:            0.038s
  Time for stop operator:             0.012s
  Time for adding to reached set:     0.010s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.065s
  Counterexample analysis:                             0.032s (Max:     0.019s, Calls: 2)
    Refinement sat check:                              0.024s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.004s
  ARG update:                                          0.004s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 2, min: 0, max: 1, avg: 0.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 123
Max. size of reached set after ref.:  5
Avg. size of reached set before ref.: 94.00
Avg. size of reached set after ref.:  5.00

Total time for CEGAR algorithm:       1.018s
Time for refinements:                 0.086s
Average time for refinement:          0.043s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.235
  Visited lines:          512
  Total lines:            1284
  Line coverage:          0.399
  Visited conditions:     22
  Total conditions:       84
  Condition coverage:     0.262

CPAchecker general statistics
-----------------------------
Number of program locations:     1500
Number of CFA edges:             1543
Number of relevant variables:    298
Number of functions:             34
Number of loops:                 6
Size of reached set:             128
  Number of reached locations:   113 (8%)
    Avg states per location:     1
    Max states per location:     2 (at node N327)
  Number of reached functions:   8 (24%)
  Number of partitions:          128
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.749s
  Time for loading CPAs:          0.984s
  Time for loading parser:        0.843s
  Time for CFA construction:      2.798s
    Time for parsing file(s):     0.897s
    Time for AST to CFA:          0.863s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.621s
      Time for var class.:        0.350s
Time for Analysis:                1.018s
CPU time for analysis:            1.010s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.775s
Total CPU time for CPAchecker:    5.760s
Time for statistics:              0.094s

Time for Garbage Collector:       0.158s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 49MB (    47 MiB) max;     30MB (    29 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     24MB (    23 MiB) avg;     33MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        34MB (    33 MiB) max;     26MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8066MB (  7692 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
