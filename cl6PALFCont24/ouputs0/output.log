scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ssh-simplified/s3_srvr_1a_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jkwjbl11/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            103 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            57 (55%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (45%)
  Times precision was empty:       3 (3%)
  Times precision was {false}:     45 (44%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      55 (53%)
  Times result was 'false':        42 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         3524
  BDD entailment checks:           716
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          21
Number of abstraction locations:          2
Max number of predicates per location:    20
Avg number of predicates per location:    10
Total predicates per abstraction:         895
Max number of predicates per abstraction: 20
Avg number of predicates per abstraction: 8.95
Number of irrelevant predicates:          45 (5%)
Number of preds handled by boolean abs:   850 (95%)
  Total number of models for allsat:      297
  Max number of models for allsat:        12
  Avg number of models for allsat:        5.40

Time for post operator:                  1.032s
  Time for path formula creation:        0.948s
Time for strengthen operator:            0.052s
Time for prec operator:                  1.633s
  Time for abstraction:                  1.577s (Max:     0.046s, Count: 103)
    Boolean abstraction:                 0.826s
    Solving time:                        0.384s (Max:     0.012s)
    Model enumeration time:              0.316s
    Time for BDD construction:           0.105s (Max:     0.012s)
Time for merge operator:                 0.146s
Time for coverage check:                 0.047s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     0.700s

Number of path formula cache hits:   2876 (34%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.914s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               5074
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2063 (count: 2481, min: 0, max: 1503, avg: 0.83)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.187s
Automaton transfers with branching:                0
Automaton transfer successors:                         7920 (count: 7920, min: 1, max: 1, avg: 1.00) [1 x 7920]

CPA algorithm statistics
------------------------
Number of iterations:            5861
Max size of waitlist:            121
Average size of waitlist:        48
Number of computed successors:   7333
Max successors for one state:    2
Number of times merged:          1404
Number of times stopped:         1409
Number of times breaked:         4

Total time for CPA algorithm:         4.626s (Max:     2.855s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      1.971s
  Time for transfer relation:         1.773s
  Time for merge operator:            0.315s
  Time for stop operator:             0.128s
  Time for adding to reached set:     0.148s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  14 (count: 4, min: 2, max: 5, avg: 3.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.158s
  Counterexample analysis:                             0.063s (Max:     0.028s, Calls: 4)
    Refinement sat check:                              0.030s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.013s
  ARG update:                                          0.033s

Length of refined path (in blocks):                      14 (count: 4, min: 2, max: 5, avg: 3.50)
Number of affected states:                               10 (count: 4, min: 1, max: 4, avg: 2.50)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        10 (count: 4, min: 1, max: 4, avg: 2.50)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           6 (count: 4, min: 0, max: 3, avg: 1.50)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 795
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 456.00
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       4.806s
Time for refinements:                 0.176s
Average time for refinement:          0.044s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          110
  Total lines:            112
  Line coverage:          0.982
  Visited conditions:     58
  Total conditions:       58
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     149
Number of CFA edges:             177
Number of relevant variables:    9
Number of functions:             1
Number of loops:                 1
Size of reached set:             4071
  Number of reached locations:   116 (78%)
    Avg states per location:     35
    Max states per location:     36 (at node N0)
  Number of reached functions:   1 (100%)
  Number of partitions:          4036
    Avg size of partitions:      1
    Max size of partitions:      36 (with key [N18 (before lines 23-212), Function main called from node N1, stack depth 1 [d737b89], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.728s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.756s
  Time for CFA construction:      1.039s
    Time for parsing file(s):     0.394s
    Time for AST to CFA:          0.265s
    Time for CFA sanity check:    0.048s
    Time for post-processing:     0.168s
      Time for var class.:        0.046s
Time for Analysis:                4.806s
CPU time for analysis:            4.820s
Time for analyzing result:        0.004s
Total time for CPAchecker:        7.538s
Total CPU time for CPAchecker:    7.540s
Time for statistics:              0.196s

Time for Garbage Collector:       0.139s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8130MB (  7754 MiB) max;   8090MB (  7715 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
