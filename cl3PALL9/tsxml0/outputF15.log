scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--hwmon--applesmc.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_54d0bub6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6795: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6990: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7027: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 7040: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7053: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7105: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7135: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7165: Dead code detected: goto ldv_call_0; (CFACreationUtils.addEdgeToCFA, INFO)

line 7197: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7717: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7730: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7752: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7766: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7777: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7790: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 7907: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7936: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7462: Function pointer *arg0 with type void (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7101: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(1464UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6903: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6889: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function sysfs_remove_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4047: Return type of function __builtin_bswap32 is void, but result is used as type int: tmp = __builtin_bswap32(val); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_bswap32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_bswap32, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file_ns to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7073: Ignoring call via function pointer ldv_platform_instance_release_0_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7073: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6845: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(16UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 7539: Ignoring call via function pointer ldv_pm_ops_instance_prepare_1_22::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7539: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7506: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_1_9::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7506: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7528: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_noirq_1_6::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7528: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7572: Ignoring call via function pointer ldv_pm_ops_instance_restore_noirq_1_5::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7572: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7517: Ignoring call via function pointer ldv_pm_ops_instance_poweroff_late_1_8::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7517: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7561: Ignoring call via function pointer ldv_pm_ops_instance_restore_early_1_7::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7561: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7473: Ignoring call via function pointer ldv_pm_ops_instance_freeze_1_15::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7473: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7495: Ignoring call via function pointer ldv_pm_ops_instance_freeze_noirq_1_12::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7495: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7704: Ignoring call via function pointer ldv_pm_ops_instance_thaw_noirq_1_11::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7704: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7484: Ignoring call via function pointer ldv_pm_ops_instance_freeze_late_1_14::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7484: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7693: Ignoring call via function pointer ldv_pm_ops_instance_thaw_early_1_13::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7693: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7682: Ignoring call via function pointer ldv_pm_ops_instance_thaw_1_10::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7682: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7649: Ignoring call via function pointer ldv_pm_ops_instance_suspend_1_21::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7649: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7660: Ignoring call via function pointer ldv_pm_ops_instance_suspend_late_1_18::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7660: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7594: Ignoring call via function pointer ldv_pm_ops_instance_resume_early_1_17::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7594: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7671: Ignoring call via function pointer ldv_pm_ops_instance_suspend_noirq_1_20::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7671: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7605: Ignoring call via function pointer ldv_pm_ops_instance_resume_noirq_1_19::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7605: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7462: Ignoring call via function pointer ldv_pm_ops_instance_complete_1_3::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7462: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7638: Ignoring call via function pointer ldv_pm_ops_instance_runtime_suspend_1_25::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7638: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7627: Ignoring call via function pointer ldv_pm_ops_instance_runtime_resume_1_24::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7627: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7616: Ignoring call via function pointer ldv_pm_ops_instance_runtime_idle_1_27::arg0 for which no suitable target was found in line: (*arg0)(arg1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7616: Ignoring function call through function pointer *arg0: (*arg0)(arg1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            155428 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            108684 (70%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46744 (30%)
  Times precision was empty:       25545 (16%)
  Times precision was {false}:     6367 (4%)
  Times result was cached:         116817 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6699 (4%)
  Times result was 'false':        91369 (59%)
Number of strengthen sat checks:   0
Number of coverage checks:         208260
  BDD entailment checks:           16434
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       196
Number of predicates discovered:          38
Number of abstraction locations:          40
Max number of predicates per location:    31
Avg number of predicates per location:    5
Total predicates per abstraction:         709421
Max number of predicates per abstraction: 31
Avg number of predicates per abstraction: 54.30
Number of irrelevant predicates:          411697 (58%)
Number of preds handled by boolean abs:   48744 (7%)
  Total number of models for allsat:      14356
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.14

Time for post operator:                 36.488s
  Time for path formula creation:       34.484s
Time for strengthen operator:            3.804s
Time for prec operator:                247.070s
  Time for abstraction:                242.742s (Max:     0.421s, Count: 155428)
    Boolean abstraction:                91.490s
    Solving time:                       85.036s (Max:     0.364s)
    Model enumeration time:             15.637s
    Time for BDD construction:           0.711s (Max:     0.012s)
Time for merge operator:                 2.535s
Time for coverage check:                 0.094s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):   100.673s

Number of path formula cache hits:   3909208 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.876s

Total number of created targets for pointer analysis: 50993
   Number of created targets for uf: *signed_int is 55
   Number of created targets for uf: *(char)* is 49
   Number of created targets for uf: *unsigned_char is 11593
   Number of created targets for uf: *(struct_applesmc_entry)* is 25
   Number of created targets for uf: *_Bool is 51
   Number of created targets for uf: *(struct_platform_driver)* is 2
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 121
   Number of created targets for uf: *unsigned_int is 725


Number of BDD nodes:                               68294
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       39691 (count: 139758, min: 0, max: 450, avg: 0.28)
Time for BDD node cleanup:                             0.067s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.477s
  Time for transition matches:                         3.568s
  Time for transition assertions:                      0.015s
  Time for transition actions:                         0.039s
Automaton transfers with branching:                0
Automaton transfer successors:                      3896371 (count: 3896371, min: 1, max: 1, avg: 1.00) [1 x 3896371]

CPA algorithm statistics
------------------------
Number of iterations:            2504535
Max size of waitlist:            1241
Average size of waitlist:        303
Number of computed successors:   2735220
Max successors for one state:    2
Number of times merged:          95913
Number of times stopped:         108361
Number of times breaked:         5481

Total time for CPA algorithm:       374.665s (Max:     8.913s)
  Time for choose from waitlist:      1.480s
  Time for precision adjustment:    266.605s
  Time for transfer relation:        85.043s
  Time for merge operator:            4.150s
  Time for stop operator:             3.475s
  Time for adding to reached set:     6.783s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5481
Avg. length of target path (in blocks):               35562 (count: 5481, min: 1, max: 8, avg: 6.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 180.574s
  Counterexample analysis:                           169.888s (Max:     0.086s, Calls: 5481)
    Refinement sat check:                            137.807s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.072s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.113s
  Precision update:                                    1.173s
  ARG update:                                          6.509s

Length of refined path (in blocks):                   35451 (count: 5480, min: 1, max: 8, avg: 6.47)
Number of affected states:                              847 (count: 5480, min: 0, max: 7, avg: 0.15)
Length (states) of path with itp 'true':              29124 (count: 5480, min: 0, max: 7, avg: 5.31)
Length (states) of path with itp non-trivial itp:       847 (count: 5480, min: 0, max: 7, avg: 0.15)
Length (states) of path with itp 'false':                89 (count: 5480, min: 0, max: 1, avg: 0.02)
Different non-trivial interpolants along paths:          86 (count: 5480, min: 0, max: 2, avg: 0.02)
Equal non-trivial interpolants along paths:             466 (count: 5480, min: 0, max: 6, avg: 0.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5481
Number of successful refinements:     5480
Number of failed refinements:         0
Max. size of reached set before ref.: 84115
Max. size of reached set after ref.:  83081
Avg. size of reached set before ref.: 35252.83
Avg. size of reached set after ref.:  34796.58

Total time for CEGAR algorithm:     893.319s
Time for refinements:               355.784s
Average time for refinement:          0.064s
Max time for refinement:              0.563s

Code Coverage
-----------------------------
  Function coverage:      0.337
  Visited lines:          1653
  Total lines:            3562
  Line coverage:          0.464
  Visited conditions:     350
  Total conditions:       902
  Condition coverage:     0.388

CPAchecker general statistics
-----------------------------
Number of program locations:     5751
Number of CFA edges:             6420
Number of relevant variables:    784
Number of functions:             481
Number of loops:                 24
Size of reached set:             36095
  Number of reached locations:   1349 (23%)
    Avg states per location:     26
    Max states per location:     574 (at node N815)
  Number of reached functions:   162 (34%)
  Number of partitions:          36079
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1788 (before lines 7106-7109), Function ldv_platform_platform_instance_0 called from node N1639, stack depth 8 [421def93], stack [main, ldv_entry_EMGentry_9, ldv_EMGentry_init_applesmc_init_9_11, applesmc_init, ldv___platform_driver_register_102, ldv___platform_driver_register, ldv_dispatch_register_5_2, ldv_platform_platform_instance_0]])
  Number of target states:       1
  Size of final wait list        405

Time for analysis setup:          6.899s
  Time for loading CPAs:          1.065s
  Time for loading parser:        0.770s
  Time for CFA construction:      4.892s
    Time for parsing file(s):     1.162s
    Time for AST to CFA:          1.970s
    Time for CFA sanity check:    0.376s
    Time for post-processing:     1.143s
      Time for var class.:        0.633s
Time for Analysis:              893.319s
CPU time for analysis:          893.250s
Total time for CPAchecker:      900.225s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.677s

Time for Garbage Collector:      34.926s (in 1808 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                280MB (   267 MiB) max;    154MB (   147 MiB) avg;    286MB (   273 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           288MB (   274 MiB) max;    234MB (   223 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8409MB (  8019 MiB) max;   8286MB (  7902 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
