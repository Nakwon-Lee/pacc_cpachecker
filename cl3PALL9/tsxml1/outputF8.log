scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-4.0-rc1-mav/linux-4.0-rc1---drivers--xen--xen-pciback--xen-pciback.ko_true-unreach-call.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j9ezekte/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8206: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8231: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8244: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 8717: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8894: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8925: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 8972: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8978: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8979: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8986: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8987: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 8988: Dead code detected: goto ldv_call_3; (CFACreationUtils.addEdgeToCFA, INFO)

line 9060: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9078: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9110: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9128: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9160: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9178: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9210: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9228: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9260: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9278: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9310: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9328: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9360: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9380: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9417: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9437: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9474: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9494: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9531: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9551: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9588: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9608: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9645: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9665: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9702: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9722: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9759: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9779: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9816: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9836: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9873: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9897: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9913: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9932: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 9992: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10011: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10071: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10090: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10150: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 10490: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10518: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10534: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10655: Dead code detected: return (1); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 11619: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11675: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 11708: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 11727: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13336: Dead code detected: return (arg0); (CFACreationUtils.addEdgeToCFA, INFO)

line 13429: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13534: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13605: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13637: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13654: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13667: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 13773: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 17400: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17435: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 17528: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8840: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8852: Function pointer *arg0 with type int (*)(struct pci_dev *, struct pm_message ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8890: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp___0 = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ldv_linux_kernel_locking_spinlock_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8483: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pre_probe to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_after_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __xenbus_register_backend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13599: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(32UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function bus_register_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11826: Ignoring function call through function pointer *(xen_pcibk_backend->init): tmp = (*(xen_pcibk_backend->init))(pdev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function external_allocated_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_switch_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_watch_path to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_read_driver_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_scanf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_dev_fatal to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_gather to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xenbus_map_ring_valloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bind_interdomain_evtchn_to_irqhandler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8466: Destroying the void* pointer ldv_xmalloc::tmp produces garbage or the memory pointed by it is unused: tmp = ldv_xmalloc(4UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 11847: Ignoring function call through function pointer *(xen_pcibk_backend->publish): tmp = (*(xen_pcibk_backend->publish))(pdev, cb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 16481-16482: Ignoring call via function pointer __xen_pcibk_add_pci_dev::publish_cb for which no suitable target was found in line: err = (*publish_cb)(pdev, 0U, 0U, (unsigned int)(((slot << 3) & 255) | (func & 7)), (unsigned int)devid); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 16481-16482: Ignoring function call through function pointer *publish_cb: err = (*publish_cb)(pdev, 0U, 0U, (unsigned int)(((slot << 3) & 255) | (func & 7)), (unsigned int)devid); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function xenbus_printf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16615: Ignoring call via function pointer __xen_pcibk_publish_pci_roots::publish_cb for which no suitable target was found in line: tmp = (*publish_cb)(pdev, 0U, 0U); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 16615: Ignoring function call through function pointer *publish_cb: tmp = (*publish_cb)(pdev, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_reset_function_locked to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xen_test_irq_shared to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_write_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xen_unregister_device_domain_owner to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_and_free_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function xen_physdev_op_compat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11810: Ignoring function call through function pointer *(xen_pcibk_backend->add): tmp = (*(xen_pcibk_backend->add))(pdev, dev, devid, publish_cb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function xen_register_device_domain_owner to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 14608-14609: Ignoring function call through function pointer *(field->release): (*(field->release))(dev, (int)((cfg_entry->base_offset) + __CPAchecker_TMP_1), cfg_entry->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 14476: Ignoring function call through function pointer *(field->clean): (*(field->clean))((struct config_field *)field); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 14540-14541: Ignoring function call through function pointer *(field->reset): (*(field->reset))(dev, (int)(__CPAchecker_TMP_1 + __CPAchecker_TMP_2), cfg_entry->data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            75639 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            48021 (63%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         27618 (37%)
  Times precision was empty:       30091 (40%)
  Times precision was {false}:     6254 (8%)
  Times result was cached:         34062 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5232 (7%)
  Times result was 'false':        29269 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         442378
  BDD entailment checks:           270770
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       693
Number of predicates discovered:          81
Number of abstraction locations:          49
Max number of predicates per location:    41
Avg number of predicates per location:    6
Total predicates per abstraction:         382877
Max number of predicates per abstraction: 41
Avg number of predicates per abstraction: 33.33
Number of irrelevant predicates:          66913 (17%)
Number of preds handled by boolean abs:   91296 (24%)
  Total number of models for allsat:      28090
  Max number of models for allsat:        33
  Avg number of models for allsat:        5.37

Time for post operator:                 44.800s
  Time for path formula creation:       43.461s
Time for strengthen operator:            2.165s
Time for prec operator:                610.202s
  Time for abstraction:                606.969s (Max:     1.112s, Count: 75639)
    Boolean abstraction:               501.372s
    Solving time:                      217.187s (Max:     0.834s)
    Model enumeration time:            298.840s
    Time for BDD construction:           2.143s (Max:     0.217s)
Time for merge operator:                 6.640s
Time for coverage check:                 0.821s
  Time for BDD entailment checks:        0.773s
Total time for SMT solver (w/o itp):   516.028s

Number of path formula cache hits:   2045727 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.679s

Total number of created targets for pointer analysis: 73511
   Number of created targets for uf: *(void)* is 110
   Number of created targets for uf: *signed_int is 113
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *(struct_xen_pci_sharedinfo)* is 47
   Number of created targets for uf: *(struct_pci_driver)* is 2
   Number of created targets for uf: *(struct_xenbus_device)* is 3
   Number of created targets for uf: *char is 41
   Number of created targets for uf: *unsigned_int is 2736
   Number of created targets for uf: *unsigned_long_int is 18


Number of BDD nodes:                               117538
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       74529 (count: 395488, min: 0, max: 4505, avg: 0.19)
Time for BDD node cleanup:                             0.066s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.184s
  Time for transition matches:                         2.133s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.035s
Automaton transfers with branching:                0
Automaton transfer successors:                      2037718 (count: 2037718, min: 1, max: 1, avg: 1.00) [1 x 2037718]

CPA algorithm statistics
------------------------
Number of iterations:            1453485
Max size of waitlist:            545
Average size of waitlist:        290
Number of computed successors:   1607642
Max successors for one state:    2
Number of times merged:          85804
Number of times stopped:         92912
Number of times breaked:         1412

Total time for CPA algorithm:       725.513s (Max:    34.904s)
  Time for choose from waitlist:      0.843s
  Time for precision adjustment:    622.426s
  Time for transfer relation:        81.377s
  Time for merge operator:            8.438s
  Time for stop operator:             3.067s
  Time for adding to reached set:     4.620s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1412
Avg. length of target path (in blocks):               10222 (count: 1412, min: 1, max: 77, avg: 7.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 127.285s
  Counterexample analysis:                           122.338s (Max:     0.645s, Calls: 1412)
    Refinement sat check:                            107.879s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.042s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.155s
  Precision update:                                    0.302s
  ARG update:                                          3.018s

Length of refined path (in blocks):                    9880 (count: 1412, min: 1, max: 77, avg: 7.00)
Number of affected states:                             4013 (count: 1412, min: 0, max: 76, avg: 2.84)
Length (states) of path with itp 'true':               4455 (count: 1412, min: 0, max: 71, avg: 3.16)
Length (states) of path with itp non-trivial itp:      4013 (count: 1412, min: 0, max: 76, avg: 2.84)
Length (states) of path with itp 'false':               300 (count: 1412, min: 0, max: 1, avg: 0.21)
Different non-trivial interpolants along paths:         849 (count: 1412, min: 0, max: 31, avg: 0.60)
Equal non-trivial interpolants along paths:            2250 (count: 1412, min: 0, max: 75, avg: 1.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1412
Number of successful refinements:     1412
Number of failed refinements:         0
Max. size of reached set before ref.: 41304
Max. size of reached set after ref.:  39384
Avg. size of reached set before ref.: 14722.03
Avg. size of reached set after ref.:  13698.32

Total time for CEGAR algorithm:     889.923s
Time for refinements:               148.113s
Average time for refinement:          0.104s
Max time for refinement:              0.684s

Code Coverage
-----------------------------
  Function coverage:      0.338
  Visited lines:          3125
  Total lines:            7954
  Line coverage:          0.393
  Visited conditions:     537
  Total conditions:       2058
  Condition coverage:     0.261

CPAchecker general statistics
-----------------------------
Number of program locations:     12023
Number of CFA edges:             13813
Number of relevant variables:    2297
Number of functions:             755
Number of loops:                 80
Size of reached set:             39988
  Number of reached locations:   2319 (19%)
    Avg states per location:     17
    Max states per location:     550 (at node N222)
  Number of reached functions:   255 (34%)
  Number of partitions:          39582
    Avg size of partitions:      1
    Max size of partitions:      126 (with key [N7979 (before line 16725), Function __xen_pcibk_get_pcifront_dev called from node N8014, stack depth 6 [1048e047], stack [main, ldv_entry_EMGentry_34, ldv_dispatch_register_io_instance_15_34_15, ldv_struct_xen_pcibk_backend_io_instance_20, ldv_io_instance_callback_20_4, __xen_pcibk_get_pcifront_dev]])
  Number of target states:       0
  Size of final wait list        531

Time for analysis setup:         10.305s
  Time for loading CPAs:          1.331s
  Time for loading parser:        0.848s
  Time for CFA construction:      7.930s
    Time for parsing file(s):     1.619s
    Time for AST to CFA:          2.938s
    Time for CFA sanity check:    1.047s
    Time for post-processing:     2.140s
      Time for var class.:        1.237s
Time for Analysis:              889.923s
CPU time for analysis:          889.860s
Total time for CPAchecker:      900.248s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.716s

Time for Garbage Collector:      12.931s (in 979 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                201MB (   192 MiB) max;    107MB (   102 MiB) avg;    210MB (   200 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           250MB (   238 MiB) max;    169MB (   161 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8483MB (  8090 MiB) max;   8324MB (  7939 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
