scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--mmc--host--sdhci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l6suhmkw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3409: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3412: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3415: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3607: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3610: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3613: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4756: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6218: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7039: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8690: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4007: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3926-3927: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4123: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4103: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4071: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4039: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3960: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8127: Function pointer *(host->ops->get_timeout_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8112: Function pointer *(host->ops->get_min_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8099: Function pointer *(host->ops->get_max_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8047: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(host->ops->get_ro) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7478: Function pointer *(host->ops->adma_workaround) with type void (*)(struct sdhci_host *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6527: Function pointer *(host->ops->set_uhs_signaling) with type int (*)(struct sdhci_host *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6464: Function pointer *(host->ops->platform_8bit_width) with type int (*)(struct sdhci_host *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6458: Function pointer *(host->ops->platform_send_init_74_clocks) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6658: Function pointer *(host->ops->hw_reset) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4791: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4780: Function pointer *(host->ops->platform_reset_exit) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(host->ops->platform_reset_enter) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7725: Function pointer *(host->ops->platform_resume) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7699: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7806: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6108: Function pointer *(host->ops->set_clock) with type void (*)(struct sdhci_host *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7663: Function pointer *(host->ops->platform_suspend) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6658: Ignoring function call through function pointer *(host->ops->hw_reset): (*(host->ops->hw_reset))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_regulator_set_ocr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_gpio_get_cd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(host->ops->platform_reset_enter): (*(host->ops->platform_reset_enter))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4264: Ignoring function call through function pointer *(host->ops->enable_sdio_irq): (*(host->ops->enable_sdio_irq))(host, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6108: Ignoring function call through function pointer *(host->ops->set_clock): (*(host->ops->set_clock))(host, clock); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6458: Ignoring function call through function pointer *(host->ops->platform_send_init_74_clocks): (*(host->ops->platform_send_init_74_clocks))(host, __CPAchecker_TMP_7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6464: Ignoring function call through function pointer *(host->ops->platform_8bit_width): (*(host->ops->platform_8bit_width))(host, __CPAchecker_TMP_9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6598: Ignoring function call through function pointer *(host->ops->get_ro): tmp___0 = (*(host->ops->get_ro))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4780: Ignoring function call through function pointer *(host->ops->platform_reset_exit): (*(host->ops->platform_reset_exit))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4791: Ignoring function call through function pointer *(host->ops->enable_dma): (*(host->ops->enable_dma))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6527: Ignoring function call through function pointer *(host->ops->set_uhs_signaling): (*(host->ops->set_uhs_signaling))(host, __CPAchecker_TMP_22); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7478: Ignoring function call through function pointer *(host->ops->adma_workaround): (*(host->ops->adma_workaround))(host, intmask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4039: Ignoring function call through function pointer *(ops->unmap_sg): (*(ops->unmap_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4007: Ignoring function call through function pointer *(ops->map_sg): ents = (*(ops->map_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3960: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3926-3927: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4123: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_stop to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_miter_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4103: Ignoring function call through function pointer *(ops->sync_sg_for_cpu): (*(ops->sync_sg_for_cpu))(dev, sg, nelems, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_sg_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4071: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4815: Unsupported feature (recursion): sdhci_set_ios(host->mmc, &(host->mmc->ios)); (line was originally sdhci_set_ios(host->mmc, & (host->mmc)->ios);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            3991878 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3737133 (94%)
  Because of loop head:            254239 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         506 (0%)
  Times precision was empty:       508804 (13%)
  Times precision was {false}:     2048 (0%)
  Times result was cached:         3474238 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6788 (0%)
  Times result was 'false':        22593 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2276069
  BDD entailment checks:           445855
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          7
Number of abstraction locations:          488
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         12028838
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 1361.34
Number of irrelevant predicates:          2811942 (23%)
Number of preds handled by boolean abs:   13931 (0%)
  Total number of models for allsat:      6826
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 39.618s
  Time for path formula creation:       33.646s
Time for strengthen operator:           11.863s
Time for prec operator:                273.714s
  Time for abstraction:                252.874s (Max:     1.505s, Count: 3991878)
    Boolean abstraction:                 3.448s
    Solving time:                        3.449s (Max:     0.014s)
    Model enumeration time:              0.293s
    Time for BDD construction:           0.159s (Max:     0.012s)
Time for merge operator:                 1.986s
Time for coverage check:                 0.426s
  Time for BDD entailment checks:        0.228s
Total time for SMT solver (w/o itp):     3.742s

Number of path formula cache hits:   26285668 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.950s

Total number of created targets for pointer analysis: 827
   Number of created targets for uf: *(struct_mmc_command)* is 15
   Number of created targets for uf: *(struct_mmc_data)* is 8
   Number of created targets for uf: *unsigned_int is 27


Number of BDD nodes:                               274
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13672 (count: 1016161, min: 0, max: 194, avg: 0.01)
Time for BDD node cleanup:                             0.113s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.094s
  Time for transition matches:                        10.026s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     21964541 (count: 21964541, min: 1, max: 1, avg: 1.00) [1 x 21964541]

CPA algorithm statistics
------------------------
Number of iterations:            13228667
Max size of waitlist:            7119
Average size of waitlist:        1848
Number of computed successors:   15033768
Max successors for one state:    2
Number of times merged:          915107
Number of times stopped:         1330649
Number of times breaked:         506

Total time for CPA algorithm:       578.395s (Max:    10.082s)
  Time for choose from waitlist:      2.644s
  Time for precision adjustment:    332.229s
  Time for transfer relation:       195.025s
  Time for merge operator:            7.880s
  Time for stop operator:             8.679s
  Time for adding to reached set:    12.397s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   506
Avg. length of target path (in blocks):               31041 (count: 506, min: 7, max: 169, avg: 61.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.840s
  Counterexample analysis:                             4.088s (Max:     0.034s, Calls: 506)
    Refinement sat check:                              2.357s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.115s
  Precision update:                                    0.412s
  ARG update:                                         22.968s

Length of refined path (in blocks):                   28254 (count: 506, min: 6, max: 125, avg: 55.84)
Number of affected states:                            25301 (count: 506, min: 0, max: 123, avg: 50.00)
Length (states) of path with itp 'true':               2447 (count: 506, min: 1, max: 75, avg: 4.84)
Length (states) of path with itp non-trivial itp:     25301 (count: 506, min: 0, max: 123, avg: 50.00)
Length (states) of path with itp 'false':               506 (count: 506, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 506, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           24815 (count: 506, min: 0, max: 122, avg: 49.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                506
Number of successful refinements:     506
Number of failed refinements:         0
Max. size of reached set before ref.: 214955
Max. size of reached set after ref.:  213904
Avg. size of reached set before ref.: 35127.65
Avg. size of reached set after ref.:  8546.52

Total time for CEGAR algorithm:     618.217s
Time for refinements:                36.747s
Average time for refinement:          0.072s
Max time for refinement:              1.267s

Code Coverage
-----------------------------
  Function coverage:      0.638
  Visited lines:          2847
  Total lines:            3703
  Line coverage:          0.769
  Visited conditions:     796
  Total conditions:       1160
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     5335
Number of CFA edges:             6314
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 51
Size of reached set:             230478
  Number of reached locations:   2325 (44%)
    Avg states per location:     99
    Max states per location:     8889 (at node N4683)
  Number of reached functions:   102 (64%)
  Number of partitions:          230456
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3691 (before line 7642), Function sdhci_irq called from node N4607, stack depth 2 [7724af38], stack [main, sdhci_irq]])
  Number of target states:       0
  Size of final wait list        6346

Time for analysis setup:          3.972s
  Time for loading CPAs:          0.699s
  Time for loading parser:        0.412s
  Time for CFA construction:      2.767s
    Time for parsing file(s):     0.731s
    Time for AST to CFA:          0.925s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     0.728s
      Time for var class.:        0.351s
Time for Analysis:              618.217s
CPU time for analysis:          618.180s
Total time for CPAchecker:      622.191s
Total CPU time for CPAchecker:  622.150s
Time for statistics:              3.132s

Time for Garbage Collector:     100.538s (in 3225 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                705MB (   673 MiB) max;    288MB (   274 MiB) avg;    770MB (   734 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           725MB (   691 MiB) max;    438MB (   417 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8083MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
