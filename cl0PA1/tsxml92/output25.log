scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--mmc--host--sdhci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dezq18jz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3409: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3412: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3415: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3607: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3610: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3613: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4756: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6218: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7039: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8690: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4007: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3926-3927: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4123: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4103: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4071: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4039: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3960: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8127: Function pointer *(host->ops->get_timeout_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8112: Function pointer *(host->ops->get_min_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8099: Function pointer *(host->ops->get_max_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8047: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(host->ops->get_ro) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7478: Function pointer *(host->ops->adma_workaround) with type void (*)(struct sdhci_host *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6527: Function pointer *(host->ops->set_uhs_signaling) with type int (*)(struct sdhci_host *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6464: Function pointer *(host->ops->platform_8bit_width) with type int (*)(struct sdhci_host *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6458: Function pointer *(host->ops->platform_send_init_74_clocks) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6658: Function pointer *(host->ops->hw_reset) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4791: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4780: Function pointer *(host->ops->platform_reset_exit) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(host->ops->platform_reset_enter) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7725: Function pointer *(host->ops->platform_resume) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7699: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7806: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6108: Function pointer *(host->ops->set_clock) with type void (*)(struct sdhci_host *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7663: Function pointer *(host->ops->platform_suspend) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6658: Ignoring function call through function pointer *(host->ops->hw_reset): (*(host->ops->hw_reset))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4264: Ignoring function call through function pointer *(host->ops->enable_sdio_irq): (*(host->ops->enable_sdio_irq))(host, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_gpio_get_cd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(host->ops->platform_reset_enter): (*(host->ops->platform_reset_enter))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6108: Ignoring function call through function pointer *(host->ops->set_clock): (*(host->ops->set_clock))(host, clock); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mmc_regulator_set_ocr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6458: Ignoring function call through function pointer *(host->ops->platform_send_init_74_clocks): (*(host->ops->platform_send_init_74_clocks))(host, __CPAchecker_TMP_7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6464: Ignoring function call through function pointer *(host->ops->platform_8bit_width): (*(host->ops->platform_8bit_width))(host, __CPAchecker_TMP_9); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6598: Ignoring function call through function pointer *(host->ops->get_ro): tmp___0 = (*(host->ops->get_ro))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4780: Ignoring function call through function pointer *(host->ops->platform_reset_exit): (*(host->ops->platform_reset_exit))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4791: Ignoring function call through function pointer *(host->ops->enable_dma): (*(host->ops->enable_dma))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            102448 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  97190 (95%)
  Because of loop head:            5093 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         165 (0%)
  Times precision was empty:       20527 (20%)
  Times precision was {false}:     544 (1%)
  Times result was cached:         79686 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1691 (2%)
  Times result was 'false':        1374 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         38716
  BDD entailment checks:           14254
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          6
Number of abstraction locations:          210
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         277977
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 124.37
Number of irrelevant predicates:          87796 (32%)
Number of preds handled by boolean abs:   3343 (1%)
  Total number of models for allsat:      1715
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.772s
  Time for path formula creation:        2.585s
Time for strengthen operator:            0.368s
Time for prec operator:                 11.570s
  Time for abstraction:                 10.726s (Max:     0.018s, Count: 102448)
    Boolean abstraction:                 1.026s
    Solving time:                        0.896s (Max:     0.013s)
    Model enumeration time:              0.060s
    Time for BDD construction:           0.123s (Max:     0.012s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     0.956s

Number of path formula cache hits:   570157 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.014s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               262
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3508 (count: 47914, min: 0, max: 134, avg: 0.07)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.765s
  Time for transition matches:                         0.375s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       488578 (count: 488578, min: 1, max: 1, avg: 1.00) [1 x 488578]

CPA algorithm statistics
------------------------
Number of iterations:            309316
Max size of waitlist:            177
Average size of waitlist:        52
Number of computed successors:   347140
Max successors for one state:    2
Number of times merged:          12231
Number of times stopped:         23033
Number of times breaked:         165

Total time for CPA algorithm:        23.047s (Max:     0.468s)
  Time for choose from waitlist:      0.132s
  Time for precision adjustment:     13.414s
  Time for transfer relation:         7.399s
  Time for merge operator:            0.326s
  Time for stop operator:             0.413s
  Time for adding to reached set:     0.402s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   165
Avg. length of target path (in blocks):                6091 (count: 165, min: 7, max: 72, avg: 36.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.881s
  Counterexample analysis:                             1.037s (Max:     0.020s, Calls: 165)
    Refinement sat check:                              0.642s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.101s
  ARG update:                                          0.605s

Length of refined path (in blocks):                    5750 (count: 165, min: 6, max: 71, avg: 34.85)
Number of affected states:                             5380 (count: 165, min: 4, max: 69, avg: 32.61)
Length (states) of path with itp 'true':                205 (count: 165, min: 1, max: 6, avg: 1.24)
Length (states) of path with itp non-trivial itp:      5380 (count: 165, min: 4, max: 69, avg: 32.61)
Length (states) of path with itp 'false':               165 (count: 165, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 165, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5215 (count: 165, min: 3, max: 68, avg: 31.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                165
Number of successful refinements:     165
Number of failed refinements:         0
Max. size of reached set before ref.: 4190
Max. size of reached set after ref.:  949
Avg. size of reached set before ref.: 1981.85
Avg. size of reached set after ref.:  34.99

Total time for CEGAR algorithm:      25.237s
Time for refinements:                 2.178s
Average time for refinement:          0.013s
Max time for refinement:              0.034s

Code Coverage
-----------------------------
  Function coverage:      0.388
  Visited lines:          1296
  Total lines:            3703
  Line coverage:          0.350
  Visited conditions:     214
  Total conditions:       1160
  Condition coverage:     0.184

CPAchecker general statistics
-----------------------------
Number of program locations:     5335
Number of CFA edges:             6314
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 51
Size of reached set:             1502
  Number of reached locations:   658 (12%)
    Avg states per location:     2
    Max states per location:     26 (at node N270)
  Number of reached functions:   62 (39%)
  Number of partitions:          1496
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3691 (before line 7642), Function sdhci_irq called from node N4607, stack depth 2 [349b2cda], stack [main, sdhci_irq]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          5.042s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.540s
  Time for CFA construction:      3.503s
    Time for parsing file(s):     0.823s
    Time for AST to CFA:          1.136s
    Time for CFA sanity check:    0.385s
    Time for post-processing:     1.031s
      Time for var class.:        0.484s
Time for Analysis:               25.237s
CPU time for analysis:           25.230s
Total time for CPAchecker:       30.282s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.078s

Time for Garbage Collector:       1.024s (in 177 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    76 MiB) max;     52MB (    50 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
