scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--mmc--host--sdhci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lvw8dfea/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3409: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3412: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3415: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3607: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3610: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3613: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6177;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4756: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5952: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6218: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7039: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8690: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4007: Function pointer *(ops->map_sg) with type int (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3926-3927: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4123: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4103: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4071: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4039: Function pointer *(ops->unmap_sg) with type void (*)(struct device *, struct scatterlist *, int, enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3960: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8127: Function pointer *(host->ops->get_timeout_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8112: Function pointer *(host->ops->get_min_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8099: Function pointer *(host->ops->get_max_clock) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8047: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6598: Function pointer *(host->ops->get_ro) with type unsigned int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7478: Function pointer *(host->ops->adma_workaround) with type void (*)(struct sdhci_host *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6527: Function pointer *(host->ops->set_uhs_signaling) with type int (*)(struct sdhci_host *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6464: Function pointer *(host->ops->platform_8bit_width) with type int (*)(struct sdhci_host *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6458: Function pointer *(host->ops->platform_send_init_74_clocks) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6658: Function pointer *(host->ops->hw_reset) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4791: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4780: Function pointer *(host->ops->platform_reset_exit) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(host->ops->platform_reset_enter) with type void (*)(struct sdhci_host *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7725: Function pointer *(host->ops->platform_resume) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7699: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7806: Function pointer *(host->ops->enable_dma) with type int (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6108: Function pointer *(host->ops->set_clock) with type void (*)(struct sdhci_host *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7663: Function pointer *(host->ops->platform_suspend) with type void (*)(struct sdhci_host *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6658: Ignoring function call through function pointer *(host->ops->hw_reset): (*(host->ops->hw_reset))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function regulator_set_voltage to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6598: Ignoring function call through function pointer *(host->ops->get_ro): tmp___0 = (*(host->ops->get_ro))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(host->ops->platform_reset_enter): (*(host->ops->platform_reset_enter))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4780: Ignoring function call through function pointer *(host->ops->platform_reset_exit): (*(host->ops->platform_reset_exit))(host, (int)mask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4791: Ignoring function call through function pointer *(host->ops->enable_dma): (*(host->ops->enable_dma))(host); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_gpio_get_cd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4264: Ignoring function call through function pointer *(host->ops->enable_sdio_irq): (*(host->ops->enable_sdio_irq))(host, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_unmap_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4039: Ignoring function call through function pointer *(ops->unmap_sg): (*(ops->unmap_sg))(dev, sg, nents, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3960: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4103: Ignoring function call through function pointer *(ops->sync_sg_for_cpu): (*(ops->sync_sg_for_cpu))(dev, sg, nelems, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_sg_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            127091 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  118250 (93%)
  Because of loop head:            8709 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (0%)
  Times precision was empty:       44691 (35%)
  Times precision was {false}:     632 (0%)
  Times result was cached:         80291 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1477 (1%)
  Times result was 'false':        925 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         53302
  BDD entailment checks:           19460
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          5
Number of abstraction locations:          176
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         246691
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 116.97
Number of irrelevant predicates:          119242 (48%)
Number of preds handled by boolean abs:   2596 (1%)
  Total number of models for allsat:      1489
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.903s
  Time for path formula creation:        3.718s
Time for strengthen operator:            0.402s
Time for prec operator:                 10.668s
  Time for abstraction:                  9.665s (Max:     0.027s, Count: 127091)
    Boolean abstraction:                 0.758s
    Solving time:                        0.661s (Max:     0.013s)
    Model enumeration time:              0.072s
    Time for BDD construction:           0.090s (Max:     0.010s)
Time for merge operator:                 0.157s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     0.733s

Number of path formula cache hits:   581609 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.126s

Total number of created targets for pointer analysis: 6
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2996 (count: 76228, min: 0, max: 116, avg: 0.04)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.698s
  Time for transition matches:                         0.349s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       502785 (count: 502785, min: 1, max: 1, avg: 1.00) [1 x 502785]

CPA algorithm statistics
------------------------
Number of iterations:            367116
Max size of waitlist:            75
Average size of waitlist:        26
Number of computed successors:   403073
Max successors for one state:    2
Number of times merged:          16921
Number of times stopped:         31857
Number of times breaked:         132

Total time for CPA algorithm:        24.492s (Max:     0.851s)
  Time for choose from waitlist:      0.184s
  Time for precision adjustment:     12.952s
  Time for transfer relation:         8.943s
  Time for merge operator:            0.377s
  Time for stop operator:             0.510s
  Time for adding to reached set:     0.462s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   132
Avg. length of target path (in blocks):                4662 (count: 132, min: 7, max: 67, avg: 35.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.693s
  Counterexample analysis:                             0.822s (Max:     0.016s, Calls: 132)
    Refinement sat check:                              0.417s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.084s
  ARG update:                                          0.710s

Length of refined path (in blocks):                    4523 (count: 132, min: 6, max: 66, avg: 34.27)
Number of affected states:                             4254 (count: 132, min: 4, max: 64, avg: 32.23)
Length (states) of path with itp 'true':                137 (count: 132, min: 1, max: 6, avg: 1.04)
Length (states) of path with itp non-trivial itp:      4254 (count: 132, min: 4, max: 64, avg: 32.23)
Length (states) of path with itp 'false':               132 (count: 132, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 132, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4122 (count: 132, min: 3, max: 63, avg: 31.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                132
Number of successful refinements:     132
Number of failed refinements:         0
Max. size of reached set before ref.: 6732
Max. size of reached set after ref.:  1460
Avg. size of reached set before ref.: 2772.25
Avg. size of reached set after ref.:  17.02

Total time for CEGAR algorithm:      26.507s
Time for refinements:                 1.996s
Average time for refinement:          0.015s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      0.519
  Visited lines:          1493
  Total lines:            3703
  Line coverage:          0.403
  Visited conditions:     304
  Total conditions:       1160
  Condition coverage:     0.262

CPAchecker general statistics
-----------------------------
Number of program locations:     5335
Number of CFA edges:             6314
Number of relevant variables:    693
Number of functions:             160
Number of loops:                 51
Size of reached set:             6601
  Number of reached locations:   1030 (19%)
    Avg states per location:     6
    Max states per location:     137 (at node N4683)
  Number of reached functions:   83 (52%)
  Number of partitions:          6568
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3691 (before line 7642), Function sdhci_irq called from node N4607, stack depth 2 [6f38c0d9], stack [main, sdhci_irq]])
  Number of target states:       0
  Size of final wait list        68

Time for analysis setup:          3.860s
  Time for loading CPAs:          0.661s
  Time for loading parser:        0.454s
  Time for CFA construction:      2.634s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.869s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.741s
      Time for var class.:        0.359s
Time for Analysis:               26.507s
CPU time for analysis:           26.500s
Total time for CPAchecker:       30.369s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.152s

Time for Garbage Collector:       1.319s (in 175 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                103MB (    98 MiB) max;     59MB (    56 MiB) avg;    107MB (   102 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
