scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5h7v37ac/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2982496 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2846599 (95%)
  Because of loop head:            120205 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15692 (1%)
  Times precision was empty:       245435 (8%)
  Times precision was {false}:     1497 (0%)
  Times result was cached:         2728856 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6708 (0%)
  Times result was 'false':        52623 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1188898
  BDD entailment checks:           411400
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          9
Number of abstraction locations:          426
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         10448302
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 1273.41
Number of irrelevant predicates:          2996377 (29%)
Number of preds handled by boolean abs:   16945 (0%)
  Total number of models for allsat:      6696
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                 42.406s
  Time for path formula creation:       38.137s
Time for strengthen operator:           11.004s
Time for prec operator:                295.812s
  Time for abstraction:                277.406s (Max:     0.319s, Count: 2982496)
    Boolean abstraction:                 3.531s
    Solving time:                        3.391s (Max:     0.016s)
    Model enumeration time:              0.350s
    Time for BDD construction:           0.139s (Max:     0.012s)
Time for merge operator:                 1.130s
Time for coverage check:                 0.435s
  Time for BDD entailment checks:        0.269s
Total time for SMT solver (w/o itp):     3.741s

Number of path formula cache hits:   21637622 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.440s

Total number of created targets for pointer analysis: 20600
   Number of created targets for uf: *signed_int is 256
   Number of created targets for uf: *unsigned_char is 141
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 2432


Number of BDD nodes:                               322
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13618 (count: 704695, min: 0, max: 238, avg: 0.02)
Time for BDD node cleanup:                             0.095s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.310s
  Time for transition matches:                        10.388s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                     18832928 (count: 18832928, min: 1, max: 1, avg: 1.00) [1 x 18832928]

CPA algorithm statistics
------------------------
Number of iterations:            9223197
Max size of waitlist:            978
Average size of waitlist:        233
Number of computed successors:   10607433
Max successors for one state:    2
Number of times merged:          388749
Number of times stopped:         625036
Number of times breaked:         15692

Total time for CPA algorithm:       524.224s (Max:     0.950s)
  Time for choose from waitlist:      2.885s
  Time for precision adjustment:    335.966s
  Time for transfer relation:       149.489s
  Time for merge operator:            4.179s
  Time for stop operator:             7.057s
  Time for adding to reached set:     9.695s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15692
Avg. length of target path (in blocks):              712033 (count: 15692, min: 6, max: 106, avg: 45.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 179.254s
  Counterexample analysis:                           148.296s (Max:     0.044s, Calls: 15692)
    Refinement sat check:                             96.392s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.296s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.077s
  Precision update:                                   13.592s
  ARG update:                                         13.004s

Length of refined path (in blocks):                  689595 (count: 15692, min: 5, max: 105, avg: 43.95)
Number of affected states:                           220532 (count: 15692, min: 1, max: 86, avg: 14.05)
Length (states) of path with itp 'true':             453371 (count: 15692, min: 1, max: 92, avg: 28.89)
Length (states) of path with itp non-trivial itp:    220532 (count: 15692, min: 1, max: 86, avg: 14.05)
Length (states) of path with itp 'false':             15692 (count: 15692, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15692, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          204840 (count: 15692, min: 0, max: 85, avg: 13.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15692
Number of successful refinements:     15692
Number of failed refinements:         0
Max. size of reached set before ref.: 35250
Max. size of reached set after ref.:  34469
Avg. size of reached set before ref.: 9687.24
Avg. size of reached set after ref.:  9056.63

Total time for CEGAR algorithm:     895.848s
Time for refinements:               287.589s
Average time for refinement:          0.018s
Max time for refinement:              0.755s

Code Coverage
-----------------------------
  Function coverage:      0.730
  Visited lines:          3869
  Total lines:            4539
  Line coverage:          0.852
  Visited conditions:     858
  Total conditions:       1110
  Condition coverage:     0.773

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             34327
  Number of reached locations:   2416 (40%)
    Avg states per location:     14
    Max states per location:     622 (at node N5022)
  Number of reached functions:   116 (73%)
  Number of partitions:          34321
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2386 (before line 8814), Function rndis_check_bssid_list called from node N2169, stack depth 3 [4882c9ee], stack [main, rndis_scan, rndis_check_bssid_list]])
  Number of target states:       0
  Size of final wait list        736

Time for analysis setup:          4.531s
  Time for loading CPAs:          0.781s
  Time for loading parser:        0.452s
  Time for CFA construction:      3.190s
    Time for parsing file(s):     0.725s
    Time for AST to CFA:          1.161s
    Time for CFA sanity check:    0.283s
    Time for post-processing:     0.869s
      Time for var class.:        0.396s
Time for Analysis:              895.849s
CPU time for analysis:          895.770s
Total time for CPAchecker:      900.383s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.545s

Time for Garbage Collector:      47.692s (in 4872 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                584MB (   557 MiB) max;    181MB (   172 MiB) avg;    592MB (   564 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           620MB (   591 MiB) max;    263MB (   251 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8219MB (  7838 MiB) max;   8152MB (  7775 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
