scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wvupg9i6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44106 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38626 (88%)
  Because of loop head:            5423 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (0%)
  Times precision was empty:       17263 (39%)
  Times precision was {false}:     808 (2%)
  Times result was cached:         25380 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      655 (1%)
  Times result was 'false':        26 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         23315
  BDD entailment checks:           8189
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          3
Number of abstraction locations:          120
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         38616
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 26.40
Number of irrelevant predicates:          22164 (57%)
Number of preds handled by boolean abs:   761 (2%)
  Total number of models for allsat:      655
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  7.150s
  Time for path formula creation:        6.901s
Time for strengthen operator:            0.295s
Time for prec operator:                  7.093s
  Time for abstraction:                  6.321s (Max:     0.027s, Count: 44106)
    Boolean abstraction:                 0.617s
    Solving time:                        0.886s (Max:     0.013s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.085s (Max:     0.010s)
Time for merge operator:                 0.280s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     0.924s

Number of path formula cache hits:   245952 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.200s

Total number of created targets for pointer analysis: 3947
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 581
   Number of created targets for uf: *char is 61
   Number of created targets for uf: *unsigned_int is 110


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1319 (count: 33431, min: 0, max: 128, avg: 0.04)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.701s
  Time for transition matches:                         0.333s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       274721 (count: 274721, min: 1, max: 1, avg: 1.00) [1 x 274721]

CPA algorithm statistics
------------------------
Number of iterations:            139747
Max size of waitlist:            192
Average size of waitlist:        75
Number of computed successors:   158359
Max successors for one state:    2
Number of times merged:          7563
Number of times stopped:         13056
Number of times breaked:         57

Total time for CPA algorithm:        23.248s (Max:     1.766s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:      8.875s
  Time for transfer relation:        11.831s
  Time for merge operator:            0.562s
  Time for stop operator:             0.451s
  Time for adding to reached set:     0.312s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                1421 (count: 57, min: 15, max: 63, avg: 24.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.248s
  Counterexample analysis:                             0.595s (Max:     0.033s, Calls: 57)
    Refinement sat check:                              0.391s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.067s
  Precision update:                                    0.086s
  ARG update:                                          0.449s

Length of refined path (in blocks):                    1364 (count: 57, min: 14, max: 62, avg: 23.93)
Number of affected states:                             1250 (count: 57, min: 12, max: 60, avg: 21.93)
Length (states) of path with itp 'true':                 57 (count: 57, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      1250 (count: 57, min: 12, max: 60, avg: 21.93)
Length (states) of path with itp 'false':                57 (count: 57, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 57, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1193 (count: 57, min: 11, max: 59, avg: 20.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     57
Number of failed refinements:         0
Max. size of reached set before ref.: 6125
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 2484.09
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      24.783s
Time for refinements:                 1.518s
Average time for refinement:          0.026s
Max time for refinement:              0.089s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          2166
  Total lines:            4539
  Line coverage:          0.477
  Visited conditions:     256
  Total conditions:       1110
  Condition coverage:     0.231

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             4026
  Number of reached locations:   713 (12%)
    Avg states per location:     5
    Max states per location:     135 (at node N4936)
  Number of reached functions:   66 (42%)
  Number of partitions:          3995
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4837 (before line 11419), Function main called from node N4575, stack depth 1 [43f03c23], stack [main]])
  Number of target states:       0
  Size of final wait list        137

Time for analysis setup:          5.486s
  Time for loading CPAs:          1.031s
  Time for loading parser:        0.580s
  Time for CFA construction:      3.740s
    Time for parsing file(s):     0.850s
    Time for AST to CFA:          1.237s
    Time for CFA sanity check:    0.376s
    Time for post-processing:     1.124s
      Time for var class.:        0.450s
Time for Analysis:               24.783s
CPU time for analysis:           24.790s
Total time for CPAchecker:       30.287s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.125s

Time for Garbage Collector:       1.136s (in 84 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                108MB (   103 MiB) max;     69MB (    66 MiB) avg;    112MB (   107 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     41MB (    39 MiB) avg;     47MB (    44 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
