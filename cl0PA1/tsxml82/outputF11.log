scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yuqlorrr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4034389 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3983551 (99%)
  Because of loop head:            46817 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4021 (0%)
  Times precision was empty:       148142 (4%)
  Times precision was {false}:     1260 (0%)
  Times result was cached:         3877202 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7785 (0%)
  Times result was 'false':        444011 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         3274228
  BDD entailment checks:           614978
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          11
Number of abstraction locations:          347
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         17688668
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 1955.63
Number of irrelevant predicates:          11204601 (63%)
Number of preds handled by boolean abs:   19513 (0%)
  Total number of models for allsat:      7784
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                 45.178s
  Time for path formula creation:       39.410s
Time for strengthen operator:           13.670s
Time for prec operator:                343.248s
  Time for abstraction:                317.101s (Max:     0.643s, Count: 4034389)
    Boolean abstraction:                 4.329s
    Solving time:                        3.967s (Max:     0.020s)
    Model enumeration time:              0.324s
    Time for BDD construction:           0.204s (Max:     0.010s)
Time for merge operator:                 3.461s
Time for coverage check:                 0.703s
  Time for BDD entailment checks:        0.405s
Total time for SMT solver (w/o itp):     4.291s

Number of path formula cache hits:   28057065 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.577s

Total number of created targets for pointer analysis: 7738
   Number of created targets for uf: *signed_int is 47
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *unsigned_int is 113
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               452
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16139 (count: 822380, min: 0, max: 269, avg: 0.02)
Time for BDD node cleanup:                             0.130s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 21.503s
  Time for transition matches:                        12.142s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                     23374016 (count: 23374016, min: 1, max: 1, avg: 1.00) [1 x 23374016]

CPA algorithm statistics
------------------------
Number of iterations:            16323294
Max size of waitlist:            171
Average size of waitlist:        84
Number of computed successors:   18777448
Max successors for one state:    2
Number of times merged:          1329625
Number of times stopped:         1910589
Number of times breaked:         4021

Total time for CPA algorithm:       685.333s (Max:     3.316s)
  Time for choose from waitlist:      5.033s
  Time for precision adjustment:    420.411s
  Time for transfer relation:       198.154s
  Time for merge operator:           12.866s
  Time for stop operator:            11.536s
  Time for adding to reached set:    13.717s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4021
Avg. length of target path (in blocks):              154848 (count: 4021, min: 6, max: 107, avg: 38.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  66.038s
  Counterexample analysis:                            32.343s (Max:     0.048s, Calls: 4021)
    Refinement sat check:                             20.575s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.073s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.406s
  Precision update:                                    2.222s
  ARG update:                                         30.084s

Length of refined path (in blocks):                  132293 (count: 4021, min: 5, max: 106, avg: 32.90)
Number of affected states:                            76563 (count: 4021, min: 1, max: 88, avg: 19.04)
Length (states) of path with itp 'true':              51709 (count: 4021, min: 1, max: 57, avg: 12.86)
Length (states) of path with itp non-trivial itp:     76563 (count: 4021, min: 1, max: 88, avg: 19.04)
Length (states) of path with itp 'false':              4021 (count: 4021, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4021, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           72542 (count: 4021, min: 0, max: 87, avg: 18.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4021
Number of successful refinements:     4021
Number of failed refinements:         0
Max. size of reached set before ref.: 89637
Max. size of reached set after ref.:  87760
Avg. size of reached set before ref.: 25894.09
Avg. size of reached set after ref.:  21818.90

Total time for CEGAR algorithm:     895.521s
Time for refinements:               146.640s
Average time for refinement:          0.036s
Max time for refinement:              0.799s

Code Coverage
-----------------------------
  Function coverage:      0.553
  Visited lines:          2830
  Total lines:            4539
  Line coverage:          0.623
  Visited conditions:     492
  Total conditions:       1110
  Condition coverage:     0.443

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             36506
  Number of reached locations:   1408 (23%)
    Avg states per location:     25
    Max states per location:     746 (at node N5022)
  Number of reached functions:   88 (55%)
  Number of partitions:          36506
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        84

Time for analysis setup:          4.763s
  Time for loading CPAs:          0.725s
  Time for loading parser:        0.612s
  Time for CFA construction:      3.306s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          1.189s
    Time for CFA sanity check:    0.303s
    Time for post-processing:     0.961s
      Time for var class.:        0.433s
Time for Analysis:              895.522s
CPU time for analysis:          895.460s
Total time for CPAchecker:      900.287s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.491s

Time for Garbage Collector:     121.409s (in 4396 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                398MB (   379 MiB) max;    190MB (   181 MiB) avg;    417MB (   398 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           421MB (   402 MiB) max;    290MB (   277 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8116MB (  7740 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
