scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i_ltkzww/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2983914 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2939090 (98%)
  Because of loop head:            28738 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16086 (1%)
  Times precision was empty:       209466 (7%)
  Times precision was {false}:     1248 (0%)
  Times result was cached:         2770171 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3029 (0%)
  Times result was 'false':        313313 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         2556549
  BDD entailment checks:           480269
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          10
Number of abstraction locations:          384
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         3595389
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 840.63
Number of irrelevant predicates:          1105300 (31%)
Number of preds handled by boolean abs:   3720 (0%)
  Total number of models for allsat:      3005
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 37.827s
  Time for path formula creation:       33.341s
Time for strengthen operator:            9.691s
Time for prec operator:                140.242s
  Time for abstraction:                120.516s (Max:     0.683s, Count: 2983914)
    Boolean abstraction:                 1.598s
    Solving time:                        1.794s (Max:     0.012s)
    Model enumeration time:              0.125s
    Time for BDD construction:           0.066s (Max:     0.007s)
Time for merge operator:                 2.966s
Time for coverage check:                 0.593s
  Time for BDD entailment checks:        0.337s
Total time for SMT solver (w/o itp):     1.919s

Number of path formula cache hits:   20555850 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.327s

Total number of created targets for pointer analysis: 7840
   Number of created targets for uf: *signed_int is 139
   Number of created targets for uf: *unsigned_char is 81
   Number of created targets for uf: *unsigned_int is 164
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6156 (count: 716147, min: 0, max: 290, avg: 0.01)
Time for BDD node cleanup:                             0.086s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.704s
  Time for transition matches:                         9.091s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                     17126906 (count: 17126906, min: 1, max: 1, avg: 1.00) [1 x 17126906]

CPA algorithm statistics
------------------------
Number of iterations:            12219751
Max size of waitlist:            77
Average size of waitlist:        57
Number of computed successors:   14058069
Max successors for one state:    2
Number of times merged:          1038140
Number of times stopped:         1489289
Number of times breaked:         16086

Total time for CPA algorithm:       407.514s (Max:     1.484s)
  Time for choose from waitlist:      3.639s
  Time for precision adjustment:    203.452s
  Time for transfer relation:       150.519s
  Time for merge operator:            9.589s
  Time for stop operator:             9.175s
  Time for adding to reached set:    11.855s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16086
Avg. length of target path (in blocks):              607831 (count: 16086, min: 6, max: 118, avg: 37.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 152.381s
  Counterexample analysis:                           120.546s (Max:     0.048s, Calls: 16086)
    Refinement sat check:                             77.522s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.249s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.050s
  Precision update:                                    3.362s
  ARG update:                                         24.652s

Length of refined path (in blocks):                  566509 (count: 16086, min: 5, max: 117, avg: 35.22)
Number of affected states:                           169373 (count: 16086, min: 1, max: 115, avg: 10.53)
Length (states) of path with itp 'true':             381050 (count: 16086, min: 1, max: 74, avg: 23.69)
Length (states) of path with itp non-trivial itp:    169373 (count: 16086, min: 1, max: 115, avg: 10.53)
Length (states) of path with itp 'false':             16086 (count: 16086, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 16086, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          153287 (count: 16086, min: 0, max: 114, avg: 9.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16086
Number of successful refinements:     16086
Number of failed refinements:         0
Max. size of reached set before ref.: 169964
Max. size of reached set after ref.:  168566
Avg. size of reached set before ref.: 15256.97
Avg. size of reached set after ref.:  14502.49

Total time for CEGAR algorithm:     895.554s
Time for refinements:               330.670s
Average time for refinement:          0.020s
Max time for refinement:              0.869s

Code Coverage
-----------------------------
  Function coverage:      0.717
  Visited lines:          3788
  Total lines:            4539
  Line coverage:          0.835
  Visited conditions:     826
  Total conditions:       1110
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             118834
  Number of reached locations:   2373 (39%)
    Avg states per location:     50
    Max states per location:     2479 (at node N5022)
  Number of reached functions:   114 (72%)
  Number of partitions:          118815
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2386 (before line 8814), Function rndis_check_bssid_list called from node N2169, stack depth 3 [1ece69ad], stack [main, rndis_scan, rndis_check_bssid_list]])
  Number of target states:       0
  Size of final wait list        60

Time for analysis setup:          4.767s
  Time for loading CPAs:          0.855s
  Time for loading parser:        0.540s
  Time for CFA construction:      3.260s
    Time for parsing file(s):     0.661s
    Time for AST to CFA:          1.196s
    Time for CFA sanity check:    0.323s
    Time for post-processing:     0.934s
      Time for var class.:        0.400s
Time for Analysis:              895.554s
CPU time for analysis:          895.470s
Total time for CPAchecker:      900.324s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              1.374s

Time for Garbage Collector:      83.012s (in 3554 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                452MB (   431 MiB) max;    167MB (   159 MiB) avg;    487MB (   464 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     41MB (    39 MiB) avg;     47MB (    44 MiB) peak
Allocated heap memory:           532MB (   507 MiB) max;    257MB (   245 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8086MB (  7711 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
