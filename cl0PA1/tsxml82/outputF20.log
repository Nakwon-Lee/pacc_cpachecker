scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gmlkbh89/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1659478 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1631536 (98%)
  Because of loop head:            18190 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9752 (1%)
  Times precision was empty:       72115 (4%)
  Times precision was {false}:     1330 (0%)
  Times result was cached:         1580038 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5995 (0%)
  Times result was 'false':        161440 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         1463771
  BDD entailment checks:           342181
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          8
Number of abstraction locations:          349
Max number of predicates per location:    7
Avg number of predicates per location:    1
Total predicates per abstraction:         3082005
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 420.75
Number of irrelevant predicates:          1544858 (50%)
Number of preds handled by boolean abs:   7896 (0%)
  Total number of models for allsat:      5970
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.00

Time for post operator:                 26.443s
  Time for path formula creation:       24.130s
Time for strengthen operator:            5.493s
Time for prec operator:                 95.956s
  Time for abstraction:                 84.617s (Max:     0.574s, Count: 1659478)
    Boolean abstraction:                 2.840s
    Solving time:                        2.712s (Max:     0.017s)
    Model enumeration time:              0.236s
    Time for BDD construction:           0.159s (Max:     0.012s)
Time for merge operator:                 2.171s
Time for coverage check:                 0.355s
  Time for BDD entailment checks:        0.223s
Total time for SMT solver (w/o itp):     2.948s

Number of path formula cache hits:   11222120 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.184s

Total number of created targets for pointer analysis: 9172
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               252
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12080 (count: 457999, min: 0, max: 396, avg: 0.03)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.620s
  Time for transition matches:                         4.757s
  Time for transition assertions:                      0.015s
  Time for transition actions:                         0.045s
Automaton transfers with branching:                0
Automaton transfer successors:                      9481285 (count: 9481285, min: 1, max: 1, avg: 1.00) [1 x 9481285]

CPA algorithm statistics
------------------------
Number of iterations:            6650775
Max size of waitlist:            61
Average size of waitlist:        45
Number of computed successors:   7630176
Max successors for one state:    2
Number of times merged:          560795
Number of times stopped:         828375
Number of times breaked:         9752

Total time for CPA algorithm:       243.555s (Max:     0.891s)
  Time for choose from waitlist:      1.664s
  Time for precision adjustment:    124.936s
  Time for transfer relation:        89.133s
  Time for merge operator:            6.087s
  Time for stop operator:             5.371s
  Time for adding to reached set:     5.806s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9752
Avg. length of target path (in blocks):              803024 (count: 9752, min: 15, max: 176, avg: 82.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 185.484s
  Counterexample analysis:                           167.611s (Max:     0.081s, Calls: 9752)
    Refinement sat check:                             94.118s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.379s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.799s
  Precision update:                                    2.887s
  ARG update:                                         10.599s

Length of refined path (in blocks):                  754457 (count: 9752, min: 10, max: 175, avg: 77.36)
Number of affected states:                           165309 (count: 9752, min: 1, max: 74, avg: 16.95)
Length (states) of path with itp 'true':             579396 (count: 9752, min: 1, max: 161, avg: 59.41)
Length (states) of path with itp non-trivial itp:    165309 (count: 9752, min: 1, max: 74, avg: 16.95)
Length (states) of path with itp 'false':              9752 (count: 9752, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9752, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          155557 (count: 9752, min: 0, max: 73, avg: 15.95)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9752
Number of successful refinements:     9752
Number of failed refinements:         0
Max. size of reached set before ref.: 106571
Max. size of reached set after ref.:  106205
Avg. size of reached set before ref.: 33709.09
Avg. size of reached set after ref.:  33034.50

Total time for CEGAR algorithm:     895.847s
Time for refinements:               428.241s
Average time for refinement:          0.043s
Max time for refinement:              0.482s

Code Coverage
-----------------------------
  Function coverage:      0.679
  Visited lines:          3429
  Total lines:            4539
  Line coverage:          0.755
  Visited conditions:     720
  Total conditions:       1110
  Condition coverage:     0.649

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             61831
  Number of reached locations:   2092 (35%)
    Avg states per location:     29
    Max states per location:     1273 (at node N5022)
  Number of reached functions:   108 (68%)
  Number of partitions:          61827
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2386 (before line 8814), Function rndis_check_bssid_list called from node N2169, stack depth 3 [523f48d0], stack [main, rndis_scan, rndis_check_bssid_list]])
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          4.532s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.449s
  Time for CFA construction:      3.298s
    Time for parsing file(s):     0.737s
    Time for AST to CFA:          1.121s
    Time for CFA sanity check:    0.319s
    Time for post-processing:     0.960s
      Time for var class.:        0.461s
Time for Analysis:              895.847s
CPU time for analysis:          895.810s
Total time for CPAchecker:      900.382s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.763s

Time for Garbage Collector:      40.369s (in 2721 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                335MB (   319 MiB) max;    167MB (   159 MiB) avg;    344MB (   328 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           428MB (   408 MiB) max;    248MB (   236 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8130MB (  7753 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
