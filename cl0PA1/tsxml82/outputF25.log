scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uh7i940y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3905933 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3735726 (96%)
  Because of loop head:            157505 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12702 (0%)
  Times precision was empty:       391491 (10%)
  Times precision was {false}:     1719 (0%)
  Times result was cached:         3506581 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6142 (0%)
  Times result was 'false':        41627 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2246891
  BDD entailment checks:           792531
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          6
Number of abstraction locations:          384
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         13409620
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 1705.84
Number of irrelevant predicates:          4005858 (30%)
Number of preds handled by boolean abs:   13957 (0%)
  Total number of models for allsat:      6114
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 46.899s
  Time for path formula creation:       41.864s
Time for strengthen operator:           12.930s
Time for prec operator:                340.058s
  Time for abstraction:                316.156s (Max:     0.401s, Count: 3905933)
    Boolean abstraction:                 3.364s
    Solving time:                        3.280s (Max:     0.022s)
    Model enumeration time:              0.234s
    Time for BDD construction:           0.136s (Max:     0.008s)
Time for merge operator:                 1.798s
Time for coverage check:                 0.691s
  Time for BDD entailment checks:        0.448s
Total time for SMT solver (w/o itp):     3.514s

Number of path formula cache hits:   29411749 (100%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.722s

Total number of created targets for pointer analysis: 5668
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *unsigned_int is 29
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12343 (count: 1229532, min: 0, max: 166, avg: 0.01)
Time for BDD node cleanup:                             0.148s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.754s
  Time for transition matches:                        12.450s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                     24978784 (count: 24978784, min: 1, max: 1, avg: 1.00) [1 x 24978784]

CPA algorithm statistics
------------------------
Number of iterations:            13139997
Max size of waitlist:            373
Average size of waitlist:        186
Number of computed successors:   14948848
Max successors for one state:    2
Number of times merged:          727180
Number of times stopped:         1116940
Number of times breaked:         12702

Total time for CPA algorithm:       630.067s (Max:     1.208s)
  Time for choose from waitlist:      3.765s
  Time for precision adjustment:    391.238s
  Time for transfer relation:       186.960s
  Time for merge operator:            6.891s
  Time for stop operator:             9.299s
  Time for adding to reached set:    11.670s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12702
Avg. length of target path (in blocks):              614076 (count: 12702, min: 6, max: 89, avg: 48.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 167.037s
  Counterexample analysis:                           135.112s (Max:     0.065s, Calls: 12702)
    Refinement sat check:                             87.690s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.292s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.097s
  Precision update:                                    9.283s
  ARG update:                                         18.496s

Length of refined path (in blocks):                  599054 (count: 12702, min: 5, max: 88, avg: 47.16)
Number of affected states:                           233098 (count: 12702, min: 1, max: 86, avg: 18.35)
Length (states) of path with itp 'true':             353254 (count: 12702, min: 1, max: 37, avg: 27.81)
Length (states) of path with itp non-trivial itp:    233098 (count: 12702, min: 1, max: 86, avg: 18.35)
Length (states) of path with itp 'false':             12702 (count: 12702, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12702, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          220396 (count: 12702, min: 0, max: 85, avg: 17.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12702
Number of successful refinements:     12702
Number of failed refinements:         0
Max. size of reached set before ref.: 12423
Max. size of reached set after ref.:  8610
Avg. size of reached set before ref.: 6969.55
Avg. size of reached set after ref.:  5884.48

Total time for CEGAR algorithm:     895.826s
Time for refinements:               227.042s
Average time for refinement:          0.017s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.591
  Visited lines:          3062
  Total lines:            4539
  Line coverage:          0.675
  Visited conditions:     574
  Total conditions:       1110
  Condition coverage:     0.517

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             7649
  Number of reached locations:   1640 (27%)
    Avg states per location:     4
    Max states per location:     179 (at node N149)
  Number of reached functions:   94 (59%)
  Number of partitions:          7649
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        208

Time for analysis setup:          4.520s
  Time for loading CPAs:          0.885s
  Time for loading parser:        0.417s
  Time for CFA construction:      3.091s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          1.157s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     0.783s
      Time for var class.:        0.425s
Time for Analysis:              895.826s
CPU time for analysis:          895.720s
Total time for CPAchecker:      900.361s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.265s

Time for Garbage Collector:      45.806s (in 5844 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                216MB (   206 MiB) max;    136MB (   130 MiB) avg;    223MB (   213 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           227MB (   217 MiB) max;    197MB (   188 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8136MB (  7759 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
