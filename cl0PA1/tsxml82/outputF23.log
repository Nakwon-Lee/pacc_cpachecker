scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r8w34gck/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2112935 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2014259 (95%)
  Because of loop head:            90337 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8339 (0%)
  Times precision was empty:       227372 (11%)
  Times precision was {false}:     2286 (0%)
  Times result was cached:         1872649 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10628 (1%)
  Times result was 'false':        31733 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1406870
  BDD entailment checks:           326376
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          11
Number of abstraction locations:          497
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         7673928
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 594.23
Number of irrelevant predicates:          2328859 (30%)
Number of preds handled by boolean abs:   26463 (0%)
  Total number of models for allsat:      10525
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                 28.369s
  Time for path formula creation:       25.336s
Time for strengthen operator:            7.019s
Time for prec operator:                208.421s
  Time for abstraction:                195.045s (Max:     0.623s, Count: 2112935)
    Boolean abstraction:                 5.384s
    Solving time:                        4.998s (Max:     0.026s)
    Model enumeration time:              0.377s
    Time for BDD construction:           0.233s (Max:     0.012s)
Time for merge operator:                 1.787s
Time for coverage check:                 0.371s
  Time for BDD entailment checks:        0.253s
Total time for SMT solver (w/o itp):     5.375s

Number of path formula cache hits:   15041158 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.253s

Total number of created targets for pointer analysis: 7455
   Number of created targets for uf: *signed_int is 92
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 745


Number of BDD nodes:                               385
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21432 (count: 629369, min: 0, max: 261, avg: 0.03)
Time for BDD node cleanup:                             0.103s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.899s
  Time for transition matches:                         6.824s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                     12676777 (count: 12676777, min: 1, max: 1, avg: 1.00) [1 x 12676777]

CPA algorithm statistics
------------------------
Number of iterations:            7794617
Max size of waitlist:            1153
Average size of waitlist:        444
Number of computed successors:   8864292
Max successors for one state:    2
Number of times merged:          540247
Number of times stopped:         798622
Number of times breaked:         8339

Total time for CPA algorithm:       387.418s (Max:     1.900s)
  Time for choose from waitlist:      1.868s
  Time for precision adjustment:    241.686s
  Time for transfer relation:       111.508s
  Time for merge operator:            5.740s
  Time for stop operator:             6.304s
  Time for adding to reached set:     6.873s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8339
Avg. length of target path (in blocks):              363580 (count: 8339, min: 6, max: 118, avg: 43.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 105.293s
  Counterexample analysis:                            80.929s (Max:     0.061s, Calls: 8339)
    Refinement sat check:                             50.946s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.228s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.524s
  Precision update:                                    9.854s
  ARG update:                                         12.053s

Length of refined path (in blocks):                  334830 (count: 8339, min: 5, max: 117, avg: 40.15)
Number of affected states:                            87365 (count: 8339, min: 1, max: 104, avg: 10.48)
Length (states) of path with itp 'true':             239126 (count: 8339, min: 1, max: 108, avg: 28.68)
Length (states) of path with itp non-trivial itp:     87365 (count: 8339, min: 1, max: 104, avg: 10.48)
Length (states) of path with itp 'false':              8339 (count: 8339, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8339, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           79026 (count: 8339, min: 0, max: 103, avg: 9.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8339
Number of successful refinements:     8339
Number of failed refinements:         0
Max. size of reached set before ref.: 50993
Max. size of reached set after ref.:  50191
Avg. size of reached set before ref.: 31875.58
Avg. size of reached set after ref.:  30918.08

Total time for CEGAR algorithm:     895.853s
Time for refinements:               319.748s
Average time for refinement:          0.038s
Max time for refinement:              0.867s

Code Coverage
-----------------------------
  Function coverage:      0.730
  Visited lines:          3936
  Total lines:            4539
  Line coverage:          0.867
  Visited conditions:     878
  Total conditions:       1110
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             49325
  Number of reached locations:   2498 (41%)
    Avg states per location:     19
    Max states per location:     697 (at node N5022)
  Number of reached functions:   116 (73%)
  Number of partitions:          49319
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4531 (before line 11130), Function rndis_wlan_reset called from node N4815, stack depth 2 [6ab7666e], stack [main, rndis_wlan_reset]])
  Number of target states:       0
  Size of final wait list        1051

Time for analysis setup:          4.572s
  Time for loading CPAs:          0.847s
  Time for loading parser:        0.417s
  Time for CFA construction:      3.228s
    Time for parsing file(s):     0.666s
    Time for AST to CFA:          1.151s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     0.966s
      Time for var class.:        0.484s
Time for Analysis:              895.853s
CPU time for analysis:          895.780s
Total time for CPAchecker:      900.428s
Total CPU time for CPAchecker:  900.340s
Time for statistics:              0.722s

Time for Garbage Collector:      57.587s (in 3219 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                408MB (   389 MiB) max;    218MB (   208 MiB) avg;    416MB (   397 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           418MB (   398 MiB) max;    318MB (   303 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8220MB (  7839 MiB) max;   8148MB (  7771 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
