scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_00sexbqp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2105209 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2009058 (95%)
  Because of loop head:            67015 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29136 (1%)
  Times precision was empty:       701287 (33%)
  Times precision was {false}:     1593 (0%)
  Times result was cached:         1395821 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6508 (0%)
  Times result was 'false':        77909 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1664612
  BDD entailment checks:           230256
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          9
Number of abstraction locations:          379
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4148675
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 512.12
Number of irrelevant predicates:          1662267 (40%)
Number of preds handled by boolean abs:   14864 (0%)
  Total number of models for allsat:      6503
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 25.310s
  Time for path formula creation:       22.103s
Time for strengthen operator:            8.110s
Time for prec operator:                131.049s
  Time for abstraction:                116.840s (Max:     0.376s, Count: 2105209)
    Boolean abstraction:                 3.215s
    Solving time:                        3.128s (Max:     0.013s)
    Model enumeration time:              0.247s
    Time for BDD construction:           0.181s (Max:     0.009s)
Time for merge operator:                 1.747s
Time for coverage check:                 0.352s
  Time for BDD entailment checks:        0.206s
Total time for SMT solver (w/o itp):     3.375s

Number of path formula cache hits:   15669371 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.132s

Total number of created targets for pointer analysis: 5904
   Number of created targets for uf: *signed_int is 21
   Number of created targets for uf: *unsigned_char is 101
   Number of created targets for uf: *unsigned_int is 149
   Number of created targets for uf: *char is 21


Number of BDD nodes:                               262
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13216 (count: 978731, min: 0, max: 188, avg: 0.01)
Time for BDD node cleanup:                             0.122s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.536s
  Time for transition matches:                         7.128s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                     13106789 (count: 13106789, min: 1, max: 1, avg: 1.00) [1 x 13106789]

CPA algorithm statistics
------------------------
Number of iterations:            8390339
Max size of waitlist:            818
Average size of waitlist:        283
Number of computed successors:   9686723
Max successors for one state:    2
Number of times merged:          717178
Number of times stopped:         912075
Number of times breaked:         29136

Total time for CPA algorithm:       326.098s (Max:     0.927s)
  Time for choose from waitlist:      2.708s
  Time for precision adjustment:    173.877s
  Time for transfer relation:       115.639s
  Time for merge operator:            6.628s
  Time for stop operator:             6.032s
  Time for adding to reached set:     8.406s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29136
Avg. length of target path (in blocks):              818471 (count: 29136, min: 6, max: 51, avg: 28.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 212.604s
  Counterexample analysis:                           172.837s (Max:     0.044s, Calls: 29136)
    Refinement sat check:                            115.435s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.369s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.965s
  Precision update:                                   23.158s
  ARG update:                                         11.797s

Length of refined path (in blocks):                  768933 (count: 29136, min: 5, max: 50, avg: 26.39)
Number of affected states:                           138475 (count: 29136, min: 3, max: 47, avg: 4.75)
Length (states) of path with itp 'true':             601322 (count: 29136, min: 1, max: 43, avg: 20.64)
Length (states) of path with itp non-trivial itp:    138475 (count: 29136, min: 3, max: 47, avg: 4.75)
Length (states) of path with itp 'false':             29136 (count: 29136, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 29136, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          109339 (count: 29136, min: 2, max: 46, avg: 3.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29136
Number of successful refinements:     29136
Number of failed refinements:         0
Max. size of reached set before ref.: 43378
Max. size of reached set after ref.:  43097
Avg. size of reached set before ref.: 10746.42
Avg. size of reached set after ref.:  10448.32

Total time for CEGAR algorithm:     895.456s
Time for refinements:               397.871s
Average time for refinement:          0.013s
Max time for refinement:              0.398s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          3037
  Total lines:            4539
  Line coverage:          0.669
  Visited conditions:     582
  Total conditions:       1110
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             11305
  Number of reached locations:   1650 (27%)
    Avg states per location:     6
    Max states per location:     198 (at node N4936)
  Number of reached functions:   99 (62%)
  Number of partitions:          11305
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        284

Time for analysis setup:          4.834s
  Time for loading CPAs:          0.766s
  Time for loading parser:        0.503s
  Time for CFA construction:      3.471s
    Time for parsing file(s):     0.792s
    Time for AST to CFA:          1.253s
    Time for CFA sanity check:    0.309s
    Time for post-processing:     0.967s
      Time for var class.:        0.464s
Time for Analysis:              895.456s
CPU time for analysis:          895.380s
Total time for CPAchecker:      900.297s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.242s

Time for Garbage Collector:      59.107s (in 4081 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                268MB (   256 MiB) max;    134MB (   128 MiB) avg;    275MB (   262 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           275MB (   262 MiB) max;    199MB (   190 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8286MB (  7902 MiB) max;   8193MB (  7813 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
