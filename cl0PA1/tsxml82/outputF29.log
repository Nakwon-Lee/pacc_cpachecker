scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_odxfb1mb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_purge_paused_rxq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __ieee80211_get_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_inform_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_put_bss to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8757: Assignment to the void* pointer buf produces garbage or the memory pointed by it is unused: buf = kzalloc((size_t )len, 208U); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_resume_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function krealloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3534109 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3490969 (99%)
  Because of loop head:            39317 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3823 (0%)
  Times precision was empty:       55333 (2%)
  Times precision was {false}:     1085 (0%)
  Times result was cached:         3474194 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3497 (0%)
  Times result was 'false':        386024 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         3063031
  BDD entailment checks:           596017
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          13
Number of abstraction locations:          377
Max number of predicates per location:    9
Avg number of predicates per location:    1
Total predicates per abstraction:         7256128
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 1583.62
Number of irrelevant predicates:          3575942 (49%)
Number of preds handled by boolean abs:   4927 (0%)
  Total number of models for allsat:      3478
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                 38.928s
  Time for path formula creation:       34.201s
Time for strengthen operator:           12.358s
Time for prec operator:                212.146s
  Time for abstraction:                188.755s (Max:     0.498s, Count: 3534109)
    Boolean abstraction:                 1.950s
    Solving time:                        1.892s (Max:     0.014s)
    Model enumeration time:              0.156s
    Time for BDD construction:           0.120s (Max:     0.008s)
Time for merge operator:                 3.394s
Time for coverage check:                 0.663s
  Time for BDD entailment checks:        0.371s
Total time for SMT solver (w/o itp):     2.048s

Number of path formula cache hits:   24668264 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.558s

Total number of created targets for pointer analysis: 6012
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               288
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7173 (count: 679409, min: 0, max: 489, avg: 0.01)
Time for BDD node cleanup:                             0.132s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.283s
  Time for transition matches:                        10.899s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                     20500664 (count: 20500664, min: 1, max: 1, avg: 1.00) [1 x 20500664]

CPA algorithm statistics
------------------------
Number of iterations:            14529112
Max size of waitlist:            82
Average size of waitlist:        47
Number of computed successors:   16713644
Max successors for one state:    2
Number of times merged:          1233507
Number of times stopped:         1776231
Number of times breaked:         3823

Total time for CPA algorithm:       517.516s (Max:     2.347s)
  Time for choose from waitlist:      3.636s
  Time for precision adjustment:    278.804s
  Time for transfer relation:       177.669s
  Time for merge operator:           10.907s
  Time for stop operator:            11.228s
  Time for adding to reached set:    12.976s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3823
Avg. length of target path (in blocks):              228667 (count: 3823, min: 6, max: 118, avg: 59.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  80.197s
  Counterexample analysis:                            50.726s (Max:     0.055s, Calls: 3823)
    Refinement sat check:                             32.540s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.095s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.593s
  Precision update:                                    1.920s
  ARG update:                                         25.819s

Length of refined path (in blocks):                  180590 (count: 3823, min: 5, max: 117, avg: 47.24)
Number of affected states:                           123364 (count: 3823, min: 1, max: 115, avg: 32.27)
Length (states) of path with itp 'true':              53403 (count: 3823, min: 1, max: 63, avg: 13.97)
Length (states) of path with itp non-trivial itp:    123364 (count: 3823, min: 1, max: 115, avg: 32.27)
Length (states) of path with itp 'false':              3823 (count: 3823, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         113 (count: 3823, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:          119428 (count: 3823, min: 0, max: 114, avg: 31.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3823
Number of successful refinements:     3823
Number of failed refinements:         0
Max. size of reached set before ref.: 133347
Max. size of reached set after ref.:  125602
Avg. size of reached set before ref.: 55561.79
Avg. size of reached set after ref.:  51765.09

Total time for CEGAR algorithm:     895.554s
Time for refinements:               235.098s
Average time for refinement:          0.061s
Max time for refinement:              0.626s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          1937
  Total lines:            4539
  Line coverage:          0.427
  Visited conditions:     348
  Total conditions:       1110
  Condition coverage:     0.314

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             36618
  Number of reached locations:   905 (15%)
    Avg states per location:     40
    Max states per location:     773 (at node N5022)
  Number of reached functions:   66 (42%)
  Number of partitions:          36618
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        46

Time for analysis setup:          4.737s
  Time for loading CPAs:          0.697s
  Time for loading parser:        0.489s
  Time for CFA construction:      3.453s
    Time for parsing file(s):     0.784s
    Time for AST to CFA:          1.254s
    Time for CFA sanity check:    0.316s
    Time for post-processing:     0.919s
      Time for var class.:        0.461s
Time for Analysis:              895.554s
CPU time for analysis:          895.500s
Total time for CPAchecker:      900.296s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.409s

Time for Garbage Collector:      91.247s (in 3163 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                396MB (   378 MiB) max;    209MB (   199 MiB) avg;    405MB (   386 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           400MB (   382 MiB) max;    322MB (   307 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8083MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
