scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--rndis_wlan.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_345ts4pv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 11472: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbnet_pause_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_rndis_bind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_frequency_to_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_unbind to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_scan_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_pmksa_candidate_notify to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cfg80211_michael_mic_failure to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rndis_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8591: Destroying the void* pointer rndis_check_bssid_list::buf produces garbage or the memory pointed by it is unused: rndis_check_bssid_list(usbdev, 0, 0); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            51079 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44607 (87%)
  Because of loop head:            6410 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       19118 (37%)
  Times precision was {false}:     957 (2%)
  Times result was cached:         30295 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      709 (1%)
  Times result was 'false':        26 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         27619
  BDD entailment checks:           9963
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       51
Number of predicates discovered:          3
Number of abstraction locations:          139
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         48062
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 28.85
Number of irrelevant predicates:          27845 (58%)
Number of preds handled by boolean abs:   815 (2%)
  Total number of models for allsat:      709
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.962s
  Time for path formula creation:        6.819s
Time for strengthen operator:            0.383s
Time for prec operator:                  7.328s
  Time for abstraction:                  6.546s (Max:     0.025s, Count: 51079)
    Boolean abstraction:                 0.540s
    Solving time:                        0.864s (Max:     0.014s)
    Model enumeration time:              0.064s
    Time for BDD construction:           0.078s (Max:     0.012s)
Time for merge operator:                 0.295s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.928s

Number of path formula cache hits:   290495 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.204s

Total number of created targets for pointer analysis: 4273
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *unsigned_char is 641
   Number of created targets for uf: *unsigned_int is 13
   Number of created targets for uf: *char is 277


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1427 (count: 38129, min: 0, max: 146, avg: 0.04)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.695s
  Time for transition matches:                         0.345s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       317861 (count: 317861, min: 1, max: 1, avg: 1.00) [1 x 317861]

CPA algorithm statistics
------------------------
Number of iterations:            161969
Max size of waitlist:            192
Average size of waitlist:        77
Number of computed successors:   183515
Max successors for one state:    2
Number of times merged:          8828
Number of times stopped:         15253
Number of times breaked:         62

Total time for CPA algorithm:        23.424s (Max:     1.338s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:      9.056s
  Time for transfer relation:        12.009s
  Time for merge operator:            0.514s
  Time for stop operator:             0.397s
  Time for adding to reached set:     0.339s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                1612 (count: 62, min: 15, max: 63, avg: 26.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.322s
  Counterexample analysis:                             0.663s (Max:     0.026s, Calls: 62)
    Refinement sat check:                              0.464s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.053s
  ARG update:                                          0.468s

Length of refined path (in blocks):                    1550 (count: 62, min: 14, max: 62, avg: 25.00)
Number of affected states:                             1426 (count: 62, min: 12, max: 60, avg: 23.00)
Length (states) of path with itp 'true':                 62 (count: 62, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      1426 (count: 62, min: 12, max: 60, avg: 23.00)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 62, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1364 (count: 62, min: 11, max: 59, avg: 22.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 6125
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 2651.71
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      24.963s
Time for refinements:                 1.533s
Average time for refinement:          0.024s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.453
  Visited lines:          2316
  Total lines:            4539
  Line coverage:          0.510
  Visited conditions:     300
  Total conditions:       1110
  Condition coverage:     0.270

CPAchecker general statistics
-----------------------------
Number of program locations:     6045
Number of CFA edges:             6898
Number of relevant variables:    921
Number of functions:             159
Number of loops:                 17
Size of reached set:             4203
  Number of reached locations:   838 (14%)
    Avg states per location:     5
    Max states per location:     135 (at node N4936)
  Number of reached functions:   72 (45%)
  Number of partitions:          4175
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4837 (before line 11419), Function main called from node N4575, stack depth 1 [7f13811b], stack [main]])
  Number of target states:       0
  Size of final wait list        155

Time for analysis setup:          4.871s
  Time for loading CPAs:          0.777s
  Time for loading parser:        0.489s
  Time for CFA construction:      3.502s
    Time for parsing file(s):     0.732s
    Time for AST to CFA:          1.268s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     1.041s
      Time for var class.:        0.486s
Time for Analysis:               24.963s
CPU time for analysis:           24.970s
Total time for CPAchecker:       29.837s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.148s

Time for Garbage Collector:       0.997s (in 96 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     65MB (    62 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
