scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pxjy1vcv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5274: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11783: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5095: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2867183 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2546498 (89%)
  Because of loop head:            320402 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         283 (0%)
  Times precision was empty:       1926019 (67%)
  Times precision was {false}:     2441 (0%)
  Times result was cached:         923001 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15722 (1%)
  Times result was 'false':        6455 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2294917
  BDD entailment checks:           859793
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       124
Number of predicates discovered:          12
Number of abstraction locations:          194
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         7878567
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 433.77
Number of irrelevant predicates:          6967737 (88%)
Number of preds handled by boolean abs:   94363 (1%)
  Total number of models for allsat:      169433
  Max number of models for allsat:        64
  Avg number of models for allsat:        10.78

Time for post operator:                 82.059s
  Time for path formula creation:       77.125s
Time for strengthen operator:            8.867s
Time for prec operator:                278.654s
  Time for abstraction:                256.625s (Max:     1.638s, Count: 2867183)
    Boolean abstraction:                64.776s
    Solving time:                       42.007s (Max:     0.106s)
    Model enumeration time:             27.137s
    Time for BDD construction:           1.751s (Max:     0.031s)
Time for merge operator:                 6.468s
Time for coverage check:                 0.635s
  Time for BDD entailment checks:        0.409s
Total time for SMT solver (w/o itp):    69.144s

Number of path formula cache hits:   17533646 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    37.847s

Total number of created targets for pointer analysis: 353124
   Number of created targets for uf: *unsigned_short_int is 65
   Number of created targets for uf: *(struct_net_device)* is 101
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *unsigned_char is 61
   Number of created targets for uf: *(struct_proc_dir_entry)* is 271
   Number of created targets for uf: *(struct_list_head)* is 21
   Number of created targets for uf: *(struct_pci_dev)* is 10
   Number of created targets for uf: *enum_ldv_28506 is 22
   Number of created targets for uf: *unsigned_int is 5235
   Number of created targets for uf: *char is 14171


Number of BDD nodes:                               6417
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       33484 (count: 2893496, min: 0, max: 759, avg: 0.01)
Time for BDD node cleanup:                             0.380s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.838s
  Time for transition matches:                         7.450s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                     15121435 (count: 15121435, min: 1, max: 1, avg: 1.00) [1 x 15121435]

CPA algorithm statistics
------------------------
Number of iterations:            10005582
Max size of waitlist:            3439
Average size of waitlist:        678
Number of computed successors:   11756467
Max successors for one state:    2
Number of times merged:          717562
Number of times stopped:         1495912
Number of times breaked:         283

Total time for CPA algorithm:       841.105s (Max:    16.694s)
  Time for choose from waitlist:      3.249s
  Time for precision adjustment:    331.141s
  Time for transfer relation:       456.351s
  Time for merge operator:           12.385s
  Time for stop operator:             7.476s
  Time for adding to reached set:    13.812s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   283
Avg. length of target path (in blocks):               14339 (count: 283, min: 9, max: 95, avg: 50.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.014s
  Counterexample analysis:                            22.583s (Max:     0.221s, Calls: 283)
    Refinement sat check:                             18.876s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.128s
  ARG update:                                         20.095s

Length of refined path (in blocks):                   12137 (count: 283, min: 7, max: 81, avg: 42.89)
Number of affected states:                             9703 (count: 283, min: 6, max: 80, avg: 34.29)
Length (states) of path with itp 'true':               2151 (count: 283, min: 0, max: 32, avg: 7.60)
Length (states) of path with itp non-trivial itp:      9703 (count: 283, min: 6, max: 80, avg: 34.29)
Length (states) of path with itp 'false':               283 (count: 283, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 283, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9420 (count: 283, min: 5, max: 79, avg: 33.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                283
Number of successful refinements:     283
Number of failed refinements:         0
Max. size of reached set before ref.: 117563
Max. size of reached set after ref.:  74328
Avg. size of reached set before ref.: 47704.53
Avg. size of reached set after ref.:  11848.95

Total time for CEGAR algorithm:     895.149s
Time for refinements:                51.279s
Average time for refinement:          0.181s
Max time for refinement:              0.516s

Code Coverage
-----------------------------
  Function coverage:      0.187
  Visited lines:          2404
  Total lines:            6363
  Line coverage:          0.378
  Visited conditions:     1208
  Total conditions:       3026
  Condition coverage:     0.399

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             106969
  Number of reached locations:   1986 (21%)
    Avg states per location:     53
    Max states per location:     10981 (at node N117)
  Number of reached functions:   63 (19%)
  Number of partitions:          106698
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1011 (before line 5995), Function read_reg called from node N3632, stack depth 4 [1e4a2f7b], stack [main, bypass_init_module, bypass_fw_ver, read_reg]])
  Number of target states:       0
  Size of final wait list        3167

Time for analysis setup:          5.191s
  Time for loading CPAs:          0.804s
  Time for loading parser:        0.397s
  Time for CFA construction:      3.901s
    Time for parsing file(s):     0.757s
    Time for AST to CFA:          1.401s
    Time for CFA sanity check:    0.421s
    Time for post-processing:     1.188s
      Time for var class.:        0.587s
Time for Analysis:              895.149s
CPU time for analysis:          895.040s
Total time for CPAchecker:      900.342s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              1.158s

Time for Garbage Collector:      91.592s (in 1545 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                951MB (   907 MiB) max;    477MB (   455 MiB) avg;    978MB (   933 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           979MB (   934 MiB) max;    688MB (   656 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9027MB (  8609 MiB) max;   8369MB (  7982 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
