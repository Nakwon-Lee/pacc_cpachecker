scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3tpq1m23/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5274: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5095: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11783: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            40951 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31154 (76%)
  Because of loop head:            9728 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         69 (0%)
  Times precision was empty:       28746 (70%)
  Times precision was {false}:     205 (1%)
  Times result was cached:         11459 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      541 (1%)
  Times result was 'false':        557 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         61511
  BDD entailment checks:           14369
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       121
Number of predicates discovered:          5
Number of abstraction locations:          68
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         35137
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 47.10
Number of irrelevant predicates:          17916 (51%)
Number of preds handled by boolean abs:   987 (3%)
  Total number of models for allsat:      542
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.981s
  Time for path formula creation:        3.869s
Time for strengthen operator:            0.296s
Time for prec operator:                  6.270s
  Time for abstraction:                  5.625s (Max:     0.091s, Count: 40951)
    Boolean abstraction:                 1.664s
    Solving time:                        1.801s (Max:     0.070s)
    Model enumeration time:              0.154s
    Time for BDD construction:           0.038s (Max:     0.006s)
Time for merge operator:                 0.345s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):     1.955s

Number of path formula cache hits:   331054 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.071s

Total number of created targets for pointer analysis: 9757
   Number of created targets for uf: *signed_int is 129
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_pci_dev)* is 4
   Number of created targets for uf: *enum_ldv_28506 is 2
   Number of created targets for uf: *char is 141
   Number of created targets for uf: *unsigned_int is 2671


Number of BDD nodes:                               223
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1139 (count: 47476, min: 0, max: 110, avg: 0.02)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.522s
  Time for transition matches:                         0.285s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                       288279 (count: 288279, min: 1, max: 1, avg: 1.00) [1 x 288279]

CPA algorithm statistics
------------------------
Number of iterations:            174665
Max size of waitlist:            269
Average size of waitlist:        64
Number of computed successors:   216057
Max successors for one state:    2
Number of times merged:          23571
Number of times stopped:         33962
Number of times breaked:         69

Total time for CPA algorithm:        19.071s (Max:     1.069s)
  Time for choose from waitlist:      0.176s
  Time for precision adjustment:      7.791s
  Time for transfer relation:         8.667s
  Time for merge operator:            0.784s
  Time for stop operator:             0.409s
  Time for adding to reached set:     0.391s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   69
Avg. length of target path (in blocks):                1356 (count: 69, min: 9, max: 24, avg: 19.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.880s
  Counterexample analysis:                             4.134s (Max:     0.103s, Calls: 69)
    Refinement sat check:                              3.536s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.080s
  ARG update:                                          0.554s

Length of refined path (in blocks):                    1275 (count: 69, min: 7, max: 23, avg: 18.48)
Number of affected states:                             1139 (count: 69, min: 6, max: 21, avg: 16.51)
Length (states) of path with itp 'true':                 67 (count: 69, min: 0, max: 1, avg: 0.97)
Length (states) of path with itp non-trivial itp:      1139 (count: 69, min: 6, max: 21, avg: 16.51)
Length (states) of path with itp 'false':                69 (count: 69, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 69, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1070 (count: 69, min: 5, max: 20, avg: 15.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                69
Number of successful refinements:     69
Number of failed refinements:         0
Max. size of reached set before ref.: 5074
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 2578.55
Avg. size of reached set after ref.:  5.91

Total time for CEGAR algorithm:      24.211s
Time for refinements:                 5.134s
Average time for refinement:          0.074s
Max time for refinement:              0.120s

Code Coverage
-----------------------------
  Function coverage:      0.154
  Visited lines:          1877
  Total lines:            6363
  Line coverage:          0.295
  Visited conditions:     660
  Total conditions:       3026
  Condition coverage:     0.218

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             4026
  Number of reached locations:   1149 (12%)
    Avg states per location:     3
    Max states per location:     120 (at node N117)
  Number of reached functions:   52 (15%)
  Number of partitions:          4005
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6866 (before line 12575), Function bypass_init_module called from node N9063, stack depth 2 [1a86a0d3], stack [main, bypass_init_module]])
  Number of target states:       0
  Size of final wait list        132

Time for analysis setup:          6.095s
  Time for loading CPAs:          0.911s
  Time for loading parser:        0.500s
  Time for CFA construction:      4.601s
    Time for parsing file(s):     0.938s
    Time for AST to CFA:          1.762s
    Time for CFA sanity check:    0.514s
    Time for post-processing:     1.234s
      Time for var class.:        0.583s
Time for Analysis:               24.211s
CPU time for analysis:           24.190s
Total time for CPAchecker:       30.311s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.153s

Time for Garbage Collector:       0.830s (in 93 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     56MB (    53 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
