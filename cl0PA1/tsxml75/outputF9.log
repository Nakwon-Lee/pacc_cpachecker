scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0zr0jv3_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5274: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2640486 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2390557 (91%)
  Because of loop head:            249661 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         268 (0%)
  Times precision was empty:       1543410 (58%)
  Times precision was {false}:     1421 (0%)
  Times result was cached:         1091641 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4014 (0%)
  Times result was 'false':        47098 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1942613
  BDD entailment checks:           851607
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          13
Number of abstraction locations:          106
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         9443442
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 1737.52
Number of irrelevant predicates:          8058747 (85%)
Number of preds handled by boolean abs:   14443 (0%)
  Total number of models for allsat:      8000
  Max number of models for allsat:        64
  Avg number of models for allsat:        1.99

Time for post operator:                152.965s
  Time for path formula creation:      149.319s
Time for strengthen operator:            7.472s
Time for prec operator:                246.164s
  Time for abstraction:                204.027s (Max:     1.292s, Count: 2640486)
    Boolean abstraction:                 4.635s
    Solving time:                        4.934s (Max:     0.028s)
    Model enumeration time:              0.702s
    Time for BDD construction:           0.120s (Max:     0.004s)
Time for merge operator:                 7.618s
Time for coverage check:                 0.601s
  Time for BDD entailment checks:        0.389s
Total time for SMT solver (w/o itp):     5.636s

Number of path formula cache hits:   14394748 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    35.673s

Total number of created targets for pointer analysis: 46616
   Number of created targets for uf: *unsigned_short_int is 1953
   Number of created targets for uf: *signed_int is 123
   Number of created targets for uf: *char is 6121
   Number of created targets for uf: *unsigned_int is 5430


Number of BDD nodes:                               2088
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8584 (count: 2451452, min: 0, max: 428, avg: 0.00)
Time for BDD node cleanup:                             0.277s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.309s
  Time for transition matches:                         6.196s
  Time for transition assertions:                      0.023s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                     12569381 (count: 12569381, min: 1, max: 1, avg: 1.00) [1 x 12569381]

CPA algorithm statistics
------------------------
Number of iterations:            8776619
Max size of waitlist:            274
Average size of waitlist:        141
Number of computed successors:   10179183
Max successors for one state:    2
Number of times merged:          545503
Number of times stopped:         1345199
Number of times breaked:         268

Total time for CPA algorithm:       857.885s (Max:     7.634s)
  Time for choose from waitlist:      2.795s
  Time for precision adjustment:    286.088s
  Time for transfer relation:       525.436s
  Time for merge operator:           12.030s
  Time for stop operator:             7.800s
  Time for adding to reached set:     9.041s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   268
Avg. length of target path (in blocks):               21793 (count: 268, min: 9, max: 110, avg: 81.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.450s
  Counterexample analysis:                            15.165s (Max:     0.159s, Calls: 268)
    Refinement sat check:                             11.204s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.019s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.105s
  ARG update:                                         15.905s

Length of refined path (in blocks):                   14332 (count: 268, min: 8, max: 96, avg: 53.48)
Number of affected states:                             4294 (count: 268, min: 0, max: 95, avg: 16.02)
Length (states) of path with itp 'true':               9770 (count: 268, min: 0, max: 47, avg: 36.46)
Length (states) of path with itp non-trivial itp:      4294 (count: 268, min: 0, max: 95, avg: 16.02)
Length (states) of path with itp 'false':               268 (count: 268, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 268, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:            4024 (count: 268, min: 0, max: 94, avg: 15.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                268
Number of successful refinements:     268
Number of failed refinements:         0
Max. size of reached set before ref.: 34745
Max. size of reached set after ref.:  1208
Avg. size of reached set before ref.: 33509.43
Avg. size of reached set after ref.:  766.65

Total time for CEGAR algorithm:     894.480s
Time for refinements:                36.439s
Average time for refinement:          0.135s
Max time for refinement:              0.344s

Code Coverage
-----------------------------
  Function coverage:      0.107
  Visited lines:          1726
  Total lines:            6363
  Line coverage:          0.271
  Visited conditions:     442
  Total conditions:       3026
  Condition coverage:     0.146

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             11820
  Number of reached locations:   1027 (11%)
    Avg states per location:     11
    Max states per location:     777 (at node N117)
  Number of reached functions:   36 (11%)
  Number of partitions:          11785
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N808 (before line 5802), Function read_pulse called from node N1047, stack depth 6 [142fa6b3], stack [main, bp_device_event, disc_status, disc_off_status, read_reg, read_pulse]])
  Number of target states:       0
  Size of final wait list        197

Time for analysis setup:          5.898s
  Time for loading CPAs:          0.842s
  Time for loading parser:        0.429s
  Time for CFA construction:      4.530s
    Time for parsing file(s):     0.904s
    Time for AST to CFA:          1.698s
    Time for CFA sanity check:    0.417s
    Time for post-processing:     1.310s
      Time for var class.:        0.670s
Time for Analysis:              894.480s
CPU time for analysis:          894.400s
Total time for CPAchecker:      900.380s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.265s

Time for Garbage Collector:      49.003s (in 1261 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                764MB (   728 MiB) max;    491MB (   468 MiB) avg;    768MB (   732 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           866MB (   826 MiB) max;    739MB (   705 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8151MB (  7774 MiB) max;   8135MB (  7759 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
