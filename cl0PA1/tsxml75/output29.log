scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a7669fji/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5274: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            41126 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  37177 (90%)
  Because of loop head:            3942 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       40812 (99%)
  Times precision was {false}:     84 (0%)
  Times result was cached:         174 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (0%)
  Times result was 'false':        18 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         30980
  BDD entailment checks:           12912
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          4
Number of abstraction locations:          33
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         388
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 2.77
Number of irrelevant predicates:          196 (51%)
Number of preds handled by boolean abs:   72 (19%)
  Total number of models for allsat:      56
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.988s
  Time for path formula creation:        6.867s
Time for strengthen operator:            0.240s
Time for prec operator:                  1.450s
  Time for abstraction:                  0.732s (Max:     0.032s, Count: 41126)
    Boolean abstraction:                 0.077s
    Solving time:                        0.175s (Max:     0.026s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.007s (Max:     0.005s)
Time for merge operator:                 0.413s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.177s

Number of path formula cache hits:   158739 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.981s

Total number of created targets for pointer analysis: 3409
   Number of created targets for uf: *unsigned_short_int is 129
   Number of created targets for uf: *signed_int is 11
   Number of created targets for uf: *char is 451
   Number of created targets for uf: *unsigned_int is 357


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         136 (count: 54500, min: 0, max: 58, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.456s
Automaton transfers with branching:                0
Automaton transfer successors:                       200208 (count: 200208, min: 1, max: 1, avg: 1.00) [1 x 200208]

CPA algorithm statistics
------------------------
Number of iterations:            138331
Max size of waitlist:            126
Average size of waitlist:        51
Number of computed successors:   160356
Max successors for one state:    2
Number of times merged:          9034
Number of times stopped:         21896
Number of times breaked:         7

Total time for CPA algorithm:        23.632s (Max:     6.749s)
  Time for choose from waitlist:      0.165s
  Time for precision adjustment:      2.932s
  Time for transfer relation:        18.200s
  Time for merge operator:            0.717s
  Time for stop operator:             0.368s
  Time for adding to reached set:     0.400s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 146 (count: 7, min: 9, max: 44, avg: 20.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.972s
  Counterexample analysis:                             0.393s (Max:     0.088s, Calls: 7)
    Refinement sat check:                              0.324s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.003s
  ARG update:                                          0.556s

Length of refined path (in blocks):                     139 (count: 7, min: 8, max: 43, avg: 19.86)
Number of affected states:                              125 (count: 7, min: 6, max: 41, avg: 17.86)
Length (states) of path with itp 'true':                  7 (count: 7, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       125 (count: 7, min: 6, max: 41, avg: 17.86)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             118 (count: 7, min: 5, max: 40, avg: 16.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 30970
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 17657.86
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      24.793s
Time for refinements:                 1.151s
Average time for refinement:          0.164s
Max time for refinement:              0.302s

Code Coverage
-----------------------------
  Function coverage:      0.107
  Visited lines:          1738
  Total lines:            6363
  Line coverage:          0.273
  Visited conditions:     442
  Total conditions:       3026
  Condition coverage:     0.146

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             14879
  Number of reached locations:   1043 (11%)
    Avg states per location:     14
    Max states per location:     1226 (at node N117)
  Number of reached functions:   36 (11%)
  Number of partitions:          14876
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9113 (before line 15138), Function main called from node N9046, stack depth 1 [3ccfac29], stack [main]])
  Number of target states:       0
  Size of final wait list        48

Time for analysis setup:          5.031s
  Time for loading CPAs:          0.683s
  Time for loading parser:        0.583s
  Time for CFA construction:      3.687s
    Time for parsing file(s):     0.771s
    Time for AST to CFA:          1.439s
    Time for CFA sanity check:    0.319s
    Time for post-processing:     0.997s
      Time for var class.:        0.496s
Time for Analysis:               24.793s
CPU time for analysis:           24.800s
Total time for CPAchecker:       29.835s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.374s

Time for Garbage Collector:       1.842s (in 90 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                128MB (   123 MiB) max;     76MB (    72 MiB) avg;    143MB (   136 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           178MB (   170 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
