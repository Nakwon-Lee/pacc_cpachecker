scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qu17zuyz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5274: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11783: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5095: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2632764 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2357000 (90%)
  Because of loop head:            275514 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         250 (0%)
  Times precision was empty:       1720072 (65%)
  Times precision was {false}:     2754 (0%)
  Times result was cached:         901933 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8005 (0%)
  Times result was 'false':        2561 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2210327
  BDD entailment checks:           831703
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       124
Number of predicates discovered:          12
Number of abstraction locations:          181
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         5931704
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 551.32
Number of irrelevant predicates:          5551601 (94%)
Number of preds handled by boolean abs:   34757 (1%)
  Total number of models for allsat:      88132
  Max number of models for allsat:        64
  Avg number of models for allsat:        11.01

Time for post operator:                 76.672s
  Time for path formula creation:       72.444s
Time for strengthen operator:            7.751s
Time for prec operator:                222.417s
  Time for abstraction:                202.661s (Max:     2.370s, Count: 2632764)
    Boolean abstraction:                47.871s
    Solving time:                       42.296s (Max:     0.101s)
    Model enumeration time:             15.760s
    Time for BDD construction:           0.990s (Max:     0.113s)
Time for merge operator:                 7.858s
Time for coverage check:                 0.688s
  Time for BDD entailment checks:        0.440s
Total time for SMT solver (w/o itp):    58.056s

Number of path formula cache hits:   15093178 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    43.766s

Total number of created targets for pointer analysis: 495958
   Number of created targets for uf: *unsigned_short_int is 1665
   Number of created targets for uf: *(struct_net_device)* is 164
   Number of created targets for uf: *signed_int is 2447
   Number of created targets for uf: *unsigned_char is 345
   Number of created targets for uf: *(struct_proc_dir_entry)* is 280
   Number of created targets for uf: *(struct_list_head)* is 7
   Number of created targets for uf: *(struct_pci_dev)* is 71
   Number of created targets for uf: *enum_ldv_28506 is 59
   Number of created targets for uf: *unsigned_int is 10835
   Number of created targets for uf: *char is 8751
   Number of created targets for uf: *unsigned_long_int is 4


Number of BDD nodes:                               3743
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17011 (count: 2614143, min: 0, max: 471, avg: 0.01)
Time for BDD node cleanup:                             0.300s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.604s
  Time for transition matches:                         6.739s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                     13371908 (count: 13371908, min: 1, max: 1, avg: 1.00) [1 x 13371908]

CPA algorithm statistics
------------------------
Number of iterations:            9124232
Max size of waitlist:            974
Average size of waitlist:        417
Number of computed successors:   10688644
Max successors for one state:    2
Number of times merged:          689312
Number of times stopped:         1481196
Number of times breaked:         250

Total time for CPA algorithm:       791.138s (Max:    30.697s)
  Time for choose from waitlist:      2.356s
  Time for precision adjustment:    269.027s
  Time for transfer relation:       469.632s
  Time for merge operator:           13.883s
  Time for stop operator:             9.768s
  Time for adding to reached set:     8.930s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   250
Avg. length of target path (in blocks):               15197 (count: 250, min: 9, max: 102, avg: 60.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  53.757s
  Counterexample analysis:                            32.822s (Max:     0.485s, Calls: 250)
    Refinement sat check:                             27.905s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.137s
  ARG update:                                         20.483s

Length of refined path (in blocks):                   11880 (count: 250, min: 7, max: 86, avg: 47.52)
Number of affected states:                             7893 (count: 250, min: 6, max: 85, avg: 31.57)
Length (states) of path with itp 'true':               3737 (count: 250, min: 0, max: 41, avg: 14.95)
Length (states) of path with itp non-trivial itp:      7893 (count: 250, min: 6, max: 85, avg: 31.57)
Length (states) of path with itp 'false':               250 (count: 250, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 250, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7643 (count: 250, min: 5, max: 84, avg: 30.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                250
Number of successful refinements:     250
Number of failed refinements:         0
Max. size of reached set before ref.: 271652
Max. size of reached set after ref.:  237874
Avg. size of reached set before ref.: 117153.72
Avg. size of reached set after ref.:  80857.34

Total time for CEGAR algorithm:     894.331s
Time for refinements:                83.538s
Average time for refinement:          0.334s
Max time for refinement:              3.153s

Code Coverage
-----------------------------
  Function coverage:      0.178
  Visited lines:          2370
  Total lines:            6363
  Line coverage:          0.372
  Visited conditions:     1194
  Total conditions:       3026
  Condition coverage:     0.395

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             130794
  Number of reached locations:   1959 (21%)
    Avg states per location:     66
    Max states per location:     11799 (at node N117)
  Number of reached functions:   60 (18%)
  Number of partitions:          130633
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6866 (before line 12575), Function bypass_init_module called from node N9063, stack depth 2 [41de159c], stack [main, bypass_init_module]])
  Number of target states:       0
  Size of final wait list        495

Time for analysis setup:          6.011s
  Time for loading CPAs:          0.979s
  Time for loading parser:        0.490s
  Time for CFA construction:      4.377s
    Time for parsing file(s):     0.884s
    Time for AST to CFA:          1.659s
    Time for CFA sanity check:    0.443s
    Time for post-processing:     1.226s
      Time for var class.:        0.621s
Time for Analysis:              894.331s
CPU time for analysis:          894.240s
Total time for CPAchecker:      900.346s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              1.840s

Time for Garbage Collector:      93.278s (in 974 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1447MB (  1380 MiB) max;    679MB (   648 MiB) avg;   1487MB (  1418 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1499MB (  1429 MiB) max;    990MB (   944 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8491MB (  8097 MiB) max;   8208MB (  7828 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
