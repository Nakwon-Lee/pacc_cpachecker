scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--silicom--bpctl_mod.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_as1jdr0u/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7220: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8018: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8019: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8021: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8023: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8024: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8028: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8029: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8030: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8031: Dead code detected: write_data(pbpctl_dev_m, 162); (CFACreationUtils.addEdgeToCFA, INFO)

line 8033: Dead code detected: write_data(pbpctl_dev_m, 163); (CFACreationUtils.addEdgeToCFA, INFO)

line 8035: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 8064: Dead code detected: tmp = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8065: Dead code detected: [!(tmp == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8066: Dead code detected: pbpctl_dev_m = pbpctl_dev; (CFACreationUtils.addEdgeToCFA, INFO)

line 8068: Dead code detected: pbpctl_dev_m = get_master_port_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8070: Dead code detected: [!(((unsigned long)pbpctl_dev_m) == ((unsigned long)((bpctl_dev_t *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 8071: Dead code detected: return (-1); (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 8075: Dead code detected: [!(((pbpctl_dev_m->bp_caps_ex) & 2U) != 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8076: Dead code detected: tmp___0 = is_bypass_fn(pbpctl_dev); (CFACreationUtils.addEdgeToCFA, INFO)

line 8077: Dead code detected: [!(tmp___0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 8078: Dead code detected: write_data(pbpctl_dev_m, 164); (CFACreationUtils.addEdgeToCFA, INFO)

line 8080: Dead code detected: write_data(pbpctl_dev_m, 165); (CFACreationUtils.addEdgeToCFA, INFO)

line 8082: Dead code detected: i = 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 15194: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5274: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11783: Function pointer *(dev->ethtool_ops->get_drvinfo) with type void (*)(struct net_device *, struct ethtool_drvinfo *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5274: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11783: Ignoring function call through function pointer *(dev->ethtool_ops->get_drvinfo): (*(dev->ethtool_ops->get_drvinfo))(dev, &drvinfo); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5095: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_subsys to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdevice_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3337063 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3022710 (91%)
  Because of loop head:            314166 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         187 (0%)
  Times precision was empty:       2735607 (82%)
  Times precision was {false}:     2851 (0%)
  Times result was cached:         595186 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3419 (0%)
  Times result was 'false':        2483 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2756013
  BDD entailment checks:           1084877
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       124
Number of predicates discovered:          7
Number of abstraction locations:          157
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         2231927
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 355.97
Number of irrelevant predicates:          2002870 (90%)
Number of preds handled by boolean abs:   7873 (0%)
  Total number of models for allsat:      3459
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 60.641s
  Time for path formula creation:       55.780s
Time for strengthen operator:           10.679s
Time for prec operator:                120.620s
  Time for abstraction:                 96.856s (Max:     1.587s, Count: 3337063)
    Boolean abstraction:                18.330s
    Solving time:                       25.112s (Max:     0.125s)
    Model enumeration time:              1.088s
    Time for BDD construction:           0.104s (Max:     0.012s)
Time for merge operator:                 5.440s
Time for coverage check:                 0.796s
  Time for BDD entailment checks:        0.488s
Total time for SMT solver (w/o itp):    26.200s

Number of path formula cache hits:   20006251 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.144s

Total number of created targets for pointer analysis: 236412
   Number of created targets for uf: *unsigned_short_int is 65
   Number of created targets for uf: *(struct_net_device)* is 65
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *unsigned_char is 46
   Number of created targets for uf: *(struct_proc_dir_entry)* is 160
   Number of created targets for uf: *(struct_list_head)* is 23
   Number of created targets for uf: *(struct_pci_dev)* is 11
   Number of created targets for uf: *enum_ldv_28506 is 17
   Number of created targets for uf: *unsigned_int is 2667
   Number of created targets for uf: *char is 9641
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               265
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6970 (count: 3855427, min: 0, max: 150, avg: 0.00)
Time for BDD node cleanup:                             0.421s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.301s
  Time for transition matches:                         7.012s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                     16459241 (count: 16459241, min: 1, max: 1, avg: 1.00) [1 x 16459241]

CPA algorithm statistics
------------------------
Number of iterations:            11395182
Max size of waitlist:            1110
Average size of waitlist:        671
Number of computed successors:   13375969
Max successors for one state:    2
Number of times merged:          835568
Number of times stopped:         1907778
Number of times breaked:         187

Total time for CPA algorithm:       838.013s (Max:    33.447s)
  Time for choose from waitlist:      2.770s
  Time for precision adjustment:    179.017s
  Time for transfer relation:       605.400s
  Time for merge operator:           11.240s
  Time for stop operator:            11.898s
  Time for adding to reached set:     9.388s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   187
Avg. length of target path (in blocks):                7111 (count: 187, min: 9, max: 77, avg: 38.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.977s
  Counterexample analysis:                            14.255s (Max:     0.240s, Calls: 187)
    Refinement sat check:                             12.204s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.101s
  Precision update:                                    0.073s
  ARG update:                                         26.454s

Length of refined path (in blocks):                    6142 (count: 187, min: 7, max: 67, avg: 32.84)
Number of affected states:                             5468 (count: 187, min: 6, max: 65, avg: 29.24)
Length (states) of path with itp 'true':                487 (count: 187, min: 0, max: 38, avg: 2.60)
Length (states) of path with itp non-trivial itp:      5468 (count: 187, min: 6, max: 65, avg: 29.24)
Length (states) of path with itp 'false':               187 (count: 187, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 187, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5281 (count: 187, min: 5, max: 64, avg: 28.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                187
Number of successful refinements:     187
Number of failed refinements:         0
Max. size of reached set before ref.: 414806
Max. size of reached set after ref.:  389227
Avg. size of reached set before ref.: 80051.67
Avg. size of reached set after ref.:  20819.15

Total time for CEGAR algorithm:     894.631s
Time for refinements:                53.398s
Average time for refinement:          0.285s
Max time for refinement:              4.134s

Code Coverage
-----------------------------
  Function coverage:      0.190
  Visited lines:          2517
  Total lines:            6363
  Line coverage:          0.396
  Visited conditions:     1246
  Total conditions:       3026
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     9458
Number of CFA edges:             11716
Number of relevant variables:    1403
Number of functions:             337
Number of loops:                 99
Size of reached set:             389227
  Number of reached locations:   2124 (22%)
    Avg states per location:     183
    Max states per location:     36335 (at node N116)
  Number of reached functions:   64 (19%)
  Number of partitions:          389216
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N6866 (before line 12575), Function bypass_init_module called from node N9063, stack depth 2 [3f258920], stack [main, bypass_init_module]])
  Number of target states:       0
  Size of final wait list        417

Time for analysis setup:          6.068s
  Time for loading CPAs:          0.819s
  Time for loading parser:        0.590s
  Time for CFA construction:      4.541s
    Time for parsing file(s):     1.057s
    Time for AST to CFA:          1.871s
    Time for CFA sanity check:    0.426s
    Time for post-processing:     1.007s
      Time for var class.:        0.515s
Time for Analysis:              894.631s
CPU time for analysis:          894.540s
Total time for CPAchecker:      900.702s
Total CPU time for CPAchecker:  900.590s
Time for statistics:              3.733s

Time for Garbage Collector:     112.038s (in 1450 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1238MB (  1181 MiB) max;    526MB (   502 MiB) avg;   1270MB (  1211 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:          1265MB (  1206 MiB) max;    814MB (   777 MiB) avg
Allocated non-heap memory:        48MB (    45 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8154MB (  7777 MiB) max;   8138MB (  7761 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
