scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--cpqarray.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ts1ih15e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6409: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6412: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6418: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_33133;
  case 2:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_33133;
  case 4:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_33133;
  case 8:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_33133;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((int *)arg): "ebx");
  goto ldv_33133;
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 6449-6450: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6453-6454: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 6457-6458: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx");
  goto ldv_33144;
  case 2:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx");
  goto ldv_33144;
  case 4:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx");
  goto ldv_33144;
  case 8:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx");
  goto ldv_33144;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu___0): "0" (__pu_val___0),
                       "c" ((unsigned long *)arg): "ebx");
  goto ldv_33144;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7659: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4626: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4658: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4519: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4454-4455: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4548: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4487: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_zero_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4658: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6749: Ignoring function call through function pointer *(info_p->access.set_intr_mask): (*(info_p->access.set_intr_mask))(info_p, 0UL); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6753: Ignoring function call through function pointer *(info_p->access.fifo_full): temp = (*(info_p->access.fifo_full))(info_p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6769: Ignoring function call through function pointer *(info_p->access.submit_command): (*(info_p->access.submit_command))(info_p, c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6898: Ignoring function call through function pointer *((hba[ctlr])->access.command_completed): tmp = (*((hba[ctlr])->access.command_completed))(hba[ctlr]); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4487: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5367341 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4695041 (87%)
  Because of loop head:            671671 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         629 (0%)
  Times precision was empty:       119705 (2%)
  Times precision was {false}:     2895 (0%)
  Times result was cached:         5238368 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6373 (0%)
  Times result was 'false':        5409 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2222169
  BDD entailment checks:           1550589
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          13
Number of abstraction locations:          199
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         20263889
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 2186.44
Number of irrelevant predicates:          13178326 (65%)
Number of preds handled by boolean abs:   16514 (0%)
  Total number of models for allsat:      13872
  Max number of models for allsat:        48
  Avg number of models for allsat:        2.18

Time for post operator:                145.450s
  Time for path formula creation:      139.191s
Time for strengthen operator:           14.505s
Time for prec operator:                418.937s
  Time for abstraction:                371.859s (Max:     3.277s, Count: 5367341)
    Boolean abstraction:                 5.750s
    Solving time:                        3.787s (Max:     0.016s)
    Model enumeration time:              2.224s
    Time for BDD construction:           0.306s (Max:     0.084s)
Time for merge operator:                 3.080s
Time for coverage check:                 1.218s
  Time for BDD entailment checks:        0.880s
Total time for SMT solver (w/o itp):     6.011s

Number of path formula cache hits:   25971724 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    62.848s

Total number of created targets for pointer analysis: 14519
   Number of created targets for uf: *signed_int is 2377
   Number of created targets for uf: *(struct_ctlr_info)* is 3041
   Number of created targets for uf: *unsigned_long_long_int is 11
   Number of created targets for uf: *unsigned_int is 8836
   Number of created targets for uf: *unsigned_long_int is 125


Number of BDD nodes:                               6864
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13825 (count: 1724305, min: 0, max: 238, avg: 0.01)
Time for BDD node cleanup:                             0.210s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.930s
  Time for transition matches:                        11.157s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     22769960 (count: 22769960, min: 1, max: 1, avg: 1.00) [1 x 22769960]

CPA algorithm statistics
------------------------
Number of iterations:            15589632
Max size of waitlist:            619
Average size of waitlist:        233
Number of computed successors:   17408511
Max successors for one state:    2
Number of times merged:          335790
Number of times stopped:         1765723
Number of times breaked:         629

Total time for CPA algorithm:       835.577s (Max:    13.053s)
  Time for choose from waitlist:      5.632s
  Time for precision adjustment:    489.821s
  Time for transfer relation:       275.809s
  Time for merge operator:            7.165s
  Time for stop operator:            16.385s
  Time for adding to reached set:    16.724s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   629
Avg. length of target path (in blocks):               53216 (count: 629, min: 8, max: 163, avg: 84.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  46.437s
  Counterexample analysis:                            17.300s (Max:     0.100s, Calls: 629)
    Refinement sat check:                             11.555s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.032s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.144s
  Precision update:                                    0.308s
  ARG update:                                         28.372s

Length of refined path (in blocks):                   34786 (count: 629, min: 4, max: 110, avg: 55.30)
Number of affected states:                            15108 (count: 629, min: 1, max: 89, avg: 24.02)
Length (states) of path with itp 'true':              19049 (count: 629, min: 1, max: 108, avg: 30.28)
Length (states) of path with itp non-trivial itp:     15108 (count: 629, min: 1, max: 89, avg: 24.02)
Length (states) of path with itp 'false':               629 (count: 629, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 629, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14479 (count: 629, min: 0, max: 88, avg: 23.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                629
Number of successful refinements:     629
Number of failed refinements:         0
Max. size of reached set before ref.: 171079
Max. size of reached set after ref.:  45023
Avg. size of reached set before ref.: 32577.03
Avg. size of reached set after ref.:  7884.65

Total time for CEGAR algorithm:     896.160s
Time for refinements:                57.723s
Average time for refinement:          0.091s
Max time for refinement:              0.925s

Code Coverage
-----------------------------
  Function coverage:      0.491
  Visited lines:          1571
  Total lines:            2966
  Line coverage:          0.530
  Visited conditions:     358
  Total conditions:       916
  Condition coverage:     0.391

CPAchecker general statistics
-----------------------------
Number of program locations:     4325
Number of CFA edges:             4995
Number of relevant variables:    549
Number of functions:             163
Number of loops:                 37
Size of reached set:             105870
  Number of reached locations:   969 (22%)
    Avg states per location:     109
    Max states per location:     3560 (at node N2384)
  Number of reached functions:   80 (49%)
  Number of partitions:          105834
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N2621 (before line 7196), Function main called from node N2600, stack depth 1 [671facee], stack [main]])
  Number of target states:       0
  Size of final wait list        429

Time for analysis setup:          4.195s
  Time for loading CPAs:          0.754s
  Time for loading parser:        0.452s
  Time for CFA construction:      2.897s
    Time for parsing file(s):     0.722s
    Time for AST to CFA:          0.972s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     0.800s
      Time for var class.:        0.329s
Time for Analysis:              896.160s
CPU time for analysis:          896.100s
Total time for CPAchecker:      900.358s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.914s

Time for Garbage Collector:     124.628s (in 1633 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1813MB (  1729 MiB) max;    635MB (   606 MiB) avg;   1846MB (  1760 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1851MB (  1765 MiB) max;    930MB (   887 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8061MB (  7687 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
