scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3ly04v6m/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6520 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5466 (84%)
  Because of loop head:            1018 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       3829 (59%)
  Times precision was {false}:     156 (2%)
  Times result was cached:         2105 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      430 (7%)
  Times result was 'false':        484 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         5663
  BDD entailment checks:           1861
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          8
Number of abstraction locations:          34
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         7148
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 12.20
Number of irrelevant predicates:          3008 (42%)
Number of preds handled by boolean abs:   1157 (16%)
  Total number of models for allsat:      436
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  5.677s
  Time for path formula creation:        5.605s
Time for strengthen operator:            0.086s
Time for prec operator:                  9.942s
  Time for abstraction:                  9.723s (Max:     1.378s, Count: 6520)
    Boolean abstraction:                 0.496s
    Solving time:                        6.934s (Max:     1.305s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.056s (Max:     0.008s)
Time for merge operator:                 0.105s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     6.972s

Number of path formula cache hits:   46392 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.315s

Total number of created targets for pointer analysis: 117992
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *unsigned_int is 209
   Number of created targets for uf: *char is 15


Number of BDD nodes:                               281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         971 (count: 9347, min: 0, max: 179, avg: 0.10)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.223s
Automaton transfers with branching:                0
Automaton transfer successors:                        58260 (count: 58260, min: 1, max: 1, avg: 1.00) [1 x 58260]

CPA algorithm statistics
------------------------
Number of iterations:            26747
Max size of waitlist:            85
Average size of waitlist:        46
Number of computed successors:   31649
Max successors for one state:    2
Number of times merged:          1901
Number of times stopped:         3069
Number of times breaked:         36

Total time for CPA algorithm:        18.257s (Max:     4.607s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:     10.329s
  Time for transfer relation:         7.128s
  Time for merge operator:            0.252s
  Time for stop operator:             0.134s
  Time for adding to reached set:     0.064s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 605 (count: 36, min: 10, max: 22, avg: 16.81)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.041s
  Counterexample analysis:                             4.827s (Max:     0.525s, Calls: 36)
    Refinement sat check:                              4.411s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.033s
  ARG update:                                          0.109s

Length of refined path (in blocks):                     487 (count: 36, min: 9, max: 19, avg: 13.53)
Number of affected states:                              338 (count: 36, min: 2, max: 17, avg: 9.39)
Length (states) of path with itp 'true':                113 (count: 36, min: 1, max: 9, avg: 3.14)
Length (states) of path with itp non-trivial itp:       338 (count: 36, min: 2, max: 17, avg: 9.39)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             302 (count: 36, min: 1, max: 16, avg: 8.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 2023
Max. size of reached set after ref.:  1317
Avg. size of reached set before ref.: 1046.19
Avg. size of reached set after ref.:  280.39

Total time for CEGAR algorithm:      23.457s
Time for refinements:                 5.139s
Average time for refinement:          0.142s
Max time for refinement:              0.528s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          1820
  Total lines:            10994
  Line coverage:          0.166
  Visited conditions:     108
  Total conditions:       2874
  Condition coverage:     0.038

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             527
  Number of reached locations:   322 (2%)
    Avg states per location:     1
    Max states per location:     13 (at node N485)
  Number of reached functions:   40 (11%)
  Number of partitions:          525
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N13948 (before line 21606), Function main called from node N13860, stack depth 1 [41e156ee], stack [main]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          6.982s
  Time for loading CPAs:          1.040s
  Time for loading parser:        0.557s
  Time for CFA construction:      5.275s
    Time for parsing file(s):     1.055s
    Time for AST to CFA:          1.801s
    Time for CFA sanity check:    0.552s
    Time for post-processing:     1.624s
      Time for var class.:        0.786s
Time for Analysis:               23.457s
CPU time for analysis:           23.450s
Total time for CPAchecker:       30.447s
Total CPU time for CPAchecker:   30.420s
Time for statistics:              0.088s

Time for Garbage Collector:       0.676s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 97MB (    93 MiB) max;     67MB (    63 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     36MB (    34 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8079MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
