scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o5kilgrj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18470 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10625 (58%)
  Because of loop head:            7821 (42%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24 (0%)
  Times precision was empty:       16389 (89%)
  Times precision was {false}:     78 (0%)
  Times result was cached:         1729 (9%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      274 (1%)
  Times result was 'false':        231 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         16392
  BDD entailment checks:           5786
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       113
Number of predicates discovered:          6
Number of abstraction locations:          17
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         5774
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.40
Number of irrelevant predicates:          3312 (57%)
Number of preds handled by boolean abs:   703 (12%)
  Total number of models for allsat:      265
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  9.557s
  Time for path formula creation:        9.411s
Time for strengthen operator:            0.217s
Time for prec operator:                  8.424s
  Time for abstraction:                  8.064s (Max:     1.069s, Count: 18470)
    Boolean abstraction:                 0.294s
    Solving time:                        2.175s (Max:     0.996s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.031s (Max:     0.012s)
Time for merge operator:                 0.193s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     2.193s

Number of path formula cache hits:   183283 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.613s

Total number of created targets for pointer analysis: 250223
   Number of created targets for uf: *unsigned_int is 443


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         603 (count: 24274, min: 0, max: 65, avg: 0.02)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.397s
Automaton transfers with branching:                0
Automaton transfer successors:                       188173 (count: 188173, min: 1, max: 1, avg: 1.00) [1 x 188173]

CPA algorithm statistics
------------------------
Number of iterations:            71425
Max size of waitlist:            97
Average size of waitlist:        69
Number of computed successors:   84354
Max successors for one state:    2
Number of times merged:          5303
Number of times stopped:         10870
Number of times breaked:         24

Total time for CPA algorithm:        22.557s (Max:     3.310s)
  Time for choose from waitlist:      0.039s
  Time for precision adjustment:      8.967s
  Time for transfer relation:        12.425s
  Time for merge operator:            0.330s
  Time for stop operator:             0.206s
  Time for adding to reached set:     0.134s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 353 (count: 24, min: 12, max: 17, avg: 14.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.739s
  Counterexample analysis:                             0.417s (Max:     0.031s, Calls: 24)
    Refinement sat check:                              0.338s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.021s
  ARG update:                                          0.274s

Length of refined path (in blocks):                     322 (count: 24, min: 7, max: 16, avg: 13.42)
Number of affected states:                              269 (count: 24, min: 0, max: 14, avg: 11.21)
Length (states) of path with itp 'true':                 29 (count: 24, min: 1, max: 6, avg: 1.21)
Length (states) of path with itp non-trivial itp:       269 (count: 24, min: 0, max: 14, avg: 11.21)
Length (states) of path with itp 'false':                24 (count: 24, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             246 (count: 24, min: 0, max: 13, avg: 10.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 3702
Max. size of reached set after ref.:  2041
Avg. size of reached set before ref.: 3107.54
Avg. size of reached set after ref.:  90.79

Total time for CEGAR algorithm:      23.428s
Time for refinements:                 0.868s
Average time for refinement:          0.036s
Max time for refinement:              0.088s

Code Coverage
-----------------------------
  Function coverage:      0.087
  Visited lines:          1849
  Total lines:            10994
  Line coverage:          0.168
  Visited conditions:     120
  Total conditions:       2874
  Condition coverage:     0.042

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             851
  Number of reached locations:   301 (2%)
    Avg states per location:     2
    Max states per location:     21 (at node N105)
  Number of reached functions:   33 (9%)
  Number of partitions:          848
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N13997 (before line 21654), Function main called from node N13860, stack depth 1 [41e156ee], stack [main]])
  Number of target states:       0
  Size of final wait list        80

Time for analysis setup:          6.891s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.530s
  Time for CFA construction:      5.377s
    Time for parsing file(s):     0.951s
    Time for AST to CFA:          1.880s
    Time for CFA sanity check:    0.636s
    Time for post-processing:     1.782s
      Time for var class.:        0.913s
Time for Analysis:               23.428s
CPU time for analysis:           23.430s
Total time for CPAchecker:       30.322s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.101s

Time for Garbage Collector:       0.924s (in 149 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 96MB (    92 MiB) max;     70MB (    67 MiB) avg;    106MB (   101 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
