scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ipw2x00--ipw2100.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vpjbrkij/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6578: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6581: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6584: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6738: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6741: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6744: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6413;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 21710: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7158: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7191: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6981-6982: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7048: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7081: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7015: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 20380: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_add_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_remove_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_txb_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_networks_age to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pm_qos_update_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_set_geo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wiphy_rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_uninterruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2225561 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2143455 (96%)
  Because of loop head:            80628 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1478 (0%)
  Times precision was empty:       93544 (4%)
  Times precision was {false}:     2209 (0%)
  Times result was cached:         2069197 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      60611 (3%)
  Times result was 'false':        205836 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         828520
  BDD entailment checks:           390492
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          12
Number of abstraction locations:          395
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         18794943
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 299.19
Number of irrelevant predicates:          6701337 (36%)
Number of preds handled by boolean abs:   306281 (2%)
  Total number of models for allsat:      94673
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.56

Time for post operator:                 95.595s
  Time for path formula creation:       93.125s
Time for strengthen operator:            6.585s
Time for prec operator:                538.718s
  Time for abstraction:                516.197s (Max:     1.659s, Count: 2225561)
    Boolean abstraction:                54.935s
    Solving time:                       46.748s (Max:     0.098s)
    Model enumeration time:              5.229s
    Time for BDD construction:           1.361s (Max:     0.084s)
Time for merge operator:                 2.455s
Time for coverage check:                 0.435s
  Time for BDD entailment checks:        0.334s
Total time for SMT solver (w/o itp):    51.977s

Number of path formula cache hits:   10905796 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    51.603s

Total number of created targets for pointer analysis: 308803
   Number of created targets for uf: *(void)* is 214
   Number of created targets for uf: *signed_int is 57
   Number of created targets for uf: *unsigned_char is 201
   Number of created targets for uf: *(struct_list_head)* is 455
   Number of created targets for uf: *(struct_firmware)* is 387
   Number of created targets for uf: *char is 7743
   Number of created targets for uf: *unsigned_int is 397
   Number of created targets for uf: *unsigned_long_int is 15


Number of BDD nodes:                               3439
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      119796 (count: 931442, min: 0, max: 1161, avg: 0.13)
Time for BDD node cleanup:                             0.164s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.623s
  Time for transition matches:                         5.620s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     10075516 (count: 10075516, min: 1, max: 1, avg: 1.00) [1 x 10075516]

CPA algorithm statistics
------------------------
Number of iterations:            6901189
Max size of waitlist:            54
Average size of waitlist:        30
Number of computed successors:   7519108
Max successors for one state:    2
Number of times merged:          219014
Number of times stopped:         393283
Number of times breaked:         1478

Total time for CPA algorithm:       842.683s (Max:     7.794s)
  Time for choose from waitlist:      1.932s
  Time for precision adjustment:    567.313s
  Time for transfer relation:       244.519s
  Time for merge operator:            4.861s
  Time for stop operator:             5.687s
  Time for adding to reached set:     6.385s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1478
Avg. length of target path (in blocks):               85182 (count: 1478, min: 7, max: 434, avg: 57.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.958s
  Counterexample analysis:                            33.083s (Max:     0.230s, Calls: 1478)
    Refinement sat check:                             21.319s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.304s
  Precision update:                                    0.858s
  ARG update:                                          9.202s

Length of refined path (in blocks):                   74095 (count: 1478, min: 6, max: 433, avg: 50.13)
Number of affected states:                            56872 (count: 1478, min: 1, max: 431, avg: 38.48)
Length (states) of path with itp 'true':              15745 (count: 1478, min: 0, max: 140, avg: 10.65)
Length (states) of path with itp non-trivial itp:     56872 (count: 1478, min: 1, max: 431, avg: 38.48)
Length (states) of path with itp 'false':              1478 (count: 1478, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1478, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           55394 (count: 1478, min: 0, max: 430, avg: 37.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1478
Number of successful refinements:     1478
Number of failed refinements:         0
Max. size of reached set before ref.: 44278
Max. size of reached set after ref.:  26013
Avg. size of reached set before ref.: 6235.77
Avg. size of reached set after ref.:  1568.89

Total time for CEGAR algorithm:     893.354s
Time for refinements:                49.316s
Average time for refinement:          0.033s
Max time for refinement:              0.298s

Code Coverage
-----------------------------
  Function coverage:      0.245
  Visited lines:          2314
  Total lines:            10994
  Line coverage:          0.210
  Visited conditions:     436
  Total conditions:       2874
  Condition coverage:     0.152

CPAchecker general statistics
-----------------------------
Number of program locations:     15461
Number of CFA edges:             17614
Number of relevant variables:    1912
Number of functions:             380
Number of loops:                 79
Size of reached set:             22335
  Number of reached locations:   1385 (9%)
    Avg states per location:     16
    Max states per location:     637 (at node N484)
  Number of reached functions:   93 (24%)
  Number of partitions:          21975
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N2047 (before line 9113), Function ipw2100_start_adapter called from node N3219, stack depth 4 [38180743], stack [main, ipw2100_resume, ipw2100_up, ipw2100_start_adapter]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          7.009s
  Time for loading CPAs:          0.978s
  Time for loading parser:        0.520s
  Time for CFA construction:      5.410s
    Time for parsing file(s):     0.899s
    Time for AST to CFA:          1.816s
    Time for CFA sanity check:    0.845s
    Time for post-processing:     1.806s
      Time for var class.:        0.865s
Time for Analysis:              893.354s
CPU time for analysis:          893.210s
Total time for CPAchecker:      900.367s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.419s

Time for Garbage Collector:      47.426s (in 2119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                821MB (   783 MiB) max;    399MB (   380 MiB) avg;    838MB (   799 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           991MB (   945 MiB) max;    601MB (   573 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8964MB (  8549 MiB) max;   8473MB (  8080 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
