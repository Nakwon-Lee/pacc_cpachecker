scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83781d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tb90ht_n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7822: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2360: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2360: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_write_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16864 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16556 (98%)
  Because of loop head:            207 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (1%)
  Times precision was empty:       4815 (29%)
  Times precision was {false}:     10550 (63%)
  Times result was cached:         1322 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      177 (1%)
  Times result was 'false':        7066 (42%)
Number of strengthen sat checks:   0
Number of coverage checks:         68447
  BDD entailment checks:           139
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       505
Number of predicates discovered:          89
Number of abstraction locations:          33
Max number of predicates per location:    88
Avg number of predicates per location:    3
Total predicates per abstraction:         20679
Max number of predicates per abstraction: 88
Avg number of predicates per abstraction: 1.93
Number of irrelevant predicates:          11933 (58%)
Number of preds handled by boolean abs:   7920 (38%)
  Total number of models for allsat:      176
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  3.046s
  Time for path formula creation:        2.943s
Time for strengthen operator:            0.219s
Time for prec operator:                882.915s
  Time for abstraction:                882.417s (Max:   861.926s, Count: 16864)
    Boolean abstraction:               865.040s
    Solving time:                        7.058s (Max:     0.088s)
    Model enumeration time:            804.149s
    Time for BDD construction:          58.052s (Max:     0.050s)
Time for merge operator:                 0.564s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.032s
Total time for SMT solver (w/o itp):   811.207s

Number of path formula cache hits:   260574 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.566s

Total number of created targets for pointer analysis: 13
   Number of created targets for uf: *unsigned_short_int is 14


Number of BDD nodes:                               190593
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19756 (count: 73002, min: 0, max: 442, avg: 0.27)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.622s (in 280 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.439s
Automaton transfers with branching:                0
Automaton transfer successors:                       229398 (count: 229398, min: 1, max: 1, avg: 1.00) [1 x 229398]

CPA algorithm statistics
------------------------
Number of iterations:            165010
Max size of waitlist:            158
Average size of waitlist:        97
Number of computed successors:   214816
Max successors for one state:    2
Number of times merged:          34154
Number of times stopped:         34292
Number of times breaked:         101

Total time for CPA algorithm:       891.974s (Max:   862.398s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:    884.003s
  Time for transfer relation:         5.494s
  Time for merge operator:            1.117s
  Time for stop operator:             0.300s
  Time for adding to reached set:     0.296s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                 976 (count: 101, min: 9, max: 16, avg: 9.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.071s
  Counterexample analysis:                             2.498s (Max:     0.049s, Calls: 101)
    Refinement sat check:                              2.048s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.028s
  ARG update:                                          0.463s

Length of refined path (in blocks):                     404 (count: 101, min: 4, max: 4, avg: 4.00)
Number of affected states:                              101 (count: 101, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                202 (count: 101, min: 2, max: 2, avg: 2.00)
Length (states) of path with itp non-trivial itp:       101 (count: 101, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 101, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 101, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 1745
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 1692.03
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:     895.333s
Time for refinements:                 3.358s
Average time for refinement:          0.033s
Max time for refinement:              0.141s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          2490
  Total lines:            4373
  Line coverage:          0.569
  Visited conditions:     974
  Total conditions:       1498
  Condition coverage:     0.650

CPAchecker general statistics
-----------------------------
Number of program locations:     5805
Number of CFA edges:             6836
Number of relevant variables:    928
Number of functions:             148
Number of loops:                 9
Size of reached set:             3371
  Number of reached locations:   1677 (29%)
    Avg states per location:     2
    Max states per location:     16 (at node N683)
  Number of reached functions:   45 (30%)
  Number of partitions:          3370
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2146 (before line 5284), Function main called from node N1961, stack depth 1 [59c04bee], stack [main]])
  Number of target states:       0
  Size of final wait list        155

Time for analysis setup:          5.146s
  Time for loading CPAs:          0.676s
  Time for loading parser:        0.532s
  Time for CFA construction:      3.813s
    Time for parsing file(s):     0.760s
    Time for AST to CFA:          1.076s
    Time for CFA sanity check:    0.324s
    Time for post-processing:     1.541s
      Time for var class.:        0.532s
Time for Analysis:              895.333s
CPU time for analysis:          895.160s
Total time for CPAchecker:      900.492s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.150s

Time for Garbage Collector:       1.936s (in 725 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                106MB (   101 MiB) max;     61MB (    58 MiB) avg;    110MB (   105 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     38MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8444MB (  8053 MiB) max;   8285MB (  7901 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
