scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--wireless--ipw2x00--ipw2200.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_icoopm_8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6433: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6436: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6439: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6703: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6706: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6709: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13366: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13384: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13484: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13502: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13520: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13579: Dead code detected: __ms___3 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30293: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7136: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7168: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6992-6993: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7057: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7025: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19467: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ipw_prom_netdev_ops_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_prom_netdev_ops_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_netdev_ops_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_netdev_ops_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_get_geo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_is_valid_channel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            422365 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  392316 (93%)
  Because of loop head:            29925 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         124 (0%)
  Times precision was empty:       375360 (89%)
  Times precision was {false}:     1536 (0%)
  Times result was cached:         43147 (10%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2322 (1%)
  Times result was 'false':        2381 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         686387
  BDD entailment checks:           149955
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       176
Number of predicates discovered:          19
Number of abstraction locations:          50
Max number of predicates per location:    18
Avg number of predicates per location:    5
Total predicates per abstraction:         279516
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 72.45
Number of irrelevant predicates:          196763 (70%)
Number of preds handled by boolean abs:   9757 (3%)
  Total number of models for allsat:      816699
  Max number of models for allsat:        16384
  Avg number of models for allsat:        351.72

Time for post operator:                 42.898s
  Time for path formula creation:       41.664s
Time for strengthen operator:            2.781s
Time for prec operator:                644.303s
  Time for abstraction:                639.790s (Max:    14.026s, Count: 422365)
    Boolean abstraction:               624.210s
    Solving time:                        5.812s (Max:     0.040s)
    Model enumeration time:            601.535s
    Time for BDD construction:          17.819s (Max:     0.472s)
Time for merge operator:                 3.448s
Time for coverage check:                 0.220s
  Time for BDD entailment checks:        0.148s
Total time for SMT solver (w/o itp):   607.347s

Number of path formula cache hits:   3900352 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    29.709s

Total number of created targets for pointer analysis: 88266
   Number of created targets for uf: *signed_int is 4609
   Number of created targets for uf: *unsigned_char is 9337
   Number of created targets for uf: *unsigned_int is 1537
   Number of created targets for uf: *char is 73


Number of BDD nodes:                               123704
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7366 (count: 548985, min: 0, max: 226, avg: 0.01)
Time for BDD node cleanup:                             0.074s
Time for BDD garbage collection:                       0.078s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.369s
  Time for transition matches:                         1.719s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      3980701 (count: 3980701, min: 1, max: 1, avg: 1.00) [1 x 3980701]

CPA algorithm statistics
------------------------
Number of iterations:            2411900
Max size of waitlist:            1027
Average size of waitlist:        574
Number of computed successors:   2856799
Max successors for one state:    2
Number of times merged:          268216
Number of times stopped:         362529
Number of times breaked:         124

Total time for CPA algorithm:       848.776s (Max:    48.007s)
  Time for choose from waitlist:      0.955s
  Time for precision adjustment:    658.576s
  Time for transfer relation:       174.311s
  Time for merge operator:            5.581s
  Time for stop operator:             2.299s
  Time for adding to reached set:     2.574s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   124
Avg. length of target path (in blocks):                1814 (count: 124, min: 8, max: 26, avg: 14.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.988s
  Counterexample analysis:                            36.722s (Max:     0.568s, Calls: 124)
    Refinement sat check:                             34.217s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.028s
  ARG update:                                          4.124s

Length of refined path (in blocks):                    1455 (count: 124, min: 4, max: 17, avg: 11.73)
Number of affected states:                             1170 (count: 124, min: 1, max: 15, avg: 9.44)
Length (states) of path with itp 'true':                161 (count: 124, min: 1, max: 2, avg: 1.30)
Length (states) of path with itp non-trivial itp:      1170 (count: 124, min: 1, max: 15, avg: 9.44)
Length (states) of path with itp 'false':               124 (count: 124, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 124, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1046 (count: 124, min: 0, max: 14, avg: 8.44)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                124
Number of successful refinements:     124
Number of failed refinements:         0
Max. size of reached set before ref.: 29443
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 20055.38
Avg. size of reached set after ref.:  6.60

Total time for CEGAR algorithm:     891.184s
Time for refinements:                42.401s
Average time for refinement:          0.341s
Max time for refinement:              0.623s

Code Coverage
-----------------------------
  Function coverage:      0.136
  Visited lines:          2806
  Total lines:            15286
  Line coverage:          0.184
  Visited conditions:     728
  Total conditions:       5222
  Condition coverage:     0.139

CPAchecker general statistics
-----------------------------
Number of program locations:     22017
Number of CFA edges:             25718
Number of relevant variables:    3183
Number of functions:             611
Number of loops:                 105
Size of reached set:             5840
  Number of reached locations:   1473 (7%)
    Avg states per location:     3
    Max states per location:     115 (at node N115)
  Number of reached functions:   83 (14%)
  Number of partitions:          5833
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N19722 (before line 29150), Function main called from node N19659, stack depth 1 [f777d41], stack [main]])
  Number of target states:       0
  Size of final wait list        438

Time for analysis setup:          9.152s
  Time for loading CPAs:          0.886s
  Time for loading parser:        0.524s
  Time for CFA construction:      7.657s
    Time for parsing file(s):     1.142s
    Time for AST to CFA:          2.641s
    Time for CFA sanity check:    1.019s
    Time for post-processing:     2.772s
      Time for var class.:        1.080s
Time for Analysis:              891.184s
CPU time for analysis:          891.110s
Total time for CPAchecker:      900.339s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.224s

Time for Garbage Collector:      20.069s (in 546 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                499MB (   476 MiB) max;    279MB (   266 MiB) avg;    550MB (   524 MiB) peak
Used non-heap memory:             49MB (    47 MiB) max;     40MB (    38 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           657MB (   627 MiB) max;    431MB (   411 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8129MB (  7752 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
