scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--wireless--ipw2x00--ipw2200.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ry4d2b_d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6433: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6436: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6439: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6703: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6706: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6709: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13366: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13384: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13484: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13502: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13520: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13579: Dead code detected: __ms___3 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30293: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7136: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7168: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6992-6993: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7057: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7025: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19467: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ipw_prom_netdev_ops_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_prom_netdev_ops_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_netdev_ops_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_netdev_ops_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1749064 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1740891 (100%)
  Because of loop head:            8080 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         93 (0%)
  Times precision was empty:       409266 (23%)
  Times precision was {false}:     6736 (0%)
  Times result was cached:         1319674 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13388 (1%)
  Times result was 'false':        84768 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1163472
  BDD entailment checks:           383506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       176
Number of predicates discovered:          17
Number of abstraction locations:          115
Max number of predicates per location:    16
Avg number of predicates per location:    3
Total predicates per abstraction:         4644920
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 230.81
Number of irrelevant predicates:          2151192 (46%)
Number of preds handled by boolean abs:   39512 (1%)
  Total number of models for allsat:      83368
  Max number of models for allsat:        1024
  Avg number of models for allsat:        6.23

Time for post operator:                232.523s
  Time for path formula creation:      230.027s
Time for strengthen operator:            5.972s
Time for prec operator:                232.045s
  Time for abstraction:                213.378s (Max:     0.954s, Count: 1749064)
    Boolean abstraction:                66.192s
    Solving time:                       21.726s (Max:     0.032s)
    Model enumeration time:             46.287s
    Time for BDD construction:           1.060s (Max:     0.025s)
Time for merge operator:                14.926s
Time for coverage check:                 0.538s
  Time for BDD entailment checks:        0.379s
Total time for SMT solver (w/o itp):    68.013s

Number of path formula cache hits:   1732814 (19%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   200.407s

Total number of created targets for pointer analysis: 359184
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *unsigned_char is 15871
   Number of created targets for uf: *char is 9
   Number of created targets for uf: *unsigned_int is 1611


Number of BDD nodes:                               23425
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       26329 (count: 926647, min: 0, max: 1255, avg: 0.03)
Time for BDD node cleanup:                             0.149s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.618s
  Time for transition matches:                         6.137s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      8328300 (count: 8328300, min: 1, max: 1, avg: 1.00) [1 x 8328300]

CPA algorithm statistics
------------------------
Number of iterations:            6145396
Max size of waitlist:            1032
Average size of waitlist:        656
Number of computed successors:   6825430
Max successors for one state:    2
Number of times merged:          389983
Number of times stopped:         544243
Number of times breaked:         93

Total time for CPA algorithm:       843.640s (Max:    16.505s)
  Time for choose from waitlist:      2.585s
  Time for precision adjustment:    262.987s
  Time for transfer relation:       522.027s
  Time for merge operator:           19.814s
  Time for stop operator:             6.109s
  Time for adding to reached set:    10.461s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   93
Avg. length of target path (in blocks):               10669 (count: 93, min: 8, max: 216, avg: 114.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.974s
  Counterexample analysis:                            32.612s (Max:     0.577s, Calls: 93)
    Refinement sat check:                             28.023s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.025s
  ARG update:                                         12.194s

Length of refined path (in blocks):                    5418 (count: 93, min: 4, max: 166, avg: 58.26)
Number of affected states:                             4385 (count: 93, min: 1, max: 155, avg: 47.15)
Length (states) of path with itp 'true':                940 (count: 93, min: 1, max: 40, avg: 10.11)
Length (states) of path with itp non-trivial itp:      4385 (count: 93, min: 1, max: 155, avg: 47.15)
Length (states) of path with itp 'false':                93 (count: 93, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 93, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4292 (count: 93, min: 0, max: 154, avg: 46.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                93
Number of successful refinements:     93
Number of failed refinements:         0
Max. size of reached set before ref.: 99499
Max. size of reached set after ref.:  6465
Avg. size of reached set before ref.: 68288.92
Avg. size of reached set after ref.:  1862.17

Total time for CEGAR algorithm:     891.489s
Time for refinements:                47.748s
Average time for refinement:          0.513s
Max time for refinement:              0.918s

Code Coverage
-----------------------------
  Function coverage:      0.131
  Visited lines:          2258
  Total lines:            15286
  Line coverage:          0.148
  Visited conditions:     590
  Total conditions:       5222
  Condition coverage:     0.113

CPAchecker general statistics
-----------------------------
Number of program locations:     22017
Number of CFA edges:             25718
Number of relevant variables:    3183
Number of functions:             611
Number of loops:                 105
Size of reached set:             18732
  Number of reached locations:   1250 (6%)
    Avg states per location:     14
    Max states per location:     252 (at node N190)
  Number of reached functions:   80 (13%)
  Number of partitions:          18455
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N19722 (before line 29150), Function main called from node N19659, stack depth 1 [f777d41], stack [main]])
  Number of target states:       0
  Size of final wait list        597

Time for analysis setup:          8.850s
  Time for loading CPAs:          0.874s
  Time for loading parser:        0.462s
  Time for CFA construction:      7.398s
    Time for parsing file(s):     1.141s
    Time for AST to CFA:          2.509s
    Time for CFA sanity check:    0.944s
    Time for post-processing:     2.696s
      Time for var class.:        1.009s
Time for Analysis:              891.489s
CPU time for analysis:          891.460s
Total time for CPAchecker:      900.342s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.378s

Time for Garbage Collector:      83.200s (in 474 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2960MB (  2823 MiB) max;   1354MB (  1291 MiB) avg;   3060MB (  2919 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     39MB (    38 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:          3919MB (  3737 MiB) max;   2022MB (  1928 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8694MB (  8292 MiB) max;   8254MB (  7872 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
