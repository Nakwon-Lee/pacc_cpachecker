scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--wireless--ipw2x00--ipw2200.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rjivh0ss/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6433: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6436: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6439: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6703: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6706: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6709: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6892;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 13366: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13384: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13484: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13502: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13520: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13539: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13579: Dead code detected: __ms___3 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 30293: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7136: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7168: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6992-6993: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7057: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7025: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 19467: Function pointer *(crypt->ops->set_flags) with type unsigned long int (*)(unsigned long, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ipw_prom_netdev_ops_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_prom_netdev_ops_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_netdev_ops_ndo_uninit_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ipw_netdev_ops_ndo_init_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function libipw_xmit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_libipw to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1785889 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1777512 (100%)
  Because of loop head:            8282 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         95 (0%)
  Times precision was empty:       411417 (23%)
  Times precision was {false}:     6753 (0%)
  Times result was cached:         1353853 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13866 (1%)
  Times result was 'false':        88389 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1191461
  BDD entailment checks:           391911
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       176
Number of predicates discovered:          17
Number of abstraction locations:          116
Max number of predicates per location:    16
Avg number of predicates per location:    3
Total predicates per abstraction:         4789445
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 232.28
Number of irrelevant predicates:          2199523 (46%)
Number of preds handled by boolean abs:   40942 (1%)
  Total number of models for allsat:      84325
  Max number of models for allsat:        1024
  Avg number of models for allsat:        6.08

Time for post operator:                242.888s
  Time for path formula creation:      240.192s
Time for strengthen operator:            5.842s
Time for prec operator:                248.732s
  Time for abstraction:                228.418s (Max:     6.479s, Count: 1785889)
    Boolean abstraction:                67.469s
    Solving time:                       22.355s (Max:     0.027s)
    Model enumeration time:             46.789s
    Time for BDD construction:           1.170s (Max:     0.083s)
Time for merge operator:                14.125s
Time for coverage check:                 0.479s
  Time for BDD entailment checks:        0.350s
Total time for SMT solver (w/o itp):    69.144s

Number of path formula cache hits:   1764927 (19%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   211.542s

Total number of created targets for pointer analysis: 369869
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *unsigned_char is 16285
   Number of created targets for uf: *char is 9
   Number of created targets for uf: *unsigned_int is 1653


Number of BDD nodes:                               23425
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27128 (count: 941388, min: 0, max: 1060, avg: 0.03)
Time for BDD node cleanup:                             0.154s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.247s
  Time for transition matches:                         4.870s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      8516328 (count: 8516328, min: 1, max: 1, avg: 1.00) [1 x 8516328]

CPA algorithm statistics
------------------------
Number of iterations:            6282520
Max size of waitlist:            1032
Average size of waitlist:        656
Number of computed successors:   6979596
Max successors for one state:    2
Number of times merged:          399775
Number of times stopped:         556414
Number of times breaked:         95

Total time for CPA algorithm:       845.046s (Max:    17.271s)
  Time for choose from waitlist:      2.470s
  Time for precision adjustment:    281.408s
  Time for transfer relation:       513.665s
  Time for merge operator:           18.671s
  Time for stop operator:             6.231s
  Time for adding to reached set:     9.153s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   95
Avg. length of target path (in blocks):               10903 (count: 95, min: 8, max: 216, avg: 114.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.645s
  Counterexample analysis:                            32.213s (Max:     0.450s, Calls: 95)
    Refinement sat check:                             27.597s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.033s
  ARG update:                                         12.267s

Length of refined path (in blocks):                    5536 (count: 95, min: 4, max: 166, avg: 58.27)
Number of affected states:                             4478 (count: 95, min: 1, max: 155, avg: 47.14)
Length (states) of path with itp 'true':                963 (count: 95, min: 1, max: 40, avg: 10.14)
Length (states) of path with itp non-trivial itp:      4478 (count: 95, min: 1, max: 155, avg: 47.14)
Length (states) of path with itp 'false':                95 (count: 95, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 95, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4383 (count: 95, min: 0, max: 154, avg: 46.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                95
Number of successful refinements:     95
Number of failed refinements:         0
Max. size of reached set before ref.: 99499
Max. size of reached set after ref.:  6465
Avg. size of reached set before ref.: 68420.85
Avg. size of reached set after ref.:  1888.75

Total time for CEGAR algorithm:     892.700s
Time for refinements:                47.551s
Average time for refinement:          0.500s
Max time for refinement:              0.876s

Code Coverage
-----------------------------
  Function coverage:      0.131
  Visited lines:          2249
  Total lines:            15286
  Line coverage:          0.147
  Visited conditions:     586
  Total conditions:       5222
  Condition coverage:     0.112

CPAchecker general statistics
-----------------------------
Number of program locations:     22017
Number of CFA edges:             25718
Number of relevant variables:    3183
Number of functions:             611
Number of loops:                 105
Size of reached set:             14244
  Number of reached locations:   1234 (6%)
    Avg states per location:     11
    Max states per location:     143 (at node N190)
  Number of reached functions:   80 (13%)
  Number of partitions:          14091
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N19722 (before line 29150), Function main called from node N19659, stack depth 1 [f777d41], stack [main]])
  Number of target states:       0
  Size of final wait list        594

Time for analysis setup:          7.628s
  Time for loading CPAs:          0.957s
  Time for loading parser:        0.500s
  Time for CFA construction:      6.031s
    Time for parsing file(s):     0.985s
    Time for AST to CFA:          2.158s
    Time for CFA sanity check:    0.593s
    Time for post-processing:     2.069s
      Time for var class.:        1.021s
Time for Analysis:              892.700s
CPU time for analysis:          892.670s
Total time for CPAchecker:      900.331s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.279s

Time for Garbage Collector:      87.241s (in 474 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3037MB (  2896 MiB) max;   1381MB (  1317 MiB) avg;   3118MB (  2974 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     39MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          4101MB (  3911 MiB) max;   2050MB (  1955 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    45 MiB) avg
Total process virtual memory:   8694MB (  8292 MiB) max;   8270MB (  7887 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
