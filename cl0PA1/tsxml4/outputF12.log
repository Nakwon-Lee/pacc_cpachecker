scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--pci--bt8xx--dst.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e8he5jpx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6345: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6443: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt878_device_control to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            614105 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  549938 (90%)
  Because of loop head:            58975 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5192 (1%)
  Times precision was empty:       84611 (14%)
  Times precision was {false}:     749 (0%)
  Times result was cached:         528020 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      725 (0%)
  Times result was 'false':        11927 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         8844607
  BDD entailment checks:           101587
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          3
Number of abstraction locations:          121
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         551154
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 373.92
Number of irrelevant predicates:          112674 (20%)
Number of preds handled by boolean abs:   773 (0%)
  Total number of models for allsat:      730
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 31.811s
  Time for path formula creation:       27.601s
Time for strengthen operator:            9.377s
Time for prec operator:                 59.190s
  Time for abstraction:                 48.251s (Max:     0.595s, Count: 614105)
    Boolean abstraction:                 1.527s
    Solving time:                        2.948s (Max:     0.050s)
    Model enumeration time:              0.102s
    Time for BDD construction:           0.041s (Max:     0.008s)
Time for merge operator:                 9.841s
Time for coverage check:                 0.826s
  Time for BDD entailment checks:        0.087s
Total time for SMT solver (w/o itp):     3.050s

Number of path formula cache hits:   22086469 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.910s

Total number of created targets for pointer analysis: 25635
   Number of created targets for uf: *unsigned_char is 47
   Number of created targets for uf: *unsigned_int is 3121
   Number of created targets for uf: *unsigned_long_int is 81


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1462 (count: 194302, min: 0, max: 47, avg: 0.01)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.892s
  Time for transition matches:                         6.779s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                     17422129 (count: 17422129, min: 1, max: 1, avg: 1.00) [1 x 17422129]

CPA algorithm statistics
------------------------
Number of iterations:            11930884
Max size of waitlist:            65
Average size of waitlist:        53
Number of computed successors:   16419209
Max successors for one state:    2
Number of times merged:          4371510
Number of times stopped:         4462330
Number of times breaked:         5192

Total time for CPA algorithm:       281.225s (Max:     1.011s)
  Time for choose from waitlist:      2.752s
  Time for precision adjustment:    104.137s
  Time for transfer relation:       108.771s
  Time for merge operator:           30.086s
  Time for stop operator:             8.939s
  Time for adding to reached set:     8.825s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5192
Avg. length of target path (in blocks):              261664 (count: 5192, min: 10, max: 86, avg: 50.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 241.526s
  Counterexample analysis:                           221.556s (Max:     0.123s, Calls: 5192)
    Refinement sat check:                            176.117s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.127s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.619s
  Precision update:                                    0.690s
  ARG update:                                         16.271s

Length of refined path (in blocks):                  256472 (count: 5192, min: 9, max: 85, avg: 49.40)
Number of affected states:                           140762 (count: 5192, min: 7, max: 57, avg: 27.11)
Length (states) of path with itp 'true':             110518 (count: 5192, min: 1, max: 77, avg: 21.29)
Length (states) of path with itp non-trivial itp:    140762 (count: 5192, min: 7, max: 57, avg: 27.11)
Length (states) of path with itp 'false':              5192 (count: 5192, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5192, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          135570 (count: 5192, min: 6, max: 56, avg: 26.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5192
Number of successful refinements:     5192
Number of failed refinements:         0
Max. size of reached set before ref.: 161067
Max. size of reached set after ref.:  157214
Avg. size of reached set before ref.: 52384.16
Avg. size of reached set after ref.:  50113.05

Total time for CEGAR algorithm:     896.329s
Time for refinements:               438.419s
Average time for refinement:          0.084s
Max time for refinement:              0.733s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          2148
  Total lines:            3269
  Line coverage:          0.657
  Visited conditions:     1384
  Total conditions:       2328
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     4977
Number of CFA edges:             6246
Number of relevant variables:    374
Number of functions:             100
Number of loops:                 11
Size of reached set:             153343
  Number of reached locations:   2052 (41%)
    Avg states per location:     74
    Max states per location:     987 (at node N7)
  Number of reached functions:   51 (51%)
  Number of partitions:          153343
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          4.109s
  Time for loading CPAs:          0.792s
  Time for loading parser:        0.427s
  Time for CFA construction:      2.769s
    Time for parsing file(s):     0.694s
    Time for AST to CFA:          0.948s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.720s
      Time for var class.:        0.383s
Time for Analysis:              896.329s
CPU time for analysis:          896.260s
Total time for CPAchecker:      900.441s
Total CPU time for CPAchecker:  900.370s
Time for statistics:              1.194s

Time for Garbage Collector:      32.680s (in 3036 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                396MB (   378 MiB) max;    206MB (   197 MiB) avg;    406MB (   387 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           418MB (   399 MiB) max;    298MB (   284 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8128MB (  7751 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
