scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--pci--bt8xx--dst.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bbrs33rh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6345: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6443: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt878_device_control to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1046535 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  880353 (84%)
  Because of loop head:            162029 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4153 (0%)
  Times precision was empty:       109457 (10%)
  Times precision was {false}:     1014 (0%)
  Times result was cached:         931057 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5007 (0%)
  Times result was 'false':        32520 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         8630279
  BDD entailment checks:           253201
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          6
Number of abstraction locations:          186
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         3592166
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 596.61
Number of irrelevant predicates:          436116 (12%)
Number of preds handled by boolean abs:   12028 (0%)
  Total number of models for allsat:      5008
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 41.192s
  Time for path formula creation:       36.004s
Time for strengthen operator:           10.182s
Time for prec operator:                193.060s
  Time for abstraction:                179.195s (Max:     0.370s, Count: 1046535)
    Boolean abstraction:                20.671s
    Solving time:                       22.903s (Max:     0.140s)
    Model enumeration time:              1.099s
    Time for BDD construction:           0.150s (Max:     0.012s)
Time for merge operator:                10.643s
Time for coverage check:                 0.837s
  Time for BDD entailment checks:        0.184s
Total time for SMT solver (w/o itp):    24.002s

Number of path formula cache hits:   24217858 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.118s

Total number of created targets for pointer analysis: 103846
   Number of created targets for uf: *unsigned_char is 47
   Number of created targets for uf: *unsigned_int is 4811
   Number of created targets for uf: *unsigned_long_int is 19


Number of BDD nodes:                               263
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10165 (count: 397858, min: 0, max: 176, avg: 0.03)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.928s
  Time for transition matches:                         8.138s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                     19326199 (count: 19326199, min: 1, max: 1, avg: 1.00) [1 x 19326199]

CPA algorithm statistics
------------------------
Number of iterations:            12907997
Max size of waitlist:            433
Average size of waitlist:        177
Number of computed successors:   17420521
Max successors for one state:    2
Number of times merged:          4188539
Number of times stopped:         4396358
Number of times breaked:         4153

Total time for CPA algorithm:       459.365s (Max:     1.930s)
  Time for choose from waitlist:      3.415s
  Time for precision adjustment:    248.945s
  Time for transfer relation:       133.261s
  Time for merge operator:           30.543s
  Time for stop operator:            10.685s
  Time for adding to reached set:    11.446s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4153
Avg. length of target path (in blocks):              190389 (count: 4153, min: 6, max: 62, avg: 45.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 192.745s
  Counterexample analysis:                           168.060s (Max:     0.129s, Calls: 4153)
    Refinement sat check:                            133.298s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.096s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.658s
  Precision update:                                    1.843s
  ARG update:                                         20.429s

Length of refined path (in blocks):                  186236 (count: 4153, min: 5, max: 61, avg: 44.84)
Number of affected states:                           129736 (count: 4153, min: 3, max: 59, avg: 31.24)
Length (states) of path with itp 'true':              52347 (count: 4153, min: 1, max: 43, avg: 12.60)
Length (states) of path with itp non-trivial itp:    129736 (count: 4153, min: 3, max: 59, avg: 31.24)
Length (states) of path with itp 'false':              4153 (count: 4153, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4153, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          125583 (count: 4153, min: 2, max: 58, avg: 30.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4153
Number of successful refinements:     4153
Number of failed refinements:         0
Max. size of reached set before ref.: 327373
Max. size of reached set after ref.:  322623
Avg. size of reached set before ref.: 38973.45
Avg. size of reached set after ref.:  35922.88

Total time for CEGAR algorithm:     895.939s
Time for refinements:               327.202s
Average time for refinement:          0.078s
Max time for refinement:              0.776s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          2257
  Total lines:            3269
  Line coverage:          0.690
  Visited conditions:     1416
  Total conditions:       2328
  Condition coverage:     0.608

CPAchecker general statistics
-----------------------------
Number of program locations:     4977
Number of CFA edges:             6246
Number of relevant variables:    374
Number of functions:             100
Number of loops:                 11
Size of reached set:             322623
  Number of reached locations:   2148 (43%)
    Avg states per location:     150
    Max states per location:     2081 (at node N8)
  Number of reached functions:   51 (51%)
  Number of partitions:          322623
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.663s
  Time for loading CPAs:          0.796s
  Time for loading parser:        0.535s
  Time for CFA construction:      3.223s
    Time for parsing file(s):     0.829s
    Time for AST to CFA:          1.079s
    Time for CFA sanity check:    0.346s
    Time for post-processing:     0.857s
      Time for var class.:        0.449s
Time for Analysis:              895.939s
CPU time for analysis:          895.860s
Total time for CPAchecker:      900.606s
Total CPU time for CPAchecker:  900.510s
Time for statistics:              2.278s

Time for Garbage Collector:      60.760s (in 5028 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                517MB (   493 MiB) max;    138MB (   132 MiB) avg;    550MB (   525 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:           736MB (   702 MiB) max;    206MB (   196 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8221MB (  7841 MiB) max;   8162MB (  7784 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
