scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--pci--bt8xx--dst.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gxw4vcm7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6345: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6443: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt878_device_control to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16506 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14640 (89%)
  Because of loop head:            1753 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         113 (1%)
  Times precision was empty:       2966 (18%)
  Times precision was {false}:     254 (2%)
  Times result was cached:         13016 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      270 (2%)
  Times result was 'false':        440 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         192630
  BDD entailment checks:           2400
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          3
Number of abstraction locations:          53
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         13540
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 25.84
Number of irrelevant predicates:          1597 (12%)
Number of preds handled by boolean abs:   270 (2%)
  Total number of models for allsat:      270
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.882s
  Time for path formula creation:        3.681s
Time for strengthen operator:            0.375s
Time for prec operator:                  5.276s
  Time for abstraction:                  4.796s (Max:     0.123s, Count: 16506)
    Boolean abstraction:                 0.848s
    Solving time:                        1.919s (Max:     0.118s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.018s (Max:     0.001s)
Time for merge operator:                 0.827s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.948s

Number of path formula cache hits:   450398 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.020s

Total number of created targets for pointer analysis: 13419
   Number of created targets for uf: *unsigned_char is 156
   Number of created targets for uf: *unsigned_int is 1626


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         542 (count: 8263, min: 0, max: 54, avg: 0.07)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.647s
  Time for transition matches:                         0.326s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       393774 (count: 393774, min: 1, max: 1, avg: 1.00) [1 x 393774]

CPA algorithm statistics
------------------------
Number of iterations:            269055
Max size of waitlist:            108
Average size of waitlist:        85
Number of computed successors:   368075
Max successors for one state:    2
Number of times merged:          95115
Number of times stopped:         97319
Number of times breaked:         113

Total time for CPA algorithm:        18.209s (Max:     1.163s)
  Time for choose from waitlist:      0.144s
  Time for precision adjustment:      7.067s
  Time for transfer relation:         7.536s
  Time for merge operator:            1.667s
  Time for stop operator:             0.481s
  Time for adding to reached set:     0.346s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   113
Avg. length of target path (in blocks):                5496 (count: 113, min: 11, max: 76, avg: 48.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.135s
  Counterexample analysis:                             6.251s (Max:     0.176s, Calls: 113)
    Refinement sat check:                              5.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.043s
  Precision update:                                    0.072s
  ARG update:                                          0.605s

Length of refined path (in blocks):                    5314 (count: 112, min: 10, max: 75, avg: 47.45)
Number of affected states:                             3807 (count: 112, min: 8, max: 56, avg: 33.99)
Length (states) of path with itp 'true':               1395 (count: 112, min: 1, max: 30, avg: 12.46)
Length (states) of path with itp non-trivial itp:      3807 (count: 112, min: 8, max: 56, avg: 33.99)
Length (states) of path with itp 'false':               112 (count: 112, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 112, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3695 (count: 112, min: 7, max: 55, avg: 32.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                113
Number of successful refinements:     112
Number of failed refinements:         0
Max. size of reached set before ref.: 5623
Max. size of reached set after ref.:  1086
Avg. size of reached set before ref.: 3030.88
Avg. size of reached set after ref.:  644.39

Total time for CEGAR algorithm:      25.927s
Time for refinements:                 7.648s
Average time for refinement:          0.067s
Max time for refinement:              0.182s

Code Coverage
-----------------------------
  Function coverage:      0.410
  Visited lines:          1453
  Total lines:            3269
  Line coverage:          0.444
  Visited conditions:     686
  Total conditions:       2328
  Condition coverage:     0.295

CPAchecker general statistics
-----------------------------
Number of program locations:     4977
Number of CFA edges:             6246
Number of relevant variables:    374
Number of functions:             100
Number of loops:                 11
Size of reached set:             2640
  Number of reached locations:   1039 (21%)
    Avg states per location:     2
    Max states per location:     12 (at node N3874)
  Number of reached functions:   41 (41%)
  Number of partitions:          2635
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4493 (before line 8010), Function main called from node N4239, stack depth 1 [3cdff901], stack [main]])
  Number of target states:       1
  Size of final wait list        102

Time for analysis setup:          4.353s
  Time for loading CPAs:          0.815s
  Time for loading parser:        0.541s
  Time for CFA construction:      2.885s
    Time for parsing file(s):     0.775s
    Time for AST to CFA:          0.933s
    Time for CFA sanity check:    0.289s
    Time for post-processing:     0.723s
      Time for var class.:        0.371s
Time for Analysis:               25.927s
CPU time for analysis:           25.930s
Total time for CPAchecker:       30.284s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.135s

Time for Garbage Collector:       0.912s (in 119 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     53MB (    51 MiB) avg;     87MB (    82 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
