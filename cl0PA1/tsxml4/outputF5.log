scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--pci--bt8xx--dst.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2gu_l63k/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6345: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6443: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt878_device_control to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            951209 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  857384 (90%)
  Because of loop head:            88577 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5248 (1%)
  Times precision was empty:       151909 (16%)
  Times precision was {false}:     1316 (0%)
  Times result was cached:         794160 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3824 (0%)
  Times result was 'false':        39652 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         11041449
  BDD entailment checks:           137039
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          6
Number of abstraction locations:          147
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1832918
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 356.60
Number of irrelevant predicates:          1135607 (62%)
Number of preds handled by boolean abs:   6497 (0%)
  Total number of models for allsat:      3826
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 48.182s
  Time for path formula creation:       43.143s
Time for strengthen operator:           12.598s
Time for prec operator:                146.239s
  Time for abstraction:                131.564s (Max:     0.849s, Count: 951209)
    Boolean abstraction:                14.385s
    Solving time:                       17.646s (Max:     0.133s)
    Model enumeration time:              0.804s
    Time for BDD construction:           0.094s (Max:     0.009s)
Time for merge operator:                13.683s
Time for coverage check:                 0.955s
  Time for BDD entailment checks:        0.164s
Total time for SMT solver (w/o itp):    18.450s

Number of path formula cache hits:   29307499 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    12.228s

Total number of created targets for pointer analysis: 195082
   Number of created targets for uf: *unsigned_char is 1603
   Number of created targets for uf: *unsigned_int is 1821
   Number of created targets for uf: *unsigned_long_int is 169


Number of BDD nodes:                               247
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7779 (count: 318553, min: 0, max: 241, avg: 0.02)
Time for BDD node cleanup:                             0.059s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.535s
  Time for transition matches:                         8.799s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                     23373113 (count: 23373113, min: 1, max: 1, avg: 1.00) [1 x 23373113]

CPA algorithm statistics
------------------------
Number of iterations:            15675239
Max size of waitlist:            307
Average size of waitlist:        138
Number of computed successors:   21361292
Max successors for one state:    2
Number of times merged:          5452205
Number of times stopped:         5561765
Number of times breaked:         5248

Total time for CPA algorithm:       449.595s (Max:     2.223s)
  Time for choose from waitlist:      3.942s
  Time for precision adjustment:    206.297s
  Time for transfer relation:       153.116s
  Time for merge operator:           38.258s
  Time for stop operator:            12.789s
  Time for adding to reached set:    12.498s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5248
Avg. length of target path (in blocks):              284334 (count: 5248, min: 6, max: 70, avg: 54.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 286.105s
  Counterexample analysis:                           256.498s (Max:     0.151s, Calls: 5248)
    Refinement sat check:                            201.484s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.159s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.546s
  Precision update:                                    1.680s
  ARG update:                                         24.957s

Length of refined path (in blocks):                  279039 (count: 5247, min: 5, max: 69, avg: 53.18)
Number of affected states:                           106961 (count: 5247, min: 3, max: 67, avg: 20.39)
Length (states) of path with itp 'true':             166831 (count: 5247, min: 1, max: 51, avg: 31.80)
Length (states) of path with itp non-trivial itp:    106961 (count: 5247, min: 3, max: 67, avg: 20.39)
Length (states) of path with itp 'false':              5247 (count: 5247, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5247, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          101714 (count: 5247, min: 2, max: 66, avg: 19.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5248
Number of successful refinements:     5247
Number of failed refinements:         0
Max. size of reached set before ref.: 145883
Max. size of reached set after ref.:  133953
Avg. size of reached set before ref.: 21416.32
Avg. size of reached set after ref.:  18416.80

Total time for CEGAR algorithm:     896.388s
Time for refinements:               380.309s
Average time for refinement:          0.072s
Max time for refinement:              0.844s

Code Coverage
-----------------------------
  Function coverage:      0.480
  Visited lines:          2073
  Total lines:            3269
  Line coverage:          0.634
  Visited conditions:     1204
  Total conditions:       2328
  Condition coverage:     0.517

CPAchecker general statistics
-----------------------------
Number of program locations:     4977
Number of CFA edges:             6246
Number of relevant variables:    374
Number of functions:             100
Number of loops:                 11
Size of reached set:             12388
  Number of reached locations:   1844 (37%)
    Avg states per location:     6
    Max states per location:     108 (at node N4719)
  Number of reached functions:   48 (48%)
  Number of partitions:          12388
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        125

Time for analysis setup:          4.000s
  Time for loading CPAs:          0.722s
  Time for loading parser:        0.467s
  Time for CFA construction:      2.697s
    Time for parsing file(s):     0.707s
    Time for AST to CFA:          0.865s
    Time for CFA sanity check:    0.300s
    Time for post-processing:     0.731s
      Time for var class.:        0.370s
Time for Analysis:              896.388s
CPU time for analysis:          896.290s
Total time for CPAchecker:      900.391s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.266s

Time for Garbage Collector:      44.107s (in 3123 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                508MB (   484 MiB) max;    245MB (   234 MiB) avg;    521MB (   497 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           522MB (   498 MiB) max;    384MB (   366 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8179MB (  7800 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
