scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--pci--bt8xx--dst.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c9w7h3x0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6345: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6443: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt878_device_control to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            573111 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  514251 (90%)
  Because of loop head:            53678 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5182 (1%)
  Times precision was empty:       80025 (14%)
  Times precision was {false}:     749 (0%)
  Times result was cached:         491612 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      725 (0%)
  Times result was 'false':        11446 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         8220012
  BDD entailment checks:           91856
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          3
Number of abstraction locations:          121
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         512714
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 347.84
Number of irrelevant predicates:          105926 (21%)
Number of preds handled by boolean abs:   773 (0%)
  Total number of models for allsat:      730
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 32.235s
  Time for path formula creation:       28.549s
Time for strengthen operator:            8.296s
Time for prec operator:                 57.421s
  Time for abstraction:                 47.084s (Max:     0.052s, Count: 573111)
    Boolean abstraction:                 1.537s
    Solving time:                        2.880s (Max:     0.046s)
    Model enumeration time:              0.078s
    Time for BDD construction:           0.044s (Max:     0.008s)
Time for merge operator:                11.064s
Time for coverage check:                 0.690s
  Time for BDD entailment checks:        0.111s
Total time for SMT solver (w/o itp):     2.958s

Number of path formula cache hits:   20519677 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.709s

Total number of created targets for pointer analysis: 25700
   Number of created targets for uf: *unsigned_char is 47
   Number of created targets for uf: *unsigned_int is 66
   Number of created targets for uf: *unsigned_long_int is 81


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1462 (count: 179985, min: 0, max: 47, avg: 0.01)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.788s
  Time for transition matches:                         6.170s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                     16203319 (count: 16203319, min: 1, max: 1, avg: 1.00) [1 x 16203319]

CPA algorithm statistics
------------------------
Number of iterations:            11099393
Max size of waitlist:            65
Average size of waitlist:        52
Number of computed successors:   15272364
Max successors for one state:    2
Number of times merged:          4064078
Number of times stopped:         4145899
Number of times breaked:         5182

Total time for CPA algorithm:       273.196s (Max:     0.958s)
  Time for choose from waitlist:      2.675s
  Time for precision adjustment:    101.168s
  Time for transfer relation:       104.070s
  Time for merge operator:           30.856s
  Time for stop operator:             8.704s
  Time for adding to reached set:     8.782s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5182
Avg. length of target path (in blocks):              266090 (count: 5182, min: 10, max: 86, avg: 51.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 244.367s
  Counterexample analysis:                           224.634s (Max:     0.216s, Calls: 5182)
    Refinement sat check:                            178.288s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.145s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.695s
  Precision update:                                    0.692s
  ARG update:                                         15.974s

Length of refined path (in blocks):                  260908 (count: 5182, min: 9, max: 85, avg: 50.35)
Number of affected states:                           136524 (count: 5182, min: 7, max: 57, avg: 26.35)
Length (states) of path with itp 'true':             119202 (count: 5182, min: 1, max: 77, avg: 23.00)
Length (states) of path with itp non-trivial itp:    136524 (count: 5182, min: 7, max: 57, avg: 26.35)
Length (states) of path with itp 'false':              5182 (count: 5182, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5182, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          131342 (count: 5182, min: 6, max: 56, avg: 25.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5182
Number of successful refinements:     5182
Number of failed refinements:         0
Max. size of reached set before ref.: 161067
Max. size of reached set after ref.:  157214
Avg. size of reached set before ref.: 48759.16
Avg. size of reached set after ref.:  46636.29

Total time for CEGAR algorithm:     895.826s
Time for refinements:               445.334s
Average time for refinement:          0.085s
Max time for refinement:              0.380s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          2148
  Total lines:            3269
  Line coverage:          0.657
  Visited conditions:     1384
  Total conditions:       2328
  Condition coverage:     0.595

CPAchecker general statistics
-----------------------------
Number of program locations:     4977
Number of CFA edges:             6246
Number of relevant variables:    374
Number of functions:             100
Number of loops:                 11
Size of reached set:             114310
  Number of reached locations:   2048 (41%)
    Avg states per location:     55
    Max states per location:     734 (at node N7)
  Number of reached functions:   51 (51%)
  Number of partitions:          114310
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        49

Time for analysis setup:          4.551s
  Time for loading CPAs:          0.730s
  Time for loading parser:        0.581s
  Time for CFA construction:      3.136s
    Time for parsing file(s):     0.965s
    Time for AST to CFA:          0.954s
    Time for CFA sanity check:    0.321s
    Time for post-processing:     0.770s
      Time for var class.:        0.383s
Time for Analysis:              895.826s
CPU time for analysis:          895.760s
Total time for CPAchecker:      900.381s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.989s

Time for Garbage Collector:      32.416s (in 2885 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                369MB (   352 MiB) max;    200MB (   191 MiB) avg;    388MB (   370 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           418MB (   399 MiB) max;    293MB (   279 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8128MB (  7752 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
