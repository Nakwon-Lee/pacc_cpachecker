scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--pci--bt8xx--dst.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bxm_6czc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6345: Dead code detected: __ms = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6443: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8083: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __symbol_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bt878_device_control to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            773775 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  696924 (90%)
  Because of loop head:            74903 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1948 (0%)
  Times precision was empty:       159576 (21%)
  Times precision was {false}:     1328 (0%)
  Times result was cached:         608096 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4775 (1%)
  Times result was 'false':        38874 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         7801019
  BDD entailment checks:           123983
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       48
Number of predicates discovered:          6
Number of abstraction locations:          151
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         1432689
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 234.75
Number of irrelevant predicates:          748182 (52%)
Number of preds handled by boolean abs:   8229 (1%)
  Total number of models for allsat:      4777
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 43.097s
  Time for path formula creation:       37.583s
Time for strengthen operator:           10.950s
Time for prec operator:                141.893s
  Time for abstraction:                130.052s (Max:     0.916s, Count: 773775)
    Boolean abstraction:                16.710s
    Solving time:                       19.822s (Max:     0.123s)
    Model enumeration time:              0.890s
    Time for BDD construction:           0.110s (Max:     0.009s)
Time for merge operator:                 9.997s
Time for coverage check:                 0.705s
  Time for BDD entailment checks:        0.149s
Total time for SMT solver (w/o itp):    20.712s

Number of path formula cache hits:   21488606 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.940s

Total number of created targets for pointer analysis: 217791
   Number of created targets for uf: *unsigned_char is 3532
   Number of created targets for uf: *unsigned_int is 2016
   Number of created targets for uf: *unsigned_long_int is 27


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9681 (count: 318930, min: 0, max: 198, avg: 0.03)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.034s
  Time for transition matches:                         7.272s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                     17422915 (count: 17422915, min: 1, max: 1, avg: 1.00) [1 x 17422915]

CPA algorithm statistics
------------------------
Number of iterations:            11488984
Max size of waitlist:            516
Average size of waitlist:        219
Number of computed successors:   15541292
Max successors for one state:    2
Number of times merged:          3838518
Number of times stopped:         3932406
Number of times breaked:         1948

Total time for CPA algorithm:       404.387s (Max:     8.347s)
  Time for choose from waitlist:      3.200s
  Time for precision adjustment:    200.195s
  Time for transfer relation:       133.293s
  Time for merge operator:           28.908s
  Time for stop operator:             9.505s
  Time for adding to reached set:    10.707s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1948
Avg. length of target path (in blocks):               92449 (count: 1948, min: 6, max: 61, avg: 47.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 105.055s
  Counterexample analysis:                            82.712s (Max:     0.162s, Calls: 1948)
    Refinement sat check:                             65.826s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.057s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.199s
  Precision update:                                    0.630s
  ARG update:                                         20.518s

Length of refined path (in blocks):                   90501 (count: 1948, min: 5, max: 60, avg: 46.46)
Number of affected states:                            28994 (count: 1948, min: 3, max: 57, avg: 14.88)
Length (states) of path with itp 'true':              59559 (count: 1948, min: 1, max: 51, avg: 30.57)
Length (states) of path with itp non-trivial itp:     28994 (count: 1948, min: 3, max: 57, avg: 14.88)
Length (states) of path with itp 'false':              1948 (count: 1948, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1948, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           27046 (count: 1948, min: 2, max: 56, avg: 13.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1948
Number of successful refinements:     1948
Number of failed refinements:         0
Max. size of reached set before ref.: 259391
Max. size of reached set after ref.:  255176
Avg. size of reached set before ref.: 131599.45
Avg. size of reached set after ref.:  125747.56

Total time for CEGAR algorithm:     895.718s
Time for refinements:               309.290s
Average time for refinement:          0.158s
Max time for refinement:              1.371s

Code Coverage
-----------------------------
  Function coverage:      0.470
  Visited lines:          2088
  Total lines:            3269
  Line coverage:          0.639
  Visited conditions:     1224
  Total conditions:       2328
  Condition coverage:     0.526

CPAchecker general statistics
-----------------------------
Number of program locations:     4977
Number of CFA edges:             6246
Number of relevant variables:    374
Number of functions:             100
Number of loops:                 11
Size of reached set:             170536
  Number of reached locations:   1868 (38%)
    Avg states per location:     91
    Max states per location:     1075 (at node N7)
  Number of reached functions:   47 (47%)
  Number of partitions:          170536
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        238

Time for analysis setup:          4.606s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.547s
  Time for CFA construction:      3.130s
    Time for parsing file(s):     0.852s
    Time for AST to CFA:          1.026s
    Time for CFA sanity check:    0.286s
    Time for post-processing:     0.841s
      Time for var class.:        0.474s
Time for Analysis:              895.718s
CPU time for analysis:          895.640s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              1.500s

Time for Garbage Collector:      78.259s (in 2786 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                706MB (   673 MiB) max;    332MB (   317 MiB) avg;    723MB (   689 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           714MB (   681 MiB) max;    515MB (   491 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8163MB (  7785 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
