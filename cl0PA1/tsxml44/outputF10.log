scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--wireless--rtlwifi--rtl8192de--rtl8192de.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_omph7942/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 6840: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6843: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 6846: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6289;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6289;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6289;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6289;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9654: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9674: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9677: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9680: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 11685: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 13372-13387: Dead code detected: switch (aci) (CFACreationUtils.addEdgeToCFA, INFO)

line 13373: Dead code detected: [!(aci == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 13374: Dead code detected: rtl_write_dword(rtlpriv, 1292U, 42063U); (CFACreationUtils.addEdgeToCFA, INFO)

line 13376: Dead code detected: [aci == 0] (CFACreationUtils.addEdgeToCFA, INFO)

line 13376: Dead code detected: [!(aci == 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 13378: Dead code detected: [!(aci == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 13379: Dead code detected: rtl_write_dword(rtlpriv, 1284U, 6177570U); (CFACreationUtils.addEdgeToCFA, INFO)

line 13381: Dead code detected: [aci == 3] (CFACreationUtils.addEdgeToCFA, INFO)

line 13381: Dead code detected: [!(aci == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

line 13382: Dead code detected: rtl_write_dword(rtlpriv, 1280U, 3093026U); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (aci) {
  case 1:
  rtl_write_dword(rtlpriv, 1292U, 42063U);
  goto ldv_47098;
  case 0: ;
  goto ldv_47098;
  case 2:
  rtl_write_dword(rtlpriv, 1284U, 6177570U);
  goto ldv_47098;
  case 3:
  rtl_write_dword(rtlpriv, 1280U, 3093026U);
  goto ldv_47098;
  default:
  printk("\017rtl8192de:%s(): invalid aci: %d !\n", "rtl92de_set_qos", aci);
  goto ldv_47098;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 15582: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15864: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16779: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16798: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 17133: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 17152: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 17499: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 17518: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 17578: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 17597: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 18266: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 19194: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 19487: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 23520: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 24826: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26251: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28604: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 11198: Function pointer *(rtlpriv->cfg->ops->get_desc) with type u32 (*)(u8 *, bool , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11199: Function pointer *(rtlpriv->cfg->ops->fill_tx_cmddesc) with type void (*)(struct ieee80211_hw *, u8 *, bool , bool , struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14213: Function pointer *(rtlpriv->intf_ops->read_efuse_byte) with type void (*)(struct ieee80211_hw *, u16 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14214: Function pointer *(rtlpriv->intf_ops->read_efuse_byte) with type void (*)(struct ieee80211_hw *, u16 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 14567: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 27204-27205: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8331: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17925: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 17921: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12865: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11894: Function pointer *(rtlpriv->cfg->ops->get_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13015: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13289: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13295: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12241: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12102: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15058: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15064: Function pointer *(rtlpriv->cfg->ops->set_hw_reg) with type void (*)(struct ieee80211_hw *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6880: Function pointer *(rtlpriv->io.read8_sync) with type u8 (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9801: Function pointer *(rtlpriv->io.read32_sync) with type u32 (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11709: Function pointer *(rtlpriv->io.read16_sync) with type u16 (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6888: Function pointer *(rtlpriv->io.write8_async) with type void (*)(struct rtl_priv *, u32 , u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6890: Function pointer *(rtlpriv->io.read8_sync) with type u8 (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6901: Function pointer *(rtlpriv->io.write32_async) with type void (*)(struct rtl_priv *, u32 , u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6903: Function pointer *(rtlpriv->io.read32_sync) with type u32 (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11717: Function pointer *(rtlpriv->io.write16_async) with type void (*)(struct rtl_priv *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 11719: Function pointer *(rtlpriv->io.read16_sync) with type u16 (*)(struct rtl_priv *, u32 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_rtlwifi_pm_ops_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtlwifi_pm_ops_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_pci_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_pci_suspend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtl8192de_hal_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_rtl8192de_hal_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_pci_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_pci_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22733: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 7); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22731: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12424: Ignoring function call through function pointer *(rtlpriv->cfg->ops->update_interrupt_mask): (*(rtlpriv->cfg->ops->update_interrupt_mask))(hw, 0U, 30U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12427: Ignoring function call through function pointer *(rtlpriv->cfg->ops->update_interrupt_mask): (*(rtlpriv->cfg->ops->update_interrupt_mask))(hw, 30U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12363: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 76, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15058: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 17, &(mac->slot_time)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 15064: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 14, (u8 *)(&sifs_timer)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13289: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 43, (u8 *)(&reg_rcr)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtl_cam_get_free_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11894: Ignoring function call through function pointer *(rtlpriv->cfg->ops->get_hw_reg): (*(rtlpriv->cfg->ops->get_hw_reg))(hw, 39, (u8 *)(&rfState)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_purge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17925: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 66, (u8 *)(&iotype)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 17921: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 66, (u8 *)(&iotype)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6880: Ignoring function call through function pointer *(rtlpriv->io.read8_sync): tmp = (*(rtlpriv->io.read8_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware_nowait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11717: Ignoring function call through function pointer *(rtlpriv->io.write16_async): (*(rtlpriv->io.write16_async))(rtlpriv, addr, (int)val16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 11719: Ignoring function call through function pointer *(rtlpriv->io.read16_sync): (*(rtlpriv->io.read16_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6901: Ignoring function call through function pointer *(rtlpriv->io.write32_async): (*(rtlpriv->io.write32_async))(rtlpriv, addr, val32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6903: Ignoring function call through function pointer *(rtlpriv->io.read32_sync): (*(rtlpriv->io.read32_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtl_ps_disable_nic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6888: Ignoring function call through function pointer *(rtlpriv->io.write8_async): (*(rtlpriv->io.write8_async))(rtlpriv, addr, (int)val8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6890: Ignoring function call through function pointer *(rtlpriv->io.read8_sync): (*(rtlpriv->io.read8_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12241: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 32, &e_aci___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9801: Ignoring function call through function pointer *(rtlpriv->io.read32_sync): tmp = (*(rtlpriv->io.read32_sync))(rtlpriv, addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtl_cam_mark_invalid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_cam_empty_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_cam_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_cam_delete_one_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtl_ps_enable_nic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 22707: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 3); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 22705: Ignoring function call through function pointer *(rtlpriv->cfg->ops->led_control): (*(rtlpriv->cfg->ops->led_control))(hw, 2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6916: Ignoring function call through function pointer *(rtlpriv->cfg->ops->get_bbreg): tmp = (*(rtlpriv->cfg->ops->get_bbreg))(hw, regaddr, bitmask); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12102: Ignoring function call through function pointer *(rtlpriv->cfg->ops->set_hw_reg): (*(rtlpriv->cfg->ops->set_hw_reg))(hw, 31, &e_aci); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            693725 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  638290 (92%)
  Because of loop head:            55198 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         237 (0%)
  Times precision was empty:       405874 (59%)
  Times precision was {false}:     3199 (0%)
  Times result was cached:         281464 (41%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3188 (0%)
  Times result was 'false':        40856 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         1212597
  BDD entailment checks:           201275
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       125
Number of predicates discovered:          6
Number of abstraction locations:          133
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         850785
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 133.21
Number of irrelevant predicates:          546595 (64%)
Number of preds handled by boolean abs:   5187 (1%)
  Total number of models for allsat:      3072
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                108.823s
  Time for path formula creation:      107.043s
Time for strengthen operator:            4.155s
Time for prec operator:                335.145s
  Time for abstraction:                327.993s (Max:     6.597s, Count: 693725)
    Boolean abstraction:               122.324s
    Solving time:                      182.502s (Max:     5.923s)
    Model enumeration time:              6.243s
    Time for BDD construction:           0.076s (Max:     0.001s)
Time for merge operator:                 9.498s
Time for coverage check:                 0.261s
  Time for BDD entailment checks:        0.164s
Total time for SMT solver (w/o itp):   188.745s

Number of path formula cache hits:   7663692 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    84.090s

Total number of created targets for pointer analysis: 5557963
   Number of created targets for uf: *signed_int is 138
   Number of created targets for uf: *unsigned_char is 55958
   Number of created targets for uf: *_Bool is 549
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 181


Number of BDD nodes:                               294
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6394 (count: 658185, min: 0, max: 133, avg: 0.01)
Time for BDD node cleanup:                             0.087s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.457s
  Time for transition matches:                         3.510s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      7168860 (count: 7168860, min: 1, max: 1, avg: 1.00) [1 x 7168860]

CPA algorithm statistics
------------------------
Number of iterations:            3863790
Max size of waitlist:            1039
Average size of waitlist:        541
Number of computed successors:   4689643
Max successors for one state:    2
Number of times merged:          505661
Number of times stopped:         591045
Number of times breaked:         237

Total time for CPA algorithm:       702.264s (Max:    14.291s)
  Time for choose from waitlist:      1.218s
  Time for precision adjustment:    349.473s
  Time for transfer relation:       325.023s
  Time for merge operator:           13.160s
  Time for stop operator:             3.212s
  Time for adding to reached set:     3.940s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   237
Avg. length of target path (in blocks):                4794 (count: 237, min: 8, max: 25, avg: 20.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 188.214s
  Counterexample analysis:                           182.601s (Max:     5.251s, Calls: 237)
    Refinement sat check:                            176.239s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.036s
  Precision update:                                    0.060s
  ARG update:                                          5.414s

Length of refined path (in blocks):                    4320 (count: 237, min: 4, max: 24, avg: 18.23)
Number of affected states:                             3806 (count: 237, min: 1, max: 22, avg: 16.06)
Length (states) of path with itp 'true':                277 (count: 237, min: 1, max: 11, avg: 1.17)
Length (states) of path with itp non-trivial itp:      3806 (count: 237, min: 1, max: 22, avg: 16.06)
Length (states) of path with itp 'false':               237 (count: 237, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 237, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3569 (count: 237, min: 0, max: 21, avg: 15.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                237
Number of successful refinements:     237
Number of failed refinements:         0
Max. size of reached set before ref.: 21990
Max. size of reached set after ref.:  1668
Avg. size of reached set before ref.: 17043.38
Avg. size of reached set after ref.:  13.27

Total time for CEGAR algorithm:     892.348s
Time for refinements:               190.079s
Average time for refinement:          0.802s
Max time for refinement:              5.298s

Code Coverage
-----------------------------
  Function coverage:      0.308
  Visited lines:          3824
  Total lines:            13847
  Line coverage:          0.276
  Visited conditions:     1086
  Total conditions:       4582
  Condition coverage:     0.237

CPAchecker general statistics
-----------------------------
Number of program locations:     19225
Number of CFA edges:             23720
Number of relevant variables:    2867
Number of functions:             325
Number of loops:                 151
Size of reached set:             21604
  Number of reached locations:   2359 (12%)
    Avg states per location:     9
    Max states per location:     561 (at node N19178)
  Number of reached functions:   100 (31%)
  Number of partitions:          21503
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N16783 (before line 25248), Function main called from node N16770, stack depth 1 [631990cc], stack [main]])
  Number of target states:       0
  Size of final wait list        1036

Time for analysis setup:          8.131s
  Time for loading CPAs:          1.019s
  Time for loading parser:        0.564s
  Time for CFA construction:      6.411s
    Time for parsing file(s):     1.152s
    Time for AST to CFA:          1.983s
    Time for CFA sanity check:    0.883s
    Time for post-processing:     2.233s
      Time for var class.:        0.991s
Time for Analysis:              892.348s
CPU time for analysis:          892.280s
Total time for CPAchecker:      900.490s
Total CPU time for CPAchecker:  900.400s
Time for statistics:              0.431s

Time for Garbage Collector:      30.735s (in 1254 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                572MB (   545 MiB) max;    318MB (   303 MiB) avg;    601MB (   573 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           632MB (   603 MiB) max;    463MB (   441 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8560MB (  8163 MiB) max;   8328MB (  7942 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
