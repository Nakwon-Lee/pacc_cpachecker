scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--neterion--vxge--vxge.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_80qyys64/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7435: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7438: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7441: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8013: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8127: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13291: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15260: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17744: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 18569-18584: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 18571: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18574: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18576: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18580: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 18589-18604: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 18591: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18594: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18596: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18600: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 18611: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18614: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18620: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 18629-18644: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 18631: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18634: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18636: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18640: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    default:
    __bad_percpu_size();
    }
    ldv_36545:
    pscr_ret__ = pfo_ret__;
    goto ldv_36551;
    case 2UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    default:
    __bad_percpu_size();
    }
    ldv_36555:
    pscr_ret__ = pfo_ret_____0;
    goto ldv_36551;
    case 4UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    default:
    __bad_percpu_size();
    }
    ldv_36564:
    pscr_ret__ = pfo_ret_____1;
    goto ldv_36551;
    case 8UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    default:
    __bad_percpu_size();
    }
    ldv_36573:
    pscr_ret__ = pfo_ret_____2;
    goto ldv_36551;
    default:
    __bad_size_call_parameter();
    goto ldv_36551;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 24870: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 18040: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7604-7605: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 17973-17974: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7658: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18103: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18136: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18070: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7638: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18007: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15164: Function pointer *(ring->callback) with type enum vxge_hw_status (*)(struct __vxge_hw_ring *, void *, u8 , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_notice to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 17907: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_napi_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14208: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(*dtrh)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13767: Ignoring function call through function pointer *(hldev->uld_callbacks->crit_err): (*(hldev->uld_callbacks->crit_err))(hldev, type, (u64 )vp_id); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15164: Ignoring function call through function pointer *(ring->callback): (*(ring->callback))(ring, first_rxdh, (int)t_code, ring->channel.userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11505: Ignoring function call through function pointer *(fifo->txdl_term): (*(fifo->txdl_term))(txdlh, 2, fifo->channel.userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10933: Ignoring function call through function pointer *(ring->rxd_term): (*(ring->rxd_term))(rxdh, 2, channel->userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10507: Destroying the void* pointer vxge_os_dma_malloc_async::vaddr produces garbage or the memory pointed by it is unused: vxge_os_dma_malloc_async(blockpool->hldev->pdev, __CPAchecker_TMP_0, 4096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 13787: Ignoring function call through function pointer *(hldev->uld_callbacks->link_down): (*(hldev->uld_callbacks->link_down))(hldev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 13807: Ignoring function call through function pointer *(hldev->uld_callbacks->link_up): (*(hldev->uld_callbacks->link_up))(hldev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7638: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10788: Ignoring function call through function pointer *(mempool->item_func_alloc): (*(mempool->item_func_alloc))(mempool, i, dma_object, index, is_last); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function netif_napi_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7879: Assignment to the void* pointer vaddr produces garbage or the memory pointed by it is unused: vaddr = vaddr + misaligned; (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

lines 15206-15207: Ignoring function call through function pointer *(fifo->callback): tmp = (*(fifo->callback))(fifo, first_txdlh, t_code, channel->userdata, skb_ptr, nr_skb, more); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_find_ext_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_get_num_default_rss_queues to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_sriov to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7604-7605: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10302: Ignoring function call through function pointer *(ring->rxd_init): status = (*(ring->rxd_init))(rxd, channel->userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 17973-17974: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7658: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5014342 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4211150 (84%)
  Because of loop head:            802331 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         861 (0%)
  Times precision was empty:       2111223 (42%)
  Times precision was {false}:     5702 (0%)
  Times result was cached:         2885570 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11847 (0%)
  Times result was 'false':        102499 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         3903864
  BDD entailment checks:           1161698
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       96
Number of predicates discovered:          11
Number of abstraction locations:          771
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         9069053
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 516.78
Number of irrelevant predicates:          5277169 (58%)
Number of preds handled by boolean abs:   20679 (0%)
  Total number of models for allsat:      11862
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                125.386s
  Time for path formula creation:      116.546s
Time for strengthen operator:           18.064s
Time for prec operator:                331.376s
  Time for abstraction:                291.158s (Max:     1.148s, Count: 5014342)
    Boolean abstraction:                14.326s
    Solving time:                       19.198s (Max:     0.088s)
    Model enumeration time:              0.959s
    Time for BDD construction:           0.235s (Max:     0.010s)
Time for merge operator:                 6.184s
Time for coverage check:                 1.027s
  Time for BDD entailment checks:        0.635s
Total time for SMT solver (w/o itp):    20.157s

Number of path formula cache hits:   39713528 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.191s

Total number of created targets for pointer analysis: 149155
   Number of created targets for uf: *(void)* is 401
   Number of created targets for uf: *(struct_vxge_hw_uld_cbs)* is 5
   Number of created targets for uf: *(struct_pci_dev)* is 5
   Number of created targets for uf: *(Return_type:_[enum_vxge_hw_status],_Parameters:_7,_Parameter_1_type:_[(struct___vxge_hw_fifo)*],_Parameter_2_type:_[(void)*],_Parameter_3_type:_[enum_vxge_hw_fifo_tcode],_Parameter_4_type:_[(void)*],_Parameter_5_type:_[(((struct_sk_buff)*)*)*],_Parameter_6_type:_[signed_int],_Parameter_7_type:_[(signed_int)*],_VarArgs:_false)* is 10
   Number of created targets for uf: *enum_vxge_hw_fifo_tcode is 4
   Number of created targets for uf: *(Return_type:_[enum_vxge_hw_status],_Parameters:_2,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 28
   Number of created targets for uf: *((void)*)* is 13
   Number of created targets for uf: *unsigned_short_int is 137
   Number of created targets for uf: *(struct___vxge_hw_vpath_handle)* is 35
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[enum_vxge_hw_txdl_state],_Parameter_3_type:_[(void)*],_VarArgs:_false)* is 10
   Number of created targets for uf: *signed_int is 26
   Number of created targets for uf: *unsigned_char is 6
   Number of created targets for uf: *(struct_list_head)* is 63
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[enum_vxge_hw_rxd_state],_Parameter_3_type:_[(void)*],_VarArgs:_false)* is 28
   Number of created targets for uf: *(struct_vxge_hw_vpath_stats_sw_common_info)* is 48
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_5,_Parameter_1_type:_[(struct_vxge_hw_mempool)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(struct_vxge_hw_mempool_dma)*],_Parameter_4_type:_[unsigned_int],_Parameter_5_type:_[unsigned_int],_VarArgs:_false)* is 23
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *unsigned_int is 162
   Number of created targets for uf: *enum___vxge_hw_channel_type is 35


Number of BDD nodes:                               308
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23850 (count: 3385310, min: 0, max: 111, avg: 0.01)
Time for BDD node cleanup:                             0.329s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 29.005s
  Time for transition matches:                        16.420s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     33994726 (count: 33994726, min: 1, max: 1, avg: 1.00) [1 x 33994726]

CPA algorithm statistics
------------------------
Number of iterations:            18743359
Max size of waitlist:            1157
Average size of waitlist:        410
Number of computed successors:   21501758
Max successors for one state:    2
Number of times merged:          1371083
Number of times stopped:         2221907
Number of times breaked:         861

Total time for CPA algorithm:       838.435s (Max:     4.210s)
  Time for choose from waitlist:      4.295s
  Time for precision adjustment:    416.982s
  Time for transfer relation:       342.990s
  Time for merge operator:           15.282s
  Time for stop operator:            14.744s
  Time for adding to reached set:    14.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   861
Avg. length of target path (in blocks):               32883 (count: 861, min: 14, max: 54, avg: 38.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.842s
  Counterexample analysis:                            10.350s (Max:     0.051s, Calls: 861)
    Refinement sat check:                              7.702s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.240s
  Precision update:                                    0.987s
  ARG update:                                         32.941s

Length of refined path (in blocks):                   31362 (count: 861, min: 6, max: 53, avg: 36.43)
Number of affected states:                            29041 (count: 861, min: 0, max: 51, avg: 33.73)
Length (states) of path with itp 'true':               1460 (count: 861, min: 1, max: 31, avg: 1.70)
Length (states) of path with itp non-trivial itp:     29041 (count: 861, min: 0, max: 51, avg: 33.73)
Length (states) of path with itp 'false':               861 (count: 861, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 861, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           28223 (count: 861, min: 0, max: 50, avg: 32.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                861
Number of successful refinements:     861
Number of failed refinements:         0
Max. size of reached set before ref.: 69146
Max. size of reached set after ref.:  55172
Avg. size of reached set before ref.: 22859.49
Avg. size of reached set after ref.:  618.36

Total time for CEGAR algorithm:     892.838s
Time for refinements:                53.966s
Average time for refinement:          0.062s
Max time for refinement:              0.254s

Code Coverage
-----------------------------
  Function coverage:      0.602
  Visited lines:          6959
  Total lines:            11756
  Line coverage:          0.592
  Visited conditions:     1742
  Total conditions:       2838
  Condition coverage:     0.614

CPAchecker general statistics
-----------------------------
Number of program locations:     15407
Number of CFA edges:             17638
Number of relevant variables:    2635
Number of functions:             457
Number of loops:                 186
Size of reached set:             27742
  Number of reached locations:   5027 (33%)
    Avg states per location:     5
    Max states per location:     172 (at node N92)
  Number of reached functions:   275 (60%)
  Number of partitions:          27521
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N12733 (before line 22273), Function vxge_open called from node N14932, stack depth 2 [23bef25b], stack [main, vxge_open]])
  Number of target states:       0
  Size of final wait list        568

Time for analysis setup:          7.517s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.567s
  Time for CFA construction:      6.035s
    Time for parsing file(s):     1.004s
    Time for AST to CFA:          2.243s
    Time for CFA sanity check:    0.695s
    Time for post-processing:     1.963s
      Time for var class.:        0.856s
Time for Analysis:              892.838s
CPU time for analysis:          892.760s
Total time for CPAchecker:      900.358s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.391s

Time for Garbage Collector:     115.061s (in 2807 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                700MB (   668 MiB) max;    324MB (   309 MiB) avg;    721MB (   687 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           721MB (   688 MiB) max;    473MB (   451 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8224MB (  7843 MiB) max;   8145MB (  7768 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
