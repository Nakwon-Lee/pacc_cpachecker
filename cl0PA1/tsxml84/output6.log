scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--neterion--vxge--vxge.ko-ldv_main3_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0fc8dmkm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7435: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7438: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 7441: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6149;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8013: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8127: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13291: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15260: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17744: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

lines 18569-18584: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 18571: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18574: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18576: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18580: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 18589-18604: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 18591: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18594: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18596: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18600: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 18611: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18614: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18620: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

lines 18629-18644: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 18631: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18634: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 18636: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 18640: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    default:
    __bad_percpu_size();
    } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
    case 1UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
    goto ldv_36545;
    default:
    __bad_percpu_size();
    }
    ldv_36545:
    pscr_ret__ = pfo_ret__;
    goto ldv_36551;
    case 2UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
    goto ldv_36555;
    default:
    __bad_percpu_size();
    }
    ldv_36555:
    pscr_ret__ = pfo_ret_____0;
    goto ldv_36551;
    case 4UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
    goto ldv_36564;
    default:
    __bad_percpu_size();
    }
    ldv_36564:
    pscr_ret__ = pfo_ret_____1;
    goto ldv_36551;
    case 8UL: ;
    switch (4UL) {
    case 1UL:
    __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 2UL:
    __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 4UL:
    __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    case 8UL:
    __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
    goto ldv_36573;
    default:
    __bad_percpu_size();
    }
    ldv_36573:
    pscr_ret__ = pfo_ret_____2;
    goto ldv_36551;
    default:
    __bad_size_call_parameter();
    goto ldv_36551;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 24870: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 18040: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7604-7605: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 17973-17974: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7658: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18103: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18136: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18070: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7638: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 18007: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15164: Function pointer *(ring->callback) with type enum vxge_hw_status (*)(struct __vxge_hw_ring *, void *, u8 , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7638: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 14208: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(*dtrh)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 11505: Ignoring function call through function pointer *(fifo->txdl_term): (*(fifo->txdl_term))(txdlh, 2, fifo->channel.userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10933: Ignoring function call through function pointer *(ring->rxd_term): (*(ring->rxd_term))(rxdh, 2, channel->userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10507: Destroying the void* pointer vxge_os_dma_malloc_async::vaddr produces garbage or the memory pointed by it is unused: vxge_os_dma_malloc_async(blockpool->hldev->pdev, __CPAchecker_TMP_0, 4096UL); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7604-7605: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7658: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10302: Ignoring function call through function pointer *(ring->rxd_init): status = (*(ring->rxd_init))(rxd, channel->userdata); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 17973-17974: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7879: Assignment to the void* pointer vaddr produces garbage or the memory pointed by it is unused: vaddr = vaddr + misaligned; (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationPointerRemoval, WARNING)

line 10788: Ignoring function call through function pointer *(mempool->item_func_alloc): (*(mempool->item_func_alloc))(mempool, i, dma_object, index, is_last); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20820 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16787 (81%)
  Because of loop head:            4020 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (0%)
  Times precision was empty:       19867 (95%)
  Times precision was {false}:     117 (1%)
  Times result was cached:         754 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      82 (0%)
  Times result was 'false':        48 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         14578
  BDD entailment checks:           3704
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       96
Number of predicates discovered:          4
Number of abstraction locations:          48
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1646
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 8.27
Number of irrelevant predicates:          902 (55%)
Number of preds handled by boolean abs:   125 (8%)
  Total number of models for allsat:      79
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                 14.235s
  Time for path formula creation:       14.113s
Time for strengthen operator:            0.270s
Time for prec operator:                  1.650s
  Time for abstraction:                  1.000s (Max:     0.035s, Count: 20820)
    Boolean abstraction:                 0.120s
    Solving time:                        0.226s (Max:     0.020s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.612s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     0.234s

Number of path formula cache hits:   15064 (10%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.256s

Total number of created targets for pointer analysis: 38838
   Number of created targets for uf: *(void)* is 55
   Number of created targets for uf: *(Return_type:_[enum_vxge_hw_status],_Parameters:_7,_Parameter_1_type:_[(struct___vxge_hw_fifo)*],_Parameter_2_type:_[(void)*],_Parameter_3_type:_[enum_vxge_hw_fifo_tcode],_Parameter_4_type:_[(void)*],_Parameter_5_type:_[(((struct_sk_buff)*)*)*],_Parameter_6_type:_[signed_int],_Parameter_7_type:_[(signed_int)*],_VarArgs:_false)* is 4
   Number of created targets for uf: *(Return_type:_[enum_vxge_hw_status],_Parameters:_2,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 7
   Number of created targets for uf: *unsigned_short_int is 52
   Number of created targets for uf: *((void)*)* is 10
   Number of created targets for uf: *(struct___vxge_hw_vpath_handle)* is 10
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[enum_vxge_hw_txdl_state],_Parameter_3_type:_[(void)*],_VarArgs:_false)* is 4
   Number of created targets for uf: *signed_int is 19
   Number of created targets for uf: *(struct_list_head)* is 22
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(void)*],_Parameter_2_type:_[enum_vxge_hw_rxd_state],_Parameter_3_type:_[(void)*],_VarArgs:_false)* is 7
   Number of created targets for uf: *(struct_vxge_hw_vpath_stats_sw_common_info)* is 19
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_5,_Parameter_1_type:_[(struct_vxge_hw_mempool)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(struct_vxge_hw_mempool_dma)*],_Parameter_4_type:_[unsigned_int],_Parameter_5_type:_[unsigned_int],_VarArgs:_false)* is 10
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *unsigned_int is 1123
   Number of created targets for uf: *enum___vxge_hw_channel_type is 10


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         185 (count: 24669, min: 0, max: 95, avg: 0.01)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.586s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       150958 (count: 150958, min: 1, max: 1, avg: 1.00) [1 x 150958]

CPA algorithm statistics
------------------------
Number of iterations:            70802
Max size of waitlist:            51
Average size of waitlist:        40
Number of computed successors:   80330
Max successors for one state:    2
Number of times merged:          5437
Number of times stopped:         9068
Number of times breaked:         13

Total time for CPA algorithm:        22.387s (Max:     8.303s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:      2.610s
  Time for transfer relation:        17.401s
  Time for merge operator:            0.892s
  Time for stop operator:             0.298s
  Time for adding to reached set:     0.288s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 380 (count: 13, min: 14, max: 44, avg: 29.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.650s
  Counterexample analysis:                             0.278s (Max:     0.035s, Calls: 13)
    Refinement sat check:                              0.225s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.008s
  ARG update:                                          0.313s

Length of refined path (in blocks):                     367 (count: 13, min: 13, max: 43, avg: 28.23)
Number of affected states:                              341 (count: 13, min: 11, max: 41, avg: 26.23)
Length (states) of path with itp 'true':                 13 (count: 13, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       341 (count: 13, min: 11, max: 41, avg: 26.23)
Length (states) of path with itp 'false':                13 (count: 13, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             328 (count: 13, min: 10, max: 40, avg: 25.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 18115
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 5428.23
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      23.210s
Time for refinements:                 0.815s
Average time for refinement:          0.062s
Max time for refinement:              0.151s

Code Coverage
-----------------------------
  Function coverage:      0.129
  Visited lines:          1477
  Total lines:            11756
  Line coverage:          0.126
  Visited conditions:     160
  Total conditions:       2838
  Condition coverage:     0.056

CPAchecker general statistics
-----------------------------
Number of program locations:     15407
Number of CFA edges:             17638
Number of relevant variables:    2635
Number of functions:             457
Number of loops:                 186
Size of reached set:             725
  Number of reached locations:   440 (3%)
    Avg states per location:     1
    Max states per location:     9 (at node N4553)
  Number of reached functions:   59 (13%)
  Number of partitions:          718
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N11945 (before line 21421), Function vxge_close_vpaths called from node N12018, stack depth 4 [538b1710], stack [main, vxge_open, vxge_open_vpaths, vxge_close_vpaths]])
  Number of target states:       0
  Size of final wait list        45

Time for analysis setup:          7.104s
  Time for loading CPAs:          0.883s
  Time for loading parser:        0.473s
  Time for CFA construction:      5.638s
    Time for parsing file(s):     0.987s
    Time for AST to CFA:          1.999s
    Time for CFA sanity check:    0.746s
    Time for post-processing:     1.793s
      Time for var class.:        0.816s
Time for Analysis:               23.210s
CPU time for analysis:           23.210s
Total time for CPAchecker:       30.317s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.106s

Time for Garbage Collector:       1.566s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                163MB (   155 MiB) max;     86MB (    82 MiB) avg;    169MB (   161 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           183MB (   175 MiB) max;    144MB (   137 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
