scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--misc--pch_phub.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mhihc8i0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3351: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_pch_bin_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pch_bin_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            32257 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24800 (77%)
  Because of loop head:            7326 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         131 (0%)
  Times precision was empty:       2556 (8%)
  Times precision was {false}:     503 (2%)
  Times result was cached:         27150 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2048 (6%)
  Times result was 'false':        1448 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         48805
  BDD entailment checks:           11943
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          11
Number of abstraction locations:          149
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         86546
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 33.93
Number of irrelevant predicates:          17052 (20%)
Number of preds handled by boolean abs:   3914 (5%)
  Total number of models for allsat:      2172
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                  4.289s
  Time for path formula creation:        4.148s
Time for strengthen operator:            0.251s
Time for prec operator:                  9.513s
  Time for abstraction:                  9.012s (Max:     0.037s, Count: 32257)
    Boolean abstraction:                 1.884s
    Solving time:                        1.681s (Max:     0.017s)
    Model enumeration time:              0.149s
    Time for BDD construction:           0.125s (Max:     0.012s)
Time for merge operator:                 0.361s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.068s
Total time for SMT solver (w/o itp):     1.830s

Number of path formula cache hits:   275245 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.587s

Total number of created targets for pointer analysis: 2770
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *signed_int is 1012
   Number of created targets for uf: *unsigned_char is 71
   Number of created targets for uf: *(struct_pci_dev)* is 86
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               441
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4531 (count: 30028, min: 0, max: 238, avg: 0.15)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.628s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       280859 (count: 280859, min: 1, max: 1, avg: 1.00) [1 x 280859]

CPA algorithm statistics
------------------------
Number of iterations:            167213
Max size of waitlist:            65
Average size of waitlist:        29
Number of computed successors:   196812
Max successors for one state:    2
Number of times merged:          18431
Number of times stopped:         24687
Number of times breaked:         131

Total time for CPA algorithm:        20.935s (Max:     0.845s)
  Time for choose from waitlist:      0.151s
  Time for precision adjustment:     10.999s
  Time for transfer relation:         7.681s
  Time for merge operator:            0.769s
  Time for stop operator:             0.267s
  Time for adding to reached set:     0.288s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   131
Avg. length of target path (in blocks):                4553 (count: 131, min: 8, max: 103, avg: 34.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.707s
  Counterexample analysis:                             1.987s (Max:     0.046s, Calls: 131)
    Refinement sat check:                              1.323s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.120s
  ARG update:                                          0.474s

Length of refined path (in blocks):                    4368 (count: 131, min: 4, max: 102, avg: 33.34)
Number of affected states:                             3602 (count: 131, min: 1, max: 100, avg: 27.50)
Length (states) of path with itp 'true':                635 (count: 131, min: 1, max: 28, avg: 4.85)
Length (states) of path with itp non-trivial itp:      3602 (count: 131, min: 1, max: 100, avg: 27.50)
Length (states) of path with itp 'false':               131 (count: 131, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          58 (count: 131, min: 0, max: 3, avg: 0.44)
Equal non-trivial interpolants along paths:            3413 (count: 131, min: 0, max: 99, avg: 26.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                131
Number of successful refinements:     131
Number of failed refinements:         0
Max. size of reached set before ref.: 5737
Max. size of reached set after ref.:  5600
Avg. size of reached set before ref.: 1771.04
Avg. size of reached set after ref.:  518.33

Total time for CEGAR algorithm:      24.068s
Time for refinements:                 3.063s
Average time for refinement:          0.023s
Max time for refinement:              0.066s

Code Coverage
-----------------------------
  Function coverage:      0.594
  Visited lines:          1239
  Total lines:            1395
  Line coverage:          0.888
  Visited conditions:     204
  Total conditions:       270
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     1798
Number of CFA edges:             2001
Number of relevant variables:    238
Number of functions:             64
Number of loops:                 8
Size of reached set:             6573
  Number of reached locations:   692 (38%)
    Avg states per location:     9
    Max states per location:     248 (at node N183)
  Number of reached functions:   38 (59%)
  Number of partitions:          6569
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N870 (before line 3118), Function main called from node N857, stack depth 1 [64da2a7], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.111s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.505s
  Time for CFA construction:      1.897s
    Time for parsing file(s):     0.644s
    Time for AST to CFA:          0.526s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.431s
      Time for var class.:        0.231s
Time for Analysis:               24.068s
CPU time for analysis:           24.080s
Time for analyzing result:        0.032s
Total time for CPAchecker:       27.184s
Total CPU time for CPAchecker:   27.190s
Time for statistics:              0.141s

Time for Garbage Collector:       0.739s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     48MB (    46 MiB) avg;     81MB (    78 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
