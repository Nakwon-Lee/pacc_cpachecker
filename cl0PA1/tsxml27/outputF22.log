scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--misc--pch_phub.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r1vz_inh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3351: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3373: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_pch_bin_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_pch_bin_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_get_system_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2296019 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2061685 (90%)
  Because of loop head:            221542 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12792 (1%)
  Times precision was empty:       102739 (4%)
  Times precision was {false}:     634 (0%)
  Times result was cached:         2180461 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12185 (1%)
  Times result was 'false':        77126 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         7662847
  BDD entailment checks:           4749961
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       34
Number of predicates discovered:          40
Number of abstraction locations:          120
Max number of predicates per location:    14
Avg number of predicates per location:    3
Total predicates per abstraction:         10674241
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 832.69
Number of irrelevant predicates:          4236265 (40%)
Number of preds handled by boolean abs:   41936 (0%)
  Total number of models for allsat:      38127
  Max number of models for allsat:        120
  Avg number of models for allsat:        3.13

Time for post operator:                 48.818s
  Time for path formula creation:       44.618s
Time for strengthen operator:           10.172s
Time for prec operator:                328.495s
  Time for abstraction:                313.050s (Max:     0.207s, Count: 2296019)
    Boolean abstraction:                13.716s
    Solving time:                        8.946s (Max:     0.037s)
    Model enumeration time:              3.657s
    Time for BDD construction:           0.707s (Max:     0.031s)
Time for merge operator:                 4.523s
Time for coverage check:                 3.706s
  Time for BDD entailment checks:        2.825s
Total time for SMT solver (w/o itp):    12.603s

Number of path formula cache hits:   21847056 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    22.874s

Total number of created targets for pointer analysis: 37887
   Number of created targets for uf: *(void)* is 1966
   Number of created targets for uf: *signed_int is 2479
   Number of created targets for uf: *unsigned_char is 4397
   Number of created targets for uf: *(struct_pci_dev)* is 167
   Number of created targets for uf: *signed_long_int is 1991
   Number of created targets for uf: *unsigned_int is 385


Number of BDD nodes:                               31709
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30062 (count: 4940503, min: 0, max: 1134, avg: 0.01)
Time for BDD node cleanup:                             0.448s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.457s
  Time for transition matches:                         8.959s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.040s
Automaton transfers with branching:                0
Automaton transfer successors:                     19619494 (count: 19619494, min: 1, max: 1, avg: 1.00) [1 x 19619494]

CPA algorithm statistics
------------------------
Number of iterations:            11442273
Max size of waitlist:            315
Average size of waitlist:        134
Number of computed successors:   13858508
Max successors for one state:    2
Number of times merged:          1456443
Number of times stopped:         1868691
Number of times breaked:         12792

Total time for CPA algorithm:       570.926s (Max:     2.047s)
  Time for choose from waitlist:      3.134s
  Time for precision adjustment:    372.260s
  Time for transfer relation:       140.711s
  Time for merge operator:           14.823s
  Time for stop operator:            12.706s
  Time for adding to reached set:     9.960s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12792
Avg. length of target path (in blocks):              478344 (count: 12792, min: 8, max: 91, avg: 37.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 160.860s
  Counterexample analysis:                           137.386s (Max:     0.057s, Calls: 12792)
    Refinement sat check:                             93.773s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.259s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.680s
  Precision update:                                    3.358s
  ARG update:                                         16.655s

Length of refined path (in blocks):                  463830 (count: 12792, min: 4, max: 90, avg: 36.26)
Number of affected states:                            91837 (count: 12792, min: 1, max: 88, avg: 7.18)
Length (states) of path with itp 'true':             359201 (count: 12792, min: 1, max: 63, avg: 28.08)
Length (states) of path with itp non-trivial itp:     91837 (count: 12792, min: 1, max: 88, avg: 7.18)
Length (states) of path with itp 'false':             12792 (count: 12792, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2234 (count: 12792, min: 0, max: 5, avg: 0.17)
Equal non-trivial interpolants along paths:           76811 (count: 12792, min: 0, max: 87, avg: 6.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12792
Number of successful refinements:     12792
Number of failed refinements:         0
Max. size of reached set before ref.: 19351
Max. size of reached set after ref.:  15133
Avg. size of reached set before ref.: 10265.79
Avg. size of reached set after ref.:  9335.29

Total time for CEGAR algorithm:     897.271s
Time for refinements:               256.076s
Average time for refinement:          0.020s
Max time for refinement:              0.308s

Code Coverage
-----------------------------
  Function coverage:      0.594
  Visited lines:          1130
  Total lines:            1395
  Line coverage:          0.810
  Visited conditions:     198
  Total conditions:       270
  Condition coverage:     0.733

CPAchecker general statistics
-----------------------------
Number of program locations:     1798
Number of CFA edges:             2001
Number of relevant variables:    238
Number of functions:             64
Number of loops:                 8
Size of reached set:             9680
  Number of reached locations:   579 (32%)
    Avg states per location:     16
    Max states per location:     96 (at node N1431)
  Number of reached functions:   38 (59%)
  Number of partitions:          9619
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N870 (before line 3118), Function main called from node N857, stack depth 1 [64da2a7], stack [main]])
  Number of target states:       0
  Size of final wait list        79

Time for analysis setup:          3.060s
  Time for loading CPAs:          0.593s
  Time for loading parser:        0.443s
  Time for CFA construction:      1.958s
    Time for parsing file(s):     0.607s
    Time for AST to CFA:          0.627s
    Time for CFA sanity check:    0.110s
    Time for post-processing:     0.472s
      Time for var class.:        0.248s
Time for Analysis:              897.271s
CPU time for analysis:          897.190s
Total time for CPAchecker:      900.335s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.251s

Time for Garbage Collector:      32.493s (in 1856 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                811MB (   774 MiB) max;    470MB (   448 MiB) avg;    825MB (   787 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1029MB (   982 MiB) max;    729MB (   695 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8196MB (  7816 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
