scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-fs--nfs--nfsv4.ko-ldv_main4_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i4naofs2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8198: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8201: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8204: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8306: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 8311: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 8321: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8401: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8404: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 8407: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6221;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6221;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6221;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6221;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9336: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 9339: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9339: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9340: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9342: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9342: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9343: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9345: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9349: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9349: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9350: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9352: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9352: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9353: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9355: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9359: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9359: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9360: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9362: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9362: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9363: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9365: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9368: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 9369: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9370: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9372: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9372: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9373: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9375: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49292;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49292;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49292;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49292;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9384: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 9387: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9387: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9388: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9390: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9390: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9391: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9393: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9397: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9397: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9398: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9400: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9400: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9401: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9403: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9407: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9407: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9408: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9410: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9410: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9411: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9413: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9416: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 9417: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9418: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9420: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9421: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9423: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49303;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49303;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49303;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49303;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9432: Dead code detected: pao_ID_____1 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 9435: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9435: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9436: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9438: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9438: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9439: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9441: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9445: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9445: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9446: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9448: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9448: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9449: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9451: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9455: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9455: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9456: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9458: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9458: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9459: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9461: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9464: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 9465: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9466: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9468: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9468: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9469: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9471: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49313;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49313;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49313;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49313;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 9483: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9483: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9484: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9486: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9486: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9487: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9489: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9493: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9493: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9494: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9496: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9496: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9497: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9499: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9503: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9503: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9504: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9506: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 9506: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 9507: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 9509: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49323;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49323;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49323;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49323;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49292;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49292;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49292;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49292;
  default:
  __bad_percpu_size();
  }
  ldv_49292: ;
  goto ldv_49297;
  case 2UL:
  pao_ID_____0 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49303;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49303;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49303;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49303;
  default:
  __bad_percpu_size();
  }
  ldv_49303: ;
  goto ldv_49297;
  case 4UL:
  pao_ID_____1 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49313;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49313;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49313;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49313;
  default:
  __bad_percpu_size();
  }
  ldv_49313: ;
  goto ldv_49297;
  case 8UL:
  pao_ID_____2 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49323;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49323;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49323;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49323;
  default:
  __bad_percpu_size();
  }
  ldv_49323: ;
  goto ldv_49297;
  default:
  __bad_size_call_parameter();
  goto ldv_49297;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 20550: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31329: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31430: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 31433: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 31436: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6229;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6229;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6229;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6229;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 35244: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 35473: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 36142: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 36448: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38085: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38175: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 38178: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 38181: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6258;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6258;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6258;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6258;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 39678: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 39752: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 39755: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 39758: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6237;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6237;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6237;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6237;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 40647: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 42486: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 42534: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 42537: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 42540: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6775;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6775;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6775;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6775;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 43708: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 44429: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 44580: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 44649: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 44652: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 44655: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6252;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6252;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6252;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6252;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 46134: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 46252: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 47187: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 47290: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47293: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47296: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6448;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6448;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6448;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6448;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 47520: Dead code detected: pao_ID__ = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 47523: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47523: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47524: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47526: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47526: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47527: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47529: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47533: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47533: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47534: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47536: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47536: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47537: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47539: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47543: Dead code detected: [pao_ID__ == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47543: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47544: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47546: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47546: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47547: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47549: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47552: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 47553: Dead code detected: [!(pao_ID__ == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47554: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47556: Dead code detected: [pao_ID__ == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47556: Dead code detected: [!(pao_ID__ == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47557: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47559: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49278;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49278;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49278;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49278;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 47568: Dead code detected: pao_ID_____0 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 47571: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47571: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47572: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47574: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47574: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47575: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47577: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47581: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47581: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47582: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47584: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47584: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47585: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47587: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47591: Dead code detected: [pao_ID_____0 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47591: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47592: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47594: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47594: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47595: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47597: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47600: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 47601: Dead code detected: [!(pao_ID_____0 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47602: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47604: Dead code detected: [pao_ID_____0 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47604: Dead code detected: [!(pao_ID_____0 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47605: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47607: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49289;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49289;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49289;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49289;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 47616: Dead code detected: pao_ID_____1 = 1; (CFACreationUtils.addEdgeToCFA, INFO)

line 47619: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47619: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47620: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47622: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47622: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47623: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47625: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47629: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47629: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47630: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47632: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47632: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47633: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47635: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47639: Dead code detected: [pao_ID_____1 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47639: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47640: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47642: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47642: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47643: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47645: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47648: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 47649: Dead code detected: [!(pao_ID_____1 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47650: Dead code detected: __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47652: Dead code detected: [pao_ID_____1 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47652: Dead code detected: [!(pao_ID_____1 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47653: Dead code detected: __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47655: Dead code detected: __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49299;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49299;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49299;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49299;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 47667: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47667: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47668: Dead code detected: __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47670: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47670: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47671: Dead code detected: __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47673: Dead code detected: __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47677: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47677: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47678: Dead code detected: __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47680: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47680: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47681: Dead code detected: __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47683: Dead code detected: __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 47687: Dead code detected: [pao_ID_____2 == 1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47687: Dead code detected: [!(pao_ID_____2 == 1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47688: Dead code detected: __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47690: Dead code detected: [pao_ID_____2 == -1] (CFACreationUtils.addEdgeToCFA, INFO)

line 47690: Dead code detected: [!(pao_ID_____2 == -1)] (CFACreationUtils.addEdgeToCFA, INFO)

line 47691: Dead code detected: __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat])); (CFACreationUtils.addEdgeToCFA, INFO)

line 47693: Dead code detected: __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49309;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49309;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49309;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49309;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  pao_ID__ = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49278;
  case 2UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49278;
  case 4UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49278;
  case 8UL: ;
  if (pao_ID__ == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID__ == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49278;
  default:
  __bad_percpu_size();
  }
  ldv_49278: ;
  goto ldv_49283;
  case 2UL:
  pao_ID_____0 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49289;
  case 2UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49289;
  case 4UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49289;
  case 8UL: ;
  if (pao_ID_____0 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____0 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49289;
  default:
  __bad_percpu_size();
  }
  ldv_49289: ;
  goto ldv_49283;
  case 4UL:
  pao_ID_____1 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49299;
  case 2UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49299;
  case 4UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49299;
  case 8UL: ;
  if (pao_ID_____1 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____1 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49299;
  default:
  __bad_percpu_size();
  }
  ldv_49299: ;
  goto ldv_49283;
  case 8UL:
  pao_ID_____2 = 1;
  switch (8UL) {
  case 1UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decb %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addb %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "qi" (1UL));
  }
  goto ldv_49309;
  case 2UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decw %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addw %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49309;
  case 4UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decl %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addl %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "ri" (1UL));
  }
  goto ldv_49309;
  case 8UL: ;
  if (pao_ID_____2 == 1) {
    __asm__ ("incq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else
  if (pao_ID_____2 == -1) {
    __asm__ ("decq %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]));
  } else {
    __asm__ ("addq %1, %%gs:%P0": "+m" ((server->io_stats)->events[(unsigned int )stat]): "re" (1UL));
  }
  goto ldv_49309;
  default:
  __bad_percpu_size();
  }
  ldv_49309: ;
  goto ldv_49283;
  default:
  __bad_size_call_parameter();
  goto ldv_49283;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 50657: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 50776: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 50779: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 50782: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6452;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6452;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6452;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6452;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 51400: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 22595: Function pointer *(tmp___6->pnfs_curr_ld->encode_layoutcommit) with type void (*)(struct pnfs_layout_hdr *, struct xdr_stream *, const struct nfs4_layoutcommit_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22640: Function pointer *(tmp___3->pnfs_curr_ld->encode_layoutreturn) with type void (*)(struct pnfs_layout_hdr *, struct xdr_stream *, const struct nfs4_layoutreturn_args *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47982: Function pointer *(ld->alloc_layout_hdr) with type struct pnfs_layout_hdr *(*)(struct inode *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 49608: Function pointer *(tmp___0->pnfs_curr_ld->alloc_lseg) with type struct pnfs_layout_segment *(*)(struct pnfs_layout_hdr *, struct nfs4_layoutget_res *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 50233: Function pointer *(nfss->pnfs_curr_ld->read_pagelist) with type enum pnfs_try_status (*)(struct nfs_read_data *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 49997: Function pointer *(nfss->pnfs_curr_ld->write_pagelist) with type enum pnfs_try_status (*)(struct nfs_write_data *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 47874: Function pointer *(ld_type->set_layoutdriver) with type int (*)(struct nfs_server *, const struct nfs_fh *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_kernel_cred to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function keyring_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_pipefs_notifier_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function key_revoke to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_key_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_sysctl_table to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_key_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function key_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function creds_are_invalid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_nfs_version to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function truncate_inode_pages to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function clear_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_write_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_fhandle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfs_kern_mount to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_server to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_init_timeout_values to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_server_copy_userdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_get_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mount_subtree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mntput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mark_inode_dirty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_init_server_rpcclient to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_free_server to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function out_of_line_wait_on_bit_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_alloc_fattr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_clear_inode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wake_up_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _atomic_dec_and_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 48168: Ignoring function call through function pointer *(tmp->pnfs_curr_ld->free_lseg): (*(tmp->pnfs_curr_ld->free_lseg))(lseg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ida_simple_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_fhget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nfs_put_client to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rpc_destroy_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 50448: Ignoring function call through function pointer *(nfss->pnfs_curr_ld->cleanup_layoutcommit): (*(nfss->pnfs_curr_ld->cleanup_layoutcommit))(data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 50448: Unsupported feature (recursion): nfs4_layoutcommit_release(data); (line was originally pointer call(nfs4_layoutcommit_release) (*((nfss->pnfs_curr_ld)->cleanup_layoutcommit))(data);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            838 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  806 (96%)
  Because of loop head:            32 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       838 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         320
  BDD entailment checks:           90
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       119
Number of predicates discovered:          0

Time for post operator:                  1.762s
  Time for path formula creation:        1.752s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.091s
  Time for abstraction:                  0.032s (Max:     0.020s, Count: 838)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   86 (1%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.630s

Total number of created targets for pointer analysis: 1211
   Number of created targets for uf: *signed_int is 43
   Number of created targets for uf: *(struct_list_head)* is 16
   Number of created targets for uf: *(struct_task_struct)* is 4
   Number of created targets for uf: *unsigned_int is 71
   Number of created targets for uf: *char is 65


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 929, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.066s
Automaton transfers with branching:                0
Automaton transfer successors:                         6925 (count: 6925, min: 1, max: 1, avg: 1.00) [1 x 6925]

CPA algorithm statistics
------------------------
Number of iterations:            2536
Max size of waitlist:            72
Average size of waitlist:        26
Number of computed successors:   2811
Max successors for one state:    2
Number of times merged:          115
Number of times stopped:         205
Number of times breaked:         0

Total time for CPA algorithm:         3.292s (Max:     3.292s)
  Time for choose from waitlist:      0.011s
  Time for precision adjustment:      0.208s
  Time for transfer relation:         2.848s
  Time for merge operator:            0.070s
  Time for stop operator:             0.060s
  Time for adding to reached set:     0.027s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.091
  Visited lines:          2731
  Total lines:            25917
  Line coverage:          0.105
  Visited conditions:     392
  Total conditions:       7824
  Condition coverage:     0.050

CPAchecker general statistics
-----------------------------
Number of program locations:     36756
Number of CFA edges:             44595
Number of relevant variables:    8031
Number of functions:             1392
Number of loops:                 198
Size of reached set:             2607
  Number of reached locations:   1309 (4%)
    Avg states per location:     1
    Max states per location:     72 (at node N36171)
  Number of reached functions:   126 (9%)
  Number of partitions:          2607
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        72

Time for analysis setup:         11.709s
  Time for loading CPAs:          1.051s
  Time for loading parser:        0.478s
  Time for CFA construction:     10.093s
    Time for parsing file(s):     1.405s
    Time for AST to CFA:          3.272s
    Time for CFA sanity check:    1.454s
    Time for post-processing:     3.944s
      Time for var class.:        1.516s
Time for Analysis:                3.292s
CPU time for analysis:            3.290s
Total time for CPAchecker:       15.004s
Total CPU time for CPAchecker:   14.970s
Time for statistics:              0.190s

Time for Garbage Collector:       1.184s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                225MB (   214 MiB) max;    118MB (   112 MiB) avg;    234MB (   223 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     31MB (    30 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           272MB (   259 MiB) max;    202MB (   193 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     33MB (    31 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8056MB (  7683 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
