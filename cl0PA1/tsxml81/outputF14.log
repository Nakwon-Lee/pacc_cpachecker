scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hhe0jx81/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7837: Unsupported feature (recursion): tda18271_init(fe); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            282 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  261 (93%)
  Because of loop head:            16 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (2%)
  Times precision was empty:       224 (79%)
  Times precision was {false}:     22 (8%)
  Times result was cached:         12 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      24 (9%)
  Times result was 'false':        15 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         254
  BDD entailment checks:           46
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          5
Number of abstraction locations:          11
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         94
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.04
Number of irrelevant predicates:          30 (32%)
Number of preds handled by boolean abs:   48 (51%)
  Total number of models for allsat:      24
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.469s
  Time for path formula creation:        1.460s
Time for strengthen operator:            0.016s
Time for prec operator:                  0.255s
  Time for abstraction:                  0.211s (Max:     0.019s, Count: 282)
    Boolean abstraction:                 0.065s
    Solving time:                        0.053s (Max:     0.009s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 0.076s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     0.057s

Number of path formula cache hits:   1383 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.389s

Total number of created targets for pointer analysis: 1980
   Number of created targets for uf: *unsigned_char is 343
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 260


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          78 (count: 556, min: 0, max: 78, avg: 0.14)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                         2729 (count: 2729, min: 1, max: 1, avg: 1.00) [1 x 2729]

CPA algorithm statistics
------------------------
Number of iterations:            1359
Max size of waitlist:            21
Average size of waitlist:        13
Number of computed successors:   1596
Max successors for one state:    2
Number of times merged:          104
Number of times stopped:         143
Number of times breaked:         5

Total time for CPA algorithm:         2.345s (Max:     1.228s)
  Time for choose from waitlist:      0.016s
  Time for precision adjustment:      0.364s
  Time for transfer relation:         1.746s
  Time for merge operator:            0.102s
  Time for stop operator:             0.021s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  36 (count: 5, min: 6, max: 12, avg: 7.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.864s
  Counterexample analysis:                             0.834s (Max:     0.289s, Calls: 5)
    Refinement sat check:                              0.764s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.013s
  ARG update:                                          0.005s

Length of refined path (in blocks):                      31 (count: 5, min: 5, max: 11, avg: 6.20)
Number of affected states:                               21 (count: 5, min: 3, max: 9, avg: 4.20)
Length (states) of path with itp 'true':                  5 (count: 5, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        21 (count: 5, min: 3, max: 9, avg: 4.20)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 5, min: 2, max: 8, avg: 3.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 474
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 157.60
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       3.244s
Time for refinements:                 0.897s
Average time for refinement:          0.179s
Max time for refinement:              0.302s

Code Coverage
-----------------------------
  Function coverage:      0.189
  Visited lines:          907
  Total lines:            3050
  Line coverage:          0.297
  Visited conditions:     134
  Total conditions:       906
  Condition coverage:     0.148

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             681
  Number of reached locations:   329 (8%)
    Avg states per location:     2
    Max states per location:     21 (at node N1323)
  Number of reached functions:   25 (19%)
  Number of partitions:          680
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2393 (before line 7092), Function tda18271_tune called from node N2577, stack depth 3 [f245bdd], stack [main, tda18271_set_analog_params, tda18271_tune]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          4.711s
  Time for loading CPAs:          0.668s
  Time for loading parser:        0.559s
  Time for CFA construction:      3.356s
    Time for parsing file(s):     0.780s
    Time for AST to CFA:          1.233s
    Time for CFA sanity check:    0.261s
    Time for post-processing:     0.932s
      Time for var class.:        0.506s
Time for Analysis:                3.244s
CPU time for analysis:            3.250s
Total time for CPAchecker:        7.959s
Total CPU time for CPAchecker:    7.950s
Time for statistics:              0.103s

Time for Garbage Collector:       0.247s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     38MB (    37 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             34MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8047MB (  7674 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
