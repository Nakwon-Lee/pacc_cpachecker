scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oxlturwk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_unlock_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5362-5363: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "__tda18271_write_regs", "ERROR: idx = 0x%x, len = %d, i2c_transfer returned: %d\n", idx, max, ret) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6987: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_init", "error %d on line %d\n", ret, 871) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7106: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 949) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7269-7270: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_set_analog_params", "error %d on line %d\n", ret, 1080) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7194: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_set_params", "error %d on line %d\n", ret, 1024) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7837: Unsupported feature (recursion): tda18271_init(fe); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            11601 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10955 (94%)
  Because of loop head:            508 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         138 (1%)
  Times precision was empty:       4411 (38%)
  Times precision was {false}:     191 (2%)
  Times result was cached:         6512 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      487 (4%)
  Times result was 'false':        908 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         9505
  BDD entailment checks:           1809
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          71
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         18634
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 27.48
Number of irrelevant predicates:          9174 (49%)
Number of preds handled by boolean abs:   870 (5%)
  Total number of models for allsat:      478
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  3.064s
  Time for path formula creation:        2.992s
Time for strengthen operator:            0.089s
Time for prec operator:                 12.601s
  Time for abstraction:                 12.334s (Max:     0.385s, Count: 11601)
    Boolean abstraction:                 7.826s
    Solving time:                        9.501s (Max:     0.371s)
    Model enumeration time:              0.236s
    Time for BDD construction:           0.057s (Max:     0.012s)
Time for merge operator:                 0.130s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     9.737s

Number of path formula cache hits:   78319 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.616s

Total number of created targets for pointer analysis: 26084
   Number of created targets for uf: *unsigned_short_int is 27
   Number of created targets for uf: *signed_int is 33
   Number of created targets for uf: *unsigned_char is 8209
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 519


Number of BDD nodes:                               256
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1156 (count: 10325, min: 0, max: 115, avg: 0.11)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.269s
Automaton transfers with branching:                0
Automaton transfer successors:                        73626 (count: 73626, min: 1, max: 1, avg: 1.00) [1 x 73626]

CPA algorithm statistics
------------------------
Number of iterations:            51154
Max size of waitlist:            44
Average size of waitlist:        18
Number of computed successors:   58557
Max successors for one state:    2
Number of times merged:          3848
Number of times stopped:         5197
Number of times breaked:         138

Total time for CPA algorithm:        18.671s (Max:     1.036s)
  Time for choose from waitlist:      0.058s
  Time for precision adjustment:     13.092s
  Time for transfer relation:         4.653s
  Time for merge operator:            0.223s
  Time for stop operator:             0.139s
  Time for adding to reached set:     0.154s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   138
Avg. length of target path (in blocks):                2963 (count: 138, min: 6, max: 38, avg: 21.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.429s
  Counterexample analysis:                            24.160s (Max:     0.378s, Calls: 138)
    Refinement sat check:                             22.480s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.024s
  Precision update:                                    0.042s
  ARG update:                                          0.141s

Length of refined path (in blocks):                    2620 (count: 138, min: 5, max: 36, avg: 18.99)
Number of affected states:                              982 (count: 138, min: 0, max: 20, avg: 7.12)
Length (states) of path with itp 'true':               1500 (count: 138, min: 1, max: 31, avg: 10.87)
Length (states) of path with itp non-trivial itp:       982 (count: 138, min: 0, max: 20, avg: 7.12)
Length (states) of path with itp 'false':               138 (count: 138, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 138, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             861 (count: 138, min: 0, max: 19, avg: 6.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                138
Number of successful refinements:     138
Number of failed refinements:         0
Max. size of reached set before ref.: 2560
Max. size of reached set after ref.:  2513
Avg. size of reached set before ref.: 1198.69
Avg. size of reached set after ref.:  832.75

Total time for CEGAR algorithm:      43.457s
Time for refinements:                24.691s
Average time for refinement:          0.178s
Max time for refinement:              0.382s

Code Coverage
-----------------------------
  Function coverage:      0.303
  Visited lines:          1106
  Total lines:            3050
  Line coverage:          0.363
  Visited conditions:     204
  Total conditions:       906
  Condition coverage:     0.225

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             1953
  Number of reached locations:   539 (13%)
    Avg states per location:     3
    Max states per location:     62 (at node N1323)
  Number of reached functions:   40 (30%)
  Number of partitions:          1952
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3333 (before line 8143), Function main called from node N3259, stack depth 1 [234c5e41], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          3.923s
  Time for loading CPAs:          0.554s
  Time for loading parser:        0.541s
  Time for CFA construction:      2.742s
    Time for parsing file(s):     0.727s
    Time for AST to CFA:          0.980s
    Time for CFA sanity check:    0.187s
    Time for post-processing:     0.670s
      Time for var class.:        0.371s
Time for Analysis:               43.457s
CPU time for analysis:           43.450s
Total time for CPAchecker:       47.382s
Total CPU time for CPAchecker:   47.370s
Time for statistics:              0.078s

Time for Garbage Collector:       0.362s (in 46 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     50MB (    47 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8078MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
