scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kwnb6h3a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7508-7509: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"fm") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7526-7527: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv b") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7544-7545: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv dk") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7562-7563: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv gh") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7580-7581: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv i") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7598-7599: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv l") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7616-7617: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv l\'") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7634-7635: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv mn") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7652-7653: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atsc 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7670-7671: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7688-7689: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 7") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7706-7707: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 8") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7724-7725: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"qam 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7742-7743: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"qam 8") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function i2c_unlock_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5362-5363: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "__tda18271_write_regs", "ERROR: idx = 0x%x, len = %d, i2c_transfer returned: %d\n", idx, max, ret) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_lock_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6987: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_init", "error %d on line %d\n", ret, 871) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 6085-6086: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_toggle_output", "error %d on line %d\n", ret, 87) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 6096-6098: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_toggle_output", "%s mode: xtal oscillator %s, slave tuner loop thru %s\n", __CPAchecker_TMP_3, __CPAchecker_TMP_5, __CPAchecker_TMP_7) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 4904: Unsupported feature (recursion): ret = tda18271_set_config(fe, enable); (line was originally pointer call(tda18271_set_config) ret = (*(fe->ops.i2c_gate_ctrl))(fe, enable);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            73842 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  72083 (98%)
  Because of loop head:            1394 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         365 (0%)
  Times precision was empty:       21704 (29%)
  Times precision was {false}:     279 (0%)
  Times result was cached:         51087 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      772 (1%)
  Times result was 'false':        1864 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         95759
  BDD entailment checks:           22375
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          8
Number of abstraction locations:          61
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         172800
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 164.41
Number of irrelevant predicates:          77856 (45%)
Number of preds handled by boolean abs:   1757 (1%)
  Total number of models for allsat:      769
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.752s
  Time for path formula creation:        6.544s
Time for strengthen operator:            0.378s
Time for prec operator:                 21.785s
  Time for abstraction:                 20.779s (Max:     0.430s, Count: 73842)
    Boolean abstraction:                 9.484s
    Solving time:                       11.711s (Max:     0.405s)
    Model enumeration time:              0.510s
    Time for BDD construction:           0.032s (Max:     0.005s)
Time for merge operator:                 0.360s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):    12.221s

Number of path formula cache hits:   701843 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.590s

Total number of created targets for pointer analysis: 15679
   Number of created targets for uf: *signed_int is 33
   Number of created targets for uf: *unsigned_char is 3421
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 1814


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1611 (count: 50369, min: 0, max: 74, avg: 0.03)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.678s
  Time for transition matches:                         0.360s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       605379 (count: 605379, min: 1, max: 1, avg: 1.00) [1 x 605379]

CPA algorithm statistics
------------------------
Number of iterations:            433508
Max size of waitlist:            174
Average size of waitlist:        85
Number of computed successors:   498111
Max successors for one state:    2
Number of times merged:          36692
Number of times stopped:         56415
Number of times breaked:         365

Total time for CPA algorithm:        40.451s (Max:     2.033s)
  Time for choose from waitlist:      0.121s
  Time for precision adjustment:     23.630s
  Time for transfer relation:        14.203s
  Time for merge operator:            0.723s
  Time for stop operator:             0.458s
  Time for adding to reached set:     0.432s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   365
Avg. length of target path (in blocks):                5007 (count: 365, min: 6, max: 17, avg: 13.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  48.841s
  Counterexample analysis:                            47.963s (Max:     0.285s, Calls: 365)
    Refinement sat check:                             44.208s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.079s
  ARG update:                                          0.603s

Length of refined path (in blocks):                    3557 (count: 365, min: 5, max: 16, avg: 9.75)
Number of affected states:                             1800 (count: 365, min: 1, max: 14, avg: 4.93)
Length (states) of path with itp 'true':               1392 (count: 365, min: 1, max: 7, avg: 3.81)
Length (states) of path with itp non-trivial itp:      1800 (count: 365, min: 1, max: 14, avg: 4.93)
Length (states) of path with itp 'false':               365 (count: 365, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 365, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1435 (count: 365, min: 0, max: 13, avg: 3.93)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                365
Number of successful refinements:     365
Number of failed refinements:         0
Max. size of reached set before ref.: 5698
Max. size of reached set after ref.:  5643
Avg. size of reached set before ref.: 3877.68
Avg. size of reached set after ref.:  2691.51

Total time for CEGAR algorithm:      90.804s
Time for refinements:                49.751s
Average time for refinement:          0.136s
Max time for refinement:              0.296s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          1192
  Total lines:            3050
  Line coverage:          0.391
  Visited conditions:     286
  Total conditions:       906
  Condition coverage:     0.316

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             6880
  Number of reached locations:   687 (16%)
    Avg states per location:     10
    Max states per location:     276 (at node N1323)
  Number of reached functions:   36 (27%)
  Number of partitions:          6877
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2580 (after lines 7261-7262), Function tda18271_set_analog_params called from node N3306, stack depth 2 [3c3167ce], stack [main, tda18271_set_analog_params]])
  Number of target states:       0
  Size of final wait list        87

Time for analysis setup:          4.604s
  Time for loading CPAs:          0.688s
  Time for loading parser:        0.573s
  Time for CFA construction:      3.235s
    Time for parsing file(s):     0.787s
    Time for AST to CFA:          1.182s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.886s
      Time for var class.:        0.496s
Time for Analysis:               90.804s
CPU time for analysis:           90.790s
Total time for CPAchecker:       95.412s
Total CPU time for CPAchecker:   95.380s
Time for statistics:              0.129s

Time for Garbage Collector:       1.662s (in 260 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     62MB (    59 MiB) avg;    113MB (   108 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8037MB (  7665 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
