scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tys7yal0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7508-7509: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"fm") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7526-7527: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv b") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7544-7545: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv dk") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7562-7563: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv gh") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7580-7581: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv i") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7598-7599: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv l") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7616-7617: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv l\'") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7634-7635: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atv mn") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7652-7653: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"atsc 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7670-7671: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7688-7689: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 7") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7706-7707: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"dvbt 8") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7724-7725: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"qam 6") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7742-7743: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_update_std_map", "Using custom std config for %s\n", (char *)"qam 8") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5524 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5097 (92%)
  Because of loop head:            391 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (1%)
  Times precision was empty:       2106 (38%)
  Times precision was {false}:     152 (3%)
  Times result was cached:         2754 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      512 (9%)
  Times result was 'false':        177 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         10222
  BDD entailment checks:           848
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       76
Number of predicates discovered:          5
Number of abstraction locations:          24
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         9418
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 14.18
Number of irrelevant predicates:          3462 (37%)
Number of preds handled by boolean abs:   1154 (12%)
  Total number of models for allsat:      512
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.235s
  Time for path formula creation:        3.202s
Time for strengthen operator:            0.085s
Time for prec operator:                 14.994s
  Time for abstraction:                 14.828s (Max:     0.495s, Count: 5524)
    Boolean abstraction:                10.550s
    Solving time:                       12.101s (Max:     0.472s)
    Model enumeration time:              0.443s
    Time for BDD construction:           0.031s (Max:     0.006s)
Time for merge operator:                 0.130s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):    12.544s

Number of path formula cache hits:   56167 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.996s

Total number of created targets for pointer analysis: 8289
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 2073


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1066 (count: 6817, min: 0, max: 114, avg: 0.16)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.125s
Automaton transfers with branching:                0
Automaton transfer successors:                        54555 (count: 54555, min: 1, max: 1, avg: 1.00) [1 x 54555]

CPA algorithm statistics
------------------------
Number of iterations:            34655
Max size of waitlist:            106
Average size of waitlist:        36
Number of computed successors:   42303
Max successors for one state:    2
Number of times merged:          4687
Number of times stopped:         5211
Number of times breaked:         36

Total time for CPA algorithm:        20.200s (Max:     1.410s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:     15.331s
  Time for transfer relation:         4.095s
  Time for merge operator:            0.255s
  Time for stop operator:             0.140s
  Time for adding to reached set:     0.083s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 424 (count: 36, min: 6, max: 17, avg: 11.78)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.249s
  Counterexample analysis:                             6.052s (Max:     0.292s, Calls: 36)
    Refinement sat check:                              5.634s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.023s
  ARG update:                                          0.128s

Length of refined path (in blocks):                     388 (count: 36, min: 5, max: 16, avg: 10.78)
Number of affected states:                              316 (count: 36, min: 3, max: 14, avg: 8.78)
Length (states) of path with itp 'true':                 36 (count: 36, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       316 (count: 36, min: 3, max: 14, avg: 8.78)
Length (states) of path with itp 'false':                36 (count: 36, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 36, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             280 (count: 36, min: 2, max: 13, avg: 7.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 1545
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 998.06
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      26.549s
Time for refinements:                 6.349s
Average time for refinement:          0.176s
Max time for refinement:              0.301s

Code Coverage
-----------------------------
  Function coverage:      0.182
  Visited lines:          1008
  Total lines:            3050
  Line coverage:          0.330
  Visited conditions:     204
  Total conditions:       906
  Condition coverage:     0.225

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             1201
  Number of reached locations:   448 (10%)
    Avg states per location:     2
    Max states per location:     73 (at node N1324)
  Number of reached functions:   24 (18%)
  Number of partitions:          1201
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        83

Time for analysis setup:          3.784s
  Time for loading CPAs:          0.589s
  Time for loading parser:        0.429s
  Time for CFA construction:      2.676s
    Time for parsing file(s):     0.662s
    Time for AST to CFA:          1.019s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.696s
      Time for var class.:        0.389s
Time for Analysis:               26.549s
CPU time for analysis:           26.550s
Total time for CPAchecker:       30.344s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.074s

Time for Garbage Collector:       0.313s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     49MB (    47 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
