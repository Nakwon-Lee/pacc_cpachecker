scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--tuners--tda18271.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vmv3s_k7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4795: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8196: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7059: Function pointer *(fe->callback) with type int (*)(void *, int, int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7187: Function pointer *(fe->ops.analog_ops.standby) with type void (*)(struct dvb_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5610-5611: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_standby_mode", "sm = %d, sm_lt = %d, sm_xt = %d\n", sm, sm_lt, sm_xt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5899: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 7261-7262: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_set_analog_params", "setting tda18271 to system %s\n", mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 7086-7087: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_tune", "freq = %d, ifc = %d, bw = %d, agc_mode = %d, std = %d\n", freq, __CPAchecker_TMP_1, bw, __CPAchecker_TMP_2, __CPAchecker_TMP_3) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7067: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_agc", "unsupported configuration: %d\n", priv->config) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7053: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "invoking callback\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7059: Ignoring function call through function pointer *(fe->callback): ret = (*(fe->callback))(priv->i2c_props.adap->algo_data, 0, 0, __CPAchecker_TMP_2); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7043: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\017", "tda18271_agc", "no agc configuration provided\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7094: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 945) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7099: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_tune", "failed to configure agc\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7182: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\f", "tda18271_set_params", "modulation type not supported!\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7187: Ignoring function call through function pointer *(fe->ops.analog_ops.standby): (*(fe->ops.analog_ops.standby))(fe); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function i2c_unlock_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 5362-5363: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "__tda18271_write_regs", "ERROR: idx = 0x%x, len = %d, i2c_transfer returned: %d\n", idx, max, ret) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 6987: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_init", "error %d on line %d\n", ret, 871) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7106: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_tune", "error %d on line %d\n", ret, 949) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 7194: Ignoring parameters passed as varargs to function _tda_printk: _tda_printk(priv, "\v", "tda18271_set_params", "error %d on line %d\n", ret, 1024) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_transfer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7837: Unsupported feature (recursion): tda18271_init(fe); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            9379 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8929 (95%)
  Because of loop head:            377 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (1%)
  Times precision was empty:       3171 (34%)
  Times precision was {false}:     186 (2%)
  Times result was cached:         5576 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      446 (5%)
  Times result was 'false':        683 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         8189
  BDD entailment checks:           1523
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          12
Number of abstraction locations:          73
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         14493
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 22.93
Number of irrelevant predicates:          6341 (44%)
Number of preds handled by boolean abs:   845 (6%)
  Total number of models for allsat:      461
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.03

Time for post operator:                  2.911s
  Time for path formula creation:        2.848s
Time for strengthen operator:            0.078s
Time for prec operator:                 12.993s
  Time for abstraction:                 12.780s (Max:     0.339s, Count: 9379)
    Boolean abstraction:                 8.320s
    Solving time:                       10.261s (Max:     0.322s)
    Model enumeration time:              0.281s
    Time for BDD construction:           0.026s (Max:     0.002s)
Time for merge operator:                 0.093s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):    10.542s

Number of path formula cache hits:   64099 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.517s

Total number of created targets for pointer analysis: 38702
   Number of created targets for uf: *unsigned_short_int is 27
   Number of created targets for uf: *signed_int is 33
   Number of created targets for uf: *unsigned_char is 15049
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 519


Number of BDD nodes:                               265
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1102 (count: 8451, min: 0, max: 119, avg: 0.13)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.185s
Automaton transfers with branching:                0
Automaton transfer successors:                        61769 (count: 61769, min: 1, max: 1, avg: 1.00) [1 x 61769]

CPA algorithm statistics
------------------------
Number of iterations:            42582
Max size of waitlist:            45
Average size of waitlist:        18
Number of computed successors:   48770
Max successors for one state:    2
Number of times merged:          3333
Number of times stopped:         4507
Number of times breaked:         73

Total time for CPA algorithm:        18.334s (Max:     1.051s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:     13.367s
  Time for transfer relation:         4.218s
  Time for merge operator:            0.159s
  Time for stop operator:             0.084s
  Time for adding to reached set:     0.125s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                1493 (count: 73, min: 6, max: 46, avg: 20.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.289s
  Counterexample analysis:                            12.117s (Max:     0.405s, Calls: 73)
    Refinement sat check:                             11.324s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.018s
  ARG update:                                          0.101s

Length of refined path (in blocks):                    1327 (count: 73, min: 5, max: 43, avg: 18.18)
Number of affected states:                              594 (count: 73, min: 0, max: 22, avg: 8.14)
Length (states) of path with itp 'true':                660 (count: 73, min: 1, max: 38, avg: 9.04)
Length (states) of path with itp non-trivial itp:       594 (count: 73, min: 0, max: 22, avg: 8.14)
Length (states) of path with itp 'false':                73 (count: 73, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 73, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:             524 (count: 73, min: 0, max: 21, avg: 7.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 3036
Max. size of reached set after ref.:  2803
Avg. size of reached set before ref.: 1333.79
Avg. size of reached set after ref.:  777.53

Total time for CEGAR algorithm:      30.888s
Time for refinements:                12.481s
Average time for refinement:          0.170s
Max time for refinement:              0.421s

Code Coverage
-----------------------------
  Function coverage:      0.303
  Visited lines:          1106
  Total lines:            3050
  Line coverage:          0.363
  Visited conditions:     204
  Total conditions:       906
  Condition coverage:     0.225

CPAchecker general statistics
-----------------------------
Number of program locations:     4267
Number of CFA edges:             5026
Number of relevant variables:    590
Number of functions:             132
Number of loops:                 19
Size of reached set:             2974
  Number of reached locations:   538 (13%)
    Avg states per location:     5
    Max states per location:     104 (at node N1323)
  Number of reached functions:   40 (30%)
  Number of partitions:          2968
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3333 (before line 8143), Function main called from node N3259, stack depth 1 [413bef78], stack [main]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          3.776s
  Time for loading CPAs:          0.633s
  Time for loading parser:        0.441s
  Time for CFA construction:      2.606s
    Time for parsing file(s):     0.649s
    Time for AST to CFA:          0.968s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.666s
      Time for var class.:        0.380s
Time for Analysis:               30.888s
CPU time for analysis:           30.890s
Total time for CPAchecker:       34.667s
Total CPU time for CPAchecker:   34.660s
Time for statistics:              0.076s

Time for Garbage Collector:       0.319s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     49MB (    47 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8011MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
