scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xwo4bru8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1073483 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  956598 (89%)
  Because of loop head:            110208 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6677 (1%)
  Times precision was empty:       195642 (18%)
  Times precision was {false}:     10690 (1%)
  Times result was cached:         850463 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16688 (2%)
  Times result was 'false':        75746 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1587028
  BDD entailment checks:           449486
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          12
Number of abstraction locations:          87
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         1523470
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 55.65
Number of irrelevant predicates:          695718 (46%)
Number of preds handled by boolean abs:   30029 (2%)
  Total number of models for allsat:      25618
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.54

Time for post operator:                 69.586s
  Time for path formula creation:       67.464s
Time for strengthen operator:            5.974s
Time for prec operator:                275.259s
  Time for abstraction:                266.014s (Max:     1.581s, Count: 1073483)
    Boolean abstraction:                47.940s
    Solving time:                       97.095s (Max:     0.054s)
    Model enumeration time:              7.221s
    Time for BDD construction:           0.412s (Max:     0.012s)
Time for merge operator:                11.635s
Time for coverage check:                 0.466s
  Time for BDD entailment checks:        0.286s
Total time for SMT solver (w/o itp):   104.316s

Number of path formula cache hits:   9087596 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    49.931s

Total number of created targets for pointer analysis: 1048907
   Number of created targets for uf: *unsigned_char is 2849
   Number of created targets for uf: *unsigned_int is 98182


Number of BDD nodes:                               429
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31260 (count: 815476, min: 0, max: 1073, avg: 0.04)
Time for BDD node cleanup:                             0.101s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.462s
  Time for transition matches:                         4.164s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                      8811428 (count: 8811428, min: 1, max: 1, avg: 1.00) [1 x 8811428]

CPA algorithm statistics
------------------------
Number of iterations:            5394233
Max size of waitlist:            915
Average size of waitlist:        403
Number of computed successors:   6448134
Max successors for one state:    2
Number of times merged:          568771
Number of times stopped:         818473
Number of times breaked:         6677

Total time for CPA algorithm:       455.367s (Max:     4.100s)
  Time for choose from waitlist:      1.522s
  Time for precision adjustment:    296.442s
  Time for transfer relation:       121.941s
  Time for merge operator:           16.581s
  Time for stop operator:             4.627s
  Time for adding to reached set:     5.201s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6677
Avg. length of target path (in blocks):              284819 (count: 6677, min: 10, max: 66, avg: 42.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 159.175s
  Counterexample analysis:                           147.312s (Max:     0.071s, Calls: 6677)
    Refinement sat check:                            114.196s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.152s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.477s
  Precision update:                                    0.852s
  ARG update:                                          8.935s

Length of refined path (in blocks):                  267776 (count: 6676, min: 9, max: 65, avg: 40.11)
Number of affected states:                            75556 (count: 6676, min: 3, max: 34, avg: 11.32)
Length (states) of path with itp 'true':             185544 (count: 6676, min: 5, max: 53, avg: 27.79)
Length (states) of path with itp non-trivial itp:     75556 (count: 6676, min: 3, max: 34, avg: 11.32)
Length (states) of path with itp 'false':              6676 (count: 6676, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6676, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           68880 (count: 6676, min: 2, max: 33, avg: 10.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6677
Number of successful refinements:     6676
Number of failed refinements:         0
Max. size of reached set before ref.: 95666
Max. size of reached set after ref.:  92752
Avg. size of reached set before ref.: 28358.81
Avg. size of reached set after ref.:  27531.14

Total time for CEGAR algorithm:     894.698s
Time for refinements:               311.633s
Average time for refinement:          0.046s
Max time for refinement:              0.572s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          1506
  Total lines:            5886
  Line coverage:          0.256
  Visited conditions:     234
  Total conditions:       1648
  Condition coverage:     0.142

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             94691
  Number of reached locations:   600 (7%)
    Avg states per location:     157
    Max states per location:     1880 (at node N4331)
  Number of reached functions:   34 (10%)
  Number of partitions:          94057
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5150 (before line 11487), Function pccard_get_next_tuple called from node N4969, stack depth 5 [29ebfb0d], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple]])
  Number of target states:       1
  Size of final wait list        315

Time for analysis setup:          5.625s
  Time for loading CPAs:          0.917s
  Time for loading parser:        0.561s
  Time for CFA construction:      4.052s
    Time for parsing file(s):     0.897s
    Time for AST to CFA:          1.458s
    Time for CFA sanity check:    0.490s
    Time for post-processing:     1.032s
      Time for var class.:        0.448s
Time for Analysis:              894.698s
CPU time for analysis:          894.600s
Total time for CPAchecker:      900.327s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.012s

Time for Garbage Collector:      33.866s (in 1261 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                957MB (   913 MiB) max;    464MB (   442 MiB) avg;    966MB (   921 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           990MB (   945 MiB) max;    683MB (   651 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8697MB (  8294 MiB) max;   8440MB (  8049 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
