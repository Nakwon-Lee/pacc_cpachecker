scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yi61kh5c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32954 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  29015 (88%)
  Because of loop head:            3447 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         492 (1%)
  Times precision was empty:       4761 (14%)
  Times precision was {false}:     177 (1%)
  Times result was cached:         27021 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      995 (3%)
  Times result was 'false':        4116 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         22081
  BDD entailment checks:           6587
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          75
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         103209
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 88.06
Number of irrelevant predicates:          54145 (52%)
Number of preds handled by boolean abs:   2370 (2%)
  Total number of models for allsat:      936
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  1.972s
  Time for path formula creation:        1.901s
Time for strengthen operator:            0.165s
Time for prec operator:                  7.253s
  Time for abstraction:                  6.781s (Max:     0.026s, Count: 32954)
    Boolean abstraction:                 1.923s
    Solving time:                        1.813s (Max:     0.023s)
    Model enumeration time:              0.142s
    Time for BDD construction:           0.058s (Max:     0.008s)
Time for merge operator:                 0.196s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     1.955s

Number of path formula cache hits:   196984 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.522s

Total number of created targets for pointer analysis: 2252
   Number of created targets for uf: *unsigned_char is 24
   Number of created targets for uf: *unsigned_int is 157


Number of BDD nodes:                               272
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2108 (count: 18611, min: 0, max: 156, avg: 0.11)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.414s
Automaton transfers with branching:                0
Automaton transfer successors:                       171874 (count: 171874, min: 1, max: 1, avg: 1.00) [1 x 171874]

CPA algorithm statistics
------------------------
Number of iterations:            120968
Max size of waitlist:            56
Average size of waitlist:        19
Number of computed successors:   140283
Max successors for one state:    2
Number of times merged:          7747
Number of times stopped:         12888
Number of times breaked:         492

Total time for CPA algorithm:        13.485s (Max:     0.480s)
  Time for choose from waitlist:      0.092s
  Time for precision adjustment:      7.963s
  Time for transfer relation:         4.195s
  Time for merge operator:            0.328s
  Time for stop operator:             0.215s
  Time for adding to reached set:     0.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   492
Avg. length of target path (in blocks):               17610 (count: 492, min: 10, max: 49, avg: 35.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.351s
  Counterexample analysis:                             9.507s (Max:     0.055s, Calls: 492)
    Refinement sat check:                              7.477s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.090s
  Precision update:                                    0.203s
  ARG update:                                          0.340s

Length of refined path (in blocks):                   17088 (count: 491, min: 9, max: 48, avg: 34.80)
Number of affected states:                             3869 (count: 491, min: 3, max: 28, avg: 7.88)
Length (states) of path with itp 'true':              12728 (count: 491, min: 5, max: 40, avg: 25.92)
Length (states) of path with itp non-trivial itp:      3869 (count: 491, min: 3, max: 28, avg: 7.88)
Length (states) of path with itp 'false':               491 (count: 491, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 491, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3378 (count: 491, min: 2, max: 27, avg: 6.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                492
Number of successful refinements:     491
Number of failed refinements:         0
Max. size of reached set before ref.: 4595
Max. size of reached set after ref.:  4206
Avg. size of reached set before ref.: 1784.58
Avg. size of reached set after ref.:  1537.13

Total time for CEGAR algorithm:      25.053s
Time for refinements:                11.082s
Average time for refinement:          0.022s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.096
  Visited lines:          1372
  Total lines:            5886
  Line coverage:          0.233
  Visited conditions:     196
  Total conditions:       1648
  Condition coverage:     0.119

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             4594
  Number of reached locations:   492 (6%)
    Avg states per location:     9
    Max states per location:     114 (at node N4716)
  Number of reached functions:   31 (10%)
  Number of partitions:          4577
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5184 (before line 11523), Function pccard_get_next_tuple called from node N4964, stack depth 5 [754d9b23], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple]])
  Number of target states:       1
  Size of final wait list        54

Time for analysis setup:          5.289s
  Time for loading CPAs:          0.912s
  Time for loading parser:        0.506s
  Time for CFA construction:      3.780s
    Time for parsing file(s):     0.799s
    Time for AST to CFA:          1.258s
    Time for CFA sanity check:    0.445s
    Time for post-processing:     1.145s
      Time for var class.:        0.500s
Time for Analysis:               25.053s
CPU time for analysis:           25.050s
Total time for CPAchecker:       30.345s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.168s

Time for Garbage Collector:       0.641s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     55MB (    52 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
