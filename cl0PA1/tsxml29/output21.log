scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1pd4118r/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48825 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  43264 (89%)
  Because of loop head:            5365 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         196 (0%)
  Times precision was empty:       2668 (5%)
  Times precision was {false}:     163 (0%)
  Times result was cached:         44666 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1328 (3%)
  Times result was 'false':        6756 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         34442
  BDD entailment checks:           9710
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          81
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         201599
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 135.21
Number of irrelevant predicates:          14815 (7%)
Number of preds handled by boolean abs:   4732 (2%)
  Total number of models for allsat:      1273
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.96

Time for post operator:                  2.890s
  Time for path formula creation:        2.774s
Time for strengthen operator:            0.196s
Time for prec operator:                 12.799s
  Time for abstraction:                 12.229s (Max:     0.034s, Count: 48825)
    Boolean abstraction:                 3.317s
    Solving time:                        3.054s (Max:     0.025s)
    Model enumeration time:              0.207s
    Time for BDD construction:           0.103s (Max:     0.012s)
Time for merge operator:                 0.262s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     3.261s

Number of path formula cache hits:   294002 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.276s

Total number of created targets for pointer analysis: 5073
   Number of created targets for uf: *unsigned_char is 24
   Number of created targets for uf: *unsigned_int is 421


Number of BDD nodes:                               276
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2786 (count: 21584, min: 0, max: 156, avg: 0.13)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.478s
Automaton transfers with branching:                0
Automaton transfer successors:                       262957 (count: 262957, min: 1, max: 1, avg: 1.00) [1 x 262957]

CPA algorithm statistics
------------------------
Number of iterations:            184415
Max size of waitlist:            126
Average size of waitlist:        30
Number of computed successors:   214905
Max successors for one state:    2
Number of times merged:          12366
Number of times stopped:         20907
Number of times breaked:         196

Total time for CPA algorithm:        21.079s (Max:     2.180s)
  Time for choose from waitlist:      0.097s
  Time for precision adjustment:     13.805s
  Time for transfer relation:         5.714s
  Time for merge operator:            0.439s
  Time for stop operator:             0.287s
  Time for adding to reached set:     0.208s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   196
Avg. length of target path (in blocks):                6195 (count: 196, min: 10, max: 62, avg: 31.61)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.907s
  Counterexample analysis:                             3.219s (Max:     0.041s, Calls: 196)
    Refinement sat check:                              2.498s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.102s
  ARG update:                                          0.399s

Length of refined path (in blocks):                    5999 (count: 196, min: 9, max: 61, avg: 30.61)
Number of affected states:                             3111 (count: 196, min: 3, max: 55, avg: 15.87)
Length (states) of path with itp 'true':               2692 (count: 196, min: 5, max: 50, avg: 13.73)
Length (states) of path with itp non-trivial itp:      3111 (count: 196, min: 3, max: 55, avg: 15.87)
Length (states) of path with itp 'false':               196 (count: 196, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 196, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2915 (count: 196, min: 2, max: 54, avg: 14.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                196
Number of successful refinements:     196
Number of failed refinements:         0
Max. size of reached set before ref.: 12793
Max. size of reached set after ref.:  957
Avg. size of reached set before ref.: 1115.47
Avg. size of reached set after ref.:  199.26

Total time for CEGAR algorithm:      25.281s
Time for refinements:                 4.162s
Average time for refinement:          0.021s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.093
  Visited lines:          1372
  Total lines:            5886
  Line coverage:          0.233
  Visited conditions:     198
  Total conditions:       1648
  Condition coverage:     0.120

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             7666
  Number of reached locations:   493 (6%)
    Avg states per location:     15
    Max states per location:     200 (at node N4716)
  Number of reached functions:   30 (9%)
  Number of partitions:          7666
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        75

Time for analysis setup:          5.071s
  Time for loading CPAs:          0.825s
  Time for loading parser:        0.458s
  Time for CFA construction:      3.697s
    Time for parsing file(s):     0.873s
    Time for AST to CFA:          1.284s
    Time for CFA sanity check:    0.398s
    Time for post-processing:     0.954s
      Time for var class.:        0.462s
Time for Analysis:               25.281s
CPU time for analysis:           25.280s
Total time for CPAchecker:       30.354s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.172s

Time for Garbage Collector:       1.084s (in 144 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                111MB (   106 MiB) max;     59MB (    57 MiB) avg;    119MB (   114 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
