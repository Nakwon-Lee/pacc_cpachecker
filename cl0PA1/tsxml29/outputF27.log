scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h2uxzmek/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2156762 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1845424 (86%)
  Because of loop head:            307168 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4170 (0%)
  Times precision was empty:       129530 (6%)
  Times precision was {false}:     562 (0%)
  Times result was cached:         2019446 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7224 (0%)
  Times result was 'false':        126568 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2700695
  BDD entailment checks:           667895
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          230
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         9783614
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1256.56
Number of irrelevant predicates:          547755 (6%)
Number of preds handled by boolean abs:   25623 (0%)
  Total number of models for allsat:      6970
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.96

Time for post operator:                 47.602s
  Time for path formula creation:       43.412s
Time for strengthen operator:            9.218s
Time for prec operator:                446.789s
  Time for abstraction:                429.840s (Max:     0.830s, Count: 2156762)
    Boolean abstraction:                24.992s
    Solving time:                       23.931s (Max:     0.063s)
    Model enumeration time:              1.462s
    Time for BDD construction:           0.210s (Max:     0.012s)
Time for merge operator:                 4.579s
Time for coverage check:                 0.761s
  Time for BDD entailment checks:        0.483s
Total time for SMT solver (w/o itp):    25.393s

Number of path formula cache hits:   18892013 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.449s

Total number of created targets for pointer analysis: 148199
   Number of created targets for uf: *unsigned_short_int is 10
   Number of created targets for uf: *unsigned_char is 962
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 5469
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               424
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14503 (count: 855462, min: 0, max: 159, avg: 0.02)
Time for BDD node cleanup:                             0.115s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.546s
  Time for transition matches:                         6.932s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                     16090966 (count: 16090966, min: 1, max: 1, avg: 1.00) [1 x 16090966]

CPA algorithm statistics
------------------------
Number of iterations:            9965926
Max size of waitlist:            1839
Average size of waitlist:        694
Number of computed successors:   11951689
Max successors for one state:    2
Number of times merged:          1016400
Number of times stopped:         1612893
Number of times breaked:         4170

Total time for CPA algorithm:       687.054s (Max:     6.772s)
  Time for choose from waitlist:      2.748s
  Time for precision adjustment:    493.667s
  Time for transfer relation:       145.460s
  Time for merge operator:           11.903s
  Time for stop operator:             9.289s
  Time for adding to reached set:     8.438s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4170
Avg. length of target path (in blocks):              170252 (count: 4170, min: 10, max: 69, avg: 40.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  70.388s
  Counterexample analysis:                            50.137s (Max:     0.084s, Calls: 4170)
    Refinement sat check:                             36.593s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.075s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.312s
  Precision update:                                    1.955s
  ARG update:                                         17.092s

Length of refined path (in blocks):                  165402 (count: 4169, min: 9, max: 68, avg: 39.67)
Number of affected states:                            50751 (count: 4169, min: 2, max: 50, avg: 12.17)
Length (states) of path with itp 'true':             110482 (count: 4169, min: 5, max: 47, avg: 26.50)
Length (states) of path with itp non-trivial itp:     50751 (count: 4169, min: 2, max: 50, avg: 12.17)
Length (states) of path with itp 'false':              4169 (count: 4169, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4169, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           46582 (count: 4169, min: 1, max: 49, avg: 11.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4170
Number of successful refinements:     4169
Number of failed refinements:         0
Max. size of reached set before ref.: 101159
Max. size of reached set after ref.:  77794
Avg. size of reached set before ref.: 23816.80
Avg. size of reached set after ref.:  21372.95

Total time for CEGAR algorithm:     894.749s
Time for refinements:               144.969s
Average time for refinement:          0.034s
Max time for refinement:              0.872s

Code Coverage
-----------------------------
  Function coverage:      0.210
  Visited lines:          2375
  Total lines:            5886
  Line coverage:          0.403
  Visited conditions:     610
  Total conditions:       1648
  Condition coverage:     0.370

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             74279
  Number of reached locations:   1464 (18%)
    Avg states per location:     50
    Max states per location:     845 (at node N7348)
  Number of reached functions:   68 (21%)
  Number of partitions:          73720
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N4566 (before line 10872), Function pcmcia_read_cis_mem called from node N4768, stack depth 6 [7d05d021], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_next_tuple, read_cis_cache, pcmcia_read_cis_mem]])
  Number of target states:       1
  Size of final wait list        1408

Time for analysis setup:          5.587s
  Time for loading CPAs:          0.955s
  Time for loading parser:        0.458s
  Time for CFA construction:      4.035s
    Time for parsing file(s):     0.919s
    Time for AST to CFA:          1.398s
    Time for CFA sanity check:    0.467s
    Time for post-processing:     1.142s
      Time for var class.:        0.533s
Time for Analysis:              894.749s
CPU time for analysis:          894.670s
Total time for CPAchecker:      900.339s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.961s

Time for Garbage Collector:      93.756s (in 5432 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                380MB (   363 MiB) max;    163MB (   155 MiB) avg;    388MB (   370 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     41MB (    39 MiB) avg;     47MB (    44 MiB) peak
Allocated heap memory:           387MB (   369 MiB) max;    244MB (   233 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8156MB (  7778 MiB) max;   8134MB (  7757 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
