scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dbmsuc7v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1439152 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1310058 (91%)
  Because of loop head:            113690 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15404 (1%)
  Times precision was empty:       352926 (25%)
  Times precision was {false}:     1773 (0%)
  Times result was cached:         1082504 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1949 (0%)
  Times result was 'false':        38370 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1783809
  BDD entailment checks:           619697
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          106
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         1432507
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 384.88
Number of irrelevant predicates:          652436 (46%)
Number of preds handled by boolean abs:   2302 (0%)
  Total number of models for allsat:      1928
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 28.633s
  Time for path formula creation:       26.365s
Time for strengthen operator:            5.616s
Time for prec operator:                113.679s
  Time for abstraction:                102.823s (Max:     0.372s, Count: 1439152)
    Boolean abstraction:                 6.125s
    Solving time:                       10.777s (Max:     0.017s)
    Model enumeration time:              0.300s
    Time for BDD construction:           0.065s (Max:     0.004s)
Time for merge operator:                 2.601s
Time for coverage check:                 0.520s
  Time for BDD entailment checks:        0.318s
Total time for SMT solver (w/o itp):    11.077s

Number of path formula cache hits:   11634892 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.429s

Total number of created targets for pointer analysis: 96753
   Number of created targets for uf: *unsigned_char is 2788
   Number of created targets for uf: *unsigned_int is 12


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3952 (count: 993484, min: 0, max: 120, avg: 0.00)
Time for BDD node cleanup:                             0.116s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.553s
  Time for transition matches:                         4.806s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                      9907116 (count: 9907116, min: 1, max: 1, avg: 1.00) [1 x 9907116]

CPA algorithm statistics
------------------------
Number of iterations:            6679480
Max size of waitlist:            55
Average size of waitlist:        33
Number of computed successors:   7693935
Max successors for one state:    2
Number of times merged:          582056
Number of times stopped:         942758
Number of times breaked:         15404

Total time for CPA algorithm:       260.842s (Max:     0.469s)
  Time for choose from waitlist:      2.007s
  Time for precision adjustment:    138.816s
  Time for transfer relation:        91.181s
  Time for merge operator:            7.620s
  Time for stop operator:             6.073s
  Time for adding to reached set:     4.753s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15404
Avg. length of target path (in blocks):              677041 (count: 15404, min: 10, max: 74, avg: 43.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 309.961s
  Counterexample analysis:                           295.079s (Max:     0.076s, Calls: 15404)
    Refinement sat check:                            228.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.288s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.995s
  Precision update:                                    1.619s
  ARG update:                                          9.192s

Length of refined path (in blocks):                  641640 (count: 15403, min: 9, max: 73, avg: 41.66)
Number of affected states:                           169617 (count: 15403, min: 3, max: 27, avg: 11.01)
Length (states) of path with itp 'true':             456620 (count: 15403, min: 5, max: 61, avg: 29.64)
Length (states) of path with itp non-trivial itp:    169617 (count: 15403, min: 3, max: 27, avg: 11.01)
Length (states) of path with itp 'false':             15403 (count: 15403, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15403, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          154214 (count: 15403, min: 2, max: 26, avg: 10.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15404
Number of successful refinements:     15403
Number of failed refinements:         0
Max. size of reached set before ref.: 43689
Max. size of reached set after ref.:  43257
Avg. size of reached set before ref.: 16709.36
Avg. size of reached set after ref.:  16274.64

Total time for CEGAR algorithm:     895.116s
Time for refinements:               485.222s
Average time for refinement:          0.031s
Max time for refinement:              0.367s

Code Coverage
-----------------------------
  Function coverage:      0.117
  Visited lines:          1483
  Total lines:            5886
  Line coverage:          0.252
  Visited conditions:     214
  Total conditions:       1648
  Condition coverage:     0.130

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             7767
  Number of reached locations:   595 (7%)
    Avg states per location:     13
    Max states per location:     150 (at node N4331)
  Number of reached functions:   38 (12%)
  Number of partitions:          7729
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4527 (before line 10831), Function pcmcia_read_cis_mem called from node N4768, stack depth 8 [1967d1e], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple, follow_link, read_cis_cache, pcmcia_read_cis_mem]])
  Number of target states:       1
  Size of final wait list        38

Time for analysis setup:          5.243s
  Time for loading CPAs:          0.898s
  Time for loading parser:        0.443s
  Time for CFA construction:      3.806s
    Time for parsing file(s):     0.788s
    Time for AST to CFA:          1.307s
    Time for CFA sanity check:    0.426s
    Time for post-processing:     1.133s
      Time for var class.:        0.454s
Time for Analysis:              895.116s
CPU time for analysis:          894.960s
Total time for CPAchecker:      900.362s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.195s

Time for Garbage Collector:      20.227s (in 2971 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                253MB (   241 MiB) max;    150MB (   143 MiB) avg;    265MB (   253 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           283MB (   270 MiB) max;    220MB (   210 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8160MB (  7782 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
