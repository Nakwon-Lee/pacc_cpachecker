scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_agqzgbtm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            18884 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  17173 (91%)
  Because of loop head:            1473 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         238 (1%)
  Times precision was empty:       4248 (22%)
  Times precision was {false}:     387 (2%)
  Times result was cached:         13840 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      409 (2%)
  Times result was 'false':        1067 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         14472
  BDD entailment checks:           3686
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          4
Number of abstraction locations:          63
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         16583
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 20.83
Number of irrelevant predicates:          4697 (28%)
Number of preds handled by boolean abs:   460 (3%)
  Total number of models for allsat:      419
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.130s
  Time for path formula creation:        3.039s
Time for strengthen operator:            0.112s
Time for prec operator:                  5.550s
  Time for abstraction:                  5.208s (Max:     0.031s, Count: 18884)
    Boolean abstraction:                 1.163s
    Solving time:                        2.180s (Max:     0.029s)
    Model enumeration time:              0.075s
    Time for BDD construction:           0.066s (Max:     0.013s)
Time for merge operator:                 0.249s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     2.255s

Number of path formula cache hits:   113470 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.686s

Total number of created targets for pointer analysis: 10917
   Number of created targets for uf: *unsigned_char is 253
   Number of created targets for uf: *unsigned_int is 385


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         838 (count: 12391, min: 0, max: 68, avg: 0.07)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.288s
Automaton transfers with branching:                0
Automaton transfer successors:                       111263 (count: 111263, min: 1, max: 1, avg: 1.00) [1 x 111263]

CPA algorithm statistics
------------------------
Number of iterations:            75563
Max size of waitlist:            47
Average size of waitlist:        30
Number of computed successors:   86545
Max successors for one state:    2
Number of times merged:          5393
Number of times stopped:         8398
Number of times breaked:         238

Total time for CPA algorithm:        12.205s (Max:     0.927s)
  Time for choose from waitlist:      0.086s
  Time for precision adjustment:      6.154s
  Time for transfer relation:         4.865s
  Time for merge operator:            0.393s
  Time for stop operator:             0.189s
  Time for adding to reached set:     0.161s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   238
Avg. length of target path (in blocks):               16006 (count: 238, min: 29, max: 97, avg: 67.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.212s
  Counterexample analysis:                            11.550s (Max:     0.101s, Calls: 238)
    Refinement sat check:                              8.866s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.126s
  ARG update:                                          0.230s

Length of refined path (in blocks):                   15677 (count: 238, min: 21, max: 96, avg: 65.87)
Number of affected states:                             3744 (count: 238, min: 0, max: 46, avg: 15.73)
Length (states) of path with itp 'true':              11695 (count: 238, min: 5, max: 75, avg: 49.14)
Length (states) of path with itp non-trivial itp:      3744 (count: 238, min: 0, max: 46, avg: 15.73)
Length (states) of path with itp 'false':               238 (count: 238, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 238, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3509 (count: 238, min: 0, max: 45, avg: 14.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                238
Number of successful refinements:     238
Number of failed refinements:         0
Max. size of reached set before ref.: 1458
Max. size of reached set after ref.:  1250
Avg. size of reached set before ref.: 996.57
Avg. size of reached set after ref.:  677.47

Total time for CEGAR algorithm:      25.128s
Time for refinements:                12.738s
Average time for refinement:          0.053s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.086
  Visited lines:          1328
  Total lines:            5886
  Line coverage:          0.226
  Visited conditions:     164
  Total conditions:       1648
  Condition coverage:     0.100

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             1135
  Number of reached locations:   407 (5%)
    Avg states per location:     2
    Max states per location:     14 (at node N4717)
  Number of reached functions:   28 (9%)
  Number of partitions:          1128
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [11399548], stack [main]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          5.204s
  Time for loading CPAs:          0.788s
  Time for loading parser:        0.452s
  Time for CFA construction:      3.840s
    Time for parsing file(s):     0.805s
    Time for AST to CFA:          1.279s
    Time for CFA sanity check:    0.419s
    Time for post-processing:     1.190s
      Time for var class.:        0.519s
Time for Analysis:               25.128s
CPU time for analysis:           25.130s
Total time for CPAchecker:       30.335s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.092s

Time for Garbage Collector:       0.496s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 78MB (    75 MiB) max;     55MB (    53 MiB) avg;     82MB (    79 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
