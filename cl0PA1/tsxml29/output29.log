scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dvvfrxx6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            50829 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45012 (89%)
  Because of loop head:            5628 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         189 (0%)
  Times precision was empty:       2693 (5%)
  Times precision was {false}:     157 (0%)
  Times result was cached:         46720 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1259 (2%)
  Times result was 'false':        7043 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         35908
  BDD entailment checks:           9966
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          78
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         210050
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 148.34
Number of irrelevant predicates:          15846 (8%)
Number of preds handled by boolean abs:   4271 (2%)
  Total number of models for allsat:      1220
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  2.773s
  Time for path formula creation:        2.628s
Time for strengthen operator:            0.209s
Time for prec operator:                 12.486s
  Time for abstraction:                 11.944s (Max:     0.038s, Count: 50829)
    Boolean abstraction:                 2.910s
    Solving time:                        2.764s (Max:     0.029s)
    Model enumeration time:              0.241s
    Time for BDD construction:           0.073s (Max:     0.008s)
Time for merge operator:                 0.271s
Time for coverage check:                 0.091s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     3.005s

Number of path formula cache hits:   313047 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.012s

Total number of created targets for pointer analysis: 3944
   Number of created targets for uf: *unsigned_char is 24
   Number of created targets for uf: *unsigned_int is 301


Number of BDD nodes:                               260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2664 (count: 21499, min: 0, max: 171, avg: 0.12)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.435s
Automaton transfers with branching:                0
Automaton transfer successors:                       274377 (count: 274377, min: 1, max: 1, avg: 1.00) [1 x 274377]

CPA algorithm statistics
------------------------
Number of iterations:            192212
Max size of waitlist:            93
Average size of waitlist:        25
Number of computed successors:   224016
Max successors for one state:    2
Number of times merged:          12971
Number of times stopped:         21877
Number of times breaked:         189

Total time for CPA algorithm:        20.834s (Max:     1.530s)
  Time for choose from waitlist:      0.108s
  Time for precision adjustment:     13.574s
  Time for transfer relation:         5.543s
  Time for merge operator:            0.479s
  Time for stop operator:             0.373s
  Time for adding to reached set:     0.238s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   189
Avg. length of target path (in blocks):                5562 (count: 189, min: 10, max: 53, avg: 29.43)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.153s
  Counterexample analysis:                             3.492s (Max:     0.055s, Calls: 189)
    Refinement sat check:                              2.783s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.116s
  ARG update:                                          0.380s

Length of refined path (in blocks):                    5373 (count: 189, min: 9, max: 52, avg: 28.43)
Number of affected states:                             3473 (count: 189, min: 3, max: 46, avg: 18.38)
Length (states) of path with itp 'true':               1711 (count: 189, min: 5, max: 39, avg: 9.05)
Length (states) of path with itp non-trivial itp:      3473 (count: 189, min: 3, max: 46, avg: 18.38)
Length (states) of path with itp 'false':               189 (count: 189, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 189, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3284 (count: 189, min: 2, max: 45, avg: 17.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                189
Number of successful refinements:     189
Number of failed refinements:         0
Max. size of reached set before ref.: 9234
Max. size of reached set after ref.:  1013
Avg. size of reached set before ref.: 1109.56
Avg. size of reached set after ref.:  107.45

Total time for CEGAR algorithm:      25.292s
Time for refinements:                 4.421s
Average time for refinement:          0.023s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.093
  Visited lines:          1370
  Total lines:            5886
  Line coverage:          0.233
  Visited conditions:     196
  Total conditions:       1648
  Condition coverage:     0.119

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             5698
  Number of reached locations:   489 (6%)
    Avg states per location:     11
    Max states per location:     147 (at node N4716)
  Number of reached functions:   30 (9%)
  Number of partitions:          5698
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        58

Time for analysis setup:          5.019s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.513s
  Time for CFA construction:      3.573s
    Time for parsing file(s):     0.718s
    Time for AST to CFA:          1.217s
    Time for CFA sanity check:    0.413s
    Time for post-processing:     1.109s
      Time for var class.:        0.465s
Time for Analysis:               25.292s
CPU time for analysis:           25.300s
Total time for CPAchecker:       30.314s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.181s

Time for Garbage Collector:       1.163s (in 148 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     58MB (    55 MiB) avg;    111MB (   106 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
