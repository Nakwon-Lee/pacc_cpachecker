scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ifl10pl6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1315681 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1193588 (91%)
  Because of loop head:            108593 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13500 (1%)
  Times precision was empty:       200346 (15%)
  Times precision was {false}:     1304 (0%)
  Times result was cached:         1112816 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1215 (0%)
  Times result was 'false':        70396 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1108964
  BDD entailment checks:           294492
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          4
Number of abstraction locations:          87
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1321059
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 524.44
Number of irrelevant predicates:          407289 (31%)
Number of preds handled by boolean abs:   1372 (0%)
  Total number of models for allsat:      1243
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 22.724s
  Time for path formula creation:       20.962s
Time for strengthen operator:            5.111s
Time for prec operator:                111.885s
  Time for abstraction:                102.548s (Max:     0.040s, Count: 1315681)
    Boolean abstraction:                 3.427s
    Solving time:                        7.200s (Max:     0.031s)
    Model enumeration time:              0.198s
    Time for BDD construction:           0.095s (Max:     0.012s)
Time for merge operator:                 1.977s
Time for coverage check:                 0.308s
  Time for BDD entailment checks:        0.206s
Total time for SMT solver (w/o itp):     7.398s

Number of path formula cache hits:   9447419 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.159s

Total number of created targets for pointer analysis: 91169
   Number of created targets for uf: *unsigned_char is 2196
   Number of created targets for uf: *unsigned_int is 813


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2438 (count: 508854, min: 0, max: 64, avg: 0.00)
Time for BDD node cleanup:                             0.081s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.354s
  Time for transition matches:                         4.208s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                      7934988 (count: 7934988, min: 1, max: 1, avg: 1.00) [1 x 7934988]

CPA algorithm statistics
------------------------
Number of iterations:            5418802
Max size of waitlist:            49
Average size of waitlist:        35
Number of computed successors:   6220831
Max successors for one state:    2
Number of times merged:          407236
Number of times stopped:         638676
Number of times breaked:         13500

Total time for CPA algorithm:       232.071s (Max:     0.885s)
  Time for choose from waitlist:      1.379s
  Time for precision adjustment:    131.750s
  Time for transfer relation:        77.881s
  Time for merge operator:            4.883s
  Time for stop operator:             4.181s
  Time for adding to reached set:     4.113s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13500
Avg. length of target path (in blocks):             1089437 (count: 13500, min: 29, max: 115, avg: 80.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 632.274s
  Counterexample analysis:                           617.547s (Max:     0.111s, Calls: 13500)
    Refinement sat check:                            459.855s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.393s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.111s
  Precision update:                                    1.368s
  ARG update:                                          7.458s

Length of refined path (in blocks):                 1068748 (count: 13499, min: 21, max: 114, avg: 79.17)
Number of affected states:                           222642 (count: 13499, min: 0, max: 50, avg: 16.49)
Length (states) of path with itp 'true':             832607 (count: 13499, min: 5, max: 93, avg: 61.68)
Length (states) of path with itp non-trivial itp:    222642 (count: 13499, min: 0, max: 50, avg: 16.49)
Length (states) of path with itp 'false':             13499 (count: 13499, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13499, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          209146 (count: 13499, min: 0, max: 49, avg: 15.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13500
Number of successful refinements:     13499
Number of failed refinements:         0
Max. size of reached set before ref.: 3718
Max. size of reached set after ref.:  3510
Avg. size of reached set before ref.: 2031.81
Avg. size of reached set after ref.:  1623.65

Total time for CEGAR algorithm:     894.944s
Time for refinements:               652.850s
Average time for refinement:          0.048s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          1451
  Total lines:            5886
  Line coverage:          0.247
  Visited conditions:     206
  Total conditions:       1648
  Condition coverage:     0.125

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             3558
  Number of reached locations:   545 (7%)
    Avg states per location:     6
    Max states per location:     48 (at node N4332)
  Number of reached functions:   34 (10%)
  Number of partitions:          3537
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [a457c2b], stack [main]])
  Number of target states:       1
  Size of final wait list        37

Time for analysis setup:          5.420s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.442s
  Time for CFA construction:      4.015s
    Time for parsing file(s):     0.810s
    Time for AST to CFA:          1.404s
    Time for CFA sanity check:    0.479s
    Time for post-processing:     1.206s
      Time for var class.:        0.478s
Time for Analysis:              894.944s
CPU time for analysis:          894.870s
Total time for CPAchecker:      900.366s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.126s

Time for Garbage Collector:       9.896s (in 2994 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     94MB (    89 MiB) avg;    139MB (   132 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     46MB (    44 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           168MB (   160 MiB) max;    131MB (   124 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    47 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8151MB (  7774 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
