scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o8qpv3gy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2932245 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2625328 (90%)
  Because of loop head:            306069 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         848 (0%)
  Times precision was empty:       49469 (2%)
  Times precision was {false}:     483 (0%)
  Times result was cached:         2874225 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8068 (0%)
  Times result was 'false':        332189 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         2313994
  BDD entailment checks:           635108
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          9
Number of abstraction locations:          209
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         13386783
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1565.52
Number of irrelevant predicates:          511144 (4%)
Number of preds handled by boolean abs:   34066 (0%)
  Total number of models for allsat:      7793
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 77.319s
  Time for path formula creation:       73.263s
Time for strengthen operator:            9.313s
Time for prec operator:                486.768s
  Time for abstraction:                463.672s (Max:     1.979s, Count: 2932245)
    Boolean abstraction:                28.948s
    Solving time:                       27.598s (Max:     0.039s)
    Model enumeration time:              1.594s
    Time for BDD construction:           0.212s (Max:     0.013s)
Time for merge operator:                 6.006s
Time for coverage check:                 0.618s
  Time for BDD entailment checks:        0.391s
Total time for SMT solver (w/o itp):    29.192s

Number of path formula cache hits:   18950014 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    32.535s

Total number of created targets for pointer analysis: 402456
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *unsigned_char is 33
   Number of created targets for uf: *(unsigned_char)* is 14
   Number of created targets for uf: *unsigned_int is 5091
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               409
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16173 (count: 738135, min: 0, max: 212, avg: 0.02)
Time for BDD node cleanup:                             0.096s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.707s
  Time for transition matches:                         8.796s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     16422812 (count: 16422812, min: 1, max: 1, avg: 1.00) [1 x 16422812]

CPA algorithm statistics
------------------------
Number of iterations:            11415074
Max size of waitlist:            1071
Average size of waitlist:        411
Number of computed successors:   13262403
Max successors for one state:    2
Number of times merged:          839443
Number of times stopped:         1432736
Number of times breaked:         848

Total time for CPA algorithm:       783.134s (Max:    88.791s)
  Time for choose from waitlist:      3.179s
  Time for precision adjustment:    538.434s
  Time for transfer relation:       190.871s
  Time for merge operator:           11.873s
  Time for stop operator:             8.571s
  Time for adding to reached set:    11.513s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   848
Avg. length of target path (in blocks):               47130 (count: 848, min: 10, max: 87, avg: 55.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.811s
  Counterexample analysis:                            17.362s (Max:     0.048s, Calls: 848)
    Refinement sat check:                             12.745s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.147s
  Precision update:                                    0.498s
  ARG update:                                         20.461s

Length of refined path (in blocks):                   46228 (count: 848, min: 9, max: 86, avg: 54.51)
Number of affected states:                            18992 (count: 848, min: 2, max: 75, avg: 22.40)
Length (states) of path with itp 'true':              26388 (count: 848, min: 5, max: 75, avg: 31.12)
Length (states) of path with itp non-trivial itp:     18992 (count: 848, min: 2, max: 75, avg: 22.40)
Length (states) of path with itp 'false':               848 (count: 848, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 848, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18144 (count: 848, min: 1, max: 74, avg: 21.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                848
Number of successful refinements:     848
Number of failed refinements:         0
Max. size of reached set before ref.: 577427
Max. size of reached set after ref.:  123287
Avg. size of reached set before ref.: 68248.12
Avg. size of reached set after ref.:  55216.85

Total time for CEGAR algorithm:     897.388s
Time for refinements:                80.667s
Average time for refinement:          0.095s
Max time for refinement:              1.719s

Code Coverage
-----------------------------
  Function coverage:      0.194
  Visited lines:          2098
  Total lines:            5886
  Line coverage:          0.356
  Visited conditions:     480
  Total conditions:       1648
  Condition coverage:     0.291

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             446962
  Number of reached locations:   1188 (14%)
    Avg states per location:     376
    Max states per location:     7518 (at node N4332)
  Number of reached functions:   63 (19%)
  Number of partitions:          445458
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6420 (before line 12832), Function pccard_validate_cis called from node N6640, stack depth 3 [ef65869], stack [main, pccard_show_cis, pccard_validate_cis]])
  Number of target states:       0
  Size of final wait list        315

Time for analysis setup:          5.130s
  Time for loading CPAs:          0.754s
  Time for loading parser:        0.460s
  Time for CFA construction:      3.799s
    Time for parsing file(s):     0.796s
    Time for AST to CFA:          1.426s
    Time for CFA sanity check:    0.369s
    Time for post-processing:     1.028s
      Time for var class.:        0.501s
Time for Analysis:              897.388s
CPU time for analysis:          897.330s
Total time for CPAchecker:      902.521s
Total CPU time for CPAchecker:  902.450s
Time for statistics:              2.640s

Time for Garbage Collector:     109.730s (in 3891 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1446MB (  1379 MiB) max;    329MB (   313 MiB) avg;   1500MB (  1431 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1664MB (  1587 MiB) max;    495MB (   472 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8099MB (  7724 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
