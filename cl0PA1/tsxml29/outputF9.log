scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mnkdqw90/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1202853 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1090474 (91%)
  Because of loop head:            106052 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6327 (1%)
  Times precision was empty:       130271 (11%)
  Times precision was {false}:     17132 (1%)
  Times result was cached:         1052266 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3184 (0%)
  Times result was 'false':        94578 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1747331
  BDD entailment checks:           449493
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          61
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         1276841
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 62.85
Number of irrelevant predicates:          1016394 (80%)
Number of preds handled by boolean abs:   3592 (0%)
  Total number of models for allsat:      3178
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 76.645s
  Time for path formula creation:       74.225s
Time for strengthen operator:            6.244s
Time for prec operator:                265.731s
  Time for abstraction:                255.925s (Max:     0.584s, Count: 1202853)
    Boolean abstraction:                12.789s
    Solving time:                       85.764s (Max:     0.042s)
    Model enumeration time:              0.549s
    Time for BDD construction:           0.100s (Max:     0.008s)
Time for merge operator:                12.028s
Time for coverage check:                 0.494s
  Time for BDD entailment checks:        0.313s
Total time for SMT solver (w/o itp):    86.313s

Number of path formula cache hits:   10200072 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    56.655s

Total number of created targets for pointer analysis: 1098644
   Number of created targets for uf: *unsigned_char is 2309
   Number of created targets for uf: *unsigned_int is 85786


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6438 (count: 689760, min: 0, max: 164, avg: 0.01)
Time for BDD node cleanup:                             0.116s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.737s
  Time for transition matches:                         4.942s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                      9978854 (count: 9978854, min: 1, max: 1, avg: 1.00) [1 x 9978854]

CPA algorithm statistics
------------------------
Number of iterations:            5885754
Max size of waitlist:            667
Average size of waitlist:        306
Number of computed successors:   7160157
Max successors for one state:    2
Number of times merged:          648919
Number of times stopped:         909933
Number of times breaked:         6327

Total time for CPA algorithm:       467.867s (Max:     2.331s)
  Time for choose from waitlist:      1.890s
  Time for precision adjustment:    293.811s
  Time for transfer relation:       133.388s
  Time for merge operator:           16.953s
  Time for stop operator:             5.276s
  Time for adding to reached set:     6.548s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6327
Avg. length of target path (in blocks):              292504 (count: 6327, min: 10, max: 63, avg: 46.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 167.444s
  Counterexample analysis:                           155.535s (Max:     0.081s, Calls: 6327)
    Refinement sat check:                            120.632s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.152s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.504s
  Precision update:                                    0.698s
  ARG update:                                          9.058s

Length of refined path (in blocks):                  284047 (count: 6327, min: 9, max: 62, avg: 44.89)
Number of affected states:                            79879 (count: 6327, min: 3, max: 27, avg: 12.63)
Length (states) of path with itp 'true':             197841 (count: 6327, min: 5, max: 49, avg: 31.27)
Length (states) of path with itp non-trivial itp:     79879 (count: 6327, min: 3, max: 27, avg: 12.63)
Length (states) of path with itp 'false':              6327 (count: 6327, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6327, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           73552 (count: 6327, min: 2, max: 26, avg: 11.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6327
Number of successful refinements:     6327
Number of failed refinements:         0
Max. size of reached set before ref.: 76715
Max. size of reached set after ref.:  75155
Avg. size of reached set before ref.: 30793.22
Avg. size of reached set after ref.:  29821.79

Total time for CEGAR algorithm:     895.207s
Time for refinements:               308.324s
Average time for refinement:          0.048s
Max time for refinement:              1.074s

Code Coverage
-----------------------------
  Function coverage:      0.080
  Visited lines:          1354
  Total lines:            5886
  Line coverage:          0.230
  Visited conditions:     178
  Total conditions:       1648
  Condition coverage:     0.108

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             9423
  Number of reached locations:   422 (5%)
    Avg states per location:     22
    Max states per location:     183 (at node N4716)
  Number of reached functions:   26 (8%)
  Number of partitions:          9410
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6713 (before line 13149), Function main called from node N6685, stack depth 1 [11399548], stack [main]])
  Number of target states:       0
  Size of final wait list        296

Time for analysis setup:          5.118s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.467s
  Time for CFA construction:      3.718s
    Time for parsing file(s):     0.802s
    Time for AST to CFA:          1.263s
    Time for CFA sanity check:    0.425s
    Time for post-processing:     1.075s
      Time for var class.:        0.469s
Time for Analysis:              895.207s
CPU time for analysis:          895.100s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.189s

Time for Garbage Collector:      29.446s (in 1426 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                912MB (   870 MiB) max;    432MB (   412 MiB) avg;    921MB (   878 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:          1031MB (   983 MiB) max;    652MB (   622 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8368MB (  7980 MiB) max;   8261MB (  7878 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
