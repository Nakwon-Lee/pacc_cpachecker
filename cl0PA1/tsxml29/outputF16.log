scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ccnv60x7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1337887 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1213627 (91%)
  Because of loop head:            110561 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13699 (1%)
  Times precision was empty:       202947 (15%)
  Times precision was {false}:     1319 (0%)
  Times result was cached:         1132364 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1257 (0%)
  Times result was 'false':        71514 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         1129572
  BDD entailment checks:           300074
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          4
Number of abstraction locations:          87
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1344799
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 522.05
Number of irrelevant predicates:          414859 (31%)
Number of preds handled by boolean abs:   1420 (0%)
  Total number of models for allsat:      1285
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 23.013s
  Time for path formula creation:       21.294s
Time for strengthen operator:            4.600s
Time for prec operator:                113.575s
  Time for abstraction:                103.811s (Max:     0.041s, Count: 1337887)
    Boolean abstraction:                 3.658s
    Solving time:                        7.609s (Max:     0.039s)
    Model enumeration time:              0.154s
    Time for BDD construction:           0.074s (Max:     0.011s)
Time for merge operator:                 2.112s
Time for coverage check:                 0.322s
  Time for BDD entailment checks:        0.227s
Total time for SMT solver (w/o itp):     7.763s

Number of path formula cache hits:   9602009 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.419s

Total number of created targets for pointer analysis: 100252
   Number of created targets for uf: *unsigned_char is 2427
   Number of created targets for uf: *unsigned_int is 897


Number of BDD nodes:                               207
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2534 (count: 517364, min: 0, max: 64, avg: 0.00)
Time for BDD node cleanup:                             0.089s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.099s
  Time for transition matches:                         3.838s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.028s
Automaton transfers with branching:                0
Automaton transfer successors:                      8074375 (count: 8074375, min: 1, max: 1, avg: 1.00) [1 x 8074375]

CPA algorithm statistics
------------------------
Number of iterations:            5513215
Max size of waitlist:            49
Average size of waitlist:        35
Number of computed successors:   6329649
Max successors for one state:    2
Number of times merged:          414749
Number of times stopped:         650516
Number of times breaked:         13699

Total time for CPA algorithm:       231.682s (Max:     0.986s)
  Time for choose from waitlist:      1.273s
  Time for precision adjustment:    133.458s
  Time for transfer relation:        75.724s
  Time for merge operator:            5.096s
  Time for stop operator:             4.048s
  Time for adding to reached set:     4.146s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13699
Avg. length of target path (in blocks):             1106162 (count: 13699, min: 29, max: 115, avg: 80.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 631.255s
  Counterexample analysis:                           616.283s (Max:     0.116s, Calls: 13699)
    Refinement sat check:                            455.984s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.396s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.199s
  Precision update:                                    1.405s
  ARG update:                                          7.568s

Length of refined path (in blocks):                 1085146 (count: 13698, min: 21, max: 114, avg: 79.22)
Number of affected states:                           225977 (count: 13698, min: 0, max: 50, avg: 16.50)
Length (states) of path with itp 'true':             845471 (count: 13698, min: 5, max: 93, avg: 61.72)
Length (states) of path with itp non-trivial itp:    225977 (count: 13698, min: 0, max: 50, avg: 16.50)
Length (states) of path with itp 'false':             13698 (count: 13698, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13698, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          212282 (count: 13698, min: 0, max: 49, avg: 15.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13699
Number of successful refinements:     13698
Number of failed refinements:         0
Max. size of reached set before ref.: 3960
Max. size of reached set after ref.:  3613
Avg. size of reached set before ref.: 2053.29
Avg. size of reached set after ref.:  1644.07

Total time for CEGAR algorithm:     895.121s
Time for refinements:               653.076s
Average time for refinement:          0.047s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      0.105
  Visited lines:          1450
  Total lines:            5886
  Line coverage:          0.246
  Visited conditions:     206
  Total conditions:       1648
  Condition coverage:     0.125

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             3043
  Number of reached locations:   545 (7%)
    Avg states per location:     5
    Max states per location:     50 (at node N4331)
  Number of reached functions:   34 (10%)
  Number of partitions:          3030
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4527 (before line 10831), Function pcmcia_read_cis_mem called from node N4768, stack depth 6 [3484c86d], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_next_tuple, read_cis_cache, pcmcia_read_cis_mem]])
  Number of target states:       1
  Size of final wait list        13

Time for analysis setup:          5.186s
  Time for loading CPAs:          0.870s
  Time for loading parser:        0.524s
  Time for CFA construction:      3.688s
    Time for parsing file(s):     0.771s
    Time for AST to CFA:          1.383s
    Time for CFA sanity check:    0.395s
    Time for post-processing:     0.982s
      Time for var class.:        0.459s
Time for Analysis:              895.121s
CPU time for analysis:          895.040s
Total time for CPAchecker:      900.310s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.128s

Time for Garbage Collector:      10.176s (in 3143 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     87MB (    83 MiB) avg;    126MB (   120 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8219MB (  7839 MiB) max;   8150MB (  7772 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
