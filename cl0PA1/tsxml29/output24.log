scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zogueohn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34931 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31828 (91%)
  Because of loop head:            2734 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         369 (1%)
  Times precision was empty:       9536 (27%)
  Times precision was {false}:     276 (1%)
  Times result was cached:         24677 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      442 (1%)
  Times result was 'false':        965 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         41841
  BDD entailment checks:           14199
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          92
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         32324
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 45.02
Number of irrelevant predicates:          14167 (44%)
Number of preds handled by boolean abs:   547 (2%)
  Total number of models for allsat:      439
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  3.259s
  Time for path formula creation:        3.142s
Time for strengthen operator:            0.285s
Time for prec operator:                  6.232s
  Time for abstraction:                  5.791s (Max:     0.021s, Count: 34931)
    Boolean abstraction:                 1.199s
    Solving time:                        1.659s (Max:     0.017s)
    Model enumeration time:              0.060s
    Time for BDD construction:           0.026s (Max:     0.006s)
Time for merge operator:                 0.332s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     1.719s

Number of path formula cache hits:   264255 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.575s

Total number of created targets for pointer analysis: 6776
   Number of created targets for uf: *unsigned_char is 45
   Number of created targets for uf: *unsigned_int is 12


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         954 (count: 27830, min: 0, max: 128, avg: 0.03)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.555s
  Time for transition matches:                         0.249s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                       240799 (count: 240799, min: 1, max: 1, avg: 1.00) [1 x 240799]

CPA algorithm statistics
------------------------
Number of iterations:            161420
Max size of waitlist:            42
Average size of waitlist:        26
Number of computed successors:   185747
Max successors for one state:    2
Number of times merged:          13821
Number of times stopped:         22322
Number of times breaked:         369

Total time for CPA algorithm:        15.145s (Max:     0.509s)
  Time for choose from waitlist:      0.084s
  Time for precision adjustment:      7.148s
  Time for transfer relation:         6.283s
  Time for merge operator:            0.549s
  Time for stop operator:             0.259s
  Time for adding to reached set:     0.240s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   369
Avg. length of target path (in blocks):               14655 (count: 369, min: 10, max: 68, avg: 39.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.809s
  Counterexample analysis:                             8.112s (Max:     0.056s, Calls: 369)
    Refinement sat check:                              6.387s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.087s
  ARG update:                                          0.369s

Length of refined path (in blocks):                   13826 (count: 369, min: 9, max: 67, avg: 37.47)
Number of affected states:                             4093 (count: 369, min: 3, max: 27, avg: 11.09)
Length (states) of path with itp 'true':               9364 (count: 369, min: 5, max: 55, avg: 25.38)
Length (states) of path with itp non-trivial itp:      4093 (count: 369, min: 3, max: 27, avg: 11.09)
Length (states) of path with itp 'false':               369 (count: 369, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 369, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3724 (count: 369, min: 2, max: 26, avg: 10.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                369
Number of successful refinements:     369
Number of failed refinements:         0
Max. size of reached set before ref.: 4764
Max. size of reached set after ref.:  4477
Avg. size of reached set before ref.: 1931.63
Avg. size of reached set after ref.:  1504.50

Total time for CEGAR algorithm:      25.134s
Time for refinements:                 9.602s
Average time for refinement:          0.026s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.114
  Visited lines:          1472
  Total lines:            5886
  Line coverage:          0.250
  Visited conditions:     210
  Total conditions:       1648
  Condition coverage:     0.127

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             4849
  Number of reached locations:   582 (7%)
    Avg states per location:     8
    Max states per location:     95 (at node N4332)
  Number of reached functions:   37 (11%)
  Number of partitions:          4826
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4527 (before line 10831), Function pcmcia_read_cis_mem called from node N4768, stack depth 8 [5c5ddb19], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple, follow_link, read_cis_cache, pcmcia_read_cis_mem]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          5.194s
  Time for loading CPAs:          0.846s
  Time for loading parser:        0.424s
  Time for CFA construction:      3.835s
    Time for parsing file(s):     0.755s
    Time for AST to CFA:          1.284s
    Time for CFA sanity check:    0.450s
    Time for post-processing:     1.211s
      Time for var class.:        0.525s
Time for Analysis:               25.134s
CPU time for analysis:           25.130s
Total time for CPAchecker:       30.332s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.139s

Time for Garbage Collector:       0.744s (in 96 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     55MB (    53 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8085MB (  7710 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
