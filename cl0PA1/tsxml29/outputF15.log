scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9rip67m_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1943051 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1704800 (88%)
  Because of loop head:            234681 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3570 (0%)
  Times precision was empty:       111019 (6%)
  Times precision was {false}:     785 (0%)
  Times result was cached:         1823949 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7298 (0%)
  Times result was 'false':        119788 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         2544836
  BDD entailment checks:           569654
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          216
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         8748141
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1082.29
Number of irrelevant predicates:          473540 (5%)
Number of preds handled by boolean abs:   24946 (0%)
  Total number of models for allsat:      7085
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 45.836s
  Time for path formula creation:       42.306s
Time for strengthen operator:            8.818s
Time for prec operator:                441.004s
  Time for abstraction:                425.552s (Max:     0.534s, Count: 1943051)
    Boolean abstraction:                23.026s
    Solving time:                       22.824s (Max:     0.069s)
    Model enumeration time:              1.336s
    Time for BDD construction:           0.167s (Max:     0.012s)
Time for merge operator:                 4.689s
Time for coverage check:                 0.704s
  Time for BDD entailment checks:        0.419s
Total time for SMT solver (w/o itp):    24.160s

Number of path formula cache hits:   17810600 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.383s

Total number of created targets for pointer analysis: 165724
   Number of created targets for uf: *unsigned_short_int is 10
   Number of created targets for uf: *unsigned_char is 974
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 6408
   Number of created targets for uf: *char is 361


Number of BDD nodes:                               425
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14637 (count: 737458, min: 0, max: 209, avg: 0.02)
Time for BDD node cleanup:                             0.141s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.668s
  Time for transition matches:                         6.807s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                     15255063 (count: 15255063, min: 1, max: 1, avg: 1.00) [1 x 15255063]

CPA algorithm statistics
------------------------
Number of iterations:            9201020
Max size of waitlist:            1532
Average size of waitlist:        738
Number of computed successors:   11106493
Max successors for one state:    2
Number of times merged:          987591
Number of times stopped:         1508500
Number of times breaked:         3570

Total time for CPA algorithm:       666.053s (Max:     5.806s)
  Time for choose from waitlist:      2.855s
  Time for precision adjustment:    480.762s
  Time for transfer relation:       138.665s
  Time for merge operator:           11.742s
  Time for stop operator:             7.701s
  Time for adding to reached set:     9.288s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3570
Avg. length of target path (in blocks):              149737 (count: 3570, min: 10, max: 68, avg: 41.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  69.648s
  Counterexample analysis:                            51.463s (Max:     0.066s, Calls: 3570)
    Refinement sat check:                             38.451s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.090s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.327s
  Precision update:                                    2.144s
  ARG update:                                         14.856s

Length of refined path (in blocks):                  143556 (count: 3569, min: 9, max: 62, avg: 40.22)
Number of affected states:                            46534 (count: 3569, min: 2, max: 54, avg: 13.04)
Length (states) of path with itp 'true':              93453 (count: 3569, min: 5, max: 47, avg: 26.18)
Length (states) of path with itp non-trivial itp:     46534 (count: 3569, min: 2, max: 54, avg: 13.04)
Length (states) of path with itp 'false':              3569 (count: 3569, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3569, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           42965 (count: 3569, min: 1, max: 53, avg: 12.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3570
Number of successful refinements:     3569
Number of failed refinements:         0
Max. size of reached set before ref.: 78877
Max. size of reached set after ref.:  67966
Avg. size of reached set before ref.: 32673.44
Avg. size of reached set after ref.:  30026.89

Total time for CEGAR algorithm:     894.814s
Time for refinements:               154.857s
Average time for refinement:          0.043s
Max time for refinement:              0.754s

Code Coverage
-----------------------------
  Function coverage:      0.210
  Visited lines:          2349
  Total lines:            5886
  Line coverage:          0.399
  Visited conditions:     610
  Total conditions:       1648
  Condition coverage:     0.370

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             63994
  Number of reached locations:   1445 (17%)
    Avg states per location:     44
    Max states per location:     821 (at node N7348)
  Number of reached functions:   68 (21%)
  Number of partitions:          63677
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4558 (before line 10863), Function pcmcia_read_cis_mem called from node N4768, stack depth 6 [aecece6], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_next_tuple, read_cis_cache, pcmcia_read_cis_mem]])
  Number of target states:       1
  Size of final wait list        1325

Time for analysis setup:          5.526s
  Time for loading CPAs:          1.020s
  Time for loading parser:        0.508s
  Time for CFA construction:      3.868s
    Time for parsing file(s):     0.785s
    Time for AST to CFA:          1.396s
    Time for CFA sanity check:    0.442s
    Time for post-processing:     1.083s
      Time for var class.:        0.461s
Time for Analysis:              894.815s
CPU time for analysis:          894.730s
Total time for CPAchecker:      900.344s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.723s

Time for Garbage Collector:      80.793s (in 5198 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                385MB (   368 MiB) max;    165MB (   157 MiB) avg;    392MB (   374 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           395MB (   377 MiB) max;    248MB (   237 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8156MB (  7778 MiB) max;   8130MB (  7753 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
