scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7s70tsyn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3245991 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2914857 (90%)
  Because of loop head:            330640 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         494 (0%)
  Times precision was empty:       32661 (1%)
  Times precision was {false}:     490 (0%)
  Times result was cached:         3203692 (99%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9148 (0%)
  Times result was 'false':        357489 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         2576969
  BDD entailment checks:           674961
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          9
Number of abstraction locations:          218
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         15079244
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1564.56
Number of irrelevant predicates:          522522 (3%)
Number of preds handled by boolean abs:   41334 (0%)
  Total number of models for allsat:      8883
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.97

Time for post operator:                 84.387s
  Time for path formula creation:       79.401s
Time for strengthen operator:           10.456s
Time for prec operator:                520.090s
  Time for abstraction:                494.046s (Max:     2.296s, Count: 3245991)
    Boolean abstraction:                34.388s
    Solving time:                       32.995s (Max:     0.031s)
    Model enumeration time:              1.781s
    Time for BDD construction:           0.211s (Max:     0.010s)
Time for merge operator:                 6.859s
Time for coverage check:                 0.706s
  Time for BDD entailment checks:        0.436s
Total time for SMT solver (w/o itp):    34.776s

Number of path formula cache hits:   21343914 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    30.993s

Total number of created targets for pointer analysis: 407660
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *unsigned_char is 35
   Number of created targets for uf: *(unsigned_char)* is 26
   Number of created targets for uf: *unsigned_int is 5250
   Number of created targets for uf: *char is 541


Number of BDD nodes:                               358
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18338 (count: 767740, min: 0, max: 328, avg: 0.02)
Time for BDD node cleanup:                             0.080s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.752s
  Time for transition matches:                         9.046s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     18391321 (count: 18391321, min: 1, max: 1, avg: 1.00) [1 x 18391321]

CPA algorithm statistics
------------------------
Number of iterations:            12785213
Max size of waitlist:            1072
Average size of waitlist:        397
Number of computed successors:   14838002
Max successors for one state:    2
Number of times merged:          951004
Number of times stopped:         1611925
Number of times breaked:         494

Total time for CPA algorithm:       849.374s (Max:    93.574s)
  Time for choose from waitlist:      4.136s
  Time for precision adjustment:    579.287s
  Time for transfer relation:       208.126s
  Time for merge operator:           14.695s
  Time for stop operator:             9.861s
  Time for adding to reached set:    13.083s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   494
Avg. length of target path (in blocks):               22158 (count: 494, min: 10, max: 71, avg: 44.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  33.797s
  Counterexample analysis:                             9.613s (Max:     0.053s, Calls: 494)
    Refinement sat check:                              7.351s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.152s
  Precision update:                                    0.286s
  ARG update:                                         23.517s

Length of refined path (in blocks):                   21640 (count: 494, min: 9, max: 70, avg: 43.81)
Number of affected states:                            16678 (count: 494, min: 2, max: 64, avg: 33.76)
Length (states) of path with itp 'true':               4468 (count: 494, min: 5, max: 44, avg: 9.04)
Length (states) of path with itp non-trivial itp:     16678 (count: 494, min: 2, max: 64, avg: 33.76)
Length (states) of path with itp 'false':               494 (count: 494, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 494, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           16184 (count: 494, min: 1, max: 63, avg: 32.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                494
Number of successful refinements:     494
Number of failed refinements:         0
Max. size of reached set before ref.: 569008
Max. size of reached set after ref.:  123215
Avg. size of reached set before ref.: 33460.02
Avg. size of reached set after ref.:  7968.51

Total time for CEGAR algorithm:     894.423s
Time for refinements:                42.314s
Average time for refinement:          0.085s
Max time for refinement:              1.402s

Code Coverage
-----------------------------
  Function coverage:      0.194
  Visited lines:          2098
  Total lines:            5886
  Line coverage:          0.356
  Visited conditions:     480
  Total conditions:       1648
  Condition coverage:     0.291

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             275782
  Number of reached locations:   1188 (14%)
    Avg states per location:     232
    Max states per location:     3614 (at node N4332)
  Number of reached functions:   63 (19%)
  Number of partitions:          275420
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4558 (before line 10863), Function pcmcia_read_cis_mem called from node N4768, stack depth 7 [6175b406], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple, read_cis_cache, pcmcia_read_cis_mem]])
  Number of target states:       0
  Size of final wait list        707

Time for analysis setup:          5.669s
  Time for loading CPAs:          0.913s
  Time for loading parser:        0.572s
  Time for CFA construction:      4.071s
    Time for parsing file(s):     0.926s
    Time for AST to CFA:          1.475s
    Time for CFA sanity check:    0.410s
    Time for post-processing:     1.058s
      Time for var class.:        0.502s
Time for Analysis:              894.423s
CPU time for analysis:          894.360s
Total time for CPAchecker:      900.096s
Total CPU time for CPAchecker:  900.020s
Time for statistics:              1.779s

Time for Garbage Collector:     119.711s (in 3941 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1479MB (  1411 MiB) max;    405MB (   386 MiB) avg;   1519MB (  1448 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1522MB (  1452 MiB) max;    608MB (   580 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8111MB (  7735 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
