scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_atq0a370/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1718450 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1473763 (86%)
  Because of loop head:            240777 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3910 (0%)
  Times precision was empty:       77552 (5%)
  Times precision was {false}:     501 (0%)
  Times result was cached:         1633074 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7323 (0%)
  Times result was 'false':        116091 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         2257255
  BDD entailment checks:           531189
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          223
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         7945848
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 1015.57
Number of irrelevant predicates:          366337 (5%)
Number of preds handled by boolean abs:   26667 (0%)
  Total number of models for allsat:      6981
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.95

Time for post operator:                 34.571s
  Time for path formula creation:       31.685s
Time for strengthen operator:            7.814s
Time for prec operator:                401.079s
  Time for abstraction:                387.442s (Max:     0.484s, Count: 1718450)
    Boolean abstraction:                30.632s
    Solving time:                       29.105s (Max:     0.250s)
    Model enumeration time:              1.792s
    Time for BDD construction:           0.199s (Max:     0.012s)
Time for merge operator:                 3.775s
Time for coverage check:                 0.599s
  Time for BDD entailment checks:        0.370s
Total time for SMT solver (w/o itp):    30.897s

Number of path formula cache hits:   15521925 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.445s

Total number of created targets for pointer analysis: 121738
   Number of created targets for uf: *unsigned_short_int is 10
   Number of created targets for uf: *unsigned_char is 910
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *unsigned_int is 5259
   Number of created targets for uf: *char is 361


Number of BDD nodes:                               388
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14570 (count: 663199, min: 0, max: 180, avg: 0.02)
Time for BDD node cleanup:                             0.111s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.663s
  Time for transition matches:                         5.864s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                     13254783 (count: 13254783, min: 1, max: 1, avg: 1.00) [1 x 13254783]

CPA algorithm statistics
------------------------
Number of iterations:            8105358
Max size of waitlist:            2069
Average size of waitlist:        666
Number of computed successors:   9774791
Max successors for one state:    2
Number of times merged:          863033
Number of times stopped:         1341924
Number of times breaked:         3910

Total time for CPA algorithm:       590.807s (Max:    17.426s)
  Time for choose from waitlist:      2.385s
  Time for precision adjustment:    436.546s
  Time for transfer relation:       114.896s
  Time for merge operator:            9.556s
  Time for stop operator:             6.667s
  Time for adding to reached set:     8.227s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3910
Avg. length of target path (in blocks):              171756 (count: 3910, min: 10, max: 69, avg: 43.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  73.244s
  Counterexample analysis:                            57.245s (Max:     0.071s, Calls: 3910)
    Refinement sat check:                             42.344s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.090s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.328s
  Precision update:                                    1.972s
  ARG update:                                         12.750s

Length of refined path (in blocks):                  167662 (count: 3910, min: 9, max: 68, avg: 42.88)
Number of affected states:                            53447 (count: 3910, min: 0, max: 62, avg: 13.67)
Length (states) of path with itp 'true':             110305 (count: 3910, min: 5, max: 55, avg: 28.21)
Length (states) of path with itp non-trivial itp:     53447 (count: 3910, min: 0, max: 62, avg: 13.67)
Length (states) of path with itp 'false':              3910 (count: 3910, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3910, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           49555 (count: 3910, min: 0, max: 61, avg: 12.67)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3910
Number of successful refinements:     3910
Number of failed refinements:         0
Max. size of reached set before ref.: 101141
Max. size of reached set after ref.:  84011
Avg. size of reached set before ref.: 41164.29
Avg. size of reached set after ref.:  39057.47

Total time for CEGAR algorithm:     895.134s
Time for refinements:               195.819s
Average time for refinement:          0.050s
Max time for refinement:              0.386s

Code Coverage
-----------------------------
  Function coverage:      0.213
  Visited lines:          2372
  Total lines:            5886
  Line coverage:          0.403
  Visited conditions:     618
  Total conditions:       1648
  Condition coverage:     0.375

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             79094
  Number of reached locations:   1470 (18%)
    Avg states per location:     53
    Max states per location:     1059 (at node N7349)
  Number of reached functions:   69 (21%)
  Number of partitions:          78818
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6420 (before line 12832), Function pccard_validate_cis called from node N6640, stack depth 3 [350d7119], stack [main, pccard_show_cis, pccard_validate_cis]])
  Number of target states:       0
  Size of final wait list        1709

Time for analysis setup:          5.214s
  Time for loading CPAs:          0.838s
  Time for loading parser:        0.466s
  Time for CFA construction:      3.786s
    Time for parsing file(s):     0.777s
    Time for AST to CFA:          1.322s
    Time for CFA sanity check:    0.416s
    Time for post-processing:     1.125s
      Time for var class.:        0.441s
Time for Analysis:              895.134s
CPU time for analysis:          895.060s
Total time for CPAchecker:      900.351s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              0.732s

Time for Garbage Collector:      69.328s (in 5294 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                367MB (   350 MiB) max;    163MB (   155 MiB) avg;    376MB (   359 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           374MB (   357 MiB) max;    244MB (   233 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8157MB (  7780 MiB) max;   8127MB (  7750 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
