scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x1pixduo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36085 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  31784 (88%)
  Because of loop head:            3767 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         534 (1%)
  Times precision was empty:       5168 (14%)
  Times precision was {false}:     179 (0%)
  Times result was cached:         29704 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1034 (3%)
  Times result was 'false':        4485 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         24365
  BDD entailment checks:           7287
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          75
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         113501
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 93.57
Number of irrelevant predicates:          59295 (52%)
Number of preds handled by boolean abs:   2501 (2%)
  Total number of models for allsat:      975
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  1.911s
  Time for path formula creation:        1.819s
Time for strengthen operator:            0.156s
Time for prec operator:                  7.311s
  Time for abstraction:                  6.913s (Max:     0.029s, Count: 36085)
    Boolean abstraction:                 1.689s
    Solving time:                        1.637s (Max:     0.025s)
    Model enumeration time:              0.097s
    Time for BDD construction:           0.036s (Max:     0.007s)
Time for merge operator:                 0.129s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     1.734s

Number of path formula cache hits:   216405 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.427s

Total number of created targets for pointer analysis: 2421
   Number of created targets for uf: *unsigned_char is 24
   Number of created targets for uf: *unsigned_int is 181


Number of BDD nodes:                               272
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2194 (count: 19998, min: 0, max: 156, avg: 0.11)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.387s
Automaton transfers with branching:                0
Automaton transfer successors:                       188050 (count: 188050, min: 1, max: 1, avg: 1.00) [1 x 188050]

CPA algorithm statistics
------------------------
Number of iterations:            132484
Max size of waitlist:            56
Average size of waitlist:        20
Number of computed successors:   153639
Max successors for one state:    2
Number of times merged:          8539
Number of times stopped:         14182
Number of times breaked:         534

Total time for CPA algorithm:        13.471s (Max:     0.501s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      8.156s
  Time for transfer relation:         4.084s
  Time for merge operator:            0.285s
  Time for stop operator:             0.223s
  Time for adding to reached set:     0.198s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   534
Avg. length of target path (in blocks):               19318 (count: 534, min: 10, max: 49, avg: 36.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.419s
  Counterexample analysis:                             9.544s (Max:     0.045s, Calls: 534)
    Refinement sat check:                              7.503s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.225s
  ARG update:                                          0.318s

Length of refined path (in blocks):                   18784 (count: 534, min: 9, max: 48, avg: 35.18)
Number of affected states:                             4163 (count: 534, min: 3, max: 28, avg: 7.80)
Length (states) of path with itp 'true':              14087 (count: 534, min: 5, max: 40, avg: 26.38)
Length (states) of path with itp non-trivial itp:      4163 (count: 534, min: 3, max: 28, avg: 7.80)
Length (states) of path with itp 'false':               534 (count: 534, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 534, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3629 (count: 534, min: 2, max: 27, avg: 6.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                534
Number of successful refinements:     534
Number of failed refinements:         0
Max. size of reached set before ref.: 4595
Max. size of reached set after ref.:  4134
Avg. size of reached set before ref.: 1781.24
Avg. size of reached set after ref.:  1532.89

Total time for CEGAR algorithm:      25.079s
Time for refinements:                11.156s
Average time for refinement:          0.020s
Max time for refinement:              0.056s

Code Coverage
-----------------------------
  Function coverage:      0.093
  Visited lines:          1368
  Total lines:            5886
  Line coverage:          0.232
  Visited conditions:     196
  Total conditions:       1648
  Condition coverage:     0.119

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             2355
  Number of reached locations:   487 (6%)
    Avg states per location:     4
    Max states per location:     55 (at node N4716)
  Number of reached functions:   30 (9%)
  Number of partitions:          2346
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5184 (before line 11523), Function pccard_get_next_tuple called from node N4964, stack depth 5 [5ee1ac8b], stack [main, pccard_show_cis, pccard_extract_cis, pccard_get_first_tuple, pccard_get_next_tuple]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          5.225s
  Time for loading CPAs:          0.833s
  Time for loading parser:        0.507s
  Time for CFA construction:      3.775s
    Time for parsing file(s):     0.839s
    Time for AST to CFA:          1.281s
    Time for CFA sanity check:    0.392s
    Time for post-processing:     1.083s
      Time for var class.:        0.459s
Time for Analysis:               25.079s
CPU time for analysis:           25.070s
Total time for CPAchecker:       30.308s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.115s

Time for Garbage Collector:       0.631s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     62MB (    59 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     41MB (    39 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
