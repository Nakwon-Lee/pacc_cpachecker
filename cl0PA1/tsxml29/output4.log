scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--pcmcia--pcmcia.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mbj5vvt1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8092: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10240: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13226: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13958: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 8967-8968: Function pointer *(s->resource_ops->find_io) with type int (*)(struct pcmcia_socket *, unsigned int, unsigned int *, unsigned int, unsigned int, struct resource **) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7665: Function pointer *(p_drv->resume) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7558: Function pointer *(p_drv->suspend) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5899: Function pointer *(p_drv->probe) with type int (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6080: Function pointer *(p_drv->remove) with type void (*)(struct pcmcia_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13736: Function pointer *(cfg_mem->conf_check) with type int (*)(struct pcmcia_device *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9490: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9535: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9670: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9170: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9183: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9245: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9092: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9307: Function pointer *(s->ops->set_io_map) with type int (*)(struct pcmcia_socket *, struct pccard_io_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9282: Function pointer *(s->ops->set_socket) with type int (*)(struct pcmcia_socket *, socket_state_t *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9410: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10100: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10654: Function pointer *(s->ops->set_mem_map) with type int (*)(struct pcmcia_socket *, struct pccard_mem_map *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 13137: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(228); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

line 13138: Destroying the void* pointer ldv_init_zalloc::tmp produces garbage or the memory pointed by it is unused: var_group1 = ldv_init_zalloc(36); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_parse_uevents to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23402 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19458 (83%)
  Because of loop head:            3810 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         134 (1%)
  Times precision was empty:       3157 (13%)
  Times precision was {false}:     304 (1%)
  Times result was cached:         18516 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1425 (6%)
  Times result was 'false':        3517 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         41344
  BDD entailment checks:           6358
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          56
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         93136
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 53.87
Number of irrelevant predicates:          10151 (11%)
Number of preds handled by boolean abs:   4304 (5%)
  Total number of models for allsat:      1352
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                  2.765s
  Time for path formula creation:        2.676s
Time for strengthen operator:            0.181s
Time for prec operator:                 14.426s
  Time for abstraction:                 14.058s (Max:     0.036s, Count: 23402)
    Boolean abstraction:                 4.270s
    Solving time:                        4.363s (Max:     0.031s)
    Model enumeration time:              0.224s
    Time for BDD construction:           0.084s (Max:     0.012s)
Time for merge operator:                 0.305s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     4.587s

Number of path formula cache hits:   242684 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.198s

Total number of created targets for pointer analysis: 7558
   Number of created targets for uf: *unsigned_char is 67
   Number of created targets for uf: *unsigned_int is 467


Number of BDD nodes:                               241
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2848 (count: 21486, min: 0, max: 205, avg: 0.13)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.377s
Automaton transfers with branching:                0
Automaton transfer successors:                       220856 (count: 220856, min: 1, max: 1, avg: 1.00) [1 x 220856]

CPA algorithm statistics
------------------------
Number of iterations:            127714
Max size of waitlist:            131
Average size of waitlist:        35
Number of computed successors:   159179
Max successors for one state:    2
Number of times merged:          17493
Number of times stopped:         22488
Number of times breaked:         134

Total time for CPA algorithm:        21.877s (Max:     1.044s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:     15.318s
  Time for transfer relation:         4.925s
  Time for merge operator:            0.525s
  Time for stop operator:             0.249s
  Time for adding to reached set:     0.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   134
Avg. length of target path (in blocks):                3452 (count: 134, min: 10, max: 43, avg: 25.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.631s
  Counterexample analysis:                             2.177s (Max:     0.049s, Calls: 134)
    Refinement sat check:                              1.712s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.083s
  ARG update:                                          0.276s

Length of refined path (in blocks):                    3232 (count: 133, min: 9, max: 35, avg: 24.30)
Number of affected states:                             2256 (count: 133, min: 0, max: 29, avg: 16.96)
Length (states) of path with itp 'true':                843 (count: 133, min: 5, max: 24, avg: 6.34)
Length (states) of path with itp non-trivial itp:      2256 (count: 133, min: 0, max: 29, avg: 16.96)
Length (states) of path with itp 'false':               133 (count: 133, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 133, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2126 (count: 133, min: 0, max: 28, avg: 15.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                134
Number of successful refinements:     133
Number of failed refinements:         0
Max. size of reached set before ref.: 3349
Max. size of reached set after ref.:  2725
Avg. size of reached set before ref.: 1187.75
Avg. size of reached set after ref.:  195.37

Total time for CEGAR algorithm:      24.788s
Time for refinements:                 2.883s
Average time for refinement:          0.021s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.083
  Visited lines:          1372
  Total lines:            5886
  Line coverage:          0.233
  Visited conditions:     182
  Total conditions:       1648
  Condition coverage:     0.110

CPAchecker general statistics
-----------------------------
Number of program locations:     8302
Number of CFA edges:             9421
Number of relevant variables:    1233
Number of functions:             324
Number of loops:                 63
Size of reached set:             3349
  Number of reached locations:   442 (5%)
    Avg states per location:     7
    Max states per location:     62 (at node N5048)
  Number of reached functions:   27 (8%)
  Number of partitions:          3345
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N6724 (before line 13160), Function main called from node N6685, stack depth 1 [11399548], stack [main]])
  Number of target states:       1
  Size of final wait list        129

Time for analysis setup:          5.518s
  Time for loading CPAs:          0.928s
  Time for loading parser:        0.498s
  Time for CFA construction:      3.965s
    Time for parsing file(s):     0.806s
    Time for AST to CFA:          1.428s
    Time for CFA sanity check:    0.431s
    Time for post-processing:     1.151s
      Time for var class.:        0.505s
Time for Analysis:               24.788s
CPU time for analysis:           24.790s
Total time for CPAchecker:       30.310s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.140s

Time for Garbage Collector:       0.806s (in 125 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     54MB (    51 MiB) avg;     82MB (    78 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
