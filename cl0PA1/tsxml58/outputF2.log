scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hx4sozzq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            751981 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  680858 (91%)
  Because of loop head:            65952 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5171 (1%)
  Times precision was empty:       36776 (5%)
  Times precision was {false}:     731 (0%)
  Times result was cached:         710864 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3610 (0%)
  Times result was 'false':        25553 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         614115
  BDD entailment checks:           192675
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          291
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         3053098
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 703.32
Number of irrelevant predicates:          695190 (23%)
Number of preds handled by boolean abs:   10152 (0%)
  Total number of models for allsat:      4098
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.14

Time for post operator:                 15.113s
  Time for path formula creation:       13.960s
Time for strengthen operator:            2.573s
Time for prec operator:                 78.205s
  Time for abstraction:                 72.775s (Max:     0.304s, Count: 751981)
    Boolean abstraction:                 2.423s
    Solving time:                        2.073s (Max:     0.020s)
    Model enumeration time:              0.292s
    Time for BDD construction:           0.129s (Max:     0.012s)
Time for merge operator:                 1.174s
Time for coverage check:                 0.219s
  Time for BDD entailment checks:        0.144s
Total time for SMT solver (w/o itp):     2.365s

Number of path formula cache hits:   5153914 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.465s

Total number of created targets for pointer analysis: 4076
   Number of created targets for uf: *(void)* is 4
   Number of created targets for uf: *signed_int is 149
   Number of created targets for uf: *(struct_sm501_platdata)* is 5
   Number of created targets for uf: *(struct_list_head)* is 15
   Number of created targets for uf: *signed_long_int is 72
   Number of created targets for uf: *(struct_resource)* is 9
   Number of created targets for uf: *unsigned_char_:_1 is 19
   Number of created targets for uf: *unsigned_long_long_int is 37
   Number of created targets for uf: *unsigned_int is 28
   Number of created targets for uf: *(struct_device)* is 5
   Number of created targets for uf: *unsigned_long_int is 85


Number of BDD nodes:                               1032
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7846 (count: 256597, min: 0, max: 175, avg: 0.03)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.455s
  Time for transition matches:                         2.488s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      4421405 (count: 4421405, min: 1, max: 1, avg: 1.00) [1 x 4421405]

CPA algorithm statistics
------------------------
Number of iterations:            2737911
Max size of waitlist:            166
Average size of waitlist:        78
Number of computed successors:   3133448
Max successors for one state:    2
Number of times merged:          210720
Number of times stopped:         278910
Number of times breaked:         5171

Total time for CPA algorithm:       144.782s (Max:     0.657s)
  Time for choose from waitlist:      0.833s
  Time for precision adjustment:     90.268s
  Time for transfer relation:        40.928s
  Time for merge operator:            2.869s
  Time for stop operator:             2.470s
  Time for adding to reached set:     2.744s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5171
Avg. length of target path (in blocks):              642892 (count: 5171, min: 10, max: 189, avg: 124.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 119.776s
  Counterexample analysis:                           109.234s (Max:     0.077s, Calls: 5171)
    Refinement sat check:                             52.753s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.271s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.718s
  Precision update:                                    3.835s
  ARG update:                                          3.767s

Length of refined path (in blocks):                  634654 (count: 5171, min: 4, max: 188, avg: 122.73)
Number of affected states:                           150820 (count: 5171, min: 1, max: 158, avg: 29.17)
Length (states) of path with itp 'true':             478663 (count: 5171, min: 1, max: 160, avg: 92.57)
Length (states) of path with itp non-trivial itp:    150820 (count: 5171, min: 1, max: 158, avg: 29.17)
Length (states) of path with itp 'false':              5171 (count: 5171, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 5171, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:          145645 (count: 5171, min: 0, max: 157, avg: 28.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5171
Number of successful refinements:     5171
Number of failed refinements:         0
Max. size of reached set before ref.: 22795
Max. size of reached set after ref.:  22365
Avg. size of reached set before ref.: 14372.48
Avg. size of reached set after ref.:  13829.69

Total time for CEGAR algorithm:     356.950s
Time for refinements:               172.537s
Average time for refinement:          0.033s
Max time for refinement:              0.305s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1881
  Total lines:            2197
  Line coverage:          0.856
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             22210
  Number of reached locations:   1137 (38%)
    Avg states per location:     19
    Max states per location:     534 (at node N26)
  Number of reached functions:   76 (67%)
  Number of partitions:          22207
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [4b2a30d], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.648s
  Time for loading CPAs:          0.651s
  Time for loading parser:        0.481s
  Time for CFA construction:      2.388s
    Time for parsing file(s):     0.660s
    Time for AST to CFA:          0.802s
    Time for CFA sanity check:    0.162s
    Time for post-processing:     0.612s
      Time for var class.:        0.276s
Time for Analysis:              356.950s
CPU time for analysis:          356.940s
Time for analyzing result:        0.012s
Total time for CPAchecker:      360.601s
Total CPU time for CPAchecker:  360.570s
Time for statistics:              0.432s

Time for Garbage Collector:      14.055s (in 1707 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                203MB (   193 MiB) max;    117MB (   112 MiB) avg;    210MB (   200 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           220MB (   210 MiB) max;    176MB (   168 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8109MB (  7733 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
