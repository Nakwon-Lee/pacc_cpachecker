scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n4fz7x99/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1773586 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1690984 (95%)
  Because of loop head:            73757 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8845 (0%)
  Times precision was empty:       248934 (14%)
  Times precision was {false}:     2766 (0%)
  Times result was cached:         1519660 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2226 (0%)
  Times result was 'false':        22124 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         950330
  BDD entailment checks:           269994
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          267
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         2821776
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 565.26
Number of irrelevant predicates:          2372695 (84%)
Number of preds handled by boolean abs:   3239 (0%)
  Total number of models for allsat:      2242
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 45.114s
  Time for path formula creation:       43.081s
Time for strengthen operator:            5.040s
Time for prec operator:                106.662s
  Time for abstraction:                 93.595s (Max:     0.062s, Count: 1773586)
    Boolean abstraction:                 6.570s
    Solving time:                       13.066s (Max:     0.047s)
    Model enumeration time:              0.395s
    Time for BDD construction:           0.080s (Max:     0.008s)
Time for merge operator:                 3.712s
Time for coverage check:                 0.301s
  Time for BDD entailment checks:        0.198s
Total time for SMT solver (w/o itp):    13.461s

Number of path formula cache hits:   10131452 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.593s

Total number of created targets for pointer analysis: 102108
   Number of created targets for uf: *(void)* is 4318
   Number of created targets for uf: *signed_int is 94
   Number of created targets for uf: *(struct_sm501_platdata)* is 910
   Number of created targets for uf: *(struct_list_head)* is 1192
   Number of created targets for uf: *signed_long_int is 64
   Number of created targets for uf: *(struct_resource)* is 9823
   Number of created targets for uf: *unsigned_char_:_1 is 1821
   Number of created targets for uf: *unsigned_long_long_int is 943
   Number of created targets for uf: *(struct_device)* is 910
   Number of created targets for uf: *unsigned_int is 15181
   Number of created targets for uf: *unsigned_long_int is 85


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4604 (count: 546687, min: 0, max: 202, avg: 0.01)
Time for BDD node cleanup:                             0.072s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.196s
  Time for transition matches:                         4.492s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                      8989667 (count: 8989667, min: 1, max: 1, avg: 1.00) [1 x 8989667]

CPA algorithm statistics
------------------------
Number of iterations:            5786588
Max size of waitlist:            72
Average size of waitlist:        51
Number of computed successors:   6372948
Max successors for one state:    2
Number of times merged:          340168
Number of times stopped:         507137
Number of times breaked:         8845

Total time for CPA algorithm:       252.420s (Max:     1.509s)
  Time for choose from waitlist:      1.423s
  Time for precision adjustment:    129.243s
  Time for transfer relation:        97.505s
  Time for merge operator:            6.334s
  Time for stop operator:             4.193s
  Time for adding to reached set:     4.735s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8845
Avg. length of target path (in blocks):             1951570 (count: 8845, min: 10, max: 311, avg: 220.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 585.220s
  Counterexample analysis:                           565.777s (Max:     0.178s, Calls: 8845)
    Refinement sat check:                            246.440s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.811s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.683s
  Precision update:                                    3.044s
  ARG update:                                          8.136s

Length of refined path (in blocks):                 1937411 (count: 8844, min: 4, max: 310, avg: 219.07)
Number of affected states:                           383126 (count: 8844, min: 1, max: 160, avg: 43.32)
Length (states) of path with itp 'true':            1545441 (count: 8844, min: 1, max: 283, avg: 174.74)
Length (states) of path with itp non-trivial itp:    383126 (count: 8844, min: 1, max: 160, avg: 43.32)
Length (states) of path with itp 'false':              8844 (count: 8844, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 8844, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:          374278 (count: 8844, min: 0, max: 159, avg: 42.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8845
Number of successful refinements:     8844
Number of failed refinements:         0
Max. size of reached set before ref.: 7291
Max. size of reached set after ref.:  6978
Avg. size of reached set before ref.: 4808.74
Avg. size of reached set after ref.:  4148.53

Total time for CEGAR algorithm:     896.629s
Time for refinements:               624.059s
Average time for refinement:          0.070s
Max time for refinement:              1.211s

Code Coverage
-----------------------------
  Function coverage:      0.570
  Visited lines:          1495
  Total lines:            2197
  Line coverage:          0.680
  Visited conditions:     228
  Total conditions:       440
  Condition coverage:     0.518

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             4827
  Number of reached locations:   794 (27%)
    Avg states per location:     6
    Max states per location:     118 (at node N26)
  Number of reached functions:   65 (57%)
  Number of partitions:          4799
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       1
  Size of final wait list        63

Time for analysis setup:          3.696s
  Time for loading CPAs:          0.633s
  Time for loading parser:        0.523s
  Time for CFA construction:      2.425s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.811s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.644s
      Time for var class.:        0.287s
Time for Analysis:              896.630s
CPU time for analysis:          896.530s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.152s

Time for Garbage Collector:      22.048s (in 2035 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                435MB (   415 MiB) max;    172MB (   164 MiB) avg;    478MB (   456 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           634MB (   605 MiB) max;    249MB (   237 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
