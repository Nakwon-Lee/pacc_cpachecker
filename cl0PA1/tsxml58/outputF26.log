scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_obofhob8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1980456 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1844413 (93%)
  Because of loop head:            132369 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3674 (0%)
  Times precision was empty:       138374 (7%)
  Times precision was {false}:     1115 (0%)
  Times result was cached:         1830122 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10845 (1%)
  Times result was 'false':        90370 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         908102
  BDD entailment checks:           257256
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          296
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         7069942
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 591.13
Number of irrelevant predicates:          2593197 (37%)
Number of preds handled by boolean abs:   26226 (0%)
  Total number of models for allsat:      10808
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.00

Time for post operator:                 47.934s
  Time for path formula creation:       45.409s
Time for strengthen operator:            5.916s
Time for prec operator:                187.669s
  Time for abstraction:                172.015s (Max:     0.988s, Count: 1980456)
    Boolean abstraction:                 9.299s
    Solving time:                        8.614s (Max:     0.024s)
    Model enumeration time:              0.757s
    Time for BDD construction:           0.155s (Max:     0.008s)
Time for merge operator:                 3.106s
Time for coverage check:                 0.312s
  Time for BDD entailment checks:        0.225s
Total time for SMT solver (w/o itp):     9.371s

Number of path formula cache hits:   11456204 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.275s

Total number of created targets for pointer analysis: 76046
   Number of created targets for uf: *(void)* is 140
   Number of created targets for uf: *signed_int is 10821
   Number of created targets for uf: *(struct_sm501_platdata)* is 122
   Number of created targets for uf: *signed_long_int is 582
   Number of created targets for uf: *(struct_list_head)* is 413
   Number of created targets for uf: *(struct_resource)* is 5819
   Number of created targets for uf: *unsigned_char_:_1 is 928
   Number of created targets for uf: *unsigned_long_long_int is 1165
   Number of created targets for uf: *(struct_device)* is 130
   Number of created targets for uf: *unsigned_int is 695
   Number of created targets for uf: *unsigned_long_int is 356


Number of BDD nodes:                               927
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21938 (count: 472404, min: 0, max: 415, avg: 0.05)
Time for BDD node cleanup:                             0.082s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.850s
  Time for transition matches:                         5.744s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                     10198226 (count: 10198226, min: 1, max: 1, avg: 1.00) [1 x 10198226]

CPA algorithm statistics
------------------------
Number of iterations:            6531054
Max size of waitlist:            39
Average size of waitlist:        23
Number of computed successors:   7189259
Max successors for one state:    2
Number of times merged:          325423
Number of times stopped:         556740
Number of times breaked:         3674

Total time for CPA algorithm:       357.528s (Max:     4.312s)
  Time for choose from waitlist:      1.533s
  Time for precision adjustment:    219.469s
  Time for transfer relation:       109.684s
  Time for merge operator:            5.729s
  Time for stop operator:             4.865s
  Time for adding to reached set:     5.937s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3674
Avg. length of target path (in blocks):              402956 (count: 3674, min: 10, max: 253, avg: 109.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  88.794s
  Counterexample analysis:                            74.353s (Max:     0.076s, Calls: 3674)
    Refinement sat check:                             39.574s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.142s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.466s
  Precision update:                                    1.235s
  ARG update:                                         11.181s

Length of refined path (in blocks):                  388531 (count: 3674, min: 4, max: 252, avg: 105.75)
Number of affected states:                            86258 (count: 3674, min: 1, max: 144, avg: 23.48)
Length (states) of path with itp 'true':             298599 (count: 3674, min: 1, max: 215, avg: 81.27)
Length (states) of path with itp non-trivial itp:     86258 (count: 3674, min: 1, max: 144, avg: 23.48)
Length (states) of path with itp 'false':              3674 (count: 3674, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 3674, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           82580 (count: 3674, min: 0, max: 143, avg: 22.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3674
Number of successful refinements:     3674
Number of failed refinements:         0
Max. size of reached set before ref.: 44568
Max. size of reached set after ref.:  24445
Avg. size of reached set before ref.: 9506.64
Avg. size of reached set after ref.:  7732.03

Total time for CEGAR algorithm:     484.724s
Time for refinements:               111.814s
Average time for refinement:          0.030s
Max time for refinement:              0.942s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1881
  Total lines:            2197
  Line coverage:          0.856
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             22210
  Number of reached locations:   1137 (38%)
    Avg states per location:     19
    Max states per location:     534 (at node N26)
  Number of reached functions:   76 (67%)
  Number of partitions:          22207
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [d176a31], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.713s
  Time for loading CPAs:          0.688s
  Time for loading parser:        0.514s
  Time for CFA construction:      2.402s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.770s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.614s
      Time for var class.:        0.290s
Time for Analysis:              484.724s
CPU time for analysis:          484.690s
Time for analyzing result:        0.025s
Total time for CPAchecker:      488.439s
Total CPU time for CPAchecker:  488.390s
Time for statistics:              0.374s

Time for Garbage Collector:      45.592s (in 1628 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                638MB (   608 MiB) max;    240MB (   229 MiB) avg;    666MB (   635 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           707MB (   674 MiB) max;    355MB (   338 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8059MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
