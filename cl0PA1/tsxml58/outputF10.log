scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8t_65osh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1786563 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1703369 (95%)
  Because of loop head:            74293 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8901 (0%)
  Times precision was empty:       250568 (14%)
  Times precision was {false}:     2774 (0%)
  Times result was cached:         1530991 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2230 (0%)
  Times result was 'false':        22262 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         957658
  BDD entailment checks:           272220
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          267
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         2848258
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 569.20
Number of irrelevant predicates:          2396220 (84%)
Number of preds handled by boolean abs:   3243 (0%)
  Total number of models for allsat:      2246
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 44.416s
  Time for path formula creation:       42.346s
Time for strengthen operator:            5.732s
Time for prec operator:                105.932s
  Time for abstraction:                 92.783s (Max:     0.509s, Count: 1786563)
    Boolean abstraction:                 6.632s
    Solving time:                       12.769s (Max:     0.053s)
    Model enumeration time:              0.396s
    Time for BDD construction:           0.118s (Max:     0.019s)
Time for merge operator:                 4.741s
Time for coverage check:                 0.331s
  Time for BDD entailment checks:        0.240s
Total time for SMT solver (w/o itp):    13.165s

Number of path formula cache hits:   10203223 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.032s

Total number of created targets for pointer analysis: 103501
   Number of created targets for uf: *(void)* is 4390
   Number of created targets for uf: *signed_int is 94
   Number of created targets for uf: *(struct_sm501_platdata)* is 922
   Number of created targets for uf: *(struct_list_head)* is 1207
   Number of created targets for uf: *signed_long_int is 64
   Number of created targets for uf: *(struct_resource)* is 9979
   Number of created targets for uf: *unsigned_char_:_1 is 1848
   Number of created targets for uf: *unsigned_long_long_int is 952
   Number of created targets for uf: *(struct_device)* is 922
   Number of created targets for uf: *unsigned_int is 15373
   Number of created targets for uf: *unsigned_long_int is 85


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4612 (count: 550611, min: 0, max: 228, avg: 0.01)
Time for BDD node cleanup:                             0.115s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.272s
  Time for transition matches:                         4.488s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                      9056081 (count: 9056081, min: 1, max: 1, avg: 1.00) [1 x 9056081]

CPA algorithm statistics
------------------------
Number of iterations:            5829064
Max size of waitlist:            72
Average size of waitlist:        51
Number of computed successors:   6419772
Max successors for one state:    2
Number of times merged:          342719
Number of times stopped:         510926
Number of times breaked:         8901

Total time for CPA algorithm:       254.253s (Max:     1.776s)
  Time for choose from waitlist:      1.470s
  Time for precision adjustment:    129.216s
  Time for transfer relation:        97.640s
  Time for merge operator:            7.295s
  Time for stop operator:             4.200s
  Time for adding to reached set:     5.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8901
Avg. length of target path (in blocks):             1965562 (count: 8901, min: 10, max: 311, avg: 220.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 584.092s
  Counterexample analysis:                           563.913s (Max:     0.272s, Calls: 8901)
    Refinement sat check:                            247.211s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.852s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.850s
  Precision update:                                    3.204s
  ARG update:                                          8.554s

Length of refined path (in blocks):                 1951353 (count: 8900, min: 4, max: 310, avg: 219.25)
Number of affected states:                           386100 (count: 8900, min: 1, max: 160, avg: 43.38)
Length (states) of path with itp 'true':            1556353 (count: 8900, min: 1, max: 283, avg: 174.87)
Length (states) of path with itp non-trivial itp:    386100 (count: 8900, min: 1, max: 160, avg: 43.38)
Length (states) of path with itp 'false':              8900 (count: 8900, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 8900, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:          377196 (count: 8900, min: 0, max: 159, avg: 42.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8901
Number of successful refinements:     8900
Number of failed refinements:         0
Max. size of reached set before ref.: 7291
Max. size of reached set after ref.:  6978
Avg. size of reached set before ref.: 4809.94
Avg. size of reached set after ref.:  4149.07

Total time for CEGAR algorithm:     895.934s
Time for refinements:               621.669s
Average time for refinement:          0.069s
Max time for refinement:              0.280s

Code Coverage
-----------------------------
  Function coverage:      0.570
  Visited lines:          1501
  Total lines:            2197
  Line coverage:          0.683
  Visited conditions:     230
  Total conditions:       440
  Condition coverage:     0.523

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             5504
  Number of reached locations:   801 (27%)
    Avg states per location:     6
    Max states per location:     133 (at node N26)
  Number of reached functions:   65 (57%)
  Number of partitions:          5480
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       1
  Size of final wait list        65

Time for analysis setup:          4.393s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.603s
  Time for CFA construction:      2.824s
    Time for parsing file(s):     0.703s
    Time for AST to CFA:          0.955s
    Time for CFA sanity check:    0.244s
    Time for post-processing:     0.758s
      Time for var class.:        0.328s
Time for Analysis:              895.934s
CPU time for analysis:          895.830s
Total time for CPAchecker:      900.330s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.141s

Time for Garbage Collector:      22.093s (in 2047 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                442MB (   421 MiB) max;    172MB (   164 MiB) avg;    478MB (   456 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           634MB (   604 MiB) max;    251MB (   239 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
