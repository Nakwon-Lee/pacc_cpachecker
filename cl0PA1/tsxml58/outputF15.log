scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sxtkx0ht/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1001028 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  915353 (91%)
  Because of loop head:            82531 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3144 (0%)
  Times precision was empty:       52684 (5%)
  Times precision was {false}:     816 (0%)
  Times result was cached:         943621 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3907 (0%)
  Times result was 'false':        33690 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         563889
  BDD entailment checks:           190057
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          291
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         4037434
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 854.85
Number of irrelevant predicates:          1118793 (28%)
Number of preds handled by boolean abs:   10562 (0%)
  Total number of models for allsat:      4675
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.20

Time for post operator:                 15.956s
  Time for path formula creation:       14.662s
Time for strengthen operator:            2.899s
Time for prec operator:                100.405s
  Time for abstraction:                 93.639s (Max:     0.256s, Count: 1001028)
    Boolean abstraction:                 2.727s
    Solving time:                        2.292s (Max:     0.015s)
    Model enumeration time:              0.340s
    Time for BDD construction:           0.166s (Max:     0.009s)
Time for merge operator:                 0.926s
Time for coverage check:                 0.212s
  Time for BDD entailment checks:        0.150s
Total time for SMT solver (w/o itp):     2.632s

Number of path formula cache hits:   6272763 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.245s

Total number of created targets for pointer analysis: 4968
   Number of created targets for uf: *(void)* is 6
   Number of created targets for uf: *signed_int is 131
   Number of created targets for uf: *(struct_sm501_platdata)* is 6
   Number of created targets for uf: *signed_long_int is 70
   Number of created targets for uf: *(struct_list_head)* is 17
   Number of created targets for uf: *(struct_resource)* is 11
   Number of created targets for uf: *unsigned_char_:_1 is 25
   Number of created targets for uf: *unsigned_long_long_int is 49
   Number of created targets for uf: *unsigned_int is 36
   Number of created targets for uf: *(struct_device)* is 6
   Number of created targets for uf: *unsigned_long_int is 149


Number of BDD nodes:                               1162
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8414 (count: 276930, min: 0, max: 240, avg: 0.03)
Time for BDD node cleanup:                             0.058s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.516s
  Time for transition matches:                         3.058s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      5282076 (count: 5282076, min: 1, max: 1, avg: 1.00) [1 x 5282076]

CPA algorithm statistics
------------------------
Number of iterations:            3379999
Max size of waitlist:            281
Average size of waitlist:        77
Number of computed successors:   3765947
Max successors for one state:    2
Number of times merged:          186916
Number of times stopped:         292688
Number of times breaked:         3144

Total time for CPA algorithm:       177.185s (Max:     1.026s)
  Time for choose from waitlist:      0.824s
  Time for precision adjustment:    115.291s
  Time for transfer relation:        47.339s
  Time for merge operator:            2.444s
  Time for stop operator:             2.855s
  Time for adding to reached set:     2.729s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3144
Avg. length of target path (in blocks):              332314 (count: 3144, min: 10, max: 168, avg: 105.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  58.932s
  Counterexample analysis:                            50.664s (Max:     0.065s, Calls: 3144)
    Refinement sat check:                             24.550s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.140s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.398s
  Precision update:                                    2.213s
  ARG update:                                          4.398s

Length of refined path (in blocks):                  285744 (count: 3144, min: 4, max: 167, avg: 90.89)
Number of affected states:                            83366 (count: 3144, min: 1, max: 144, avg: 26.52)
Length (states) of path with itp 'true':             199234 (count: 3144, min: 1, max: 117, avg: 63.37)
Length (states) of path with itp non-trivial itp:     83366 (count: 3144, min: 1, max: 144, avg: 26.52)
Length (states) of path with itp 'false':              3144 (count: 3144, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         924 (count: 3144, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:           79298 (count: 3144, min: 0, max: 143, avg: 25.22)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3144
Number of successful refinements:     3144
Number of failed refinements:         0
Max. size of reached set before ref.: 32442
Max. size of reached set after ref.:  32142
Avg. size of reached set before ref.: 13489.08
Avg. size of reached set after ref.:  12404.46

Total time for CEGAR algorithm:     288.033s
Time for refinements:                88.531s
Average time for refinement:          0.028s
Max time for refinement:              0.324s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1881
  Total lines:            2197
  Line coverage:          0.856
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             29511
  Number of reached locations:   1137 (38%)
    Avg states per location:     25
    Max states per location:     712 (at node N26)
  Number of reached functions:   76 (67%)
  Number of partitions:          29507
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [56ba8773], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.079s
  Time for loading CPAs:          0.762s
  Time for loading parser:        0.575s
  Time for CFA construction:      2.628s
    Time for parsing file(s):     0.766s
    Time for AST to CFA:          0.909s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.616s
      Time for var class.:        0.297s
Time for Analysis:              288.033s
CPU time for analysis:          288.000s
Time for analyzing result:        0.020s
Total time for CPAchecker:      292.116s
Total CPU time for CPAchecker:  292.060s
Time for statistics:              0.345s

Time for Garbage Collector:      19.027s (in 2019 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                194MB (   185 MiB) max;     97MB (    93 MiB) avg;    203MB (   194 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           208MB (   198 MiB) max;    152MB (   145 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8087MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
