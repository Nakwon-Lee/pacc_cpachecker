scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dafakqe7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            824287 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  767643 (93%)
  Because of loop head:            54524 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2120 (0%)
  Times precision was empty:       52286 (6%)
  Times precision was {false}:     797 (0%)
  Times result was cached:         767460 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3744 (0%)
  Times result was 'false':        27662 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         433306
  BDD entailment checks:           137922
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          291
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         3329372
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 733.18
Number of irrelevant predicates:          788601 (24%)
Number of preds handled by boolean abs:   10239 (0%)
  Total number of models for allsat:      4450
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.19

Time for post operator:                 14.598s
  Time for path formula creation:       13.240s
Time for strengthen operator:            2.550s
Time for prec operator:                 85.451s
  Time for abstraction:                 79.525s (Max:     0.364s, Count: 824287)
    Boolean abstraction:                 2.519s
    Solving time:                        2.094s (Max:     0.019s)
    Model enumeration time:              0.330s
    Time for BDD construction:           0.113s (Max:     0.010s)
Time for merge operator:                 0.822s
Time for coverage check:                 0.224s
  Time for BDD entailment checks:        0.172s
Total time for SMT solver (w/o itp):     2.424s

Number of path formula cache hits:   5062203 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.705s

Total number of created targets for pointer analysis: 4416
   Number of created targets for uf: *(void)* is 89
   Number of created targets for uf: *signed_int is 109
   Number of created targets for uf: *(struct_sm501_platdata)* is 6
   Number of created targets for uf: *(struct_list_head)* is 17
   Number of created targets for uf: *signed_long_int is 57
   Number of created targets for uf: *(struct_resource)* is 169
   Number of created targets for uf: *unsigned_char_:_1 is 25
   Number of created targets for uf: *unsigned_long_long_int is 49
   Number of created targets for uf: *(struct_device)* is 6
   Number of created targets for uf: *unsigned_int is 389
   Number of created targets for uf: *unsigned_long_int is 16


Number of BDD nodes:                               1163
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        8099 (count: 220808, min: 0, max: 143, avg: 0.04)
Time for BDD node cleanup:                             0.057s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.581s
  Time for transition matches:                         2.406s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      4268484 (count: 4268484, min: 1, max: 1, avg: 1.00) [1 x 4268484]

CPA algorithm statistics
------------------------
Number of iterations:            2738168
Max size of waitlist:            290
Average size of waitlist:        89
Number of computed successors:   3038229
Max successors for one state:    2
Number of times merged:          147692
Number of times stopped:         231701
Number of times breaked:         2120

Total time for CPA algorithm:       153.998s (Max:     0.980s)
  Time for choose from waitlist:      0.738s
  Time for precision adjustment:     98.563s
  Time for transfer relation:        41.879s
  Time for merge operator:            2.297s
  Time for stop operator:             2.184s
  Time for adding to reached set:     3.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2120
Avg. length of target path (in blocks):              202126 (count: 2120, min: 10, max: 168, avg: 95.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.992s
  Counterexample analysis:                            31.714s (Max:     0.073s, Calls: 2120)
    Refinement sat check:                             16.811s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.108s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.325s
  Precision update:                                    1.836s
  ARG update:                                          4.245s

Length of refined path (in blocks):                  186008 (count: 2120, min: 4, max: 167, avg: 87.74)
Number of affected states:                            55034 (count: 2120, min: 1, max: 144, avg: 25.96)
Length (states) of path with itp 'true':             128854 (count: 2120, min: 1, max: 117, avg: 60.78)
Length (states) of path with itp non-trivial itp:     55034 (count: 2120, min: 1, max: 144, avg: 25.96)
Length (states) of path with itp 'false':              2120 (count: 2120, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         224 (count: 2120, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:           52690 (count: 2120, min: 0, max: 143, avg: 24.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2120
Number of successful refinements:     2120
Number of failed refinements:         0
Max. size of reached set before ref.: 32442
Max. size of reached set after ref.:  32142
Avg. size of reached set before ref.: 16181.93
Avg. size of reached set after ref.:  14885.06

Total time for CEGAR algorithm:     240.583s
Time for refinements:                66.210s
Average time for refinement:          0.031s
Max time for refinement:              0.283s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1881
  Total lines:            2197
  Line coverage:          0.856
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             29511
  Number of reached locations:   1137 (38%)
    Avg states per location:     25
    Max states per location:     712 (at node N26)
  Number of reached functions:   76 (67%)
  Number of partitions:          29507
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.190s
  Time for loading CPAs:          0.555s
  Time for loading parser:        0.434s
  Time for CFA construction:      2.098s
    Time for parsing file(s):     0.612s
    Time for AST to CFA:          0.679s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.539s
      Time for var class.:        0.274s
Time for Analysis:              240.584s
CPU time for analysis:          240.550s
Time for analyzing result:        0.022s
Total time for CPAchecker:      243.776s
Total CPU time for CPAchecker:  243.740s
Time for statistics:              0.441s

Time for Garbage Collector:      19.709s (in 1641 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                186MB (   177 MiB) max;     99MB (    95 MiB) avg;    195MB (   186 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           213MB (   203 MiB) max;    155MB (   147 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8020MB (  7649 MiB) max;   8017MB (  7646 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
