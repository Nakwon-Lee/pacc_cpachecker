scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pgv48f7y/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            624786 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  577248 (92%)
  Because of loop head:            46175 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1363 (0%)
  Times precision was empty:       75066 (12%)
  Times precision was {false}:     1317 (0%)
  Times result was cached:         543199 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5204 (1%)
  Times result was 'false':        18705 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         383379
  BDD entailment checks:           109195
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          296
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         2208670
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 338.70
Number of irrelevant predicates:          672366 (30%)
Number of preds handled by boolean abs:   12916 (1%)
  Total number of models for allsat:      5755
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.11

Time for post operator:                 15.240s
  Time for path formula creation:       14.368s
Time for strengthen operator:            2.262s
Time for prec operator:                 70.246s
  Time for abstraction:                 65.631s (Max:     0.384s, Count: 624786)
    Boolean abstraction:                 4.472s
    Solving time:                        4.504s (Max:     0.016s)
    Model enumeration time:              0.474s
    Time for BDD construction:           0.242s (Max:     0.012s)
Time for merge operator:                 1.220s
Time for coverage check:                 0.160s
  Time for BDD entailment checks:        0.112s
Total time for SMT solver (w/o itp):     4.978s

Number of path formula cache hits:   4026117 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.213s

Total number of created targets for pointer analysis: 14927
   Number of created targets for uf: *(void)* is 6
   Number of created targets for uf: *signed_int is 399
   Number of created targets for uf: *(struct_sm501_platdata)* is 128
   Number of created targets for uf: *signed_long_int is 108
   Number of created targets for uf: *(struct_list_head)* is 17
   Number of created targets for uf: *(struct_resource)* is 629
   Number of created targets for uf: *unsigned_char_:_1 is 76
   Number of created targets for uf: *unsigned_long_long_int is 145
   Number of created targets for uf: *(struct_device)* is 128
   Number of created targets for uf: *unsigned_int is 232
   Number of created targets for uf: *unsigned_long_int is 415


Number of BDD nodes:                               1373
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11155 (count: 225584, min: 0, max: 184, avg: 0.05)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.456s
  Time for transition matches:                         2.033s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      3485568 (count: 3485568, min: 1, max: 1, avg: 1.00) [1 x 3485568]

CPA algorithm statistics
------------------------
Number of iterations:            2157340
Max size of waitlist:            223
Average size of waitlist:        62
Number of computed successors:   2407005
Max successors for one state:    2
Number of times merged:          137092
Number of times stopped:         204731
Number of times breaked:         1363

Total time for CPA algorithm:       129.430s (Max:     2.044s)
  Time for choose from waitlist:      0.706s
  Time for precision adjustment:     80.430s
  Time for transfer relation:        37.755s
  Time for merge operator:            2.600s
  Time for stop operator:             1.984s
  Time for adding to reached set:     2.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1363
Avg. length of target path (in blocks):              118669 (count: 1363, min: 10, max: 147, avg: 87.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  27.924s
  Counterexample analysis:                            22.590s (Max:     0.058s, Calls: 1363)
    Refinement sat check:                             12.993s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.072s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.256s
  Precision update:                                    1.232s
  ARG update:                                          3.275s

Length of refined path (in blocks):                  115948 (count: 1363, min: 4, max: 146, avg: 85.07)
Number of affected states:                            30274 (count: 1363, min: 1, max: 144, avg: 22.21)
Length (states) of path with itp 'true':              84311 (count: 1363, min: 1, max: 118, avg: 61.86)
Length (states) of path with itp non-trivial itp:     30274 (count: 1363, min: 1, max: 144, avg: 22.21)
Length (states) of path with itp 'false':              1363 (count: 1363, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 1363, min: 0, max: 1, avg: 0.03)
Equal non-trivial interpolants along paths:           28866 (count: 1363, min: 0, max: 143, avg: 21.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1363
Number of successful refinements:     1363
Number of failed refinements:         0
Max. size of reached set before ref.: 32005
Max. size of reached set after ref.:  23886
Avg. size of reached set before ref.: 13430.87
Avg. size of reached set after ref.:  11845.13

Total time for CEGAR algorithm:     179.633s
Time for refinements:                40.714s
Average time for refinement:          0.029s
Max time for refinement:              0.262s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1881
  Total lines:            2197
  Line coverage:          0.856
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             22210
  Number of reached locations:   1137 (38%)
    Avg states per location:     19
    Max states per location:     534 (at node N26)
  Number of reached functions:   76 (67%)
  Number of partitions:          22207
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [d176a31], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.902s
  Time for loading CPAs:          0.778s
  Time for loading parser:        0.495s
  Time for CFA construction:      2.512s
    Time for parsing file(s):     0.643s
    Time for AST to CFA:          0.896s
    Time for CFA sanity check:    0.177s
    Time for post-processing:     0.669s
      Time for var class.:        0.314s
Time for Analysis:              179.633s
CPU time for analysis:          179.610s
Time for analyzing result:        0.015s
Total time for CPAchecker:      183.539s
Total CPU time for CPAchecker:  183.520s
Time for statistics:              0.308s

Time for Garbage Collector:      14.220s (in 1126 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                220MB (   210 MiB) max;    104MB (    99 MiB) avg;    229MB (   218 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           232MB (   222 MiB) max;    162MB (   154 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8022MB (  7650 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
