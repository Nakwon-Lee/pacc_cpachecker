scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fp1j5b6x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_ioremap_bar to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            672266 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  623543 (93%)
  Because of loop head:            47177 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1546 (0%)
  Times precision was empty:       85093 (13%)
  Times precision was {false}:     1320 (0%)
  Times result was cached:         580444 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5409 (1%)
  Times result was 'false':        20686 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         417489
  BDD entailment checks:           120811
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          296
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         2358826
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 350.55
Number of irrelevant predicates:          738122 (31%)
Number of preds handled by boolean abs:   13110 (1%)
  Total number of models for allsat:      5979
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.11

Time for post operator:                 15.020s
  Time for path formula creation:       13.808s
Time for strengthen operator:            2.645s
Time for prec operator:                 73.360s
  Time for abstraction:                 68.500s (Max:     0.339s, Count: 672266)
    Boolean abstraction:                 4.474s
    Solving time:                        4.581s (Max:     0.016s)
    Model enumeration time:              0.471s
    Time for BDD construction:           0.203s (Max:     0.012s)
Time for merge operator:                 1.045s
Time for coverage check:                 0.187s
  Time for BDD entailment checks:        0.135s
Total time for SMT solver (w/o itp):     5.052s

Number of path formula cache hits:   4357454 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.452s

Total number of created targets for pointer analysis: 14045
   Number of created targets for uf: *(void)* is 6
   Number of created targets for uf: *signed_int is 399
   Number of created targets for uf: *(struct_sm501_platdata)* is 135
   Number of created targets for uf: *signed_long_int is 78
   Number of created targets for uf: *(struct_list_head)* is 17
   Number of created targets for uf: *(struct_resource)* is 651
   Number of created targets for uf: *unsigned_char_:_1 is 84
   Number of created targets for uf: *unsigned_long_long_int is 163
   Number of created targets for uf: *(struct_device)* is 135
   Number of created targets for uf: *unsigned_int is 232
   Number of created targets for uf: *unsigned_long_int is 437


Number of BDD nodes:                               1379
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11562 (count: 248612, min: 0, max: 190, avg: 0.05)
Time for BDD node cleanup:                             0.047s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.904s
  Time for transition matches:                         2.198s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      3751178 (count: 3751178, min: 1, max: 1, avg: 1.00) [1 x 3751178]

CPA algorithm statistics
------------------------
Number of iterations:            2321868
Max size of waitlist:            321
Average size of waitlist:        71
Number of computed successors:   2592700
Max successors for one state:    2
Number of times merged:          148339
Number of times stopped:         217647
Number of times breaked:         1546

Total time for CPA algorithm:       135.906s (Max:     2.372s)
  Time for choose from waitlist:      0.816s
  Time for precision adjustment:     84.002s
  Time for transfer relation:        39.586s
  Time for merge operator:            2.367s
  Time for stop operator:             2.097s
  Time for adding to reached set:     2.368s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1546
Avg. length of target path (in blocks):              136581 (count: 1546, min: 10, max: 153, avg: 88.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.106s
  Counterexample analysis:                            25.865s (Max:     0.061s, Calls: 1546)
    Refinement sat check:                             14.857s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.042s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.227s
  Precision update:                                    1.194s
  ARG update:                                          3.214s

Length of refined path (in blocks):                  133893 (count: 1546, min: 4, max: 152, avg: 86.61)
Number of affected states:                            32802 (count: 1546, min: 1, max: 144, avg: 21.22)
Length (states) of path with itp 'true':              99545 (count: 1546, min: 1, max: 118, avg: 64.39)
Length (states) of path with itp non-trivial itp:     32802 (count: 1546, min: 1, max: 144, avg: 21.22)
Length (states) of path with itp 'false':              1546 (count: 1546, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          36 (count: 1546, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:           31220 (count: 1546, min: 0, max: 143, avg: 20.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1546
Number of successful refinements:     1546
Number of failed refinements:         0
Max. size of reached set before ref.: 31194
Max. size of reached set after ref.:  28550
Avg. size of reached set before ref.: 14500.57
Avg. size of reached set after ref.:  12992.05

Total time for CEGAR algorithm:     194.684s
Time for refinements:                47.092s
Average time for refinement:          0.030s
Max time for refinement:              0.350s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1881
  Total lines:            2197
  Line coverage:          0.856
  Visited conditions:     316
  Total conditions:       440
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             22210
  Number of reached locations:   1137 (38%)
    Avg states per location:     19
    Max states per location:     534 (at node N26)
  Number of reached functions:   76 (67%)
  Number of partitions:          22207
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [d176a31], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.773s
  Time for loading CPAs:          0.757s
  Time for loading parser:        0.481s
  Time for CFA construction:      2.439s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.803s
    Time for CFA sanity check:    0.173s
    Time for post-processing:     0.622s
      Time for var class.:        0.318s
Time for Analysis:              194.684s
CPU time for analysis:          194.640s
Time for analyzing result:        0.019s
Total time for CPAchecker:      198.461s
Total CPU time for CPAchecker:  198.410s
Time for statistics:              0.340s

Time for Garbage Collector:      15.578s (in 1214 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                215MB (   205 MiB) max;    107MB (   102 MiB) avg;    228MB (   218 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     40MB (    38 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           230MB (   220 MiB) max;    164MB (   157 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     46MB (    43 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8096MB (  7721 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
