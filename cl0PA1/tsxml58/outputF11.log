scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--mfd--sm501.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ca47jxbw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5817: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5244: Function pointer *(pd->set_power) with type int (*)(struct device *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5207: Function pointer *(pd->get_power) with type int (*)(struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpiochip_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5207: Ignoring function call through function pointer *(pd->get_power): tmp___0 = (*(pd->get_power))(sm->dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5244: Ignoring function call through function pointer *(pd->set_power): (*(pd->set_power))(sm->dev, (unsigned int)on); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1795174 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1711578 (95%)
  Because of loop head:            74655 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8941 (0%)
  Times precision was empty:       251673 (14%)
  Times precision was {false}:     2781 (0%)
  Times result was cached:         1538488 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2232 (0%)
  Times result was 'false':        22366 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         962464
  BDD entailment checks:           273688
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          268
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         2865807
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 571.68
Number of irrelevant predicates:          2411699 (84%)
Number of preds handled by boolean abs:   3245 (0%)
  Total number of models for allsat:      2248
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 45.650s
  Time for path formula creation:       43.225s
Time for strengthen operator:            5.025s
Time for prec operator:                109.413s
  Time for abstraction:                 95.711s (Max:     1.090s, Count: 1795174)
    Boolean abstraction:                 6.710s
    Solving time:                       13.173s (Max:     0.052s)
    Model enumeration time:              0.431s
    Time for BDD construction:           0.085s (Max:     0.010s)
Time for merge operator:                 3.675s
Time for coverage check:                 0.299s
  Time for BDD entailment checks:        0.205s
Total time for SMT solver (w/o itp):    13.604s

Number of path formula cache hits:   10250874 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    21.384s

Total number of created targets for pointer analysis: 104349
   Number of created targets for uf: *(void)* is 4420
   Number of created targets for uf: *signed_int is 95
   Number of created targets for uf: *(struct_sm501_platdata)* is 930
   Number of created targets for uf: *(struct_list_head)* is 1217
   Number of created targets for uf: *signed_long_int is 65
   Number of created targets for uf: *(struct_resource)* is 10057
   Number of created targets for uf: *unsigned_char_:_1 is 1864
   Number of created targets for uf: *unsigned_long_long_int is 961
   Number of created targets for uf: *(struct_device)* is 930
   Number of created targets for uf: *unsigned_int is 15493
   Number of created targets for uf: *unsigned_long_int is 85


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4614 (count: 553231, min: 0, max: 218, avg: 0.01)
Time for BDD node cleanup:                             0.091s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.417s
  Time for transition matches:                         4.764s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                      9099929 (count: 9099929, min: 1, max: 1, avg: 1.00) [1 x 9099929]

CPA algorithm statistics
------------------------
Number of iterations:            5857227
Max size of waitlist:            72
Average size of waitlist:        51
Number of computed successors:   6450812
Max successors for one state:    2
Number of times merged:          344388
Number of times stopped:         513417
Number of times breaked:         8941

Total time for CPA algorithm:       257.667s (Max:     1.546s)
  Time for choose from waitlist:      1.496s
  Time for precision adjustment:    132.902s
  Time for transfer relation:        98.596s
  Time for merge operator:            6.197s
  Time for stop operator:             4.506s
  Time for adding to reached set:     4.836s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8941
Avg. length of target path (in blocks):             1975195 (count: 8941, min: 10, max: 311, avg: 220.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 583.128s
  Counterexample analysis:                           564.196s (Max:     0.179s, Calls: 8941)
    Refinement sat check:                            244.522s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.812s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.571s
  Precision update:                                    3.115s
  ARG update:                                          7.910s

Length of refined path (in blocks):                 1960974 (count: 8940, min: 4, max: 310, avg: 219.35)
Number of affected states:                           388048 (count: 8940, min: 1, max: 160, avg: 43.41)
Length (states) of path with itp 'true':            1563986 (count: 8940, min: 1, max: 283, avg: 174.94)
Length (states) of path with itp non-trivial itp:    388048 (count: 8940, min: 1, max: 160, avg: 43.41)
Length (states) of path with itp 'false':              8940 (count: 8940, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           4 (count: 8940, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:          379104 (count: 8940, min: 0, max: 159, avg: 42.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8941
Number of successful refinements:     8940
Number of failed refinements:         0
Max. size of reached set before ref.: 7291
Max. size of reached set after ref.:  6978
Avg. size of reached set before ref.: 4812.76
Avg. size of reached set after ref.:  4151.67

Total time for CEGAR algorithm:     896.503s
Time for refinements:               619.613s
Average time for refinement:          0.069s
Max time for refinement:              0.323s

Code Coverage
-----------------------------
  Function coverage:      0.614
  Visited lines:          1644
  Total lines:            2197
  Line coverage:          0.748
  Visited conditions:     264
  Total conditions:       440
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     2964
Number of CFA edges:             3321
Number of relevant variables:    321
Number of functions:             114
Number of loops:                 12
Size of reached set:             5794
  Number of reached locations:   924 (31%)
    Avg states per location:     6
    Max states per location:     138 (at node N26)
  Number of reached functions:   70 (61%)
  Number of partitions:          5771
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1737 (before line 5563), Function main called from node N1722, stack depth 1 [7dd00705], stack [main]])
  Number of target states:       1
  Size of final wait list        62

Time for analysis setup:          3.832s
  Time for loading CPAs:          0.664s
  Time for loading parser:        0.497s
  Time for CFA construction:      2.548s
    Time for parsing file(s):     0.828s
    Time for AST to CFA:          0.798s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.618s
      Time for var class.:        0.319s
Time for Analysis:              896.503s
CPU time for analysis:          896.430s
Total time for CPAchecker:      900.337s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.155s

Time for Garbage Collector:      20.915s (in 2052 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                440MB (   420 MiB) max;    173MB (   165 MiB) avg;    481MB (   459 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           632MB (   603 MiB) max;    251MB (   239 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8153MB (  7776 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
