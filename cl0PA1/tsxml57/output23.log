scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n58ak2li/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29740 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27532 (93%)
  Because of loop head:            1790 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         418 (1%)
  Times precision was empty:       14629 (49%)
  Times precision was {false}:     337 (1%)
  Times result was cached:         13865 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      909 (3%)
  Times result was 'false':        1928 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         38258
  BDD entailment checks:           3516
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          13
Number of abstraction locations:          106
Max number of predicates per location:    11
Avg number of predicates per location:    2
Total predicates per abstraction:         28683
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 23.02
Number of irrelevant predicates:          9313 (32%)
Number of preds handled by boolean abs:   2825 (10%)
  Total number of models for allsat:      1196
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.32

Time for post operator:                  4.681s
  Time for path formula creation:        4.577s
Time for strengthen operator:            0.244s
Time for prec operator:                  5.315s
  Time for abstraction:                  4.829s (Max:     0.043s, Count: 29740)
    Boolean abstraction:                 1.133s
    Solving time:                        0.893s (Max:     0.041s)
    Model enumeration time:              0.145s
    Time for BDD construction:           0.131s (Max:     0.012s)
Time for merge operator:                 0.415s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     1.038s

Number of path formula cache hits:   258523 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.986s

Total number of created targets for pointer analysis: 16659
   Number of created targets for uf: *unsigned_short_int is 944
   Number of created targets for uf: *signed_int is 73
   Number of created targets for uf: *(char)* is 941
   Number of created targets for uf: *unsigned_char is 24
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 24


Number of BDD nodes:                               1193
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2521 (count: 25809, min: 0, max: 223, avg: 0.10)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.535s
  Time for transition matches:                         0.238s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       255394 (count: 255394, min: 1, max: 1, avg: 1.00) [1 x 255394]

CPA algorithm statistics
------------------------
Number of iterations:            141044
Max size of waitlist:            270
Average size of waitlist:        73
Number of computed successors:   166577
Max successors for one state:    2
Number of times merged:          17371
Number of times stopped:         19075
Number of times breaked:         418

Total time for CPA algorithm:        16.279s (Max:     1.040s)
  Time for choose from waitlist:      0.109s
  Time for precision adjustment:      6.412s
  Time for transfer relation:         7.789s
  Time for merge operator:            0.708s
  Time for stop operator:             0.301s
  Time for adding to reached set:     0.332s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   418
Avg. length of target path (in blocks):               11762 (count: 418, min: 12, max: 44, avg: 28.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.706s
  Counterexample analysis:                             5.919s (Max:     0.037s, Calls: 418)
    Refinement sat check:                              4.611s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.174s
  ARG update:                                          0.387s

Length of refined path (in blocks):                   11216 (count: 417, min: 4, max: 43, avg: 26.90)
Number of affected states:                             4147 (count: 417, min: 1, max: 31, avg: 9.94)
Length (states) of path with itp 'true':               6652 (count: 417, min: 0, max: 34, avg: 15.95)
Length (states) of path with itp non-trivial itp:      4147 (count: 417, min: 1, max: 31, avg: 9.94)
Length (states) of path with itp 'false':               417 (count: 417, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 417, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3730 (count: 417, min: 0, max: 30, avg: 8.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                418
Number of successful refinements:     417
Number of failed refinements:         0
Max. size of reached set before ref.: 10687
Max. size of reached set after ref.:  8303
Avg. size of reached set before ref.: 4695.47
Avg. size of reached set after ref.:  4357.63

Total time for CEGAR algorithm:      25.668s
Time for refinements:                 8.211s
Average time for refinement:          0.019s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.257
  Visited lines:          1789
  Total lines:            3754
  Line coverage:          0.477
  Visited conditions:     242
  Total conditions:       794
  Condition coverage:     0.305

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             8150
  Number of reached locations:   671 (13%)
    Avg states per location:     12
    Max states per location:     67 (at node N3149)
  Number of reached functions:   59 (26%)
  Number of partitions:          8147
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [7e7fe6d], stack [main]])
  Number of target states:       1
  Size of final wait list        112

Time for analysis setup:          4.642s
  Time for loading CPAs:          0.742s
  Time for loading parser:        0.556s
  Time for CFA construction:      3.262s
    Time for parsing file(s):     0.864s
    Time for AST to CFA:          1.047s
    Time for CFA sanity check:    0.240s
    Time for post-processing:     0.959s
      Time for var class.:        0.400s
Time for Analysis:               25.668s
CPU time for analysis:           25.680s
Total time for CPAchecker:       30.313s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.211s

Time for Garbage Collector:       0.859s (in 87 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   109 MiB) max;     63MB (    60 MiB) avg;    121MB (   115 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        44MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
