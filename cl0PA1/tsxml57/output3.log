scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_x1bdmujq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_csr_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            41921 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38239 (91%)
  Because of loop head:            3562 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         120 (0%)
  Times precision was empty:       16120 (38%)
  Times precision was {false}:     589 (1%)
  Times result was cached:         22966 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2246 (5%)
  Times result was 'false':        3055 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         79040
  BDD entailment checks:           29054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          13
Number of abstraction locations:          53
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         150583
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 53.12
Number of irrelevant predicates:          63047 (42%)
Number of preds handled by boolean abs:   8186 (5%)
  Total number of models for allsat:      5021
  Max number of models for allsat:        36
  Avg number of models for allsat:        2.24

Time for post operator:                  3.819s
  Time for path formula creation:        3.597s
Time for strengthen operator:            0.337s
Time for prec operator:                 11.153s
  Time for abstraction:                 10.402s (Max:     0.022s, Count: 41921)
    Boolean abstraction:                 2.347s
    Solving time:                        1.605s (Max:     0.013s)
    Model enumeration time:              0.594s
    Time for BDD construction:           0.183s (Max:     0.012s)
Time for merge operator:                 0.356s
Time for coverage check:                 0.077s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     2.199s

Number of path formula cache hits:   354717 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.776s

Total number of created targets for pointer analysis: 332
   Number of created targets for uf: *signed_int is 67
   Number of created targets for uf: *enum_fe_sec_tone_mode is 12
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *enum_model_type is 11
   Number of created targets for uf: *enum_fe_sec_voltage is 12
   Number of created targets for uf: *(struct_device)* is 12
   Number of created targets for uf: *char is 5


Number of BDD nodes:                               6484
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6368 (count: 63080, min: 0, max: 384, avg: 0.10)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.698s
  Time for transition matches:                         0.314s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       330891 (count: 330891, min: 1, max: 1, avg: 1.00) [1 x 330891]

CPA algorithm statistics
------------------------
Number of iterations:            208229
Max size of waitlist:            145
Average size of waitlist:        63
Number of computed successors:   253444
Max successors for one state:    2
Number of times merged:          24993
Number of times stopped:         32308
Number of times breaked:         120

Total time for CPA algorithm:        22.923s (Max:     0.835s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:     12.847s
  Time for transfer relation:         7.527s
  Time for merge operator:            0.804s
  Time for stop operator:             0.372s
  Time for adding to reached set:     0.344s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   120
Avg. length of target path (in blocks):                2373 (count: 120, min: 8, max: 33, avg: 19.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.411s
  Counterexample analysis:                             1.626s (Max:     0.027s, Calls: 120)
    Refinement sat check:                              1.261s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.127s
  ARG update:                                          0.512s

Length of refined path (in blocks):                    1878 (count: 120, min: 4, max: 30, avg: 15.65)
Number of affected states:                             1337 (count: 120, min: 1, max: 28, avg: 11.14)
Length (states) of path with itp 'true':                421 (count: 120, min: 1, max: 17, avg: 3.51)
Length (states) of path with itp non-trivial itp:      1337 (count: 120, min: 1, max: 28, avg: 11.14)
Length (states) of path with itp 'false':               120 (count: 120, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 120, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1217 (count: 120, min: 0, max: 27, avg: 10.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                120
Number of successful refinements:     120
Number of failed refinements:         0
Max. size of reached set before ref.: 3706
Max. size of reached set after ref.:  2559
Avg. size of reached set before ref.: 2323.83
Avg. size of reached set after ref.:  533.53

Total time for CEGAR algorithm:      25.735s
Time for refinements:                 2.750s
Average time for refinement:          0.022s
Max time for refinement:              0.057s

Code Coverage
-----------------------------
  Function coverage:      0.213
  Visited lines:          1429
  Total lines:            3754
  Line coverage:          0.381
  Visited conditions:     178
  Total conditions:       794
  Condition coverage:     0.224

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             3246
  Number of reached locations:   459 (9%)
    Avg states per location:     7
    Max states per location:     35 (at node N1098)
  Number of reached functions:   49 (21%)
  Number of partitions:          3215
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [7e7fe6d], stack [main]])
  Number of target states:       0
  Size of final wait list        112

Time for analysis setup:          4.595s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.460s
  Time for CFA construction:      3.232s
    Time for parsing file(s):     0.767s
    Time for AST to CFA:          1.142s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.930s
      Time for var class.:        0.412s
Time for Analysis:               25.735s
CPU time for analysis:           25.730s
Total time for CPAchecker:       30.335s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.172s

Time for Garbage Collector:       0.740s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     53MB (    51 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
