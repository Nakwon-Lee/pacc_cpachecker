scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ufi2m5em/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_run_transaction to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29819 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26766 (90%)
  Because of loop head:            2750 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         303 (1%)
  Times precision was empty:       10683 (36%)
  Times precision was {false}:     316 (1%)
  Times result was cached:         18141 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      679 (2%)
  Times result was 'false':        1054 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         49828
  BDD entailment checks:           6956
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          13
Number of abstraction locations:          93
Max number of predicates per location:    11
Avg number of predicates per location:    2
Total predicates per abstraction:         29109
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 29.26
Number of irrelevant predicates:          12402 (43%)
Number of preds handled by boolean abs:   2081 (7%)
  Total number of models for allsat:      830
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.22

Time for post operator:                  5.195s
  Time for path formula creation:        5.080s
Time for strengthen operator:            0.244s
Time for prec operator:                  5.376s
  Time for abstraction:                  4.850s (Max:     0.041s, Count: 29819)
    Boolean abstraction:                 0.941s
    Solving time:                        0.987s (Max:     0.032s)
    Model enumeration time:              0.115s
    Time for BDD construction:           0.116s (Max:     0.010s)
Time for merge operator:                 0.555s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     1.102s

Number of path formula cache hits:   268832 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.372s

Total number of created targets for pointer analysis: 32458
   Number of created targets for uf: *unsigned_short_int is 2461
   Number of created targets for uf: *signed_int is 49
   Number of created targets for uf: *(char)* is 1826
   Number of created targets for uf: *unsigned_char is 13
   Number of created targets for uf: *(struct_list_head)* is 117
   Number of created targets for uf: *unsigned_int is 61


Number of BDD nodes:                               1016
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2057 (count: 23738, min: 0, max: 217, avg: 0.09)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.573s
  Time for transition matches:                         0.228s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       268573 (count: 268573, min: 1, max: 1, avg: 1.00) [1 x 268573]

CPA algorithm statistics
------------------------
Number of iterations:            156889
Max size of waitlist:            194
Average size of waitlist:        52
Number of computed successors:   186276
Max successors for one state:    2
Number of times merged:          21436
Number of times stopped:         25346
Number of times breaked:         303

Total time for CPA algorithm:        16.918s (Max:     1.056s)
  Time for choose from waitlist:      0.146s
  Time for precision adjustment:      6.495s
  Time for transfer relation:         8.048s
  Time for merge operator:            0.976s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.264s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   303
Avg. length of target path (in blocks):               10349 (count: 303, min: 12, max: 46, avg: 34.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.094s
  Counterexample analysis:                             6.184s (Max:     0.064s, Calls: 303)
    Refinement sat check:                              4.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.195s
  ARG update:                                          0.426s

Length of refined path (in blocks):                    9945 (count: 302, min: 4, max: 45, avg: 32.93)
Number of affected states:                             5641 (count: 302, min: 1, max: 32, avg: 18.68)
Length (states) of path with itp 'true':               4002 (count: 302, min: 0, max: 19, avg: 13.25)
Length (states) of path with itp non-trivial itp:      5641 (count: 302, min: 1, max: 32, avg: 18.68)
Length (states) of path with itp 'false':               302 (count: 302, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 302, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5339 (count: 302, min: 0, max: 31, avg: 17.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                303
Number of successful refinements:     302
Number of failed refinements:         0
Max. size of reached set before ref.: 6296
Max. size of reached set after ref.:  5757
Avg. size of reached set before ref.: 3563.12
Avg. size of reached set after ref.:  3045.53

Total time for CEGAR algorithm:      25.840s
Time for refinements:                 8.263s
Average time for refinement:          0.027s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.230
  Visited lines:          1638
  Total lines:            3754
  Line coverage:          0.436
  Visited conditions:     216
  Total conditions:       794
  Condition coverage:     0.272

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             5506
  Number of reached locations:   566 (11%)
    Avg states per location:     9
    Max states per location:     51 (at node N241)
  Number of reached functions:   53 (23%)
  Number of partitions:          5502
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [7e7fe6d], stack [main]])
  Number of target states:       1
  Size of final wait list        50

Time for analysis setup:          4.499s
  Time for loading CPAs:          0.813s
  Time for loading parser:        0.461s
  Time for CFA construction:      3.103s
    Time for parsing file(s):     0.783s
    Time for AST to CFA:          1.067s
    Time for CFA sanity check:    0.225s
    Time for post-processing:     0.851s
      Time for var class.:        0.426s
Time for Analysis:               25.840s
CPU time for analysis:           25.840s
Total time for CPAchecker:       30.343s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.133s

Time for Garbage Collector:       0.745s (in 88 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 92MB (    88 MiB) max;     58MB (    55 MiB) avg;     96MB (    91 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     37MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
