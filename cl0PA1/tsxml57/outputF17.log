scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t686cagd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_csr_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_run_transaction to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmxdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8673: Ignoring function call through function pointer *(fdtv->demux.dmx.add_frontend): err = (*(fdtv->demux.dmx.add_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8679: Ignoring function call through function pointer *(fdtv->demux.dmx.connect_frontend): err = (*(fdtv->demux.dmx.connect_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8708: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8710: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1352392 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1228589 (91%)
  Because of loop head:            112213 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11590 (1%)
  Times precision was empty:       252950 (19%)
  Times precision was {false}:     786 (0%)
  Times result was cached:         1091190 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      7466 (1%)
  Times result was 'false':        36436 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1878297
  BDD entailment checks:           212125
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          12
Number of abstraction locations:          221
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         3997063
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 484.38
Number of irrelevant predicates:          2233090 (56%)
Number of preds handled by boolean abs:   22618 (1%)
  Total number of models for allsat:      7710
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.03

Time for post operator:                 36.991s
  Time for path formula creation:       33.970s
Time for strengthen operator:            6.066s
Time for prec operator:                151.201s
  Time for abstraction:                140.854s (Max:     0.624s, Count: 1352392)
    Boolean abstraction:                13.480s
    Solving time:                       12.981s (Max:     0.034s)
    Model enumeration time:              1.171s
    Time for BDD construction:           0.158s (Max:     0.008s)
Time for merge operator:                 3.895s
Time for coverage check:                 0.392s
  Time for BDD entailment checks:        0.221s
Total time for SMT solver (w/o itp):    14.152s

Number of path formula cache hits:   12354879 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.065s

Total number of created targets for pointer analysis: 255128
   Number of created targets for uf: *(void)* is 81
   Number of created targets for uf: *enum_dmx_frontend_source is 33
   Number of created targets for uf: *(struct_input_dev)* is 41
   Number of created targets for uf: *enum_fe_sec_tone_mode is 41
   Number of created targets for uf: *enum_model_type is 41
   Number of created targets for uf: *enum_fe_sec_voltage is 41
   Number of created targets for uf: *unsigned_short_int is 13022
   Number of created targets for uf: *signed_int is 129
   Number of created targets for uf: *(char)* is 13301
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_list_head)* is 43
   Number of created targets for uf: *_Bool is 129
   Number of created targets for uf: *unsigned_int is 47
   Number of created targets for uf: *(struct_device)* is 41
   Number of created targets for uf: *char is 561


Number of BDD nodes:                               738
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15491 (count: 514747, min: 0, max: 346, avg: 0.03)
Time for BDD node cleanup:                             0.088s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.695s
  Time for transition matches:                         5.241s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.045s
Automaton transfers with branching:                0
Automaton transfer successors:                     10615789 (count: 10615789, min: 1, max: 1, avg: 1.00) [1 x 10615789]

CPA algorithm statistics
------------------------
Number of iterations:            6599187
Max size of waitlist:            43
Average size of waitlist:        26
Number of computed successors:   7682756
Max successors for one state:    2
Number of times merged:          833086
Number of times stopped:         1026314
Number of times breaked:         11590

Total time for CPA algorithm:       309.908s (Max:     1.176s)
  Time for choose from waitlist:      1.413s
  Time for precision adjustment:    182.501s
  Time for transfer relation:        96.044s
  Time for merge operator:            8.834s
  Time for stop operator:             5.147s
  Time for adding to reached set:     5.399s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11590
Avg. length of target path (in blocks):              849669 (count: 11590, min: 8, max: 148, avg: 73.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 394.618s
  Counterexample analysis:                           376.348s (Max:     0.132s, Calls: 11590)
    Refinement sat check:                            269.493s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.371s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.699s
  Precision update:                                    4.226s
  ARG update:                                          9.659s

Length of refined path (in blocks):                  837741 (count: 11589, min: 4, max: 147, avg: 72.29)
Number of affected states:                           108821 (count: 11589, min: 1, max: 80, avg: 9.39)
Length (states) of path with itp 'true':             717331 (count: 11589, min: 0, max: 138, avg: 61.90)
Length (states) of path with itp non-trivial itp:    108821 (count: 11589, min: 1, max: 80, avg: 9.39)
Length (states) of path with itp 'false':             11589 (count: 11589, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11589, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           97232 (count: 11589, min: 0, max: 79, avg: 8.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11590
Number of successful refinements:     11589
Number of failed refinements:         0
Max. size of reached set before ref.: 37852
Max. size of reached set after ref.:  32664
Avg. size of reached set before ref.: 12708.00
Avg. size of reached set after ref.:  12137.87

Total time for CEGAR algorithm:     895.197s
Time for refinements:               500.531s
Average time for refinement:          0.043s
Max time for refinement:              0.620s

Code Coverage
-----------------------------
  Function coverage:      0.448
  Visited lines:          2409
  Total lines:            3754
  Line coverage:          0.642
  Visited conditions:     420
  Total conditions:       794
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             23540
  Number of reached locations:   1286 (25%)
    Avg states per location:     18
    Max states per location:     198 (at node N241)
  Number of reached functions:   103 (45%)
  Number of partitions:          23498
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [3a2d3909], stack [main]])
  Number of target states:       1
  Size of final wait list        24

Time for analysis setup:          5.132s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.554s
  Time for CFA construction:      3.670s
    Time for parsing file(s):     0.900s
    Time for AST to CFA:          1.333s
    Time for CFA sanity check:    0.267s
    Time for post-processing:     0.997s
      Time for var class.:        0.349s
Time for Analysis:              895.197s
CPU time for analysis:          895.090s
Total time for CPAchecker:      900.331s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.352s

Time for Garbage Collector:      41.639s (in 2330 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                385MB (   368 MiB) max;    193MB (   184 MiB) avg;    397MB (   378 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           409MB (   390 MiB) max;    281MB (   268 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8191MB (  7812 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
