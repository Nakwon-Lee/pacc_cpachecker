scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bauawkqv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_run_transaction to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_csr_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmxdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8673: Ignoring function call through function pointer *(fdtv->demux.dmx.add_frontend): err = (*(fdtv->demux.dmx.add_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8679: Ignoring function call through function pointer *(fdtv->demux.dmx.connect_frontend): err = (*(fdtv->demux.dmx.connect_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8708: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8710: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1785055 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1582018 (89%)
  Because of loop head:            188058 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14979 (1%)
  Times precision was empty:       96882 (5%)
  Times precision was {false}:     1387 (0%)
  Times result was cached:         1674077 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12709 (1%)
  Times result was 'false':        49717 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         3242088
  BDD entailment checks:           416166
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          14
Number of abstraction locations:          276
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         7891005
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 559.80
Number of irrelevant predicates:          3016121 (38%)
Number of preds handled by boolean abs:   47693 (1%)
  Total number of models for allsat:      16394
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.29

Time for post operator:                 57.912s
  Time for path formula creation:       54.397s
Time for strengthen operator:            9.254s
Time for prec operator:                262.214s
  Time for abstraction:                247.846s (Max:     1.190s, Count: 1785055)
    Boolean abstraction:                17.125s
    Solving time:                       15.605s (Max:     0.039s)
    Model enumeration time:              1.785s
    Time for BDD construction:           0.297s (Max:     0.013s)
Time for merge operator:                 6.801s
Time for coverage check:                 0.627s
  Time for BDD entailment checks:        0.318s
Total time for SMT solver (w/o itp):    17.390s

Number of path formula cache hits:   18935574 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.749s

Total number of created targets for pointer analysis: 465517
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *(struct_input_dev)* is 8
   Number of created targets for uf: *enum_fe_sec_tone_mode is 8
   Number of created targets for uf: *enum_dmx_frontend_source is 8
   Number of created targets for uf: *enum_model_type is 8
   Number of created targets for uf: *enum_fe_sec_voltage is 8
   Number of created targets for uf: *unsigned_short_int is 575
   Number of created targets for uf: *signed_int is 118
   Number of created targets for uf: *(char)* is 23796
   Number of created targets for uf: *unsigned_char is 145
   Number of created targets for uf: *(struct_list_head)* is 16
   Number of created targets for uf: *_Bool is 308
   Number of created targets for uf: *unsigned_int is 36
   Number of created targets for uf: *char is 237
   Number of created targets for uf: *(struct_device)* is 8


Number of BDD nodes:                               4497
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27136 (count: 600251, min: 0, max: 588, avg: 0.05)
Time for BDD node cleanup:                             0.094s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.866s
  Time for transition matches:                         7.596s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                     16486758 (count: 16486758, min: 1, max: 1, avg: 1.00) [1 x 16486758]

CPA algorithm statistics
------------------------
Number of iterations:            9911738
Max size of waitlist:            224
Average size of waitlist:        56
Number of computed successors:   11713217
Max successors for one state:    2
Number of times merged:          1412961
Number of times stopped:         1689073
Number of times breaked:         14979

Total time for CPA algorithm:       497.678s (Max:     4.987s)
  Time for choose from waitlist:      2.487s
  Time for precision adjustment:    304.613s
  Time for transfer relation:       143.490s
  Time for merge operator:           15.327s
  Time for stop operator:             7.969s
  Time for adding to reached set:     8.239s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14979
Avg. length of target path (in blocks):              570175 (count: 14979, min: 12, max: 117, avg: 38.06)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 282.212s
  Counterexample analysis:                           259.068s (Max:     0.094s, Calls: 14979)
    Refinement sat check:                            194.699s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.270s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.332s
  Precision update:                                    4.642s
  ARG update:                                         14.223s

Length of refined path (in blocks):                  554438 (count: 14979, min: 4, max: 113, avg: 37.01)
Number of affected states:                           277489 (count: 14979, min: 1, max: 112, avg: 18.53)
Length (states) of path with itp 'true':             261970 (count: 14979, min: 0, max: 83, avg: 17.49)
Length (states) of path with itp non-trivial itp:    277489 (count: 14979, min: 1, max: 112, avg: 18.53)
Length (states) of path with itp 'false':             14979 (count: 14979, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14979, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          262510 (count: 14979, min: 0, max: 111, avg: 17.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14979
Number of successful refinements:     14979
Number of failed refinements:         0
Max. size of reached set before ref.: 41655
Max. size of reached set after ref.:  21950
Avg. size of reached set before ref.: 6611.70
Avg. size of reached set after ref.:  5945.95

Total time for CEGAR algorithm:     895.525s
Time for refinements:               349.511s
Average time for refinement:          0.023s
Max time for refinement:              0.500s

Code Coverage
-----------------------------
  Function coverage:      0.217
  Visited lines:          1598
  Total lines:            3754
  Line coverage:          0.426
  Visited conditions:     216
  Total conditions:       794
  Condition coverage:     0.272

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             2080
  Number of reached locations:   538 (11%)
    Avg states per location:     3
    Max states per location:     36 (at node N4007)
  Number of reached functions:   50 (22%)
  Number of partitions:          2073
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [7e7fe6d], stack [main]])
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          4.798s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.475s
  Time for CFA construction:      3.446s
    Time for parsing file(s):     0.813s
    Time for AST to CFA:          1.209s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.983s
      Time for var class.:        0.416s
Time for Analysis:              895.525s
CPU time for analysis:          895.420s
Total time for CPAchecker:      900.325s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.107s

Time for Garbage Collector:      45.715s (in 3066 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                624MB (   595 MiB) max;    208MB (   199 MiB) avg;    640MB (   610 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           678MB (   647 MiB) max;    303MB (   289 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8423MB (  8033 MiB) max;   8231MB (  7850 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
