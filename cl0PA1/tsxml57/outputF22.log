scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xpkr8zm_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_run_transaction to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_csr_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmxdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8673: Ignoring function call through function pointer *(fdtv->demux.dmx.add_frontend): err = (*(fdtv->demux.dmx.add_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8679: Ignoring function call through function pointer *(fdtv->demux.dmx.connect_frontend): err = (*(fdtv->demux.dmx.connect_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8708: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8710: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1240846 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1120487 (90%)
  Because of loop head:            107960 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12399 (1%)
  Times precision was empty:       171199 (14%)
  Times precision was {false}:     1081 (0%)
  Times result was cached:         1062715 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5851 (0%)
  Times result was 'false':        32943 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1828013
  BDD entailment checks:           215079
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          15
Number of abstraction locations:          244
Max number of predicates per location:    12
Avg number of predicates per location:    3
Total predicates per abstraction:         3358245
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 484.46
Number of irrelevant predicates:          1922841 (57%)
Number of preds handled by boolean abs:   14673 (0%)
  Total number of models for allsat:      6950
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.19

Time for post operator:                 40.074s
  Time for path formula creation:       37.883s
Time for strengthen operator:            6.066s
Time for prec operator:                131.187s
  Time for abstraction:                120.707s (Max:     0.492s, Count: 1240846)
    Boolean abstraction:                 8.427s
    Solving time:                        8.391s (Max:     0.038s)
    Model enumeration time:              0.835s
    Time for BDD construction:           0.129s (Max:     0.009s)
Time for merge operator:                 4.649s
Time for coverage check:                 0.334s
  Time for BDD entailment checks:        0.177s
Total time for SMT solver (w/o itp):     9.226s

Number of path formula cache hits:   11684094 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.844s

Total number of created targets for pointer analysis: 227193
   Number of created targets for uf: *(void)* is 39
   Number of created targets for uf: *enum_dmx_frontend_source is 19
   Number of created targets for uf: *(struct_input_dev)* is 20
   Number of created targets for uf: *enum_fe_sec_tone_mode is 20
   Number of created targets for uf: *enum_model_type is 20
   Number of created targets for uf: *enum_fe_sec_voltage is 20
   Number of created targets for uf: *unsigned_short_int is 9219
   Number of created targets for uf: *signed_int is 157
   Number of created targets for uf: *(char)* is 11811
   Number of created targets for uf: *unsigned_char is 14
   Number of created targets for uf: *(struct_list_head)* is 43
   Number of created targets for uf: *_Bool is 89
   Number of created targets for uf: *unsigned_int is 39
   Number of created targets for uf: *(struct_device)* is 20
   Number of created targets for uf: *char is 56


Number of BDD nodes:                               4347
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13349 (count: 428043, min: 0, max: 345, avg: 0.03)
Time for BDD node cleanup:                             0.044s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.039s
  Time for transition matches:                         4.757s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.032s
Automaton transfers with branching:                0
Automaton transfer successors:                     10028670 (count: 10028670, min: 1, max: 1, avg: 1.00) [1 x 10028670]

CPA algorithm statistics
------------------------
Number of iterations:            6208544
Max size of waitlist:            37
Average size of waitlist:        18
Number of computed successors:   7250147
Max successors for one state:    2
Number of times merged:          806467
Number of times stopped:         989943
Number of times breaked:         12399

Total time for CPA algorithm:       284.063s (Max:     1.044s)
  Time for choose from waitlist:      1.299s
  Time for precision adjustment:    158.371s
  Time for transfer relation:        95.058s
  Time for merge operator:            9.615s
  Time for stop operator:             4.591s
  Time for adding to reached set:     4.835s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12399
Avg. length of target path (in blocks):              783934 (count: 12399, min: 8, max: 134, avg: 63.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 349.446s
  Counterexample analysis:                           332.645s (Max:     0.089s, Calls: 12399)
    Refinement sat check:                            240.490s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.306s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.929s
  Precision update:                                    4.105s
  ARG update:                                          8.557s

Length of refined path (in blocks):                  770565 (count: 12398, min: 4, max: 133, avg: 62.15)
Number of affected states:                           115365 (count: 12398, min: 1, max: 106, avg: 9.31)
Length (states) of path with itp 'true':             642802 (count: 12398, min: 0, max: 124, avg: 51.85)
Length (states) of path with itp non-trivial itp:    115365 (count: 12398, min: 1, max: 106, avg: 9.31)
Length (states) of path with itp 'false':             12398 (count: 12398, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12398, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          102967 (count: 12398, min: 0, max: 105, avg: 8.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12399
Number of successful refinements:     12398
Number of failed refinements:         0
Max. size of reached set before ref.: 38436
Max. size of reached set after ref.:  38269
Avg. size of reached set before ref.: 16241.63
Avg. size of reached set after ref.:  15740.66

Total time for CEGAR algorithm:     896.070s
Time for refinements:               493.386s
Average time for refinement:          0.039s
Max time for refinement:              0.632s

Code Coverage
-----------------------------
  Function coverage:      0.435
  Visited lines:          2383
  Total lines:            3754
  Line coverage:          0.635
  Visited conditions:     418
  Total conditions:       794
  Condition coverage:     0.526

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             7349
  Number of reached locations:   1258 (25%)
    Avg states per location:     5
    Max states per location:     63 (at node N241)
  Number of reached functions:   100 (43%)
  Number of partitions:          7328
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3737 (before line 9933), Function main called from node N3599, stack depth 1 [3a2d3909], stack [main]])
  Number of target states:       1
  Size of final wait list        16

Time for analysis setup:          4.232s
  Time for loading CPAs:          0.655s
  Time for loading parser:        0.491s
  Time for CFA construction:      3.005s
    Time for parsing file(s):     0.803s
    Time for AST to CFA:          1.076s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.765s
      Time for var class.:        0.333s
Time for Analysis:              896.070s
CPU time for analysis:          895.970s
Total time for CPAchecker:      900.305s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.172s

Time for Garbage Collector:      39.411s (in 2533 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                373MB (   356 MiB) max;    177MB (   169 MiB) avg;    389MB (   370 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           414MB (   395 MiB) max;    260MB (   248 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8189MB (  7810 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
