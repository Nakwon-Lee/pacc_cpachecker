scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uzfq4ni0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_run_transaction to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_csr_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmxdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8673: Ignoring function call through function pointer *(fdtv->demux.dmx.add_frontend): err = (*(fdtv->demux.dmx.add_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8679: Ignoring function call through function pointer *(fdtv->demux.dmx.connect_frontend): err = (*(fdtv->demux.dmx.connect_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8708: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8710: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            627320 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  553242 (88%)
  Because of loop head:            59629 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14449 (2%)
  Times precision was empty:       129757 (21%)
  Times precision was {false}:     381 (0%)
  Times result was cached:         496723 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      459 (0%)
  Times result was 'false':        11846 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         734440
  BDD entailment checks:           116422
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          10
Number of abstraction locations:          93
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         498521
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 593.48
Number of irrelevant predicates:          136064 (27%)
Number of preds handled by boolean abs:   598 (0%)
  Total number of models for allsat:      517
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.13

Time for post operator:                 15.283s
  Time for path formula creation:       14.206s
Time for strengthen operator:            2.590s
Time for prec operator:                 38.511s
  Time for abstraction:                 33.447s (Max:     0.045s, Count: 627320)
    Boolean abstraction:                 0.975s
    Solving time:                        0.963s (Max:     0.028s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.063s (Max:     0.009s)
Time for merge operator:                 1.594s
Time for coverage check:                 0.192s
  Time for BDD entailment checks:        0.115s
Total time for SMT solver (w/o itp):     1.085s

Number of path formula cache hits:   5184344 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.983s

Total number of created targets for pointer analysis: 29301
   Number of created targets for uf: *(void)* is 53
   Number of created targets for uf: *(struct_input_dev)* is 11
   Number of created targets for uf: *enum_fe_sec_tone_mode is 12
   Number of created targets for uf: *enum_dmx_frontend_source is 19
   Number of created targets for uf: *enum_model_type is 11
   Number of created targets for uf: *enum_fe_sec_voltage is 12
   Number of created targets for uf: *unsigned_short_int is 452
   Number of created targets for uf: *signed_int is 295
   Number of created targets for uf: *(char)* is 1166
   Number of created targets for uf: *unsigned_char is 84
   Number of created targets for uf: *(struct_list_head)* is 29
   Number of created targets for uf: *_Bool is 81
   Number of created targets for uf: *unsigned_int is 14
   Number of created targets for uf: *(struct_device)* is 20
   Number of created targets for uf: *char is 155


Number of BDD nodes:                               315
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1099 (count: 250992, min: 0, max: 179, avg: 0.00)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.246s
  Time for transition matches:                         2.308s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.033s
Automaton transfers with branching:                0
Automaton transfer successors:                      4311554 (count: 4311554, min: 1, max: 1, avg: 1.00) [1 x 4311554]

CPA algorithm statistics
------------------------
Number of iterations:            2777612
Max size of waitlist:            60
Average size of waitlist:        34
Number of computed successors:   3204551
Max successors for one state:    2
Number of times merged:          309009
Number of times stopped:         394155
Number of times breaked:         14449

Total time for CPA algorithm:       101.306s (Max:     1.581s)
  Time for choose from waitlist:      0.726s
  Time for precision adjustment:     49.318s
  Time for transfer relation:        39.257s
  Time for merge operator:            3.410s
  Time for stop operator:             2.247s
  Time for adding to reached set:     2.126s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14449
Avg. length of target path (in blocks):             1507868 (count: 14449, min: 8, max: 143, avg: 104.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 759.461s
  Counterexample analysis:                           747.349s (Max:     0.195s, Calls: 14449)
    Refinement sat check:                            528.149s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.589s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.101s
  Precision update:                                    1.687s
  ARG update:                                          3.940s

Length of refined path (in blocks):                 1492879 (count: 14448, min: 4, max: 142, avg: 103.33)
Number of affected states:                           199903 (count: 14448, min: 1, max: 40, avg: 13.84)
Length (states) of path with itp 'true':            1278528 (count: 14448, min: 1, max: 118, avg: 88.49)
Length (states) of path with itp non-trivial itp:    199903 (count: 14448, min: 1, max: 40, avg: 13.84)
Length (states) of path with itp 'false':             14448 (count: 14448, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 14448, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          185455 (count: 14448, min: 0, max: 39, avg: 12.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14449
Number of successful refinements:     14448
Number of failed refinements:         0
Max. size of reached set before ref.: 2897
Max. size of reached set after ref.:  2607
Avg. size of reached set before ref.: 1934.02
Avg. size of reached set after ref.:  1740.46

Total time for CEGAR algorithm:     895.627s
Time for refinements:               781.849s
Average time for refinement:          0.054s
Max time for refinement:              0.198s

Code Coverage
-----------------------------
  Function coverage:      0.270
  Visited lines:          1806
  Total lines:            3754
  Line coverage:          0.481
  Visited conditions:     272
  Total conditions:       794
  Condition coverage:     0.343

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             2498
  Number of reached locations:   787 (15%)
    Avg states per location:     3
    Max states per location:     39 (at node N6)
  Number of reached functions:   62 (27%)
  Number of partitions:          2483
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [7e7fe6d], stack [main]])
  Number of target states:       1
  Size of final wait list        54

Time for analysis setup:          4.731s
  Time for loading CPAs:          0.834s
  Time for loading parser:        0.534s
  Time for CFA construction:      3.242s
    Time for parsing file(s):     0.741s
    Time for AST to CFA:          1.142s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     0.945s
      Time for var class.:        0.348s
Time for Analysis:              895.627s
CPU time for analysis:          895.530s
Total time for CPAchecker:      900.368s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.120s

Time for Garbage Collector:       4.143s (in 1604 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 99MB (    95 MiB) max;     68MB (    65 MiB) avg;    102MB (    97 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8285MB (  7901 MiB) max;   8180MB (  7801 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
