scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--media--firewire--firedtv.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_65r6hmcx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5780: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5783: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5786: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7651: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8371: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8774: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8814: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8836: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9117: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9993: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10217: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8673: Function pointer *(fdtv->demux.dmx.add_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8679: Function pointer *(fdtv->demux.dmx.connect_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8708: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8710: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8729: Function pointer *(fdtv->demux.dmx.close) with type int (*)(struct dmx_demux *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8730: Function pointer *(fdtv->demux.dmx.remove_frontend) with type int (*)(struct dmx_demux *, struct dmx_frontend *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function fw_core_add_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_core_remove_address_handler to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function noop_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_generic_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_net_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8729: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8730: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_dmxdev_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_unregister_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_csr_string to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmemdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmx_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_dmxdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8673: Ignoring function call through function pointer *(fdtv->demux.dmx.add_frontend): err = (*(fdtv->demux.dmx.add_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8679: Ignoring function call through function pointer *(fdtv->demux.dmx.connect_frontend): err = (*(fdtv->demux.dmx.connect_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dvb_net_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8708: Ignoring function call through function pointer *(fdtv->demux.dmx.close): (*(fdtv->demux.dmx.close))(&(fdtv->demux.dmx)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8710: Ignoring function call through function pointer *(fdtv->demux.dmx.remove_frontend): (*(fdtv->demux.dmx.remove_frontend))(&(fdtv->demux.dmx), &(fdtv->frontend)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_frontend to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dvb_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fw_run_transaction to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function crc32_be to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1095451 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1031232 (94%)
  Because of loop head:            51809 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12410 (1%)
  Times precision was empty:       132554 (12%)
  Times precision was {false}:     1084 (0%)
  Times result was cached:         954843 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6970 (1%)
  Times result was 'false':        32293 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1320064
  BDD entailment checks:           186006
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          15
Number of abstraction locations:          242
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         4653278
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 577.76
Number of irrelevant predicates:          919499 (20%)
Number of preds handled by boolean abs:   24512 (1%)
  Total number of models for allsat:      11775
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.69

Time for post operator:                 32.513s
  Time for path formula creation:       30.321s
Time for strengthen operator:            4.676s
Time for prec operator:                160.236s
  Time for abstraction:                151.562s (Max:     0.612s, Count: 1095451)
    Boolean abstraction:                 8.197s
    Solving time:                        7.153s (Max:     0.031s)
    Model enumeration time:              1.092s
    Time for BDD construction:           0.325s (Max:     0.014s)
Time for merge operator:                 3.564s
Time for coverage check:                 0.357s
  Time for BDD entailment checks:        0.238s
Total time for SMT solver (w/o itp):     8.245s

Number of path formula cache hits:   9546229 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.237s

Total number of created targets for pointer analysis: 189414
   Number of created targets for uf: *(void)* is 63
   Number of created targets for uf: *(struct_input_dev)* is 40
   Number of created targets for uf: *enum_fe_sec_tone_mode is 41
   Number of created targets for uf: *enum_dmx_frontend_source is 42
   Number of created targets for uf: *enum_model_type is 40
   Number of created targets for uf: *enum_fe_sec_voltage is 41
   Number of created targets for uf: *unsigned_short_int is 18143
   Number of created targets for uf: *signed_int is 566
   Number of created targets for uf: *(char)* is 6981
   Number of created targets for uf: *unsigned_char is 812
   Number of created targets for uf: *(struct_list_head)* is 105
   Number of created targets for uf: *_Bool is 352
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *char is 151
   Number of created targets for uf: *(struct_device)* is 41


Number of BDD nodes:                               8648
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16534 (count: 371412, min: 0, max: 595, avg: 0.04)
Time for BDD node cleanup:                             0.074s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.428s
  Time for transition matches:                         4.772s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.038s
Automaton transfers with branching:                0
Automaton transfer successors:                      8266113 (count: 8266113, min: 1, max: 1, avg: 1.00) [1 x 8266113]

CPA algorithm statistics
------------------------
Number of iterations:            4851487
Max size of waitlist:            855
Average size of waitlist:        257
Number of computed successors:   5640508
Max successors for one state:    2
Number of times merged:          567029
Number of times stopped:         663406
Number of times breaked:         12410

Total time for CPA algorithm:       290.361s (Max:     2.020s)
  Time for choose from waitlist:      1.428s
  Time for precision adjustment:    182.858s
  Time for transfer relation:        81.709s
  Time for merge operator:            7.280s
  Time for stop operator:             4.039s
  Time for adding to reached set:     4.834s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12410
Avg. length of target path (in blocks):              473708 (count: 12410, min: 8, max: 98, avg: 38.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 234.648s
  Counterexample analysis:                           215.045s (Max:     0.094s, Calls: 12410)
    Refinement sat check:                            163.687s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.234s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.783s
  Precision update:                                    8.287s
  ARG update:                                          7.996s

Length of refined path (in blocks):                  460377 (count: 12409, min: 4, max: 97, avg: 37.10)
Number of affected states:                           110025 (count: 12409, min: 1, max: 95, avg: 8.87)
Length (states) of path with itp 'true':             337943 (count: 12409, min: 0, max: 78, avg: 27.23)
Length (states) of path with itp non-trivial itp:    110025 (count: 12409, min: 1, max: 95, avg: 8.87)
Length (states) of path with itp 'false':             12409 (count: 12409, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 12409, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           97616 (count: 12409, min: 0, max: 94, avg: 7.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12410
Number of successful refinements:     12409
Number of failed refinements:         0
Max. size of reached set before ref.: 59519
Max. size of reached set after ref.:  59077
Avg. size of reached set before ref.: 20360.82
Avg. size of reached set after ref.:  19963.98

Total time for CEGAR algorithm:     895.629s
Time for refinements:               433.918s
Average time for refinement:          0.034s
Max time for refinement:              0.566s

Code Coverage
-----------------------------
  Function coverage:      0.430
  Visited lines:          2260
  Total lines:            3754
  Line coverage:          0.602
  Visited conditions:     386
  Total conditions:       794
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     5085
Number of CFA edges:             5579
Number of relevant variables:    683
Number of functions:             230
Number of loops:                 22
Size of reached set:             33604
  Number of reached locations:   1158 (23%)
    Avg states per location:     29
    Max states per location:     235 (at node N3180)
  Number of reached functions:   99 (43%)
  Number of partitions:          33526
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N3612 (before line 9818), Function main called from node N3599, stack depth 1 [7e7fe6d], stack [main]])
  Number of target states:       1
  Size of final wait list        457

Time for analysis setup:          4.730s
  Time for loading CPAs:          0.830s
  Time for loading parser:        0.515s
  Time for CFA construction:      3.262s
    Time for parsing file(s):     0.770s
    Time for AST to CFA:          1.125s
    Time for CFA sanity check:    0.292s
    Time for post-processing:     0.911s
      Time for var class.:        0.361s
Time for Analysis:              895.629s
CPU time for analysis:          895.470s
Total time for CPAchecker:      900.361s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.484s

Time for Garbage Collector:      49.597s (in 3330 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                319MB (   305 MiB) max;    140MB (   134 MiB) avg;    351MB (   334 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           392MB (   374 MiB) max;    207MB (   197 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8287MB (  7903 MiB) max;   8192MB (  7813 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
