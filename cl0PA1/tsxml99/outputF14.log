scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--char--ipmi--ipmi_msghandler.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b0vkkiw_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3390: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 3395: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 3405: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 2:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 4:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 8:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3546: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3549: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3552: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8987: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4251: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8029: Function pointer *(intf->handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4419: Function pointer *(user->handler->ipmi_recv_hndl) with type void (*)(struct ipmi_recv_msg *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7222: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5731: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4680: Function pointer *(intf->handlers->inc_usecount) with type int (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4188: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4976: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8621: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8451: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_smi_version_proc_ops_release to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_smi_stats_proc_ops_release to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_smi_ipmb_proc_ops_release to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_cpu_idle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8621: Ignoring function call through function pointer *(intf->handlers->set_run_to_completion): (*(intf->handlers->set_run_to_completion))(intf->send_info, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8451: Ignoring function call through function pointer *(intf->handlers->set_run_to_completion): (*(intf->handlers->set_run_to_completion))(intf->send_info, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8299: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6787: Ignoring function call through function pointer *(intf->handlers->poll): (*(intf->handlers->poll))(intf->send_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5731: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, smi_msg, priority); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4976: Ignoring function call through function pointer *(intf->handlers->set_maintenance_mode): (*(intf->handlers->set_maintenance_mode))(intf->send_info, intf->maintenance_mode_enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3940: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4419: Ignoring function call through function pointer *(user->handler->ipmi_recv_hndl): (*(user->handler->ipmi_recv_hndl))(msg, user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4411: Ignoring function call through function pointer *(intf->null_user_handler): (*(intf->null_user_handler))(intf, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8185: Ignoring function call through function pointer *(handlers->request_events): (*(handlers->request_events))(intf->send_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 8185: Unsupported feature (recursion): ipmi_timeout(intf->send_info); (line was originally pointer call(ipmi_timeout) (*(handlers->request_events))(intf->send_info);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            263679 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  244131 (93%)
  Because of loop head:            19373 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         175 (0%)
  Times precision was empty:       186391 (71%)
  Times precision was {false}:     529 (0%)
  Times result was cached:         74388 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2371 (1%)
  Times result was 'false':        5081 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         254915
  BDD entailment checks:           42799
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          15
Number of abstraction locations:          76
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         595409
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 205.31
Number of irrelevant predicates:          351941 (59%)
Number of preds handled by boolean abs:   10608 (2%)
  Total number of models for allsat:      2831
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.19

Time for post operator:                 12.561s
  Time for path formula creation:       11.986s
Time for strengthen operator:            1.193s
Time for prec operator:                 27.081s
  Time for abstraction:                 24.807s (Max:     0.153s, Count: 263679)
    Boolean abstraction:                 4.608s
    Solving time:                        4.901s (Max:     0.072s)
    Model enumeration time:              0.473s
    Time for BDD construction:           0.141s (Max:     0.008s)
Time for merge operator:                 1.089s
Time for coverage check:                 0.098s
  Time for BDD entailment checks:        0.055s
Total time for SMT solver (w/o itp):     5.374s

Number of path formula cache hits:   2130479 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.941s

Total number of created targets for pointer analysis: 94062
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *unsigned_short_int is 67
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_ipmi_smi_msg)*],_VarArgs:_false)* is 62
   Number of created targets for uf: *signed_int is 138
   Number of created targets for uf: *(struct_ipmi_recv_msg)* is 9
   Number of created targets for uf: *unsigned_char is 81
   Number of created targets for uf: *signed_long_int is 3
   Number of created targets for uf: *(struct_list_head)* is 500
   Number of created targets for uf: *(unsigned_char)* is 39
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_ipmi_recv_msg)*],_VarArgs:_false)* is 12
   Number of created targets for uf: *(struct_ipmi_user)* is 5


Number of BDD nodes:                               2391
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5983 (count: 247305, min: 0, max: 389, avg: 0.02)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.119s
  Time for transition matches:                         1.348s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                      1852192 (count: 1852192, min: 1, max: 1, avg: 1.00) [1 x 1852192]

CPA algorithm statistics
------------------------
Number of iterations:            1069301
Max size of waitlist:            1525
Average size of waitlist:        424
Number of computed successors:   1269482
Max successors for one state:    2
Number of times merged:          106058
Number of times stopped:         134574
Number of times breaked:         175

Total time for CPA algorithm:        65.443s (Max:     2.074s)
  Time for choose from waitlist:      0.441s
  Time for precision adjustment:     33.392s
  Time for transfer relation:        25.193s
  Time for merge operator:            2.093s
  Time for stop operator:             0.889s
  Time for adding to reached set:     1.231s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   175
Avg. length of target path (in blocks):                4331 (count: 175, min: 8, max: 38, avg: 24.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.391s
  Counterexample analysis:                             2.540s (Max:     0.042s, Calls: 175)
    Refinement sat check:                              2.012s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.092s
  ARG update:                                          1.608s

Length of refined path (in blocks):                    4107 (count: 175, min: 4, max: 37, avg: 23.47)
Number of affected states:                             3755 (count: 175, min: 1, max: 35, avg: 21.46)
Length (states) of path with itp 'true':                177 (count: 175, min: 0, max: 2, avg: 1.01)
Length (states) of path with itp non-trivial itp:      3755 (count: 175, min: 1, max: 35, avg: 21.46)
Length (states) of path with itp 'false':               175 (count: 175, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 175, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3580 (count: 175, min: 0, max: 34, avg: 20.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                175
Number of successful refinements:     175
Number of failed refinements:         0
Max. size of reached set before ref.: 27232
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 6302.78
Avg. size of reached set after ref.:  6.01

Total time for CEGAR algorithm:      70.457s
Time for refinements:                 4.990s
Average time for refinement:          0.028s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.328
  Visited lines:          2106
  Total lines:            4621
  Line coverage:          0.456
  Visited conditions:     551
  Total conditions:       1324
  Condition coverage:     0.416

CPAchecker general statistics
-----------------------------
Number of program locations:     6581
Number of CFA edges:             7605
Number of relevant variables:    1018
Number of functions:             271
Number of loops:                 49
Size of reached set:             27894
  Number of reached locations:   1393 (21%)
    Avg states per location:     20
    Max states per location:     779 (at node N86)
  Number of reached functions:   89 (33%)
  Number of partitions:          27847
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N4931 (before line 8752), Function main called from node N4916, stack depth 1 [42d6c12d], stack [main]])
  Number of target states:       0
  Size of final wait list        1525

Time for analysis setup:          4.102s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.471s
  Time for CFA construction:      2.902s
    Time for parsing file(s):     0.680s
    Time for AST to CFA:          0.969s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     0.833s
      Time for var class.:        0.390s
Time for Analysis:               70.457s
CPU time for analysis:           70.450s
Total time for CPAchecker:       74.563s
Total CPU time for CPAchecker:   74.550s
Time for statistics:              0.418s

Time for Garbage Collector:       6.763s (in 507 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                172MB (   164 MiB) max;     78MB (    75 MiB) avg;    183MB (   174 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           185MB (   176 MiB) max;    136MB (   130 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8080MB (  7706 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
