scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--char--ipmi--ipmi_msghandler.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_oolwbzur/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3294: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3297: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3300: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3390: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 3395: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 3405: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 2:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 4:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 8:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3546: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3549: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3552: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6462;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 8987: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4251: Function pointer *(w->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8029: Function pointer *(intf->handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4419: Function pointer *(user->handler->ipmi_recv_hndl) with type void (*)(struct ipmi_recv_msg *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7222: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5731: Function pointer *(handlers->sender) with type void (*)(void *, struct ipmi_smi_msg *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4680: Function pointer *(intf->handlers->inc_usecount) with type int (*)(void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4188: Function pointer *(watcher->new_smi) with type void (*)(int, struct device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4976: Function pointer *(intf->handlers->set_maintenance_mode) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8621: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8451: Function pointer *(intf->handlers->set_run_to_completion) with type void (*)(void *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_smi_version_proc_ops_release to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_smi_stats_proc_ops_release to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_smi_ipmb_proc_ops_release to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_cpu_idle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8621: Ignoring function call through function pointer *(intf->handlers->set_run_to_completion): (*(intf->handlers->set_run_to_completion))(intf->send_info, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 8451: Ignoring function call through function pointer *(intf->handlers->set_run_to_completion): (*(intf->handlers->set_run_to_completion))(intf->send_info, 1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8299: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5731: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, smi_msg, priority); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4976: Ignoring function call through function pointer *(intf->handlers->set_maintenance_mode): (*(intf->handlers->set_maintenance_mode))(intf->send_info, intf->maintenance_mode_enable); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3940: Ignoring function call through function pointer *(msg->done): (*(msg->done))(msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6787: Ignoring function call through function pointer *(intf->handlers->poll): (*(intf->handlers->poll))(intf->send_info); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4419: Ignoring function call through function pointer *(user->handler->ipmi_recv_hndl): (*(user->handler->ipmi_recv_hndl))(msg, user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4411: Ignoring function call through function pointer *(intf->null_user_handler): (*(intf->null_user_handler))(intf, msg); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7222: Ignoring function call through function pointer *(handlers->sender): (*(handlers->sender))(intf->send_info, msg, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7849: Ignoring function call through function pointer *(user->handler->ipmi_watchdog_pretimeout): (*(user->handler->ipmi_watchdog_pretimeout))(user->handler_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function proc_mkdir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function atomic_notifier_chain_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            554782 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  531590 (96%)
  Because of loop head:            23117 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75 (0%)
  Times precision was empty:       178663 (32%)
  Times precision was {false}:     6176 (1%)
  Times result was cached:         368531 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1412 (0%)
  Times result was 'false':        1260 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         382634
  BDD entailment checks:           88794
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       53
Number of predicates discovered:          16
Number of abstraction locations:          192
Max number of predicates per location:    11
Avg number of predicates per location:    1
Total predicates per abstraction:         476691
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 62.82
Number of irrelevant predicates:          428424 (90%)
Number of preds handled by boolean abs:   1863 (0%)
  Total number of models for allsat:      1396
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                142.513s
  Time for path formula creation:      141.609s
Time for strengthen operator:            1.935s
Time for prec operator:                679.235s
  Time for abstraction:                671.954s (Max:   352.060s, Count: 554782)
    Boolean abstraction:                38.281s
    Solving time:                      611.624s (Max:   351.872s)
    Model enumeration time:              1.752s
    Time for BDD construction:           0.053s (Max:     0.001s)
Time for merge operator:                14.901s
Time for coverage check:                 0.157s
  Time for BDD entailment checks:        0.110s
Total time for SMT solver (w/o itp):   613.376s

Number of path formula cache hits:   1302834 (39%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   127.587s

Total number of created targets for pointer analysis: 4656285
   Number of created targets for uf: *unsigned_short_int is 2476
   Number of created targets for uf: *(void)* is 1982
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_ipmi_smi_msg)*],_VarArgs:_false)* is 2889
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *(struct_ipmi_recv_msg)* is 161
   Number of created targets for uf: *unsigned_char is 142970
   Number of created targets for uf: *signed_long_int is 9
   Number of created targets for uf: *(struct_list_head)* is 61
   Number of created targets for uf: *(unsigned_char)* is 261
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_ipmi_recv_msg)*],_VarArgs:_false)* is 2600
   Number of created targets for uf: *signed_short_int is 107
   Number of created targets for uf: *(struct_ipmi_user)* is 181


Number of BDD nodes:                               360
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3247 (count: 307157, min: 0, max: 525, avg: 0.01)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.560s
  Time for transition matches:                         2.125s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3019313 (count: 3019313, min: 1, max: 1, avg: 1.00) [1 x 3019313]

CPA algorithm statistics
------------------------
Number of iterations:            2001693
Max size of waitlist:            71
Average size of waitlist:        50
Number of computed successors:   2239551
Max successors for one state:    2
Number of times merged:          146920
Number of times stopped:         234657
Number of times breaked:         75

Total time for CPA algorithm:       887.194s (Max:   419.334s)
  Time for choose from waitlist:      0.715s
  Time for precision adjustment:    693.075s
  Time for transfer relation:       167.165s
  Time for merge operator:           16.799s
  Time for stop operator:             2.027s
  Time for adding to reached set:     2.976s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   75
Avg. length of target path (in blocks):                5434 (count: 75, min: 10, max: 121, avg: 72.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.401s
  Counterexample analysis:                             2.869s (Max:     0.131s, Calls: 75)
    Refinement sat check:                              2.169s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.027s
  ARG update:                                          3.417s

Length of refined path (in blocks):                    4022 (count: 75, min: 4, max: 93, avg: 53.63)
Number of affected states:                             3157 (count: 75, min: 1, max: 91, avg: 42.09)
Length (states) of path with itp 'true':                790 (count: 75, min: 1, max: 40, avg: 10.53)
Length (states) of path with itp non-trivial itp:      3157 (count: 75, min: 1, max: 91, avg: 42.09)
Length (states) of path with itp 'false':                75 (count: 75, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 75, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3082 (count: 75, min: 0, max: 90, avg: 41.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                75
Number of successful refinements:     75
Number of failed refinements:         0
Max. size of reached set before ref.: 51769
Max. size of reached set after ref.:  17072
Avg. size of reached set before ref.: 27930.49
Avg. size of reached set after ref.:  1283.87

Total time for CEGAR algorithm:     894.722s
Time for refinements:                 7.476s
Average time for refinement:          0.099s
Max time for refinement:              0.296s

Code Coverage
-----------------------------
  Function coverage:      0.277
  Visited lines:          1654
  Total lines:            4621
  Line coverage:          0.358
  Visited conditions:     453
  Total conditions:       1324
  Condition coverage:     0.342

CPAchecker general statistics
-----------------------------
Number of program locations:     6581
Number of CFA edges:             7605
Number of relevant variables:    1018
Number of functions:             271
Number of loops:                 49
Size of reached set:             5137
  Number of reached locations:   1097 (17%)
    Avg states per location:     4
    Max states per location:     90 (at node N86)
  Number of reached functions:   75 (28%)
  Number of partitions:          5131
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N4931 (before line 8752), Function main called from node N4916, stack depth 1 [42d6c12d], stack [main]])
  Number of target states:       0
  Size of final wait list        56

Time for analysis setup:          5.588s
  Time for loading CPAs:          0.808s
  Time for loading parser:        0.619s
  Time for CFA construction:      4.018s
    Time for parsing file(s):     0.976s
    Time for AST to CFA:          1.344s
    Time for CFA sanity check:    0.458s
    Time for post-processing:     1.082s
      Time for var class.:        0.490s
Time for Analysis:              894.722s
CPU time for analysis:          894.580s
Total time for CPAchecker:      900.314s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.147s

Time for Garbage Collector:      27.201s (in 423 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1100MB (  1049 MiB) max;    769MB (   734 MiB) avg;   1168MB (  1114 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1499MB (  1429 MiB) max;   1156MB (  1102 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8673MB (  8271 MiB) max;   8386MB (  7998 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
