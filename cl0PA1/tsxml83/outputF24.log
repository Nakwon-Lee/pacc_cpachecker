scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tlebydrd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1410710 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1139715 (81%)
  Because of loop head:            270520 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         475 (0%)
  Times precision was empty:       6745 (0%)
  Times precision was {false}:     856 (0%)
  Times result was cached:         1387210 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15899 (1%)
  Times result was 'false':        46827 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         553271
  BDD entailment checks:           388445
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          205
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         4572396
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 272.90
Number of irrelevant predicates:          1210595 (26%)
Number of preds handled by boolean abs:   31513 (1%)
  Total number of models for allsat:      18117
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.14

Time for post operator:                 68.167s
  Time for path formula creation:       65.827s
Time for strengthen operator:            3.942s
Time for prec operator:                200.598s
  Time for abstraction:                186.844s (Max:     2.425s, Count: 1410710)
    Boolean abstraction:                16.008s
    Solving time:                       13.570s (Max:     0.121s)
    Model enumeration time:              1.939s
    Time for BDD construction:           0.287s (Max:     0.012s)
Time for merge operator:                 2.858s
Time for coverage check:                 0.404s
  Time for BDD entailment checks:        0.321s
Total time for SMT solver (w/o itp):    15.509s

Number of path formula cache hits:   5241225 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    47.059s

Total number of created targets for pointer analysis: 614152
   Number of created targets for uf: *(char)* is 1969
   Number of created targets for uf: *signed_int is 16330
   Number of created targets for uf: *unsigned_char is 2214
   Number of created targets for uf: *(struct_applesmc_entry)* is 73
   Number of created targets for uf: *_Bool is 17
   Number of created targets for uf: *unsigned_int is 6033
   Number of created targets for uf: *((char)*)* is 83
   Number of created targets for uf: *signed_short_int is 32
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 8761


Number of BDD nodes:                               365
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31758 (count: 496382, min: 0, max: 1403, avg: 0.06)
Time for BDD node cleanup:                             0.090s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.894s
  Time for transition matches:                         3.549s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                      6020527 (count: 6020527, min: 1, max: 1, avg: 1.00) [1 x 6020527]

CPA algorithm statistics
------------------------
Number of iterations:            4480762
Max size of waitlist:            28
Average size of waitlist:        13
Number of computed successors:   4971409
Max successors for one state:    2
Number of times merged:          82413
Number of times stopped:         441491
Number of times breaked:         475

Total time for CPA algorithm:       354.446s (Max:     6.119s)
  Time for choose from waitlist:      1.229s
  Time for precision adjustment:    223.531s
  Time for transfer relation:       107.618s
  Time for merge operator:            4.485s
  Time for stop operator:             4.312s
  Time for adding to reached set:     4.979s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   475
Avg. length of target path (in blocks):               36192 (count: 475, min: 7, max: 178, avg: 76.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.119s
  Counterexample analysis:                            12.004s (Max:     0.096s, Calls: 475)
    Refinement sat check:                              8.227s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.199s
  Precision update:                                    0.271s
  ARG update:                                          7.300s

Length of refined path (in blocks):                   34732 (count: 475, min: 6, max: 177, avg: 73.12)
Number of affected states:                            18922 (count: 475, min: 3, max: 175, avg: 39.84)
Length (states) of path with itp 'true':              15335 (count: 475, min: 0, max: 127, avg: 32.28)
Length (states) of path with itp non-trivial itp:     18922 (count: 475, min: 3, max: 175, avg: 39.84)
Length (states) of path with itp 'false':               475 (count: 475, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 475, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18447 (count: 475, min: 2, max: 174, avg: 38.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                475
Number of successful refinements:     475
Number of failed refinements:         0
Max. size of reached set before ref.: 77640
Max. size of reached set after ref.:  54195
Avg. size of reached set before ref.: 14034.95
Avg. size of reached set after ref.:  4711.26

Total time for CEGAR algorithm:     380.324s
Time for refinements:                24.239s
Average time for refinement:          0.051s
Max time for refinement:              0.357s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1160
  Total lines:            1535
  Line coverage:          0.756
  Visited conditions:     230
  Total conditions:       334
  Condition coverage:     0.689

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             54339
  Number of reached locations:   783 (37%)
    Avg states per location:     69
    Max states per location:     1190 (at node N57)
  Number of reached functions:   60 (58%)
  Number of partitions:          54135
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1437 (before line 3874), Function applesmc_init called from node N1510, stack depth 2 [1f690994], stack [main, applesmc_init]])
  Number of target states:       0

Time for analysis setup:          3.129s
  Time for loading CPAs:          0.661s
  Time for loading parser:        0.407s
  Time for CFA construction:      1.960s
    Time for parsing file(s):     0.554s
    Time for AST to CFA:          0.626s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.522s
      Time for var class.:        0.289s
Time for Analysis:              380.324s
CPU time for analysis:          380.310s
Time for analyzing result:        0.046s
Total time for CPAchecker:      383.456s
Total CPU time for CPAchecker:  383.450s
Time for statistics:              0.791s

Time for Garbage Collector:      35.943s (in 648 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1124MB (  1071 MiB) max;    534MB (   509 MiB) avg;   1199MB (  1143 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1382MB (  1318 MiB) max;    817MB (   779 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8223MB (  7842 MiB) max;   8100MB (  7724 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
