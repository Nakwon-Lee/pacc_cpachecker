scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p8j5dbva/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1676257 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1351237 (81%)
  Because of loop head:            324524 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         496 (0%)
  Times precision was empty:       5453 (0%)
  Times precision was {false}:     855 (0%)
  Times result was cached:         1650220 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19729 (1%)
  Times result was 'false':        55295 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         661798
  BDD entailment checks:           464710
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          205
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         6384888
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 310.19
Number of irrelevant predicates:          2126954 (33%)
Number of preds handled by boolean abs:   47997 (1%)
  Total number of models for allsat:      30340
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.54

Time for post operator:                 89.299s
  Time for path formula creation:       86.530s
Time for strengthen operator:            4.913s
Time for prec operator:                256.823s
  Time for abstraction:                240.361s (Max:     3.434s, Count: 1676257)
    Boolean abstraction:                23.324s
    Solving time:                       18.839s (Max:     0.023s)
    Model enumeration time:              3.548s
    Time for BDD construction:           0.385s (Max:     0.012s)
Time for merge operator:                 3.219s
Time for coverage check:                 0.458s
  Time for BDD entailment checks:        0.349s
Total time for SMT solver (w/o itp):    22.387s

Number of path formula cache hits:   5762434 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    63.821s

Total number of created targets for pointer analysis: 869661
   Number of created targets for uf: *signed_int is 13488
   Number of created targets for uf: *(char)* is 2545
   Number of created targets for uf: *(struct_applesmc_entry)* is 97
   Number of created targets for uf: *unsigned_char is 60590
   Number of created targets for uf: *_Bool is 671
   Number of created targets for uf: *unsigned_int is 6444
   Number of created targets for uf: *signed_short_int is 87
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 13249
   Number of created targets for uf: *((char)*)* is 107


Number of BDD nodes:                               492
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       39482 (count: 594758, min: 0, max: 1121, avg: 0.07)
Time for BDD node cleanup:                             0.087s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.744s
  Time for transition matches:                         4.281s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      7169199 (count: 7169199, min: 1, max: 1, avg: 1.00) [1 x 7169199]

CPA algorithm statistics
------------------------
Number of iterations:            5328627
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   5912727
Max successors for one state:    2
Number of times merged:          98544
Number of times stopped:         527141
Number of times breaked:         496

Total time for CPA algorithm:       450.655s (Max:     8.809s)
  Time for choose from waitlist:      1.478s
  Time for precision adjustment:    282.376s
  Time for transfer relation:       140.838s
  Time for merge operator:            4.897s
  Time for stop operator:             5.005s
  Time for adding to reached set:     5.627s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   496
Avg. length of target path (in blocks):               38079 (count: 496, min: 7, max: 178, avg: 76.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.711s
  Counterexample analysis:                            12.247s (Max:     0.115s, Calls: 496)
    Refinement sat check:                              8.375s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.158s
  Precision update:                                    0.230s
  ARG update:                                          8.799s

Length of refined path (in blocks):                   36087 (count: 496, min: 6, max: 177, avg: 72.76)
Number of affected states:                            20596 (count: 496, min: 3, max: 175, avg: 41.52)
Length (states) of path with itp 'true':              14995 (count: 496, min: 0, max: 127, avg: 30.23)
Length (states) of path with itp non-trivial itp:     20596 (count: 496, min: 3, max: 175, avg: 41.52)
Length (states) of path with itp 'false':               496 (count: 496, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 496, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           20100 (count: 496, min: 2, max: 174, avg: 40.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                496
Number of successful refinements:     496
Number of failed refinements:         0
Max. size of reached set before ref.: 78033
Max. size of reached set after ref.:  54459
Avg. size of reached set before ref.: 14966.02
Avg. size of reached set after ref.:  4329.29

Total time for CEGAR algorithm:     478.782s
Time for refinements:                26.495s
Average time for refinement:          0.053s
Max time for refinement:              0.287s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1160
  Total lines:            1535
  Line coverage:          0.756
  Visited conditions:     230
  Total conditions:       334
  Condition coverage:     0.689

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             54478
  Number of reached locations:   783 (37%)
    Avg states per location:     69
    Max states per location:     1190 (at node N57)
  Number of reached functions:   60 (58%)
  Number of partitions:          54269
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1437 (before line 3874), Function applesmc_init called from node N1510, stack depth 2 [5982747b], stack [main, applesmc_init]])
  Number of target states:       0

Time for analysis setup:          3.184s
  Time for loading CPAs:          0.567s
  Time for loading parser:        0.536s
  Time for CFA construction:      2.003s
    Time for parsing file(s):     0.645s
    Time for AST to CFA:          0.660s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.434s
      Time for var class.:        0.232s
Time for Analysis:              478.784s
CPU time for analysis:          478.760s
Time for analyzing result:        0.051s
Total time for CPAchecker:      481.970s
Total CPU time for CPAchecker:  481.940s
Time for statistics:              0.623s

Time for Garbage Collector:      42.911s (in 754 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1415MB (  1349 MiB) max;    681MB (   649 MiB) avg;   1437MB (  1370 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1895MB (  1807 MiB) max;   1018MB (   971 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8428MB (  8038 MiB) max;   8255MB (  7873 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
