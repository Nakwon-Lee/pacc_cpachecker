scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u6wxw9py/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2652951 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2140680 (81%)
  Because of loop head:            511773 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         498 (0%)
  Times precision was empty:       18439 (1%)
  Times precision was {false}:     804 (0%)
  Times result was cached:         2619792 (99%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13916 (1%)
  Times result was 'false':        88796 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1055672
  BDD entailment checks:           749748
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          205
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         7521205
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 510.95
Number of irrelevant predicates:          1709247 (23%)
Number of preds handled by boolean abs:   22923 (0%)
  Total number of models for allsat:      14868
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                103.250s
  Time for path formula creation:       99.537s
Time for strengthen operator:            7.004s
Time for prec operator:                274.677s
  Time for abstraction:                251.151s (Max:     3.773s, Count: 2652951)
    Boolean abstraction:                14.371s
    Solving time:                       12.910s (Max:     0.021s)
    Model enumeration time:              1.360s
    Time for BDD construction:           0.235s (Max:     0.010s)
Time for merge operator:                 4.259s
Time for coverage check:                 0.681s
  Time for BDD entailment checks:        0.526s
Total time for SMT solver (w/o itp):    14.270s

Number of path formula cache hits:   10621579 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    68.056s

Total number of created targets for pointer analysis: 803240
   Number of created targets for uf: *(char)* is 1777
   Number of created targets for uf: *signed_int is 19631
   Number of created targets for uf: *unsigned_char is 142
   Number of created targets for uf: *(struct_applesmc_entry)* is 75
   Number of created targets for uf: *_Bool is 13
   Number of created targets for uf: *unsigned_int is 7673
   Number of created targets for uf: *((char)*)* is 75
   Number of created targets for uf: *signed_short_int is 11
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 1537


Number of BDD nodes:                               346
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27855 (count: 863864, min: 0, max: 956, avg: 0.03)
Time for BDD node cleanup:                             0.127s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.937s
  Time for transition matches:                         6.301s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     11310238 (count: 11310238, min: 1, max: 1, avg: 1.00) [1 x 11310238]

CPA algorithm statistics
------------------------
Number of iterations:            8438860
Max size of waitlist:            31
Average size of waitlist:        15
Number of computed successors:   9363147
Max successors for one state:    2
Number of times merged:          152962
Number of times stopped:         833951
Number of times breaked:         498

Total time for CPA algorithm:       543.311s (Max:    11.638s)
  Time for choose from waitlist:      2.260s
  Time for precision adjustment:    321.471s
  Time for transfer relation:       178.903s
  Time for merge operator:            8.176s
  Time for stop operator:             8.482s
  Time for adding to reached set:     9.659s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   498
Avg. length of target path (in blocks):               29236 (count: 498, min: 7, max: 154, avg: 58.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.079s
  Counterexample analysis:                             9.315s (Max:     0.132s, Calls: 498)
    Refinement sat check:                              6.631s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.231s
  ARG update:                                         16.194s

Length of refined path (in blocks):                   28081 (count: 498, min: 6, max: 153, avg: 56.39)
Number of affected states:                            14570 (count: 498, min: 4, max: 151, avg: 29.26)
Length (states) of path with itp 'true':              13013 (count: 498, min: 0, max: 62, avg: 26.13)
Length (states) of path with itp non-trivial itp:     14570 (count: 498, min: 4, max: 151, avg: 29.26)
Length (states) of path with itp 'false':               498 (count: 498, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 498, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14072 (count: 498, min: 3, max: 150, avg: 28.26)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                498
Number of successful refinements:     498
Number of failed refinements:         0
Max. size of reached set before ref.: 226147
Max. size of reached set after ref.:  119603
Avg. size of reached set before ref.: 22954.50
Avg. size of reached set after ref.:  6245.57

Total time for CEGAR algorithm:     581.602s
Time for refinements:                35.921s
Average time for refinement:          0.072s
Max time for refinement:              3.327s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1160
  Total lines:            1535
  Line coverage:          0.756
  Visited conditions:     230
  Total conditions:       334
  Condition coverage:     0.689

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             119354
  Number of reached locations:   783 (37%)
    Avg states per location:     152
    Max states per location:     2686 (at node N118)
  Number of reached functions:   60 (58%)
  Number of partitions:          118768
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1432 (before line 3868), Function applesmc_init called from node N1510, stack depth 2 [1eec7cc9], stack [main, applesmc_init]])
  Number of target states:       0

Time for analysis setup:          3.475s
  Time for loading CPAs:          0.648s
  Time for loading parser:        0.516s
  Time for CFA construction:      2.192s
    Time for parsing file(s):     0.645s
    Time for AST to CFA:          0.740s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.510s
      Time for var class.:        0.280s
Time for Analysis:              581.602s
CPU time for analysis:          581.560s
Time for analyzing result:        0.094s
Total time for CPAchecker:      585.080s
Total CPU time for CPAchecker:  585.030s
Time for statistics:              1.086s

Time for Garbage Collector:      81.542s (in 1053 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1843MB (  1758 MiB) max;    677MB (   646 MiB) avg;   1926MB (  1837 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2049MB (  1954 MiB) max;    989MB (   943 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8155MB (  7778 MiB) max;   8093MB (  7718 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
