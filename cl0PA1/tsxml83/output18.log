scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_me1mndqq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29797 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  23922 (80%)
  Because of loop head:            5487 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         388 (1%)
  Times precision was empty:       4298 (14%)
  Times precision was {false}:     273 (1%)
  Times result was cached:         24446 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      780 (3%)
  Times result was 'false':        1033 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         9398
  BDD entailment checks:           7136
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          7
Number of abstraction locations:          105
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         79437
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 75.44
Number of irrelevant predicates:          39118 (49%)
Number of preds handled by boolean abs:   1839 (2%)
  Total number of models for allsat:      1152
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.48

Time for post operator:                  2.441s
  Time for path formula creation:        2.349s
Time for strengthen operator:            0.158s
Time for prec operator:                  6.585s
  Time for abstraction:                  6.046s (Max:     0.044s, Count: 29797)
    Boolean abstraction:                 1.099s
    Solving time:                        0.859s (Max:     0.042s)
    Model enumeration time:              0.150s
    Time for BDD construction:           0.077s (Max:     0.010s)
Time for merge operator:                 0.040s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     1.009s

Number of path formula cache hits:   129457 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.821s

Total number of created targets for pointer analysis: 2418
   Number of created targets for uf: *signed_int is 79
   Number of created targets for uf: *unsigned_char is 8
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 8
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 1081


Number of BDD nodes:                               271
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1647 (count: 17565, min: 0, max: 175, avg: 0.09)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.334s
Automaton transfers with branching:                0
Automaton transfer successors:                       120302 (count: 120302, min: 1, max: 1, avg: 1.00) [1 x 120302]

CPA algorithm statistics
------------------------
Number of iterations:            88454
Max size of waitlist:            46
Average size of waitlist:        29
Number of computed successors:   98067
Max successors for one state:    2
Number of times merged:          1131
Number of times stopped:         6000
Number of times breaked:         388

Total time for CPA algorithm:        12.519s (Max:     0.454s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      7.352s
  Time for transfer relation:         4.100s
  Time for merge operator:            0.140s
  Time for stop operator:             0.167s
  Time for adding to reached set:     0.227s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   388
Avg. length of target path (in blocks):               47779 (count: 388, min: 7, max: 168, avg: 123.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.052s
  Counterexample analysis:                            13.235s (Max:     0.100s, Calls: 388)
    Refinement sat check:                              7.820s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.065s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.102s
  Precision update:                                    0.203s
  ARG update:                                          0.238s

Length of refined path (in blocks):                   46404 (count: 388, min: 6, max: 167, avg: 119.60)
Number of affected states:                            10199 (count: 388, min: 4, max: 100, avg: 26.29)
Length (states) of path with itp 'true':              35817 (count: 388, min: 0, max: 134, avg: 92.31)
Length (states) of path with itp non-trivial itp:     10199 (count: 388, min: 4, max: 100, avg: 26.29)
Length (states) of path with itp 'false':               388 (count: 388, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 388, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9811 (count: 388, min: 3, max: 99, avg: 25.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                388
Number of successful refinements:     388
Number of failed refinements:         0
Max. size of reached set before ref.: 1263
Max. size of reached set after ref.:  1031
Avg. size of reached set before ref.: 910.89
Avg. size of reached set after ref.:  678.33

Total time for CEGAR algorithm:      27.197s
Time for refinements:                14.536s
Average time for refinement:          0.037s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.452
  Visited lines:          718
  Total lines:            1535
  Line coverage:          0.468
  Visited conditions:     94
  Total conditions:       334
  Condition coverage:     0.281

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             799
  Number of reached locations:   355 (17%)
    Avg states per location:     2
    Max states per location:     10 (at node N1554)
  Number of reached functions:   47 (45%)
  Number of partitions:          788
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1526 (before line 3977), Function main called from node N1496, stack depth 1 [107e5441], stack [main]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          3.138s
  Time for loading CPAs:          0.605s
  Time for loading parser:        0.474s
  Time for CFA construction:      1.996s
    Time for parsing file(s):     0.573s
    Time for AST to CFA:          0.698s
    Time for CFA sanity check:    0.114s
    Time for post-processing:     0.475s
      Time for var class.:        0.251s
Time for Analysis:               27.197s
CPU time for analysis:           27.200s
Total time for CPAchecker:       30.337s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.058s

Time for Garbage Collector:       0.377s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    65 MiB) max;     47MB (    45 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8077MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
