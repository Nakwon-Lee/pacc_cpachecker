scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--hwmon--applesmc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uz7u0nlo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4062: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_allocate_polled_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_polled_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2310764 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2025176 (88%)
  Because of loop head:            282618 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2970 (0%)
  Times precision was empty:       100138 (4%)
  Times precision was {false}:     1062 (0%)
  Times result was cached:         2187999 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21565 (1%)
  Times result was 'false':        150764 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         694597
  BDD entailment checks:           551615
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       30
Number of predicates discovered:          8
Number of abstraction locations:          205
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         8341281
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 368.64
Number of irrelevant predicates:          2771946 (33%)
Number of preds handled by boolean abs:   66654 (1%)
  Total number of models for allsat:      46861
  Max number of models for allsat:        8
  Avg number of models for allsat:        2.17

Time for post operator:                 63.262s
  Time for path formula creation:       60.395s
Time for strengthen operator:            6.805s
Time for prec operator:                315.968s
  Time for abstraction:                298.246s (Max:     1.336s, Count: 2310764)
    Boolean abstraction:                27.927s
    Solving time:                       21.251s (Max:     0.046s)
    Model enumeration time:              5.383s
    Time for BDD construction:           0.534s (Max:     0.012s)
Time for merge operator:                 1.183s
Time for coverage check:                 0.539s
  Time for BDD entailment checks:        0.423s
Total time for SMT solver (w/o itp):    26.634s

Number of path formula cache hits:   10363992 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    34.035s

Total number of created targets for pointer analysis: 507750
   Number of created targets for uf: *(char)* is 817
   Number of created targets for uf: *signed_int is 32371
   Number of created targets for uf: *unsigned_char is 35382
   Number of created targets for uf: *(struct_applesmc_entry)* is 17
   Number of created targets for uf: *_Bool is 25
   Number of created targets for uf: *unsigned_int is 11347
   Number of created targets for uf: *((char)*)* is 35
   Number of created targets for uf: *signed_short_int is 3
   Number of created targets for uf: *(struct_applesmc_dev_attr)* is 433


Number of BDD nodes:                               914
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       43483 (count: 788633, min: 0, max: 535, avg: 0.06)
Time for BDD node cleanup:                             0.103s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.922s
  Time for transition matches:                         5.645s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      9771116 (count: 9771116, min: 1, max: 1, avg: 1.00) [1 x 9771116]

CPA algorithm statistics
------------------------
Number of iterations:            6593620
Max size of waitlist:            1226
Average size of waitlist:        383
Number of computed successors:   7295639
Max successors for one state:    2
Number of times merged:          71491
Number of times stopped:         405745
Number of times breaked:         2970

Total time for CPA algorithm:       499.014s (Max:    26.725s)
  Time for choose from waitlist:      1.875s
  Time for precision adjustment:    346.723s
  Time for transfer relation:       124.624s
  Time for merge operator:            2.506s
  Time for stop operator:             5.687s
  Time for adding to reached set:     6.388s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2970
Avg. length of target path (in blocks):              221434 (count: 2970, min: 7, max: 163, avg: 74.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  78.300s
  Counterexample analysis:                            66.106s (Max:     0.095s, Calls: 2970)
    Refinement sat check:                             45.083s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.116s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.433s
  Precision update:                                    1.283s
  ARG update:                                          9.522s

Length of refined path (in blocks):                  209225 (count: 2970, min: 6, max: 162, avg: 70.45)
Number of affected states:                            66024 (count: 2970, min: 4, max: 148, avg: 22.23)
Length (states) of path with itp 'true':             140231 (count: 2970, min: 0, max: 136, avg: 47.22)
Length (states) of path with itp non-trivial itp:     66024 (count: 2970, min: 4, max: 148, avg: 22.23)
Length (states) of path with itp 'false':              2970 (count: 2970, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2970, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           63054 (count: 2970, min: 3, max: 147, avg: 21.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2970
Number of successful refinements:     2970
Number of failed refinements:         0
Max. size of reached set before ref.: 254097
Max. size of reached set after ref.:  253255
Avg. size of reached set before ref.: 34859.10
Avg. size of reached set after ref.:  32775.31

Total time for CEGAR algorithm:     735.921s
Time for refinements:               164.847s
Average time for refinement:          0.055s
Max time for refinement:              2.421s

Code Coverage
-----------------------------
  Function coverage:      0.577
  Visited lines:          1160
  Total lines:            1535
  Line coverage:          0.756
  Visited conditions:     230
  Total conditions:       334
  Condition coverage:     0.689

CPAchecker general statistics
-----------------------------
Number of program locations:     2092
Number of CFA edges:             2345
Number of relevant variables:    325
Number of functions:             104
Number of loops:                 14
Size of reached set:             550256
  Number of reached locations:   783 (37%)
    Avg states per location:     702
    Max states per location:     12674 (at node N118)
  Number of reached functions:   60 (58%)
  Number of partitions:          546858
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1526 (before line 3977), Function main called from node N1496, stack depth 1 [304b9f1a], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.102s
  Time for loading CPAs:          0.670s
  Time for loading parser:        0.426s
  Time for CFA construction:      1.919s
    Time for parsing file(s):     0.583s
    Time for AST to CFA:          0.620s
    Time for CFA sanity check:    0.108s
    Time for post-processing:     0.459s
      Time for var class.:        0.252s
Time for Analysis:              735.921s
CPU time for analysis:          735.840s
Time for analyzing result:        0.382s
Total time for CPAchecker:      739.027s
Total CPU time for CPAchecker:  738.940s
Time for statistics:              3.042s

Time for Garbage Collector:      61.656s (in 2370 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1175MB (  1121 MiB) max;    305MB (   291 MiB) avg;   1208MB (  1152 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          1225MB (  1168 MiB) max;    452MB (   431 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8129MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
