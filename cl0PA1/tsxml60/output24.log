scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dzx78o98/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42729 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36085 (84%)
  Because of loop head:            6550 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         94 (0%)
  Times precision was empty:       37383 (87%)
  Times precision was {false}:     277 (1%)
  Times result was cached:         4743 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      326 (1%)
  Times result was 'false':        895 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         21902
  BDD entailment checks:           7230
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          9
Number of abstraction locations:          46
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         9629
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 15.97
Number of irrelevant predicates:          5469 (57%)
Number of preds handled by boolean abs:   446 (5%)
  Total number of models for allsat:      342
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                 10.406s
  Time for path formula creation:       10.309s
Time for strengthen operator:            0.335s
Time for prec operator:                  4.031s
  Time for abstraction:                  3.354s (Max:     0.212s, Count: 42729)
    Boolean abstraction:                 0.779s
    Solving time:                        1.145s (Max:     0.198s)
    Model enumeration time:              0.034s
    Time for BDD construction:           0.033s (Max:     0.006s)
Time for merge operator:                 0.379s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):     1.179s

Number of path formula cache hits:   195160 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.386s

Total number of created targets for pointer analysis: 6459
   Number of created targets for uf: *signed_int is 24
   Number of created targets for uf: *(char)* is 50
   Number of created targets for uf: *(struct_urb)* is 50
   Number of created targets for uf: *(unsigned_char)* is 50
   Number of created targets for uf: *unsigned_int is 15
   Number of created targets for uf: *char is 51
   Number of created targets for uf: *unsigned_long_int is 20


Number of BDD nodes:                               272
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         679 (count: 48303, min: 0, max: 99, avg: 0.01)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.690s
  Time for transition matches:                         0.346s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       257016 (count: 257027, min: 0, max: 1, avg: 1.00) [0 x 11, 1 x 257016]

CPA algorithm statistics
------------------------
Number of iterations:            136718
Max size of waitlist:            45
Average size of waitlist:        23
Number of computed successors:   151807
Max successors for one state:    2
Number of times merged:          7336
Number of times stopped:         13689
Number of times breaked:         94

Total time for CPA algorithm:        22.422s (Max:     3.890s)
  Time for choose from waitlist:      0.128s
  Time for precision adjustment:      5.718s
  Time for transfer relation:        14.193s
  Time for merge operator:            0.631s
  Time for stop operator:             0.468s
  Time for adding to reached set:     0.327s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):                2716 (count: 94, min: 9, max: 53, avg: 28.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.122s
  Counterexample analysis:                             1.502s (Max:     0.046s, Calls: 94)
    Refinement sat check:                              0.974s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.059s
  ARG update:                                          0.407s

Length of refined path (in blocks):                    2432 (count: 94, min: 8, max: 50, avg: 25.87)
Number of affected states:                              908 (count: 94, min: 2, max: 25, avg: 9.66)
Length (states) of path with itp 'true':               1430 (count: 94, min: 1, max: 34, avg: 15.21)
Length (states) of path with itp non-trivial itp:       908 (count: 94, min: 2, max: 25, avg: 9.66)
Length (states) of path with itp 'false':                94 (count: 94, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 94, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:             813 (count: 94, min: 1, max: 24, avg: 8.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 7027
Max. size of reached set after ref.:  6649
Avg. size of reached set before ref.: 6416.74
Avg. size of reached set after ref.:  5015.59

Total time for CEGAR algorithm:      25.815s
Time for refinements:                 2.956s
Average time for refinement:          0.031s
Max time for refinement:              0.124s

Code Coverage
-----------------------------
  Function coverage:      0.533
  Visited lines:          1663
  Total lines:            2552
  Line coverage:          0.652
  Visited conditions:     255
  Total conditions:       504
  Condition coverage:     0.506

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             5515
  Number of reached locations:   834 (24%)
    Avg states per location:     6
    Max states per location:     75 (at node N267)
  Number of reached functions:   72 (53%)
  Number of partitions:          5511
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2431 (before line 6719), Function main called from node N2286, stack depth 1 [7ec25216], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          4.496s
  Time for loading CPAs:          0.694s
  Time for loading parser:        0.544s
  Time for CFA construction:      3.136s
    Time for parsing file(s):     0.775s
    Time for AST to CFA:          1.154s
    Time for CFA sanity check:    0.218s
    Time for post-processing:     0.825s
      Time for var class.:        0.391s
Time for Analysis:               25.815s
CPU time for analysis:           25.810s
Total time for CPAchecker:       30.318s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.156s

Time for Garbage Collector:       1.180s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     66MB (    63 MiB) avg;    137MB (   130 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           156MB (   148 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
