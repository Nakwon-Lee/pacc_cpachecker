scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8teh6uh7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            77843 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  67232 (86%)
  Because of loop head:            10327 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         284 (0%)
  Times precision was empty:       31217 (40%)
  Times precision was {false}:     454 (1%)
  Times result was cached:         44645 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1527 (2%)
  Times result was 'false':        3200 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         61948
  BDD entailment checks:           17914
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          10
Number of abstraction locations:          145
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         167904
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 84.76
Number of irrelevant predicates:          75000 (45%)
Number of preds handled by boolean abs:   3315 (2%)
  Total number of models for allsat:      1521
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.835s
  Time for path formula creation:        3.646s
Time for strengthen operator:            0.460s
Time for prec operator:                 10.799s
  Time for abstraction:                 10.019s (Max:     0.024s, Count: 77843)
    Boolean abstraction:                 1.430s
    Solving time:                        1.286s (Max:     0.023s)
    Model enumeration time:              0.124s
    Time for BDD construction:           0.100s (Max:     0.010s)
Time for merge operator:                 0.232s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.410s

Number of path formula cache hits:   588796 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.869s

Total number of created targets for pointer analysis: 1018
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *(char)* is 7
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(unsigned_char)* is 11
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *char is 2
   Number of created targets for uf: *unsigned_int is 239
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               324
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3297 (count: 60948, min: 0, max: 118, avg: 0.05)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.781s
  Time for transition matches:                         0.381s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       519059 (count: 519201, min: 0, max: 1, avg: 1.00) [0 x 142, 1 x 519059]

CPA algorithm statistics
------------------------
Number of iterations:            288053
Max size of waitlist:            119
Average size of waitlist:        44
Number of computed successors:   336402
Max successors for one state:    2
Number of times merged:          22017
Number of times stopped:         31716
Number of times breaked:         284

Total time for CPA algorithm:        23.420s (Max:     0.681s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:     12.534s
  Time for transfer relation:         8.357s
  Time for merge operator:            0.562s
  Time for stop operator:             0.446s
  Time for adding to reached set:     0.403s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   284
Avg. length of target path (in blocks):                4611 (count: 284, min: 6, max: 29, avg: 16.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.396s
  Counterexample analysis:                             1.566s (Max:     0.023s, Calls: 284)
    Refinement sat check:                              1.045s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.151s
  ARG update:                                          0.550s

Length of refined path (in blocks):                    4132 (count: 284, min: 5, max: 28, avg: 14.55)
Number of affected states:                             2898 (count: 284, min: 2, max: 26, avg: 10.20)
Length (states) of path with itp 'true':                950 (count: 284, min: 1, max: 10, avg: 3.35)
Length (states) of path with itp non-trivial itp:      2898 (count: 284, min: 2, max: 26, avg: 10.20)
Length (states) of path with itp 'false':               284 (count: 284, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 284, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2614 (count: 284, min: 1, max: 25, avg: 9.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                284
Number of successful refinements:     284
Number of failed refinements:         0
Max. size of reached set before ref.: 4063
Max. size of reached set after ref.:  3713
Avg. size of reached set before ref.: 1712.85
Avg. size of reached set after ref.:  656.82

Total time for CEGAR algorithm:      26.307s
Time for refinements:                 2.733s
Average time for refinement:          0.009s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.452
  Visited lines:          1466
  Total lines:            2552
  Line coverage:          0.574
  Visited conditions:     249
  Total conditions:       504
  Condition coverage:     0.494

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             1575
  Number of reached locations:   722 (21%)
    Avg states per location:     2
    Max states per location:     20 (at node N2524)
  Number of reached functions:   61 (45%)
  Number of partitions:          1568
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1501 (before line 5679), Function dlfb_setup_modes called from node N1739, stack depth 3 [14bdb8ab], stack [main, edid_store, dlfb_setup_modes]])
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          4.015s
  Time for loading CPAs:          0.706s
  Time for loading parser:        0.453s
  Time for CFA construction:      2.768s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          1.040s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.677s
      Time for var class.:        0.334s
Time for Analysis:               26.308s
CPU time for analysis:           26.310s
Total time for CPAchecker:       30.325s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.096s

Time for Garbage Collector:       0.875s (in 155 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    73 MiB) max;     50MB (    48 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
