scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gb4g_7qd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            46592 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39332 (84%)
  Because of loop head:            7159 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (0%)
  Times precision was empty:       40027 (86%)
  Times precision was {false}:     333 (1%)
  Times result was cached:         5896 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      336 (1%)
  Times result was 'false':        993 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         24116
  BDD entailment checks:           7978
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          9
Number of abstraction locations:          57
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         11382
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 17.01
Number of irrelevant predicates:          6673 (59%)
Number of preds handled by boolean abs:   456 (4%)
  Total number of models for allsat:      352
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                 10.296s
  Time for path formula creation:       10.091s
Time for strengthen operator:            0.368s
Time for prec operator:                  4.470s
  Time for abstraction:                  3.737s (Max:     0.248s, Count: 46592)
    Boolean abstraction:                 0.978s
    Solving time:                        1.277s (Max:     0.243s)
    Model enumeration time:              0.070s
    Time for BDD construction:           0.046s (Max:     0.010s)
Time for merge operator:                 0.343s
Time for coverage check:                 0.105s
  Time for BDD entailment checks:        0.087s
Total time for SMT solver (w/o itp):     1.347s

Number of path formula cache hits:   219838 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.300s

Total number of created targets for pointer analysis: 6727
   Number of created targets for uf: *signed_int is 24
   Number of created targets for uf: *(char)* is 52
   Number of created targets for uf: *(struct_urb)* is 51
   Number of created targets for uf: *(unsigned_char)* is 51
   Number of created targets for uf: *unsigned_int is 813
   Number of created targets for uf: *char is 253
   Number of created targets for uf: *unsigned_long_int is 76


Number of BDD nodes:                               273
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         681 (count: 52071, min: 0, max: 77, avg: 0.01)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.763s
  Time for transition matches:                         0.345s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       280351 (count: 280365, min: 0, max: 1, avg: 1.00) [0 x 14, 1 x 280351]

CPA algorithm statistics
------------------------
Number of iterations:            149523
Max size of waitlist:            45
Average size of waitlist:        24
Number of computed successors:   166115
Max successors for one state:    2
Number of times merged:          8069
Number of times stopped:         15031
Number of times breaked:         101

Total time for CPA algorithm:        22.926s (Max:     4.020s)
  Time for choose from waitlist:      0.183s
  Time for precision adjustment:      5.835s
  Time for transfer relation:        14.523s
  Time for merge operator:            0.601s
  Time for stop operator:             0.466s
  Time for adding to reached set:     0.323s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                3069 (count: 101, min: 9, max: 55, avg: 30.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.178s
  Counterexample analysis:                             1.465s (Max:     0.045s, Calls: 101)
    Refinement sat check:                              0.934s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.067s
  ARG update:                                          0.513s

Length of refined path (in blocks):                    2744 (count: 101, min: 8, max: 52, avg: 27.17)
Number of affected states:                             1015 (count: 101, min: 2, max: 35, avg: 10.05)
Length (states) of path with itp 'true':               1628 (count: 101, min: 1, max: 41, avg: 16.12)
Length (states) of path with itp non-trivial itp:      1015 (count: 101, min: 2, max: 35, avg: 10.05)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 101, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             912 (count: 101, min: 1, max: 34, avg: 9.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 7065
Max. size of reached set after ref.:  6649
Avg. size of reached set before ref.: 6437.29
Avg. size of reached set after ref.:  4960.52

Total time for CEGAR algorithm:      26.380s
Time for refinements:                 3.045s
Average time for refinement:          0.030s
Max time for refinement:              0.095s

Code Coverage
-----------------------------
  Function coverage:      0.326
  Visited lines:          1159
  Total lines:            2552
  Line coverage:          0.454
  Visited conditions:     132
  Total conditions:       504
  Condition coverage:     0.262

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             938
  Number of reached locations:   408 (12%)
    Avg states per location:     2
    Max states per location:     12 (at node N2523)
  Number of reached functions:   44 (33%)
  Number of partitions:          934
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2431 (before line 6719), Function main called from node N2286, stack depth 1 [719843e5], stack [main]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          3.933s
  Time for loading CPAs:          0.691s
  Time for loading parser:        0.500s
  Time for CFA construction:      2.632s
    Time for parsing file(s):     0.702s
    Time for AST to CFA:          0.901s
    Time for CFA sanity check:    0.186s
    Time for post-processing:     0.644s
      Time for var class.:        0.306s
Time for Analysis:               26.380s
CPU time for analysis:           26.380s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.081s

Time for Garbage Collector:       1.179s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   113 MiB) max;     66MB (    63 MiB) avg;    135MB (   128 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           153MB (   146 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
