scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bw339gsp/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2332737 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1974265 (85%)
  Because of loop head:            356591 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1881 (0%)
  Times precision was empty:       291543 (12%)
  Times precision was {false}:     7528 (0%)
  Times result was cached:         2006044 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27622 (1%)
  Times result was 'false':        76288 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1338861
  BDD entailment checks:           574733
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          25
Number of abstraction locations:          233
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         6303391
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 179.33
Number of irrelevant predicates:          4554201 (72%)
Number of preds handled by boolean abs:   56369 (1%)
  Total number of models for allsat:      32878
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.19

Time for post operator:                247.907s
  Time for path formula creation:      244.450s
Time for strengthen operator:            9.064s
Time for prec operator:                377.482s
  Time for abstraction:                359.655s (Max:     9.529s, Count: 2332737)
    Boolean abstraction:                60.394s
    Solving time:                       63.327s (Max:     0.303s)
    Model enumeration time:              5.265s
    Time for BDD construction:           0.444s (Max:     0.008s)
Time for merge operator:                 6.424s
Time for coverage check:                 0.592s
  Time for BDD entailment checks:        0.431s
Total time for SMT solver (w/o itp):    68.592s

Number of path formula cache hits:   8691547 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   221.920s

Total number of created targets for pointer analysis: 1826429
   Number of created targets for uf: *signed_int is 6433
   Number of created targets for uf: *(char)* is 303
   Number of created targets for uf: *(struct_urb)* is 2495
   Number of created targets for uf: *(unsigned_char)* is 1130
   Number of created targets for uf: *char is 622
   Number of created targets for uf: *unsigned_int is 75220
   Number of created targets for uf: *unsigned_long_int is 1352


Number of BDD nodes:                               1015
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       50319 (count: 1077241, min: 0, max: 1407, avg: 0.05)
Time for BDD node cleanup:                             0.176s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.439s
  Time for transition matches:                         8.522s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     13013530 (count: 13014203, min: 0, max: 1, avg: 1.00) [0 x 673, 1 x 13013530]

CPA algorithm statistics
------------------------
Number of iterations:            7452003
Max size of waitlist:            74
Average size of waitlist:        36
Number of computed successors:   8250656
Max successors for one state:    2
Number of times merged:          382064
Number of times stopped:         710992
Number of times breaked:         1881

Total time for CPA algorithm:       802.750s (Max:    10.638s)
  Time for choose from waitlist:      2.147s
  Time for precision adjustment:    415.432s
  Time for transfer relation:       343.204s
  Time for merge operator:           10.330s
  Time for stop operator:             8.241s
  Time for adding to reached set:     8.894s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1881
Avg. length of target path (in blocks):              140016 (count: 1881, min: 6, max: 228, avg: 74.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.204s
  Counterexample analysis:                            46.584s (Max:     0.144s, Calls: 1881)
    Refinement sat check:                             27.704s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.079s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.228s
  Precision update:                                    0.779s
  ARG update:                                         10.625s

Length of refined path (in blocks):                  130007 (count: 1881, min: 5, max: 225, avg: 69.12)
Number of affected states:                            26410 (count: 1881, min: 1, max: 208, avg: 14.04)
Length (states) of path with itp 'true':             101716 (count: 1881, min: 1, max: 214, avg: 54.08)
Length (states) of path with itp non-trivial itp:     26410 (count: 1881, min: 1, max: 208, avg: 14.04)
Length (states) of path with itp 'false':              1881 (count: 1881, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          83 (count: 1881, min: 0, max: 3, avg: 0.04)
Equal non-trivial interpolants along paths:           24446 (count: 1881, min: 0, max: 207, avg: 13.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1881
Number of successful refinements:     1881
Number of failed refinements:         0
Max. size of reached set before ref.: 28219
Max. size of reached set after ref.:  19308
Avg. size of reached set before ref.: 15888.19
Avg. size of reached set after ref.:  11926.32

Total time for CEGAR algorithm:     896.345s
Time for refinements:                80.107s
Average time for refinement:          0.042s
Max time for refinement:              0.429s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          1827
  Total lines:            2552
  Line coverage:          0.716
  Visited conditions:     315
  Total conditions:       504
  Condition coverage:     0.625

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             11108
  Number of reached locations:   1009 (29%)
    Avg states per location:     11
    Max states per location:     143 (at node N78)
  Number of reached functions:   78 (58%)
  Number of partitions:          10879
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N751 (before line 4857), Function dlfb_render_hline called from node N820, stack depth 4 [acfb9d2], stack [main, dlfb_ops_write, dlfb_handle_damage, dlfb_render_hline]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          3.965s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.451s
  Time for CFA construction:      2.582s
    Time for parsing file(s):     0.646s
    Time for AST to CFA:          0.928s
    Time for CFA sanity check:    0.201s
    Time for post-processing:     0.672s
      Time for var class.:        0.330s
Time for Analysis:              896.345s
CPU time for analysis:          896.320s
Total time for CPAchecker:      900.325s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.222s

Time for Garbage Collector:      81.423s (in 612 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3719MB (  3547 MiB) max;   1502MB (  1432 MiB) avg;   3795MB (  3619 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          5393MB (  5143 MiB) max;   2146MB (  2047 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8764MB (  8358 MiB) max;   8361MB (  7974 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
