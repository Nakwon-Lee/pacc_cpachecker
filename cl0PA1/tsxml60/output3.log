scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t5rz7f8p/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            157063 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  136771 (87%)
  Because of loop head:            20169 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         123 (0%)
  Times precision was empty:       114358 (73%)
  Times precision was {false}:     298 (0%)
  Times result was cached:         41450 (26%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      957 (1%)
  Times result was 'false':        1387 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         60818
  BDD entailment checks:           25030
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          6
Number of abstraction locations:          125
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         178001
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 141.83
Number of irrelevant predicates:          105176 (59%)
Number of preds handled by boolean abs:   2402 (1%)
  Total number of models for allsat:      958
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.659s
  Time for path formula creation:        3.413s
Time for strengthen operator:            0.615s
Time for prec operator:                  8.188s
  Time for abstraction:                  7.047s (Max:     0.020s, Count: 157063)
    Boolean abstraction:                 0.830s
    Solving time:                        0.720s (Max:     0.016s)
    Model enumeration time:              0.070s
    Time for BDD construction:           0.060s (Max:     0.008s)
Time for merge operator:                 0.129s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     0.790s

Number of path formula cache hits:   1004019 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.303s

Total number of created targets for pointer analysis: 475
   Number of created targets for uf: *signed_int is 4
   Number of created targets for uf: *(char)* is 7
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 25
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *(struct_dlfb_data)* is 4
   Number of created targets for uf: *unsigned_int is 81
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               244
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2016 (count: 146789, min: 0, max: 76, avg: 0.01)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.053s
  Time for transition matches:                         0.564s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       846580 (count: 846692, min: 0, max: 1, avg: 1.00) [0 x 112, 1 x 846580]

CPA algorithm statistics
------------------------
Number of iterations:            460556
Max size of waitlist:            29
Average size of waitlist:        13
Number of computed successors:   503725
Max successors for one state:    2
Number of times merged:          17894
Number of times stopped:         39456
Number of times breaked:         123

Total time for CPA algorithm:        23.509s (Max:     1.438s)
  Time for choose from waitlist:      0.289s
  Time for precision adjustment:     10.579s
  Time for transfer relation:        10.084s
  Time for merge operator:            0.338s
  Time for stop operator:             0.591s
  Time for adding to reached set:     0.446s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   123
Avg. length of target path (in blocks):                3415 (count: 123, min: 6, max: 68, avg: 27.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.874s
  Counterexample analysis:                             0.954s (Max:     0.024s, Calls: 123)
    Refinement sat check:                              0.577s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.052s
  Precision update:                                    0.063s
  ARG update:                                          0.740s

Length of refined path (in blocks):                    3256 (count: 123, min: 5, max: 67, avg: 26.47)
Number of affected states:                             2938 (count: 123, min: 0, max: 65, avg: 23.89)
Length (states) of path with itp 'true':                195 (count: 123, min: 1, max: 10, avg: 1.59)
Length (states) of path with itp non-trivial itp:      2938 (count: 123, min: 0, max: 65, avg: 23.89)
Length (states) of path with itp 'false':               123 (count: 123, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 123, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2816 (count: 123, min: 0, max: 64, avg: 22.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                123
Number of successful refinements:     123
Number of failed refinements:         0
Max. size of reached set before ref.: 4377
Max. size of reached set after ref.:  3712
Avg. size of reached set before ref.: 3962.15
Avg. size of reached set after ref.:  232.33

Total time for CEGAR algorithm:      25.804s
Time for refinements:                 2.256s
Average time for refinement:          0.018s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.548
  Visited lines:          1694
  Total lines:            2552
  Line coverage:          0.664
  Visited conditions:     261
  Total conditions:       504
  Condition coverage:     0.518

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             4115
  Number of reached locations:   878 (25%)
    Avg states per location:     4
    Max states per location:     78 (at node N267)
  Number of reached functions:   74 (55%)
  Number of partitions:          4095
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2431 (before line 6719), Function main called from node N2286, stack depth 1 [7ec25216], stack [main]])
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          4.012s
  Time for loading CPAs:          0.774s
  Time for loading parser:        0.479s
  Time for CFA construction:      2.669s
    Time for parsing file(s):     0.710s
    Time for AST to CFA:          0.947s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.641s
      Time for var class.:        0.320s
Time for Analysis:               25.804s
CPU time for analysis:           25.800s
Total time for CPAchecker:       29.819s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.107s

Time for Garbage Collector:       1.112s (in 191 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     51MB (    49 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
