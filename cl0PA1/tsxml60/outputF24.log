scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sw1i_h5c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2207240 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1868107 (85%)
  Because of loop head:            337348 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1785 (0%)
  Times precision was empty:       284854 (13%)
  Times precision was {false}:     7443 (0%)
  Times result was cached:         1887550 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      27393 (1%)
  Times result was 'false':        71294 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1262052
  BDD entailment checks:           542094
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          25
Number of abstraction locations:          233
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         5885147
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 168.94
Number of irrelevant predicates:          4235806 (72%)
Number of preds handled by boolean abs:   56000 (1%)
  Total number of models for allsat:      32577
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.19

Time for post operator:                249.055s
  Time for path formula creation:      245.084s
Time for strengthen operator:            8.386s
Time for prec operator:                379.819s
  Time for abstraction:                360.915s (Max:     5.459s, Count: 2207240)
    Boolean abstraction:                60.648s
    Solving time:                       63.425s (Max:     0.171s)
    Model enumeration time:              5.198s
    Time for BDD construction:           0.493s (Max:     0.010s)
Time for merge operator:                 5.826s
Time for coverage check:                 0.595s
  Time for BDD entailment checks:        0.452s
Total time for SMT solver (w/o itp):    68.623s

Number of path formula cache hits:   8224564 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   221.467s

Total number of created targets for pointer analysis: 1717207
   Number of created targets for uf: *signed_int is 339
   Number of created targets for uf: *(char)* is 1239
   Number of created targets for uf: *(struct_urb)* is 2362
   Number of created targets for uf: *(unsigned_char)* is 1130
   Number of created targets for uf: *unsigned_int is 499780
   Number of created targets for uf: *char is 76705
   Number of created targets for uf: *unsigned_long_int is 1262


Number of BDD nodes:                               1015
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       49821 (count: 1035838, min: 0, max: 1396, avg: 0.05)
Time for BDD node cleanup:                             0.156s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.658s
  Time for transition matches:                         7.950s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                     12305884 (count: 12306519, min: 0, max: 1, avg: 1.00) [0 x 635, 1 x 12305884]

CPA algorithm statistics
------------------------
Number of iterations:            7042321
Max size of waitlist:            74
Average size of waitlist:        36
Number of computed successors:   7795707
Max successors for one state:    2
Number of times merged:          359979
Number of times stopped:         671261
Number of times breaked:         1785

Total time for CPA algorithm:       799.445s (Max:     5.488s)
  Time for choose from waitlist:      2.221s
  Time for precision adjustment:    417.921s
  Time for transfer relation:       338.913s
  Time for merge operator:            9.717s
  Time for stop operator:             7.586s
  Time for adding to reached set:     9.222s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1785
Avg. length of target path (in blocks):              133033 (count: 1785, min: 6, max: 228, avg: 74.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.645s
  Counterexample analysis:                            47.001s (Max:     0.388s, Calls: 1785)
    Refinement sat check:                             28.086s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.088s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.172s
  Precision update:                                    0.685s
  ARG update:                                         10.914s

Length of refined path (in blocks):                  123344 (count: 1785, min: 5, max: 225, avg: 69.10)
Number of affected states:                            24911 (count: 1785, min: 1, max: 208, avg: 13.96)
Length (states) of path with itp 'true':              96648 (count: 1785, min: 1, max: 214, avg: 54.14)
Length (states) of path with itp non-trivial itp:     24911 (count: 1785, min: 1, max: 208, avg: 13.96)
Length (states) of path with itp 'false':              1785 (count: 1785, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          83 (count: 1785, min: 0, max: 3, avg: 0.05)
Equal non-trivial interpolants along paths:           23043 (count: 1785, min: 0, max: 207, avg: 12.91)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1785
Number of successful refinements:     1785
Number of failed refinements:         0
Max. size of reached set before ref.: 28219
Max. size of reached set after ref.:  19092
Avg. size of reached set before ref.: 15714.42
Avg. size of reached set after ref.:  11773.36

Total time for CEGAR algorithm:     896.277s
Time for refinements:                83.633s
Average time for refinement:          0.046s
Max time for refinement:              2.165s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          1827
  Total lines:            2552
  Line coverage:          0.716
  Visited conditions:     315
  Total conditions:       504
  Condition coverage:     0.625

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             18362
  Number of reached locations:   1009 (29%)
    Avg states per location:     18
    Max states per location:     237 (at node N79)
  Number of reached functions:   78 (58%)
  Number of partitions:          17979
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N751 (before line 4857), Function dlfb_render_hline called from node N820, stack depth 4 [61523bc0], stack [main, dlfb_ops_write, dlfb_handle_damage, dlfb_render_hline]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          4.040s
  Time for loading CPAs:          0.684s
  Time for loading parser:        0.589s
  Time for CFA construction:      2.632s
    Time for parsing file(s):     0.768s
    Time for AST to CFA:          0.876s
    Time for CFA sanity check:    0.193s
    Time for post-processing:     0.630s
      Time for var class.:        0.286s
Time for Analysis:              896.277s
CPU time for analysis:          896.250s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              0.348s

Time for Garbage Collector:      69.816s (in 596 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3043MB (  2902 MiB) max;   1442MB (  1375 MiB) avg;   3071MB (  2928 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3183MB (  3036 MiB) max;   2074MB (  1978 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8831MB (  8422 MiB) max;   8407MB (  8018 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
