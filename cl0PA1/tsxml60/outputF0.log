scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--udlfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qmilgap2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6772: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4139: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4624: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4625: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            259349 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  217823 (84%)
  Because of loop head:            40528 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         998 (0%)
  Times precision was empty:       34914 (13%)
  Times precision was {false}:     877 (0%)
  Times result was cached:         218841 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4717 (2%)
  Times result was 'false':        16712 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         250132
  BDD entailment checks:           77172
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          10
Number of abstraction locations:          279
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         943233
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 168.62
Number of irrelevant predicates:          226547 (24%)
Number of preds handled by boolean abs:   12230 (1%)
  Total number of models for allsat:      4666
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                  9.203s
  Time for path formula creation:        8.595s
Time for strengthen operator:            1.268s
Time for prec operator:                 40.434s
  Time for abstraction:                 38.289s (Max:     0.196s, Count: 259349)
    Boolean abstraction:                 3.740s
    Solving time:                        3.739s (Max:     0.028s)
    Model enumeration time:              0.281s
    Time for BDD construction:           0.134s (Max:     0.010s)
Time for merge operator:                 0.498s
Time for coverage check:                 0.097s
  Time for BDD entailment checks:        0.067s
Total time for SMT solver (w/o itp):     4.020s

Number of path formula cache hits:   2088084 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.988s

Total number of created targets for pointer analysis: 4156
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *(char)* is 74
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *(unsigned_char)* is 28
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_int is 481
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *(struct_dlfb_data)* is 2
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               529
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9777 (count: 149678, min: 0, max: 306, avg: 0.07)
Time for BDD node cleanup:                             0.033s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.157s
  Time for transition matches:                         1.177s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      1843010 (count: 1843286, min: 0, max: 1, avg: 1.00) [0 x 276, 1 x 1843010]

CPA algorithm statistics
------------------------
Number of iterations:            1044554
Max size of waitlist:            156
Average size of waitlist:        35
Number of computed successors:   1217190
Max successors for one state:    2
Number of times merged:          86480
Number of times stopped:         127289
Number of times breaked:         998

Total time for CPA algorithm:        73.555s (Max:     0.798s)
  Time for choose from waitlist:      0.407s
  Time for precision adjustment:     45.762s
  Time for transfer relation:        21.526s
  Time for merge operator:            1.408s
  Time for stop operator:             1.073s
  Time for adding to reached set:     1.117s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   998
Avg. length of target path (in blocks):               24419 (count: 998, min: 6, max: 183, avg: 24.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.062s
  Counterexample analysis:                             7.473s (Max:     0.070s, Calls: 998)
    Refinement sat check:                              4.745s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.122s
  Precision update:                                    0.624s
  ARG update:                                          1.588s

Length of refined path (in blocks):                   21473 (count: 998, min: 5, max: 182, avg: 21.52)
Number of affected states:                            15721 (count: 998, min: 3, max: 180, avg: 15.75)
Length (states) of path with itp 'true':               4754 (count: 998, min: 1, max: 10, avg: 4.76)
Length (states) of path with itp non-trivial itp:     15721 (count: 998, min: 3, max: 180, avg: 15.75)
Length (states) of path with itp 'false':               998 (count: 998, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 998, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14723 (count: 998, min: 2, max: 179, avg: 14.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                998
Number of successful refinements:     998
Number of failed refinements:         0
Max. size of reached set before ref.: 8149
Max. size of reached set after ref.:  7098
Avg. size of reached set before ref.: 2662.24
Avg. size of reached set after ref.:  1594.17

Total time for CEGAR algorithm:      86.357s
Time for refinements:                11.888s
Average time for refinement:          0.011s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.644
  Visited lines:          2104
  Total lines:            2552
  Line coverage:          0.824
  Visited conditions:     375
  Total conditions:       504
  Condition coverage:     0.744

CPAchecker general statistics
-----------------------------
Number of program locations:     3468
Number of CFA edges:             3828
Number of relevant variables:    649
Number of functions:             135
Number of loops:                 24
Size of reached set:             7257
  Number of reached locations:   1213 (35%)
    Avg states per location:     5
    Max states per location:     111 (at node N267)
  Number of reached functions:   87 (64%)
  Number of partitions:          7246
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1501 (before line 5679), Function dlfb_setup_modes called from node N1739, stack depth 3 [462ab02b], stack [main, edid_store, dlfb_setup_modes]])
  Number of target states:       0

Time for analysis setup:          3.755s
  Time for loading CPAs:          0.675s
  Time for loading parser:        0.460s
  Time for CFA construction:      2.527s
    Time for parsing file(s):     0.679s
    Time for AST to CFA:          0.886s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.632s
      Time for var class.:        0.316s
Time for Analysis:               86.357s
CPU time for analysis:           86.360s
Time for analyzing result:        0.005s
Total time for CPAchecker:       90.121s
Total CPU time for CPAchecker:   90.110s
Time for statistics:              0.156s

Time for Garbage Collector:       4.248s (in 644 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                133MB (   127 MiB) max;     71MB (    68 MiB) avg;    137MB (   131 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           144MB (   138 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8082MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
