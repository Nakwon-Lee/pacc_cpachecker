scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_smooj22a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2532592 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2227675 (88%)
  Because of loop head:            304534 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         383 (0%)
  Times precision was empty:       16757 (1%)
  Times precision was {false}:     2775 (0%)
  Times result was cached:         2501416 (99%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11644 (0%)
  Times result was 'false':        12307 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2358197
  BDD entailment checks:           425347
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          140
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         13687344
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 949.26
Number of irrelevant predicates:          2217237 (16%)
Number of preds handled by boolean abs:   39047 (0%)
  Total number of models for allsat:      12484
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.07

Time for post operator:                 50.417s
  Time for path formula creation:       47.305s
Time for strengthen operator:            7.955s
Time for prec operator:                382.343s
  Time for abstraction:                364.516s (Max:     1.135s, Count: 2532592)
    Boolean abstraction:                24.195s
    Solving time:                       25.730s (Max:     0.168s)
    Model enumeration time:              1.820s
    Time for BDD construction:           0.272s (Max:     0.012s)
Time for merge operator:                 4.475s
Time for coverage check:                 0.501s
  Time for BDD entailment checks:        0.304s
Total time for SMT solver (w/o itp):    27.550s

Number of path formula cache hits:   16686205 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.546s

Total number of created targets for pointer analysis: 162015
   Number of created targets for uf: *(void)* is 5
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 5069
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 12825
   Number of created targets for uf: *unsigned_long_int is 27


Number of BDD nodes:                               388
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23583 (count: 526190, min: 0, max: 962, avg: 0.04)
Time for BDD node cleanup:                             0.090s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.365s
  Time for transition matches:                         7.029s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     13759476 (count: 13759476, min: 1, max: 1, avg: 1.00) [1 x 13759476]

CPA algorithm statistics
------------------------
Number of iterations:            8682462
Max size of waitlist:            313
Average size of waitlist:        99
Number of computed successors:   10091886
Max successors for one state:    2
Number of times merged:          966425
Number of times stopped:         1384533
Number of times breaked:         383

Total time for CPA algorithm:       597.183s (Max:    14.922s)
  Time for choose from waitlist:      2.268s
  Time for precision adjustment:    426.212s
  Time for transfer relation:       128.402s
  Time for merge operator:           10.753s
  Time for stop operator:             7.170s
  Time for adding to reached set:     8.714s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   383
Avg. length of target path (in blocks):               36639 (count: 383, min: 10, max: 197, avg: 95.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  44.414s
  Counterexample analysis:                            27.553s (Max:     0.311s, Calls: 383)
    Refinement sat check:                             19.889s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.024s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.195s
  Precision update:                                    0.169s
  ARG update:                                         16.242s

Length of refined path (in blocks):                   35899 (count: 383, min: 4, max: 186, avg: 93.73)
Number of affected states:                            31031 (count: 383, min: 0, max: 185, avg: 81.02)
Length (states) of path with itp 'true':               4485 (count: 383, min: 0, max: 144, avg: 11.71)
Length (states) of path with itp non-trivial itp:     31031 (count: 383, min: 0, max: 185, avg: 81.02)
Length (states) of path with itp 'false':               383 (count: 383, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 383, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           30654 (count: 383, min: 0, max: 184, avg: 80.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                383
Number of successful refinements:     383
Number of failed refinements:         0
Max. size of reached set before ref.: 158970
Max. size of reached set after ref.:  144234
Avg. size of reached set before ref.: 95275.67
Avg. size of reached set after ref.:  72949.92

Total time for CEGAR algorithm:     687.447s
Time for refinements:                70.116s
Average time for refinement:          0.183s
Max time for refinement:              1.140s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1346
  Total lines:            1831
  Line coverage:          0.735
  Visited conditions:     202
  Total conditions:       404
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             144286
  Number of reached locations:   614 (25%)
    Avg states per location:     234
    Max states per location:     8913 (at node N276)
  Number of reached functions:   41 (42%)
  Number of partitions:          144282
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N167 (before line 3707), Function pf_init_units called from node N1231, stack depth 3 [227dcdb3], stack [main, pf_init, pf_init_units]])
  Number of target states:       0

Time for analysis setup:          3.175s
  Time for loading CPAs:          0.639s
  Time for loading parser:        0.417s
  Time for CFA construction:      2.022s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.697s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.477s
      Time for var class.:        0.218s
Time for Analysis:              687.447s
CPU time for analysis:          687.390s
Time for analyzing result:        0.108s
Total time for CPAchecker:      690.625s
Total CPU time for CPAchecker:  690.570s
Time for statistics:              1.171s

Time for Garbage Collector:      78.974s (in 1814 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                638MB (   608 MiB) max;    356MB (   340 MiB) avg;    658MB (   628 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           657MB (   627 MiB) max;    548MB (   523 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8219MB (  7839 MiB) max;   8143MB (  7766 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
