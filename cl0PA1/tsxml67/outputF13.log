scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8dj2o15i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            654034 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  554891 (85%)
  Because of loop head:            97544 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1599 (0%)
  Times precision was empty:       9575 (1%)
  Times precision was {false}:     744 (0%)
  Times result was cached:         637248 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6467 (1%)
  Times result was 'false':        12620 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         504665
  BDD entailment checks:           116085
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          140
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         3441629
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 477.27
Number of irrelevant predicates:          383302 (11%)
Number of preds handled by boolean abs:   25763 (1%)
  Total number of models for allsat:      6982
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                 18.301s
  Time for path formula creation:       17.365s
Time for strengthen operator:            2.151s
Time for prec operator:                123.606s
  Time for abstraction:                118.724s (Max:     0.715s, Count: 654034)
    Boolean abstraction:                15.942s
    Solving time:                       15.296s (Max:     0.096s)
    Model enumeration time:              1.190s
    Time for BDD construction:           0.230s (Max:     0.013s)
Time for merge operator:                 1.499s
Time for coverage check:                 0.168s
  Time for BDD entailment checks:        0.120s
Total time for SMT solver (w/o itp):    16.486s

Number of path formula cache hits:   4036570 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.609s

Total number of created targets for pointer analysis: 108069
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 3613
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 5501
   Number of created targets for uf: *unsigned_long_int is 27


Number of BDD nodes:                               373
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13167 (count: 168669, min: 0, max: 268, avg: 0.08)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.482s
  Time for transition matches:                         1.969s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      3552585 (count: 3552585, min: 1, max: 1, avg: 1.00) [1 x 3552585]

CPA algorithm statistics
------------------------
Number of iterations:            2131679
Max size of waitlist:            1154
Average size of waitlist:        171
Number of computed successors:   2460915
Max successors for one state:    2
Number of times merged:          194290
Number of times stopped:         290403
Number of times breaked:         1599

Total time for CPA algorithm:       184.723s (Max:    14.337s)
  Time for choose from waitlist:      0.501s
  Time for precision adjustment:    133.283s
  Time for transfer relation:        39.921s
  Time for merge operator:            2.986s
  Time for stop operator:             1.945s
  Time for adding to reached set:     1.938s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1599
Avg. length of target path (in blocks):              103820 (count: 1599, min: 7, max: 191, avg: 64.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  67.949s
  Counterexample analysis:                            62.885s (Max:     0.198s, Calls: 1599)
    Refinement sat check:                             45.927s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.045s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.285s
  Precision update:                                    0.631s
  ARG update:                                          3.571s

Length of refined path (in blocks):                  101897 (count: 1599, min: 4, max: 183, avg: 63.73)
Number of affected states:                            36645 (count: 1599, min: 0, max: 182, avg: 22.92)
Length (states) of path with itp 'true':              63653 (count: 1599, min: 0, max: 170, avg: 39.81)
Length (states) of path with itp non-trivial itp:     36645 (count: 1599, min: 0, max: 182, avg: 22.92)
Length (states) of path with itp 'false':              1599 (count: 1599, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1599, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           35055 (count: 1599, min: 0, max: 181, avg: 21.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1599
Number of successful refinements:     1599
Number of failed refinements:         0
Max. size of reached set before ref.: 72311
Max. size of reached set after ref.:  8058
Avg. size of reached set before ref.: 3726.91
Avg. size of reached set after ref.:  2467.62

Total time for CEGAR algorithm:     259.547s
Time for refinements:                72.473s
Average time for refinement:          0.045s
Max time for refinement:              0.404s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1346
  Total lines:            1831
  Line coverage:          0.735
  Visited conditions:     202
  Total conditions:       404
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             144286
  Number of reached locations:   614 (25%)
    Avg states per location:     234
    Max states per location:     8913 (at node N276)
  Number of reached functions:   41 (42%)
  Number of partitions:          144282
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N167 (before line 3707), Function pf_init_units called from node N1231, stack depth 3 [1e5e2008], stack [main, pf_init, pf_init_units]])
  Number of target states:       0

Time for analysis setup:          3.161s
  Time for loading CPAs:          0.602s
  Time for loading parser:        0.443s
  Time for CFA construction:      2.025s
    Time for parsing file(s):     0.612s
    Time for AST to CFA:          0.657s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.483s
      Time for var class.:        0.248s
Time for Analysis:              259.548s
CPU time for analysis:          259.480s
Time for analyzing result:        0.108s
Total time for CPAchecker:      262.712s
Total CPU time for CPAchecker:  262.630s
Time for statistics:              1.322s

Time for Garbage Collector:      19.564s (in 1486 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                317MB (   302 MiB) max;    107MB (   102 MiB) avg;    350MB (   334 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           463MB (   442 MiB) max;    173MB (   165 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8153MB (  7776 MiB) max;   8131MB (  7755 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
