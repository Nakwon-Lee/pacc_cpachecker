scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9pjnthcx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5132085 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4520942 (88%)
  Because of loop head:            610907 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         236 (0%)
  Times precision was empty:       1381660 (27%)
  Times precision was {false}:     3272 (0%)
  Times result was cached:         3738213 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8940 (0%)
  Times result was 'false':        9430 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4816717
  BDD entailment checks:           880693
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          98
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         16230107
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 1329.03
Number of irrelevant predicates:          14252977 (88%)
Number of preds handled by boolean abs:   22054 (0%)
  Total number of models for allsat:      9318
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                115.598s
  Time for path formula creation:      108.379s
Time for strengthen operator:           15.525s
Time for prec operator:                357.617s
  Time for abstraction:                321.118s (Max:     1.828s, Count: 5132085)
    Boolean abstraction:                15.691s
    Solving time:                       20.097s (Max:     0.245s)
    Model enumeration time:              0.831s
    Time for BDD construction:           0.143s (Max:     0.012s)
Time for merge operator:                10.412s
Time for coverage check:                 0.920s
  Time for BDD entailment checks:        0.494s
Total time for SMT solver (w/o itp):    20.928s

Number of path formula cache hits:   33275870 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.196s

Total number of created targets for pointer analysis: 312245
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 2653
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 10629
   Number of created targets for uf: *unsigned_long_int is 165


Number of BDD nodes:                               274
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17983 (count: 2332653, min: 0, max: 1052, avg: 0.01)
Time for BDD node cleanup:                             0.281s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 23.953s
  Time for transition matches:                        13.973s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     27725833 (count: 27725833, min: 1, max: 1, avg: 1.00) [1 x 27725833]

CPA algorithm statistics
------------------------
Number of iterations:            17588400
Max size of waitlist:            24
Average size of waitlist:        12
Number of computed successors:   20435271
Max successors for one state:    2
Number of times merged:          1968012
Number of times stopped:         2836638
Number of times breaked:         236

Total time for CPA algorithm:       816.566s (Max:    14.952s)
  Time for choose from waitlist:      3.706s
  Time for precision adjustment:    449.854s
  Time for transfer relation:       274.623s
  Time for merge operator:           24.679s
  Time for stop operator:            15.424s
  Time for adding to reached set:    17.751s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   236
Avg. length of target path (in blocks):               15465 (count: 236, min: 7, max: 160, avg: 65.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.887s
  Counterexample analysis:                             9.262s (Max:     0.152s, Calls: 236)
    Refinement sat check:                              7.194s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.099s
  ARG update:                                         34.337s

Length of refined path (in blocks):                   14767 (count: 236, min: 4, max: 159, avg: 62.57)
Number of affected states:                            11164 (count: 236, min: 0, max: 157, avg: 47.31)
Length (states) of path with itp 'true':               3367 (count: 236, min: 0, max: 130, avg: 14.27)
Length (states) of path with itp non-trivial itp:     11164 (count: 236, min: 0, max: 157, avg: 47.31)
Length (states) of path with itp 'false':               236 (count: 236, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 236, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10958 (count: 236, min: 0, max: 156, avg: 46.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                236
Number of successful refinements:     236
Number of failed refinements:         0
Max. size of reached set before ref.: 222616
Max. size of reached set after ref.:  157020
Avg. size of reached set before ref.: 151784.82
Avg. size of reached set after ref.:  77823.49

Total time for CEGAR algorithm:     896.810s
Time for refinements:                66.929s
Average time for refinement:          0.283s
Max time for refinement:              1.625s

Code Coverage
-----------------------------
  Function coverage:      0.235
  Visited lines:          1121
  Total lines:            1831
  Line coverage:          0.612
  Visited conditions:     132
  Total conditions:       404
  Condition coverage:     0.327

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             134331
  Number of reached locations:   393 (16%)
    Avg states per location:     341
    Max states per location:     8292 (at node N276)
  Number of reached functions:   23 (23%)
  Number of partitions:          134269
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N813 (before line 4451), Function pf_probe called from node N863, stack depth 4 [254add5d], stack [main, pf_init, pf_detect, pf_probe]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.539s
  Time for loading CPAs:          0.724s
  Time for loading parser:        0.442s
  Time for CFA construction:      2.253s
    Time for parsing file(s):     0.653s
    Time for AST to CFA:          0.781s
    Time for CFA sanity check:    0.127s
    Time for post-processing:     0.538s
      Time for var class.:        0.250s
Time for Analysis:              896.810s
CPU time for analysis:          896.760s
Total time for CPAchecker:      900.352s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              1.264s

Time for Garbage Collector:     143.158s (in 1601 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1167MB (  1113 MiB) max;    526MB (   502 MiB) avg;   1250MB (  1192 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          1401MB (  1336 MiB) max;    788MB (   752 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8132MB (  7755 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
