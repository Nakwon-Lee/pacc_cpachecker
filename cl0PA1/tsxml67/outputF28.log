scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b9fqb05l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1037301 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  912853 (88%)
  Because of loop head:            123886 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         562 (0%)
  Times precision was empty:       7029 (1%)
  Times precision was {false}:     972 (0%)
  Times result was cached:         1018765 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10535 (1%)
  Times result was 'false':        8107 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         955777
  BDD entailment checks:           178667
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          140
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         5271585
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 458.12
Number of irrelevant predicates:          539873 (10%)
Number of preds handled by boolean abs:   42907 (1%)
  Total number of models for allsat:      11337
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                 31.664s
  Time for path formula creation:       30.180s
Time for strengthen operator:            3.373s
Time for prec operator:                177.155s
  Time for abstraction:                169.092s (Max:     0.978s, Count: 1037301)
    Boolean abstraction:                20.460s
    Solving time:                       19.847s (Max:     0.191s)
    Model enumeration time:              1.294s
    Time for BDD construction:           0.263s (Max:     0.012s)
Time for merge operator:                 2.624s
Time for coverage check:                 0.263s
  Time for BDD entailment checks:        0.163s
Total time for SMT solver (w/o itp):    21.141s

Number of path formula cache hits:   6237877 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.572s

Total number of created targets for pointer analysis: 186758
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 1813
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 8493
   Number of created targets for uf: *unsigned_long_int is 25


Number of BDD nodes:                               363
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21307 (count: 254087, min: 0, max: 686, avg: 0.08)
Time for BDD node cleanup:                             0.062s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.459s
  Time for transition matches:                         3.237s
  Time for transition assertions:                      0.008s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      5581672 (count: 5581672, min: 1, max: 1, avg: 1.00) [1 x 5581672]

CPA algorithm statistics
------------------------
Number of iterations:            3545950
Max size of waitlist:            37
Average size of waitlist:        14
Number of computed successors:   4117825
Max successors for one state:    2
Number of times merged:          388555
Number of times stopped:         560090
Number of times breaked:         562

Total time for CPA algorithm:       281.989s (Max:    13.720s)
  Time for choose from waitlist:      0.917s
  Time for precision adjustment:    195.668s
  Time for transfer relation:        66.601s
  Time for merge operator:            5.416s
  Time for stop operator:             3.056s
  Time for adding to reached set:     3.524s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   562
Avg. length of target path (in blocks):               33624 (count: 562, min: 7, max: 176, avg: 59.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.789s
  Counterexample analysis:                            15.175s (Max:     0.227s, Calls: 562)
    Refinement sat check:                             11.241s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.033s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.168s
  Precision update:                                    0.277s
  ARG update:                                          5.909s

Length of refined path (in blocks):                   32627 (count: 562, min: 4, max: 168, avg: 58.06)
Number of affected states:                            16354 (count: 562, min: 0, max: 167, avg: 29.10)
Length (states) of path with itp 'true':              15711 (count: 562, min: 0, max: 129, avg: 27.96)
Length (states) of path with itp non-trivial itp:     16354 (count: 562, min: 0, max: 167, avg: 29.10)
Length (states) of path with itp 'false':               562 (count: 562, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 562, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           15841 (count: 562, min: 0, max: 166, avg: 28.19)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                562
Number of successful refinements:     562
Number of failed refinements:         0
Max. size of reached set before ref.: 99310
Max. size of reached set after ref.:  8696
Avg. size of reached set before ref.: 8105.27
Avg. size of reached set after ref.:  2045.94

Total time for CEGAR algorithm:     307.456s
Time for refinements:                24.717s
Average time for refinement:          0.043s
Max time for refinement:              0.423s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1346
  Total lines:            1831
  Line coverage:          0.735
  Visited conditions:     202
  Total conditions:       404
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             144286
  Number of reached locations:   614 (25%)
    Avg states per location:     234
    Max states per location:     8913 (at node N276)
  Number of reached functions:   41 (42%)
  Number of partitions:          144282
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N167 (before line 3707), Function pf_init_units called from node N1231, stack depth 3 [58778049], stack [main, pf_init, pf_init_units]])
  Number of target states:       0

Time for analysis setup:          3.474s
  Time for loading CPAs:          0.682s
  Time for loading parser:        0.438s
  Time for CFA construction:      2.245s
    Time for parsing file(s):     0.590s
    Time for AST to CFA:          0.826s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.530s
      Time for var class.:        0.246s
Time for Analysis:              307.456s
CPU time for analysis:          307.400s
Time for analyzing result:        0.106s
Total time for CPAchecker:      310.932s
Total CPU time for CPAchecker:  310.880s
Time for statistics:              1.203s

Time for Garbage Collector:      35.019s (in 1692 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                531MB (   507 MiB) max;    183MB (   174 MiB) avg;    559MB (   533 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           598MB (   570 MiB) max;    278MB (   265 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8146MB (  7769 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
