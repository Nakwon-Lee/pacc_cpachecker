scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pf.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t1cvqvky/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4002: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4041: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4620: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5212: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segments to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1680781 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1456724 (87%)
  Because of loop head:            223248 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         809 (0%)
  Times precision was empty:       87091 (5%)
  Times precision was {false}:     2216 (0%)
  Times result was cached:         1580499 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10975 (1%)
  Times result was 'false':        12234 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1469487
  BDD entailment checks:           305485
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          10
Number of abstraction locations:          140
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         8635275
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 654.63
Number of irrelevant predicates:          2465563 (29%)
Number of preds handled by boolean abs:   36371 (0%)
  Total number of models for allsat:      12278
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                 50.529s
  Time for path formula creation:       47.986s
Time for strengthen operator:            5.436s
Time for prec operator:                263.540s
  Time for abstraction:                250.477s (Max:     1.299s, Count: 1680781)
    Boolean abstraction:                25.008s
    Solving time:                       28.221s (Max:     0.150s)
    Model enumeration time:              1.957s
    Time for BDD construction:           0.249s (Max:     0.012s)
Time for merge operator:                 3.536s
Time for coverage check:                 0.375s
  Time for BDD entailment checks:        0.227s
Total time for SMT solver (w/o itp):    30.178s

Number of path formula cache hits:   10633704 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.717s

Total number of created targets for pointer analysis: 657137
   Number of created targets for uf: *(void)* is 14
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 25617
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 11293
   Number of created targets for uf: *unsigned_long_int is 54


Number of BDD nodes:                               393
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22111 (count: 470006, min: 0, max: 650, avg: 0.05)
Time for BDD node cleanup:                             0.068s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.797s
  Time for transition matches:                         4.916s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      9167539 (count: 9167539, min: 1, max: 1, avg: 1.00) [1 x 9167539]

CPA algorithm statistics
------------------------
Number of iterations:            5624169
Max size of waitlist:            729
Average size of waitlist:        285
Number of computed successors:   6523165
Max successors for one state:    2
Number of times merged:          582001
Number of times stopped:         838024
Number of times breaked:         809

Total time for CPA algorithm:       430.282s (Max:     9.231s)
  Time for choose from waitlist:      2.189s
  Time for precision adjustment:    294.607s
  Time for transfer relation:       104.374s
  Time for merge operator:            7.625s
  Time for stop operator:             4.714s
  Time for adding to reached set:     6.554s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   809
Avg. length of target path (in blocks):               42410 (count: 809, min: 7, max: 176, avg: 52.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  31.394s
  Counterexample analysis:                            20.034s (Max:     0.183s, Calls: 809)
    Refinement sat check:                             15.372s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.029s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.125s
  Precision update:                                    0.337s
  ARG update:                                         10.575s

Length of refined path (in blocks):                   38258 (count: 809, min: 4, max: 168, avg: 47.29)
Number of affected states:                            21317 (count: 809, min: 0, max: 167, avg: 26.35)
Length (states) of path with itp 'true':              16132 (count: 809, min: 0, max: 131, avg: 19.94)
Length (states) of path with itp non-trivial itp:     21317 (count: 809, min: 0, max: 167, avg: 26.35)
Length (states) of path with itp 'false':               809 (count: 809, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 809, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           20711 (count: 809, min: 0, max: 166, avg: 25.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                809
Number of successful refinements:     809
Number of failed refinements:         0
Max. size of reached set before ref.: 144002
Max. size of reached set after ref.:  140100
Avg. size of reached set before ref.: 34387.00
Avg. size of reached set after ref.:  27553.10

Total time for CEGAR algorithm:     505.531s
Time for refinements:                57.343s
Average time for refinement:          0.070s
Max time for refinement:              1.415s

Code Coverage
-----------------------------
  Function coverage:      0.418
  Visited lines:          1346
  Total lines:            1831
  Line coverage:          0.735
  Visited conditions:     202
  Total conditions:       404
  Condition coverage:     0.500

CPAchecker general statistics
-----------------------------
Number of program locations:     2465
Number of CFA edges:             2753
Number of relevant variables:    263
Number of functions:             98
Number of loops:                 20
Size of reached set:             144286
  Number of reached locations:   614 (25%)
    Avg states per location:     234
    Max states per location:     8913 (at node N276)
  Number of reached functions:   41 (42%)
  Number of partitions:          144282
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N167 (before line 3707), Function pf_init_units called from node N1231, stack depth 3 [7afbfba9], stack [main, pf_init, pf_init_units]])
  Number of target states:       0

Time for analysis setup:          3.614s
  Time for loading CPAs:          0.747s
  Time for loading parser:        0.533s
  Time for CFA construction:      2.246s
    Time for parsing file(s):     0.599s
    Time for AST to CFA:          0.770s
    Time for CFA sanity check:    0.153s
    Time for post-processing:     0.585s
      Time for var class.:        0.276s
Time for Analysis:              505.531s
CPU time for analysis:          505.440s
Time for analyzing result:        0.129s
Total time for CPAchecker:      509.147s
Total CPU time for CPAchecker:  509.050s
Time for statistics:              1.424s

Time for Garbage Collector:      61.598s (in 1592 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                729MB (   695 MiB) max;    343MB (   327 MiB) avg;    746MB (   711 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           763MB (   728 MiB) max;    511MB (   487 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8222MB (  7841 MiB) max;   8161MB (  7783 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
