scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tj9qmm96/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            45884 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40609 (89%)
  Because of loop head:            5270 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (0%)
  Times precision was empty:       45765 (100%)
  Times precision was {false}:     44 (0%)
  Times result was cached:         56 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (0%)
  Times result was 'false':        6 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         42707
  BDD entailment checks:           7415
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          3
Number of abstraction locations:          15
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         144
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 2.29
Number of irrelevant predicates:          101 (70%)
Number of preds handled by boolean abs:   21 (15%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.95

Time for post operator:                 12.420s
  Time for path formula creation:       12.201s
Time for strengthen operator:            0.399s
Time for prec operator:                  2.367s
  Time for abstraction:                  1.111s (Max:     0.076s, Count: 45884)
    Boolean abstraction:                 0.200s
    Solving time:                        0.560s (Max:     0.059s)
    Model enumeration time:              0.017s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 1.161s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     0.577s

Number of path formula cache hits:   167927 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.078s

Total number of created targets for pointer analysis: 84591
   Number of created targets for uf: *(struct_pi_adapter)* is 21
   Number of created targets for uf: *signed_int is 987
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 1195


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          48 (count: 53524, min: 0, max: 19, avg: 0.00)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.740s
  Time for transition matches:                         0.387s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       257974 (count: 257974, min: 1, max: 1, avg: 1.00) [1 x 257974]

CPA algorithm statistics
------------------------
Number of iterations:            160783
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   185841
Max successors for one state:    2
Number of times merged:          17646
Number of times stopped:         25029
Number of times breaked:         5

Total time for CPA algorithm:        25.632s (Max:     7.714s)
  Time for choose from waitlist:      0.243s
  Time for precision adjustment:      4.830s
  Time for transfer relation:        16.986s
  Time for merge operator:            1.641s
  Time for stop operator:             0.592s
  Time for adding to reached set:     0.348s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  89 (count: 5, min: 7, max: 43, avg: 17.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.998s
  Counterexample analysis:                             0.180s (Max:     0.080s, Calls: 5)
    Refinement sat check:                              0.146s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.003s
  ARG update:                                          0.788s

Length of refined path (in blocks):                      75 (count: 5, min: 4, max: 35, avg: 15.00)
Number of affected states:                               33 (count: 5, min: 0, max: 13, avg: 6.60)
Length (states) of path with itp 'true':                 37 (count: 5, min: 0, max: 34, avg: 7.40)
Length (states) of path with itp non-trivial itp:        33 (count: 5, min: 0, max: 13, avg: 6.60)
Length (states) of path with itp 'false':                 5 (count: 5, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              29 (count: 5, min: 0, max: 12, avg: 5.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 41604
Max. size of reached set after ref.:  16779
Avg. size of reached set before ref.: 31138.40
Avg. size of reached set after ref.:  3360.00

Total time for CEGAR algorithm:      26.990s
Time for refinements:                 1.314s
Average time for refinement:          0.262s
Max time for refinement:              0.319s

Code Coverage
-----------------------------
  Function coverage:      0.250
  Visited lines:          991
  Total lines:            1760
  Line coverage:          0.563
  Visited conditions:     118
  Total conditions:       394
  Condition coverage:     0.299

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             21914
  Number of reached locations:   362 (16%)
    Avg states per location:     60
    Max states per location:     1267 (at node N96)
  Number of reached functions:   22 (25%)
  Number of partitions:          21908
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 3789), Function pt_detect called from node N1274, stack depth 3 [2beb5862], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        7

Time for analysis setup:          3.338s
  Time for loading CPAs:          0.651s
  Time for loading parser:        0.488s
  Time for CFA construction:      2.095s
    Time for parsing file(s):     0.562s
    Time for AST to CFA:          0.764s
    Time for CFA sanity check:    0.117s
    Time for post-processing:     0.487s
      Time for var class.:        0.234s
Time for Analysis:               26.990s
CPU time for analysis:           26.990s
Total time for CPAchecker:       30.338s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.510s

Time for Garbage Collector:       2.349s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                143MB (   136 MiB) max;     79MB (    75 MiB) avg;    153MB (   146 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           152MB (   145 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
