scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pj7hlaq6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            578470 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  481799 (83%)
  Because of loop head:            93880 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2791 (0%)
  Times precision was empty:       18826 (3%)
  Times precision was {false}:     1053 (0%)
  Times result was cached:         552742 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5849 (1%)
  Times result was 'false':        16111 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         462034
  BDD entailment checks:           118796
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          203
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         2693746
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 390.28
Number of irrelevant predicates:          484626 (18%)
Number of preds handled by boolean abs:   20366 (1%)
  Total number of models for allsat:      6414
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                 13.255s
  Time for path formula creation:       12.220s
Time for strengthen operator:            2.038s
Time for prec operator:                100.351s
  Time for abstraction:                 96.186s (Max:     0.259s, Count: 578470)
    Boolean abstraction:                16.152s
    Solving time:                       16.570s (Max:     0.223s)
    Model enumeration time:              1.313s
    Time for BDD construction:           0.169s (Max:     0.012s)
Time for merge operator:                 0.904s
Time for coverage check:                 0.154s
  Time for BDD entailment checks:        0.109s
Total time for SMT solver (w/o itp):    17.883s

Number of path formula cache hits:   3995479 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.568s

Total number of created targets for pointer analysis: 100587
   Number of created targets for uf: *(struct_pi_adapter)* is 165
   Number of created targets for uf: *signed_int is 3902
   Number of created targets for uf: *(char)* is 69
   Number of created targets for uf: *char is 2277


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11913 (count: 178091, min: 0, max: 278, avg: 0.07)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.455s
  Time for transition matches:                         1.910s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      3430882 (count: 3430882, min: 1, max: 1, avg: 1.00) [1 x 3430882]

CPA algorithm statistics
------------------------
Number of iterations:            2042446
Max size of waitlist:            112
Average size of waitlist:        35
Number of computed successors:   2357847
Max successors for one state:    2
Number of times merged:          171619
Number of times stopped:         259757
Number of times breaked:         2791

Total time for CPA algorithm:       153.947s (Max:     2.700s)
  Time for choose from waitlist:      0.594s
  Time for precision adjustment:    109.783s
  Time for transfer relation:        34.064s
  Time for merge operator:            2.353s
  Time for stop operator:             1.943s
  Time for adding to reached set:     1.740s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2791
Avg. length of target path (in blocks):              144005 (count: 2791, min: 7, max: 170, avg: 51.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  56.910s
  Counterexample analysis:                            51.490s (Max:     0.187s, Calls: 2791)
    Refinement sat check:                             37.133s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.072s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.313s
  Precision update:                                    1.670s
  ARG update:                                          2.628s

Length of refined path (in blocks):                  138777 (count: 2791, min: 4, max: 161, avg: 49.72)
Number of affected states:                            55134 (count: 2791, min: 0, max: 160, avg: 19.75)
Length (states) of path with itp 'true':              80852 (count: 2791, min: 0, max: 145, avg: 28.97)
Length (states) of path with itp non-trivial itp:     55134 (count: 2791, min: 0, max: 160, avg: 19.75)
Length (states) of path with itp 'false':              2791 (count: 2791, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2791, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           52521 (count: 2791, min: 0, max: 159, avg: 18.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2791
Number of successful refinements:     2791
Number of failed refinements:         0
Max. size of reached set before ref.: 26031
Max. size of reached set after ref.:  14213
Avg. size of reached set before ref.: 5723.22
Avg. size of reached set after ref.:  4990.72

Total time for CEGAR algorithm:     228.675s
Time for refinements:                67.475s
Average time for refinement:          0.024s
Max time for refinement:              0.241s

Code Coverage
-----------------------------
  Function coverage:      0.614
  Visited lines:          1537
  Total lines:            1760
  Line coverage:          0.873
  Visited conditions:     298
  Total conditions:       394
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             37566
  Number of reached locations:   911 (39%)
    Avg states per location:     41
    Max states per location:     2161 (at node N95)
  Number of reached functions:   54 (61%)
  Number of partitions:          37566
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.386s
  Time for loading CPAs:          0.613s
  Time for loading parser:        0.519s
  Time for CFA construction:      2.134s
    Time for parsing file(s):     0.611s
    Time for AST to CFA:          0.716s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.462s
      Time for var class.:        0.209s
Time for Analysis:              228.676s
CPU time for analysis:          228.660s
Time for analyzing result:        0.027s
Total time for CPAchecker:      232.065s
Total CPU time for CPAchecker:  232.040s
Time for statistics:              0.514s

Time for Garbage Collector:      11.989s (in 1509 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                166MB (   158 MiB) max;     87MB (    83 MiB) avg;    178MB (   170 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           190MB (   181 MiB) max;    140MB (   134 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8127MB (  7750 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
