scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a0n2cyrj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            604887 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  503510 (83%)
  Because of loop head:            98676 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2701 (0%)
  Times precision was empty:       19548 (3%)
  Times precision was {false}:     1103 (0%)
  Times result was cached:         578237 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5999 (1%)
  Times result was 'false':        15977 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         473105
  BDD entailment checks:           130921
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          203
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         2806546
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 395.18
Number of irrelevant predicates:          508370 (18%)
Number of preds handled by boolean abs:   20689 (1%)
  Total number of models for allsat:      6567
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.09

Time for post operator:                 13.499s
  Time for path formula creation:       12.586s
Time for strengthen operator:            2.164s
Time for prec operator:                101.276s
  Time for abstraction:                 96.716s (Max:     0.337s, Count: 604887)
    Boolean abstraction:                15.764s
    Solving time:                       15.888s (Max:     0.116s)
    Model enumeration time:              1.289s
    Time for BDD construction:           0.226s (Max:     0.012s)
Time for merge operator:                 0.872s
Time for coverage check:                 0.169s
  Time for BDD entailment checks:        0.115s
Total time for SMT solver (w/o itp):    17.177s

Number of path formula cache hits:   4127407 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.874s

Total number of created targets for pointer analysis: 90595
   Number of created targets for uf: *(struct_pi_adapter)* is 165
   Number of created targets for uf: *signed_int is 3902
   Number of created targets for uf: *(char)* is 69
   Number of created targets for uf: *char is 311


Number of BDD nodes:                               361
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12237 (count: 192097, min: 0, max: 280, avg: 0.06)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.624s
  Time for transition matches:                         2.026s
  Time for transition assertions:                      0.013s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      3547547 (count: 3547547, min: 1, max: 1, avg: 1.00) [1 x 3547547]

CPA algorithm statistics
------------------------
Number of iterations:            2113758
Max size of waitlist:            114
Average size of waitlist:        36
Number of computed successors:   2433839
Max successors for one state:    2
Number of times merged:          171092
Number of times stopped:         265738
Number of times breaked:         2701

Total time for CPA algorithm:       158.849s (Max:     2.312s)
  Time for choose from waitlist:      0.699s
  Time for precision adjustment:    111.180s
  Time for transfer relation:        36.281s
  Time for merge operator:            2.449s
  Time for stop operator:             1.942s
  Time for adding to reached set:     2.247s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2701
Avg. length of target path (in blocks):              141855 (count: 2701, min: 15, max: 179, avg: 52.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  57.587s
  Counterexample analysis:                            51.946s (Max:     0.172s, Calls: 2701)
    Refinement sat check:                             37.235s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.109s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.305s
  Precision update:                                    1.676s
  ARG update:                                          2.855s

Length of refined path (in blocks):                  137364 (count: 2701, min: 4, max: 161, avg: 50.86)
Number of affected states:                            55295 (count: 2701, min: 0, max: 160, avg: 20.47)
Length (states) of path with itp 'true':              79368 (count: 2701, min: 0, max: 145, avg: 29.38)
Length (states) of path with itp non-trivial itp:     55295 (count: 2701, min: 0, max: 160, avg: 20.47)
Length (states) of path with itp 'false':              2701 (count: 2701, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2701, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           52701 (count: 2701, min: 0, max: 159, avg: 19.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2701
Number of successful refinements:     2701
Number of failed refinements:         0
Max. size of reached set before ref.: 26065
Max. size of reached set after ref.:  14213
Avg. size of reached set before ref.: 6035.34
Avg. size of reached set after ref.:  5252.46

Total time for CEGAR algorithm:     235.639s
Time for refinements:                69.128s
Average time for refinement:          0.025s
Max time for refinement:              0.269s

Code Coverage
-----------------------------
  Function coverage:      0.614
  Visited lines:          1537
  Total lines:            1760
  Line coverage:          0.873
  Visited conditions:     298
  Total conditions:       394
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             37566
  Number of reached locations:   911 (39%)
    Avg states per location:     41
    Max states per location:     2161 (at node N95)
  Number of reached functions:   54 (61%)
  Number of partitions:          37566
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.392s
  Time for loading CPAs:          0.638s
  Time for loading parser:        0.520s
  Time for CFA construction:      2.130s
    Time for parsing file(s):     0.595s
    Time for AST to CFA:          0.769s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.503s
      Time for var class.:        0.241s
Time for Analysis:              235.640s
CPU time for analysis:          235.590s
Time for analyzing result:        0.039s
Total time for CPAchecker:      239.035s
Total CPU time for CPAchecker:  238.990s
Time for statistics:              0.520s

Time for Garbage Collector:      12.876s (in 1531 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                181MB (   173 MiB) max;     89MB (    84 MiB) avg;    186MB (   178 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           187MB (   179 MiB) max;    142MB (   136 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8127MB (  7750 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
