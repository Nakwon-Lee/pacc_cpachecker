scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zm28419f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3093551 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2747816 (89%)
  Because of loop head:            344271 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1464 (0%)
  Times precision was empty:       108067 (3%)
  Times precision was {false}:     5235 (0%)
  Times result was cached:         2964249 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16000 (1%)
  Times result was 'false':        11836 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2876356
  BDD entailment checks:           486908
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          196
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         12690110
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 597.60
Number of irrelevant predicates:          6873648 (54%)
Number of preds handled by boolean abs:   34555 (0%)
  Total number of models for allsat:      18307
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.14

Time for post operator:                141.224s
  Time for path formula creation:      136.008s
Time for strengthen operator:           11.296s
Time for prec operator:                402.892s
  Time for abstraction:                379.621s (Max:     2.241s, Count: 3093551)
    Boolean abstraction:                48.451s
    Solving time:                       60.123s (Max:     0.138s)
    Model enumeration time:              4.451s
    Time for BDD construction:           0.241s (Max:     0.003s)
Time for merge operator:                16.189s
Time for coverage check:                 0.742s
  Time for BDD entailment checks:        0.438s
Total time for SMT solver (w/o itp):    64.574s

Number of path formula cache hits:   17848665 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    96.110s

Total number of created targets for pointer analysis: 2086491
   Number of created targets for uf: *(struct_pi_adapter)* is 125
   Number of created targets for uf: *(char)* is 365
   Number of created targets for uf: *signed_int is 442
   Number of created targets for uf: *char is 30509


Number of BDD nodes:                               262
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       32146 (count: 717241, min: 0, max: 1804, avg: 0.04)
Time for BDD node cleanup:                             0.134s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.660s
  Time for transition matches:                         9.923s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                     17316835 (count: 17316835, min: 1, max: 1, avg: 1.00) [1 x 17316835]

CPA algorithm statistics
------------------------
Number of iterations:            10837705
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   12529003
Max successors for one state:    2
Number of times merged:          1194724
Number of times stopped:         1675689
Number of times breaked:         1464

Total time for CPA algorithm:       766.770s (Max:    20.207s)
  Time for choose from waitlist:      2.552s
  Time for precision adjustment:    452.990s
  Time for transfer relation:       248.532s
  Time for merge operator:           25.578s
  Time for stop operator:             9.350s
  Time for adding to reached set:     9.506s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1464
Avg. length of target path (in blocks):              101344 (count: 1464, min: 7, max: 193, avg: 69.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  65.732s
  Counterexample analysis:                            47.230s (Max:     0.177s, Calls: 1464)
    Refinement sat check:                             33.369s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.045s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.321s
  Precision update:                                    0.524s
  ARG update:                                         17.074s

Length of refined path (in blocks):                   99505 (count: 1464, min: 4, max: 192, avg: 67.97)
Number of affected states:                            74000 (count: 1464, min: 0, max: 156, avg: 50.55)
Length (states) of path with itp 'true':              24041 (count: 1464, min: 0, max: 94, avg: 16.42)
Length (states) of path with itp non-trivial itp:     74000 (count: 1464, min: 0, max: 156, avg: 50.55)
Length (states) of path with itp 'false':              1464 (count: 1464, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1464, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           72554 (count: 1464, min: 0, max: 155, avg: 49.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1464
Number of successful refinements:     1464
Number of failed refinements:         0
Max. size of reached set before ref.: 126695
Max. size of reached set after ref.:  54190
Avg. size of reached set before ref.: 34920.04
Avg. size of reached set after ref.:  27544.58

Total time for CEGAR algorithm:     896.942s
Time for refinements:               101.796s
Average time for refinement:          0.069s
Max time for refinement:              0.553s

Code Coverage
-----------------------------
  Function coverage:      0.614
  Visited lines:          1524
  Total lines:            1760
  Line coverage:          0.866
  Visited conditions:     292
  Total conditions:       394
  Condition coverage:     0.741

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             43807
  Number of reached locations:   899 (39%)
    Avg states per location:     48
    Max states per location:     2530 (at node N96)
  Number of reached functions:   54 (61%)
  Number of partitions:          43802
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1468 (before line 4549), Function main called from node N1373, stack depth 1 [3f3c7bdb], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.376s
  Time for loading CPAs:          0.598s
  Time for loading parser:        0.444s
  Time for CFA construction:      2.245s
    Time for parsing file(s):     0.607s
    Time for AST to CFA:          0.867s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.508s
      Time for var class.:        0.206s
Time for Analysis:              896.948s
CPU time for analysis:          896.900s
Total time for CPAchecker:      900.327s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.517s

Time for Garbage Collector:      62.637s (in 962 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1821MB (  1736 MiB) max;   1040MB (   992 MiB) avg;   1847MB (  1762 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1889MB (  1801 MiB) max;   1552MB (  1480 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8697MB (  8294 MiB) max;   8302MB (  7917 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
