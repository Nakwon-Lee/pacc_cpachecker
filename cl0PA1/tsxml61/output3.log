scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cp4085jo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44489 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35480 (80%)
  Because of loop head:            8767 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         242 (1%)
  Times precision was empty:       8730 (20%)
  Times precision was {false}:     374 (1%)
  Times result was cached:         33904 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1481 (3%)
  Times result was 'false':        1777 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         29943
  BDD entailment checks:           11177
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          7
Number of abstraction locations:          133
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         127031
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 68.48
Number of irrelevant predicates:          37821 (30%)
Number of preds handled by boolean abs:   3496 (3%)
  Total number of models for allsat:      1477
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.847s
  Time for path formula creation:        3.733s
Time for strengthen operator:            0.315s
Time for prec operator:                 10.203s
  Time for abstraction:                  9.572s (Max:     0.052s, Count: 44489)
    Boolean abstraction:                 1.842s
    Solving time:                        1.982s (Max:     0.034s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.085s (Max:     0.012s)
Time for merge operator:                 0.198s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     2.104s

Number of path formula cache hits:   302029 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.927s

Total number of created targets for pointer analysis: 8570
   Number of created targets for uf: *(struct_pi_adapter)* is 13
   Number of created targets for uf: *signed_int is 213
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 63


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3044 (count: 30724, min: 0, max: 182, avg: 0.10)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.644s
  Time for transition matches:                         0.271s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                       283626 (count: 283626, min: 1, max: 1, avg: 1.00) [1 x 283626]

CPA algorithm statistics
------------------------
Number of iterations:            162186
Max size of waitlist:            57
Average size of waitlist:        23
Number of computed successors:   187166
Max successors for one state:    2
Number of times merged:          9383
Number of times stopped:         16956
Number of times breaked:         242

Total time for CPA algorithm:        20.651s (Max:     0.886s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     11.437s
  Time for transfer relation:         7.283s
  Time for merge operator:            0.434s
  Time for stop operator:             0.330s
  Time for adding to reached set:     0.324s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   242
Avg. length of target path (in blocks):                8136 (count: 242, min: 15, max: 80, avg: 33.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.808s
  Counterexample analysis:                             3.919s (Max:     0.041s, Calls: 242)
    Refinement sat check:                              2.962s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.083s
  Precision update:                                    0.186s
  ARG update:                                          0.449s

Length of refined path (in blocks):                    6803 (count: 242, min: 4, max: 79, avg: 28.11)
Number of affected states:                             4805 (count: 242, min: 0, max: 77, avg: 19.86)
Length (states) of path with itp 'true':               1756 (count: 242, min: 0, max: 29, avg: 7.26)
Length (states) of path with itp non-trivial itp:      4805 (count: 242, min: 0, max: 77, avg: 19.86)
Length (states) of path with itp 'false':               242 (count: 242, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 242, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4653 (count: 242, min: 0, max: 76, avg: 19.23)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                242
Number of successful refinements:     242
Number of failed refinements:         0
Max. size of reached set before ref.: 2079
Max. size of reached set after ref.:  1341
Avg. size of reached set before ref.: 964.50
Avg. size of reached set after ref.:  272.98

Total time for CEGAR algorithm:      25.949s
Time for refinements:                 5.228s
Average time for refinement:          0.021s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.523
  Visited lines:          1239
  Total lines:            1760
  Line coverage:          0.704
  Visited conditions:     192
  Total conditions:       394
  Condition coverage:     0.487

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             1086
  Number of reached locations:   591 (25%)
    Avg states per location:     1
    Max states per location:     16 (at node N96)
  Number of reached functions:   46 (52%)
  Number of partitions:          1086
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          3.840s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.550s
  Time for CFA construction:      2.389s
    Time for parsing file(s):     0.689s
    Time for AST to CFA:          0.861s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.545s
      Time for var class.:        0.257s
Time for Analysis:               25.949s
CPU time for analysis:           25.950s
Total time for CPAchecker:       29.792s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.080s

Time for Garbage Collector:       0.645s (in 102 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     48MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
