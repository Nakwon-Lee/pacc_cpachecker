scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jkjy7qqa/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48749 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39181 (80%)
  Because of loop head:            9312 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         256 (1%)
  Times precision was empty:       6148 (13%)
  Times precision was {false}:     358 (1%)
  Times result was cached:         40618 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1625 (3%)
  Times result was 'false':        1876 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         31702
  BDD entailment checks:           10738
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          7
Number of abstraction locations:          139
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         157529
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 79.44
Number of irrelevant predicates:          36050 (23%)
Number of preds handled by boolean abs:   3955 (3%)
  Total number of models for allsat:      1620
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.079s
  Time for path formula creation:        2.889s
Time for strengthen operator:            0.269s
Time for prec operator:                 11.890s
  Time for abstraction:                 11.316s (Max:     0.057s, Count: 48749)
    Boolean abstraction:                 2.131s
    Solving time:                        2.353s (Max:     0.043s)
    Model enumeration time:              0.141s
    Time for BDD construction:           0.086s (Max:     0.012s)
Time for merge operator:                 0.176s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     2.503s

Number of path formula cache hits:   335232 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.251s

Total number of created targets for pointer analysis: 8212
   Number of created targets for uf: *(struct_pi_adapter)* is 13
   Number of created targets for uf: *signed_int is 213
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 63


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3328 (count: 28483, min: 0, max: 154, avg: 0.12)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.799s
  Time for transition matches:                         0.347s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                       302308 (count: 302308, min: 1, max: 1, avg: 1.00) [1 x 302308]

CPA algorithm statistics
------------------------
Number of iterations:            173340
Max size of waitlist:            50
Average size of waitlist:        20
Number of computed successors:   199328
Max successors for one state:    2
Number of times merged:          10482
Number of times stopped:         18743
Number of times breaked:         256

Total time for CPA algorithm:        21.787s (Max:     0.637s)
  Time for choose from waitlist:      0.156s
  Time for precision adjustment:     13.100s
  Time for transfer relation:         6.714s
  Time for merge operator:            0.430s
  Time for stop operator:             0.316s
  Time for adding to reached set:     0.285s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   256
Avg. length of target path (in blocks):                7825 (count: 256, min: 7, max: 77, avg: 30.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.632s
  Counterexample analysis:                             3.704s (Max:     0.051s, Calls: 256)
    Refinement sat check:                              2.830s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.238s
  ARG update:                                          0.466s

Length of refined path (in blocks):                    6982 (count: 256, min: 4, max: 76, avg: 27.27)
Number of affected states:                             5105 (count: 256, min: 0, max: 74, avg: 19.94)
Length (states) of path with itp 'true':               1621 (count: 256, min: 0, max: 21, avg: 6.33)
Length (states) of path with itp non-trivial itp:      5105 (count: 256, min: 0, max: 74, avg: 19.94)
Length (states) of path with itp 'false':               256 (count: 256, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 256, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4914 (count: 256, min: 0, max: 73, avg: 19.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                256
Number of successful refinements:     256
Number of failed refinements:         0
Max. size of reached set before ref.: 3054
Max. size of reached set after ref.:  2487
Avg. size of reached set before ref.: 1036.02
Avg. size of reached set after ref.:  349.38

Total time for CEGAR algorithm:      26.784s
Time for refinements:                 4.940s
Average time for refinement:          0.019s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.534
  Visited lines:          1357
  Total lines:            1760
  Line coverage:          0.771
  Visited conditions:     236
  Total conditions:       394
  Condition coverage:     0.599

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             2929
  Number of reached locations:   715 (31%)
    Avg states per location:     4
    Max states per location:     113 (at node N96)
  Number of reached functions:   47 (53%)
  Number of partitions:          2927
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1468 (before line 4549), Function main called from node N1373, stack depth 1 [2a3a299], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          3.492s
  Time for loading CPAs:          0.676s
  Time for loading parser:        0.536s
  Time for CFA construction:      2.214s
    Time for parsing file(s):     0.640s
    Time for AST to CFA:          0.820s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.487s
      Time for var class.:        0.227s
Time for Analysis:               26.784s
CPU time for analysis:           26.790s
Total time for CPAchecker:       30.279s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.143s

Time for Garbage Collector:       0.696s (in 120 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     47MB (    45 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
