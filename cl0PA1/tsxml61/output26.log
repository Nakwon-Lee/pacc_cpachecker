scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j4udyl7c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            64894 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  54065 (83%)
  Because of loop head:            10600 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         229 (0%)
  Times precision was empty:       29416 (45%)
  Times precision was {false}:     365 (1%)
  Times result was cached:         34011 (52%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1102 (2%)
  Times result was 'false':        1732 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         35074
  BDD entailment checks:           16054
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          89
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         128878
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 87.85
Number of irrelevant predicates:          71936 (56%)
Number of preds handled by boolean abs:   2621 (2%)
  Total number of models for allsat:      1112
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.734s
  Time for path formula creation:        3.555s
Time for strengthen operator:            0.336s
Time for prec operator:                 11.087s
  Time for abstraction:                 10.441s (Max:     0.062s, Count: 64894)
    Boolean abstraction:                 3.055s
    Solving time:                        3.459s (Max:     0.042s)
    Model enumeration time:              0.193s
    Time for BDD construction:           0.093s (Max:     0.009s)
Time for merge operator:                 0.212s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     3.652s

Number of path formula cache hits:   427214 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.675s

Total number of created targets for pointer analysis: 32358
   Number of created targets for uf: *(struct_pi_adapter)* is 37
   Number of created targets for uf: *signed_int is 1565
   Number of created targets for uf: *(char)* is 17
   Number of created targets for uf: *char is 2605


Number of BDD nodes:                               266
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2286 (count: 53977, min: 0, max: 87, avg: 0.04)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.635s
  Time for transition matches:                         0.343s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       387287 (count: 387287, min: 1, max: 1, avg: 1.00) [1 x 387287]

CPA algorithm statistics
------------------------
Number of iterations:            210552
Max size of waitlist:            126
Average size of waitlist:        49
Number of computed successors:   237931
Max successors for one state:    2
Number of times merged:          9510
Number of times stopped:         18104
Number of times breaked:         229

Total time for CPA algorithm:        22.190s (Max:     0.658s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:     12.496s
  Time for transfer relation:         7.619s
  Time for merge operator:            0.397s
  Time for stop operator:             0.327s
  Time for adding to reached set:     0.323s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   229
Avg. length of target path (in blocks):                4888 (count: 229, min: 7, max: 39, avg: 21.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.927s
  Counterexample analysis:                             3.043s (Max:     0.054s, Calls: 229)
    Refinement sat check:                              2.405s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.174s
  ARG update:                                          0.523s

Length of refined path (in blocks):                    4244 (count: 229, min: 4, max: 33, avg: 18.53)
Number of affected states:                             2188 (count: 229, min: 0, max: 30, avg: 9.55)
Length (states) of path with itp 'true':               1827 (count: 229, min: 0, max: 32, avg: 7.98)
Length (states) of path with itp non-trivial itp:      2188 (count: 229, min: 0, max: 30, avg: 9.55)
Length (states) of path with itp 'false':               229 (count: 229, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 229, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2004 (count: 229, min: 0, max: 29, avg: 8.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                229
Number of successful refinements:     229
Number of failed refinements:         0
Max. size of reached set before ref.: 5689
Max. size of reached set after ref.:  4981
Avg. size of reached set before ref.: 1984.95
Avg. size of reached set after ref.:  1035.43

Total time for CEGAR algorithm:      26.753s
Time for refinements:                 4.356s
Average time for refinement:          0.019s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.432
  Visited lines:          1045
  Total lines:            1760
  Line coverage:          0.594
  Visited conditions:     126
  Total conditions:       394
  Condition coverage:     0.320

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             657
  Number of reached locations:   407 (17%)
    Avg states per location:     1
    Max states per location:     12 (at node N107)
  Number of reached functions:   38 (43%)
  Number of partitions:          657
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          3.533s
  Time for loading CPAs:          0.692s
  Time for loading parser:        0.492s
  Time for CFA construction:      2.286s
    Time for parsing file(s):     0.700s
    Time for AST to CFA:          0.840s
    Time for CFA sanity check:    0.121s
    Time for post-processing:     0.483s
      Time for var class.:        0.226s
Time for Analysis:               26.753s
CPU time for analysis:           26.760s
Total time for CPAchecker:       30.289s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.075s

Time for Garbage Collector:       0.831s (in 122 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     48MB (    46 MiB) avg;     79MB (    76 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
