scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_luif813h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            591502 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  491124 (83%)
  Because of loop head:            97684 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2694 (0%)
  Times precision was empty:       16781 (3%)
  Times precision was {false}:     1078 (0%)
  Times result was cached:         567706 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5937 (1%)
  Times result was 'false':        15956 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         470689
  BDD entailment checks:           130025
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          203
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         2761231
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 393.62
Number of irrelevant predicates:          488465 (18%)
Number of preds handled by boolean abs:   20566 (1%)
  Total number of models for allsat:      6505
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                 14.192s
  Time for path formula creation:       13.128s
Time for strengthen operator:            2.087s
Time for prec operator:                101.001s
  Time for abstraction:                 96.755s (Max:     0.224s, Count: 591502)
    Boolean abstraction:                15.632s
    Solving time:                       15.793s (Max:     0.189s)
    Model enumeration time:              1.264s
    Time for BDD construction:           0.112s (Max:     0.004s)
Time for merge operator:                 0.891s
Time for coverage check:                 0.211s
  Time for BDD entailment checks:        0.145s
Total time for SMT solver (w/o itp):    17.057s

Number of path formula cache hits:   3989209 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.059s

Total number of created targets for pointer analysis: 89377
   Number of created targets for uf: *(struct_pi_adapter)* is 165
   Number of created targets for uf: *signed_int is 3902
   Number of created targets for uf: *(char)* is 69
   Number of created targets for uf: *char is 311


Number of BDD nodes:                               361
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12113 (count: 187937, min: 0, max: 266, avg: 0.06)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.029s
  Time for transition matches:                         2.058s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.030s
Automaton transfers with branching:                0
Automaton transfer successors:                      3413666 (count: 3413666, min: 1, max: 1, avg: 1.00) [1 x 3413666]

CPA algorithm statistics
------------------------
Number of iterations:            2078189
Max size of waitlist:            114
Average size of waitlist:        36
Number of computed successors:   2396556
Max successors for one state:    2
Number of times merged:          170332
Number of times stopped:         264561
Number of times breaked:         2694

Total time for CPA algorithm:       158.367s (Max:     3.250s)
  Time for choose from waitlist:      0.583s
  Time for precision adjustment:    110.607s
  Time for transfer relation:        36.598s
  Time for merge operator:            2.322s
  Time for stop operator:             2.024s
  Time for adding to reached set:     2.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2694
Avg. length of target path (in blocks):              142417 (count: 2694, min: 15, max: 179, avg: 52.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  58.151s
  Counterexample analysis:                            52.280s (Max:     0.207s, Calls: 2694)
    Refinement sat check:                             37.164s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.051s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.378s
  Precision update:                                    1.484s
  ARG update:                                          3.255s

Length of refined path (in blocks):                  138113 (count: 2694, min: 4, max: 161, avg: 51.27)
Number of affected states:                            55675 (count: 2694, min: 0, max: 160, avg: 20.67)
Length (states) of path with itp 'true':              79744 (count: 2694, min: 0, max: 145, avg: 29.60)
Length (states) of path with itp non-trivial itp:     55675 (count: 2694, min: 0, max: 160, avg: 20.67)
Length (states) of path with itp 'false':              2694 (count: 2694, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2694, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           53073 (count: 2694, min: 0, max: 159, avg: 19.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2694
Number of successful refinements:     2694
Number of failed refinements:         0
Max. size of reached set before ref.: 26061
Max. size of reached set after ref.:  14221
Avg. size of reached set before ref.: 6076.50
Avg. size of reached set after ref.:  5304.98

Total time for CEGAR algorithm:     236.222s
Time for refinements:                70.039s
Average time for refinement:          0.025s
Max time for refinement:              0.322s

Code Coverage
-----------------------------
  Function coverage:      0.614
  Visited lines:          1537
  Total lines:            1760
  Line coverage:          0.873
  Visited conditions:     298
  Total conditions:       394
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             37566
  Number of reached locations:   911 (39%)
    Avg states per location:     41
    Max states per location:     2161 (at node N95)
  Number of reached functions:   54 (61%)
  Number of partitions:          37566
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.807s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.536s
  Time for CFA construction:      2.387s
    Time for parsing file(s):     0.723s
    Time for AST to CFA:          0.818s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.529s
      Time for var class.:        0.246s
Time for Analysis:              236.222s
CPU time for analysis:          236.170s
Time for analyzing result:        0.036s
Total time for CPAchecker:      240.033s
Total CPU time for CPAchecker:  239.980s
Time for statistics:              0.464s

Time for Garbage Collector:      13.176s (in 1515 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                161MB (   154 MiB) max;     87MB (    83 MiB) avg;    180MB (   172 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           213MB (   203 MiB) max;    141MB (   134 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8127MB (  7750 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
