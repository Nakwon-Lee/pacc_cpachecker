scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9mx394vo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2945579 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2615745 (89%)
  Because of loop head:            328619 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1215 (0%)
  Times precision was empty:       156337 (5%)
  Times precision was {false}:     5684 (0%)
  Times result was cached:         2768109 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15449 (1%)
  Times result was 'false':        11126 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2739285
  BDD entailment checks:           465153
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          192
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         11317067
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 535.52
Number of irrelevant predicates:          5813032 (51%)
Number of preds handled by boolean abs:   35786 (0%)
  Total number of models for allsat:      16724
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                171.913s
  Time for path formula creation:      167.760s
Time for strengthen operator:           11.218s
Time for prec operator:                386.705s
  Time for abstraction:                362.201s (Max:     1.614s, Count: 2945579)
    Boolean abstraction:                56.137s
    Solving time:                       68.286s (Max:     0.145s)
    Model enumeration time:              4.181s
    Time for BDD construction:           0.230s (Max:     0.004s)
Time for merge operator:                15.979s
Time for coverage check:                 0.722s
  Time for BDD entailment checks:        0.437s
Total time for SMT solver (w/o itp):    72.467s

Number of path formula cache hits:   16335139 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   120.105s

Total number of created targets for pointer analysis: 2401272
   Number of created targets for uf: *(struct_pi_adapter)* is 177
   Number of created targets for uf: *signed_int is 12055
   Number of created targets for uf: *(char)* is 173
   Number of created targets for uf: *char is 35463


Number of BDD nodes:                               249
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31007 (count: 742681, min: 0, max: 1286, avg: 0.04)
Time for BDD node cleanup:                             0.145s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.305s
  Time for transition matches:                        10.589s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     16489189 (count: 16489189, min: 1, max: 1, avg: 1.00) [1 x 16489189]

CPA algorithm statistics
------------------------
Number of iterations:            10316922
Max size of waitlist:            22
Average size of waitlist:        10
Number of computed successors:   11926699
Max successors for one state:    2
Number of times merged:          1137066
Number of times stopped:         1595379
Number of times breaked:         1215

Total time for CPA algorithm:       782.100s (Max:    17.941s)
  Time for choose from waitlist:      2.654s
  Time for precision adjustment:    435.149s
  Time for transfer relation:       281.089s
  Time for merge operator:           24.833s
  Time for stop operator:             9.618s
  Time for adding to reached set:     9.531s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1215
Avg. length of target path (in blocks):               81450 (count: 1215, min: 7, max: 167, avg: 67.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.309s
  Counterexample analysis:                            39.701s (Max:     0.153s, Calls: 1215)
    Refinement sat check:                             28.173s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.040s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.262s
  Precision update:                                    0.500s
  ARG update:                                         18.321s

Length of refined path (in blocks):                   79786 (count: 1215, min: 4, max: 159, avg: 65.67)
Number of affected states:                            61300 (count: 1215, min: 0, max: 158, avg: 50.45)
Length (states) of path with itp 'true':              17271 (count: 1215, min: 0, max: 96, avg: 14.21)
Length (states) of path with itp non-trivial itp:     61300 (count: 1215, min: 0, max: 158, avg: 50.45)
Length (states) of path with itp 'false':              1215 (count: 1215, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1215, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           60104 (count: 1215, min: 0, max: 157, avg: 49.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1215
Number of successful refinements:     1215
Number of failed refinements:         0
Max. size of reached set before ref.: 126695
Max. size of reached set after ref.:  54155
Avg. size of reached set before ref.: 34723.45
Avg. size of reached set after ref.:  26259.25

Total time for CEGAR algorithm:     896.570s
Time for refinements:                91.012s
Average time for refinement:          0.074s
Max time for refinement:              0.473s

Code Coverage
-----------------------------
  Function coverage:      0.602
  Visited lines:          1491
  Total lines:            1760
  Line coverage:          0.847
  Visited conditions:     284
  Total conditions:       394
  Condition coverage:     0.721

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             36186
  Number of reached locations:   860 (37%)
    Avg states per location:     42
    Max states per location:     2092 (at node N95)
  Number of reached functions:   53 (60%)
  Number of partitions:          36183
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1462 (before line 4543), Function main called from node N1373, stack depth 1 [2a3a299], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.761s
  Time for loading CPAs:          0.782s
  Time for loading parser:        0.540s
  Time for CFA construction:      2.328s
    Time for parsing file(s):     0.641s
    Time for AST to CFA:          0.837s
    Time for CFA sanity check:    0.140s
    Time for post-processing:     0.534s
      Time for var class.:        0.236s
Time for Analysis:              896.570s
CPU time for analysis:          896.540s
Total time for CPAchecker:      900.334s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.496s

Time for Garbage Collector:      70.040s (in 668 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1982MB (  1890 MiB) max;   1256MB (  1198 MiB) avg;   2087MB (  1990 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2492MB (  2377 MiB) max;   2006MB (  1913 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8764MB (  8358 MiB) max;   8427MB (  8036 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
