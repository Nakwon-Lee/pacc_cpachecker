scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ozztutos/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            79177 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  70690 (89%)
  Because of loop head:            8141 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         346 (0%)
  Times precision was empty:       29900 (38%)
  Times precision was {false}:     195 (0%)
  Times result was cached:         48678 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      404 (1%)
  Times result was 'false':        1048 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         55331
  BDD entailment checks:           11669
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          7
Number of abstraction locations:          88
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         55793
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 93.14
Number of irrelevant predicates:          14216 (25%)
Number of preds handled by boolean abs:   747 (1%)
  Total number of models for allsat:      400
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  3.437s
  Time for path formula creation:        3.240s
Time for strengthen operator:            0.270s
Time for prec operator:                  5.977s
  Time for abstraction:                  5.216s (Max:     0.056s, Count: 79177)
    Boolean abstraction:                 0.467s
    Solving time:                        0.503s (Max:     0.032s)
    Model enumeration time:              0.041s
    Time for BDD construction:           0.040s (Max:     0.010s)
Time for merge operator:                 0.286s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.544s

Number of path formula cache hits:   488311 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.272s

Total number of created targets for pointer analysis: 8433
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 319
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 2073


Number of BDD nodes:                               250
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         981 (count: 45066, min: 0, max: 120, avg: 0.02)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.753s
  Time for transition matches:                         0.368s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                       408210 (count: 408210, min: 1, max: 1, avg: 1.00) [1 x 408210]

CPA algorithm statistics
------------------------
Number of iterations:            256176
Max size of waitlist:            43
Average size of waitlist:        23
Number of computed successors:   291338
Max successors for one state:    2
Number of times merged:          21831
Number of times stopped:         32202
Number of times breaked:         346

Total time for CPA algorithm:        17.362s (Max:     1.123s)
  Time for choose from waitlist:      0.175s
  Time for precision adjustment:      7.455s
  Time for transfer relation:         7.377s
  Time for merge operator:            0.605s
  Time for stop operator:             0.428s
  Time for adding to reached set:     0.415s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   346
Avg. length of target path (in blocks):               17498 (count: 346, min: 7, max: 69, avg: 50.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.885s
  Counterexample analysis:                             5.804s (Max:     0.053s, Calls: 346)
    Refinement sat check:                              4.226s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.194s
  ARG update:                                          0.625s

Length of refined path (in blocks):                   16922 (count: 345, min: 4, max: 68, avg: 49.05)
Number of affected states:                            11178 (count: 345, min: 0, max: 52, avg: 32.40)
Length (states) of path with itp 'true':               5399 (count: 345, min: 0, max: 32, avg: 15.65)
Length (states) of path with itp non-trivial itp:     11178 (count: 345, min: 0, max: 52, avg: 32.40)
Length (states) of path with itp 'false':               345 (count: 345, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 345, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10866 (count: 345, min: 0, max: 51, avg: 31.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                346
Number of successful refinements:     345
Number of failed refinements:         0
Max. size of reached set before ref.: 7271
Max. size of reached set after ref.:  7049
Avg. size of reached set before ref.: 4302.75
Avg. size of reached set after ref.:  3567.14

Total time for CEGAR algorithm:      26.503s
Time for refinements:                 8.286s
Average time for refinement:          0.023s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.477
  Visited lines:          1074
  Total lines:            1760
  Line coverage:          0.610
  Visited conditions:     156
  Total conditions:       394
  Condition coverage:     0.396

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             2382
  Number of reached locations:   512 (22%)
    Avg states per location:     4
    Max states per location:     66 (at node N101)
  Number of reached functions:   42 (48%)
  Number of partitions:          2371
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N773 (before line 3789), Function pt_detect called from node N1274, stack depth 3 [54d6209], stack [main, pt_init, pt_detect]])
  Number of target states:       1
  Size of final wait list        39

Time for analysis setup:          3.807s
  Time for loading CPAs:          0.734s
  Time for loading parser:        0.534s
  Time for CFA construction:      2.452s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.885s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.635s
      Time for var class.:        0.321s
Time for Analysis:               26.503s
CPU time for analysis:           26.510s
Total time for CPAchecker:       30.314s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.112s

Time for Garbage Collector:       1.075s (in 127 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                119MB (   114 MiB) max;     62MB (    60 MiB) avg;    125MB (   119 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
