scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ib_yl8eh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            365353 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  316457 (87%)
  Because of loop head:            48068 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         828 (0%)
  Times precision was empty:       7985 (2%)
  Times precision was {false}:     869 (0%)
  Times result was cached:         350431 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6068 (2%)
  Times result was 'false':        6031 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         275860
  BDD entailment checks:           58736
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          203
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         1758927
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 253.56
Number of irrelevant predicates:          218748 (12%)
Number of preds handled by boolean abs:   21410 (1%)
  Total number of models for allsat:      6567
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                 11.084s
  Time for path formula creation:       10.342s
Time for strengthen operator:            1.367s
Time for prec operator:                 78.278s
  Time for abstraction:                 75.449s (Max:     0.221s, Count: 365353)
    Boolean abstraction:                16.226s
    Solving time:                       16.316s (Max:     0.209s)
    Model enumeration time:              1.329s
    Time for BDD construction:           0.160s (Max:     0.008s)
Time for merge operator:                 0.832s
Time for coverage check:                 0.145s
  Time for BDD entailment checks:        0.105s
Total time for SMT solver (w/o itp):    17.645s

Number of path formula cache hits:   2381748 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.421s

Total number of created targets for pointer analysis: 95819
   Number of created targets for uf: *(struct_pi_adapter)* is 153
   Number of created targets for uf: *signed_int is 3218
   Number of created targets for uf: *(char)* is 57
   Number of created targets for uf: *char is 1947


Number of BDD nodes:                               319
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12321 (count: 107582, min: 0, max: 299, avg: 0.11)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.460s
  Time for transition matches:                         1.414s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      2061007 (count: 2061007, min: 1, max: 1, avg: 1.00) [1 x 2061007]

CPA algorithm statistics
------------------------
Number of iterations:            1228765
Max size of waitlist:            82
Average size of waitlist:        26
Number of computed successors:   1409505
Max successors for one state:    2
Number of times merged:          108562
Number of times stopped:         161728
Number of times breaked:         828

Total time for CPA algorithm:       117.898s (Max:     3.079s)
  Time for choose from waitlist:      0.357s
  Time for precision adjustment:     84.576s
  Time for transfer relation:        25.976s
  Time for merge operator:            1.840s
  Time for stop operator:             1.282s
  Time for adding to reached set:     1.385s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   828
Avg. length of target path (in blocks):               41486 (count: 828, min: 7, max: 194, avg: 50.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.060s
  Counterexample analysis:                            18.093s (Max:     0.186s, Calls: 828)
    Refinement sat check:                             12.859s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.231s
  Precision update:                                    0.513s
  ARG update:                                          1.874s

Length of refined path (in blocks):                   39760 (count: 828, min: 4, max: 186, avg: 48.02)
Number of affected states:                            30097 (count: 828, min: 0, max: 185, avg: 36.35)
Length (states) of path with itp 'true':               8835 (count: 828, min: 0, max: 108, avg: 10.67)
Length (states) of path with itp non-trivial itp:     30097 (count: 828, min: 0, max: 185, avg: 36.35)
Length (states) of path with itp 'false':               828 (count: 828, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 828, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           29339 (count: 828, min: 0, max: 184, avg: 35.43)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                828
Number of successful refinements:     828
Number of failed refinements:         0
Max. size of reached set before ref.: 25007
Max. size of reached set after ref.:  19767
Avg. size of reached set before ref.: 4385.70
Avg. size of reached set after ref.:  2931.37

Total time for CEGAR algorithm:     143.394s
Time for refinements:                23.988s
Average time for refinement:          0.028s
Max time for refinement:              0.237s

Code Coverage
-----------------------------
  Function coverage:      0.614
  Visited lines:          1537
  Total lines:            1760
  Line coverage:          0.873
  Visited conditions:     298
  Total conditions:       394
  Condition coverage:     0.756

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             37566
  Number of reached locations:   911 (39%)
    Avg states per location:     41
    Max states per location:     2161 (at node N95)
  Number of reached functions:   54 (61%)
  Number of partitions:          37566
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.026s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.619s
  Time for CFA construction:      2.573s
    Time for parsing file(s):     0.795s
    Time for AST to CFA:          0.906s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.564s
      Time for var class.:        0.256s
Time for Analysis:              143.395s
CPU time for analysis:          143.350s
Time for analyzing result:        0.033s
Total time for CPAchecker:      147.425s
Total CPU time for CPAchecker:  147.370s
Time for statistics:              0.490s

Time for Garbage Collector:       9.261s (in 1002 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;     77MB (    73 MiB) avg;    163MB (   155 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           185MB (   177 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8110MB (  7734 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
