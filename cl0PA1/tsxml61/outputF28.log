scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pt.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iwdw6w3c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3200: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3245: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4031: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4605: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2945: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3765071 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3344610 (89%)
  Because of loop head:            418108 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2353 (0%)
  Times precision was empty:       273196 (7%)
  Times precision was {false}:     2115 (0%)
  Times result was cached:         3471183 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18577 (0%)
  Times result was 'false':        16698 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3480964
  BDD entailment checks:           610818
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          7
Number of abstraction locations:          194
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         14543130
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 702.84
Number of irrelevant predicates:          11057970 (76%)
Number of preds handled by boolean abs:   51531 (0%)
  Total number of models for allsat:      19408
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                 59.808s
  Time for path formula creation:       55.200s
Time for strengthen operator:           12.199s
Time for prec operator:                378.361s
  Time for abstraction:                354.796s (Max:     0.928s, Count: 3765071)
    Boolean abstraction:                38.180s
    Solving time:                       39.112s (Max:     0.191s)
    Model enumeration time:              2.160s
    Time for BDD construction:           0.291s (Max:     0.029s)
Time for merge operator:                 5.902s
Time for coverage check:                 0.745s
  Time for BDD entailment checks:        0.408s
Total time for SMT solver (w/o itp):    41.272s

Number of path formula cache hits:   25543066 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    16.600s

Total number of created targets for pointer analysis: 248921
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 433
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 1255


Number of BDD nodes:                               282
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       37341 (count: 1006164, min: 0, max: 844, avg: 0.04)
Time for BDD node cleanup:                             0.188s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.956s
  Time for transition matches:                        10.447s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     20959630 (count: 20959630, min: 1, max: 1, avg: 1.00) [1 x 20959630]

CPA algorithm statistics
------------------------
Number of iterations:            13163310
Max size of waitlist:            25
Average size of waitlist:        10
Number of computed successors:   15205884
Max successors for one state:    2
Number of times merged:          1435073
Number of times stopped:         2023925
Number of times breaked:         2353

Total time for CPA algorithm:       683.403s (Max:     7.840s)
  Time for choose from waitlist:      2.639s
  Time for precision adjustment:    440.383s
  Time for transfer relation:       181.548s
  Time for merge operator:           15.131s
  Time for stop operator:            10.073s
  Time for adding to reached set:    11.706s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2353
Avg. length of target path (in blocks):              118921 (count: 2353, min: 7, max: 151, avg: 50.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  71.983s
  Counterexample analysis:                            45.711s (Max:     0.204s, Calls: 2353)
    Refinement sat check:                             33.805s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.071s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.279s
  Precision update:                                    1.291s
  ARG update:                                         23.981s

Length of refined path (in blocks):                  114416 (count: 2353, min: 4, max: 150, avg: 48.63)
Number of affected states:                            63985 (count: 2353, min: 0, max: 148, avg: 27.19)
Length (states) of path with itp 'true':              48078 (count: 2353, min: 0, max: 91, avg: 20.43)
Length (states) of path with itp non-trivial itp:     63985 (count: 2353, min: 0, max: 148, avg: 27.19)
Length (states) of path with itp 'false':              2353 (count: 2353, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2353, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           61987 (count: 2353, min: 0, max: 147, avg: 26.34)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2353
Number of successful refinements:     2353
Number of failed refinements:         0
Max. size of reached set before ref.: 64774
Max. size of reached set after ref.:  63079
Avg. size of reached set before ref.: 42196.57
Avg. size of reached set after ref.:  36614.13

Total time for CEGAR algorithm:     896.547s
Time for refinements:               150.620s
Average time for refinement:          0.064s
Max time for refinement:              1.047s

Code Coverage
-----------------------------
  Function coverage:      0.239
  Visited lines:          976
  Total lines:            1760
  Line coverage:          0.555
  Visited conditions:     112
  Total conditions:       394
  Condition coverage:     0.284

CPAchecker general statistics
-----------------------------
Number of program locations:     2330
Number of CFA edges:             2604
Number of relevant variables:    291
Number of functions:             88
Number of loops:                 17
Size of reached set:             29788
  Number of reached locations:   343 (15%)
    Avg states per location:     86
    Max states per location:     1747 (at node N95)
  Number of reached functions:   21 (24%)
  Number of partitions:          29771
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N786 (before line 3801), Function pt_detect called from node N1274, stack depth 3 [1eeb9ebc], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.791s
  Time for loading CPAs:          0.660s
  Time for loading parser:        0.597s
  Time for CFA construction:      2.412s
    Time for parsing file(s):     0.740s
    Time for AST to CFA:          0.843s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.548s
      Time for var class.:        0.251s
Time for Analysis:              896.547s
CPU time for analysis:          896.480s
Total time for CPAchecker:      900.342s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.316s

Time for Garbage Collector:      96.600s (in 3536 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                538MB (   513 MiB) max;    221MB (   211 MiB) avg;    555MB (   529 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           573MB (   547 MiB) max;    330MB (   315 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8192MB (  7813 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
