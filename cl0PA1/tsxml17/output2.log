scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sw6fo65l/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            24046 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21223 (88%)
  Because of loop head:            2592 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         231 (1%)
  Times precision was empty:       2633 (11%)
  Times precision was {false}:     340 (1%)
  Times result was cached:         17158 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3915 (16%)
  Times result was 'false':        2940 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         21690
  BDD entailment checks:           8110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          41
Number of abstraction locations:          96
Max number of predicates per location:    12
Avg number of predicates per location:    5
Total predicates per abstraction:         113854
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 26.76
Number of irrelevant predicates:          18790 (17%)
Number of preds handled by boolean abs:   18801 (17%)
  Total number of models for allsat:      5189
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.33

Time for post operator:                  2.845s
  Time for path formula creation:        2.784s
Time for strengthen operator:            0.156s
Time for prec operator:                 14.933s
  Time for abstraction:                 14.432s (Max:     0.035s, Count: 24046)
    Boolean abstraction:                 4.618s
    Solving time:                        3.401s (Max:     0.017s)
    Model enumeration time:              0.404s
    Time for BDD construction:           0.247s (Max:     0.012s)
Time for merge operator:                 0.309s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     3.805s

Number of path formula cache hits:   124154 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.510s

Total number of created targets for pointer analysis: 626
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_input_dev)* is 64
   Number of created targets for uf: *enum_uinput_state is 10
   Number of created targets for uf: *(struct_uinput_request)* is 385


Number of BDD nodes:                               4721
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       14194 (count: 39170, min: 0, max: 845, avg: 0.36)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.433s
Automaton transfers with branching:                0
Automaton transfer successors:                       135673 (count: 135673, min: 1, max: 1, avg: 1.00) [1 x 135673]

CPA algorithm statistics
------------------------
Number of iterations:            94827
Max size of waitlist:            90
Average size of waitlist:        20
Number of computed successors:   111379
Max successors for one state:    2
Number of times merged:          6790
Number of times stopped:         9934
Number of times breaked:         231

Total time for CPA algorithm:        21.986s (Max:     0.725s)
  Time for choose from waitlist:      0.080s
  Time for precision adjustment:     15.656s
  Time for transfer relation:         4.956s
  Time for merge operator:            0.476s
  Time for stop operator:             0.219s
  Time for adding to reached set:     0.162s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   231
Avg. length of target path (in blocks):               11059 (count: 231, min: 7, max: 164, avg: 47.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.964s
  Counterexample analysis:                             3.356s (Max:     0.134s, Calls: 231)
    Refinement sat check:                              1.762s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.166s
  ARG update:                                          0.245s

Length of refined path (in blocks):                    6954 (count: 230, min: 6, max: 144, avg: 30.23)
Number of affected states:                             3459 (count: 230, min: 1, max: 142, avg: 15.04)
Length (states) of path with itp 'true':               3265 (count: 230, min: 0, max: 67, avg: 14.20)
Length (states) of path with itp non-trivial itp:      3459 (count: 230, min: 1, max: 142, avg: 15.04)
Length (states) of path with itp 'false':               230 (count: 230, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          92 (count: 230, min: 0, max: 6, avg: 0.40)
Equal non-trivial interpolants along paths:            3137 (count: 230, min: 0, max: 141, avg: 13.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                231
Number of successful refinements:     230
Number of failed refinements:         0
Max. size of reached set before ref.: 1979
Max. size of reached set after ref.:  1059
Avg. size of reached set before ref.: 619.94
Avg. size of reached set after ref.:  194.34

Total time for CEGAR algorithm:      26.348s
Time for refinements:                 4.294s
Average time for refinement:          0.018s
Max time for refinement:              0.139s

Code Coverage
-----------------------------
  Function coverage:      0.404
  Visited lines:          1060
  Total lines:            1738
  Line coverage:          0.610
  Visited conditions:     192
  Total conditions:       418
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             1979
  Number of reached locations:   513 (21%)
    Avg states per location:     3
    Max states per location:     30 (at node N1)
  Number of reached functions:   44 (40%)
  Number of partitions:          1948
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       1
  Size of final wait list        74

Time for analysis setup:          3.967s
  Time for loading CPAs:          0.767s
  Time for loading parser:        0.547s
  Time for CFA construction:      2.526s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          0.917s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.611s
      Time for var class.:        0.283s
Time for Analysis:               26.348s
CPU time for analysis:           26.340s
Total time for CPAchecker:       30.318s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.092s

Time for Garbage Collector:       0.595s (in 79 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     47MB (    45 MiB) avg;     77MB (    73 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
