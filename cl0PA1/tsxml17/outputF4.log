scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hkfiryns/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2269360 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2223982 (98%)
  Because of loop head:            43786 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1592 (0%)
  Times precision was empty:       71783 (3%)
  Times precision was {false}:     1280 (0%)
  Times result was cached:         2156760 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39537 (2%)
  Times result was 'false':        169097 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         1582485
  BDD entailment checks:           547899
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          95
Number of abstraction locations:          179
Max number of predicates per location:    32
Avg number of predicates per location:    7
Total predicates per abstraction:         13369908
Max number of predicates per abstraction: 32
Avg number of predicates per abstraction: 327.56
Number of irrelevant predicates:          6517559 (49%)
Number of preds handled by boolean abs:   270383 (2%)
  Total number of models for allsat:      718891
  Max number of models for allsat:        4704
  Avg number of models for allsat:        18.18

Time for post operator:                 37.145s
  Time for path formula creation:       33.938s
Time for strengthen operator:            6.780s
Time for prec operator:                613.785s
  Time for abstraction:                597.718s (Max:     1.512s, Count: 2269360)
    Boolean abstraction:               143.011s
    Solving time:                       55.059s (Max:     0.024s)
    Model enumeration time:             65.857s
    Time for BDD construction:          16.617s (Max:     0.167s)
Time for merge operator:                 2.727s
Time for coverage check:                 0.721s
  Time for BDD entailment checks:        0.507s
Total time for SMT solver (w/o itp):   120.916s

Number of path formula cache hits:   13205071 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    18.872s

Total number of created targets for pointer analysis: 21031
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *unsigned_char is 1271
   Number of created targets for uf: *(struct_input_dev)* is 300
   Number of created targets for uf: *enum_uinput_state is 880
   Number of created targets for uf: *(struct_uinput_request)* is 12753
   Number of created targets for uf: *unsigned_int is 593


Number of BDD nodes:                               237609
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      141927 (count: 899012, min: 0, max: 1768, avg: 0.16)
Time for BDD node cleanup:                             0.166s
Time for BDD garbage collection:                       0.139s (in 18 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.699s
  Time for transition matches:                         6.609s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     11524179 (count: 11524179, min: 1, max: 1, avg: 1.00) [1 x 11524179]

CPA algorithm statistics
------------------------
Number of iterations:            8523641
Max size of waitlist:            67
Average size of waitlist:        33
Number of computed successors:   9602776
Max successors for one state:    2
Number of times merged:          517293
Number of times stopped:         902319
Number of times breaked:         1592

Total time for CPA algorithm:       795.271s (Max:    25.159s)
  Time for choose from waitlist:      2.199s
  Time for precision adjustment:    650.829s
  Time for transfer relation:       105.801s
  Time for merge operator:            7.202s
  Time for stop operator:             6.734s
  Time for adding to reached set:     7.894s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1592
Avg. length of target path (in blocks):              122557 (count: 1592, min: 7, max: 140, avg: 76.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  52.356s
  Counterexample analysis:                            36.925s (Max:     0.095s, Calls: 1592)
    Refinement sat check:                             16.084s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.064s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.301s
  Precision update:                                    0.940s
  ARG update:                                         13.482s

Length of refined path (in blocks):                  103605 (count: 1592, min: 6, max: 139, avg: 65.08)
Number of affected states:                            35401 (count: 1592, min: 1, max: 76, avg: 22.24)
Length (states) of path with itp 'true':              66612 (count: 1592, min: 0, max: 116, avg: 41.84)
Length (states) of path with itp non-trivial itp:     35401 (count: 1592, min: 1, max: 76, avg: 22.24)
Length (states) of path with itp 'false':              1592 (count: 1592, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        3810 (count: 1592, min: 0, max: 18, avg: 2.39)
Equal non-trivial interpolants along paths:           29999 (count: 1592, min: 0, max: 62, avg: 18.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1592
Number of successful refinements:     1592
Number of failed refinements:         0
Max. size of reached set before ref.: 50133
Max. size of reached set after ref.:  45690
Avg. size of reached set before ref.: 23119.13
Avg. size of reached set after ref.:  17789.93

Total time for CEGAR algorithm:     896.633s
Time for refinements:                80.897s
Average time for refinement:          0.050s
Max time for refinement:              0.824s

Code Coverage
-----------------------------
  Function coverage:      0.578
  Visited lines:          1369
  Total lines:            1738
  Line coverage:          0.788
  Visited conditions:     310
  Total conditions:       418
  Condition coverage:     0.742

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             47275
  Number of reached locations:   863 (36%)
    Avg states per location:     54
    Max states per location:     1245 (at node N1690)
  Number of reached functions:   63 (58%)
  Number of partitions:          46956
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N1563 (before line 4913), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0
  Size of final wait list        40

Time for analysis setup:          3.699s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.441s
  Time for CFA construction:      2.383s
    Time for parsing file(s):     0.685s
    Time for AST to CFA:          0.834s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.508s
      Time for var class.:        0.247s
Time for Analysis:              896.633s
CPU time for analysis:          896.510s
Total time for CPAchecker:      900.336s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.554s

Time for Garbage Collector:      63.983s (in 2686 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                577MB (   550 MiB) max;    277MB (   264 MiB) avg;    602MB (   574 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           637MB (   608 MiB) max;    404MB (   385 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8969MB (  8554 MiB) max;   8300MB (  7915 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
