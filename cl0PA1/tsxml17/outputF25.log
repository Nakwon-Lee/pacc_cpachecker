scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uusksv43/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1000619 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  975772 (98%)
  Because of loop head:            23285 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1562 (0%)
  Times precision was empty:       123250 (12%)
  Times precision was {false}:     552 (0%)
  Times result was cached:         862141 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14676 (1%)
  Times result was 'false':        67580 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         637251
  BDD entailment checks:           201987
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          46
Number of abstraction locations:          201
Max number of predicates per location:    14
Avg number of predicates per location:    5
Total predicates per abstraction:         3097879
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 203.43
Number of irrelevant predicates:          727968 (23%)
Number of preds handled by boolean abs:   52437 (2%)
  Total number of models for allsat:      24504
  Max number of models for allsat:        54
  Avg number of models for allsat:        1.67

Time for post operator:                 20.238s
  Time for path formula creation:       18.784s
Time for strengthen operator:            3.323s
Time for prec operator:                115.011s
  Time for abstraction:                108.668s (Max:     0.742s, Count: 1000619)
    Boolean abstraction:                10.502s
    Solving time:                        8.140s (Max:     0.016s)
    Model enumeration time:              1.289s
    Time for BDD construction:           0.392s (Max:     0.012s)
Time for merge operator:                 1.783s
Time for coverage check:                 0.254s
  Time for BDD entailment checks:        0.167s
Total time for SMT solver (w/o itp):     9.429s

Number of path formula cache hits:   5541819 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.466s

Total number of created targets for pointer analysis: 12620
   Number of created targets for uf: *(char)* is 11
   Number of created targets for uf: *unsigned_char is 461
   Number of created targets for uf: *(struct_input_dev)* is 151
   Number of created targets for uf: *enum_uinput_state is 455
   Number of created targets for uf: *(struct_uinput_request)* is 7921
   Number of created targets for uf: *unsigned_int is 282


Number of BDD nodes:                               14103
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       35034 (count: 419689, min: 0, max: 1013, avg: 0.08)
Time for BDD node cleanup:                             0.069s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.185s
  Time for transition matches:                         2.909s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      5042002 (count: 5042002, min: 1, max: 1, avg: 1.00) [1 x 5042002]

CPA algorithm statistics
------------------------
Number of iterations:            3772118
Max size of waitlist:            36
Average size of waitlist:        19
Number of computed successors:   4237035
Max successors for one state:    2
Number of times merged:          217632
Number of times stopped:         383984
Number of times breaked:         1562

Total time for CPA algorithm:       201.865s (Max:     2.643s)
  Time for choose from waitlist:      1.101s
  Time for precision adjustment:    132.547s
  Time for transfer relation:        51.880s
  Time for merge operator:            3.658s
  Time for stop operator:             3.102s
  Time for adding to reached set:     3.369s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1562
Avg. length of target path (in blocks):               46452 (count: 1562, min: 7, max: 108, avg: 29.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  18.330s
  Counterexample analysis:                            12.092s (Max:     0.041s, Calls: 1562)
    Refinement sat check:                              6.240s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.035s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.249s
  Precision update:                                    0.502s
  ARG update:                                          5.107s

Length of refined path (in blocks):                   43215 (count: 1562, min: 6, max: 92, avg: 27.67)
Number of affected states:                            25095 (count: 1562, min: 1, max: 90, avg: 16.07)
Length (states) of path with itp 'true':              16558 (count: 1562, min: 0, max: 43, avg: 10.60)
Length (states) of path with itp non-trivial itp:     25095 (count: 1562, min: 1, max: 90, avg: 16.07)
Length (states) of path with itp 'false':              1562 (count: 1562, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        2621 (count: 1562, min: 0, max: 11, avg: 1.68)
Equal non-trivial interpolants along paths:           20912 (count: 1562, min: 0, max: 89, avg: 13.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1562
Number of successful refinements:     1562
Number of failed refinements:         0
Max. size of reached set before ref.: 25977
Max. size of reached set after ref.:  15286
Avg. size of reached set before ref.: 4609.95
Avg. size of reached set after ref.:  2203.12

Total time for CEGAR algorithm:     226.749s
Time for refinements:                22.761s
Average time for refinement:          0.014s
Max time for refinement:              0.100s

Code Coverage
-----------------------------
  Function coverage:      0.642
  Visited lines:          1444
  Total lines:            1738
  Line coverage:          0.831
  Visited conditions:     326
  Total conditions:       418
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             26011
  Number of reached locations:   937 (39%)
    Avg states per location:     27
    Max states per location:     666 (at node N1690)
  Number of reached functions:   70 (64%)
  Number of partitions:          25861
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.902s
  Time for loading CPAs:          0.761s
  Time for loading parser:        0.455s
  Time for CFA construction:      2.542s
    Time for parsing file(s):     0.704s
    Time for AST to CFA:          0.935s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.616s
      Time for var class.:        0.290s
Time for Analysis:              226.749s
CPU time for analysis:          226.710s
Time for analyzing result:        0.021s
Total time for CPAchecker:      230.654s
Total CPU time for CPAchecker:  230.600s
Time for statistics:              0.370s

Time for Garbage Collector:      17.740s (in 1163 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                382MB (   365 MiB) max;    159MB (   152 MiB) avg;    397MB (   378 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           478MB (   456 MiB) max;    261MB (   249 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8222MB (  7842 MiB) max;   8115MB (  7739 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
