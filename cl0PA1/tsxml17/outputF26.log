scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vjh48rk3/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1308267 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1258051 (96%)
  Because of loop head:            49500 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         716 (0%)
  Times precision was empty:       7664 (1%)
  Times precision was {false}:     2035 (0%)
  Times result was cached:         1213666 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      84902 (6%)
  Times result was 'false':        155343 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         1243619
  BDD entailment checks:           680517
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          87
Number of abstraction locations:          132
Max number of predicates per location:    26
Avg number of predicates per location:    11
Total predicates per abstraction:         12922658
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 148.64
Number of irrelevant predicates:          3021605 (23%)
Number of preds handled by boolean abs:   744817 (6%)
  Total number of models for allsat:      869572
  Max number of models for allsat:        1920
  Avg number of models for allsat:        10.24

Time for post operator:                 90.522s
  Time for path formula creation:       88.522s
Time for strengthen operator:            4.800s
Time for prec operator:                663.828s
  Time for abstraction:                650.288s (Max:     3.126s, Count: 1308267)
    Boolean abstraction:               207.014s
    Solving time:                      106.947s (Max:     0.081s)
    Model enumeration time:             69.534s
    Time for BDD construction:          20.329s (Max:     0.133s)
Time for merge operator:                 6.647s
Time for coverage check:                 0.906s
  Time for BDD entailment checks:        0.755s
Total time for SMT solver (w/o itp):   176.481s

Number of path formula cache hits:   4440705 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    73.980s

Total number of created targets for pointer analysis: 361771
   Number of created targets for uf: *(struct_input_dev)* is 6894
   Number of created targets for uf: *enum_uinput_state is 1841
   Number of created targets for uf: *(struct_uinput_request)* is 315537
   Number of created targets for uf: *unsigned_int is 6328


Number of BDD nodes:                               208026
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      244515 (count: 1248058, min: 0, max: 3114, avg: 0.20)
Time for BDD node cleanup:                             0.242s
Time for BDD garbage collection:                       0.103s (in 16 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.962s
  Time for transition matches:                         4.875s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      6692107 (count: 6692107, min: 1, max: 1, avg: 1.00) [1 x 6692107]

CPA algorithm statistics
------------------------
Number of iterations:            4979049
Max size of waitlist:            78
Average size of waitlist:        33
Number of computed successors:   5632345
Max successors for one state:    2
Number of times merged:          281551
Number of times stopped:         486691
Number of times breaked:         716

Total time for CPA algorithm:       862.663s (Max:    12.311s)
  Time for choose from waitlist:      1.778s
  Time for precision adjustment:    689.399s
  Time for transfer relation:       138.951s
  Time for merge operator:           10.214s
  Time for stop operator:             5.666s
  Time for adding to reached set:     6.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   716
Avg. length of target path (in blocks):               58708 (count: 716, min: 7, max: 182, avg: 81.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.059s
  Counterexample analysis:                            17.821s (Max:     0.102s, Calls: 716)
    Refinement sat check:                              7.830s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.150s
  Precision update:                                    0.578s
  ARG update:                                          7.047s

Length of refined path (in blocks):                   43121 (count: 715, min: 6, max: 169, avg: 60.31)
Number of affected states:                            19084 (count: 715, min: 1, max: 108, avg: 26.69)
Length (states) of path with itp 'true':              23322 (count: 715, min: 0, max: 119, avg: 32.62)
Length (states) of path with itp non-trivial itp:     19084 (count: 715, min: 1, max: 108, avg: 26.69)
Length (states) of path with itp 'false':               715 (count: 715, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1459 (count: 715, min: 0, max: 18, avg: 2.04)
Equal non-trivial interpolants along paths:           16910 (count: 715, min: 0, max: 103, avg: 23.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                716
Number of successful refinements:     715
Number of failed refinements:         0
Max. size of reached set before ref.: 29070
Max. size of reached set after ref.:  15419
Avg. size of reached set before ref.: 11852.46
Avg. size of reached set after ref.:  4889.58

Total time for CEGAR algorithm:     896.513s
Time for refinements:                31.863s
Average time for refinement:          0.044s
Max time for refinement:              0.247s

Code Coverage
-----------------------------
  Function coverage:      0.477
  Visited lines:          1224
  Total lines:            1738
  Line coverage:          0.704
  Visited conditions:     244
  Total conditions:       418
  Condition coverage:     0.584

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             17317
  Number of reached locations:   677 (28%)
    Avg states per location:     25
    Max states per location:     363 (at node N1690)
  Number of reached functions:   52 (48%)
  Number of partitions:          17022
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N508 (before line 3777), Function uinput_flush_requests called from node N586, stack depth 4 [7449ef3c], stack [main, uinput_release, uinput_destroy_device, uinput_flush_requests]])
  Number of target states:       1
  Size of final wait list        27

Time for analysis setup:          3.781s
  Time for loading CPAs:          0.634s
  Time for loading parser:        0.524s
  Time for CFA construction:      2.552s
    Time for parsing file(s):     0.728s
    Time for AST to CFA:          0.899s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.618s
      Time for var class.:        0.288s
Time for Analysis:              896.513s
CPU time for analysis:          896.380s
Total time for CPAchecker:      900.298s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.253s

Time for Garbage Collector:      55.025s (in 1140 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1398MB (  1333 MiB) max;    694MB (   662 MiB) avg;   1417MB (  1352 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1561MB (  1489 MiB) max;   1037MB (   989 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:  10922MB ( 10416 MiB) max;   9405MB (  8969 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
