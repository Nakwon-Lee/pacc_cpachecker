scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--input--misc--uinput.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_03ajr9j2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3102: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3105: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3108: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3177: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3183: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6226;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4975: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4999: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5023: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5047: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5071: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3344: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3344: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memdup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrndup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_alloc_absinfo to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_mt_init_slots to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strndup_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3300: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_ff_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1175112 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1081498 (92%)
  Because of loop head:            91196 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2418 (0%)
  Times precision was empty:       42778 (4%)
  Times precision was {false}:     419 (0%)
  Times result was cached:         1127242 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4673 (0%)
  Times result was 'false':        98168 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1043904
  BDD entailment checks:           432606
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       24
Number of predicates discovered:          33
Number of abstraction locations:          201
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         5777755
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 1134.67
Number of irrelevant predicates:          982656 (17%)
Number of preds handled by boolean abs:   16334 (0%)
  Total number of models for allsat:      5927
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.27

Time for post operator:                 11.510s
  Time for path formula creation:       10.136s
Time for strengthen operator:            3.801s
Time for prec operator:                197.751s
  Time for abstraction:                190.350s (Max:     0.032s, Count: 1175112)
    Boolean abstraction:                 3.766s
    Solving time:                        2.978s (Max:     0.017s)
    Model enumeration time:              0.380s
    Time for BDD construction:           0.200s (Max:     0.012s)
Time for merge operator:                 0.878s
Time for coverage check:                 0.479s
  Time for BDD entailment checks:        0.375s
Total time for SMT solver (w/o itp):     3.358s

Number of path formula cache hits:   7544577 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.299s

Total number of created targets for pointer analysis: 2038
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *unsigned_char is 23
   Number of created targets for uf: *(struct_input_dev)* is 15
   Number of created targets for uf: *enum_uinput_state is 72
   Number of created targets for uf: *(struct_uinput_request)* is 1505
   Number of created targets for uf: *unsigned_int is 25


Number of BDD nodes:                               2784
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12316 (count: 521091, min: 0, max: 434, avg: 0.02)
Time for BDD node cleanup:                             0.098s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.004s
  Time for transition matches:                         3.575s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.024s
Automaton transfers with branching:                0
Automaton transfer successors:                      6242988 (count: 6242988, min: 1, max: 1, avg: 1.00) [1 x 6242988]

CPA algorithm statistics
------------------------
Number of iterations:            4352189
Max size of waitlist:            32
Average size of waitlist:        12
Number of computed successors:   4985334
Max successors for one state:    2
Number of times merged:          305649
Number of times stopped:         501470
Number of times breaked:         2418

Total time for CPA algorithm:       279.349s (Max:     3.634s)
  Time for choose from waitlist:      1.140s
  Time for precision adjustment:    213.990s
  Time for transfer relation:        46.515s
  Time for merge operator:            3.606s
  Time for stop operator:             3.737s
  Time for adding to reached set:     3.642s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2418
Avg. length of target path (in blocks):              150262 (count: 2418, min: 7, max: 86, avg: 62.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  65.758s
  Counterexample analysis:                            57.930s (Max:     0.093s, Calls: 2418)
    Refinement sat check:                             17.008s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.078s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.526s
  Precision update:                                    1.248s
  ARG update:                                          5.197s

Length of refined path (in blocks):                  123588 (count: 2418, min: 6, max: 84, avg: 51.11)
Number of affected states:                            94890 (count: 2418, min: 1, max: 82, avg: 39.24)
Length (states) of path with itp 'true':              26280 (count: 2418, min: 0, max: 59, avg: 10.87)
Length (states) of path with itp non-trivial itp:     94890 (count: 2418, min: 1, max: 82, avg: 39.24)
Length (states) of path with itp 'false':              2418 (count: 2418, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        8695 (count: 2418, min: 0, max: 6, avg: 3.60)
Equal non-trivial interpolants along paths:           83777 (count: 2418, min: 0, max: 81, avg: 34.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2418
Number of successful refinements:     2418
Number of failed refinements:         0
Max. size of reached set before ref.: 8426
Max. size of reached set after ref.:  8163
Avg. size of reached set before ref.: 2097.59
Avg. size of reached set after ref.:  295.99

Total time for CEGAR algorithm:     348.712s
Time for refinements:                68.846s
Average time for refinement:          0.028s
Max time for refinement:              0.103s

Code Coverage
-----------------------------
  Function coverage:      0.642
  Visited lines:          1444
  Total lines:            1738
  Line coverage:          0.831
  Visited conditions:     326
  Total conditions:       418
  Condition coverage:     0.780

CPAchecker general statistics
-----------------------------
Number of program locations:     2425
Number of CFA edges:             2701
Number of relevant variables:    375
Number of functions:             109
Number of loops:                 9
Size of reached set:             29416
  Number of reached locations:   937 (39%)
    Avg states per location:     31
    Max states per location:     801 (at node N1690)
  Number of reached functions:   70 (64%)
  Number of partitions:          29292
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1569 (before line 4919), Function main called from node N1461, stack depth 1 [7bfc3126], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.254s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.450s
  Time for CFA construction:      2.076s
    Time for parsing file(s):     0.560s
    Time for AST to CFA:          0.756s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.475s
      Time for var class.:        0.229s
Time for Analysis:              348.713s
CPU time for analysis:          348.670s
Time for analyzing result:        0.022s
Total time for CPAchecker:      351.970s
Total CPU time for CPAchecker:  351.920s
Time for statistics:              0.381s

Time for Garbage Collector:      13.431s (in 3322 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     68MB (    65 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8017MB (  7645 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
