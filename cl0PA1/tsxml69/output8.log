scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y0yi57rp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6854: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1490 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1351 (91%)
  Because of loop head:            130 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (1%)
  Times precision was empty:       1248 (84%)
  Times precision was {false}:     29 (2%)
  Times result was cached:         160 (11%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      53 (4%)
  Times result was 'false':        42 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         785
  BDD entailment checks:           163
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          4
Number of abstraction locations:          10
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         522
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 6.37
Number of irrelevant predicates:          306 (59%)
Number of preds handled by boolean abs:   99 (19%)
  Total number of models for allsat:      53
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.662s
  Time for path formula creation:        0.651s
Time for strengthen operator:            0.015s
Time for prec operator:                  0.513s
  Time for abstraction:                  0.434s (Max:     0.018s, Count: 1490)
    Boolean abstraction:                 0.066s
    Solving time:                        0.040s (Max:     0.005s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.012s (Max:     0.007s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     0.043s

Number of path formula cache hits:   8887 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.606s

Total number of created targets for pointer analysis: 17
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         100 (count: 1894, min: 0, max: 52, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.118s
Automaton transfers with branching:                0
Automaton transfer successors:                        10312 (count: 10312, min: 1, max: 1, avg: 1.00) [1 x 10312]

CPA algorithm statistics
------------------------
Number of iterations:            5135
Max size of waitlist:            71
Average size of waitlist:        33
Number of computed successors:   5988
Max successors for one state:    2
Number of times merged:          311
Number of times stopped:         400
Number of times breaked:         9

Total time for CPA algorithm:         2.250s (Max:     0.547s)
  Time for choose from waitlist:      0.015s
  Time for precision adjustment:      0.691s
  Time for transfer relation:         1.197s
  Time for merge operator:            0.099s
  Time for stop operator:             0.059s
  Time for adding to reached set:     0.117s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  75 (count: 9, min: 6, max: 11, avg: 8.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.117s
  Counterexample analysis:                             0.066s (Max:     0.017s, Calls: 9)
    Refinement sat check:                              0.031s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.001s
  ARG update:                                          0.041s

Length of refined path (in blocks):                      66 (count: 9, min: 5, max: 10, avg: 7.33)
Number of affected states:                               48 (count: 9, min: 3, max: 8, avg: 5.33)
Length (states) of path with itp 'true':                  9 (count: 9, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        48 (count: 9, min: 3, max: 8, avg: 5.33)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              39 (count: 9, min: 2, max: 7, avg: 4.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 1014
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 518.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       2.404s
Time for refinements:                 0.154s
Average time for refinement:          0.017s
Max time for refinement:              0.050s

Code Coverage
-----------------------------
  Function coverage:      0.306
  Visited lines:          1268
  Total lines:            3293
  Line coverage:          0.385
  Visited conditions:     196
  Total conditions:       888
  Condition coverage:     0.221

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             939
  Number of reached locations:   568 (12%)
    Avg states per location:     1
    Max states per location:     23 (at node N148)
  Number of reached functions:   53 (31%)
  Number of partitions:          936
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3926 (before line 7719), Function main called from node N3793, stack depth 1 [1f77b5cc], stack [main]])
  Number of target states:       0
  Size of final wait list        54

Time for analysis setup:          4.233s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.519s
  Time for CFA construction:      2.899s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.958s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.783s
      Time for var class.:        0.386s
Time for Analysis:                2.404s
CPU time for analysis:            2.400s
Total time for CPAchecker:        6.641s
Total CPU time for CPAchecker:    6.630s
Time for statistics:              0.097s

Time for Garbage Collector:       0.221s (in 11 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     36MB (    35 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8016MB (  7645 MiB) max;   7984MB (  7614 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
