scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h1d1nqpr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5530: Unsupported feature (recursion): packet_write(r8a66597, __CPAchecker_TMP_2); (line was originally packet_write(r8a66597, (int )td->pipenum);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            5838 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5560 (95%)
  Because of loop head:            272 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (0%)
  Times precision was empty:       5641 (97%)
  Times precision was {false}:     37 (1%)
  Times result was cached:         103 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57 (1%)
  Times result was 'false':        15 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1592
  BDD entailment checks:           434
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          4
Number of abstraction locations:          10
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         420
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 4.47
Number of irrelevant predicates:          249 (59%)
Number of preds handled by boolean abs:   105 (25%)
  Total number of models for allsat:      57
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.664s
  Time for path formula creation:        2.627s
Time for strengthen operator:            0.056s
Time for prec operator:                  0.617s
  Time for abstraction:                  0.450s (Max:     0.021s, Count: 5838)
    Boolean abstraction:                 0.103s
    Solving time:                        0.080s (Max:     0.016s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.024s (Max:     0.020s)
Time for merge operator:                 0.099s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     0.091s

Number of path formula cache hits:   11239 (40%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.496s

Total number of created targets for pointer analysis: 120
   Number of created targets for uf: *unsigned_short_int is 19
   Number of created targets for uf: *enum_usb_device_state is 7
   Number of created targets for uf: *(struct_usb_device)* is 7
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *(struct_list_head)* is 7


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         138 (count: 6622, min: 0, max: 117, avg: 0.02)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.192s
Automaton transfers with branching:                0
Automaton transfer successors:                        25162 (count: 25162, min: 1, max: 1, avg: 1.00) [1 x 25162]

CPA algorithm statistics
------------------------
Number of iterations:            15912
Max size of waitlist:            141
Average size of waitlist:        99
Number of computed successors:   17229
Max successors for one state:    2
Number of times merged:          579
Number of times stopped:         994
Number of times breaked:         6

Total time for CPA algorithm:         5.533s (Max:     4.078s)
  Time for choose from waitlist:      0.071s
  Time for precision adjustment:      0.940s
  Time for transfer relation:         3.822s
  Time for merge operator:            0.188s
  Time for stop operator:             0.112s
  Time for adding to reached set:     0.129s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  63 (count: 6, min: 8, max: 13, avg: 10.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.113s
  Counterexample analysis:                             0.058s (Max:     0.015s, Calls: 6)
    Refinement sat check:                              0.029s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.004s
  ARG update:                                          0.040s

Length of refined path (in blocks):                      57 (count: 6, min: 7, max: 12, avg: 9.50)
Number of affected states:                               45 (count: 6, min: 5, max: 10, avg: 7.50)
Length (states) of path with itp 'true':                  6 (count: 6, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        45 (count: 6, min: 5, max: 10, avg: 7.50)
Length (states) of path with itp 'false':                 6 (count: 6, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              39 (count: 6, min: 4, max: 9, avg: 6.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 384
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 291.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       5.683s
Time for refinements:                 0.150s
Average time for refinement:          0.025s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.480
  Visited lines:          1691
  Total lines:            3293
  Line coverage:          0.514
  Visited conditions:     342
  Total conditions:       888
  Condition coverage:     0.385

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             14511
  Number of reached locations:   1042 (23%)
    Avg states per location:     13
    Max states per location:     642 (at node N171)
  Number of reached functions:   83 (48%)
  Number of partitions:          14508
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3926 (before line 7719), Function main called from node N3793, stack depth 1 [2a2ef072], stack [main]])
  Number of target states:       0
  Size of final wait list        139

Time for analysis setup:          4.479s
  Time for loading CPAs:          0.863s
  Time for loading parser:        0.508s
  Time for CFA construction:      2.965s
    Time for parsing file(s):     0.723s
    Time for AST to CFA:          0.982s
    Time for CFA sanity check:    0.308s
    Time for post-processing:     0.810s
      Time for var class.:        0.432s
Time for Analysis:                5.683s
CPU time for analysis:            5.680s
Total time for CPAchecker:       10.168s
Total CPU time for CPAchecker:   10.150s
Time for statistics:              0.328s

Time for Garbage Collector:       0.332s (in 17 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     43MB (    41 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8057MB (  7684 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
