scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run___kj_5gn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6854: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            234 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  213 (91%)
  Because of loop head:            18 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (1%)
  Times precision was empty:       210 (90%)
  Times precision was {false}:     10 (4%)
  Times result was cached:         2 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (5%)
  Times result was 'false':        6 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         51
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          4
Number of abstraction locations:          4
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         42
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.91
Number of irrelevant predicates:          18 (43%)
Number of preds handled by boolean abs:   24 (57%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.461s
  Time for path formula creation:        0.452s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.104s
  Time for abstraction:                  0.092s (Max:     0.012s, Count: 234)
    Boolean abstraction:                 0.011s
    Solving time:                        0.006s (Max:     0.002s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.014s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.007s

Number of path formula cache hits:   598 (31%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.443s

Total number of created targets for pointer analysis: 30
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 365, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.043s
Automaton transfers with branching:                0
Automaton transfer successors:                         1767 (count: 1767, min: 1, max: 1, avg: 1.00) [1 x 1767]

CPA algorithm statistics
------------------------
Number of iterations:            682
Max size of waitlist:            22
Average size of waitlist:        17
Number of computed successors:   793
Max successors for one state:    2
Number of times merged:          19
Number of times stopped:         29
Number of times breaked:         3

Total time for CPA algorithm:         0.998s (Max:     0.528s)
  Time for choose from waitlist:      0.013s
  Time for precision adjustment:      0.198s
  Time for transfer relation:         0.722s
  Time for merge operator:            0.015s
  Time for stop operator:             0.015s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  18 (count: 3, min: 6, max: 6, avg: 6.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.054s
  Counterexample analysis:                             0.024s (Max:     0.019s, Calls: 3)
    Refinement sat check:                              0.004s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.002s
  ARG update:                                          0.011s

Length of refined path (in blocks):                      15 (count: 3, min: 5, max: 5, avg: 5.00)
Number of affected states:                                9 (count: 3, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp 'true':                  3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:         9 (count: 3, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 137
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 136.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       1.070s
Time for refinements:                 0.072s
Average time for refinement:          0.024s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.208
  Visited lines:          848
  Total lines:            3293
  Line coverage:          0.258
  Visited conditions:     80
  Total conditions:       888
  Condition coverage:     0.090

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             369
  Number of reached locations:   272 (6%)
    Avg states per location:     1
    Max states per location:     12 (at node N203)
  Number of reached functions:   36 (21%)
  Number of partitions:          368
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3926 (before line 7719), Function main called from node N3793, stack depth 1 [1f77b5cc], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          4.736s
  Time for loading CPAs:          0.824s
  Time for loading parser:        0.525s
  Time for CFA construction:      3.267s
    Time for parsing file(s):     0.800s
    Time for AST to CFA:          1.115s
    Time for CFA sanity check:    0.325s
    Time for post-processing:     0.910s
      Time for var class.:        0.463s
Time for Analysis:                1.070s
CPU time for analysis:            1.080s
Total time for CPAchecker:        5.811s
Total CPU time for CPAchecker:    5.810s
Time for statistics:              0.098s

Time for Garbage Collector:       0.213s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 56MB (    54 MiB) max;     33MB (    31 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8036MB (  7663 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
