scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ubntp1ul/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3855: Ignoring function call through function pointer *(r8a66597->pdata->port_power): (*(r8a66597->pdata->port_power))(port, power); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6854: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            285 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  265 (93%)
  Because of loop head:            17 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (1%)
  Times precision was empty:       264 (93%)
  Times precision was {false}:     9 (3%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (4%)
  Times result was 'false':        6 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         90
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          4
Number of abstraction locations:          4
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         33
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.57
Number of irrelevant predicates:          9 (27%)
Number of preds handled by boolean abs:   24 (73%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.454s
  Time for path formula creation:        0.445s
Time for strengthen operator:            0.017s
Time for prec operator:                  0.116s
  Time for abstraction:                  0.086s (Max:     0.015s, Count: 285)
    Boolean abstraction:                 0.026s
    Solving time:                        0.007s (Max:     0.003s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.010s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):     0.009s

Number of path formula cache hits:   834 (34%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.424s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          48 (count: 411, min: 0, max: 48, avg: 0.12)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                         2321 (count: 2321, min: 1, max: 1, avg: 1.00) [1 x 2321]

CPA algorithm statistics
------------------------
Number of iterations:            888
Max size of waitlist:            23
Average size of waitlist:        18
Number of computed successors:   1025
Max successors for one state:    2
Number of times merged:          40
Number of times stopped:         50
Number of times breaked:         3

Total time for CPA algorithm:         1.028s (Max:     0.510s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.203s
  Time for transfer relation:         0.719s
  Time for merge operator:            0.015s
  Time for stop operator:             0.031s
  Time for adding to reached set:     0.013s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  18 (count: 3, min: 6, max: 6, avg: 6.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.051s
  Counterexample analysis:                             0.018s (Max:     0.015s, Calls: 3)
    Refinement sat check:                              0.004s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.003s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      15 (count: 3, min: 5, max: 5, avg: 5.00)
Number of affected states:                                9 (count: 3, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp 'true':                  3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:         9 (count: 3, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               6 (count: 3, min: 2, max: 2, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 153
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 152.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:       1.090s
Time for refinements:                 0.062s
Average time for refinement:          0.020s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.231
  Visited lines:          1036
  Total lines:            3293
  Line coverage:          0.315
  Visited conditions:     100
  Total conditions:       888
  Condition coverage:     0.113

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             532
  Number of reached locations:   352 (8%)
    Avg states per location:     1
    Max states per location:     18 (at node N203)
  Number of reached functions:   40 (23%)
  Number of partitions:          532
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          4.306s
  Time for loading CPAs:          0.887s
  Time for loading parser:        0.433s
  Time for CFA construction:      2.876s
    Time for parsing file(s):     0.658s
    Time for AST to CFA:          1.057s
    Time for CFA sanity check:    0.247s
    Time for post-processing:     0.798s
      Time for var class.:        0.411s
Time for Analysis:                1.090s
CPU time for analysis:            1.090s
Total time for CPAchecker:        5.399s
Total CPU time for CPAchecker:    5.390s
Time for statistics:              0.090s

Time for Garbage Collector:       0.179s (in 10 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     33MB (    32 MiB) avg;     69MB (    65 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    27 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   7978MB (  7608 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
