scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--usb--host--r8a66597-hcd.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ochgqmnq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7792: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3855: Function pointer *(r8a66597->pdata->port_power) with type void (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hub_find_child to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 6854: Unsupported feature (recursion): collect_usb_address_map(childdev, map); (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            24804 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21694 (87%)
  Because of loop head:            3026 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         84 (0%)
  Times precision was empty:       6878 (28%)
  Times precision was {false}:     284 (1%)
  Times result was cached:         16643 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      999 (4%)
  Times result was 'false':        624 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         11185
  BDD entailment checks:           3881
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          4
Number of abstraction locations:          140
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         49803
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 38.82
Number of irrelevant predicates:          14343 (29%)
Number of preds handled by boolean abs:   1872 (4%)
  Total number of models for allsat:      999
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.511s
  Time for path formula creation:        2.421s
Time for strengthen operator:            0.204s
Time for prec operator:                  5.794s
  Time for abstraction:                  5.407s (Max:     0.038s, Count: 24804)
    Boolean abstraction:                 0.907s
    Solving time:                        0.727s (Max:     0.015s)
    Model enumeration time:              0.092s
    Time for BDD construction:           0.079s (Max:     0.012s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     0.819s

Number of path formula cache hits:   149569 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.038s

Total number of created targets for pointer analysis: 142
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *char is 14
   Number of created targets for uf: *unsigned_long_int is 11


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2012 (count: 18193, min: 0, max: 166, avg: 0.11)
Time for BDD node cleanup:                             0.046s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.472s
Automaton transfers with branching:                0
Automaton transfer successors:                       140462 (count: 140462, min: 1, max: 1, avg: 1.00) [1 x 140462]

CPA algorithm statistics
------------------------
Number of iterations:            80805
Max size of waitlist:            102
Average size of waitlist:        33
Number of computed successors:   92524
Max successors for one state:    2
Number of times merged:          3652
Number of times stopped:         6642
Number of times breaked:         84

Total time for CPA algorithm:        13.083s (Max:     0.733s)
  Time for choose from waitlist:      0.099s
  Time for precision adjustment:      6.604s
  Time for transfer relation:         5.028s
  Time for merge operator:            0.235s
  Time for stop operator:             0.269s
  Time for adding to reached set:     0.204s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                2154 (count: 84, min: 8, max: 72, avg: 25.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.351s
  Counterexample analysis:                             0.842s (Max:     0.023s, Calls: 84)
    Refinement sat check:                              0.529s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.116s
  ARG update:                                          0.293s

Length of refined path (in blocks):                    2070 (count: 84, min: 7, max: 71, avg: 24.64)
Number of affected states:                             1902 (count: 84, min: 5, max: 69, avg: 22.64)
Length (states) of path with itp 'true':                 84 (count: 84, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      1902 (count: 84, min: 5, max: 69, avg: 22.64)
Length (states) of path with itp 'false':                84 (count: 84, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 84, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1818 (count: 84, min: 4, max: 68, avg: 21.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     84
Number of failed refinements:         0
Max. size of reached set before ref.: 2354
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 993.36
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      14.643s
Time for refinements:                 1.543s
Average time for refinement:          0.018s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.474
  Visited lines:          1683
  Total lines:            3293
  Line coverage:          0.511
  Visited conditions:     310
  Total conditions:       888
  Condition coverage:     0.349

CPAchecker general statistics
-----------------------------
Number of program locations:     4629
Number of CFA edges:             5481
Number of relevant variables:    801
Number of functions:             173
Number of loops:                 38
Size of reached set:             2321
  Number of reached locations:   949 (21%)
    Avg states per location:     2
    Max states per location:     63 (at node N204)
  Number of reached functions:   82 (47%)
  Number of partitions:          2321
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        81

Time for analysis setup:          4.739s
  Time for loading CPAs:          0.939s
  Time for loading parser:        0.559s
  Time for CFA construction:      3.115s
    Time for parsing file(s):     0.881s
    Time for AST to CFA:          1.018s
    Time for CFA sanity check:    0.261s
    Time for post-processing:     0.800s
      Time for var class.:        0.410s
Time for Analysis:               14.643s
CPU time for analysis:           14.640s
Total time for CPAchecker:       19.387s
Total CPU time for CPAchecker:   19.370s
Time for statistics:              0.120s

Time for Garbage Collector:       0.606s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    73 MiB) max;     50MB (    48 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     39MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
