scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t0wr2gi2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_set to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48296 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45035 (93%)
  Because of loop head:            2768 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         493 (1%)
  Times precision was empty:       5064 (10%)
  Times precision was {false}:     244 (1%)
  Times result was cached:         41449 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1539 (3%)
  Times result was 'false':        3027 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         25147
  BDD entailment checks:           6733
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          8
Number of abstraction locations:          203
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         177688
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 99.66
Number of irrelevant predicates:          18498 (10%)
Number of preds handled by boolean abs:   4201 (2%)
  Total number of models for allsat:      1543
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.903s
  Time for path formula creation:        1.800s
Time for strengthen operator:            0.226s
Time for prec operator:                 10.111s
  Time for abstraction:                  9.453s (Max:     0.028s, Count: 48296)
    Boolean abstraction:                 1.301s
    Solving time:                        1.089s (Max:     0.025s)
    Model enumeration time:              0.081s
    Time for BDD construction:           0.104s (Max:     0.008s)
Time for merge operator:                 0.111s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     1.170s

Number of path formula cache hits:   268429 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.214s

Total number of created targets for pointer analysis: 276
   Number of created targets for uf: *(struct_hso_device)* is 61
   Number of created targets for uf: *signed_int is 19


Number of BDD nodes:                               306
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3353 (count: 22406, min: 0, max: 228, avg: 0.15)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.514s
  Time for transition matches:                         0.253s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       224904 (count: 224904, min: 1, max: 1, avg: 1.00) [1 x 224904]

CPA algorithm statistics
------------------------
Number of iterations:            167347
Max size of waitlist:            48
Average size of waitlist:        21
Number of computed successors:   190546
Max successors for one state:    2
Number of times merged:          9207
Number of times stopped:         14314
Number of times breaked:         493

Total time for CPA algorithm:        17.389s (Max:     0.618s)
  Time for choose from waitlist:      0.115s
  Time for precision adjustment:     11.096s
  Time for transfer relation:         4.694s
  Time for merge operator:            0.259s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.273s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   493
Avg. length of target path (in blocks):               25129 (count: 493, min: 16, max: 96, avg: 50.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.973s
  Counterexample analysis:                             5.856s (Max:     0.041s, Calls: 493)
    Refinement sat check:                              3.898s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.018s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.114s
  Precision update:                                    0.369s
  ARG update:                                          0.390s

Length of refined path (in blocks):                   24520 (count: 492, min: 15, max: 95, avg: 49.84)
Number of affected states:                            11198 (count: 492, min: 4, max: 93, avg: 22.76)
Length (states) of path with itp 'true':              12830 (count: 492, min: 1, max: 75, avg: 26.08)
Length (states) of path with itp non-trivial itp:     11198 (count: 492, min: 4, max: 93, avg: 22.76)
Length (states) of path with itp 'false':               492 (count: 492, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 492, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10706 (count: 492, min: 3, max: 92, avg: 21.76)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                493
Number of successful refinements:     492
Number of failed refinements:         0
Max. size of reached set before ref.: 1903
Max. size of reached set after ref.:  1647
Avg. size of reached set before ref.: 1103.52
Avg. size of reached set after ref.:  753.72

Total time for CEGAR algorithm:      25.139s
Time for refinements:                 7.483s
Average time for refinement:          0.015s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.434
  Visited lines:          1660
  Total lines:            3653
  Line coverage:          0.454
  Visited conditions:     257
  Total conditions:       1024
  Condition coverage:     0.251

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             1690
  Number of reached locations:   892 (17%)
    Avg states per location:     1
    Max states per location:     13 (at node N4151)
  Number of reached functions:   86 (43%)
  Number of partitions:          1682
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3982 (before line 10308), Function main called from node N3779, stack depth 1 [2f4b98f6], stack [main]])
  Number of target states:       1
  Size of final wait list        39

Time for analysis setup:          4.667s
  Time for loading CPAs:          0.832s
  Time for loading parser:        0.478s
  Time for CFA construction:      3.257s
    Time for parsing file(s):     0.721s
    Time for AST to CFA:          1.219s
    Time for CFA sanity check:    0.262s
    Time for post-processing:     0.874s
      Time for var class.:        0.414s
Time for Analysis:               25.139s
CPU time for analysis:           25.140s
Total time for CPAchecker:       29.815s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.113s

Time for Garbage Collector:       0.623s (in 116 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     50MB (    48 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
