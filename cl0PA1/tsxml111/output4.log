scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hogrpztk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49405 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  38611 (78%)
  Because of loop head:            10629 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         165 (0%)
  Times precision was empty:       12789 (26%)
  Times precision was {false}:     614 (1%)
  Times result was cached:         34168 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1834 (4%)
  Times result was 'false':        1226 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         42658
  BDD entailment checks:           18036
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          6
Number of abstraction locations:          94
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         119972
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 49.01
Number of irrelevant predicates:          61385 (51%)
Number of preds handled by boolean abs:   3855 (3%)
  Total number of models for allsat:      1798
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                  4.736s
  Time for path formula creation:        4.548s
Time for strengthen operator:            0.330s
Time for prec operator:                 10.732s
  Time for abstraction:                  9.895s (Max:     0.024s, Count: 49405)
    Boolean abstraction:                 1.945s
    Solving time:                        1.988s (Max:     0.021s)
    Model enumeration time:              0.167s
    Time for BDD construction:           0.109s (Max:     0.010s)
Time for merge operator:                 0.264s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     2.155s

Number of path formula cache hits:   304248 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.748s

Total number of created targets for pointer analysis: 130
   Number of created targets for uf: *(struct_hso_device)* is 31
   Number of created targets for uf: *unsigned_char is 9


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3717 (count: 45099, min: 0, max: 218, avg: 0.08)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.721s
  Time for transition matches:                         0.388s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                       298066 (count: 298066, min: 1, max: 1, avg: 1.00) [1 x 298066]

CPA algorithm statistics
------------------------
Number of iterations:            187174
Max size of waitlist:            158
Average size of waitlist:        63
Number of computed successors:   220723
Max successors for one state:    2
Number of times merged:          12311
Number of times stopped:         21910
Number of times breaked:         165

Total time for CPA algorithm:        22.860s (Max:     1.059s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:     12.185s
  Time for transfer relation:         8.413s
  Time for merge operator:            0.546s
  Time for stop operator:             0.435s
  Time for adding to reached set:     0.322s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   165
Avg. length of target path (in blocks):                4936 (count: 165, min: 21, max: 43, avg: 29.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.635s
  Counterexample analysis:                             1.853s (Max:     0.023s, Calls: 165)
    Refinement sat check:                              1.347s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.119s
  ARG update:                                          0.514s

Length of refined path (in blocks):                    4386 (count: 165, min: 18, max: 36, avg: 26.58)
Number of affected states:                             2950 (count: 165, min: 2, max: 34, avg: 17.88)
Length (states) of path with itp 'true':               1271 (count: 165, min: 1, max: 32, avg: 7.70)
Length (states) of path with itp non-trivial itp:      2950 (count: 165, min: 2, max: 34, avg: 17.88)
Length (states) of path with itp 'false':               165 (count: 165, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 165, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2785 (count: 165, min: 1, max: 33, avg: 16.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                165
Number of successful refinements:     165
Number of failed refinements:         0
Max. size of reached set before ref.: 2701
Max. size of reached set after ref.:  1738
Avg. size of reached set before ref.: 1544.33
Avg. size of reached set after ref.:  350.78

Total time for CEGAR algorithm:      25.888s
Time for refinements:                 2.948s
Average time for refinement:          0.017s
Max time for refinement:              0.063s

Code Coverage
-----------------------------
  Function coverage:      0.268
  Visited lines:          1436
  Total lines:            3653
  Line coverage:          0.393
  Visited conditions:     186
  Total conditions:       1024
  Condition coverage:     0.182

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             653
  Number of reached locations:   487 (9%)
    Avg states per location:     1
    Max states per location:     12 (at node N3980)
  Number of reached functions:   53 (27%)
  Number of partitions:          653
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          4.437s
  Time for loading CPAs:          0.657s
  Time for loading parser:        0.562s
  Time for CFA construction:      3.112s
    Time for parsing file(s):     0.721s
    Time for AST to CFA:          1.161s
    Time for CFA sanity check:    0.254s
    Time for post-processing:     0.777s
      Time for var class.:        0.385s
Time for Analysis:               25.888s
CPU time for analysis:           25.890s
Total time for CPAchecker:       30.328s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.059s

Time for Garbage Collector:       0.795s (in 106 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     54MB (    51 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
