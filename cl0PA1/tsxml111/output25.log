scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_po8_7dnc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_termios_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_set_operations to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            58501 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  47334 (81%)
  Because of loop head:            11031 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         136 (0%)
  Times precision was empty:       21777 (37%)
  Times precision was {false}:     711 (1%)
  Times result was cached:         33921 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2092 (4%)
  Times result was 'false':        1446 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         49021
  BDD entailment checks:           17425
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          6
Number of abstraction locations:          106
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         122812
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 43.81
Number of irrelevant predicates:          47501 (39%)
Number of preds handled by boolean abs:   4389 (4%)
  Total number of models for allsat:      2081
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.725s
  Time for path formula creation:        5.587s
Time for strengthen operator:            0.368s
Time for prec operator:                  9.796s
  Time for abstraction:                  9.060s (Max:     0.027s, Count: 58501)
    Boolean abstraction:                 1.714s
    Solving time:                        1.743s (Max:     0.016s)
    Model enumeration time:              0.122s
    Time for BDD construction:           0.100s (Max:     0.010s)
Time for merge operator:                 0.289s
Time for coverage check:                 0.057s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     1.865s

Number of path formula cache hits:   361793 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.744s

Total number of created targets for pointer analysis: 163
   Number of created targets for uf: *(struct_hso_device)* is 31
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *unsigned_char is 4


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4210 (count: 55512, min: 0, max: 156, avg: 0.08)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.597s
  Time for transition matches:                         0.326s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       362303 (count: 362303, min: 1, max: 1, avg: 1.00) [1 x 362303]

CPA algorithm statistics
------------------------
Number of iterations:            226819
Max size of waitlist:            119
Average size of waitlist:        58
Number of computed successors:   265350
Max successors for one state:    2
Number of times merged:          15798
Number of times stopped:         26007
Number of times breaked:         136

Total time for CPA algorithm:        23.466s (Max:     1.144s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     11.466s
  Time for transfer relation:         9.550s
  Time for merge operator:            0.573s
  Time for stop operator:             0.450s
  Time for adding to reached set:     0.316s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   136
Avg. length of target path (in blocks):                3828 (count: 136, min: 21, max: 38, avg: 28.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.034s
  Counterexample analysis:                             1.307s (Max:     0.028s, Calls: 136)
    Refinement sat check:                              0.914s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.114s
  ARG update:                                          0.469s

Length of refined path (in blocks):                    3680 (count: 136, min: 16, max: 37, avg: 27.06)
Number of affected states:                             3380 (count: 136, min: 0, max: 35, avg: 24.85)
Length (states) of path with itp 'true':                164 (count: 136, min: 1, max: 15, avg: 1.21)
Length (states) of path with itp non-trivial itp:      3380 (count: 136, min: 0, max: 35, avg: 24.85)
Length (states) of path with itp 'false':               136 (count: 136, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 136, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3245 (count: 136, min: 0, max: 34, avg: 23.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                136
Number of successful refinements:     136
Number of failed refinements:         0
Max. size of reached set before ref.: 2673
Max. size of reached set after ref.:  790
Avg. size of reached set before ref.: 1766.41
Avg. size of reached set after ref.:  17.21

Total time for CEGAR algorithm:      25.775s
Time for refinements:                 2.289s
Average time for refinement:          0.016s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.010
  Visited lines:          935
  Total lines:            3653
  Line coverage:          0.256
  Visited conditions:     0
  Total conditions:       1024
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             6
  Number of reached locations:   6 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N3779)
  Number of reached functions:   2 (1%)
  Number of partitions:          6
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.070s
  Time for loading CPAs:          0.718s
  Time for loading parser:        0.461s
  Time for CFA construction:      2.803s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          1.010s
    Time for CFA sanity check:    0.210s
    Time for post-processing:     0.715s
      Time for var class.:        0.361s
Time for Analysis:               25.775s
CPU time for analysis:           25.780s
Total time for CPAchecker:       29.848s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.058s

Time for Garbage Collector:       0.905s (in 121 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     58MB (    55 MiB) avg;     93MB (    88 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
