scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--usb--hso.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mk48owqj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5545: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5548: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5551: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7753: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7758: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 7763: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___1), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 2UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___1), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 4UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___1), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_42871;
  case 8UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___1), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_42871;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10384: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tty_alloc_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_tty_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_get_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_set to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_autopm_put_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_encode_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8018: Ignoring function call through function pointer *(serial->write_data): res = (*(serial->write_data))(serial); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_wait_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_hangup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_netdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1691242 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1522777 (90%)
  Because of loop head:            143864 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         24601 (1%)
  Times precision was empty:       51159 (3%)
  Times precision was {false}:     873 (0%)
  Times result was cached:         1624583 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14627 (1%)
  Times result was 'false':        62642 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         966826
  BDD entailment checks:           326760
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       50
Number of predicates discovered:          9
Number of abstraction locations:          397
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         8698466
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 561.19
Number of irrelevant predicates:          1629143 (19%)
Number of preds handled by boolean abs:   55881 (1%)
  Total number of models for allsat:      14960
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 53.972s
  Time for path formula creation:       52.020s
Time for strengthen operator:            5.033s
Time for prec operator:                230.863s
  Time for abstraction:                217.899s (Max:     0.395s, Count: 1691242)
    Boolean abstraction:                10.705s
    Solving time:                        9.236s (Max:     0.016s)
    Model enumeration time:              0.827s
    Time for BDD construction:           0.287s (Max:     0.010s)
Time for merge operator:                 2.798s
Time for coverage check:                 0.477s
  Time for BDD entailment checks:        0.356s
Total time for SMT solver (w/o itp):    10.063s

Number of path formula cache hits:   8498912 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.883s

Total number of created targets for pointer analysis: 128785
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(struct_usb_device)* is 237
   Number of created targets for uf: *(unsigned_char)* is 21
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 7
   Number of created targets for uf: *unsigned_long_int is 1361
   Number of created targets for uf: *unsigned_short_int is 13
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_hso_serial)*],_VarArgs:_false)* is 113
   Number of created targets for uf: *(struct_hso_serial)* is 118
   Number of created targets for uf: *(struct_hso_device)* is 3009
   Number of created targets for uf: *signed_int is 922
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_urb)* is 289
   Number of created targets for uf: *(struct_hso_tiocmget)* is 244
   Number of created targets for uf: *(struct_usb_interface)* is 237
   Number of created targets for uf: *(struct_hso_shared_int)* is 113
   Number of created targets for uf: *enum_rx_ctrl_state is 10
   Number of created targets for uf: *unsigned_int is 77
   Number of created targets for uf: *(struct_hso_net)* is 120
   Number of created targets for uf: *(struct_device)* is 119


Number of BDD nodes:                               434
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29744 (count: 470513, min: 0, max: 648, avg: 0.06)
Time for BDD node cleanup:                             0.122s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.333s
  Time for transition matches:                         4.779s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.051s
Automaton transfers with branching:                0
Automaton transfer successors:                      7717688 (count: 7717688, min: 1, max: 1, avg: 1.00) [1 x 7717688]

CPA algorithm statistics
------------------------
Number of iterations:            5730217
Max size of waitlist:            59
Average size of waitlist:        21
Number of computed successors:   6413792
Max successors for one state:    2
Number of times merged:          320033
Number of times stopped:         513428
Number of times breaked:         24601

Total time for CPA algorithm:       390.128s (Max:     1.247s)
  Time for choose from waitlist:      1.688s
  Time for precision adjustment:    256.135s
  Time for transfer relation:       105.910s
  Time for merge operator:            5.556s
  Time for stop operator:             5.411s
  Time for adding to reached set:     6.054s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24601
Avg. length of target path (in blocks):             1714991 (count: 24601, min: 16, max: 162, avg: 69.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 392.671s
  Counterexample analysis:                           352.037s (Max:     0.066s, Calls: 24601)
    Refinement sat check:                            219.226s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.609s
  Error path post-processing:                          0.000s
  Predicate creation:                                  2.570s
  Precision update:                                   25.052s
  ARG update:                                          7.067s

Length of refined path (in blocks):                 1685249 (count: 24600, min: 15, max: 161, avg: 68.51)
Number of affected states:                           614514 (count: 24600, min: 0, max: 93, avg: 24.98)
Length (states) of path with itp 'true':            1046135 (count: 24600, min: 0, max: 148, avg: 42.53)
Length (states) of path with itp non-trivial itp:    614514 (count: 24600, min: 0, max: 93, avg: 24.98)
Length (states) of path with itp 'false':             24600 (count: 24600, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 24600, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          589970 (count: 24600, min: 0, max: 92, avg: 23.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24601
Number of successful refinements:     24600
Number of failed refinements:         0
Max. size of reached set before ref.: 15974
Max. size of reached set after ref.:  14960
Avg. size of reached set before ref.: 3985.03
Avg. size of reached set after ref.:  3747.89

Total time for CEGAR algorithm:     895.450s
Time for refinements:               455.769s
Average time for refinement:          0.018s
Max time for refinement:              0.290s

Code Coverage
-----------------------------
  Function coverage:      0.551
  Visited lines:          2071
  Total lines:            3653
  Line coverage:          0.567
  Visited conditions:     393
  Total conditions:       1024
  Condition coverage:     0.384

CPAchecker general statistics
-----------------------------
Number of program locations:     5169
Number of CFA edges:             5867
Number of relevant variables:    707
Number of functions:             198
Number of loops:                 29
Size of reached set:             2446
  Number of reached locations:   1298 (25%)
    Avg states per location:     1
    Max states per location:     18 (at node N3980)
  Number of reached functions:   109 (55%)
  Number of partitions:          2441
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N3608 (before line 9892), Function hso_free_interface called from node N3348, stack depth 3 [815ca4c], stack [main, hso_probe, hso_free_interface]])
  Number of target states:       1
  Size of final wait list        14

Time for analysis setup:          4.853s
  Time for loading CPAs:          0.723s
  Time for loading parser:        0.555s
  Time for CFA construction:      3.473s
    Time for parsing file(s):     0.807s
    Time for AST to CFA:          1.258s
    Time for CFA sanity check:    0.301s
    Time for post-processing:     0.915s
      Time for var class.:        0.444s
Time for Analysis:              895.450s
CPU time for analysis:          895.320s
Total time for CPAchecker:      900.307s
Total CPU time for CPAchecker:  900.160s
Time for statistics:              0.108s

Time for Garbage Collector:      32.725s (in 2916 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                602MB (   574 MiB) max;    241MB (   230 MiB) avg;    616MB (   588 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           640MB (   611 MiB) max;    354MB (   337 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8355MB (  7968 MiB) max;   8234MB (  7853 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
