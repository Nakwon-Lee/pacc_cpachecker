scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_edscpye1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4782: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7112: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4749: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4673: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            777421 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  722642 (93%)
  Because of loop head:            54320 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         459 (0%)
  Times precision was empty:       74719 (10%)
  Times precision was {false}:     1671 (0%)
  Times result was cached:         696264 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4767 (1%)
  Times result was 'false':        7834 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         523309
  BDD entailment checks:           161483
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       79
Number of predicates discovered:          12
Number of abstraction locations:          346
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         2582972
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 401.21
Number of irrelevant predicates:          1128737 (44%)
Number of preds handled by boolean abs:   9629 (0%)
  Total number of models for allsat:      4743
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                 32.218s
  Time for path formula creation:       31.232s
Time for strengthen operator:            2.429s
Time for prec operator:                482.076s
  Time for abstraction:                474.890s (Max:     0.735s, Count: 777421)
    Boolean abstraction:               203.355s
    Solving time:                      255.425s (Max:     0.500s)
    Model enumeration time:              9.825s
    Time for BDD construction:           0.158s (Max:     0.010s)
Time for merge operator:                 2.526s
Time for coverage check:                 0.185s
  Time for BDD entailment checks:        0.131s
Total time for SMT solver (w/o itp):   265.251s

Number of path formula cache hits:   5013631 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.601s

Total number of created targets for pointer analysis: 893573
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(struct_hw_scatterlist)* is 4
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 4
   Number of created targets for uf: *(struct_scsi_device)* is 2
   Number of created targets for uf: *signed_int is 1111
   Number of created targets for uf: *unsigned_char is 5635
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(unsigned_char)* is 4
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 4


Number of BDD nodes:                               449
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9755 (count: 273831, min: 0, max: 165, avg: 0.04)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.935s
  Time for transition matches:                         2.115s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      4191924 (count: 4191924, min: 1, max: 1, avg: 1.00) [1 x 4191924]

CPA algorithm statistics
------------------------
Number of iterations:            2862601
Max size of waitlist:            90
Average size of waitlist:        42
Number of computed successors:   3209943
Max successors for one state:    2
Number of times merged:          180913
Number of times stopped:         321475
Number of times breaked:         459

Total time for CPA algorithm:       693.699s (Max:    28.195s)
  Time for choose from waitlist:      0.736s
  Time for precision adjustment:    496.114s
  Time for transfer relation:       183.137s
  Time for merge operator:            3.837s
  Time for stop operator:             2.379s
  Time for adding to reached set:     2.846s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   459
Avg. length of target path (in blocks):               38815 (count: 459, min: 6, max: 270, avg: 84.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 195.969s
  Counterexample analysis:                           191.291s (Max:     0.962s, Calls: 459)
    Refinement sat check:                            174.008s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.140s
  Precision update:                                    0.329s
  ARG update:                                          3.898s

Length of refined path (in blocks):                   31879 (count: 459, min: 5, max: 210, avg: 69.45)
Number of affected states:                            22706 (count: 459, min: 1, max: 208, avg: 49.47)
Length (states) of path with itp 'true':               8714 (count: 459, min: 1, max: 115, avg: 18.98)
Length (states) of path with itp non-trivial itp:     22706 (count: 459, min: 1, max: 208, avg: 49.47)
Length (states) of path with itp 'false':               459 (count: 459, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 459, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           22247 (count: 459, min: 0, max: 207, avg: 48.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                459
Number of successful refinements:     459
Number of failed refinements:         0
Max. size of reached set before ref.: 25333
Max. size of reached set after ref.:  20695
Avg. size of reached set before ref.: 10010.25
Avg. size of reached set after ref.:  3784.78

Total time for CEGAR algorithm:     893.911s
Time for refinements:               199.231s
Average time for refinement:          0.434s
Max time for refinement:              1.009s

Code Coverage
-----------------------------
  Function coverage:      0.483
  Visited lines:          2530
  Total lines:            7726
  Line coverage:          0.327
  Visited conditions:     728
  Total conditions:       2544
  Condition coverage:     0.286

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             23139
  Number of reached locations:   2002 (18%)
    Avg states per location:     11
    Max states per location:     498 (at node N362)
  Number of reached functions:   85 (48%)
  Number of partitions:          23111
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2889 (before line 8192), Function aic7xxx_run_waiting_queues called from node N5423, stack depth 3 [2c85351a], stack [main, do_aic7xxx_isr, aic7xxx_run_waiting_queues]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          6.397s
  Time for loading CPAs:          0.916s
  Time for loading parser:        0.573s
  Time for CFA construction:      4.737s
    Time for parsing file(s):     0.939s
    Time for AST to CFA:          1.656s
    Time for CFA sanity check:    0.414s
    Time for post-processing:     1.483s
      Time for var class.:        0.728s
Time for Analysis:              893.911s
CPU time for analysis:          893.810s
Total time for CPAchecker:      900.320s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.351s

Time for Garbage Collector:      32.949s (in 3797 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                207MB (   198 MiB) max;     99MB (    94 MiB) avg;    214MB (   204 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           215MB (   205 MiB) max;    148MB (   141 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8226MB (  7845 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
