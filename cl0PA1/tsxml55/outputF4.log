scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ighmnwur/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7112: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_track_queue_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            694340 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  636155 (92%)
  Because of loop head:            58122 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (0%)
  Times precision was empty:       685177 (99%)
  Times precision was {false}:     562 (0%)
  Times result was cached:         7533 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1068 (0%)
  Times result was 'false':        463 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         380523
  BDD entailment checks:           56797
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       354
Number of predicates discovered:          6
Number of abstraction locations:          40
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         34349
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 21.07
Number of irrelevant predicates:          19659 (57%)
Number of preds handled by boolean abs:   2741 (8%)
  Total number of models for allsat:      1068
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                106.206s
  Time for path formula creation:      105.242s
Time for strengthen operator:            2.445s
Time for prec operator:                498.774s
  Time for abstraction:                493.383s (Max:     6.411s, Count: 694340)
    Boolean abstraction:               336.864s
    Solving time:                      453.802s (Max:     6.170s)
    Model enumeration time:              6.082s
    Time for BDD construction:           0.062s (Max:     0.004s)
Time for merge operator:                 8.342s
Time for coverage check:                 0.111s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):   459.884s

Number of path formula cache hits:   4245004 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    91.581s

Total number of created targets for pointer analysis: 6347302
   Number of created targets for uf: *enum_ldv_24926 is 3041
   Number of created targets for uf: *(struct_aic7xxx_host)* is 453
   Number of created targets for uf: *enum_ldv_24924 is 2889
   Number of created targets for uf: *(struct_scsi_device)* is 41
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 3
   Number of created targets for uf: *(unsigned_int)* is 736
   Number of created targets for uf: *enum_ldv_24928 is 2889
   Number of created targets for uf: *unsigned_short_int is 12161
   Number of created targets for uf: *signed_int is 5743
   Number of created targets for uf: *(char)* is 2598
   Number of created targets for uf: *unsigned_char is 3757
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *char is 257
   Number of created targets for uf: *unsigned_int is 29


Number of BDD nodes:                               280
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2243 (count: 751259, min: 0, max: 52, avg: 0.00)
Time for BDD node cleanup:                             0.085s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.881s
  Time for transition matches:                         2.194s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      3960292 (count: 3960292, min: 1, max: 1, avg: 1.00) [1 x 3960292]

CPA algorithm statistics
------------------------
Number of iterations:            2577219
Max size of waitlist:            10704
Average size of waitlist:        5006
Number of computed successors:   2885416
Max successors for one state:    2
Number of times merged:          161863
Number of times stopped:         214439
Number of times breaked:         63

Total time for CPA algorithm:       748.554s (Max:    94.123s)
  Time for choose from waitlist:      0.575s
  Time for precision adjustment:    517.481s
  Time for transfer relation:       210.092s
  Time for merge operator:            9.536s
  Time for stop operator:             1.681s
  Time for adding to reached set:     4.668s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   63
Avg. length of target path (in blocks):                 973 (count: 63, min: 6, max: 26, avg: 15.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 144.437s
  Counterexample analysis:                           138.671s (Max:     6.071s, Calls: 63)
    Refinement sat check:                            133.804s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.033s
  ARG update:                                          5.653s

Length of refined path (in blocks):                     730 (count: 63, min: 5, max: 18, avg: 11.59)
Number of affected states:                              628 (count: 63, min: 3, max: 17, avg: 9.97)
Length (states) of path with itp 'true':                 39 (count: 63, min: 0, max: 1, avg: 0.62)
Length (states) of path with itp non-trivial itp:       628 (count: 63, min: 3, max: 17, avg: 9.97)
Length (states) of path with itp 'false':                63 (count: 63, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 63, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             565 (count: 63, min: 2, max: 16, avg: 8.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                63
Number of successful refinements:     63
Number of failed refinements:         0
Max. size of reached set before ref.: 300969
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 40351.10
Avg. size of reached set after ref.:  4.86

Total time for CEGAR algorithm:     894.188s
Time for refinements:               145.622s
Average time for refinement:          2.311s
Max time for refinement:              6.087s

Code Coverage
-----------------------------
  Function coverage:      0.534
  Visited lines:          4834
  Total lines:            7726
  Line coverage:          0.626
  Visited conditions:     1446
  Total conditions:       2544
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             128701
  Number of reached locations:   3688 (33%)
    Avg states per location:     34
    Max states per location:     4004 (at node N65)
  Number of reached functions:   94 (53%)
  Number of partitions:          128699
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5668 (before line 10776), Function aic7xxx_slave_configure called from node N10805, stack depth 2 [1526239e], stack [main, aic7xxx_slave_configure]])
  Number of target states:       0
  Size of final wait list        4749

Time for analysis setup:          6.136s
  Time for loading CPAs:          0.821s
  Time for loading parser:        0.443s
  Time for CFA construction:      4.791s
    Time for parsing file(s):     0.885s
    Time for AST to CFA:          1.666s
    Time for CFA sanity check:    0.594s
    Time for post-processing:     1.538s
      Time for var class.:        0.709s
Time for Analysis:              894.188s
CPU time for analysis:          894.100s
Total time for CPAchecker:      900.328s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              1.569s

Time for Garbage Collector:      34.407s (in 902 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                947MB (   903 MiB) max;    230MB (   219 MiB) avg;    969MB (   924 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           968MB (   923 MiB) max;    350MB (   334 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8504MB (  8110 MiB) max;   8364MB (  7976 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
