scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u5o2rlaz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4782: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4749: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6098: Ignoring function call through function pointer *(cur_patch->patch_func): tmp = (*(cur_patch->patch_func))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7112: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4673: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_track_queue_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            873182 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  815610 (93%)
  Because of loop head:            57571 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1 (0%)
  Times precision was empty:       873166 (100%)
  Times precision was {false}:     4 (0%)
  Times result was cached:         8 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         449565
  BDD entailment checks:           150459
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       354
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.00
Number of irrelevant predicates:          12 (75%)
Number of preds handled by boolean abs:   4 (25%)
  Total number of models for allsat:      4
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                546.111s
  Time for path formula creation:      544.718s
Time for strengthen operator:            2.961s
Time for prec operator:                 11.880s
  Time for abstraction:                  1.138s (Max:     0.035s, Count: 873182)
    Boolean abstraction:                 0.027s
    Solving time:                        0.031s (Max:     0.016s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                67.511s
Time for coverage check:                 0.231s
  Time for BDD entailment checks:        0.169s
Total time for SMT solver (w/o itp):     0.032s

Number of path formula cache hits:   675923 (15%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   525.668s

Total number of created targets for pointer analysis: 25661121
   Number of created targets for uf: *enum_ldv_24926 is 77
   Number of created targets for uf: *(struct_aic7xxx_host)* is 7
   Number of created targets for uf: *(struct_hw_scatterlist)* is 5
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 5
   Number of created targets for uf: *enum_ldv_24924 is 77
   Number of created targets for uf: *(struct_scsi_device)* is 3
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 5
   Number of created targets for uf: *(struct_pci_dev)* is 3
   Number of created targets for uf: *enum_ldv_24931 is 3
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *(unsigned_int)* is 31
   Number of created targets for uf: *unsigned_short_int_:_10 is 83
   Number of created targets for uf: *enum_ldv_24928 is 43
   Number of created targets for uf: *unsigned_long_int is 5
   Number of created targets for uf: *(struct_sequencer_patch)* is 7
   Number of created targets for uf: *unsigned_short_int is 321
   Number of created targets for uf: *signed_int is 31325
   Number of created targets for uf: *(char)* is 131
   Number of created targets for uf: *unsigned_char is 177472
   Number of created targets for uf: *signed_long_int is 15
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 5
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *char is 9


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          11 (count: 1023673, min: 0, max: 11, avg: 0.00)
Time for BDD node cleanup:                             0.121s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.023s
  Time for transition matches:                         3.373s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      4281995 (count: 4281995, min: 1, max: 1, avg: 1.00) [1 x 4281995]

CPA algorithm statistics
------------------------
Number of iterations:            3029760
Max size of waitlist:            1626
Average size of waitlist:        746
Number of computed successors:   3330951
Max successors for one state:    2
Number of times merged:          149553
Number of times stopped:         300001
Number of times breaked:         1

Total time for CPA algorithm:       885.548s (Max:   641.335s)
  Time for choose from waitlist:      0.975s
  Time for precision adjustment:     35.955s
  Time for transfer relation:       763.636s
  Time for merge operator:           69.625s
  Time for stop operator:             3.016s
  Time for adding to reached set:     4.770s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1
Avg. length of target path (in blocks):                   6 (count: 1, min: 6, max: 6, avg: 6.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.572s
  Counterexample analysis:                             0.215s (Max:     0.215s, Calls: 1)
    Refinement sat check:                              0.198s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.001s
  ARG update:                                          6.340s

Length of refined path (in blocks):                       5 (count: 1, min: 5, max: 5, avg: 5.00)
Number of affected states:                                3 (count: 1, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp 'true':                  1 (count: 1, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:         3 (count: 1, min: 3, max: 3, avg: 3.00)
Length (states) of path with itp 'false':                 1 (count: 1, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 1, min: 2, max: 2, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1
Number of successful refinements:     1
Number of failed refinements:         0
Max. size of reached set before ref.: 2143554
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 2143554.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:     893.299s
Time for refinements:                 7.751s
Average time for refinement:          7.751s
Max time for refinement:              7.751s

Code Coverage
-----------------------------
  Function coverage:      0.818
  Visited lines:          7053
  Total lines:            7726
  Line coverage:          0.913
  Visited conditions:     2312
  Total conditions:       2544
  Condition coverage:     0.909

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             887403
  Number of reached locations:   6157 (54%)
    Avg states per location:     144
    Max states per location:     26513 (at node N375)
  Number of reached functions:   144 (82%)
  Number of partitions:          887402
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N10839 (before line 15710), Function main called from node N10758, stack depth 1 [6a4f7c17], stack [main]])
  Number of target states:       0
  Size of final wait list        1189

Time for analysis setup:          6.584s
  Time for loading CPAs:          0.984s
  Time for loading parser:        0.476s
  Time for CFA construction:      4.952s
    Time for parsing file(s):     0.990s
    Time for AST to CFA:          1.717s
    Time for CFA sanity check:    0.547s
    Time for post-processing:     1.534s
      Time for var class.:        0.697s
Time for Analysis:              893.299s
CPU time for analysis:          893.270s
Total time for CPAchecker:      899.893s
Total CPU time for CPAchecker:  899.850s
Time for statistics:              6.767s

Time for Garbage Collector:      90.407s (in 447 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               4379MB (  4176 MiB) max;   1931MB (  1842 MiB) avg;   4437MB (  4231 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          4458MB (  4251 MiB) max;   2793MB (  2663 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8101MB (  7725 MiB) max;   8094MB (  7719 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
