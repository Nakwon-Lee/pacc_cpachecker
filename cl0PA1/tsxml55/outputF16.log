scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a3h66dpr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4782: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7112: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4749: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4673: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            773506 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  719025 (93%)
  Because of loop head:            54023 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         458 (0%)
  Times precision was empty:       74192 (10%)
  Times precision was {false}:     1671 (0%)
  Times result was cached:         692895 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4748 (1%)
  Times result was 'false':        7796 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         521573
  BDD entailment checks:           160613
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       79
Number of predicates discovered:          12
Number of abstraction locations:          346
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         2572612
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 400.78
Number of irrelevant predicates:          1128132 (44%)
Number of preds handled by boolean abs:   9572 (0%)
  Total number of models for allsat:      4724
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                 30.658s
  Time for path formula creation:       29.646s
Time for strengthen operator:            2.393s
Time for prec operator:                484.341s
  Time for abstraction:                477.465s (Max:     0.908s, Count: 773506)
    Boolean abstraction:               210.841s
    Solving time:                      261.200s (Max:     0.574s)
    Model enumeration time:             10.772s
    Time for BDD construction:           0.177s (Max:     0.012s)
Time for merge operator:                 2.355s
Time for coverage check:                 0.182s
  Time for BDD entailment checks:        0.141s
Total time for SMT solver (w/o itp):   271.973s

Number of path formula cache hits:   4989854 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.020s

Total number of created targets for pointer analysis: 893573
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(struct_hw_scatterlist)* is 4
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 4
   Number of created targets for uf: *(struct_scsi_device)* is 2
   Number of created targets for uf: *signed_int is 1111
   Number of created targets for uf: *unsigned_char is 5635
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(unsigned_char)* is 4
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 4


Number of BDD nodes:                               449
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        9675 (count: 272320, min: 0, max: 165, avg: 0.04)
Time for BDD node cleanup:                             0.046s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.640s
  Time for transition matches:                         2.006s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                      4172463 (count: 4172463, min: 1, max: 1, avg: 1.00) [1 x 4172463]

CPA algorithm statistics
------------------------
Number of iterations:            2849533
Max size of waitlist:            90
Average size of waitlist:        42
Number of computed successors:   3195447
Max successors for one state:    2
Number of times merged:          180480
Number of times stopped:         320227
Number of times breaked:         458

Total time for CPA algorithm:       688.420s (Max:    30.015s)
  Time for choose from waitlist:      0.657s
  Time for precision adjustment:    497.406s
  Time for transfer relation:       177.069s
  Time for merge operator:            3.778s
  Time for stop operator:             2.335s
  Time for adding to reached set:     2.519s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   458
Avg. length of target path (in blocks):               38728 (count: 458, min: 6, max: 270, avg: 84.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 200.645s
  Counterexample analysis:                           195.543s (Max:     1.168s, Calls: 458)
    Refinement sat check:                            177.942s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.029s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.152s
  Precision update:                                    0.315s
  ARG update:                                          4.289s

Length of refined path (in blocks):                   31826 (count: 458, min: 5, max: 210, avg: 69.49)
Number of affected states:                            22699 (count: 458, min: 1, max: 208, avg: 49.56)
Length (states) of path with itp 'true':               8669 (count: 458, min: 1, max: 115, avg: 18.93)
Length (states) of path with itp non-trivial itp:     22699 (count: 458, min: 1, max: 208, avg: 49.56)
Length (states) of path with itp 'false':               458 (count: 458, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 458, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           22241 (count: 458, min: 0, max: 207, avg: 48.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                458
Number of successful refinements:     458
Number of failed refinements:         0
Max. size of reached set before ref.: 25333
Max. size of reached set after ref.:  20695
Avg. size of reached set before ref.: 9986.98
Avg. size of reached set after ref.:  3775.97

Total time for CEGAR algorithm:     893.273s
Time for refinements:               203.838s
Average time for refinement:          0.445s
Max time for refinement:              1.175s

Code Coverage
-----------------------------
  Function coverage:      0.483
  Visited lines:          2530
  Total lines:            7726
  Line coverage:          0.327
  Visited conditions:     728
  Total conditions:       2544
  Condition coverage:     0.286

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             22783
  Number of reached locations:   2002 (18%)
    Avg states per location:     11
    Max states per location:     498 (at node N362)
  Number of reached functions:   85 (48%)
  Number of partitions:          22755
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2889 (before line 8192), Function aic7xxx_run_waiting_queues called from node N5423, stack depth 3 [5565a93e], stack [main, do_aic7xxx_isr, aic7xxx_run_waiting_queues]])
  Number of target states:       0
  Size of final wait list        67

Time for analysis setup:          7.075s
  Time for loading CPAs:          1.185s
  Time for loading parser:        0.450s
  Time for CFA construction:      5.317s
    Time for parsing file(s):     0.958s
    Time for AST to CFA:          1.937s
    Time for CFA sanity check:    0.664s
    Time for post-processing:     1.680s
      Time for var class.:        0.793s
Time for Analysis:              893.277s
CPU time for analysis:          893.140s
Total time for CPAchecker:      900.355s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.480s

Time for Garbage Collector:      32.199s (in 3642 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                210MB (   200 MiB) max;    101MB (    96 MiB) avg;    217MB (   207 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           221MB (   211 MiB) max;    151MB (   144 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8362MB (  7975 MiB) max;   8223MB (  7842 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
