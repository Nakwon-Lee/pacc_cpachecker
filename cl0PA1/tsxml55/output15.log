scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--aic7xxx_old.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4zuo9mic/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6289: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6373: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7975: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15763: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7112: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4749: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4782: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4639-4640: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4673: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4782: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23387 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21001 (90%)
  Because of loop head:            2386 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       23387 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         8942
  BDD entailment checks:           4358
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       354
Number of predicates discovered:          0

Time for post operator:                 10.879s
  Time for path formula creation:       10.814s
Time for strengthen operator:            0.176s
Time for prec operator:                  0.802s
  Time for abstraction:                  0.080s (Max:     0.008s, Count: 23387)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.909s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   14756 (14%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.847s

Total number of created targets for pointer analysis: 266573
   Number of created targets for uf: *enum_ldv_24926 is 20
   Number of created targets for uf: *(struct_aic7xxx_host)* is 4
   Number of created targets for uf: *enum_ldv_24924 is 20
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *enum_ldv_24931 is 2
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *enum_ldv_24928 is 22
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *unsigned_short_int is 80
   Number of created targets for uf: *signed_int is 51
   Number of created targets for uf: *unsigned_char is 11131
   Number of created targets for uf: *signed_long_int is 6
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 27746, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.307s
Automaton transfers with branching:                0
Automaton transfer successors:                       103751 (count: 103751, min: 1, max: 1, avg: 1.00) [1 x 103751]

CPA algorithm statistics
------------------------
Number of iterations:            75581
Max size of waitlist:            94
Average size of waitlist:        60
Number of computed successors:   82282
Max successors for one state:    2
Number of times merged:          2292
Number of times stopped:         6650
Number of times breaked:         0

Total time for CPA algorithm:        23.690s (Max:    23.690s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:      1.577s
  Time for transfer relation:        19.792s
  Time for merge operator:            1.088s
  Time for stop operator:             0.225s
  Time for adding to reached set:     0.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.261
  Visited lines:          2330
  Total lines:            7726
  Line coverage:          0.302
  Visited conditions:     540
  Total conditions:       2544
  Condition coverage:     0.212

CPAchecker general statistics
-----------------------------
Number of program locations:     11320
Number of CFA edges:             13512
Number of relevant variables:    1829
Number of functions:             176
Number of loops:                 142
Size of reached set:             75632
  Number of reached locations:   1420 (13%)
    Avg states per location:     53
    Max states per location:     3061 (at node N362)
  Number of reached functions:   46 (26%)
  Number of partitions:          75632
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        52

Time for analysis setup:          6.620s
  Time for loading CPAs:          0.985s
  Time for loading parser:        0.502s
  Time for CFA construction:      5.006s
    Time for parsing file(s):     0.896s
    Time for AST to CFA:          1.763s
    Time for CFA sanity check:    0.602s
    Time for post-processing:     1.625s
      Time for var class.:        0.765s
Time for Analysis:               23.690s
CPU time for analysis:           23.690s
Total time for CPAchecker:       30.313s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              1.110s

Time for Garbage Collector:       1.685s (in 83 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                165MB (   157 MiB) max;     80MB (    76 MiB) avg;    177MB (   169 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           207MB (   197 MiB) max;    145MB (   138 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
