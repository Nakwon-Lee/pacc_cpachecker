scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hqqr_9e6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17217 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14025 (81%)
  Because of loop head:            3106 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         86 (0%)
  Times precision was empty:       988 (6%)
  Times precision was {false}:     219 (1%)
  Times result was cached:         14416 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1594 (9%)
  Times result was 'false':        1014 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         11499
  BDD entailment checks:           3357
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          87
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         65718
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 36.25
Number of irrelevant predicates:          9661 (15%)
Number of preds handled by boolean abs:   5174 (8%)
  Total number of models for allsat:      1685
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  3.496s
  Time for path formula creation:        3.430s
Time for strengthen operator:            0.121s
Time for prec operator:                 14.710s
  Time for abstraction:                 14.348s (Max:     0.111s, Count: 17217)
    Boolean abstraction:                 8.025s
    Solving time:                        7.569s (Max:     0.095s)
    Model enumeration time:              0.771s
    Time for BDD construction:           0.133s (Max:     0.012s)
Time for merge operator:                 0.250s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     8.340s

Number of path formula cache hits:   81113 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.148s

Total number of created targets for pointer analysis: 46563
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 149
   Number of created targets for uf: *signed_int is 821
   Number of created targets for uf: *char is 7337


Number of BDD nodes:                               318
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3399 (count: 15121, min: 0, max: 280, avg: 0.22)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.268s
Automaton transfers with branching:                0
Automaton transfer successors:                        90785 (count: 90785, min: 1, max: 1, avg: 1.00) [1 x 90785]

CPA algorithm statistics
------------------------
Number of iterations:            59843
Max size of waitlist:            32
Average size of waitlist:        13
Number of computed successors:   68822
Max successors for one state:    2
Number of times merged:          4071
Number of times stopped:         6695
Number of times breaked:         86

Total time for CPA algorithm:        21.557s (Max:     1.312s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:     15.283s
  Time for transfer relation:         5.034s
  Time for merge operator:            0.355s
  Time for stop operator:             0.140s
  Time for adding to reached set:     0.170s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   86
Avg. length of target path (in blocks):                5067 (count: 86, min: 7, max: 124, avg: 58.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.690s
  Counterexample analysis:                             4.272s (Max:     0.165s, Calls: 86)
    Refinement sat check:                              3.436s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.094s
  Precision update:                                    0.049s
  ARG update:                                          0.205s

Length of refined path (in blocks):                    4532 (count: 85, min: 4, max: 94, avg: 53.32)
Number of affected states:                             4114 (count: 85, min: 3, max: 93, avg: 48.40)
Length (states) of path with itp 'true':                333 (count: 85, min: 0, max: 22, avg: 3.92)
Length (states) of path with itp non-trivial itp:      4114 (count: 85, min: 3, max: 93, avg: 48.40)
Length (states) of path with itp 'false':                85 (count: 85, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 85, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4029 (count: 85, min: 2, max: 92, avg: 47.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                86
Number of successful refinements:     85
Number of failed refinements:         0
Max. size of reached set before ref.: 2035
Max. size of reached set after ref.:  217
Avg. size of reached set before ref.: 749.59
Avg. size of reached set after ref.:  39.42

Total time for CEGAR algorithm:      26.505s
Time for refinements:                 4.929s
Average time for refinement:          0.057s
Max time for refinement:              0.179s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          964
  Total lines:            1395
  Line coverage:          0.691
  Visited conditions:     130
  Total conditions:       312
  Condition coverage:     0.417

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             1322
  Number of reached locations:   414 (22%)
    Avg states per location:     3
    Max states per location:     37 (at node N118)
  Number of reached functions:   34 (47%)
  Number of partitions:          1309
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N338 (before line 3287), Function pg_reset called from node N571, stack depth 3 [153680ed], stack [main, pg_open, pg_reset]])
  Number of target states:       1
  Size of final wait list        18

Time for analysis setup:          3.783s
  Time for loading CPAs:          0.605s
  Time for loading parser:        0.682s
  Time for CFA construction:      2.360s
    Time for parsing file(s):     0.579s
    Time for AST to CFA:          0.908s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.555s
      Time for var class.:        0.249s
Time for Analysis:               26.505s
CPU time for analysis:           26.490s
Total time for CPAchecker:       30.292s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.088s

Time for Garbage Collector:       0.439s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     46MB (    44 MiB) avg;     74MB (    70 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
