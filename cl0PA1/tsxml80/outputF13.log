scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p2bjeua4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            361462 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  288928 (80%)
  Because of loop head:            72055 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         479 (0%)
  Times precision was empty:       25514 (7%)
  Times precision was {false}:     1031 (0%)
  Times result was cached:         328537 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6380 (2%)
  Times result was 'false':        5348 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         304913
  BDD entailment checks:           83125
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          127
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         1581944
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 213.46
Number of irrelevant predicates:          1044873 (66%)
Number of preds handled by boolean abs:   21840 (1%)
  Total number of models for allsat:      6933
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                 11.594s
  Time for path formula creation:       11.073s
Time for strengthen operator:            1.182s
Time for prec operator:                 96.030s
  Time for abstraction:                 93.144s (Max:     0.233s, Count: 361462)
    Boolean abstraction:                30.517s
    Solving time:                       32.153s (Max:     0.114s)
    Model enumeration time:              2.817s
    Time for BDD construction:           0.174s (Max:     0.012s)
Time for merge operator:                 0.941s
Time for coverage check:                 0.114s
  Time for BDD entailment checks:        0.082s
Total time for SMT solver (w/o itp):    34.970s

Number of path formula cache hits:   2343774 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.298s

Total number of created targets for pointer analysis: 197515
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 807
   Number of created targets for uf: *(char)* is 121
   Number of created targets for uf: *char is 105
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               447
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13100 (count: 152277, min: 0, max: 265, avg: 0.09)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.133s
  Time for transition matches:                         1.177s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      2001380 (count: 2001380, min: 1, max: 1, avg: 1.00) [1 x 2001380]

CPA algorithm statistics
------------------------
Number of iterations:            1289708
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   1480167
Max successors for one state:    2
Number of times merged:          110894
Number of times stopped:         184437
Number of times breaked:         479

Total time for CPA algorithm:       134.437s (Max:     2.448s)
  Time for choose from waitlist:      0.419s
  Time for precision adjustment:    102.220s
  Time for transfer relation:        24.715s
  Time for merge operator:            1.901s
  Time for stop operator:             1.228s
  Time for adding to reached set:     1.245s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   479
Avg. length of target path (in blocks):               21129 (count: 479, min: 7, max: 114, avg: 44.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.049s
  Counterexample analysis:                            11.716s (Max:     0.132s, Calls: 479)
    Refinement sat check:                              9.213s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.093s
  Precision update:                                    0.241s
  ARG update:                                          1.782s

Length of refined path (in blocks):                   19988 (count: 479, min: 4, max: 94, avg: 41.73)
Number of affected states:                            10893 (count: 479, min: 3, max: 93, avg: 22.74)
Length (states) of path with itp 'true':               8616 (count: 479, min: 0, max: 41, avg: 17.99)
Length (states) of path with itp non-trivial itp:     10893 (count: 479, min: 3, max: 93, avg: 22.74)
Length (states) of path with itp 'false':               479 (count: 479, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 479, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10414 (count: 479, min: 2, max: 92, avg: 21.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                479
Number of successful refinements:     479
Number of failed refinements:         0
Max. size of reached set before ref.: 12329
Max. size of reached set after ref.:  6762
Avg. size of reached set before ref.: 6234.18
Avg. size of reached set after ref.:  3551.85

Total time for CEGAR algorithm:     151.823s
Time for refinements:                16.288s
Average time for refinement:          0.034s
Max time for refinement:              0.158s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          1165
  Total lines:            1395
  Line coverage:          0.835
  Visited conditions:     214
  Total conditions:       312
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             5547
  Number of reached locations:   624 (34%)
    Avg states per location:     8
    Max states per location:     197 (at node N117)
  Number of reached functions:   38 (53%)
  Number of partitions:          5545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [428f55e], stack [main, pg_init, pg_init_units]])
  Number of target states:       0

Time for analysis setup:          3.501s
  Time for loading CPAs:          0.571s
  Time for loading parser:        0.500s
  Time for CFA construction:      2.325s
    Time for parsing file(s):     0.608s
    Time for AST to CFA:          0.850s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.569s
      Time for var class.:        0.224s
Time for Analysis:              151.823s
CPU time for analysis:          151.780s
Time for analyzing result:        0.005s
Total time for CPAchecker:      155.327s
Total CPU time for CPAchecker:  155.280s
Time for statistics:              0.176s

Time for Garbage Collector:       8.798s (in 1091 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                134MB (   128 MiB) max;     78MB (    75 MiB) avg;    142MB (   135 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           145MB (   138 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8042MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
