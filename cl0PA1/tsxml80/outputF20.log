scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z9er_5_6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            85347 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  69089 (81%)
  Because of loop head:            16052 (19%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         206 (0%)
  Times precision was empty:       1916 (2%)
  Times precision was {false}:     331 (0%)
  Times result was cached:         79685 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3415 (4%)
  Times result was 'false':        3611 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         65275
  BDD entailment checks:           16665
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          127
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         426294
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 113.80
Number of irrelevant predicates:          23485 (6%)
Number of preds handled by boolean abs:   13430 (3%)
  Total number of models for allsat:      3691
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  6.397s
  Time for path formula creation:        6.254s
Time for strengthen operator:            0.354s
Time for prec operator:                 40.765s
  Time for abstraction:                 39.938s (Max:     0.135s, Count: 85347)
    Boolean abstraction:                18.512s
    Solving time:                       17.504s (Max:     0.121s)
    Model enumeration time:              1.649s
    Time for BDD construction:           0.122s (Max:     0.012s)
Time for merge operator:                 0.455s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):    19.153s

Number of path formula cache hits:   482912 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.444s

Total number of created targets for pointer analysis: 130748
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 325
   Number of created targets for uf: *signed_int is 2097
   Number of created targets for uf: *char is 18969
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               348
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7063 (count: 40859, min: 0, max: 290, avg: 0.17)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.627s
  Time for transition matches:                         0.318s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       465092 (count: 465092, min: 1, max: 1, avg: 1.00) [1 x 465092]

CPA algorithm statistics
------------------------
Number of iterations:            304459
Max size of waitlist:            32
Average size of waitlist:        10
Number of computed successors:   349980
Max successors for one state:    2
Number of times merged:          24305
Number of times stopped:         39324
Number of times breaked:         206

Total time for CPA algorithm:        55.517s (Max:     1.622s)
  Time for choose from waitlist:      0.129s
  Time for precision adjustment:     42.576s
  Time for transfer relation:        10.381s
  Time for merge operator:            0.771s
  Time for stop operator:             0.413s
  Time for adding to reached set:     0.404s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   206
Avg. length of target path (in blocks):               10076 (count: 206, min: 7, max: 124, avg: 48.91)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.806s
  Counterexample analysis:                             7.919s (Max:     0.185s, Calls: 206)
    Refinement sat check:                              6.326s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.124s
  ARG update:                                          0.541s

Length of refined path (in blocks):                    8821 (count: 206, min: 4, max: 94, avg: 42.82)
Number of affected states:                             8150 (count: 206, min: 3, max: 93, avg: 39.56)
Length (states) of path with itp 'true':                465 (count: 206, min: 0, max: 22, avg: 2.26)
Length (states) of path with itp non-trivial itp:      8150 (count: 206, min: 3, max: 93, avg: 39.56)
Length (states) of path with itp 'false':               206 (count: 206, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 206, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7944 (count: 206, min: 2, max: 92, avg: 38.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                206
Number of successful refinements:     206
Number of failed refinements:         0
Max. size of reached set before ref.: 4037
Max. size of reached set after ref.:  217
Avg. size of reached set before ref.: 1484.89
Avg. size of reached set after ref.:  21.30

Total time for CEGAR algorithm:      64.634s
Time for refinements:                 9.103s
Average time for refinement:          0.044s
Max time for refinement:              0.192s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          1165
  Total lines:            1395
  Line coverage:          0.835
  Visited conditions:     214
  Total conditions:       312
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             5547
  Number of reached locations:   624 (34%)
    Avg states per location:     8
    Max states per location:     197 (at node N117)
  Number of reached functions:   38 (53%)
  Number of partitions:          5545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [7380fa6f], stack [main, pg_init, pg_init_units]])
  Number of target states:       0

Time for analysis setup:          3.433s
  Time for loading CPAs:          0.767s
  Time for loading parser:        0.442s
  Time for CFA construction:      2.128s
    Time for parsing file(s):     0.544s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.115s
    Time for post-processing:     0.509s
      Time for var class.:        0.227s
Time for Analysis:               64.634s
CPU time for analysis:           64.630s
Time for analyzing result:        0.005s
Total time for CPAchecker:       68.070s
Total CPU time for CPAchecker:   68.060s
Time for statistics:              0.159s

Time for Garbage Collector:       1.914s (in 303 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     56MB (    53 MiB) avg;     94MB (    90 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8015MB (  7644 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
