scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z6l4f41i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            22464 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  18270 (81%)
  Because of loop head:            4095 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         99 (0%)
  Times precision was empty:       1106 (5%)
  Times precision was {false}:     236 (1%)
  Times result was cached:         19217 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1905 (8%)
  Times result was 'false':        1244 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         15545
  BDD entailment checks:           4359
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          90
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         90546
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 42.29
Number of irrelevant predicates:          10977 (12%)
Number of preds handled by boolean abs:   6721 (7%)
  Total number of models for allsat:      2052
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  3.219s
  Time for path formula creation:        3.117s
Time for strengthen operator:            0.117s
Time for prec operator:                 15.722s
  Time for abstraction:                 15.391s (Max:     0.097s, Count: 22464)
    Boolean abstraction:                 8.703s
    Solving time:                        8.148s (Max:     0.093s)
    Model enumeration time:              0.780s
    Time for BDD construction:           0.093s (Max:     0.008s)
Time for merge operator:                 0.259s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     8.931s

Number of path formula cache hits:   112356 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.789s

Total number of created targets for pointer analysis: 51155
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 165
   Number of created targets for uf: *signed_int is 643
   Number of created targets for uf: *char is 7785


Number of BDD nodes:                               331
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3962 (count: 18194, min: 0, max: 282, avg: 0.22)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.254s
Automaton transfers with branching:                0
Automaton transfer successors:                       119482 (count: 119482, min: 1, max: 1, avg: 1.00) [1 x 119482]

CPA algorithm statistics
------------------------
Number of iterations:            78482
Max size of waitlist:            32
Average size of waitlist:        13
Number of computed successors:   90263
Max successors for one state:    2
Number of times merged:          5593
Number of times stopped:         9109
Number of times breaked:         99

Total time for CPA algorithm:        22.317s (Max:     1.298s)
  Time for choose from waitlist:      0.083s
  Time for precision adjustment:     16.391s
  Time for transfer relation:         4.779s
  Time for merge operator:            0.365s
  Time for stop operator:             0.156s
  Time for adding to reached set:     0.136s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   99
Avg. length of target path (in blocks):                5619 (count: 99, min: 7, max: 124, avg: 56.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.539s
  Counterexample analysis:                             4.110s (Max:     0.178s, Calls: 99)
    Refinement sat check:                              3.350s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.053s
  Precision update:                                    0.087s
  ARG update:                                          0.185s

Length of refined path (in blocks):                    5051 (count: 99, min: 4, max: 94, avg: 51.02)
Number of affected states:                             4574 (count: 99, min: 3, max: 93, avg: 46.20)
Length (states) of path with itp 'true':                378 (count: 99, min: 0, max: 22, avg: 3.82)
Length (states) of path with itp non-trivial itp:      4574 (count: 99, min: 3, max: 93, avg: 46.20)
Length (states) of path with itp 'false':                99 (count: 99, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 99, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4475 (count: 99, min: 2, max: 92, avg: 45.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                99
Number of successful refinements:     99
Number of failed refinements:         0
Max. size of reached set before ref.: 2384
Max. size of reached set after ref.:  217
Avg. size of reached set before ref.: 831.24
Avg. size of reached set after ref.:  38.44

Total time for CEGAR algorithm:      27.024s
Time for refinements:                 4.702s
Average time for refinement:          0.047s
Max time for refinement:              0.184s

Code Coverage
-----------------------------
  Function coverage:      0.458
  Visited lines:          978
  Total lines:            1395
  Line coverage:          0.701
  Visited conditions:     136
  Total conditions:       312
  Condition coverage:     0.436

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             1423
  Number of reached locations:   423 (23%)
    Avg states per location:     3
    Max states per location:     50 (at node N118)
  Number of reached functions:   33 (46%)
  Number of partitions:          1414
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [2839d77f], stack [main, pg_init, pg_init_units]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          2.840s
  Time for loading CPAs:          0.514s
  Time for loading parser:        0.420s
  Time for CFA construction:      1.800s
    Time for parsing file(s):     0.516s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.371s
      Time for var class.:        0.179s
Time for Analysis:               27.024s
CPU time for analysis:           27.020s
Total time for CPAchecker:       29.867s
Total CPU time for CPAchecker:   29.870s
Time for statistics:              0.047s

Time for Garbage Collector:       0.441s (in 78 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     48MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8012MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
