scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fdw99xc4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            224320 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  179838 (80%)
  Because of loop head:            44011 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         471 (0%)
  Times precision was empty:       22310 (10%)
  Times precision was {false}:     896 (0%)
  Times result was cached:         195460 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5654 (3%)
  Times result was 'false':        4871 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         158617
  BDD entailment checks:           59173
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          127
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         924342
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 141.12
Number of irrelevant predicates:          226135 (24%)
Number of preds handled by boolean abs:   19198 (2%)
  Total number of models for allsat:      6082
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.08

Time for post operator:                  9.796s
  Time for path formula creation:        9.383s
Time for strengthen operator:            0.824s
Time for prec operator:                 76.596s
  Time for abstraction:                 74.624s (Max:     0.186s, Count: 224320)
    Boolean abstraction:                28.894s
    Solving time:                       31.332s (Max:     0.102s)
    Model enumeration time:              2.285s
    Time for BDD construction:           0.217s (Max:     0.012s)
Time for merge operator:                 0.462s
Time for coverage check:                 0.113s
  Time for BDD entailment checks:        0.100s
Total time for SMT solver (w/o itp):    33.617s

Number of path formula cache hits:   1395575 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.105s

Total number of created targets for pointer analysis: 195911
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 9815
   Number of created targets for uf: *(char)* is 113
   Number of created targets for uf: *char is 6049
   Number of created targets for uf: *unsigned_long_int is 209


Number of BDD nodes:                               441
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11605 (count: 120269, min: 0, max: 180, avg: 0.10)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.411s
  Time for transition matches:                         0.805s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1225839 (count: 1225839, min: 1, max: 1, avg: 1.00) [1 x 1225839]

CPA algorithm statistics
------------------------
Number of iterations:            766707
Max size of waitlist:            102
Average size of waitlist:        40
Number of computed successors:   871978
Max successors for one state:    2
Number of times merged:          49722
Number of times stopped:         87365
Number of times breaked:         471

Total time for CPA algorithm:       104.199s (Max:     2.417s)
  Time for choose from waitlist:      0.349s
  Time for precision adjustment:     80.684s
  Time for transfer relation:        18.673s
  Time for merge operator:            1.103s
  Time for stop operator:             0.858s
  Time for adding to reached set:     0.841s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   471
Avg. length of target path (in blocks):               14550 (count: 471, min: 7, max: 80, avg: 30.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.332s
  Counterexample analysis:                             8.589s (Max:     0.135s, Calls: 471)
    Refinement sat check:                              6.865s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.128s
  Precision update:                                    0.242s
  ARG update:                                          1.170s

Length of refined path (in blocks):                   13744 (count: 471, min: 4, max: 70, avg: 29.18)
Number of affected states:                             8589 (count: 471, min: 3, max: 69, avg: 18.24)
Length (states) of path with itp 'true':               4684 (count: 471, min: 0, max: 23, avg: 9.94)
Length (states) of path with itp non-trivial itp:      8589 (count: 471, min: 3, max: 69, avg: 18.24)
Length (states) of path with itp 'false':               471 (count: 471, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 471, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            8118 (count: 471, min: 2, max: 68, avg: 17.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                471
Number of successful refinements:     471
Number of failed refinements:         0
Max. size of reached set before ref.: 8583
Max. size of reached set after ref.:  7801
Avg. size of reached set before ref.: 2793.93
Avg. size of reached set after ref.:  1150.21

Total time for CEGAR algorithm:     115.827s
Time for refinements:                11.258s
Average time for refinement:          0.023s
Max time for refinement:              0.161s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          1165
  Total lines:            1395
  Line coverage:          0.835
  Visited conditions:     214
  Total conditions:       312
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             5547
  Number of reached locations:   624 (34%)
    Avg states per location:     8
    Max states per location:     197 (at node N117)
  Number of reached functions:   38 (53%)
  Number of partitions:          5545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [5d780db], stack [main, pg_init, pg_init_units]])
  Number of target states:       0

Time for analysis setup:          4.106s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.522s
  Time for CFA construction:      2.683s
    Time for parsing file(s):     0.898s
    Time for AST to CFA:          0.943s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.533s
      Time for var class.:        0.244s
Time for Analysis:              115.827s
CPU time for analysis:          115.810s
Time for analyzing result:        0.005s
Total time for CPAchecker:      119.940s
Total CPU time for CPAchecker:  119.920s
Time for statistics:              0.153s

Time for Garbage Collector:       4.957s (in 693 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     69MB (    66 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8156MB (  7778 MiB) max;   8101MB (  7726 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
