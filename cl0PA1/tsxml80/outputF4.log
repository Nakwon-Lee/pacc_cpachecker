scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tnmf245v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            94435 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  73735 (78%)
  Because of loop head:            20302 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         398 (0%)
  Times precision was empty:       4748 (5%)
  Times precision was {false}:     464 (0%)
  Times result was cached:         86378 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2845 (3%)
  Times result was 'false':        3911 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         59959
  BDD entailment checks:           21579
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          127
Max number of predicates per location:    6
Avg number of predicates per location:    5
Total predicates per abstraction:         435300
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 131.55
Number of irrelevant predicates:          56619 (13%)
Number of preds handled by boolean abs:   9628 (2%)
  Total number of models for allsat:      2961
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  4.754s
  Time for path formula creation:        4.520s
Time for strengthen operator:            0.305s
Time for prec operator:                 38.686s
  Time for abstraction:                 37.864s (Max:     0.133s, Count: 94435)
    Boolean abstraction:                16.029s
    Solving time:                       18.815s (Max:     0.122s)
    Model enumeration time:              0.897s
    Time for BDD construction:           0.118s (Max:     0.009s)
Time for merge operator:                 0.281s
Time for coverage check:                 0.048s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):    19.712s

Number of path formula cache hits:   567244 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.594s

Total number of created targets for pointer analysis: 50874
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 2289
   Number of created targets for uf: *(char)* is 49
   Number of created targets for uf: *char is 2465
   Number of created targets for uf: *unsigned_long_int is 145


Number of BDD nodes:                               355
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5943 (count: 45858, min: 0, max: 195, avg: 0.13)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.768s
  Time for transition matches:                         0.338s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                       509796 (count: 509796, min: 1, max: 1, avg: 1.00) [1 x 509796]

CPA algorithm statistics
------------------------
Number of iterations:            329026
Max size of waitlist:            49
Average size of waitlist:        14
Number of computed successors:   374286
Max successors for one state:    2
Number of times merged:          19190
Number of times stopped:         35810
Number of times breaked:         398

Total time for CPA algorithm:        51.765s (Max:     1.295s)
  Time for choose from waitlist:      0.164s
  Time for precision adjustment:     40.340s
  Time for transfer relation:         8.849s
  Time for merge operator:            0.601s
  Time for stop operator:             0.369s
  Time for adding to reached set:     0.426s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   398
Avg. length of target path (in blocks):               14747 (count: 398, min: 7, max: 85, avg: 37.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.689s
  Counterexample analysis:                             7.702s (Max:     0.079s, Calls: 398)
    Refinement sat check:                              6.071s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.119s
  Precision update:                                    0.220s
  ARG update:                                          0.506s

Length of refined path (in blocks):                   13974 (count: 398, min: 4, max: 74, avg: 35.11)
Number of affected states:                            10164 (count: 398, min: 3, max: 73, avg: 25.54)
Length (states) of path with itp 'true':               3412 (count: 398, min: 0, max: 20, avg: 8.57)
Length (states) of path with itp non-trivial itp:     10164 (count: 398, min: 3, max: 73, avg: 25.54)
Length (states) of path with itp 'false':               398 (count: 398, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 398, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9766 (count: 398, min: 2, max: 72, avg: 24.54)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                398
Number of successful refinements:     398
Number of failed refinements:         0
Max. size of reached set before ref.: 3496
Max. size of reached set after ref.:  1583
Avg. size of reached set before ref.: 1410.65
Avg. size of reached set after ref.:  583.97

Total time for CEGAR algorithm:      61.030s
Time for refinements:                 9.135s
Average time for refinement:          0.022s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.528
  Visited lines:          1165
  Total lines:            1395
  Line coverage:          0.835
  Visited conditions:     214
  Total conditions:       312
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             5547
  Number of reached locations:   624 (34%)
    Avg states per location:     8
    Max states per location:     197 (at node N117)
  Number of reached functions:   38 (53%)
  Number of partitions:          5545
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [72885fc3], stack [main, pg_init, pg_init_units]])
  Number of target states:       0

Time for analysis setup:          2.951s
  Time for loading CPAs:          0.570s
  Time for loading parser:        0.486s
  Time for CFA construction:      1.789s
    Time for parsing file(s):     0.530s
    Time for AST to CFA:          0.621s
    Time for CFA sanity check:    0.097s
    Time for post-processing:     0.401s
      Time for var class.:        0.170s
Time for Analysis:               61.030s
CPU time for analysis:           61.030s
Time for analyzing result:        0.003s
Total time for CPAchecker:       63.984s
Total CPU time for CPAchecker:   63.980s
Time for statistics:              0.106s

Time for Garbage Collector:       1.448s (in 300 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     53MB (    50 MiB) avg;     83MB (    79 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   8014MB (  7643 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
