scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o42ojwu0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16141 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13190 (82%)
  Because of loop head:            2813 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         138 (1%)
  Times precision was empty:       2822 (17%)
  Times precision was {false}:     494 (3%)
  Times result was cached:         10953 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1872 (12%)
  Times result was 'false':        434 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         13392
  BDD entailment checks:           3578
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          76
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         44526
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 18.82
Number of irrelevant predicates:          14866 (33%)
Number of preds handled by boolean abs:   4710 (11%)
  Total number of models for allsat:      1911
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.263s
  Time for path formula creation:        3.224s
Time for strengthen operator:            0.158s
Time for prec operator:                 16.816s
  Time for abstraction:                 16.508s (Max:     0.079s, Count: 16141)
    Boolean abstraction:                 8.186s
    Solving time:                       10.783s (Max:     0.075s)
    Model enumeration time:              0.490s
    Time for BDD construction:           0.113s (Max:     0.010s)
Time for merge operator:                 0.108s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):    11.274s

Number of path formula cache hits:   93761 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.997s

Total number of created targets for pointer analysis: 34310
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 1258
   Number of created targets for uf: *(char)* is 117
   Number of created targets for uf: *char is 1509
   Number of created targets for uf: *unsigned_long_int is 49


Number of BDD nodes:                               273
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3830 (count: 20175, min: 0, max: 270, avg: 0.19)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.263s
Automaton transfers with branching:                0
Automaton transfer successors:                        98802 (count: 98802, min: 1, max: 1, avg: 1.00) [1 x 98802]

CPA algorithm statistics
------------------------
Number of iterations:            61034
Max size of waitlist:            37
Average size of waitlist:        17
Number of computed successors:   70599
Max successors for one state:    2
Number of times merged:          4907
Number of times stopped:         7367
Number of times breaked:         138

Total time for CPA algorithm:        23.169s (Max:     0.748s)
  Time for choose from waitlist:      0.074s
  Time for precision adjustment:     17.317s
  Time for transfer relation:         4.753s
  Time for merge operator:            0.268s
  Time for stop operator:             0.180s
  Time for adding to reached set:     0.176s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   138
Avg. length of target path (in blocks):                4794 (count: 138, min: 12, max: 73, avg: 34.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.164s
  Counterexample analysis:                             3.742s (Max:     0.087s, Calls: 138)
    Refinement sat check:                              2.989s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.106s
  ARG update:                                          0.172s

Length of refined path (in blocks):                    4533 (count: 138, min: 4, max: 63, avg: 32.85)
Number of affected states:                             2763 (count: 138, min: 3, max: 62, avg: 20.02)
Length (states) of path with itp 'true':               1632 (count: 138, min: 0, max: 51, avg: 11.83)
Length (states) of path with itp non-trivial itp:      2763 (count: 138, min: 3, max: 62, avg: 20.02)
Length (states) of path with itp 'false':               138 (count: 138, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 138, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2625 (count: 138, min: 2, max: 61, avg: 19.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                138
Number of successful refinements:     138
Number of failed refinements:         0
Max. size of reached set before ref.: 1646
Max. size of reached set after ref.:  1047
Avg. size of reached set before ref.: 722.36
Avg. size of reached set after ref.:  273.25

Total time for CEGAR algorithm:      27.553s
Time for refinements:                 4.354s
Average time for refinement:          0.031s
Max time for refinement:              0.091s

Code Coverage
-----------------------------
  Function coverage:      0.472
  Visited lines:          999
  Total lines:            1395
  Line coverage:          0.716
  Visited conditions:     154
  Total conditions:       312
  Condition coverage:     0.494

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             821
  Number of reached locations:   446 (24%)
    Avg states per location:     1
    Max states per location:     13 (at node N117)
  Number of reached functions:   34 (47%)
  Number of partitions:          812
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N646 (before line 3636), Function pg_write called from node N920, stack depth 2 [738073dd], stack [main, pg_write]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          2.789s
  Time for loading CPAs:          0.549s
  Time for loading parser:        0.420s
  Time for CFA construction:      1.745s
    Time for parsing file(s):     0.520s
    Time for AST to CFA:          0.610s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.382s
      Time for var class.:        0.172s
Time for Analysis:               27.553s
CPU time for analysis:           27.540s
Total time for CPAchecker:       30.344s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.052s

Time for Garbage Collector:       0.384s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     47MB (    45 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   8012MB (  7641 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
