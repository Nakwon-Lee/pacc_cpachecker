scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jrhqdlhh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            35952 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28215 (78%)
  Because of loop head:            7261 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         476 (1%)
  Times precision was empty:       5462 (15%)
  Times precision was {false}:     174 (0%)
  Times result was cached:         29202 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1114 (3%)
  Times result was 'false':        2703 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         26007
  BDD entailment checks:           9919
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          100
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         117755
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 91.42
Number of irrelevant predicates:          22445 (19%)
Number of preds handled by boolean abs:   3321 (3%)
  Total number of models for allsat:      1163
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.446s
  Time for path formula creation:        1.359s
Time for strengthen operator:            0.181s
Time for prec operator:                  9.158s
  Time for abstraction:                  8.677s (Max:     0.050s, Count: 35952)
    Boolean abstraction:                 2.701s
    Solving time:                        2.526s (Max:     0.047s)
    Model enumeration time:              0.176s
    Time for BDD construction:           0.071s (Max:     0.007s)
Time for merge operator:                 0.100s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     2.702s

Number of path formula cache hits:   222334 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.957s

Total number of created targets for pointer analysis: 2990
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 37
   Number of created targets for uf: *signed_int is 357
   Number of created targets for uf: *char is 225
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               268
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2389 (count: 23030, min: 0, max: 183, avg: 0.10)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.392s
Automaton transfers with branching:                0
Automaton transfer successors:                       188779 (count: 188779, min: 1, max: 1, avg: 1.00) [1 x 188779]

CPA algorithm statistics
------------------------
Number of iterations:            131500
Max size of waitlist:            22
Average size of waitlist:        13
Number of computed successors:   150669
Max successors for one state:    2
Number of times merged:          8044
Number of times stopped:         14920
Number of times breaked:         476

Total time for CPA algorithm:        14.790s (Max:     0.611s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:     10.059s
  Time for transfer relation:         3.532s
  Time for merge operator:            0.266s
  Time for stop operator:             0.253s
  Time for adding to reached set:     0.154s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   476
Avg. length of target path (in blocks):               20230 (count: 476, min: 7, max: 75, avg: 42.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.159s
  Counterexample analysis:                            10.305s (Max:     0.076s, Calls: 476)
    Refinement sat check:                              8.208s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.099s
  Precision update:                                    0.236s
  ARG update:                                          0.299s

Length of refined path (in blocks):                   19749 (count: 476, min: 4, max: 74, avg: 41.49)
Number of affected states:                             7648 (count: 476, min: 3, max: 72, avg: 16.07)
Length (states) of path with itp 'true':              11625 (count: 476, min: 0, max: 41, avg: 24.42)
Length (states) of path with itp non-trivial itp:      7648 (count: 476, min: 3, max: 72, avg: 16.07)
Length (states) of path with itp 'false':               476 (count: 476, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 476, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7172 (count: 476, min: 2, max: 71, avg: 15.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                476
Number of successful refinements:     476
Number of failed refinements:         0
Max. size of reached set before ref.: 1624
Max. size of reached set after ref.:  670
Avg. size of reached set before ref.: 712.80
Avg. size of reached set after ref.:  434.38

Total time for CEGAR algorithm:      26.519s
Time for refinements:                11.567s
Average time for refinement:          0.024s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.361
  Visited lines:          819
  Total lines:            1395
  Line coverage:          0.587
  Visited conditions:     92
  Total conditions:       312
  Condition coverage:     0.295

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             521
  Number of reached locations:   297 (16%)
    Avg states per location:     1
    Max states per location:     9 (at node N293)
  Number of reached functions:   26 (36%)
  Number of partitions:          514
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N875 (before line 3906), Function main called from node N854, stack depth 1 [cf65451], stack [main]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          3.272s
  Time for loading CPAs:          0.623s
  Time for loading parser:        0.497s
  Time for CFA construction:      2.068s
    Time for parsing file(s):     0.655s
    Time for AST to CFA:          0.767s
    Time for CFA sanity check:    0.111s
    Time for post-processing:     0.386s
      Time for var class.:        0.174s
Time for Analysis:               26.520s
CPU time for analysis:           26.510s
Total time for CPAchecker:       29.794s
Total CPU time for CPAchecker:   29.780s
Time for statistics:              0.059s

Time for Garbage Collector:       0.443s (in 94 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     45MB (    43 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
