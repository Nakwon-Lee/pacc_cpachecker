scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yc9cq_h0/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19575 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16176 (83%)
  Because of loop head:            3309 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       1031 (5%)
  Times precision was {false}:     231 (1%)
  Times result was cached:         16680 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1633 (8%)
  Times result was 'false':        1175 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         13117
  BDD entailment checks:           3655
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          89
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         76828
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 41.22
Number of irrelevant predicates:          10359 (13%)
Number of preds handled by boolean abs:   5310 (7%)
  Total number of models for allsat:      1724
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  3.210s
  Time for path formula creation:        3.134s
Time for strengthen operator:            0.124s
Time for prec operator:                 15.306s
  Time for abstraction:                 14.957s (Max:     0.083s, Count: 19575)
    Boolean abstraction:                 8.244s
    Solving time:                        7.728s (Max:     0.069s)
    Model enumeration time:              0.757s
    Time for BDD construction:           0.116s (Max:     0.012s)
Time for merge operator:                 0.244s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     8.486s

Number of path formula cache hits:   96259 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.814s

Total number of created targets for pointer analysis: 47287
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 646
   Number of created targets for uf: *(char)* is 157
   Number of created targets for uf: *char is 4735


Number of BDD nodes:                               324
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3484 (count: 15758, min: 0, max: 304, avg: 0.22)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.335s
Automaton transfers with branching:                0
Automaton transfer successors:                       103130 (count: 103130, min: 1, max: 1, avg: 1.00) [1 x 103130]

CPA algorithm statistics
------------------------
Number of iterations:            67639
Max size of waitlist:            34
Average size of waitlist:        14
Number of computed successors:   77819
Max successors for one state:    2
Number of times merged:          4731
Number of times stopped:         7608
Number of times breaked:         90

Total time for CPA algorithm:        21.983s (Max:     1.167s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:     15.894s
  Time for transfer relation:         4.859s
  Time for merge operator:            0.388s
  Time for stop operator:             0.165s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                5319 (count: 90, min: 7, max: 124, avg: 59.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.779s
  Counterexample analysis:                             4.347s (Max:     0.140s, Calls: 90)
    Refinement sat check:                              3.432s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.092s
  ARG update:                                          0.210s

Length of refined path (in blocks):                    4789 (count: 90, min: 4, max: 94, avg: 53.21)
Number of affected states:                             4329 (count: 90, min: 3, max: 93, avg: 48.10)
Length (states) of path with itp 'true':                370 (count: 90, min: 0, max: 22, avg: 4.11)
Length (states) of path with itp non-trivial itp:      4329 (count: 90, min: 3, max: 93, avg: 48.10)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 90, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4239 (count: 90, min: 2, max: 92, avg: 47.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 1977
Max. size of reached set after ref.:  171
Avg. size of reached set before ref.: 787.64
Avg. size of reached set after ref.:  33.03

Total time for CEGAR algorithm:      26.936s
Time for refinements:                 4.941s
Average time for refinement:          0.054s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.458
  Visited lines:          972
  Total lines:            1395
  Line coverage:          0.697
  Visited conditions:     134
  Total conditions:       312
  Condition coverage:     0.429

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             1121
  Number of reached locations:   416 (22%)
    Avg states per location:     2
    Max states per location:     35 (at node N117)
  Number of reached functions:   33 (46%)
  Number of partitions:          1119
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [180caedb], stack [main, pg_init, pg_init_units]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.391s
  Time for loading CPAs:          0.722s
  Time for loading parser:        0.423s
  Time for CFA construction:      2.160s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.746s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.495s
      Time for var class.:        0.209s
Time for Analysis:               26.936s
CPU time for analysis:           26.940s
Total time for CPAchecker:       30.330s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.090s

Time for Garbage Collector:       0.460s (in 69 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    67 MiB) max;     46MB (    44 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
