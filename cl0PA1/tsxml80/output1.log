scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6k0jt2g1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44898 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  35290 (79%)
  Because of loop head:            9042 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         566 (1%)
  Times precision was empty:       6855 (15%)
  Times precision was {false}:     189 (0%)
  Times result was cached:         36562 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1292 (3%)
  Times result was 'false':        3208 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         32998
  BDD entailment checks:           12398
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          8
Number of abstraction locations:          110
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         149871
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 101.20
Number of irrelevant predicates:          21868 (15%)
Number of preds handled by boolean abs:   3755 (3%)
  Total number of models for allsat:      1345
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  1.521s
  Time for path formula creation:        1.429s
Time for strengthen operator:            0.197s
Time for prec operator:                  9.426s
  Time for abstraction:                  9.016s (Max:     0.100s, Count: 44898)
    Boolean abstraction:                 2.986s
    Solving time:                        2.827s (Max:     0.097s)
    Model enumeration time:              0.172s
    Time for BDD construction:           0.092s (Max:     0.012s)
Time for merge operator:                 0.095s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     2.999s

Number of path formula cache hits:   280255 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.043s

Total number of created targets for pointer analysis: 3078
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 37
   Number of created targets for uf: *signed_int is 357
   Number of created targets for uf: *char is 225
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               289
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2716 (count: 28046, min: 0, max: 190, avg: 0.10)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.348s
Automaton transfers with branching:                0
Automaton transfer successors:                       236548 (count: 236548, min: 1, max: 1, avg: 1.00) [1 x 236548]

CPA algorithm statistics
------------------------
Number of iterations:            164507
Max size of waitlist:            22
Average size of waitlist:        13
Number of computed successors:   188549
Max successors for one state:    2
Number of times merged:          10300
Number of times stopped:         18993
Number of times breaked:         566

Total time for CPA algorithm:        14.942s (Max:     0.596s)
  Time for choose from waitlist:      0.092s
  Time for precision adjustment:     10.283s
  Time for transfer relation:         3.460s
  Time for merge operator:            0.240s
  Time for stop operator:             0.242s
  Time for adding to reached set:     0.200s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   566
Avg. length of target path (in blocks):               23661 (count: 566, min: 7, max: 75, avg: 41.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.571s
  Counterexample analysis:                            10.776s (Max:     0.064s, Calls: 566)
    Refinement sat check:                              8.676s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.092s
  Precision update:                                    0.244s
  ARG update:                                          0.285s

Length of refined path (in blocks):                   23040 (count: 565, min: 4, max: 74, avg: 40.78)
Number of affected states:                             8687 (count: 565, min: 3, max: 72, avg: 15.38)
Length (states) of path with itp 'true':              13788 (count: 565, min: 0, max: 41, avg: 24.40)
Length (states) of path with itp non-trivial itp:      8687 (count: 565, min: 3, max: 72, avg: 15.38)
Length (states) of path with itp 'false':               565 (count: 565, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 565, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            8122 (count: 565, min: 2, max: 71, avg: 14.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                566
Number of successful refinements:     565
Number of failed refinements:         0
Max. size of reached set before ref.: 1659
Max. size of reached set after ref.:  765
Avg. size of reached set before ref.: 733.25
Avg. size of reached set after ref.:  440.13

Total time for CEGAR algorithm:      27.027s
Time for refinements:                11.950s
Average time for refinement:          0.021s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          920
  Total lines:            1395
  Line coverage:          0.659
  Visited conditions:     118
  Total conditions:       312
  Condition coverage:     0.378

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             700
  Number of reached locations:   387 (21%)
    Avg states per location:     1
    Max states per location:     9 (at node N293)
  Number of reached functions:   36 (50%)
  Number of partitions:          694
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [56250837], stack [main, pg_init, pg_init_units]])
  Number of target states:       1
  Size of final wait list        15

Time for analysis setup:          2.805s
  Time for loading CPAs:          0.521s
  Time for loading parser:        0.435s
  Time for CFA construction:      1.752s
    Time for parsing file(s):     0.511s
    Time for AST to CFA:          0.612s
    Time for CFA sanity check:    0.089s
    Time for post-processing:     0.405s
      Time for var class.:        0.190s
Time for Analysis:               27.028s
CPU time for analysis:           27.030s
Total time for CPAchecker:       29.835s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.080s

Time for Garbage Collector:       0.427s (in 115 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     45MB (    43 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
