scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_inpcg39u/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            56193 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  44204 (79%)
  Because of loop head:            11792 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         197 (0%)
  Times precision was empty:       16340 (29%)
  Times precision was {false}:     405 (1%)
  Times result was cached:         38154 (68%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1294 (2%)
  Times result was 'false':        1436 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         35217
  BDD entailment checks:           15861
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          9
Number of abstraction locations:          95
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         160221
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 94.30
Number of irrelevant predicates:          67891 (42%)
Number of preds handled by boolean abs:   3182 (2%)
  Total number of models for allsat:      1327
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  3.212s
  Time for path formula creation:        3.077s
Time for strengthen operator:            0.237s
Time for prec operator:                 14.714s
  Time for abstraction:                 14.129s (Max:     0.061s, Count: 56193)
    Boolean abstraction:                 4.755s
    Solving time:                        5.852s (Max:     0.043s)
    Model enumeration time:              0.229s
    Time for BDD construction:           0.077s (Max:     0.009s)
Time for merge operator:                 0.161s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     6.081s

Number of path formula cache hits:   363402 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.446s

Total number of created targets for pointer analysis: 42005
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 2912
   Number of created targets for uf: *(char)* is 61
   Number of created targets for uf: *char is 2729
   Number of created targets for uf: *unsigned_long_int is 57


Number of BDD nodes:                               291
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2707 (count: 42068, min: 0, max: 178, avg: 0.06)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.502s
  Time for transition matches:                         0.273s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       318336 (count: 318336, min: 1, max: 1, avg: 1.00) [1 x 318336]

CPA algorithm statistics
------------------------
Number of iterations:            193778
Max size of waitlist:            102
Average size of waitlist:        36
Number of computed successors:   219239
Max successors for one state:    2
Number of times merged:          9678
Number of times stopped:         18655
Number of times breaked:         197

Total time for CPA algorithm:        23.567s (Max:     0.604s)
  Time for choose from waitlist:      0.107s
  Time for precision adjustment:     15.838s
  Time for transfer relation:         6.156s
  Time for merge operator:            0.362s
  Time for stop operator:             0.263s
  Time for adding to reached set:     0.243s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   197
Avg. length of target path (in blocks):                4668 (count: 197, min: 7, max: 36, avg: 23.70)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.033s
  Counterexample analysis:                             2.377s (Max:     0.042s, Calls: 197)
    Refinement sat check:                              1.923s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.146s
  ARG update:                                          0.361s

Length of refined path (in blocks):                    4415 (count: 197, min: 4, max: 35, avg: 22.41)
Number of affected states:                             2587 (count: 197, min: 3, max: 33, avg: 13.13)
Length (states) of path with itp 'true':               1631 (count: 197, min: 0, max: 16, avg: 8.28)
Length (states) of path with itp non-trivial itp:      2587 (count: 197, min: 3, max: 33, avg: 13.13)
Length (states) of path with itp 'false':               197 (count: 197, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 197, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2390 (count: 197, min: 2, max: 32, avg: 12.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                197
Number of successful refinements:     197
Number of failed refinements:         0
Max. size of reached set before ref.: 3711
Max. size of reached set after ref.:  2877
Avg. size of reached set before ref.: 1730.41
Avg. size of reached set after ref.:  733.97

Total time for CEGAR algorithm:      26.974s
Time for refinements:                 3.295s
Average time for refinement:          0.016s
Max time for refinement:              0.053s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1112
  Total lines:            1395
  Line coverage:          0.797
  Visited conditions:     196
  Total conditions:       312
  Condition coverage:     0.628

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             2848
  Number of reached locations:   575 (31%)
    Avg states per location:     4
    Max states per location:     53 (at node N124)
  Number of reached functions:   36 (50%)
  Number of partitions:          2809
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N523 (before line 3490), Function pg_detect called from node N754, stack depth 3 [21642818], stack [main, pg_init, pg_detect]])
  Number of target states:       0
  Size of final wait list        55

Time for analysis setup:          2.870s
  Time for loading CPAs:          0.564s
  Time for loading parser:        0.453s
  Time for CFA construction:      1.766s
    Time for parsing file(s):     0.535s
    Time for AST to CFA:          0.601s
    Time for CFA sanity check:    0.101s
    Time for post-processing:     0.405s
      Time for var class.:        0.186s
Time for Analysis:               26.975s
CPU time for analysis:           26.980s
Total time for CPAchecker:       29.847s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.077s

Time for Garbage Collector:       0.635s (in 145 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     47MB (    45 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
