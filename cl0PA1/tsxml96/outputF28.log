scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--net--ethernet--qlogic--qlge--qlge.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zh9t0l5h/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 10690-10705: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 10692: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10695: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10697: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 10701: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

lines 10710-10725: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 10712: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10715: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10717: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 10721: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 10732: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10735: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10741: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

lines 10750-10765: Dead code detected: switch (4UL) (CFACreationUtils.addEdgeToCFA, INFO)

line 10752: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10755: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10757: Dead code detected:  (CFACreationUtils.addEdgeToCFA, INFO)

line 10761: Dead code detected: __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      default:
      __bad_percpu_size();
      } (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
      case 1UL: ;
      switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "m" (cpu_number));
      goto ldv_49216;
      default:
      __bad_percpu_size();
      }
      ldv_49216:
      pscr_ret__ = pfo_ret__;
      goto ldv_49222;
      case 2UL: ;
      switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____0): "m" (cpu_number));
      goto ldv_49226;
      default:
      __bad_percpu_size();
      }
      ldv_49226:
      pscr_ret__ = pfo_ret_____0;
      goto ldv_49222;
      case 4UL: ;
      switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____1): "m" (cpu_number));
      goto ldv_49235;
      default:
      __bad_percpu_size();
      }
      ldv_49235:
      pscr_ret__ = pfo_ret_____1;
      goto ldv_49222;
      case 8UL: ;
      switch (4UL) {
      case 1UL:
      __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      case 2UL:
      __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      case 4UL:
      __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      case 8UL:
      __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret_____2): "m" (cpu_number));
      goto ldv_49244;
      default:
      __bad_percpu_size();
      }
      ldv_49244:
      pscr_ret__ = pfo_ret_____2;
      goto ldv_49222;
      default:
      __bad_size_call_parameter();
      goto ldv_49222;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 14502: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 16097: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17685: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18858: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6852: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6885: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6658: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6591-6592: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6774: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6721: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6754: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6688: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6625: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_alert to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_crit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6471382 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5877332 (91%)
  Because of loop head:            589644 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4406 (0%)
  Times precision was empty:       67146 (1%)
  Times precision was {false}:     1058 (0%)
  Times result was cached:         6400051 (99%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3127 (0%)
  Times result was 'false':        88841 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5120895
  BDD entailment checks:           956897
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       46
Number of predicates discovered:          6
Number of abstraction locations:          164
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         6574894
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1571.06
Number of irrelevant predicates:          248248 (4%)
Number of preds handled by boolean abs:   3142 (0%)
  Total number of models for allsat:      3097
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 64.847s
  Time for path formula creation:       57.824s
Time for strengthen operator:           17.964s
Time for prec operator:                271.971s
  Time for abstraction:                233.902s (Max:     0.422s, Count: 6471382)
    Boolean abstraction:                 2.449s
    Solving time:                        2.587s (Max:     0.016s)
    Model enumeration time:              0.200s
    Time for BDD construction:           0.090s (Max:     0.015s)
Time for merge operator:                 5.858s
Time for coverage check:                 1.029s
  Time for BDD entailment checks:        0.575s
Total time for SMT solver (w/o itp):     2.787s

Number of path formula cache hits:   40089514 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    13.173s

Total number of created targets for pointer analysis: 50694
   Number of created targets for uf: *signed_int is 97
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6257 (count: 1048125, min: 0, max: 83, avg: 0.01)
Time for BDD node cleanup:                             0.155s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.370s
  Time for transition matches:                        12.717s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     32384839 (count: 32384839, min: 1, max: 1, avg: 1.00) [1 x 32384839]

CPA algorithm statistics
------------------------
Number of iterations:            22931739
Max size of waitlist:            92
Average size of waitlist:        52
Number of computed successors:   26105063
Max successors for one state:    2
Number of times merged:          2081999
Number of times stopped:         3014443
Number of times breaked:         4406

Total time for CPA algorithm:       720.643s (Max:     1.152s)
  Time for choose from waitlist:      5.410s
  Time for precision adjustment:    352.273s
  Time for transfer relation:       276.122s
  Time for merge operator:           18.814s
  Time for stop operator:            16.683s
  Time for adding to reached set:    18.651s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4406
Avg. length of target path (in blocks):              498898 (count: 4406, min: 7, max: 234, avg: 113.23)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 133.243s
  Counterexample analysis:                           102.921s (Max:     0.097s, Calls: 4406)
    Refinement sat check:                             57.945s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.177s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.944s
  Precision update:                                    0.869s
  ARG update:                                         26.625s

Length of refined path (in blocks):                  493744 (count: 4405, min: 6, max: 233, avg: 112.09)
Number of affected states:                           261726 (count: 4405, min: 1, max: 107, avg: 59.42)
Length (states) of path with itp 'true':             227613 (count: 4405, min: 1, max: 125, avg: 51.67)
Length (states) of path with itp non-trivial itp:    261726 (count: 4405, min: 1, max: 107, avg: 59.42)
Length (states) of path with itp 'false':              4405 (count: 4405, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4405, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          257321 (count: 4405, min: 0, max: 106, avg: 58.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4406
Number of successful refinements:     4405
Number of failed refinements:         0
Max. size of reached set before ref.: 28360
Max. size of reached set after ref.:  19488
Avg. size of reached set before ref.: 10628.34
Avg. size of reached set after ref.:  5409.01

Total time for CEGAR algorithm:     894.439s
Time for refinements:               161.657s
Average time for refinement:          0.036s
Max time for refinement:              0.126s

Code Coverage
-----------------------------
  Function coverage:      0.209
  Visited lines:          2026
  Total lines:            7999
  Line coverage:          0.253
  Visited conditions:     494
  Total conditions:       2560
  Condition coverage:     0.193

CPAchecker general statistics
-----------------------------
Number of program locations:     11838
Number of CFA edges:             13876
Number of relevant variables:    1950
Number of functions:             402
Number of loops:                 127
Size of reached set:             10762
  Number of reached locations:   1278 (11%)
    Avg states per location:     8
    Max states per location:     241 (at node N165)
  Number of reached functions:   84 (21%)
  Number of partitions:          10762
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        28

Time for analysis setup:          5.898s
  Time for loading CPAs:          0.977s
  Time for loading parser:        0.490s
  Time for CFA construction:      4.321s
    Time for parsing file(s):     0.835s
    Time for AST to CFA:          1.511s
    Time for CFA sanity check:    0.476s
    Time for post-processing:     1.354s
      Time for var class.:        0.613s
Time for Analysis:              894.440s
CPU time for analysis:          894.370s
Total time for CPAchecker:      900.350s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              0.219s

Time for Garbage Collector:      55.062s (in 5625 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                388MB (   370 MiB) max;    170MB (   162 MiB) avg;    432MB (   412 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           493MB (   470 MiB) max;    249MB (   238 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8114MB (  7738 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
