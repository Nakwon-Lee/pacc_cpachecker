scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d479yxpe/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            87240 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  83316 (96%)
  Because of loop head:            3834 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         90 (0%)
  Times precision was empty:       9794 (11%)
  Times precision was {false}:     455 (1%)
  Times result was cached:         74994 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1997 (2%)
  Times result was 'false':        1275 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         50780
  BDD entailment checks:           17784
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          8
Number of abstraction locations:          208
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         302660
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 123.43
Number of irrelevant predicates:          152860 (51%)
Number of preds handled by boolean abs:   4466 (1%)
  Total number of models for allsat:      2105
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.05

Time for post operator:                  2.816s
  Time for path formula creation:        2.659s
Time for strengthen operator:            0.297s
Time for prec operator:                 12.134s
  Time for abstraction:                 11.459s (Max:     0.025s, Count: 87240)
    Boolean abstraction:                 1.617s
    Solving time:                        1.315s (Max:     0.017s)
    Model enumeration time:              0.146s
    Time for BDD construction:           0.111s (Max:     0.010s)
Time for merge operator:                 0.128s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     1.461s

Number of path formula cache hits:   530877 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.052s

Total number of created targets for pointer analysis: 92
   Number of created targets for uf: *unsigned_short_int is 7


Number of BDD nodes:                               366
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4297 (count: 42068, min: 0, max: 217, avg: 0.10)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.617s
  Time for transition matches:                         0.329s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       461751 (count: 461751, min: 1, max: 1, avg: 1.00) [1 x 461751]

CPA algorithm statistics
------------------------
Number of iterations:            288142
Max size of waitlist:            237
Average size of waitlist:        62
Number of computed successors:   320569
Max successors for one state:    2
Number of times merged:          16498
Number of times stopped:         25492
Number of times breaked:         90

Total time for CPA algorithm:        23.775s (Max:     0.792s)
  Time for choose from waitlist:      0.176s
  Time for precision adjustment:     13.885s
  Time for transfer relation:         7.299s
  Time for merge operator:            0.409s
  Time for stop operator:             0.435s
  Time for adding to reached set:     0.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   90
Avg. length of target path (in blocks):                7085 (count: 90, min: 12, max: 241, avg: 78.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.220s
  Counterexample analysis:                             1.409s (Max:     0.064s, Calls: 90)
    Refinement sat check:                              0.751s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.106s
  ARG update:                                          0.570s

Length of refined path (in blocks):                    6838 (count: 90, min: 11, max: 240, avg: 75.98)
Number of affected states:                             6313 (count: 90, min: 5, max: 238, avg: 70.14)
Length (states) of path with itp 'true':                435 (count: 90, min: 0, max: 137, avg: 4.83)
Length (states) of path with itp non-trivial itp:      6313 (count: 90, min: 5, max: 238, avg: 70.14)
Length (states) of path with itp 'false':                90 (count: 90, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 90, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6223 (count: 90, min: 4, max: 237, avg: 69.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                90
Number of successful refinements:     90
Number of failed refinements:         0
Max. size of reached set before ref.: 10497
Max. size of reached set after ref.:  7469
Avg. size of reached set before ref.: 3474.79
Avg. size of reached set after ref.:  226.54

Total time for CEGAR algorithm:      26.376s
Time for refinements:                 2.564s
Average time for refinement:          0.028s
Max time for refinement:              0.086s

Code Coverage
-----------------------------
  Function coverage:      0.446
  Visited lines:          1458
  Total lines:            1885
  Line coverage:          0.773
  Visited conditions:     170
  Total conditions:       310
  Condition coverage:     0.548

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             1461
  Number of reached locations:   541 (22%)
    Avg states per location:     2
    Max states per location:     49 (at node N52)
  Number of reached functions:   37 (45%)
  Number of partitions:          1452
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [60222fd8], stack [main]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          3.470s
  Time for loading CPAs:          0.590s
  Time for loading parser:        0.438s
  Time for CFA construction:      2.339s
    Time for parsing file(s):     0.830s
    Time for AST to CFA:          0.721s
    Time for CFA sanity check:    0.141s
    Time for post-processing:     0.494s
      Time for var class.:        0.206s
Time for Analysis:               26.376s
CPU time for analysis:           26.380s
Total time for CPAchecker:       29.849s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.061s

Time for Garbage Collector:       1.299s (in 162 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   112 MiB) max;     55MB (    52 MiB) avg;    127MB (   121 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
