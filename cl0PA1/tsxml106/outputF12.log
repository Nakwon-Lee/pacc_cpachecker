scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vhknioa2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            146758 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  143327 (98%)
  Because of loop head:            3262 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         169 (0%)
  Times precision was empty:       1599 (1%)
  Times precision was {false}:     223 (0%)
  Times result was cached:         143051 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1885 (1%)
  Times result was 'false':        3723 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         43711
  BDD entailment checks:           15487
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          7
Number of abstraction locations:          224
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         687846
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 326.30
Number of irrelevant predicates:          100014 (15%)
Number of preds handled by boolean abs:   5186 (1%)
  Total number of models for allsat:      1940
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  2.589s
  Time for path formula creation:        2.297s
Time for strengthen operator:            0.501s
Time for prec operator:                 19.824s
  Time for abstraction:                 18.768s (Max:     0.029s, Count: 146758)
    Boolean abstraction:                 1.238s
    Solving time:                        0.932s (Max:     0.015s)
    Model enumeration time:              0.103s
    Time for BDD construction:           0.089s (Max:     0.011s)
Time for merge operator:                 0.086s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     1.035s

Number of path formula cache hits:   804785 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.571s

Total number of created targets for pointer analysis: 80
   Number of created targets for uf: *unsigned_short_int is 9


Number of BDD nodes:                               303
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3941 (count: 31161, min: 0, max: 529, avg: 0.13)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.933s
  Time for transition matches:                         0.490s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       670745 (count: 670745, min: 1, max: 1, avg: 1.00) [1 x 670745]

CPA algorithm statistics
------------------------
Number of iterations:            426921
Max size of waitlist:            44
Average size of waitlist:        23
Number of computed successors:   460515
Max successors for one state:    2
Number of times merged:          14112
Number of times stopped:         25891
Number of times breaked:         169

Total time for CPA algorithm:        33.288s (Max:     1.415s)
  Time for choose from waitlist:      0.198s
  Time for precision adjustment:     22.089s
  Time for transfer relation:         8.700s
  Time for merge operator:            0.353s
  Time for stop operator:             0.445s
  Time for adding to reached set:     0.466s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   169
Avg. length of target path (in blocks):               20948 (count: 169, min: 12, max: 229, avg: 123.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.375s
  Counterexample analysis:                             4.177s (Max:     0.079s, Calls: 169)
    Refinement sat check:                              1.498s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.165s
  Precision update:                                    0.157s
  ARG update:                                          0.690s

Length of refined path (in blocks):                   20470 (count: 169, min: 11, max: 226, avg: 121.12)
Number of affected states:                            19774 (count: 169, min: 5, max: 224, avg: 117.01)
Length (states) of path with itp 'true':                527 (count: 169, min: 0, max: 126, avg: 3.12)
Length (states) of path with itp non-trivial itp:     19774 (count: 169, min: 5, max: 224, avg: 117.01)
Length (states) of path with itp 'false':               169 (count: 169, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 169, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           19605 (count: 169, min: 4, max: 223, avg: 116.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                169
Number of successful refinements:     169
Number of failed refinements:         0
Max. size of reached set before ref.: 5230
Max. size of reached set after ref.:  2076
Avg. size of reached set before ref.: 2519.41
Avg. size of reached set after ref.:  29.89

Total time for CEGAR algorithm:      39.190s
Time for refinements:                 5.879s
Average time for refinement:          0.034s
Max time for refinement:              0.102s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1715
  Total lines:            1885
  Line coverage:          0.910
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             10173
  Number of reached locations:   856 (34%)
    Avg states per location:     11
    Max states per location:     566 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          10125
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [60222fd8], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.585s
  Time for loading CPAs:          0.776s
  Time for loading parser:        0.439s
  Time for CFA construction:      2.272s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          0.697s
    Time for CFA sanity check:    0.171s
    Time for post-processing:     0.642s
      Time for var class.:        0.260s
Time for Analysis:               39.190s
CPU time for analysis:           39.180s
Time for analyzing result:        0.016s
Total time for CPAchecker:       42.787s
Total CPU time for CPAchecker:   42.770s
Time for statistics:              0.252s

Time for Garbage Collector:       1.695s (in 307 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     50MB (    47 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8080MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
