scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jhom_0xf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            93436 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  90183 (97%)
  Because of loop head:            3177 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (0%)
  Times precision was empty:       16419 (18%)
  Times precision was {false}:     376 (0%)
  Times result was cached:         74987 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1654 (2%)
  Times result was 'false':        1078 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         43635
  BDD entailment checks:           14057
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          7
Number of abstraction locations:          213
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         258071
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 127.13
Number of irrelevant predicates:          157871 (61%)
Number of preds handled by boolean abs:   3424 (1%)
  Total number of models for allsat:      1723
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.04

Time for post operator:                  2.965s
  Time for path formula creation:        2.778s
Time for strengthen operator:            0.438s
Time for prec operator:                 11.224s
  Time for abstraction:                 10.280s (Max:     0.027s, Count: 93436)
    Boolean abstraction:                 1.422s
    Solving time:                        1.245s (Max:     0.015s)
    Model enumeration time:              0.101s
    Time for BDD construction:           0.106s (Max:     0.010s)
Time for merge operator:                 0.187s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     1.346s

Number of path formula cache hits:   550543 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.064s

Total number of created targets for pointer analysis: 60
   Number of created targets for uf: *unsigned_short_int is 7


Number of BDD nodes:                               291
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3485 (count: 42440, min: 0, max: 185, avg: 0.08)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.818s
  Time for transition matches:                         0.440s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       471924 (count: 471924, min: 1, max: 1, avg: 1.00) [1 x 471924]

CPA algorithm statistics
------------------------
Number of iterations:            300451
Max size of waitlist:            59
Average size of waitlist:        30
Number of computed successors:   329087
Max successors for one state:    2
Number of times merged:          14789
Number of times stopped:         24910
Number of times breaked:         76

Total time for CPA algorithm:        24.061s (Max:     0.805s)
  Time for choose from waitlist:      0.164s
  Time for precision adjustment:     13.263s
  Time for transfer relation:         8.249s
  Time for merge operator:            0.438s
  Time for stop operator:             0.422s
  Time for adding to reached set:     0.461s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                6312 (count: 76, min: 15, max: 205, avg: 83.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.217s
  Counterexample analysis:                             1.299s (Max:     0.050s, Calls: 76)
    Refinement sat check:                              0.633s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.097s
  Precision update:                                    0.072s
  ARG update:                                          0.665s

Length of refined path (in blocks):                    6196 (count: 76, min: 12, max: 204, avg: 81.53)
Number of affected states:                             5987 (count: 76, min: 5, max: 202, avg: 78.78)
Length (states) of path with itp 'true':                133 (count: 76, min: 0, max: 23, avg: 1.75)
Length (states) of path with itp non-trivial itp:      5987 (count: 76, min: 5, max: 202, avg: 78.78)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 76, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5911 (count: 76, min: 4, max: 201, avg: 77.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 9751
Max. size of reached set after ref.:  2289
Avg. size of reached set before ref.: 3996.05
Avg. size of reached set after ref.:  93.68

Total time for CEGAR algorithm:      26.615s
Time for refinements:                 2.540s
Average time for refinement:          0.033s
Max time for refinement:              0.090s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1701
  Total lines:            1885
  Line coverage:          0.902
  Visited conditions:     236
  Total conditions:       310
  Condition coverage:     0.761

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             6519
  Number of reached locations:   835 (33%)
    Avg states per location:     7
    Max states per location:     405 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          6499
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N939 (before line 5736), Function znet_interrupt called from node N1399, stack depth 2 [1a0c8c5], stack [main, znet_interrupt]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          3.239s
  Time for loading CPAs:          0.638s
  Time for loading parser:        0.487s
  Time for CFA construction:      2.037s
    Time for parsing file(s):     0.627s
    Time for AST to CFA:          0.641s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.514s
      Time for var class.:        0.234s
Time for Analysis:               26.615s
CPU time for analysis:           26.620s
Total time for CPAchecker:       29.857s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.244s

Time for Garbage Collector:       1.683s (in 152 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                115MB (   110 MiB) max;     56MB (    53 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
