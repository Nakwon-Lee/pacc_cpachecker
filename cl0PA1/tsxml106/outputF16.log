scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9f22ah5a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            504450 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  493920 (98%)
  Because of loop head:            10329 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         201 (0%)
  Times precision was empty:       63227 (13%)
  Times precision was {false}:     1025 (0%)
  Times result was cached:         436607 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3591 (1%)
  Times result was 'false':        5444 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         208485
  BDD entailment checks:           95755
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          6
Number of abstraction locations:          224
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         1999970
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 433.27
Number of irrelevant predicates:          1229618 (61%)
Number of preds handled by boolean abs:   8478 (0%)
  Total number of models for allsat:      3867
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.08

Time for post operator:                  9.148s
  Time for path formula creation:        8.140s
Time for strengthen operator:            1.588s
Time for prec operator:                 47.285s
  Time for abstraction:                 43.848s (Max:     0.159s, Count: 504450)
    Boolean abstraction:                 2.215s
    Solving time:                        2.095s (Max:     0.018s)
    Model enumeration time:              0.230s
    Time for BDD construction:           0.137s (Max:     0.009s)
Time for merge operator:                 0.306s
Time for coverage check:                 0.099s
  Time for BDD entailment checks:        0.073s
Total time for SMT solver (w/o itp):     2.325s

Number of path formula cache hits:   2751955 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.097s

Total number of created targets for pointer analysis: 82
   Number of created targets for uf: *unsigned_short_int is 9


Number of BDD nodes:                               303
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7293 (count: 186580, min: 0, max: 242, avg: 0.04)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.658s
  Time for transition matches:                         1.536s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      2333995 (count: 2333995, min: 1, max: 1, avg: 1.00) [1 x 2333995]

CPA algorithm statistics
------------------------
Number of iterations:            1496919
Max size of waitlist:            51
Average size of waitlist:        22
Number of computed successors:   1611319
Max successors for one state:    2
Number of times merged:          56365
Number of times stopped:         104763
Number of times breaked:         201

Total time for CPA algorithm:        92.735s (Max:     2.908s)
  Time for choose from waitlist:      0.500s
  Time for precision adjustment:     55.812s
  Time for transfer relation:        29.007s
  Time for merge operator:            1.010s
  Time for stop operator:             1.389s
  Time for adding to reached set:     1.829s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   201
Avg. length of target path (in blocks):               35224 (count: 201, min: 23, max: 434, avg: 175.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.625s
  Counterexample analysis:                             7.574s (Max:     0.217s, Calls: 201)
    Refinement sat check:                              2.418s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.029s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.258s
  Precision update:                                    0.173s
  ARG update:                                          2.380s

Length of refined path (in blocks):                   31205 (count: 201, min: 20, max: 359, avg: 155.25)
Number of affected states:                            25299 (count: 201, min: 19, max: 241, avg: 125.87)
Length (states) of path with itp 'true':               5705 (count: 201, min: 0, max: 128, avg: 28.38)
Length (states) of path with itp non-trivial itp:     25299 (count: 201, min: 19, max: 241, avg: 125.87)
Length (states) of path with itp 'false':               201 (count: 201, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 201, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           25098 (count: 201, min: 18, max: 240, avg: 124.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                201
Number of successful refinements:     201
Number of failed refinements:         0
Max. size of reached set before ref.: 23067
Max. size of reached set after ref.:  8761
Avg. size of reached set before ref.: 9059.27
Avg. size of reached set after ref.:  1644.17

Total time for CEGAR algorithm:     105.163s
Time for refinements:                12.194s
Average time for refinement:          0.060s
Max time for refinement:              0.301s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1715
  Total lines:            1885
  Line coverage:          0.910
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             10677
  Number of reached locations:   856 (34%)
    Avg states per location:     12
    Max states per location:     608 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          10593
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [a68df9], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.156s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.514s
  Time for CFA construction:      2.761s
    Time for parsing file(s):     0.661s
    Time for AST to CFA:          1.112s
    Time for CFA sanity check:    0.227s
    Time for post-processing:     0.676s
      Time for var class.:        0.261s
Time for Analysis:              105.164s
CPU time for analysis:          105.150s
Time for analyzing result:        0.010s
Total time for CPAchecker:      109.324s
Total CPU time for CPAchecker:  109.300s
Time for statistics:              0.262s

Time for Garbage Collector:       9.635s (in 848 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     79MB (    75 MiB) avg;    132MB (   126 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           138MB (   132 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8022MB (  7650 MiB) max;   8016MB (  7645 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
