scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rye8qmi1/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            96728 (26% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  94914 (98%)
  Because of loop head:            1695 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         119 (0%)
  Times precision was empty:       13654 (14%)
  Times precision was {false}:     213 (0%)
  Times result was cached:         81447 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1414 (1%)
  Times result was 'false':        1839 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         24294
  BDD entailment checks:           12156
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          7
Number of abstraction locations:          190
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         335707
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 206.33
Number of irrelevant predicates:          178837 (53%)
Number of preds handled by boolean abs:   3737 (1%)
  Total number of models for allsat:      1430
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  1.881s
  Time for path formula creation:        1.719s
Time for strengthen operator:            0.325s
Time for prec operator:                 11.099s
  Time for abstraction:                 10.145s (Max:     0.027s, Count: 96728)
    Boolean abstraction:                 0.730s
    Solving time:                        0.515s (Max:     0.012s)
    Model enumeration time:              0.085s
    Time for BDD construction:           0.099s (Max:     0.012s)
Time for merge operator:                 0.052s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.600s

Number of path formula cache hits:   459996 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.222s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               287
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2992 (count: 35518, min: 0, max: 265, avg: 0.08)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.705s
  Time for transition matches:                         0.348s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       372200 (count: 372200, min: 1, max: 1, avg: 1.00) [1 x 372200]

CPA algorithm statistics
------------------------
Number of iterations:            265493
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   285883
Max successors for one state:    2
Number of times merged:          6069
Number of times stopped:         16589
Number of times breaked:         119

Total time for CPA algorithm:        21.602s (Max:     0.988s)
  Time for choose from waitlist:      0.211s
  Time for precision adjustment:     12.708s
  Time for transfer relation:         6.580s
  Time for merge operator:            0.241s
  Time for stop operator:             0.370s
  Time for adding to reached set:     0.463s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   119
Avg. length of target path (in blocks):               19898 (count: 119, min: 12, max: 259, avg: 167.21)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.435s
  Counterexample analysis:                             3.371s (Max:     0.072s, Calls: 119)
    Refinement sat check:                              1.113s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.128s
  Precision update:                                    0.133s
  ARG update:                                          0.651s

Length of refined path (in blocks):                   19427 (count: 119, min: 11, max: 256, avg: 163.25)
Number of affected states:                            18823 (count: 119, min: 5, max: 254, avg: 158.18)
Length (states) of path with itp 'true':                485 (count: 119, min: 0, max: 125, avg: 4.08)
Length (states) of path with itp non-trivial itp:     18823 (count: 119, min: 5, max: 254, avg: 158.18)
Length (states) of path with itp 'false':               119 (count: 119, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 119, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           18704 (count: 119, min: 4, max: 253, avg: 157.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                119
Number of successful refinements:     119
Number of failed refinements:         0
Max. size of reached set before ref.: 3574
Max. size of reached set after ref.:  2355
Avg. size of reached set before ref.: 2298.95
Avg. size of reached set after ref.:  61.83

Total time for CEGAR algorithm:      26.512s
Time for refinements:                 4.897s
Average time for refinement:          0.041s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.494
  Visited lines:          1199
  Total lines:            1885
  Line coverage:          0.636
  Visited conditions:     110
  Total conditions:       310
  Condition coverage:     0.355

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             1239
  Number of reached locations:   449 (18%)
    Avg states per location:     2
    Max states per location:     99 (at node N51)
  Number of reached functions:   41 (49%)
  Number of partitions:          1237
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1268 (before line 6066), Function hardware_init called from node N698, stack depth 3 [4cf9855e], stack [main, znet_open, hardware_init]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          3.322s
  Time for loading CPAs:          0.662s
  Time for loading parser:        0.473s
  Time for CFA construction:      2.116s
    Time for parsing file(s):     0.594s
    Time for AST to CFA:          0.687s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.575s
      Time for var class.:        0.284s
Time for Analysis:               26.512s
CPU time for analysis:           26.500s
Total time for CPAchecker:       29.836s
Total CPU time for CPAchecker:   29.820s
Time for statistics:              0.123s

Time for Garbage Collector:       0.874s (in 153 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     48MB (    45 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
