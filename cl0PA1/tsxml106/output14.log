scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5bhmkgf5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            86025 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  82526 (96%)
  Because of loop head:            3414 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         85 (0%)
  Times precision was empty:       17886 (21%)
  Times precision was {false}:     464 (1%)
  Times result was cached:         66092 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1583 (2%)
  Times result was 'false':        1181 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         41850
  BDD entailment checks:           15762
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          6
Number of abstraction locations:          204
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         239034
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 116.77
Number of irrelevant predicates:          134992 (56%)
Number of preds handled by boolean abs:   3195 (1%)
  Total number of models for allsat:      1579
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  2.892s
  Time for path formula creation:        2.676s
Time for strengthen operator:            0.380s
Time for prec operator:                 11.096s
  Time for abstraction:                 10.173s (Max:     0.117s, Count: 86025)
    Boolean abstraction:                 1.094s
    Solving time:                        0.959s (Max:     0.015s)
    Model enumeration time:              0.101s
    Time for BDD construction:           0.094s (Max:     0.009s)
Time for merge operator:                 0.165s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     1.060s

Number of path formula cache hits:   518739 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.076s

Total number of created targets for pointer analysis: 66
   Number of created targets for uf: *unsigned_short_int is 7


Number of BDD nodes:                               238
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3285 (count: 45605, min: 0, max: 126, avg: 0.07)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.754s
  Time for transition matches:                         0.411s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       447470 (count: 447470, min: 1, max: 1, avg: 1.00) [1 x 447470]

CPA algorithm statistics
------------------------
Number of iterations:            275527
Max size of waitlist:            61
Average size of waitlist:        23
Number of computed successors:   301786
Max successors for one state:    2
Number of times merged:          13044
Number of times stopped:         22336
Number of times breaked:         85

Total time for CPA algorithm:        23.616s (Max:     1.126s)
  Time for choose from waitlist:      0.160s
  Time for precision adjustment:     13.051s
  Time for transfer relation:         8.172s
  Time for merge operator:            0.402s
  Time for stop operator:             0.447s
  Time for adding to reached set:     0.402s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   85
Avg. length of target path (in blocks):                4596 (count: 85, min: 12, max: 202, avg: 54.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.751s
  Counterexample analysis:                             0.877s (Max:     0.047s, Calls: 85)
    Refinement sat check:                              0.486s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.077s
  Precision update:                                    0.115s
  ARG update:                                          0.599s

Length of refined path (in blocks):                    4478 (count: 85, min: 11, max: 201, avg: 52.68)
Number of affected states:                             4291 (count: 85, min: 5, max: 199, avg: 50.48)
Length (states) of path with itp 'true':                102 (count: 85, min: 0, max: 23, avg: 1.20)
Length (states) of path with itp non-trivial itp:      4291 (count: 85, min: 5, max: 199, avg: 50.48)
Length (states) of path with itp 'false':                85 (count: 85, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 85, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4206 (count: 85, min: 4, max: 198, avg: 49.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                85
Number of successful refinements:     85
Number of failed refinements:         0
Max. size of reached set before ref.: 13857
Max. size of reached set after ref.:  2736
Avg. size of reached set before ref.: 3201.20
Avg. size of reached set after ref.:  37.94

Total time for CEGAR algorithm:      25.667s
Time for refinements:                 2.029s
Average time for refinement:          0.023s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1692
  Total lines:            1885
  Line coverage:          0.898
  Visited conditions:     234
  Total conditions:       310
  Condition coverage:     0.755

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             9393
  Number of reached locations:   828 (33%)
    Avg states per location:     11
    Max states per location:     751 (at node N52)
  Number of reached functions:   54 (65%)
  Number of partitions:          9253
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1237 (before line 6043), Function hardware_init called from node N736, stack depth 3 [17e87373], stack [main, znet_tx_timeout, hardware_init]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          4.175s
  Time for loading CPAs:          0.789s
  Time for loading parser:        0.558s
  Time for CFA construction:      2.701s
    Time for parsing file(s):     0.785s
    Time for AST to CFA:          0.964s
    Time for CFA sanity check:    0.168s
    Time for post-processing:     0.649s
      Time for var class.:        0.281s
Time for Analysis:               25.667s
CPU time for analysis:           25.670s
Total time for CPAchecker:       29.846s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.273s

Time for Garbage Collector:       1.365s (in 142 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     52MB (    50 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
