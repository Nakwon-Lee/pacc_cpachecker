scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tol87mjq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            109114 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  105280 (96%)
  Because of loop head:            3742 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (0%)
  Times precision was empty:       17016 (16%)
  Times precision was {false}:     412 (0%)
  Times result was cached:         90257 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1429 (1%)
  Times result was 'false':        941 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         50713
  BDD entailment checks:           20061
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          5
Number of abstraction locations:          206
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         300986
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 163.49
Number of irrelevant predicates:          160689 (53%)
Number of preds handled by boolean abs:   2842 (1%)
  Total number of models for allsat:      1433
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  2.563s
  Time for path formula creation:        2.366s
Time for strengthen operator:            0.434s
Time for prec operator:                 11.335s
  Time for abstraction:                 10.423s (Max:     0.026s, Count: 109114)
    Boolean abstraction:                 1.020s
    Solving time:                        0.874s (Max:     0.013s)
    Model enumeration time:              0.087s
    Time for BDD construction:           0.082s (Max:     0.012s)
Time for merge operator:                 0.121s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     0.961s

Number of path formula cache hits:   647898 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.665s

Total number of created targets for pointer analysis: 66
   Number of created targets for uf: *unsigned_short_int is 7


Number of BDD nodes:                               226
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2927 (count: 47835, min: 0, max: 124, avg: 0.06)
Time for BDD node cleanup:                             0.024s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.798s
  Time for transition matches:                         0.382s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       548211 (count: 548211, min: 1, max: 1, avg: 1.00) [1 x 548211]

CPA algorithm statistics
------------------------
Number of iterations:            341953
Max size of waitlist:            261
Average size of waitlist:        54
Number of computed successors:   373768
Max successors for one state:    2
Number of times merged:          15326
Number of times stopped:         27296
Number of times breaked:         92

Total time for CPA algorithm:        24.182s (Max:     1.120s)
  Time for choose from waitlist:      0.150s
  Time for precision adjustment:     13.421s
  Time for transfer relation:         8.131s
  Time for merge operator:            0.352s
  Time for stop operator:             0.497s
  Time for adding to reached set:     0.436s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                5929 (count: 92, min: 12, max: 202, avg: 64.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.046s
  Counterexample analysis:                             1.147s (Max:     0.054s, Calls: 92)
    Refinement sat check:                              0.573s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.077s
  ARG update:                                          0.669s

Length of refined path (in blocks):                    5821 (count: 92, min: 11, max: 201, avg: 63.27)
Number of affected states:                             5641 (count: 92, min: 9, max: 199, avg: 61.32)
Length (states) of path with itp 'true':                 88 (count: 92, min: 0, max: 1, avg: 0.96)
Length (states) of path with itp non-trivial itp:      5641 (count: 92, min: 9, max: 199, avg: 61.32)
Length (states) of path with itp 'false':                92 (count: 92, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 92, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5549 (count: 92, min: 8, max: 198, avg: 60.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     92
Number of failed refinements:         0
Max. size of reached set before ref.: 14393
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 3622.55
Avg. size of reached set after ref.:  5.87

Total time for CEGAR algorithm:      26.660s
Time for refinements:                 2.476s
Average time for refinement:          0.026s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1703
  Total lines:            1885
  Line coverage:          0.903
  Visited conditions:     236
  Total conditions:       310
  Condition coverage:     0.761

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             12796
  Number of reached locations:   839 (34%)
    Avg states per location:     15
    Max states per location:     942 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          12567
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1231 (before line 6040), Function hardware_init called from node N736, stack depth 3 [442551f2], stack [main, znet_tx_timeout, hardware_init]])
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          3.163s
  Time for loading CPAs:          0.572s
  Time for loading parser:        0.453s
  Time for CFA construction:      2.071s
    Time for parsing file(s):     0.616s
    Time for AST to CFA:          0.690s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.501s
      Time for var class.:        0.216s
Time for Analysis:               26.660s
CPU time for analysis:           26.650s
Total time for CPAchecker:       29.825s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.210s

Time for Garbage Collector:       1.821s (in 177 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     58MB (    55 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7649 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
