scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p97x6b0n/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            112760 (27% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  110978 (98%)
  Because of loop head:            1688 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         94 (0%)
  Times precision was empty:       24223 (21%)
  Times precision was {false}:     233 (0%)
  Times result was cached:         87318 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      986 (1%)
  Times result was 'false':        1644 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         27906
  BDD entailment checks:           15692
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          7
Number of abstraction locations:          190
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         313230
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 256.96
Number of irrelevant predicates:          209401 (67%)
Number of preds handled by boolean abs:   2162 (1%)
  Total number of models for allsat:      991
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.010s
  Time for path formula creation:        1.837s
Time for strengthen operator:            0.410s
Time for prec operator:                 10.518s
  Time for abstraction:                  9.568s (Max:     0.026s, Count: 112760)
    Boolean abstraction:                 0.674s
    Solving time:                        0.478s (Max:     0.018s)
    Model enumeration time:              0.084s
    Time for BDD construction:           0.078s (Max:     0.008s)
Time for merge operator:                 0.062s
Time for coverage check:                 0.032s
  Time for BDD entailment checks:        0.027s
Total time for SMT solver (w/o itp):     0.562s

Number of path formula cache hits:   526358 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.214s

Total number of created targets for pointer analysis: 30
   Number of created targets for uf: *unsigned_short_int is 7


Number of BDD nodes:                               290
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2199 (count: 47191, min: 0, max: 248, avg: 0.05)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.708s
  Time for transition matches:                         0.379s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       420479 (count: 420479, min: 1, max: 1, avg: 1.00) [1 x 420479]

CPA algorithm statistics
------------------------
Number of iterations:            306959
Max size of waitlist:            31
Average size of waitlist:        13
Number of computed successors:   330423
Max successors for one state:    2
Number of times merged:          6107
Number of times stopped:         19985
Number of times breaked:         94

Total time for CPA algorithm:        21.993s (Max:     0.757s)
  Time for choose from waitlist:      0.154s
  Time for precision adjustment:     12.482s
  Time for transfer relation:         7.199s
  Time for merge operator:            0.237s
  Time for stop operator:             0.430s
  Time for adding to reached set:     0.433s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):               11626 (count: 94, min: 12, max: 237, avg: 123.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.446s
  Counterexample analysis:                             2.325s (Max:     0.078s, Calls: 94)
    Refinement sat check:                              0.973s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.071s
  ARG update:                                          0.805s

Length of refined path (in blocks):                   11411 (count: 94, min: 11, max: 236, avg: 121.39)
Number of affected states:                            10940 (count: 94, min: 5, max: 234, avg: 116.38)
Length (states) of path with itp 'true':                377 (count: 94, min: 0, max: 134, avg: 4.01)
Length (states) of path with itp non-trivial itp:     10940 (count: 94, min: 5, max: 234, avg: 116.38)
Length (states) of path with itp 'false':                94 (count: 94, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 94, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10846 (count: 94, min: 4, max: 233, avg: 115.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 4948
Max. size of reached set after ref.:  4285
Avg. size of reached set before ref.: 3350.03
Avg. size of reached set after ref.:  98.65

Total time for CEGAR algorithm:      25.913s
Time for refinements:                 3.912s
Average time for refinement:          0.041s
Max time for refinement:              0.093s

Code Coverage
-----------------------------
  Function coverage:      0.506
  Visited lines:          1263
  Total lines:            1885
  Line coverage:          0.670
  Visited conditions:     126
  Total conditions:       310
  Condition coverage:     0.406

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             3164
  Number of reached locations:   497 (20%)
    Avg states per location:     6
    Max states per location:     257 (at node N51)
  Number of reached functions:   42 (51%)
  Number of partitions:          3152
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [a68df9], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.413s
  Time for loading CPAs:          0.807s
  Time for loading parser:        0.616s
  Time for CFA construction:      2.898s
    Time for parsing file(s):     0.882s
    Time for AST to CFA:          1.040s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.616s
      Time for var class.:        0.291s
Time for Analysis:               25.913s
CPU time for analysis:           25.910s
Total time for CPAchecker:       30.332s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.089s

Time for Garbage Collector:       1.128s (in 155 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     47MB (    45 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
