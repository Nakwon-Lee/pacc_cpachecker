scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8qbb9rqv/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            207077 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  203560 (98%)
  Because of loop head:            3385 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (0%)
  Times precision was empty:       24735 (12%)
  Times precision was {false}:     290 (0%)
  Times result was cached:         180422 (87%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1630 (1%)
  Times result was 'false':        3447 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         55191
  BDD entailment checks:           27043
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          7
Number of abstraction locations:          224
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         701832
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 365.54
Number of irrelevant predicates:          308197 (44%)
Number of preds handled by boolean abs:   3807 (1%)
  Total number of models for allsat:      1675
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  2.935s
  Time for path formula creation:        2.657s
Time for strengthen operator:            0.715s
Time for prec operator:                 19.985s
  Time for abstraction:                 18.482s (Max:     0.227s, Count: 207077)
    Boolean abstraction:                 0.982s
    Solving time:                        0.768s (Max:     0.014s)
    Model enumeration time:              0.104s
    Time for BDD construction:           0.075s (Max:     0.008s)
Time for merge operator:                 0.092s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.052s
Total time for SMT solver (w/o itp):     0.872s

Number of path formula cache hits:   1024637 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.632s

Total number of created targets for pointer analysis: 92
   Number of created targets for uf: *unsigned_short_int is 9


Number of BDD nodes:                               305
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3418 (count: 63548, min: 0, max: 246, avg: 0.05)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.055s
  Time for transition matches:                         0.531s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       831006 (count: 831006, min: 1, max: 1, avg: 1.00) [1 x 831006]

CPA algorithm statistics
------------------------
Number of iterations:            575298
Max size of waitlist:            31
Average size of waitlist:        13
Number of computed successors:   618546
Max successors for one state:    2
Number of times merged:          14074
Number of times stopped:         37318
Number of times breaked:         132

Total time for CPA algorithm:        38.131s (Max:     0.977s)
  Time for choose from waitlist:      0.256s
  Time for precision adjustment:     23.291s
  Time for transfer relation:        11.359s
  Time for merge operator:            0.359s
  Time for stop operator:             0.693s
  Time for adding to reached set:     0.650s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   132
Avg. length of target path (in blocks):               15981 (count: 132, min: 12, max: 238, avg: 121.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.609s
  Counterexample analysis:                             3.081s (Max:     0.088s, Calls: 132)
    Refinement sat check:                              1.282s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.136s
  Precision update:                                    0.174s
  ARG update:                                          1.083s

Length of refined path (in blocks):                   15675 (count: 132, min: 11, max: 237, avg: 118.75)
Number of affected states:                            14995 (count: 132, min: 5, max: 235, avg: 113.60)
Length (states) of path with itp 'true':                548 (count: 132, min: 0, max: 134, avg: 4.15)
Length (states) of path with itp non-trivial itp:     14995 (count: 132, min: 5, max: 235, avg: 113.60)
Length (states) of path with itp 'false':               132 (count: 132, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 132, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14863 (count: 132, min: 4, max: 234, avg: 112.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                132
Number of successful refinements:     132
Number of failed refinements:         0
Max. size of reached set before ref.: 9426
Max. size of reached set after ref.:  4532
Avg. size of reached set before ref.: 4406.43
Avg. size of reached set after ref.:  106.27

Total time for CEGAR algorithm:      43.322s
Time for refinements:                 5.171s
Average time for refinement:          0.039s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1715
  Total lines:            1885
  Line coverage:          0.910
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             10160
  Number of reached locations:   856 (34%)
    Avg states per location:     11
    Max states per location:     566 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          10116
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [26f1249d], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.904s
  Time for loading CPAs:          0.715s
  Time for loading parser:        0.548s
  Time for CFA construction:      2.576s
    Time for parsing file(s):     0.781s
    Time for AST to CFA:          0.931s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.551s
      Time for var class.:        0.257s
Time for Analysis:               43.322s
CPU time for analysis:           43.310s
Time for analyzing result:        0.008s
Total time for CPAchecker:       47.231s
Total CPU time for CPAchecker:   47.220s
Time for statistics:              0.199s

Time for Garbage Collector:       2.670s (in 326 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   117 MiB) max;     59MB (    56 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8079MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
