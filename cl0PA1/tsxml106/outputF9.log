scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_szwzqcvn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            265937 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  257649 (97%)
  Because of loop head:            8107 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         181 (0%)
  Times precision was empty:       24017 (9%)
  Times precision was {false}:     708 (0%)
  Times result was cached:         238060 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3152 (1%)
  Times result was 'false':        2127 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         117016
  BDD entailment checks:           49878
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          7
Number of abstraction locations:          224
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         1040911
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 269.67
Number of irrelevant predicates:          529032 (51%)
Number of preds handled by boolean abs:   7821 (1%)
  Total number of models for allsat:      3207
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  6.131s
  Time for path formula creation:        5.709s
Time for strengthen operator:            0.957s
Time for prec operator:                 29.853s
  Time for abstraction:                 27.921s (Max:     0.133s, Count: 265937)
    Boolean abstraction:                 2.004s
    Solving time:                        1.700s (Max:     0.020s)
    Model enumeration time:              0.176s
    Time for BDD construction:           0.128s (Max:     0.009s)
Time for merge operator:                 0.270s
Time for coverage check:                 0.091s
  Time for BDD entailment checks:        0.075s
Total time for SMT solver (w/o itp):     1.876s

Number of path formula cache hits:   1455106 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.056s

Total number of created targets for pointer analysis: 82
   Number of created targets for uf: *unsigned_short_int is 17


Number of BDD nodes:                               285
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6505 (count: 96573, min: 0, max: 198, avg: 0.07)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.586s
  Time for transition matches:                         0.878s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      1262891 (count: 1262891, min: 1, max: 1, avg: 1.00) [1 x 1262891]

CPA algorithm statistics
------------------------
Number of iterations:            810474
Max size of waitlist:            71
Average size of waitlist:        17
Number of computed successors:   877403
Max successors for one state:    2
Number of times merged:          33569
Number of times stopped:         60690
Number of times breaked:         181

Total time for CPA algorithm:        57.407s (Max:     1.167s)
  Time for choose from waitlist:      0.313s
  Time for precision adjustment:     34.356s
  Time for transfer relation:        17.841s
  Time for merge operator:            0.777s
  Time for stop operator:             0.867s
  Time for adding to reached set:     1.080s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   181
Avg. length of target path (in blocks):               26800 (count: 181, min: 23, max: 256, avg: 148.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.817s
  Counterexample analysis:                             4.877s (Max:     0.093s, Calls: 181)
    Refinement sat check:                              1.758s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.140s
  Precision update:                                    0.215s
  ARG update:                                          1.392s

Length of refined path (in blocks):                   24531 (count: 181, min: 20, max: 253, avg: 135.53)
Number of affected states:                            20930 (count: 181, min: 5, max: 251, avg: 115.64)
Length (states) of path with itp 'true':               3420 (count: 181, min: 0, max: 128, avg: 18.90)
Length (states) of path with itp non-trivial itp:     20930 (count: 181, min: 5, max: 251, avg: 115.64)
Length (states) of path with itp 'false':               181 (count: 181, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 181, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           20749 (count: 181, min: 4, max: 250, avg: 114.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                181
Number of successful refinements:     181
Number of failed refinements:         0
Max. size of reached set before ref.: 9750
Max. size of reached set after ref.:  5268
Avg. size of reached set before ref.: 5134.77
Avg. size of reached set after ref.:  690.49

Total time for CEGAR algorithm:      65.127s
Time for refinements:                 7.628s
Average time for refinement:          0.042s
Max time for refinement:              0.111s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1715
  Total lines:            1885
  Line coverage:          0.910
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             10173
  Number of reached locations:   856 (34%)
    Avg states per location:     11
    Max states per location:     566 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          10125
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [7cf7aee], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.237s
  Time for loading CPAs:          0.591s
  Time for loading parser:        0.482s
  Time for CFA construction:      2.059s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.688s
    Time for CFA sanity check:    0.141s
    Time for post-processing:     0.531s
      Time for var class.:        0.231s
Time for Analysis:               65.129s
CPU time for analysis:           65.120s
Time for analyzing result:        0.009s
Total time for CPAchecker:       68.368s
Total CPU time for CPAchecker:   68.360s
Time for statistics:              0.233s

Time for Garbage Collector:       5.037s (in 474 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     72MB (    68 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8014MB (  7643 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
