scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fl4eku0d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            164292 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  160939 (98%)
  Because of loop head:            3192 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         161 (0%)
  Times precision was empty:       14029 (9%)
  Times precision was {false}:     271 (0%)
  Times result was cached:         147774 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2218 (1%)
  Times result was 'false':        3280 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         45250
  BDD entailment checks:           19758
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          7
Number of abstraction locations:          224
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         657366
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 264.11
Number of irrelevant predicates:          220618 (34%)
Number of preds handled by boolean abs:   6098 (1%)
  Total number of models for allsat:      2243
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.078s
  Time for path formula creation:        2.791s
Time for strengthen operator:            0.672s
Time for prec operator:                 21.273s
  Time for abstraction:                 19.796s (Max:     0.030s, Count: 164292)
    Boolean abstraction:                 1.447s
    Solving time:                        1.059s (Max:     0.015s)
    Model enumeration time:              0.130s
    Time for BDD construction:           0.169s (Max:     0.012s)
Time for merge operator:                 0.102s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.189s

Number of path formula cache hits:   825879 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.799s

Total number of created targets for pointer analysis: 80
   Number of created targets for uf: *unsigned_short_int is 17


Number of BDD nodes:                               324
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4544 (count: 48946, min: 0, max: 272, avg: 0.09)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.039s
  Time for transition matches:                         0.561s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       679913 (count: 679913, min: 1, max: 1, avg: 1.00) [1 x 679913]

CPA algorithm statistics
------------------------
Number of iterations:            462936
Max size of waitlist:            24
Average size of waitlist:        10
Number of computed successors:   498313
Max successors for one state:    2
Number of times merged:          12746
Number of times stopped:         29653
Number of times breaked:         161

Total time for CPA algorithm:        37.372s (Max:     1.839s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:     23.711s
  Time for transfer relation:        10.490s
  Time for merge operator:            0.406s
  Time for stop operator:             0.563s
  Time for adding to reached set:     0.710s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   161
Avg. length of target path (in blocks):               23388 (count: 161, min: 12, max: 259, avg: 145.27)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.292s
  Counterexample analysis:                             3.862s (Max:     0.074s, Calls: 161)
    Refinement sat check:                              1.400s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.129s
  Precision update:                                    0.145s
  ARG update:                                          0.896s

Length of refined path (in blocks):                   22839 (count: 161, min: 11, max: 256, avg: 141.86)
Number of affected states:                            22160 (count: 161, min: 5, max: 254, avg: 137.64)
Length (states) of path with itp 'true':                518 (count: 161, min: 0, max: 125, avg: 3.22)
Length (states) of path with itp non-trivial itp:     22160 (count: 161, min: 5, max: 254, avg: 137.64)
Length (states) of path with itp 'false':               161 (count: 161, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 161, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           21999 (count: 161, min: 4, max: 253, avg: 136.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                161
Number of successful refinements:     161
Number of failed refinements:         0
Max. size of reached set before ref.: 5321
Max. size of reached set after ref.:  2355
Avg. size of reached set before ref.: 2874.48
Avg. size of reached set after ref.:  47.10

Total time for CEGAR algorithm:      43.176s
Time for refinements:                 5.795s
Average time for refinement:          0.035s
Max time for refinement:              0.104s

Code Coverage
-----------------------------
  Function coverage:      0.651
  Visited lines:          1715
  Total lines:            1885
  Line coverage:          0.910
  Visited conditions:     238
  Total conditions:       310
  Condition coverage:     0.768

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             10173
  Number of reached locations:   856 (34%)
    Avg states per location:     11
    Max states per location:     566 (at node N51)
  Number of reached functions:   54 (65%)
  Number of partitions:          10125
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1341 (before line 6154), Function main called from node N1325, stack depth 1 [7cf7aee], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.339s
  Time for loading CPAs:          0.589s
  Time for loading parser:        0.422s
  Time for CFA construction:      2.217s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.694s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.592s
      Time for var class.:        0.231s
Time for Analysis:               43.177s
CPU time for analysis:           43.180s
Time for analyzing result:        0.010s
Total time for CPAchecker:       46.519s
Total CPU time for CPAchecker:   46.510s
Time for statistics:              0.246s

Time for Garbage Collector:       1.812s (in 293 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     50MB (    48 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8080MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
