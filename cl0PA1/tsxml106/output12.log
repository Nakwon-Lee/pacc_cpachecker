scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kjzw9jek/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            74729 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  72956 (98%)
  Because of loop head:            1647 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         126 (0%)
  Times precision was empty:       1351 (2%)
  Times precision was {false}:     195 (0%)
  Times result was cached:         71736 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1447 (2%)
  Times result was 'false':        2224 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         21178
  BDD entailment checks:           7408
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       21
Number of predicates discovered:          7
Number of abstraction locations:          185
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         342416
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 208.54
Number of irrelevant predicates:          58282 (17%)
Number of preds handled by boolean abs:   3897 (1%)
  Total number of models for allsat:      1475
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  1.743s
  Time for path formula creation:        1.613s
Time for strengthen operator:            0.290s
Time for prec operator:                 12.213s
  Time for abstraction:                 11.475s (Max:     0.024s, Count: 74729)
    Boolean abstraction:                 1.013s
    Solving time:                        0.698s (Max:     0.020s)
    Model enumeration time:              0.070s
    Time for BDD construction:           0.103s (Max:     0.016s)
Time for merge operator:                 0.060s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     0.768s

Number of path formula cache hits:   406931 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.081s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               300
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3124 (count: 19323, min: 0, max: 529, avg: 0.16)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.616s
  Time for transition matches:                         0.291s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       338506 (count: 338506, min: 1, max: 1, avg: 1.00) [1 x 338506]

CPA algorithm statistics
------------------------
Number of iterations:            215039
Max size of waitlist:            44
Average size of waitlist:        25
Number of computed successors:   232509
Max successors for one state:    2
Number of times merged:          6885
Number of times stopped:         11729
Number of times breaked:         126

Total time for CPA algorithm:        20.833s (Max:     0.555s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:     13.522s
  Time for transfer relation:         5.546s
  Time for merge operator:            0.287s
  Time for stop operator:             0.361s
  Time for adding to reached set:     0.323s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   126
Avg. length of target path (in blocks):               19138 (count: 126, min: 12, max: 229, avg: 151.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.860s
  Counterexample analysis:                             3.899s (Max:     0.106s, Calls: 126)
    Refinement sat check:                              1.348s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.151s
  Precision update:                                    0.123s
  ARG update:                                          0.530s

Length of refined path (in blocks):                   18743 (count: 126, min: 11, max: 226, avg: 148.75)
Number of affected states:                            18123 (count: 126, min: 5, max: 224, avg: 143.83)
Length (states) of path with itp 'true':                494 (count: 126, min: 0, max: 126, avg: 3.92)
Length (states) of path with itp non-trivial itp:     18123 (count: 126, min: 5, max: 224, avg: 143.83)
Length (states) of path with itp 'false':               126 (count: 126, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 126, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           17997 (count: 126, min: 4, max: 223, avg: 142.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                126
Number of successful refinements:     126
Number of failed refinements:         0
Max. size of reached set before ref.: 4006
Max. size of reached set after ref.:  2076
Avg. size of reached set before ref.: 1758.22
Avg. size of reached set after ref.:  38.29

Total time for CEGAR algorithm:      26.118s
Time for refinements:                 5.259s
Average time for refinement:          0.041s
Max time for refinement:              0.128s

Code Coverage
-----------------------------
  Function coverage:      0.470
  Visited lines:          1255
  Total lines:            1885
  Line coverage:          0.666
  Visited conditions:     116
  Total conditions:       310
  Condition coverage:     0.374

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             1845
  Number of reached locations:   454 (18%)
    Avg states per location:     4
    Max states per location:     113 (at node N52)
  Number of reached functions:   39 (47%)
  Number of partitions:          1835
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1268 (before line 6066), Function hardware_init called from node N698, stack depth 3 [4fe58ecd], stack [main, znet_open, hardware_init]])
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          3.719s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.451s
  Time for CFA construction:      2.434s
    Time for parsing file(s):     0.717s
    Time for AST to CFA:          0.766s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.655s
      Time for var class.:        0.332s
Time for Analysis:               26.119s
CPU time for analysis:           26.120s
Total time for CPAchecker:       29.840s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.123s

Time for Garbage Collector:       0.806s (in 158 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    66 MiB) max;     47MB (    45 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
