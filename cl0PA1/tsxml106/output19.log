scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3_true-termination.8-rc1-32_7a-drivers--net--ethernet--i825xx--znet.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k0a212ay/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6272: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_pad to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            72507 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  69348 (96%)
  Because of loop head:            3072 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       17245 (24%)
  Times precision was {false}:     545 (1%)
  Times result was cached:         52687 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2030 (3%)
  Times result was 'false':        667 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         33822
  BDD entailment checks:           11668
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          6
Number of abstraction locations:          197
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         224555
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 87.21
Number of irrelevant predicates:          125275 (56%)
Number of preds handled by boolean abs:   4779 (2%)
  Total number of models for allsat:      2013
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  4.159s
  Time for path formula creation:        3.960s
Time for strengthen operator:            0.398s
Time for prec operator:                 10.963s
  Time for abstraction:                 10.077s (Max:     0.039s, Count: 72507)
    Boolean abstraction:                 1.436s
    Solving time:                        1.198s (Max:     0.021s)
    Model enumeration time:              0.124s
    Time for BDD construction:           0.147s (Max:     0.013s)
Time for merge operator:                 0.214s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     1.322s

Number of path formula cache hits:   397508 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.379s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               244
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4204 (count: 43892, min: 0, max: 210, avg: 0.10)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.684s
  Time for transition matches:                         0.349s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       370921 (count: 370921, min: 1, max: 1, avg: 1.00) [1 x 370921]

CPA algorithm statistics
------------------------
Number of iterations:            230657
Max size of waitlist:            54
Average size of waitlist:        18
Number of computed successors:   252082
Max successors for one state:    2
Number of times merged:          11077
Number of times stopped:         18285
Number of times breaked:         87

Total time for CPA algorithm:        23.682s (Max:     1.409s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:     12.685s
  Time for transfer relation:         8.682s
  Time for merge operator:            0.453s
  Time for stop operator:             0.366s
  Time for adding to reached set:     0.414s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                6718 (count: 87, min: 23, max: 232, avg: 77.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.247s
  Counterexample analysis:                             1.441s (Max:     0.042s, Calls: 87)
    Refinement sat check:                              0.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.095s
  Precision update:                                    0.089s
  ARG update:                                          0.536s

Length of refined path (in blocks):                    6525 (count: 87, min: 20, max: 229, avg: 75.00)
Number of affected states:                             6350 (count: 87, min: 5, max: 227, avg: 72.99)
Length (states) of path with itp 'true':                 88 (count: 87, min: 0, max: 23, avg: 1.01)
Length (states) of path with itp non-trivial itp:      6350 (count: 87, min: 5, max: 227, avg: 72.99)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 87, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6263 (count: 87, min: 4, max: 226, avg: 71.99)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 8221
Max. size of reached set after ref.:  1295
Avg. size of reached set before ref.: 2699.38
Avg. size of reached set after ref.:  20.09

Total time for CEGAR algorithm:      26.243s
Time for refinements:                 2.548s
Average time for refinement:          0.029s
Max time for refinement:              0.078s

Code Coverage
-----------------------------
  Function coverage:      0.048
  Visited lines:          824
  Total lines:            1885
  Line coverage:          0.437
  Visited conditions:     6
  Total conditions:       310
  Condition coverage:     0.019

CPAchecker general statistics
-----------------------------
Number of program locations:     2499
Number of CFA edges:             2762
Number of relevant variables:    235
Number of functions:             83
Number of loops:                 8
Size of reached set:             31
  Number of reached locations:   28 (1%)
    Avg states per location:     1
    Max states per location:     2 (at node N41)
  Number of reached functions:   4 (5%)
  Number of partitions:          31
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          4.087s
  Time for loading CPAs:          0.837s
  Time for loading parser:        0.537s
  Time for CFA construction:      2.599s
    Time for parsing file(s):     0.764s
    Time for AST to CFA:          0.837s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.657s
      Time for var class.:        0.283s
Time for Analysis:               26.243s
CPU time for analysis:           26.240s
Total time for CPAchecker:       30.335s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.066s

Time for Garbage Collector:       1.204s (in 126 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                107MB (   102 MiB) max;     56MB (    53 MiB) avg;    119MB (   113 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
