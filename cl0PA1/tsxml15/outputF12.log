scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kn4ztkk0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1592521 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1270454 (80%)
  Because of loop head:            315757 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6310 (0%)
  Times precision was empty:       300427 (19%)
  Times precision was {false}:     6228 (0%)
  Times result was cached:         1259770 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26096 (2%)
  Times result was 'false':        119736 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1847781
  BDD entailment checks:           1080753
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          18
Number of abstraction locations:          144
Max number of predicates per location:    13
Avg number of predicates per location:    7
Total predicates per abstraction:         9726262
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 300.90
Number of irrelevant predicates:          2697263 (28%)
Number of preds handled by boolean abs:   129892 (1%)
  Total number of models for allsat:      29750
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.14

Time for post operator:                 42.570s
  Time for path formula creation:       40.133s
Time for strengthen operator:            6.153s
Time for prec operator:                391.449s
  Time for abstraction:                381.078s (Max:     0.952s, Count: 1592521)
    Boolean abstraction:                63.359s
    Solving time:                       54.823s (Max:     0.291s)
    Model enumeration time:              8.776s
    Time for BDD construction:           0.472s (Max:     0.012s)
Time for merge operator:                 2.872s
Time for coverage check:                 0.893s
  Time for BDD entailment checks:        0.691s
Total time for SMT solver (w/o itp):    63.599s

Number of path formula cache hits:   12400248 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.092s

Total number of created targets for pointer analysis: 597065
   Number of created targets for uf: *(void)* is 1823
   Number of created targets for uf: *(struct_pi_adapter)* is 2925
   Number of created targets for uf: *signed_int is 29951
   Number of created targets for uf: *(char)* is 2925
   Number of created targets for uf: *(struct_gendisk)* is 2925
   Number of created targets for uf: *char is 103585


Number of BDD nodes:                               16304
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       53231 (count: 1592217, min: 0, max: 549, avg: 0.03)
Time for BDD node cleanup:                             0.181s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.669s
  Time for transition matches:                         5.705s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                     11426080 (count: 11426080, min: 1, max: 1, avg: 1.00) [1 x 11426080]

CPA algorithm statistics
------------------------
Number of iterations:            6016393
Max size of waitlist:            1409
Average size of waitlist:        452
Number of computed successors:   7001875
Max successors for one state:    2
Number of times merged:          383514
Number of times stopped:         672262
Number of times breaked:         6310

Total time for CPA algorithm:       539.770s (Max:     8.199s)
  Time for choose from waitlist:      1.969s
  Time for precision adjustment:    413.822s
  Time for transfer relation:        97.853s
  Time for merge operator:            6.237s
  Time for stop operator:             5.198s
  Time for adding to reached set:     5.756s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6310
Avg. length of target path (in blocks):              346029 (count: 6310, min: 8, max: 90, avg: 54.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 150.276s
  Counterexample analysis:                           137.716s (Max:     0.074s, Calls: 6310)
    Refinement sat check:                            103.519s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.147s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.258s
  Precision update:                                    2.704s
  ARG update:                                          7.818s

Length of refined path (in blocks):                  336946 (count: 6310, min: 4, max: 77, avg: 53.40)
Number of affected states:                            36044 (count: 6310, min: 0, max: 76, avg: 5.71)
Length (states) of path with itp 'true':             294592 (count: 6310, min: 0, max: 72, avg: 46.69)
Length (states) of path with itp non-trivial itp:     36044 (count: 6310, min: 0, max: 76, avg: 5.71)
Length (states) of path with itp 'false':              6310 (count: 6310, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 6310, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           29741 (count: 6310, min: 0, max: 75, avg: 4.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6310
Number of successful refinements:     6310
Number of failed refinements:         0
Max. size of reached set before ref.: 36724
Max. size of reached set after ref.:  36394
Avg. size of reached set before ref.: 26976.22
Avg. size of reached set after ref.:  25996.05

Total time for CEGAR algorithm:     896.994s
Time for refinements:               266.295s
Average time for refinement:          0.042s
Max time for refinement:              0.967s

Code Coverage
-----------------------------
  Function coverage:      0.553
  Visited lines:          1552
  Total lines:            2092
  Line coverage:          0.742
  Visited conditions:     258
  Total conditions:       494
  Condition coverage:     0.522

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             25034
  Number of reached locations:   728 (26%)
    Avg states per location:     34
    Max states per location:     455 (at node N234)
  Number of reached functions:   52 (55%)
  Number of partitions:          24723
    Avg size of partitions:      1
    Max size of partitions:      23 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [1c025cb], stack [main]])
  Number of target states:       0
  Size of final wait list        600

Time for analysis setup:          3.340s
  Time for loading CPAs:          0.581s
  Time for loading parser:        0.492s
  Time for CFA construction:      2.151s
    Time for parsing file(s):     0.634s
    Time for AST to CFA:          0.707s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.552s
      Time for var class.:        0.262s
Time for Analysis:              896.994s
CPU time for analysis:          896.870s
Total time for CPAchecker:      900.338s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.345s

Time for Garbage Collector:      48.254s (in 2246 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                611MB (   583 MiB) max;    336MB (   321 MiB) avg;    619MB (   590 MiB) peak
Used non-heap memory:             41MB (    40 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           633MB (   603 MiB) max;    490MB (   467 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8563MB (  8167 MiB) max;   8424MB (  8034 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
