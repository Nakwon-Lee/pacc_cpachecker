scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vkw541_c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4713257 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4114232 (87%)
  Because of loop head:            598263 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         762 (0%)
  Times precision was empty:       1447925 (31%)
  Times precision was {false}:     1695 (0%)
  Times result was cached:         3258829 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      4808 (0%)
  Times result was 'false':        12169 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4912907
  BDD entailment checks:           947815
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          17
Number of abstraction locations:          128
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         9284502
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 1427.73
Number of irrelevant predicates:          9052192 (97%)
Number of preds handled by boolean abs:   9015 (0%)
  Total number of models for allsat:      4875
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.01

Time for post operator:                123.803s
  Time for path formula creation:      114.586s
Time for strengthen operator:           15.860s
Time for prec operator:                265.792s
  Time for abstraction:                228.258s (Max:     2.772s, Count: 4713257)
    Boolean abstraction:                 6.652s
    Solving time:                        8.482s (Max:     0.108s)
    Model enumeration time:              0.725s
    Time for BDD construction:           0.077s (Max:     0.004s)
Time for merge operator:                13.747s
Time for coverage check:                 1.077s
  Time for BDD entailment checks:        0.584s
Total time for SMT solver (w/o itp):     9.207s

Number of path formula cache hits:   32715313 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    56.673s

Total number of created targets for pointer analysis: 1450621
   Number of created targets for uf: *(void)* is 415
   Number of created targets for uf: *(struct_pi_adapter)* is 557
   Number of created targets for uf: *signed_int is 6236
   Number of created targets for uf: *(char)* is 557
   Number of created targets for uf: *(struct_gendisk)* is 557
   Number of created targets for uf: *char is 84727


Number of BDD nodes:                               909
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10121 (count: 2434204, min: 0, max: 270, avg: 0.00)
Time for BDD node cleanup:                             0.296s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 25.414s
  Time for transition matches:                        13.714s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     28553021 (count: 28553021, min: 1, max: 1, avg: 1.00) [1 x 28553021]

CPA algorithm statistics
------------------------
Number of iterations:            18349637
Max size of waitlist:            78
Average size of waitlist:        56
Number of computed successors:   21254349
Max successors for one state:    2
Number of times merged:          1982546
Number of times stopped:         2883206
Number of times breaked:         762

Total time for CPA algorithm:       716.507s (Max:    23.041s)
  Time for choose from waitlist:      4.188s
  Time for precision adjustment:    347.319s
  Time for transfer relation:       277.688s
  Time for merge operator:           27.862s
  Time for stop operator:            14.535s
  Time for adding to reached set:    15.140s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   762
Avg. length of target path (in blocks):               35394 (count: 762, min: 8, max: 91, avg: 46.45)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.140s
  Counterexample analysis:                            26.181s (Max:     0.088s, Calls: 762)
    Refinement sat check:                             21.706s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.200s
  ARG update:                                         32.412s

Length of refined path (in blocks):                   34308 (count: 762, min: 4, max: 90, avg: 45.02)
Number of affected states:                             6250 (count: 762, min: 0, max: 88, avg: 8.20)
Length (states) of path with itp 'true':              27296 (count: 762, min: 0, max: 80, avg: 35.82)
Length (states) of path with itp non-trivial itp:      6250 (count: 762, min: 0, max: 88, avg: 8.20)
Length (states) of path with itp 'false':               762 (count: 762, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 762, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5489 (count: 762, min: 0, max: 87, avg: 7.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                762
Number of successful refinements:     762
Number of failed refinements:         0
Max. size of reached set before ref.: 396088
Max. size of reached set after ref.:  222219
Avg. size of reached set before ref.: 122332.82
Avg. size of reached set after ref.:  98515.77

Total time for CEGAR algorithm:     896.680s
Time for refinements:               126.508s
Average time for refinement:          0.166s
Max time for refinement:              1.734s

Code Coverage
-----------------------------
  Function coverage:      0.617
  Visited lines:          1853
  Total lines:            2092
  Line coverage:          0.886
  Visited conditions:     390
  Total conditions:       494
  Condition coverage:     0.789

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             210378
  Number of reached locations:   1081 (39%)
    Avg states per location:     194
    Max states per location:     10044 (at node N227)
  Number of reached functions:   58 (62%)
  Number of partitions:          210173
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [1c025cb], stack [main]])
  Number of target states:       0
  Size of final wait list        57

Time for analysis setup:          3.671s
  Time for loading CPAs:          0.685s
  Time for loading parser:        0.520s
  Time for CFA construction:      2.352s
    Time for parsing file(s):     0.743s
    Time for AST to CFA:          0.742s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     0.576s
      Time for var class.:        0.264s
Time for Analysis:              896.680s
CPU time for analysis:          896.630s
Total time for CPAchecker:      900.354s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              1.618s

Time for Garbage Collector:     118.829s (in 1378 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1782MB (  1700 MiB) max;    646MB (   617 MiB) avg;   1845MB (  1760 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1905MB (  1816 MiB) max;    944MB (   900 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8035MB (  7663 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
