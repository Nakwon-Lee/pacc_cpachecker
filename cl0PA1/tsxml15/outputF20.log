scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v9p_t25v/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3379589 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2941916 (87%)
  Because of loop head:            436636 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1037 (0%)
  Times precision was empty:       512346 (15%)
  Times precision was {false}:     3941 (0%)
  Times result was cached:         2851242 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12060 (0%)
  Times result was 'false':        23053 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3520923
  BDD entailment checks:           691647
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          18
Number of abstraction locations:          136
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         14779847
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 923.68
Number of irrelevant predicates:          8935394 (60%)
Number of preds handled by boolean abs:   35427 (0%)
  Total number of models for allsat:      13046
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.08

Time for post operator:                 91.246s
  Time for path formula creation:       86.205s
Time for strengthen operator:           11.528s
Time for prec operator:                472.226s
  Time for abstraction:                447.425s (Max:     1.928s, Count: 3379589)
    Boolean abstraction:                60.198s
    Solving time:                       73.397s (Max:     0.265s)
    Model enumeration time:              6.275s
    Time for BDD construction:           0.173s (Max:     0.004s)
Time for merge operator:                 9.068s
Time for coverage check:                 0.866s
  Time for BDD entailment checks:        0.490s
Total time for SMT solver (w/o itp):    79.672s

Number of path formula cache hits:   23683143 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    37.856s

Total number of created targets for pointer analysis: 955960
   Number of created targets for uf: *(void)* is 335
   Number of created targets for uf: *(struct_pi_adapter)* is 153
   Number of created targets for uf: *signed_int is 1531
   Number of created targets for uf: *(char)* is 153
   Number of created targets for uf: *(struct_gendisk)* is 153
   Number of created targets for uf: *char is 272833


Number of BDD nodes:                               2576
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25437 (count: 1298210, min: 0, max: 507, avg: 0.02)
Time for BDD node cleanup:                             0.163s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.350s
  Time for transition matches:                        10.259s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     20455700 (count: 20455700, min: 1, max: 1, avg: 1.00) [1 x 20455700]

CPA algorithm statistics
------------------------
Number of iterations:            13173955
Max size of waitlist:            65
Average size of waitlist:        20
Number of computed successors:   15259293
Max successors for one state:    2
Number of times merged:          1414638
Number of times stopped:         2059183
Number of times breaked:         1037

Total time for CPA algorithm:       793.845s (Max:     8.203s)
  Time for choose from waitlist:      2.865s
  Time for precision adjustment:    530.917s
  Time for transfer relation:       201.929s
  Time for merge operator:           17.171s
  Time for stop operator:            10.124s
  Time for adding to reached set:    10.678s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1037
Avg. length of target path (in blocks):               33712 (count: 1037, min: 8, max: 113, avg: 32.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  45.528s
  Counterexample analysis:                            22.494s (Max:     0.109s, Calls: 1037)
    Refinement sat check:                             18.284s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.105s
  Precision update:                                    0.335s
  ARG update:                                         22.328s

Length of refined path (in blocks):                   30798 (count: 1037, min: 4, max: 82, avg: 29.70)
Number of affected states:                            10678 (count: 1037, min: 0, max: 81, avg: 10.30)
Length (states) of path with itp 'true':              19083 (count: 1037, min: 0, max: 71, avg: 18.40)
Length (states) of path with itp non-trivial itp:     10678 (count: 1037, min: 0, max: 81, avg: 10.30)
Length (states) of path with itp 'false':              1037 (count: 1037, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1037, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9680 (count: 1037, min: 0, max: 80, avg: 9.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1037
Number of successful refinements:     1037
Number of failed refinements:         0
Max. size of reached set before ref.: 139450
Max. size of reached set after ref.:  138439
Avg. size of reached set before ref.: 47767.40
Avg. size of reached set after ref.:  35128.36

Total time for CEGAR algorithm:     896.903s
Time for refinements:                78.084s
Average time for refinement:          0.075s
Max time for refinement:              1.439s

Code Coverage
-----------------------------
  Function coverage:      0.606
  Visited lines:          1853
  Total lines:            2092
  Line coverage:          0.886
  Visited conditions:     402
  Total conditions:       494
  Condition coverage:     0.814

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             70378
  Number of reached locations:   1093 (39%)
    Avg states per location:     64
    Max states per location:     3089 (at node N227)
  Number of reached functions:   57 (61%)
  Number of partitions:          70336
    Avg size of partitions:      1
    Max size of partitions:      11 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [68809cc7], stack [main]])
  Number of target states:       0
  Size of final wait list        22

Time for analysis setup:          3.466s
  Time for loading CPAs:          0.706s
  Time for loading parser:        0.483s
  Time for CFA construction:      2.181s
    Time for parsing file(s):     0.673s
    Time for AST to CFA:          0.715s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.515s
      Time for var class.:        0.241s
Time for Analysis:              896.903s
CPU time for analysis:          896.800s
Total time for CPAchecker:      900.371s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.755s

Time for Garbage Collector:     107.564s (in 2675 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1184MB (  1129 MiB) max;    455MB (   434 MiB) avg;   1208MB (  1152 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1240MB (  1183 MiB) max;    668MB (   637 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8359MB (  7972 MiB) max;   8217MB (  7837 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
