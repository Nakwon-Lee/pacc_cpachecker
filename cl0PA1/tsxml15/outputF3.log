scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v5g8fens/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3242347 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2826813 (87%)
  Because of loop head:            415022 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         512 (0%)
  Times precision was empty:       172088 (5%)
  Times precision was {false}:     3258 (0%)
  Times result was cached:         3046973 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20028 (1%)
  Times result was 'false':        22233 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         3349462
  BDD entailment checks:           633118
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          17
Number of abstraction locations:          169
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         19299128
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 828.79
Number of irrelevant predicates:          12198609 (63%)
Number of preds handled by boolean abs:   76243 (0%)
  Total number of models for allsat:      20872
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.04

Time for post operator:                113.645s
  Time for path formula creation:      109.063s
Time for strengthen operator:           10.877s
Time for prec operator:                507.340s
  Time for abstraction:                481.722s (Max:     2.885s, Count: 3242347)
    Boolean abstraction:                61.137s
    Solving time:                       66.773s (Max:     0.191s)
    Model enumeration time:              4.276s
    Time for BDD construction:           0.289s (Max:     0.008s)
Time for merge operator:                11.231s
Time for coverage check:                 0.875s
  Time for BDD entailment checks:        0.546s
Total time for SMT solver (w/o itp):    71.049s

Number of path formula cache hits:   21854819 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.725s

Total number of created targets for pointer analysis: 1328167
   Number of created targets for uf: *(void)* is 684
   Number of created targets for uf: *(struct_pi_adapter)* is 393
   Number of created targets for uf: *signed_int is 4081
   Number of created targets for uf: *(char)* is 393
   Number of created targets for uf: *(struct_gendisk)* is 393
   Number of created targets for uf: *char is 98349


Number of BDD nodes:                               2538
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       41460 (count: 944322, min: 0, max: 782, avg: 0.04)
Time for BDD node cleanup:                             0.130s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 18.023s
  Time for transition matches:                         9.970s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     19593613 (count: 19593613, min: 1, max: 1, avg: 1.00) [1 x 19593613]

CPA algorithm statistics
------------------------
Number of iterations:            12556376
Max size of waitlist:            71
Average size of waitlist:        43
Number of computed successors:   14555601
Max successors for one state:    2
Number of times merged:          1358172
Number of times stopped:         1962287
Number of times breaked:         512

Total time for CPA algorithm:       844.020s (Max:    13.885s)
  Time for choose from waitlist:      2.976s
  Time for precision adjustment:    559.199s
  Time for transfer relation:       221.505s
  Time for merge operator:           19.021s
  Time for stop operator:            10.146s
  Time for adding to reached set:    11.075s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   512
Avg. length of target path (in blocks):               21915 (count: 512, min: 8, max: 88, avg: 42.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  38.410s
  Counterexample analysis:                            18.027s (Max:     0.106s, Calls: 512)
    Refinement sat check:                             14.604s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.102s
  Precision update:                                    0.215s
  ARG update:                                         19.887s

Length of refined path (in blocks):                   20456 (count: 512, min: 4, max: 85, avg: 39.95)
Number of affected states:                            12107 (count: 512, min: 0, max: 79, avg: 23.65)
Length (states) of path with itp 'true':               7837 (count: 512, min: 0, max: 77, avg: 15.31)
Length (states) of path with itp non-trivial itp:     12107 (count: 512, min: 0, max: 79, avg: 23.65)
Length (states) of path with itp 'false':               512 (count: 512, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 512, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11601 (count: 512, min: 0, max: 78, avg: 22.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                512
Number of successful refinements:     512
Number of failed refinements:         0
Max. size of reached set before ref.: 181907
Max. size of reached set after ref.:  68425
Avg. size of reached set before ref.: 37018.48
Avg. size of reached set after ref.:  12477.64

Total time for CEGAR algorithm:     896.911s
Time for refinements:                48.742s
Average time for refinement:          0.095s
Max time for refinement:              0.526s

Code Coverage
-----------------------------
  Function coverage:      0.255
  Visited lines:          1294
  Total lines:            2092
  Line coverage:          0.619
  Visited conditions:     248
  Total conditions:       494
  Condition coverage:     0.502

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             6174
  Number of reached locations:   572 (21%)
    Avg states per location:     10
    Max states per location:     272 (at node N227)
  Number of reached functions:   24 (26%)
  Number of partitions:          6171
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N197 (before line 3829), Function pcd_init_units called from node N1397, stack depth 3 [336a557b], stack [main, pcd_init, pcd_init_units]])
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          3.405s
  Time for loading CPAs:          0.674s
  Time for loading parser:        0.456s
  Time for CFA construction:      2.191s
    Time for parsing file(s):     0.567s
    Time for AST to CFA:          0.790s
    Time for CFA sanity check:    0.149s
    Time for post-processing:     0.551s
      Time for var class.:        0.269s
Time for Analysis:              896.911s
CPU time for analysis:          896.840s
Total time for CPAchecker:      900.319s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.145s

Time for Garbage Collector:      98.313s (in 1606 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1681MB (  1603 MiB) max;    713MB (   680 MiB) avg;   1713MB (  1633 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1722MB (  1642 MiB) max;   1042MB (   993 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8425MB (  8035 MiB) max;   8249MB (  7867 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
