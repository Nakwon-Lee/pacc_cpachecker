scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dzm2y8_8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2928233 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2553698 (87%)
  Because of loop head:            374062 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         473 (0%)
  Times precision was empty:       254475 (9%)
  Times precision was {false}:     3221 (0%)
  Times result was cached:         2658516 (91%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12021 (0%)
  Times result was 'false':        9312 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3070965
  BDD entailment checks:           569185
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          16
Number of abstraction locations:          103
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         15074531
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 989.01
Number of irrelevant predicates:          13618019 (90%)
Number of preds handled by boolean abs:   34706 (0%)
  Total number of models for allsat:      12773
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.06

Time for post operator:                221.132s
  Time for path formula creation:      209.894s
Time for strengthen operator:           11.437s
Time for prec operator:                354.030s
  Time for abstraction:                325.564s (Max:     2.085s, Count: 2928233)
    Boolean abstraction:                32.927s
    Solving time:                       42.441s (Max:     0.176s)
    Model enumeration time:              2.994s
    Time for BDD construction:           0.173s (Max:     0.005s)
Time for merge operator:                23.524s
Time for coverage check:                 0.669s
  Time for BDD entailment checks:        0.365s
Total time for SMT solver (w/o itp):    45.435s

Number of path formula cache hits:   15092465 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   153.819s

Total number of created targets for pointer analysis: 4192935
   Number of created targets for uf: *(void)* is 1553
   Number of created targets for uf: *(struct_pi_adapter)* is 1153
   Number of created targets for uf: *signed_int is 12571
   Number of created targets for uf: *(char)* is 1153
   Number of created targets for uf: *(struct_gendisk)* is 1153
   Number of created targets for uf: *char is 316833


Number of BDD nodes:                               670
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24531 (count: 912767, min: 0, max: 374, avg: 0.03)
Time for BDD node cleanup:                             0.134s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.292s
  Time for transition matches:                         9.591s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     17837904 (count: 17837904, min: 1, max: 1, avg: 1.00) [1 x 17837904]

CPA algorithm statistics
------------------------
Number of iterations:            11437856
Max size of waitlist:            59
Average size of waitlist:        35
Number of computed successors:   13261533
Max successors for one state:    2
Number of times merged:          1250890
Number of times stopped:         1810460
Number of times breaked:         473

Total time for CPA algorithm:       811.459s (Max:     8.373s)
  Time for choose from waitlist:      3.063s
  Time for precision adjustment:    411.314s
  Time for transfer relation:       324.377s
  Time for merge operator:           32.016s
  Time for stop operator:             9.567s
  Time for adding to reached set:    12.491s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   473
Avg. length of target path (in blocks):               25311 (count: 473, min: 8, max: 93, avg: 53.51)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  39.197s
  Counterexample analysis:                            17.348s (Max:     0.127s, Calls: 473)
    Refinement sat check:                             13.926s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.208s
  ARG update:                                         21.394s

Length of refined path (in blocks):                   24203 (count: 473, min: 4, max: 85, avg: 51.17)
Number of affected states:                             7014 (count: 473, min: 0, max: 65, avg: 14.83)
Length (states) of path with itp 'true':              16716 (count: 473, min: 0, max: 77, avg: 35.34)
Length (states) of path with itp non-trivial itp:      7014 (count: 473, min: 0, max: 65, avg: 14.83)
Length (states) of path with itp 'false':               473 (count: 473, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 473, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6544 (count: 473, min: 0, max: 64, avg: 13.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                473
Number of successful refinements:     473
Number of failed refinements:         0
Max. size of reached set before ref.: 127929
Max. size of reached set after ref.:  94674
Avg. size of reached set before ref.: 82296.17
Avg. size of reached set after ref.:  58363.11

Total time for CEGAR algorithm:     896.783s
Time for refinements:                65.973s
Average time for refinement:          0.139s
Max time for refinement:              2.845s

Code Coverage
-----------------------------
  Function coverage:      0.617
  Visited lines:          1849
  Total lines:            2092
  Line coverage:          0.884
  Visited conditions:     400
  Total conditions:       494
  Condition coverage:     0.810

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             121421
  Number of reached locations:   1092 (39%)
    Avg states per location:     111
    Max states per location:     5772 (at node N227)
  Number of reached functions:   58 (62%)
  Number of partitions:          121367
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1518 (before line 5250), Function main called from node N1505, stack depth 1 [f973499], stack [main]])
  Number of target states:       0
  Size of final wait list        33

Time for analysis setup:          3.518s
  Time for loading CPAs:          0.672s
  Time for loading parser:        0.500s
  Time for CFA construction:      2.250s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.731s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.545s
      Time for var class.:        0.247s
Time for Analysis:              896.784s
CPU time for analysis:          896.740s
Total time for CPAchecker:      900.314s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              1.060s

Time for Garbage Collector:     103.744s (in 1317 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               3333MB (  3178 MiB) max;   1222MB (  1165 MiB) avg;   3439MB (  3279 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          4339MB (  4138 MiB) max;   1817MB (  1733 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8359MB (  7971 MiB) max;   8269MB (  7886 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
