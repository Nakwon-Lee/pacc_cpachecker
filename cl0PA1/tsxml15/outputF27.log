scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ult63ycr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdrom_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2484423 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2130261 (86%)
  Because of loop head:            353573 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         589 (0%)
  Times precision was empty:       88225 (4%)
  Times precision was {false}:     4054 (0%)
  Times result was cached:         2375300 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      16844 (1%)
  Times result was 'false':        30155 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2587588
  BDD entailment checks:           526868
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          18
Number of abstraction locations:          118
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         14360692
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 687.18
Number of irrelevant predicates:          4665139 (32%)
Number of preds handled by boolean abs:   60947 (0%)
  Total number of models for allsat:      18100
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.07

Time for post operator:                161.862s
  Time for path formula creation:      157.856s
Time for strengthen operator:            8.664s
Time for prec operator:                471.936s
  Time for abstraction:                449.730s (Max:     3.843s, Count: 2484423)
    Boolean abstraction:                62.081s
    Solving time:                       66.460s (Max:     0.212s)
    Model enumeration time:              5.322s
    Time for BDD construction:           0.306s (Max:     0.010s)
Time for merge operator:                17.145s
Time for coverage check:                 0.661s
  Time for BDD entailment checks:        0.409s
Total time for SMT solver (w/o itp):    71.782s

Number of path formula cache hits:   14314829 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   109.756s

Total number of created targets for pointer analysis: 3553616
   Number of created targets for uf: *(void)* is 1082
   Number of created targets for uf: *(struct_pi_adapter)* is 1653
   Number of created targets for uf: *signed_int is 19441
   Number of created targets for uf: *(char)* is 1653
   Number of created targets for uf: *(struct_gendisk)* is 1653
   Number of created targets for uf: *char is 801983


Number of BDD nodes:                               6918
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       36689 (count: 741108, min: 0, max: 539, avg: 0.05)
Time for BDD node cleanup:                             0.113s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.243s
  Time for transition matches:                         7.591s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     15481895 (count: 15481895, min: 1, max: 1, avg: 1.00) [1 x 15481895]

CPA algorithm statistics
------------------------
Number of iterations:            9694257
Max size of waitlist:            659
Average size of waitlist:        181
Number of computed successors:   11262631
Max successors for one state:    2
Number of times merged:          1030360
Number of times stopped:         1489347
Number of times breaked:         589

Total time for CPA algorithm:       817.615s (Max:     9.610s)
  Time for choose from waitlist:      2.060s
  Time for precision adjustment:    513.875s
  Time for transfer relation:       246.311s
  Time for merge operator:           24.344s
  Time for stop operator:             8.379s
  Time for adding to reached set:     7.613s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   589
Avg. length of target path (in blocks):               28937 (count: 589, min: 8, max: 116, avg: 49.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  43.742s
  Counterexample analysis:                            27.696s (Max:     0.144s, Calls: 589)
    Refinement sat check:                             22.693s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.094s
  Precision update:                                    0.279s
  ARG update:                                         15.251s

Length of refined path (in blocks):                   26325 (count: 589, min: 4, max: 90, avg: 44.69)
Number of affected states:                            12185 (count: 589, min: 0, max: 85, avg: 20.69)
Length (states) of path with itp 'true':              13551 (count: 589, min: 0, max: 85, avg: 23.01)
Length (states) of path with itp non-trivial itp:     12185 (count: 589, min: 0, max: 85, avg: 20.69)
Length (states) of path with itp 'false':               589 (count: 589, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 589, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11602 (count: 589, min: 0, max: 84, avg: 19.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                589
Number of successful refinements:     589
Number of failed refinements:         0
Max. size of reached set before ref.: 162002
Max. size of reached set after ref.:  151572
Avg. size of reached set before ref.: 54005.67
Avg. size of reached set after ref.:  37464.47

Total time for CEGAR algorithm:     896.898s
Time for refinements:                64.076s
Average time for refinement:          0.108s
Max time for refinement:              0.386s

Code Coverage
-----------------------------
  Function coverage:      0.170
  Visited lines:          1022
  Total lines:            2092
  Line coverage:          0.489
  Visited conditions:     142
  Total conditions:       494
  Condition coverage:     0.287

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             365
  Number of reached locations:   288 (10%)
    Avg states per location:     1
    Max states per location:     8 (at node N287)
  Number of reached functions:   16 (17%)
  Number of partitions:          363
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N197 (before line 3829), Function pcd_init_units called from node N1397, stack depth 3 [9b70c8a], stack [main, pcd_init, pcd_init_units]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          3.494s
  Time for loading CPAs:          0.732s
  Time for loading parser:        0.474s
  Time for CFA construction:      2.193s
    Time for parsing file(s):     0.626s
    Time for AST to CFA:          0.748s
    Time for CFA sanity check:    0.143s
    Time for post-processing:     0.534s
      Time for var class.:        0.236s
Time for Analysis:              896.898s
CPU time for analysis:          896.840s
Total time for CPAchecker:      900.396s
Total CPU time for CPAchecker:  900.330s
Time for statistics:              0.045s

Time for Garbage Collector:      90.078s (in 1382 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2380MB (  2269 MiB) max;    845MB (   806 MiB) avg;   2419MB (  2307 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          2570MB (  2451 MiB) max;   1237MB (  1180 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8423MB (  8033 MiB) max;   8251MB (  7869 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
