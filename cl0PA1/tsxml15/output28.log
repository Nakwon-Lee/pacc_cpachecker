scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pcd.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ybe681y2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4029: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4099: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4150: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4890: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4939: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 5595: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function delayed_work_timer_fn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3676: Ignoring call via function pointer ps_ready for which no suitable target was found in line: tmp___0 = (*ps_ready)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3676: Ignoring function call through function pointer *ps_ready: tmp___0 = (*ps_ready)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function put_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_cleanup_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_gendisk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3686: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3686: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pi_do_claimed to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_cur to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_fetch_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __blk_end_request_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3680: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3680: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3673: Ignoring call via function pointer ps_tq_int::con for which no suitable target was found in line: (*con)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3673: Ignoring function call through function pointer *con: (*con)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function register_blkdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_init_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_cdrom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_disk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            108030 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  94343 (87%)
  Because of loop head:            13659 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (0%)
  Times precision was empty:       107146 (99%)
  Times precision was {false}:     149 (0%)
  Times result was cached:         629 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      106 (0%)
  Times result was 'false':        190 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         112947
  BDD entailment checks:           20953
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       60
Number of predicates discovered:          10
Number of abstraction locations:          26
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         2562
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 10.05
Number of irrelevant predicates:          1891 (74%)
Number of preds handled by boolean abs:   252 (10%)
  Total number of models for allsat:      123
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.16

Time for post operator:                  7.291s
  Time for path formula creation:        6.897s
Time for strengthen operator:            0.595s
Time for prec operator:                  2.936s
  Time for abstraction:                  1.745s (Max:     0.083s, Count: 108030)
    Boolean abstraction:                 0.491s
    Solving time:                        0.574s (Max:     0.064s)
    Model enumeration time:              0.053s
    Time for BDD construction:           0.015s (Max:     0.008s)
Time for merge operator:                 0.678s
Time for coverage check:                 0.105s
  Time for BDD entailment checks:        0.081s
Total time for SMT solver (w/o itp):     0.627s

Number of path formula cache hits:   746799 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.678s

Total number of created targets for pointer analysis: 29480
   Number of created targets for uf: *(void)* is 13
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *(struct_gendisk)* is 9
   Number of created targets for uf: *char is 9185


Number of BDD nodes:                               269
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         404 (count: 129643, min: 0, max: 48, avg: 0.00)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.919s
  Time for transition matches:                         0.528s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       657064 (count: 657064, min: 1, max: 1, avg: 1.00) [1 x 657064]

CPA algorithm statistics
------------------------
Number of iterations:            421892
Max size of waitlist:            47
Average size of waitlist:        25
Number of computed successors:   489136
Max successors for one state:    2
Number of times merged:          45997
Number of times stopped:         66641
Number of times breaked:         28

Total time for CPA algorithm:        23.778s (Max:     5.736s)
  Time for choose from waitlist:      0.233s
  Time for precision adjustment:      6.251s
  Time for transfer relation:        13.654s
  Time for merge operator:            1.219s
  Time for stop operator:             0.620s
  Time for adding to reached set:     0.495s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 351 (count: 28, min: 8, max: 22, avg: 12.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.619s
  Counterexample analysis:                             0.402s (Max:     0.030s, Calls: 28)
    Refinement sat check:                              0.299s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.016s
  ARG update:                                          1.152s

Length of refined path (in blocks):                     229 (count: 28, min: 4, max: 15, avg: 8.18)
Number of affected states:                               73 (count: 28, min: 0, max: 11, avg: 2.61)
Length (states) of path with itp 'true':                128 (count: 28, min: 0, max: 14, avg: 4.57)
Length (states) of path with itp non-trivial itp:        73 (count: 28, min: 0, max: 11, avg: 2.61)
Length (states) of path with itp 'false':                28 (count: 28, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              55 (count: 28, min: 0, max: 10, avg: 1.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 33232
Max. size of reached set after ref.:  31955
Avg. size of reached set before ref.: 25810.89
Avg. size of reached set after ref.:  10728.75

Total time for CEGAR algorithm:      26.419s
Time for refinements:                 2.369s
Average time for refinement:          0.084s
Max time for refinement:              0.204s

Code Coverage
-----------------------------
  Function coverage:      0.021
  Visited lines:          699
  Total lines:            2092
  Line coverage:          0.334
  Visited conditions:     0
  Total conditions:       494
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2772
Number of CFA edges:             3091
Number of relevant variables:    271
Number of functions:             94
Number of loops:                 20
Size of reached set:             6
  Number of reached locations:   6 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N1505)
  Number of reached functions:   2 (2%)
  Number of partitions:          6
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.447s
  Time for loading CPAs:          0.621s
  Time for loading parser:        0.497s
  Time for CFA construction:      2.225s
    Time for parsing file(s):     0.583s
    Time for AST to CFA:          0.739s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.583s
      Time for var class.:        0.266s
Time for Analysis:               26.419s
CPU time for analysis:           26.410s
Total time for CPAchecker:       29.869s
Total CPU time for CPAchecker:   29.860s
Time for statistics:              0.038s

Time for Garbage Collector:       2.753s (in 146 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     71MB (    67 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8077MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
