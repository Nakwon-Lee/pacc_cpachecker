scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--rtl8192e--rtl8192e--r8192e_pci.ko-ldv_main7_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dcgq16nk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8240: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10382: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10605: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12413: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12709: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12917: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12956: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12983: Dead code detected: __ms___1 = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13048: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13123: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13400: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13923: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26250: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28644: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 32063: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34019: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34555: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 34577: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 37956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38187: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38349: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 39383: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 41088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 39254: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39306: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31835: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12631: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12628: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37489: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37468: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36706: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26747: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26780: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7147-7148: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26635-26636: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26669: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40056: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40049: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40041: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10268: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30989: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9887: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28019: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30755: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27898: Function pointer *(priv->rf_set_chan) with type u8 (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28670: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30210: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27953: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27949: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27937: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27927: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7467: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7337: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29519: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29515: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29737: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29732: Function pointer *(ieee->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_rtllib to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_rtllib to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 29123: Ignoring function call through function pointer *(priv->ops->get_eeprom_size): (*(priv->ops->get_eeprom_size))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29124: Ignoring function call through function pointer *(priv->ops->init_adapter_variable): (*(priv->ops->init_adapter_variable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dot11d_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function Dot11d_Channelmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 27872: Ignoring function call through function pointer *(priv->ops->irq_disable): (*(priv->ops->irq_disable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7120 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6826 (96%)
  Because of loop head:            256 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         38 (1%)
  Times precision was empty:       2199 (31%)
  Times precision was {false}:     172 (2%)
  Times result was cached:         4080 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      669 (9%)
  Times result was 'false':        238 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2784
  BDD entailment checks:           438
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          4
Number of abstraction locations:          135
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         12840
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 15.27
Number of irrelevant predicates:          2303 (18%)
Number of preds handled by boolean abs:   1313 (10%)
  Total number of models for allsat:      669
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.278s
  Time for path formula creation:        5.241s
Time for strengthen operator:            0.050s
Time for prec operator:                  9.011s
  Time for abstraction:                  8.757s (Max:     0.633s, Count: 7120)
    Boolean abstraction:                 5.908s
    Solving time:                        6.314s (Max:     0.576s)
    Model enumeration time:              0.187s
    Time for BDD construction:           0.060s (Max:     0.020s)
Time for merge operator:                 0.086s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     6.501s

Number of path formula cache hits:   39662 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.805s

Total number of created targets for pointer analysis: 29369
   Number of created targets for uf: *unsigned_char is 235
   Number of created targets for uf: *(struct_proc_dir_entry)* is 2
   Number of created targets for uf: *(struct_list_head)* is 91
   Number of created targets for uf: *signed_long_int is 13
   Number of created targets for uf: *enum_nic_t is 2
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_net_device)*],_VarArgs:_false)* is 9
   Number of created targets for uf: *unsigned_int is 673
   Number of created targets for uf: *unsigned_long_int is 6
   Number of created targets for uf: *(Return_type:_[_Bool],_Parameters:_1,_Parameter_1_type:_[(struct_net_device)*],_VarArgs:_false)* is 4


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1348 (count: 7531, min: 0, max: 300, avg: 0.18)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.146s
Automaton transfers with branching:                0
Automaton transfer successors:                        38704 (count: 38704, min: 1, max: 1, avg: 1.00) [1 x 38704]

CPA algorithm statistics
------------------------
Number of iterations:            22274
Max size of waitlist:            107
Average size of waitlist:        33
Number of computed successors:   25947
Max successors for one state:    2
Number of times merged:          1173
Number of times stopped:         1485
Number of times breaked:         38

Total time for CPA algorithm:        16.156s (Max:     3.476s)
  Time for choose from waitlist:      0.046s
  Time for precision adjustment:      9.261s
  Time for transfer relation:         6.345s
  Time for merge operator:            0.182s
  Time for stop operator:             0.090s
  Time for adding to reached set:     0.072s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   38
Avg. length of target path (in blocks):                4014 (count: 38, min: 9, max: 219, avg: 105.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 875.784s
  Counterexample analysis:                           875.459s (Max:    28.435s, Calls: 38)
    Refinement sat check:                            858.753s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.049s
  ARG update:                                          0.115s

Length of refined path (in blocks):                    3758 (count: 37, min: 8, max: 218, avg: 101.57)
Number of affected states:                             3684 (count: 37, min: 6, max: 216, avg: 99.57)
Length (states) of path with itp 'true':                 37 (count: 37, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      3684 (count: 37, min: 6, max: 216, avg: 99.57)
Length (states) of path with itp 'false':                37 (count: 37, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 37, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3647 (count: 37, min: 5, max: 215, avg: 98.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                38
Number of successful refinements:     37
Number of failed refinements:         0
Max. size of reached set before ref.: 1214
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 643.34
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:     892.096s
Time for refinements:               875.934s
Average time for refinement:         23.050s
Max time for refinement:             28.458s

Code Coverage
-----------------------------
  Function coverage:      0.147
  Visited lines:          1916
  Total lines:            14350
  Line coverage:          0.134
  Visited conditions:     334
  Total conditions:       5278
  Condition coverage:     0.063

CPAchecker general statistics
-----------------------------
Number of program locations:     21382
Number of CFA edges:             25307
Number of relevant variables:    2726
Number of functions:             587
Number of loops:                 189
Size of reached set:             1213
  Number of reached locations:   807 (4%)
    Avg states per location:     1
    Max states per location:     22 (at node N51)
  Number of reached functions:   86 (15%)
  Number of partitions:          1210
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N12386 (before line 32007), Function main called from node N12278, stack depth 1 [1141bc83], stack [main]])
  Number of target states:       1
  Size of final wait list        104

Time for analysis setup:          8.940s
  Time for loading CPAs:          0.897s
  Time for loading parser:        0.496s
  Time for CFA construction:      7.460s
    Time for parsing file(s):     1.079s
    Time for AST to CFA:          2.730s
    Time for CFA sanity check:    0.710s
    Time for post-processing:     2.714s
      Time for var class.:        1.429s
Time for Analysis:              892.096s
CPU time for analysis:          891.990s
Total time for CPAchecker:      901.039s
Total CPU time for CPAchecker:  900.900s
Time for statistics:              0.180s

Time for Garbage Collector:       0.915s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                167MB (   159 MiB) max;    138MB (   132 MiB) avg;    171MB (   163 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     45MB (    43 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           194MB (   185 MiB) max;    193MB (   184 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8568MB (  8171 MiB) max;   8443MB (  8051 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
