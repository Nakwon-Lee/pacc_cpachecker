scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--rtl8192e--rtl8192e--r8192e_pci.ko-ldv_main7_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n6dlzy9r/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8240: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10382: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10605: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12413: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12709: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12917: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12956: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12983: Dead code detected: __ms___1 = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13048: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13123: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13400: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13923: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26250: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28644: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 32063: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34019: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34555: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 34577: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 37956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38187: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38349: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 39383: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 41088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 39254: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39306: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31835: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12631: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12628: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37489: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37468: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36706: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26747: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26780: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7147-7148: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26635-26636: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26669: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40056: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40049: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40041: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10268: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30989: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9887: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28019: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30755: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27898: Function pointer *(priv->rf_set_chan) with type u8 (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28670: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30210: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27953: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27949: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27937: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27927: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7467: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7337: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29519: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29515: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29737: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29732: Function pointer *(ieee->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_rtllib to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26389: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtllib_act_scanning to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtllib_stop_scan to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28584: Ignoring function call through function pointer *(priv->rtllib->rtllib_ips_leave): (*(priv->rtllib->rtllib_ips_leave))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function HT_update_self_and_peer_setting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28019: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 31, (u8 *)(&i)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8756 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8275 (95%)
  Because of loop head:            439 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (0%)
  Times precision was empty:       3578 (41%)
  Times precision was {false}:     140 (2%)
  Times result was cached:         4788 (55%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      250 (3%)
  Times result was 'false':        257 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         6033
  BDD entailment checks:           1389
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          5
Number of abstraction locations:          54
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         14143
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 36.26
Number of irrelevant predicates:          9486 (67%)
Number of preds handled by boolean abs:   441 (3%)
  Total number of models for allsat:      249
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.455s
  Time for path formula creation:        4.422s
Time for strengthen operator:            0.074s
Time for prec operator:                  4.798s
  Time for abstraction:                  4.552s (Max:     0.313s, Count: 8756)
    Boolean abstraction:                 2.226s
    Solving time:                        2.935s (Max:     0.301s)
    Model enumeration time:              0.040s
    Time for BDD construction:           0.034s (Max:     0.012s)
Time for merge operator:                 0.116s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):     2.975s

Number of path formula cache hits:   54081 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.952s

Total number of created targets for pointer analysis: 8190
   Number of created targets for uf: *unsigned_short_int is 4
   Number of created targets for uf: *unsigned_char is 246
   Number of created targets for uf: *unsigned_long_long_int is 14
   Number of created targets for uf: *unsigned_int is 2917


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         526 (count: 7192, min: 0, max: 96, avg: 0.07)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.165s
Automaton transfers with branching:                0
Automaton transfer successors:                        52953 (count: 52953, min: 1, max: 1, avg: 1.00) [1 x 52953]

CPA algorithm statistics
------------------------
Number of iterations:            33069
Max size of waitlist:            73
Average size of waitlist:        23
Number of computed successors:   37490
Max successors for one state:    2
Number of times merged:          2322
Number of times stopped:         3078
Number of times breaked:         42

Total time for CPA algorithm:        11.775s (Max:     3.141s)
  Time for choose from waitlist:      0.045s
  Time for precision adjustment:      5.177s
  Time for transfer relation:         5.842s
  Time for merge operator:            0.188s
  Time for stop operator:             0.144s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                 948 (count: 42, min: 9, max: 34, avg: 22.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 889.574s
  Counterexample analysis:                           889.233s (Max:    22.654s, Calls: 42)
    Refinement sat check:                            878.227s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.039s
  ARG update:                                          0.175s

Length of refined path (in blocks):                     880 (count: 41, min: 8, max: 33, avg: 21.46)
Number of affected states:                              718 (count: 41, min: 4, max: 31, avg: 17.51)
Length (states) of path with itp 'true':                121 (count: 41, min: 1, max: 21, avg: 2.95)
Length (states) of path with itp non-trivial itp:       718 (count: 41, min: 4, max: 31, avg: 17.51)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 41, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             677 (count: 41, min: 3, max: 30, avg: 16.51)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 1715
Max. size of reached set after ref.:  1568
Avg. size of reached set before ref.: 954.10
Avg. size of reached set after ref.:  144.29

Total time for CEGAR algorithm:     901.471s
Time for refinements:               889.675s
Average time for refinement:         21.182s
Max time for refinement:             22.671s

Code Coverage
-----------------------------
  Function coverage:      0.135
  Visited lines:          1825
  Total lines:            14350
  Line coverage:          0.127
  Visited conditions:     250
  Total conditions:       5278
  Condition coverage:     0.047

CPAchecker general statistics
-----------------------------
Number of program locations:     21382
Number of CFA edges:             25307
Number of relevant variables:    2726
Number of functions:             587
Number of loops:                 189
Size of reached set:             1529
  Number of reached locations:   709 (3%)
    Avg states per location:     2
    Max states per location:     63 (at node N52)
  Number of reached functions:   79 (13%)
  Number of partitions:          1525
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N12386 (before line 32007), Function main called from node N12278, stack depth 1 [1141bc83], stack [main]])
  Number of target states:       1
  Size of final wait list        72

Time for analysis setup:          8.703s
  Time for loading CPAs:          0.768s
  Time for loading parser:        0.456s
  Time for CFA construction:      7.392s
    Time for parsing file(s):     1.375s
    Time for AST to CFA:          2.861s
    Time for CFA sanity check:    0.673s
    Time for post-processing:     2.303s
      Time for var class.:        1.165s
Time for Analysis:              901.471s
CPU time for analysis:          901.310s
Total time for CPAchecker:      910.177s
Total CPU time for CPAchecker:  909.990s
Time for statistics:              0.114s

Time for Garbage Collector:       0.809s (in 47 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                169MB (   161 MiB) max;    143MB (   136 MiB) avg;    175MB (   167 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     45MB (    43 MiB) avg;     47MB (    44 MiB) peak
Allocated heap memory:           194MB (   185 MiB) max;    194MB (   185 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     47MB (    45 MiB) avg
Total process virtual memory:   8500MB (  8106 MiB) max;   8408MB (  8019 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
