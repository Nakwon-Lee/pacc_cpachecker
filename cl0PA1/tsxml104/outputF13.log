scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--rtl8192e--rtl8192e--r8192e_pci.ko-ldv_main7_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wxbz13dt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8240: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10382: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10605: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12413: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12709: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12917: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12956: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12983: Dead code detected: __ms___1 = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13048: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13123: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13400: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13923: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26250: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28644: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 32063: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34019: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34555: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 34577: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 37956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38187: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38349: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 39383: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 41088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 39254: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39306: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31835: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12631: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12628: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37489: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37468: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36706: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26747: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26780: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7147-7148: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26635-26636: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26669: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40056: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40049: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40041: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10268: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30989: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9887: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28019: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30755: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27898: Function pointer *(priv->rf_set_chan) with type u8 (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28670: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30210: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27953: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27949: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27937: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27927: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7467: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7337: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29519: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29515: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29737: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29732: Function pointer *(ieee->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_rtllib to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_rtllib to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcie_capability_read_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_name to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 29123: Ignoring function call through function pointer *(priv->ops->get_eeprom_size): (*(priv->ops->get_eeprom_size))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 29124: Ignoring function call through function pointer *(priv->ops->init_adapter_variable): (*(priv->ops->init_adapter_variable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dot11d_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function Dot11d_Channelmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtllib_MgntDisconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 31783: Ignoring function call through function pointer *(priv->ops->initialize_adapter): init_status = (*(priv->ops->initialize_adapter))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 27860: Ignoring function call through function pointer *(priv->ops->irq_enable): (*(priv->ops->irq_enable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 27860: Unsupported feature (recursion): rtl8192_hw_wakeup(dev); (line was originally pointer call(rtl8192_hw_wakeup) (*((priv->ops)->irq_enable))(dev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            481 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  449 (93%)
  Because of loop head:            29 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3 (1%)
  Times precision was empty:       454 (94%)
  Times precision was {false}:     9 (2%)
  Times result was cached:         4 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (3%)
  Times result was 'false':        6 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         228
  BDD entailment checks:           26
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          4
Number of abstraction locations:          7
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         45
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 1.96
Number of irrelevant predicates:          9 (20%)
Number of preds handled by boolean abs:   27 (60%)
  Total number of models for allsat:      14
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.715s
  Time for path formula creation:        3.708s
Time for strengthen operator:            0.046s
Time for prec operator:                  0.138s
  Time for abstraction:                  0.112s (Max:     0.012s, Count: 481)
    Boolean abstraction:                 0.026s
    Solving time:                        0.021s (Max:     0.004s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.005s (Max:     0.004s)
Time for merge operator:                 0.054s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.022s

Number of path formula cache hits:   235 (5%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.630s

Total number of created targets for pointer analysis: 5739
   Number of created targets for uf: *unsigned_char is 235
   Number of created targets for uf: *(struct_list_head)* is 28
   Number of created targets for uf: *enum_nic_t is 2
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_net_device)*],_VarArgs:_false)* is 9
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 225
   Number of created targets for uf: *unsigned_long_int is 6
   Number of created targets for uf: *(Return_type:_[_Bool],_Parameters:_1,_Parameter_1_type:_[(struct_net_device)*],_VarArgs:_false)* is 4


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          52 (count: 629, min: 0, max: 52, avg: 0.08)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.057s
Automaton transfers with branching:                0
Automaton transfer successors:                         4257 (count: 4257, min: 1, max: 1, avg: 1.00) [1 x 4257]

CPA algorithm statistics
------------------------
Number of iterations:            1594
Max size of waitlist:            112
Average size of waitlist:        45
Number of computed successors:   1846
Max successors for one state:    2
Number of times merged:          101
Number of times stopped:         127
Number of times breaked:         3

Total time for CPA algorithm:         4.576s (Max:     3.097s)
  Time for choose from waitlist:      0.018s
  Time for precision adjustment:      0.303s
  Time for transfer relation:         4.137s
  Time for merge operator:            0.068s
  Time for stop operator:             0.017s
  Time for adding to reached set:     0.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                  27 (count: 3, min: 9, max: 9, avg: 9.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  62.847s
  Counterexample analysis:                            62.831s (Max:    22.785s, Calls: 3)
    Refinement sat check:                             62.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.001s
  ARG update:                                          0.002s

Length of refined path (in blocks):                      24 (count: 3, min: 8, max: 8, avg: 8.00)
Number of affected states:                               18 (count: 3, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp 'true':                  3 (count: 3, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        18 (count: 3, min: 6, max: 6, avg: 6.00)
Length (states) of path with itp 'false':                 3 (count: 3, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              15 (count: 3, min: 5, max: 5, avg: 5.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 49
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 48.00
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      67.439s
Time for refinements:                62.863s
Average time for refinement:         20.954s
Max time for refinement:             22.786s

Code Coverage
-----------------------------
  Function coverage:      0.145
  Visited lines:          1959
  Total lines:            14350
  Line coverage:          0.137
  Visited conditions:     424
  Total conditions:       5278
  Condition coverage:     0.080

CPAchecker general statistics
-----------------------------
Number of program locations:     21382
Number of CFA edges:             25307
Number of relevant variables:    2726
Number of functions:             587
Number of loops:                 189
Size of reached set:             1588
  Number of reached locations:   969 (5%)
    Avg states per location:     1
    Max states per location:     17 (at node N51)
  Number of reached functions:   85 (14%)
  Number of partitions:          1588
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        112

Time for analysis setup:          9.268s
  Time for loading CPAs:          0.735s
  Time for loading parser:        0.410s
  Time for CFA construction:      8.020s
    Time for parsing file(s):     1.245s
    Time for AST to CFA:          3.145s
    Time for CFA sanity check:    0.883s
    Time for post-processing:     2.646s
      Time for var class.:        1.293s
Time for Analysis:               67.439s
CPU time for analysis:           67.430s
Total time for CPAchecker:       76.710s
Total CPU time for CPAchecker:   76.680s
Time for statistics:              0.133s

Time for Garbage Collector:       0.832s (in 40 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                149MB (   142 MiB) max;    133MB (   127 MiB) avg;    154MB (   146 MiB) peak
Used non-heap memory:             44MB (    42 MiB) max;     40MB (    38 MiB) avg;     44MB (    42 MiB) peak
Allocated heap memory:           181MB (   173 MiB) max;    175MB (   167 MiB) avg
Allocated non-heap memory:        45MB (    43 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8383MB (  7995 MiB) max;   8292MB (  7908 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
