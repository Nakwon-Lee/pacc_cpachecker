scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--staging--rtl8192e--rtl8192e--r8192e_pci.ko-ldv_main7_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w8c9g0_1/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8240: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10382: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10605: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12413: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12709: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12917: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12956: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 12983: Dead code detected: __ms___1 = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13048: Dead code detected: __ms = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13123: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13400: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13923: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25720: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26250: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27647: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 28644: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 32063: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34019: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34555: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 34577: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 37956: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38187: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38349: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 38841: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 39383: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 41088: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 39254: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 39306: Function pointer *(priv->rtllib->SetFwCmdHandler) with type bool (*)(struct net_device *, enum fw_cmd_io_type ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 31835: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12631: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 12628: Function pointer *(priv->rtllib->InitialGainHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37489: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 37468: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 36706: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26747: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26780: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 7147-7148: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 26635-26636: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 26669: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40056: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40049: Function pointer *(ieee->ScanOperationBackupHandler) with type void (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 40041: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10268: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30989: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9887: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28019: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30755: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27898: Function pointer *(priv->rf_set_chan) with type u8 (*)(struct net_device *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 28670: Function pointer *(priv->ops->stop_adapter) with type void (*)(struct net_device *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 30210: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27953: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27949: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27937: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27927: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7467: Function pointer *(priv->rtllib->SetHwRegHandler) with type void (*)(struct net_device *, u8 , u8 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7337: Function pointer *(priv->rtllib->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29519: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29515: Function pointer *(ieee->set_chan) with type void (*)(struct net_device *, short) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29737: Function pointer *(ieee->rtllib_ap_sec_type) with type u8 (*)(struct rtllib_device *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 29732: Function pointer *(ieee->LedControlHandler) with type void (*)(struct net_device *, enum led_ctl_mode ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function create_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_rtllib to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remove_proc_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28513: Ignoring function call through function pointer *(priv->ops->initialize_adapter): init_status = (*(priv->ops->initialize_adapter))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function rtllib_softmac_start_protocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtllib_reset_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10268: Ignoring function call through function pointer *(ieee->rtllib_ap_sec_type): tmp___0 = (*(ieee->rtllib_ap_sec_type))(priv->rtllib); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 26669: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 29825: Ignoring function call through function pointer *(priv->ops->tx_enable): (*(priv->ops->tx_enable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function HT_update_self_and_peer_setting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28019: Ignoring function call through function pointer *(priv->rtllib->SetHwRegHandler): (*(priv->rtllib->SetHwRegHandler))(dev, 31, (u8 *)(&i)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtllib_MgntDisconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rtllib_softmac_stop_protocol to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 27872: Ignoring function call through function pointer *(priv->ops->irq_disable): (*(priv->ops->irq_disable))(dev); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 27872: Unsupported feature (recursion): rtllib_ips_leave(dev); (line was originally pointer call(rtllib_ips_leave) (*((priv->ops)->irq_disable))(dev);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            52414 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  47304 (90%)
  Because of loop head:            5078 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (0%)
  Times precision was empty:       12868 (25%)
  Times precision was {false}:     972 (2%)
  Times result was cached:         38194 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      380 (1%)
  Times result was 'false':        193 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         18251
  BDD entailment checks:           6445
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       65
Number of predicates discovered:          8
Number of abstraction locations:          192
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         55575
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 41.11
Number of irrelevant predicates:          44549 (80%)
Number of preds handled by boolean abs:   483 (1%)
  Total number of models for allsat:      374
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.98

Time for post operator:                 11.983s
  Time for path formula creation:       11.839s
Time for strengthen operator:            0.253s
Time for prec operator:                 10.308s
  Time for abstraction:                  9.262s (Max:     0.280s, Count: 52414)
    Boolean abstraction:                 1.700s
    Solving time:                        5.013s (Max:     0.262s)
    Model enumeration time:              0.055s
    Time for BDD construction:           0.062s (Max:     0.010s)
Time for merge operator:                 0.444s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     5.068s

Number of path formula cache hits:   162794 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    10.071s

Total number of created targets for pointer analysis: 83492
   Number of created targets for uf: *unsigned_char is 4915
   Number of created targets for uf: *unsigned_long_long_int is 3
   Number of created targets for uf: *unsigned_int is 225


Number of BDD nodes:                               212
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         819 (count: 26506, min: 0, max: 100, avg: 0.03)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.572s
  Time for transition matches:                         0.313s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       220176 (count: 220176, min: 1, max: 1, avg: 1.00) [1 x 220176]

CPA algorithm statistics
------------------------
Number of iterations:            153954
Max size of waitlist:            119
Average size of waitlist:        42
Number of computed successors:   167712
Max successors for one state:    2
Number of times merged:          5903
Number of times stopped:         11863
Number of times breaked:         32

Total time for CPA algorithm:        30.567s (Max:     3.587s)
  Time for choose from waitlist:      0.131s
  Time for precision adjustment:     11.486s
  Time for transfer relation:        16.912s
  Time for merge operator:            0.632s
  Time for stop operator:             0.289s
  Time for adding to reached set:     0.360s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                5365 (count: 32, min: 9, max: 262, avg: 167.66)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 727.609s
  Counterexample analysis:                           726.853s (Max:    24.750s, Calls: 32)
    Refinement sat check:                            707.164s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.072s
  ARG update:                                          0.478s

Length of refined path (in blocks):                    4925 (count: 32, min: 8, max: 249, avg: 153.91)
Number of affected states:                             4321 (count: 32, min: 5, max: 247, avg: 135.03)
Length (states) of path with itp 'true':                572 (count: 32, min: 1, max: 162, avg: 17.88)
Length (states) of path with itp non-trivial itp:      4321 (count: 32, min: 5, max: 247, avg: 135.03)
Length (states) of path with itp 'false':                32 (count: 32, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4289 (count: 32, min: 4, max: 246, avg: 134.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 9662
Max. size of reached set after ref.:  3773
Avg. size of reached set before ref.: 5135.47
Avg. size of reached set after ref.:  442.09

Total time for CEGAR algorithm:     758.470s
Time for refinements:               727.891s
Average time for refinement:         22.746s
Max time for refinement:             24.792s

Code Coverage
-----------------------------
  Function coverage:      0.223
  Visited lines:          2846
  Total lines:            14350
  Line coverage:          0.198
  Visited conditions:     640
  Total conditions:       5278
  Condition coverage:     0.121

CPAchecker general statistics
-----------------------------
Number of program locations:     21382
Number of CFA edges:             25307
Number of relevant variables:    2726
Number of functions:             587
Number of loops:                 189
Size of reached set:             5469
  Number of reached locations:   1756 (8%)
    Avg states per location:     3
    Max states per location:     103 (at node N7586)
  Number of reached functions:   131 (22%)
  Number of partitions:          5466
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N12386 (before line 32007), Function main called from node N12278, stack depth 1 [468cbe8c], stack [main]])
  Number of target states:       0
  Size of final wait list        119

Time for analysis setup:          9.492s
  Time for loading CPAs:          1.101s
  Time for loading parser:        0.485s
  Time for CFA construction:      7.785s
    Time for parsing file(s):     1.133s
    Time for AST to CFA:          2.635s
    Time for CFA sanity check:    0.952s
    Time for post-processing:     3.018s
      Time for var class.:        1.296s
Time for Analysis:              758.470s
CPU time for analysis:          758.360s
Total time for CPAchecker:      767.965s
Total CPU time for CPAchecker:  767.810s
Time for statistics:              0.230s

Time for Garbage Collector:       2.092s (in 95 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                188MB (   179 MiB) max;    137MB (   131 MiB) avg;    196MB (   187 MiB) peak
Used non-heap memory:             49MB (    46 MiB) max;     43MB (    41 MiB) avg;     49MB (    46 MiB) peak
Allocated heap memory:           196MB (   187 MiB) max;    195MB (   186 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8503MB (  8109 MiB) max;   8405MB (  8016 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
