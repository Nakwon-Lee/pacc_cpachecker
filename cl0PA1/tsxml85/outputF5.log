scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k8hth_j5/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15430: Ignoring function call through function pointer *(rf->init_hw): t = (*(rf->init_hw))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            567840 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  521787 (92%)
  Because of loop head:            45992 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (0%)
  Times precision was empty:       59287 (10%)
  Times precision was {false}:     9926 (2%)
  Times result was cached:         497178 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1449 (0%)
  Times result was 'false':        175 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         310572
  BDD entailment checks:           98348
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       359
Number of predicates discovered:          3
Number of abstraction locations:          257
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         535658
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 47.09
Number of irrelevant predicates:          477789 (89%)
Number of preds handled by boolean abs:   1496 (0%)
  Total number of models for allsat:      1449
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                167.388s
  Time for path formula creation:      166.511s
Time for strengthen operator:            1.775s
Time for prec operator:                610.029s
  Time for abstraction:                602.323s (Max:     7.178s, Count: 567840)
    Boolean abstraction:                19.950s
    Solving time:                      512.158s (Max:     6.142s)
    Model enumeration time:              0.826s
    Time for BDD construction:           0.041s (Max:     0.002s)
Time for merge operator:                 4.015s
Time for coverage check:                 0.099s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):   512.984s

Number of path formula cache hits:   2238671 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   150.105s

Total number of created targets for pointer analysis: 7426028
   Number of created targets for uf: *unsigned_short_int is 1591
   Number of created targets for uf: *signed_int is 251973
   Number of created targets for uf: *unsigned_char is 31
   Number of created targets for uf: *_Bool is 980
   Number of created targets for uf: *unsigned_int is 643
   Number of created targets for uf: *char is 37


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2910 (count: 215968, min: 0, max: 400, avg: 0.01)
Time for BDD node cleanup:                             0.037s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.061s
  Time for transition matches:                         2.015s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      2991121 (count: 2991121, min: 1, max: 1, avg: 1.00) [1 x 2991121]

CPA algorithm statistics
------------------------
Number of iterations:            1950199
Max size of waitlist:            57
Average size of waitlist:        34
Number of computed successors:   2153953
Max successors for one state:    2
Number of times merged:          106112
Number of times stopped:         203348
Number of times breaked:         61

Total time for CPA algorithm:       833.497s (Max:   174.342s)
  Time for choose from waitlist:      0.550s
  Time for precision adjustment:    619.841s
  Time for transfer relation:       200.836s
  Time for merge operator:            4.953s
  Time for stop operator:             1.679s
  Time for adding to reached set:     2.085s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   61
Avg. length of target path (in blocks):                9338 (count: 61, min: 37, max: 436, avg: 153.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  58.993s
  Counterexample analysis:                            55.350s (Max:     9.476s, Calls: 61)
    Refinement sat check:                             49.403s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.021s
  ARG update:                                          3.497s

Length of refined path (in blocks):                    9277 (count: 61, min: 36, max: 435, avg: 152.08)
Number of affected states:                             6241 (count: 61, min: 6, max: 383, avg: 102.31)
Length (states) of path with itp 'true':               2975 (count: 61, min: 1, max: 51, avg: 48.77)
Length (states) of path with itp non-trivial itp:      6241 (count: 61, min: 6, max: 383, avg: 102.31)
Length (states) of path with itp 'false':                61 (count: 61, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 61, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            6180 (count: 61, min: 5, max: 382, avg: 101.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                61
Number of successful refinements:     61
Number of failed refinements:         0
Max. size of reached set before ref.: 272051
Max. size of reached set after ref.:  638
Avg. size of reached set before ref.: 31912.72
Avg. size of reached set after ref.:  614.15

Total time for CEGAR algorithm:     893.559s
Time for refinements:                60.036s
Average time for refinement:          0.984s
Max time for refinement:             10.123s

Code Coverage
-----------------------------
  Function coverage:      0.198
  Visited lines:          3136
  Total lines:            8960
  Line coverage:          0.350
  Visited conditions:     370
  Total conditions:       1714
  Condition coverage:     0.216

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             41217
  Number of reached locations:   1301 (11%)
    Avg states per location:     31
    Max states per location:     1390 (at node N10845)
  Number of reached functions:   95 (20%)
  Number of partitions:          41207
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9622 (before line 18014), Function zd_usb_init_hw called from node N3712, stack depth 3 [1387bd84], stack [main, zd_op_start, zd_usb_init_hw]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          6.772s
  Time for loading CPAs:          1.046s
  Time for loading parser:        0.496s
  Time for CFA construction:      5.108s
    Time for parsing file(s):     1.016s
    Time for AST to CFA:          1.999s
    Time for CFA sanity check:    0.542s
    Time for post-processing:     1.381s
      Time for var class.:        0.650s
Time for Analysis:              893.559s
CPU time for analysis:          893.480s
Total time for CPAchecker:      900.334s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.591s

Time for Garbage Collector:      33.317s (in 645 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1460MB (  1392 MiB) max;    656MB (   626 MiB) avg;   1539MB (  1468 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1695MB (  1617 MiB) max;    979MB (   933 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9174MB (  8749 MiB) max;   8688MB (  8286 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
