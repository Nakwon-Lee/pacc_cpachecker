scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dwlo34ia/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23599 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22431 (95%)
  Because of loop head:            1081 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (0%)
  Times precision was empty:       10223 (43%)
  Times precision was {false}:     300 (1%)
  Times result was cached:         12082 (51%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      994 (4%)
  Times result was 'false':        469 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         9318
  BDD entailment checks:           2270
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          5
Number of abstraction locations:          139
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         48499
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 37.48
Number of irrelevant predicates:          17337 (36%)
Number of preds handled by boolean abs:   2268 (5%)
  Total number of models for allsat:      994
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.919s
  Time for path formula creation:        3.849s
Time for strengthen operator:            0.134s
Time for prec operator:                 10.642s
  Time for abstraction:                 10.276s (Max:     0.171s, Count: 23599)
    Boolean abstraction:                 4.376s
    Solving time:                        5.486s (Max:     0.165s)
    Model enumeration time:              0.171s
    Time for BDD construction:           0.078s (Max:     0.010s)
Time for merge operator:                 0.093s
Time for coverage check:                 0.029s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     5.657s

Number of path formula cache hits:   127433 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.354s

Total number of created targets for pointer analysis: 27854
   Number of created targets for uf: *unsigned_short_int is 136
   Number of created targets for uf: *signed_int is 2881
   Number of created targets for uf: *unsigned_char is 121
   Number of created targets for uf: *unsigned_int is 188
   Number of created targets for uf: *char is 17
   Number of created targets for uf: *unsigned_long_int is 421


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2031 (count: 19998, min: 0, max: 156, avg: 0.10)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.294s
Automaton transfers with branching:                0
Automaton transfer successors:                       114249 (count: 114249, min: 1, max: 1, avg: 1.00) [1 x 114249]

CPA algorithm statistics
------------------------
Number of iterations:            73814
Max size of waitlist:            55
Average size of waitlist:        19
Number of computed successors:   82316
Max successors for one state:    2
Number of times merged:          3524
Number of times stopped:         5019
Number of times breaked:         87

Total time for CPA algorithm:        18.038s (Max:     1.213s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:     11.240s
  Time for transfer relation:         5.811s
  Time for merge operator:            0.214s
  Time for stop operator:             0.208s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                2429 (count: 87, min: 6, max: 57, avg: 27.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.007s
  Counterexample analysis:                             4.568s (Max:     0.162s, Calls: 87)
    Refinement sat check:                              4.022s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.062s
  ARG update:                                          0.257s

Length of refined path (in blocks):                    2342 (count: 87, min: 5, max: 56, avg: 26.92)
Number of affected states:                             2136 (count: 87, min: 3, max: 54, avg: 24.55)
Length (states) of path with itp 'true':                119 (count: 87, min: 1, max: 19, avg: 1.37)
Length (states) of path with itp non-trivial itp:      2136 (count: 87, min: 3, max: 54, avg: 24.55)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 87, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2049 (count: 87, min: 2, max: 53, avg: 23.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 1461
Max. size of reached set after ref.:  1192
Avg. size of reached set before ref.: 907.14
Avg. size of reached set after ref.:  29.29

Total time for CEGAR algorithm:      23.219s
Time for refinements:                 5.165s
Average time for refinement:          0.059s
Max time for refinement:              0.166s

Code Coverage
-----------------------------
  Function coverage:      0.115
  Visited lines:          1362
  Total lines:            8960
  Line coverage:          0.152
  Visited conditions:     86
  Total conditions:       1714
  Condition coverage:     0.050

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             456
  Number of reached locations:   348 (3%)
    Avg states per location:     1
    Max states per location:     10 (at node N3478)
  Number of reached functions:   55 (11%)
  Number of partitions:          456
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          7.139s
  Time for loading CPAs:          1.127s
  Time for loading parser:        0.516s
  Time for CFA construction:      5.373s
    Time for parsing file(s):     1.027s
    Time for AST to CFA:          1.745s
    Time for CFA sanity check:    0.535s
    Time for post-processing:     1.795s
      Time for var class.:        0.985s
Time for Analysis:               23.219s
CPU time for analysis:           23.230s
Total time for CPAchecker:       30.360s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.098s

Time for Garbage Collector:       0.811s (in 76 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     69MB (    66 MiB) avg;     98MB (    94 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
