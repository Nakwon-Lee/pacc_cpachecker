scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_79jd6x5w/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15545: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15595: Ignoring function call through function pointer *(rf->switch_radio_off): t = (*(rf->switch_radio_off))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            373875 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  349433 (93%)
  Because of loop head:            23689 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         753 (0%)
  Times precision was empty:       15443 (4%)
  Times precision was {false}:     884 (0%)
  Times result was cached:         354613 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2935 (1%)
  Times result was 'false':        706 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         207295
  BDD entailment checks:           58471
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       169
Number of predicates discovered:          6
Number of abstraction locations:          293
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         533120
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 139.60
Number of irrelevant predicates:          170022 (32%)
Number of preds handled by boolean abs:   3488 (1%)
  Total number of models for allsat:      2966
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.01

Time for post operator:                 22.405s
  Time for path formula creation:       21.842s
Time for strengthen operator:            1.125s
Time for prec operator:                120.661s
  Time for abstraction:                116.287s (Max:     2.709s, Count: 373875)
    Boolean abstraction:                40.119s
    Solving time:                       54.116s (Max:     2.119s)
    Model enumeration time:              1.521s
    Time for BDD construction:           0.096s (Max:     0.016s)
Time for merge operator:                 0.996s
Time for coverage check:                 0.100s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):    55.637s

Number of path formula cache hits:   2326912 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.833s

Total number of created targets for pointer analysis: 359898
   Number of created targets for uf: *unsigned_short_int is 267
   Number of created targets for uf: *(void)* is 87
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 30
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 208


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5895 (count: 95963, min: 0, max: 336, avg: 0.06)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.915s
  Time for transition matches:                         1.137s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                      1994357 (count: 1994357, min: 1, max: 1, avg: 1.00) [1 x 1994357]

CPA algorithm statistics
------------------------
Number of iterations:            1301801
Max size of waitlist:            170
Average size of waitlist:        113
Number of computed successors:   1438127
Max successors for one state:    2
Number of times merged:          74412
Number of times stopped:         131488
Number of times breaked:         753

Total time for CPA algorithm:       175.934s (Max:     8.386s)
  Time for choose from waitlist:      0.448s
  Time for precision adjustment:    126.526s
  Time for transfer relation:        42.875s
  Time for merge operator:            1.547s
  Time for stop operator:             1.090s
  Time for adding to reached set:     1.277s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   753
Avg. length of target path (in blocks):              233644 (count: 753, min: 29, max: 623, avg: 310.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 711.739s
  Counterexample analysis:                           708.667s (Max:     4.279s, Calls: 753)
    Refinement sat check:                            586.716s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.109s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.157s
  Precision update:                                    0.237s
  ARG update:                                          1.834s

Length of refined path (in blocks):                  230700 (count: 752, min: 28, max: 622, avg: 306.78)
Number of affected states:                            20087 (count: 752, min: 6, max: 382, avg: 26.71)
Length (states) of path with itp 'true':             209861 (count: 752, min: 19, max: 607, avg: 279.07)
Length (states) of path with itp non-trivial itp:     20087 (count: 752, min: 6, max: 382, avg: 26.71)
Length (states) of path with itp 'false':               752 (count: 752, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 752, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           19335 (count: 752, min: 5, max: 381, avg: 25.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                753
Number of successful refinements:     752
Number of failed refinements:         0
Max. size of reached set before ref.: 48023
Max. size of reached set after ref.:  47948
Avg. size of reached set before ref.: 7580.80
Avg. size of reached set after ref.:  5854.27

Total time for CEGAR algorithm:     895.663s
Time for refinements:               717.123s
Average time for refinement:          0.952s
Max time for refinement:              4.334s

Code Coverage
-----------------------------
  Function coverage:      0.305
  Visited lines:          3232
  Total lines:            8960
  Line coverage:          0.361
  Visited conditions:     490
  Total conditions:       1714
  Condition coverage:     0.286

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             48023
  Number of reached locations:   1679 (14%)
    Avg states per location:     28
    Max states per location:     1957 (at node N10845)
  Number of reached functions:   146 (30%)
  Number of partitions:          48013
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2617 (before line 9089), Function zd_chip_switch_radio_off called from node N3763, stack depth 3 [257e8c43], stack [main, zd_op_start, zd_chip_switch_radio_off]])
  Number of target states:       1
  Size of final wait list        116

Time for analysis setup:          6.001s
  Time for loading CPAs:          1.029s
  Time for loading parser:        0.438s
  Time for CFA construction:      4.425s
    Time for parsing file(s):     0.767s
    Time for AST to CFA:          1.494s
    Time for CFA sanity check:    0.597s
    Time for post-processing:     1.456s
      Time for var class.:        0.765s
Time for Analysis:              895.663s
CPU time for analysis:          895.510s
Total time for CPAchecker:      901.672s
Total CPU time for CPAchecker:  901.500s
Time for statistics:              0.594s

Time for Garbage Collector:      13.961s (in 946 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                226MB (   216 MiB) max;    114MB (   108 MiB) avg;    244MB (   233 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     42MB (    40 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           246MB (   234 MiB) max;    170MB (   162 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8623MB (  8224 MiB) max;   8421MB (  8031 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
