scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_8mq73j23/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_reset_configuration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15496: Ignoring function call through function pointer *(rf->set_channel): r = (*(rf->set_channel))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kfree_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15616: Ignoring function call through function pointer *(rf->patch_6m_band_edge): tmp = (*(rf->patch_6m_band_edge))(rf, (int)channel); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_interrupt_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_bulk_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_seconds to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15545: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1396955 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1294646 (93%)
  Because of loop head:            97476 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4833 (0%)
  Times precision was empty:       248019 (18%)
  Times precision was {false}:     2759 (0%)
  Times result was cached:         1134772 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11405 (1%)
  Times result was 'false':        16003 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         708821
  BDD entailment checks:           215139
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       174
Number of predicates discovered:          7
Number of abstraction locations:          516
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         4455042
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 314.53
Number of irrelevant predicates:          2375570 (53%)
Number of preds handled by boolean abs:   27933 (1%)
  Total number of models for allsat:      11406
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 49.611s
  Time for path formula creation:       47.830s
Time for strengthen operator:            3.981s
Time for prec operator:                334.196s
  Time for abstraction:                322.231s (Max:     0.564s, Count: 1396955)
    Boolean abstraction:               101.876s
    Solving time:                      136.728s (Max:     0.427s)
    Model enumeration time:              3.812s
    Time for BDD construction:           0.200s (Max:     0.006s)
Time for merge operator:                 2.095s
Time for coverage check:                 0.240s
  Time for BDD entailment checks:        0.174s
Total time for SMT solver (w/o itp):   140.540s

Number of path formula cache hits:   8625347 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    25.112s

Total number of created targets for pointer analysis: 1174363
   Number of created targets for uf: *unsigned_short_int is 955
   Number of created targets for uf: *signed_int is 241
   Number of created targets for uf: *unsigned_char is 117
   Number of created targets for uf: *_Bool is 57
   Number of created targets for uf: *unsigned_int is 3181
   Number of created targets for uf: *char is 37
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               276
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       22991 (count: 545534, min: 0, max: 154, avg: 0.04)
Time for BDD node cleanup:                             0.079s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.793s
  Time for transition matches:                         3.793s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.036s
Automaton transfers with branching:                0
Automaton transfer successors:                      7232916 (count: 7232916, min: 1, max: 1, avg: 1.00) [1 x 7232916]

CPA algorithm statistics
------------------------
Number of iterations:            4699379
Max size of waitlist:            247
Average size of waitlist:        59
Number of computed successors:   5180977
Max successors for one state:    2
Number of times merged:          246841
Number of times stopped:         421501
Number of times breaked:         4833

Total time for CPA algorithm:       506.926s (Max:    13.137s)
  Time for choose from waitlist:      1.059s
  Time for precision adjustment:    355.535s
  Time for transfer relation:       130.681s
  Time for merge operator:            4.212s
  Time for stop operator:             3.596s
  Time for adding to reached set:     3.615s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4833
Avg. length of target path (in blocks):              288405 (count: 4833, min: 6, max: 204, avg: 59.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 340.928s
  Counterexample analysis:                           327.853s (Max:     0.327s, Calls: 4833)
    Refinement sat check:                            275.348s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.151s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.828s
  Precision update:                                    4.524s
  ARG update:                                          6.411s

Length of refined path (in blocks):                  283515 (count: 4832, min: 5, max: 203, avg: 58.67)
Number of affected states:                           153866 (count: 4832, min: 3, max: 201, avg: 31.84)
Length (states) of path with itp 'true':             124817 (count: 4832, min: 1, max: 160, avg: 25.83)
Length (states) of path with itp non-trivial itp:    153866 (count: 4832, min: 3, max: 201, avg: 31.84)
Length (states) of path with itp 'false':              4832 (count: 4832, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4832, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          149034 (count: 4832, min: 2, max: 200, avg: 30.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4833
Number of successful refinements:     4832
Number of failed refinements:         0
Max. size of reached set before ref.: 35697
Max. size of reached set after ref.:  31324
Avg. size of reached set before ref.: 7261.00
Avg. size of reached set after ref.:  6280.82

Total time for CEGAR algorithm:     893.925s
Time for refinements:               368.432s
Average time for refinement:          0.076s
Max time for refinement:              0.386s

Code Coverage
-----------------------------
  Function coverage:      0.273
  Visited lines:          2463
  Total lines:            8960
  Line coverage:          0.275
  Visited conditions:     328
  Total conditions:       1714
  Condition coverage:     0.191

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             3933
  Number of reached locations:   1335 (11%)
    Avg states per location:     2
    Max states per location:     168 (at node N10844)
  Number of reached functions:   131 (27%)
  Number of partitions:          3929
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N9021 (before line 17323), Function zd_usb_disable_rx called from node N2652, stack depth 4 [11d943b2], stack [main, zd_op_stop, zd_chip_disable_rxtx, zd_usb_disable_rx]])
  Number of target states:       1
  Size of final wait list        38

Time for analysis setup:          6.401s
  Time for loading CPAs:          1.012s
  Time for loading parser:        0.587s
  Time for CFA construction:      4.665s
    Time for parsing file(s):     0.930s
    Time for AST to CFA:          1.772s
    Time for CFA sanity check:    0.431s
    Time for post-processing:     1.332s
      Time for var class.:        0.761s
Time for Analysis:              893.925s
CPU time for analysis:          893.810s
Total time for CPAchecker:      900.329s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.140s

Time for Garbage Collector:      37.902s (in 2572 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                301MB (   287 MiB) max;    148MB (   141 MiB) avg;    315MB (   300 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     41MB (    40 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           335MB (   320 MiB) max;    216MB (   206 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8588MB (  8190 MiB) max;   8319MB (  7933 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
