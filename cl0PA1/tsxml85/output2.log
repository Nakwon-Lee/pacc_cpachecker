scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--zd1211rw--zd1211rw.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_k02e6_ep/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9315: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12653: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13482: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13859: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14700: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15672: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15754: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15757: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 15760: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6199;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 19379: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 15616: Function pointer *(rf->patch_6m_band_edge) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 15496: Function pointer *(rf->set_channel) with type int (*)(struct zd_rf *, u8 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_queue_tail to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_unlink to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15545: Ignoring function call through function pointer *(rf->switch_radio_on): t = (*(rf->switch_radio_on))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_wake_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 15595: Ignoring function call through function pointer *(rf->switch_radio_off): t = (*(rf->switch_radio_off))(rf); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3189 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3104 (97%)
  Because of loop head:            11 (0%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         74 (2%)
  Times precision was empty:       1502 (47%)
  Times precision was {false}:     66 (2%)
  Times result was cached:         1433 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      188 (6%)
  Times result was 'false':        68 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         568
  BDD entailment checks:           214
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       43
Number of predicates discovered:          3
Number of abstraction locations:          90
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         1687
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 6.64
Number of irrelevant predicates:          362 (21%)
Number of preds handled by boolean abs:   188 (11%)
  Total number of models for allsat:      188
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.825s
  Time for path formula creation:        1.804s
Time for strengthen operator:            0.054s
Time for prec operator:                  1.895s
  Time for abstraction:                  1.746s (Max:     0.180s, Count: 3189)
    Boolean abstraction:                 0.914s
    Solving time:                        1.068s (Max:     0.176s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.014s (Max:     0.008s)
Time for merge operator:                 0.066s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     1.101s

Number of path formula cache hits:   10889 (67%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.643s

Total number of created targets for pointer analysis: 5878
   Number of created targets for uf: *unsigned_short_int is 137
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 31
   Number of created targets for uf: *unsigned_int is 191


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         376 (count: 3181, min: 0, max: 106, avg: 0.12)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.137s
Automaton transfers with branching:                0
Automaton transfer successors:                        13787 (count: 13787, min: 1, max: 1, avg: 1.00) [1 x 13787]

CPA algorithm statistics
------------------------
Number of iterations:            8465
Max size of waitlist:            103
Average size of waitlist:        72
Number of computed successors:   9152
Max successors for one state:    2
Number of times merged:          177
Number of times stopped:         335
Number of times breaked:         74

Total time for CPA algorithm:         4.856s (Max:     1.411s)
  Time for choose from waitlist:      0.014s
  Time for precision adjustment:      2.047s
  Time for transfer relation:         2.426s
  Time for merge operator:            0.092s
  Time for stop operator:             0.060s
  Time for adding to reached set:     0.057s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   74
Avg. length of target path (in blocks):               17472 (count: 74, min: 29, max: 323, avg: 236.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  19.340s
  Counterexample analysis:                            19.128s (Max:     0.715s, Calls: 74)
    Refinement sat check:                             13.795s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.014s
  ARG update:                                          0.053s

Length of refined path (in blocks):                   17146 (count: 73, min: 28, max: 322, avg: 234.88)
Number of affected states:                             1211 (count: 73, min: 6, max: 82, avg: 16.59)
Length (states) of path with itp 'true':              15862 (count: 73, min: 19, max: 307, avg: 217.29)
Length (states) of path with itp non-trivial itp:      1211 (count: 73, min: 6, max: 82, avg: 16.59)
Length (states) of path with itp 'false':                73 (count: 73, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 73, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1138 (count: 73, min: 5, max: 81, avg: 15.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                74
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 2102
Max. size of reached set after ref.:  2027
Avg. size of reached set before ref.: 1549.36
Avg. size of reached set after ref.:  1450.73

Total time for CEGAR algorithm:      24.715s
Time for refinements:                19.750s
Average time for refinement:          0.266s
Max time for refinement:              0.728s

Code Coverage
-----------------------------
  Function coverage:      0.238
  Visited lines:          1869
  Total lines:            8960
  Line coverage:          0.209
  Visited conditions:     246
  Total conditions:       1714
  Condition coverage:     0.144

CPAchecker general statistics
-----------------------------
Number of program locations:     11872
Number of CFA edges:             13466
Number of relevant variables:    1961
Number of functions:             479
Number of loops:                 56
Size of reached set:             1667
  Number of reached locations:   888 (7%)
    Avg states per location:     1
    Max states per location:     49 (at node N10845)
  Number of reached functions:   114 (24%)
  Number of partitions:          1667
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        89

Time for analysis setup:          5.625s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.487s
  Time for CFA construction:      4.242s
    Time for parsing file(s):     0.841s
    Time for AST to CFA:          1.589s
    Time for CFA sanity check:    0.436s
    Time for post-processing:     1.246s
      Time for var class.:        0.638s
Time for Analysis:               24.715s
CPU time for analysis:           24.720s
Total time for CPAchecker:       30.342s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.111s

Time for Garbage Collector:       0.398s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     60MB (    57 MiB) avg;     97MB (    92 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
