scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--md--persistent-data--dm-persistent-data.ko-ldv_main2_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n3nhvr99/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3552: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3555: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3558: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3855: Dead code detected: tmp = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 3860: Dead code detected: tmp___0 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 3865: Dead code detected: tmp___1 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret), "+m" (tmp->state): : "memory",
                       "cc");
  goto ldv_29462;
  case 2UL:
  tmp___0 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret), "+m" (tmp___0->state): : "memory",
                       "cc");
  goto ldv_29462;
  case 4UL:
  tmp___1 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret), "+m" (tmp___1->state): : "memory",
                       "cc");
  goto ldv_29462;
  case 8UL:
  tmp___2 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret), "+m" (tmp___2->state): : "memory",
                       "cc");
  goto ldv_29462;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3889: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 3894: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 3899: Dead code detected: tmp___5 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___3 = get_current();
  __asm__ volatile ("xchgb %b0, %1\n": "+q" (__ret___0), "+m" (tmp___3->state): : "memory",
                       "cc");
  goto ldv_29472;
  case 2UL:
  tmp___4 = get_current();
  __asm__ volatile ("xchgw %w0, %1\n": "+r" (__ret___0), "+m" (tmp___4->state): : "memory",
                       "cc");
  goto ldv_29472;
  case 4UL:
  tmp___5 = get_current();
  __asm__ volatile ("xchgl %0, %1\n": "+r" (__ret___0), "+m" (tmp___5->state): : "memory",
                       "cc");
  goto ldv_29472;
  case 8UL:
  tmp___6 = get_current();
  __asm__ volatile ("xchgq %q0, %1\n": "+r" (__ret___0), "+m" (tmp___6->state): : "memory",
                       "cc");
  goto ldv_29472;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5942: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6511: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7495: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8151: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9285: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10277: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10769: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 8567: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10167: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 8321: Function pointer *(vt->inc) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9096: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9090: Function pointer *(info->value_type.dec) with type void (*)(void *, void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5368: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5292: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, i, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7567: Ignoring function call through function pointer *(sm->count_is_more_than_one): tmp = (*(sm->count_is_more_than_one))(sm, b, result); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5207: Ignoring function call through function pointer *(ll->load_ie): r = (*(ll->load_ie))(ll, index, &ie_disk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_bufio_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_bufio_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5148: Ignoring function call through function pointer *(ll->max_entries): tmp = (*(ll->max_entries))(ll); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7603: Ignoring function call through function pointer *(sm->new_block): tmp = (*(sm->new_block))(sm, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_bufio_new to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7594: Ignoring function call through function pointer *(sm->dec_block): tmp = (*(sm->dec_block))(sm, b); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 7594: Unsupported feature (recursion): tmp = sm_disk_extend(sm, b); (line was originally pointer call(sm_disk_extend) tmp = (*(sm->dec_block))(sm, b);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1161 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1118 (96%)
  Because of loop head:            43 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         0 (0%)
  Times precision was empty:       1161 (100%)
  Times precision was {false}:     0 (0%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        0 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         447
  BDD entailment checks:           121
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          0

Time for post operator:                  2.206s
  Time for path formula creation:        2.175s
Time for strengthen operator:            0.032s
Time for prec operator:                  0.191s
  Time for abstraction:                  0.051s (Max:     0.013s, Count: 1161)
    Solving time:                        0.000s (Max:     0.000s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.069s
Time for coverage check:                 0.020s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.000s

Number of path formula cache hits:   0 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.066s

Total number of created targets for pointer analysis: 62
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *(struct_dm_block)* is 20
   Number of created targets for uf: *unsigned_long_long_int is 2
   Number of created targets for uf: *unsigned_int is 4


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 1283, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.097s
Automaton transfers with branching:                0
Automaton transfer successors:                         9878 (count: 9878, min: 1, max: 1, avg: 1.00) [1 x 9878]

CPA algorithm statistics
------------------------
Number of iterations:            3649
Max size of waitlist:            377
Average size of waitlist:        186
Number of computed successors:   4308
Max successors for one state:    2
Number of times merged:          163
Number of times stopped:         284
Number of times breaked:         0

Total time for CPA algorithm:         3.481s (Max:     3.481s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      0.362s
  Time for transfer relation:         2.784s
  Time for merge operator:            0.130s
  Time for stop operator:             0.050s
  Time for adding to reached set:     0.037s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   0

CEGAR algorithm statistics
--------------------------
Number of refinements:                0

Code Coverage
-----------------------------
  Function coverage:      0.195
  Visited lines:          1207
  Total lines:            4721
  Line coverage:          0.256
  Visited conditions:     214
  Total conditions:       1230
  Condition coverage:     0.174

CPAchecker general statistics
-----------------------------
Number of program locations:     6707
Number of CFA edges:             7894
Number of relevant variables:    1501
Number of functions:             318
Number of loops:                 62
Size of reached set:             4025
  Number of reached locations:   489 (7%)
    Avg states per location:     8
    Max states per location:     199 (at node N57)
  Number of reached functions:   62 (19%)
  Number of partitions:          4025
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        377

Time for analysis setup:          4.710s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.469s
  Time for CFA construction:      3.294s
    Time for parsing file(s):     0.771s
    Time for AST to CFA:          1.091s
    Time for CFA sanity check:    0.360s
    Time for post-processing:     0.930s
      Time for var class.:        0.438s
Time for Analysis:                3.482s
CPU time for analysis:            3.480s
Total time for CPAchecker:        8.194s
Total CPU time for CPAchecker:    8.180s
Time for statistics:              0.140s

Time for Garbage Collector:       0.312s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     43MB (    41 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8051MB (  7678 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
