scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jp08ak20/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            41140 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  40315 (98%)
  Because of loop head:            437 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         388 (1%)
  Times precision was empty:       8586 (21%)
  Times precision was {false}:     437 (1%)
  Times result was cached:         30852 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1265 (3%)
  Times result was 'false':        2173 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         18767
  BDD entailment checks:           2731
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          9
Number of abstraction locations:          99
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         83182
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 48.87
Number of irrelevant predicates:          30755 (37%)
Number of preds handled by boolean abs:   2979 (4%)
  Total number of models for allsat:      1278
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.818s
  Time for path formula creation:        2.726s
Time for strengthen operator:            0.258s
Time for prec operator:                 10.872s
  Time for abstraction:                 10.372s (Max:     0.031s, Count: 41140)
    Boolean abstraction:                 3.062s
    Solving time:                        4.026s (Max:     0.027s)
    Model enumeration time:              0.215s
    Time for BDD construction:           0.089s (Max:     0.009s)
Time for merge operator:                 0.119s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     4.241s

Number of path formula cache hits:   227051 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.168s

Total number of created targets for pointer analysis: 15079
   Number of created targets for uf: *unsigned_short_int is 489
   Number of created targets for uf: *(void)* is 78
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *unsigned_char is 1291
   Number of created targets for uf: *_Bool is 4
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               334
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2871 (count: 21293, min: 0, max: 236, avg: 0.13)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.628s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                       198287 (count: 198287, min: 1, max: 1, avg: 1.00) [1 x 198287]

CPA algorithm statistics
------------------------
Number of iterations:            131084
Max size of waitlist:            42
Average size of waitlist:        18
Number of computed successors:   145384
Max successors for one state:    2
Number of times merged:          8018
Number of times stopped:         9111
Number of times breaked:         388

Total time for CPA algorithm:        19.109s (Max:     0.795s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:     11.889s
  Time for transfer relation:         5.675s
  Time for merge operator:            0.301s
  Time for stop operator:             0.242s
  Time for adding to reached set:     0.280s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   388
Avg. length of target path (in blocks):               18406 (count: 388, min: 7, max: 75, avg: 47.44)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.580s
  Counterexample analysis:                             5.612s (Max:     0.062s, Calls: 388)
    Refinement sat check:                              3.894s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.137s
  Precision update:                                    0.232s
  ARG update:                                          0.410s

Length of refined path (in blocks):                   17010 (count: 388, min: 6, max: 74, avg: 43.84)
Number of affected states:                            11128 (count: 388, min: 4, max: 72, avg: 28.68)
Length (states) of path with itp 'true':               5494 (count: 388, min: 1, max: 50, avg: 14.16)
Length (states) of path with itp non-trivial itp:     11128 (count: 388, min: 4, max: 72, avg: 28.68)
Length (states) of path with itp 'false':               388 (count: 388, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 388, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10740 (count: 388, min: 3, max: 71, avg: 27.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                388
Number of successful refinements:     388
Number of failed refinements:         0
Max. size of reached set before ref.: 3087
Max. size of reached set after ref.:  2277
Avg. size of reached set before ref.: 1216.39
Avg. size of reached set after ref.:  876.86

Total time for CEGAR algorithm:      26.661s
Time for refinements:                 7.211s
Average time for refinement:          0.018s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.371
  Visited lines:          1046
  Total lines:            1928
  Line coverage:          0.543
  Visited conditions:     118
  Total conditions:       440
  Condition coverage:     0.268

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             2361
  Number of reached locations:   412 (15%)
    Avg states per location:     5
    Max states per location:     73 (at node N32)
  Number of reached functions:   46 (37%)
  Number of partitions:          2355
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1581 (before line 5757), Function main called from node N1498, stack depth 1 [2abc224d], stack [main]])
  Number of target states:       0
  Size of final wait list        21

Time for analysis setup:          3.670s
  Time for loading CPAs:          0.706s
  Time for loading parser:        0.486s
  Time for CFA construction:      2.376s
    Time for parsing file(s):     0.695s
    Time for AST to CFA:          0.788s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.614s
      Time for var class.:        0.322s
Time for Analysis:               26.661s
CPU time for analysis:           26.650s
Total time for CPAchecker:       30.339s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.130s

Time for Garbage Collector:       0.527s (in 82 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     48MB (    46 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
