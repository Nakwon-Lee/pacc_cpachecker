scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_066juvr_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            44606 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  42831 (96%)
  Because of loop head:            1604 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         171 (0%)
  Times precision was empty:       13091 (29%)
  Times precision was {false}:     355 (1%)
  Times result was cached:         29217 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1943 (4%)
  Times result was 'false':        2278 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         27542
  BDD entailment checks:           5582
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          10
Number of abstraction locations:          154
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         148916
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 64.80
Number of irrelevant predicates:          27531 (18%)
Number of preds handled by boolean abs:   5748 (4%)
  Total number of models for allsat:      1975
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  3.344s
  Time for path formula creation:        3.192s
Time for strengthen operator:            0.285s
Time for prec operator:                 13.449s
  Time for abstraction:                 12.845s (Max:     0.044s, Count: 44606)
    Boolean abstraction:                 3.836s
    Solving time:                        3.947s (Max:     0.040s)
    Model enumeration time:              0.203s
    Time for BDD construction:           0.161s (Max:     0.011s)
Time for merge operator:                 0.186s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):     4.151s

Number of path formula cache hits:   315617 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.456s

Total number of created targets for pointer analysis: 13912
   Number of created targets for uf: *(void)* is 491
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *(struct_sabi_config)* is 7
   Number of created targets for uf: *(struct_dentry)* is 2
   Number of created targets for uf: *enum_rfkill_type is 2
   Number of created targets for uf: *(struct_rfkill)* is 2
   Number of created targets for uf: *(struct_platform_device)* is 26
   Number of created targets for uf: *unsigned_short_int is 13
   Number of created targets for uf: *(struct_backlight_device)* is 8
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 349
   Number of created targets for uf: *_Bool is 4
   Number of created targets for uf: *(struct_workqueue_struct)* is 2
   Number of created targets for uf: *char is 41
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               447
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4296 (count: 32426, min: 0, max: 221, avg: 0.13)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.537s
  Time for transition matches:                         0.288s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       284076 (count: 284076, min: 1, max: 1, avg: 1.00) [1 x 284076]

CPA algorithm statistics
------------------------
Number of iterations:            160173
Max size of waitlist:            50
Average size of waitlist:        19
Number of computed successors:   183120
Max successors for one state:    2
Number of times merged:          10980
Number of times stopped:         15109
Number of times breaked:         171

Total time for CPA algorithm:        23.020s (Max:     0.756s)
  Time for choose from waitlist:      0.143s
  Time for precision adjustment:     14.567s
  Time for transfer relation:         6.512s
  Time for merge operator:            0.422s
  Time for stop operator:             0.312s
  Time for adding to reached set:     0.308s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   171
Avg. length of target path (in blocks):                7030 (count: 171, min: 7, max: 126, avg: 41.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.327s
  Counterexample analysis:                             2.637s (Max:     0.034s, Calls: 171)
    Refinement sat check:                              1.851s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.158s
  ARG update:                                          0.325s

Length of refined path (in blocks):                    6628 (count: 171, min: 6, max: 125, avg: 38.76)
Number of affected states:                             6113 (count: 171, min: 1, max: 123, avg: 35.75)
Length (states) of path with itp 'true':                344 (count: 171, min: 0, max: 48, avg: 2.01)
Length (states) of path with itp non-trivial itp:      6113 (count: 171, min: 1, max: 123, avg: 35.75)
Length (states) of path with itp 'false':               171 (count: 171, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 171, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5942 (count: 171, min: 0, max: 122, avg: 34.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                171
Number of successful refinements:     171
Number of failed refinements:         0
Max. size of reached set before ref.: 2262
Max. size of reached set after ref.:  1697
Avg. size of reached set before ref.: 1011.19
Avg. size of reached set after ref.:  54.36

Total time for CEGAR algorithm:      26.605s
Time for refinements:                 3.558s
Average time for refinement:          0.020s
Max time for refinement:              0.047s

Code Coverage
-----------------------------
  Function coverage:      0.516
  Visited lines:          1376
  Total lines:            1928
  Line coverage:          0.714
  Visited conditions:     234
  Total conditions:       440
  Condition coverage:     0.532

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             2115
  Number of reached locations:   732 (27%)
    Avg states per location:     2
    Max states per location:     30 (at node N32)
  Number of reached functions:   64 (52%)
  Number of partitions:          2105
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1581 (before line 5757), Function main called from node N1498, stack depth 1 [102d92c4], stack [main]])
  Number of target states:       0
  Size of final wait list        41

Time for analysis setup:          3.738s
  Time for loading CPAs:          0.714s
  Time for loading parser:        0.489s
  Time for CFA construction:      2.471s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          0.860s
    Time for CFA sanity check:    0.163s
    Time for post-processing:     0.647s
      Time for var class.:        0.348s
Time for Analysis:               26.606s
CPU time for analysis:           26.590s
Total time for CPAchecker:       30.349s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.097s

Time for Garbage Collector:       0.607s (in 108 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    68 MiB) max;     48MB (    46 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
