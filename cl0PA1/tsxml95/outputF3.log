scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_582jcfo7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3839: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1412423 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1387032 (98%)
  Because of loop head:            13684 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11707 (1%)
  Times precision was empty:       16397 (1%)
  Times precision was {false}:     1005 (0%)
  Times result was cached:         1386838 (98%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8183 (1%)
  Times result was 'false':        69237 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         733786
  BDD entailment checks:           111926
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          11
Number of abstraction locations:          191
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         8316337
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 905.13
Number of irrelevant predicates:          1063827 (13%)
Number of preds handled by boolean abs:   28970 (0%)
  Total number of models for allsat:      8620
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.05

Time for post operator:                 20.338s
  Time for path formula creation:       18.934s
Time for strengthen operator:            3.363s
Time for prec operator:                231.783s
  Time for abstraction:                222.035s (Max:     0.226s, Count: 1412423)
    Boolean abstraction:                15.546s
    Solving time:                       14.657s (Max:     0.036s)
    Model enumeration time:              1.286s
    Time for BDD construction:           0.222s (Max:     0.012s)
Time for merge operator:                 1.353s
Time for coverage check:                 0.200s
  Time for BDD entailment checks:        0.128s
Total time for SMT solver (w/o itp):    15.943s

Number of path formula cache hits:   8080940 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.580s

Total number of created targets for pointer analysis: 103820
   Number of created targets for uf: *(void)* is 1252
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *(struct_sabi_config)* is 6
   Number of created targets for uf: *(struct_dentry)* is 2
   Number of created targets for uf: *enum_rfkill_type is 2
   Number of created targets for uf: *(struct_rfkill)* is 2
   Number of created targets for uf: *(struct_platform_device)* is 96
   Number of created targets for uf: *unsigned_short_int is 13
   Number of created targets for uf: *(struct_backlight_device)* is 59
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 3446
   Number of created targets for uf: *_Bool is 25
   Number of created targets for uf: *(struct_workqueue_struct)* is 2
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *unsigned_int is 341


Number of BDD nodes:                               1052
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       17712 (count: 192426, min: 0, max: 437, avg: 0.09)
Time for BDD node cleanup:                             0.031s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.898s
  Time for transition matches:                         3.442s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.023s
Automaton transfers with branching:                0
Automaton transfer successors:                      6508069 (count: 6508069, min: 1, max: 1, avg: 1.00) [1 x 6508069]

CPA algorithm statistics
------------------------
Number of iterations:            4533034
Max size of waitlist:            68
Average size of waitlist:        22
Number of computed successors:   5012384
Max successors for one state:    2
Number of times merged:          310930
Number of times stopped:         369027
Number of times breaked:         11707

Total time for CPA algorithm:       321.142s (Max:     0.898s)
  Time for choose from waitlist:      0.969s
  Time for precision adjustment:    248.544s
  Time for transfer relation:        55.558s
  Time for merge operator:            3.114s
  Time for stop operator:             2.931s
  Time for adding to reached set:     3.479s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11707
Avg. length of target path (in blocks):             1856005 (count: 11707, min: 14, max: 451, avg: 158.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 513.838s
  Counterexample analysis:                           496.979s (Max:     0.367s, Calls: 11707)
    Refinement sat check:                            237.305s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.617s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.287s
  Precision update:                                    5.079s
  ARG update:                                          5.298s

Length of refined path (in blocks):                 1843990 (count: 11707, min: 13, max: 450, avg: 157.51)
Number of affected states:                           316601 (count: 11707, min: 4, max: 376, avg: 27.04)
Length (states) of path with itp 'true':            1515682 (count: 11707, min: 0, max: 415, avg: 129.47)
Length (states) of path with itp non-trivial itp:    316601 (count: 11707, min: 4, max: 376, avg: 27.04)
Length (states) of path with itp 'false':             11707 (count: 11707, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 11707, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          304894 (count: 11707, min: 3, max: 375, avg: 26.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11707
Number of successful refinements:     11707
Number of failed refinements:         0
Max. size of reached set before ref.: 10751
Max. size of reached set after ref.:  10366
Avg. size of reached set before ref.: 4579.21
Avg. size of reached set after ref.:  4189.22

Total time for CEGAR algorithm:     896.351s
Time for refinements:               552.033s
Average time for refinement:          0.047s
Max time for refinement:              0.379s

Code Coverage
-----------------------------
  Function coverage:      0.516
  Visited lines:          1386
  Total lines:            1928
  Line coverage:          0.719
  Visited conditions:     242
  Total conditions:       440
  Condition coverage:     0.550

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             8448
  Number of reached locations:   767 (28%)
    Avg states per location:     11
    Max states per location:     260 (at node N32)
  Number of reached functions:   64 (52%)
  Number of partitions:          8434
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1521 (before line 5704), Function main called from node N1498, stack depth 1 [102d92c4], stack [main]])
  Number of target states:       0
  Size of final wait list        49

Time for analysis setup:          3.927s
  Time for loading CPAs:          0.655s
  Time for loading parser:        0.590s
  Time for CFA construction:      2.582s
    Time for parsing file(s):     0.696s
    Time for AST to CFA:          0.871s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.732s
      Time for var class.:        0.401s
Time for Analysis:              896.351s
CPU time for analysis:          896.210s
Total time for CPAchecker:      900.281s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.155s

Time for Garbage Collector:      21.111s (in 4393 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                129MB (   123 MiB) max;     83MB (    79 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           131MB (   125 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8224MB (  7843 MiB) max;   8159MB (  7781 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
