scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7w8bky28/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42717 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  41812 (98%)
  Because of loop head:            485 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         420 (1%)
  Times precision was empty:       8203 (19%)
  Times precision was {false}:     395 (1%)
  Times result was cached:         32966 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1153 (3%)
  Times result was 'false':        2122 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         19350
  BDD entailment checks:           3000
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          9
Number of abstraction locations:          92
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         87624
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 56.60
Number of irrelevant predicates:          38786 (44%)
Number of preds handled by boolean abs:   2472 (3%)
  Total number of models for allsat:      1173
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.086s
  Time for path formula creation:        2.939s
Time for strengthen operator:            0.183s
Time for prec operator:                 10.490s
  Time for abstraction:                  9.949s (Max:     0.057s, Count: 42717)
    Boolean abstraction:                 2.777s
    Solving time:                        3.679s (Max:     0.051s)
    Model enumeration time:              0.218s
    Time for BDD construction:           0.103s (Max:     0.012s)
Time for merge operator:                 0.145s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     3.898s

Number of path formula cache hits:   242734 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.339s

Total number of created targets for pointer analysis: 13116
   Number of created targets for uf: *unsigned_short_int is 526
   Number of created targets for uf: *(void)* is 155
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *unsigned_char is 414
   Number of created targets for uf: *_Bool is 4
   Number of created targets for uf: *unsigned_int is 5


Number of BDD nodes:                               318
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2592 (count: 20279, min: 0, max: 215, avg: 0.13)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.606s
  Time for transition matches:                         0.241s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       210558 (count: 210558, min: 1, max: 1, avg: 1.00) [1 x 210558]

CPA algorithm statistics
------------------------
Number of iterations:            136066
Max size of waitlist:            48
Average size of waitlist:        19
Number of computed successors:   150935
Max successors for one state:    2
Number of times merged:          8175
Number of times stopped:         9468
Number of times breaked:         420

Total time for CPA algorithm:        18.997s (Max:     0.898s)
  Time for choose from waitlist:      0.120s
  Time for precision adjustment:     11.582s
  Time for transfer relation:         5.802s
  Time for merge operator:            0.407s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.221s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   420
Avg. length of target path (in blocks):               20307 (count: 420, min: 7, max: 73, avg: 48.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.832s
  Counterexample analysis:                             5.973s (Max:     0.047s, Calls: 420)
    Refinement sat check:                              4.151s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.129s
  Precision update:                                    0.183s
  ARG update:                                          0.346s

Length of refined path (in blocks):                   18879 (count: 420, min: 6, max: 71, avg: 44.95)
Number of affected states:                            11222 (count: 420, min: 4, max: 69, avg: 26.72)
Length (states) of path with itp 'true':               7237 (count: 420, min: 1, max: 55, avg: 17.23)
Length (states) of path with itp non-trivial itp:     11222 (count: 420, min: 4, max: 69, avg: 26.72)
Length (states) of path with itp 'false':               420 (count: 420, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 420, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10802 (count: 420, min: 3, max: 68, avg: 25.72)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                420
Number of successful refinements:     420
Number of failed refinements:         0
Max. size of reached set before ref.: 2914
Max. size of reached set after ref.:  2603
Avg. size of reached set before ref.: 1158.41
Avg. size of reached set after ref.:  832.51

Total time for CEGAR algorithm:      26.662s
Time for refinements:                 7.399s
Average time for refinement:          0.017s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.371
  Visited lines:          1043
  Total lines:            1928
  Line coverage:          0.541
  Visited conditions:     118
  Total conditions:       440
  Condition coverage:     0.268

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             2467
  Number of reached locations:   409 (15%)
    Avg states per location:     6
    Max states per location:     73 (at node N32)
  Number of reached functions:   46 (37%)
  Number of partitions:          2459
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1581 (before line 5757), Function main called from node N1498, stack depth 1 [102d92c4], stack [main]])
  Number of target states:       0
  Size of final wait list        27

Time for analysis setup:          3.646s
  Time for loading CPAs:          0.691s
  Time for loading parser:        0.552s
  Time for CFA construction:      2.314s
    Time for parsing file(s):     0.678s
    Time for AST to CFA:          0.742s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.594s
      Time for var class.:        0.298s
Time for Analysis:               26.662s
CPU time for analysis:           26.660s
Total time for CPAchecker:       30.315s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.080s

Time for Garbage Collector:       0.507s (in 86 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     47MB (    45 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
