scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f0ac0bly/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_u8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_blob to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3839: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            308655 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  304406 (99%)
  Because of loop head:            3860 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         389 (0%)
  Times precision was empty:       4581 (1%)
  Times precision was {false}:     962 (0%)
  Times result was cached:         293571 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9541 (3%)
  Times result was 'false':        22880 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         159971
  BDD entailment checks:           18271
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          13
Number of abstraction locations:          200
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         1840011
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 175.19
Number of irrelevant predicates:          282688 (15%)
Number of preds handled by boolean abs:   35575 (2%)
  Total number of models for allsat:      10083
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.06

Time for post operator:                  8.329s
  Time for path formula creation:        7.882s
Time for strengthen operator:            1.048s
Time for prec operator:                 70.072s
  Time for abstraction:                 67.531s (Max:     0.179s, Count: 308655)
    Boolean abstraction:                16.081s
    Solving time:                       14.196s (Max:     0.040s)
    Model enumeration time:              1.410s
    Time for BDD construction:           0.302s (Max:     0.010s)
Time for merge operator:                 0.578s
Time for coverage check:                 0.089s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):    15.606s

Number of path formula cache hits:   1767023 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.078s

Total number of created targets for pointer analysis: 71812
   Number of created targets for uf: *(void)* is 1394
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *(struct_sabi_config)* is 7
   Number of created targets for uf: *(struct_dentry)* is 39
   Number of created targets for uf: *enum_rfkill_type is 21
   Number of created targets for uf: *(struct_platform_device)* is 57
   Number of created targets for uf: *(struct_rfkill)* is 89
   Number of created targets for uf: *unsigned_short_int is 909
   Number of created targets for uf: *(struct_backlight_device)* is 72
   Number of created targets for uf: *signed_int is 97
   Number of created targets for uf: *unsigned_char is 8773
   Number of created targets for uf: *_Bool is 4
   Number of created targets for uf: *(struct_workqueue_struct)* is 33
   Number of created targets for uf: *unsigned_int is 71
   Number of created targets for uf: *char is 41


Number of BDD nodes:                               2088
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       23083 (count: 88652, min: 0, max: 617, avg: 0.26)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.811s
  Time for transition matches:                         1.002s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                      1495130 (count: 1495130, min: 1, max: 1, avg: 1.00) [1 x 1495130]

CPA algorithm statistics
------------------------
Number of iterations:            1024372
Max size of waitlist:            74
Average size of waitlist:        15
Number of computed successors:   1139153
Max successors for one state:    2
Number of times merged:          70850
Number of times stopped:         84338
Number of times breaked:         389

Total time for CPA algorithm:        99.977s (Max:     1.992s)
  Time for choose from waitlist:      0.328s
  Time for precision adjustment:     76.007s
  Time for transfer relation:        18.535s
  Time for merge operator:            1.151s
  Time for stop operator:             0.945s
  Time for adding to reached set:     1.138s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   389
Avg. length of target path (in blocks):               28039 (count: 389, min: 7, max: 332, avg: 72.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.202s
  Counterexample analysis:                             8.228s (Max:     0.121s, Calls: 389)
    Refinement sat check:                              5.253s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.174s
  Precision update:                                    0.273s
  ARG update:                                          1.277s

Length of refined path (in blocks):                   26975 (count: 389, min: 6, max: 331, avg: 69.34)
Number of affected states:                            19984 (count: 389, min: 1, max: 329, avg: 51.37)
Length (states) of path with itp 'true':               6602 (count: 389, min: 0, max: 295, avg: 16.97)
Length (states) of path with itp non-trivial itp:     19984 (count: 389, min: 1, max: 329, avg: 51.37)
Length (states) of path with itp 'false':               389 (count: 389, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 389, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           19595 (count: 389, min: 0, max: 328, avg: 50.37)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                389
Number of successful refinements:     389
Number of failed refinements:         0
Max. size of reached set before ref.: 12552
Max. size of reached set after ref.:  8526
Avg. size of reached set before ref.: 3527.07
Avg. size of reached set after ref.:  905.42

Total time for CEGAR algorithm:     111.539s
Time for refinements:                11.265s
Average time for refinement:          0.028s
Max time for refinement:              0.138s

Code Coverage
-----------------------------
  Function coverage:      0.548
  Visited lines:          1463
  Total lines:            1928
  Line coverage:          0.759
  Visited conditions:     292
  Total conditions:       440
  Condition coverage:     0.664

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             12111
  Number of reached locations:   886 (33%)
    Avg states per location:     13
    Max states per location:     388 (at node N32)
  Number of reached functions:   68 (55%)
  Number of partitions:          12104
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N182 (before line 4009), Function sabi_command called from node N408, stack depth 3 [19e48ac9], stack [main, swsmi_rfkill_set, sabi_command]])
  Number of target states:       0

Time for analysis setup:          3.746s
  Time for loading CPAs:          0.689s
  Time for loading parser:        0.487s
  Time for CFA construction:      2.493s
    Time for parsing file(s):     0.780s
    Time for AST to CFA:          0.794s
    Time for CFA sanity check:    0.154s
    Time for post-processing:     0.626s
      Time for var class.:        0.337s
Time for Analysis:              111.539s
CPU time for analysis:          111.530s
Time for analyzing result:        0.009s
Total time for CPAchecker:      115.289s
Total CPU time for CPAchecker:  115.270s
Time for statistics:              0.226s

Time for Garbage Collector:       5.768s (in 830 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                131MB (   125 MiB) max;     69MB (    66 MiB) avg;    140MB (   134 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           142MB (   135 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8158MB (  7780 MiB) max;   8049MB (  7676 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
