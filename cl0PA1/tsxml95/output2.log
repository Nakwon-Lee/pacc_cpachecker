scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--platform--x86--samsung-laptop.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nisd7hpc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5813: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dmi_check_system to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function led_classdev_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_dmi_promote_vendor to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_unregister to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            34051 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33341 (98%)
  Because of loop head:            368 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         342 (1%)
  Times precision was empty:       8348 (25%)
  Times precision was {false}:     425 (1%)
  Times result was cached:         24165 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1113 (3%)
  Times result was 'false':        1811 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         15273
  BDD entailment checks:           2197
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       39
Number of predicates discovered:          9
Number of abstraction locations:          92
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         49624
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 32.27
Number of irrelevant predicates:          15618 (31%)
Number of preds handled by boolean abs:   2434 (5%)
  Total number of models for allsat:      1118
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  3.467s
  Time for path formula creation:        3.359s
Time for strengthen operator:            0.202s
Time for prec operator:                 10.465s
  Time for abstraction:                  9.842s (Max:     0.039s, Count: 34051)
    Boolean abstraction:                 3.027s
    Solving time:                        4.209s (Max:     0.034s)
    Model enumeration time:              0.134s
    Time for BDD construction:           0.114s (Max:     0.010s)
Time for merge operator:                 0.134s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     4.343s

Number of path formula cache hits:   185817 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.716s

Total number of created targets for pointer analysis: 15079
   Number of created targets for uf: *unsigned_short_int is 489
   Number of created targets for uf: *(void)* is 78
   Number of created targets for uf: *(struct_samsung_quirks)* is 2
   Number of created targets for uf: *unsigned_char is 1291
   Number of created targets for uf: *_Bool is 4
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               292
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2469 (count: 19500, min: 0, max: 234, avg: 0.13)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.647s
  Time for transition matches:                         0.251s
  Time for transition assertions:                      0.012s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                       165260 (count: 165260, min: 1, max: 1, avg: 1.00) [1 x 165260]

CPA algorithm statistics
------------------------
Number of iterations:            108311
Max size of waitlist:            42
Average size of waitlist:        18
Number of computed successors:   120187
Max successors for one state:    2
Number of times merged:          6538
Number of times stopped:         7413
Number of times breaked:         342

Total time for CPA algorithm:        19.143s (Max:     0.932s)
  Time for choose from waitlist:      0.110s
  Time for precision adjustment:     11.520s
  Time for transfer relation:         5.994s
  Time for merge operator:            0.336s
  Time for stop operator:             0.265s
  Time for adding to reached set:     0.258s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   342
Avg. length of target path (in blocks):               15961 (count: 342, min: 7, max: 73, avg: 46.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.089s
  Counterexample analysis:                             5.202s (Max:     0.073s, Calls: 342)
    Refinement sat check:                              3.683s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.025s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.133s
  Precision update:                                    0.198s
  ARG update:                                          0.308s

Length of refined path (in blocks):                   14561 (count: 341, min: 6, max: 66, avg: 42.70)
Number of affected states:                             9483 (count: 341, min: 4, max: 64, avg: 27.81)
Length (states) of path with itp 'true':               4737 (count: 341, min: 1, max: 50, avg: 13.89)
Length (states) of path with itp non-trivial itp:      9483 (count: 341, min: 4, max: 64, avg: 27.81)
Length (states) of path with itp 'false':               341 (count: 341, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 341, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9142 (count: 341, min: 3, max: 63, avg: 26.81)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                342
Number of successful refinements:     341
Number of failed refinements:         0
Max. size of reached set before ref.: 3078
Max. size of reached set after ref.:  2178
Avg. size of reached set before ref.: 1180.31
Avg. size of reached set after ref.:  858.36

Total time for CEGAR algorithm:      26.039s
Time for refinements:                 6.578s
Average time for refinement:          0.019s
Max time for refinement:              0.074s

Code Coverage
-----------------------------
  Function coverage:      0.355
  Visited lines:          1003
  Total lines:            1928
  Line coverage:          0.520
  Visited conditions:     104
  Total conditions:       440
  Condition coverage:     0.236

CPAchecker general statistics
-----------------------------
Number of program locations:     2715
Number of CFA edges:             3001
Number of relevant variables:    377
Number of functions:             124
Number of loops:                 7
Size of reached set:             2093
  Number of reached locations:   374 (14%)
    Avg states per location:     5
    Max states per location:     66 (at node N32)
  Number of reached functions:   44 (35%)
  Number of partitions:          2065
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N182 (before line 4009), Function sabi_command called from node N231, stack depth 4 [5acf46d5], stack [main, seclinux_rfkill_set, sabi_set_commandb, sabi_command]])
  Number of target states:       1
  Size of final wait list        20

Time for analysis setup:          3.802s
  Time for loading CPAs:          0.784s
  Time for loading parser:        0.439s
  Time for CFA construction:      2.499s
    Time for parsing file(s):     0.701s
    Time for AST to CFA:          0.824s
    Time for CFA sanity check:    0.169s
    Time for post-processing:     0.680s
      Time for var class.:        0.335s
Time for Analysis:               26.039s
CPU time for analysis:           26.040s
Total time for CPAchecker:       29.844s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.107s

Time for Garbage Collector:       0.494s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     48MB (    45 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
