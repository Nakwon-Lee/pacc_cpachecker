scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cb5jj7q5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42623 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39548 (93%)
  Because of loop head:            3065 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       42153 (99%)
  Times precision was {false}:     33 (0%)
  Times result was cached:         362 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      75 (0%)
  Times result was 'false':        30 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         21504
  BDD entailment checks:           7490
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          4
Number of abstraction locations:          33
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1129
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 10.45
Number of irrelevant predicates:          768 (68%)
Number of preds handled by boolean abs:   126 (11%)
  Total number of models for allsat:      74
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  5.089s
  Time for path formula creation:        4.935s
Time for strengthen operator:            0.199s
Time for prec operator:                  1.040s
  Time for abstraction:                  0.505s (Max:     0.014s, Count: 42623)
    Boolean abstraction:                 0.083s
    Solving time:                        0.080s (Max:     0.012s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 0.462s
Time for coverage check:                 0.100s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):     0.090s

Number of path formula cache hits:   242702 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.025s

Total number of created targets for pointer analysis: 60821
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 5
   Number of created targets for uf: *(struct_hw_scatterlist)* is 5
   Number of created targets for uf: *(struct_scsi_device)* is 4
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 1879
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 7
   Number of created targets for uf: *(struct_list_head)* is 9
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 5


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         132 (count: 50274, min: 0, max: 35, avg: 0.00)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.409s
Automaton transfers with branching:                0
Automaton transfer successors:                       211858 (count: 211858, min: 1, max: 1, avg: 1.00) [1 x 211858]

CPA algorithm statistics
------------------------
Number of iterations:            146296
Max size of waitlist:            81
Average size of waitlist:        57
Number of computed successors:   161286
Max successors for one state:    2
Number of times merged:          7007
Number of times stopped:         14264
Number of times breaked:         10

Total time for CPA algorithm:        21.313s (Max:     7.893s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:      2.201s
  Time for transfer relation:        17.205s
  Time for merge operator:            0.648s
  Time for stop operator:             0.312s
  Time for adding to reached set:     0.203s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 159 (count: 10, min: 12, max: 36, avg: 15.90)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.742s
  Counterexample analysis:                             2.177s (Max:     0.237s, Calls: 10)
    Refinement sat check:                              2.033s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.009s
  ARG update:                                          0.542s

Length of refined path (in blocks):                     149 (count: 10, min: 11, max: 35, avg: 14.90)
Number of affected states:                              129 (count: 10, min: 9, max: 33, avg: 12.90)
Length (states) of path with itp 'true':                 10 (count: 10, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       129 (count: 10, min: 9, max: 33, avg: 12.90)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             119 (count: 10, min: 8, max: 32, avg: 11.90)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 14706
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 14652.10
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      24.246s
Time for refinements:                 2.932s
Average time for refinement:          0.293s
Max time for refinement:              0.359s

Code Coverage
-----------------------------
  Function coverage:      0.183
  Visited lines:          1088
  Total lines:            8518
  Line coverage:          0.128
  Visited conditions:     148
  Total conditions:       2660
  Condition coverage:     0.056

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             531
  Number of reached locations:   355 (3%)
    Avg states per location:     1
    Max states per location:     4 (at node N49)
  Number of reached functions:   35 (18%)
  Number of partitions:          530
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N11572 (before line 16233), Function main called from node N11563, stack depth 1 [23119bc3], stack [main]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          6.077s
  Time for loading CPAs:          0.906s
  Time for loading parser:        0.487s
  Time for CFA construction:      4.590s
    Time for parsing file(s):     0.850s
    Time for AST to CFA:          1.565s
    Time for CFA sanity check:    0.549s
    Time for post-processing:     1.524s
      Time for var class.:        0.696s
Time for Analysis:               24.246s
CPU time for analysis:           24.240s
Total time for CPAchecker:       30.326s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.084s

Time for Garbage Collector:       1.331s (in 93 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   112 MiB) max;     71MB (    68 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
