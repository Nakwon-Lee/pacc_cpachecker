scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w0cwlepu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1396336 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1293228 (93%)
  Because of loop head:            102887 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         221 (0%)
  Times precision was empty:       608625 (44%)
  Times precision was {false}:     3492 (0%)
  Times result was cached:         779066 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5153 (0%)
  Times result was 'false':        10722 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         727912
  BDD entailment checks:           266494
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          8
Number of abstraction locations:          238
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         2402943
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 277.96
Number of irrelevant predicates:          1661669 (69%)
Number of preds handled by boolean abs:   8727 (0%)
  Total number of models for allsat:      5142
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 86.614s
  Time for path formula creation:       84.546s
Time for strengthen operator:            4.078s
Time for prec operator:                386.734s
  Time for abstraction:                374.580s (Max:     0.838s, Count: 1396336)
    Boolean abstraction:               167.082s
    Solving time:                      241.299s (Max:     0.602s)
    Model enumeration time:             13.169s
    Time for BDD construction:           0.124s (Max:     0.010s)
Time for merge operator:                 8.750s
Time for coverage check:                 0.273s
  Time for BDD entailment checks:        0.195s
Total time for SMT solver (w/o itp):   254.468s

Number of path formula cache hits:   7767793 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.791s

Total number of created targets for pointer analysis: 2432334
   Number of created targets for uf: *(struct_hw_scatterlist)* is 169
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 169
   Number of created targets for uf: *(struct_scsi_device)* is 73
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 36
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *(struct_scsi_cmnd)* is 6
   Number of created targets for uf: *enum_ldv_24939 is 24
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *signed_int is 61
   Number of created targets for uf: *unsigned_char is 26919
   Number of created targets for uf: *(struct_list_head)* is 368
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 3
   Number of created targets for uf: *unsigned_int is 24


Number of BDD nodes:                               284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10382 (count: 926579, min: 0, max: 134, avg: 0.01)
Time for BDD node cleanup:                             0.147s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.207s
  Time for transition matches:                         3.272s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      6899360 (count: 6899360, min: 1, max: 1, avg: 1.00) [1 x 6899360]

CPA algorithm statistics
------------------------
Number of iterations:            4798198
Max size of waitlist:            274
Average size of waitlist:        84
Number of computed successors:   5299377
Max successors for one state:    2
Number of times merged:          230709
Number of times stopped:         466764
Number of times breaked:         221

Total time for CPA algorithm:       799.904s (Max:    14.252s)
  Time for choose from waitlist:      1.194s
  Time for precision adjustment:    407.903s
  Time for transfer relation:       364.298s
  Time for merge operator:           10.950s
  Time for stop operator:             3.832s
  Time for adding to reached set:     4.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   221
Avg. length of target path (in blocks):               12049 (count: 221, min: 8, max: 124, avg: 54.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  91.323s
  Counterexample analysis:                            84.255s (Max:     1.031s, Calls: 221)
    Refinement sat check:                             78.101s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.125s
  ARG update:                                          6.791s

Length of refined path (in blocks):                   11508 (count: 221, min: 4, max: 123, avg: 52.07)
Number of affected states:                            10869 (count: 221, min: 1, max: 121, avg: 49.18)
Length (states) of path with itp 'true':                418 (count: 221, min: 1, max: 50, avg: 1.89)
Length (states) of path with itp non-trivial itp:     10869 (count: 221, min: 1, max: 121, avg: 49.18)
Length (states) of path with itp 'false':               221 (count: 221, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 221, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10648 (count: 221, min: 0, max: 120, avg: 48.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                221
Number of successful refinements:     221
Number of failed refinements:         0
Max. size of reached set before ref.: 43040
Max. size of reached set after ref.:  13849
Avg. size of reached set before ref.: 21986.83
Avg. size of reached set after ref.:  279.02

Total time for CEGAR algorithm:     893.514s
Time for refinements:                93.570s
Average time for refinement:          0.423s
Max time for refinement:              1.068s

Code Coverage
-----------------------------
  Function coverage:      0.455
  Visited lines:          2373
  Total lines:            8518
  Line coverage:          0.279
  Visited conditions:     626
  Total conditions:       2660
  Condition coverage:     0.235

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             24464
  Number of reached locations:   1714 (14%)
    Avg states per location:     14
    Max states per location:     626 (at node N380)
  Number of reached functions:   87 (46%)
  Number of partitions:          24404
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N11572 (before line 16233), Function main called from node N11563, stack depth 1 [7e615c6a], stack [main]])
  Number of target states:       0
  Size of final wait list        124

Time for analysis setup:          6.785s
  Time for loading CPAs:          1.023s
  Time for loading parser:        0.504s
  Time for CFA construction:      5.162s
    Time for parsing file(s):     0.963s
    Time for AST to CFA:          1.725s
    Time for CFA sanity check:    0.647s
    Time for post-processing:     1.717s
      Time for var class.:        0.730s
Time for Analysis:              893.514s
CPU time for analysis:          893.450s
Total time for CPAchecker:      900.309s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.487s

Time for Garbage Collector:      41.752s (in 1613 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                559MB (   533 MiB) max;    268MB (   255 MiB) avg;    581MB (   554 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           597MB (   569 MiB) max;    388MB (   370 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8379MB (  7990 MiB) max;   8229MB (  7848 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
