scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9emqxvf_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7137: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1384651 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1282429 (93%)
  Because of loop head:            102003 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         219 (0%)
  Times precision was empty:       606923 (44%)
  Times precision was {false}:     3393 (0%)
  Times result was cached:         769223 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5112 (0%)
  Times result was 'false':        10596 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         721468
  BDD entailment checks:           264092
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          8
Number of abstraction locations:          235
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         2370025
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 278.66
Number of irrelevant predicates:          1637059 (69%)
Number of preds handled by boolean abs:   8685 (0%)
  Total number of models for allsat:      5098
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 85.962s
  Time for path formula creation:       84.128s
Time for strengthen operator:            4.472s
Time for prec operator:                384.812s
  Time for abstraction:                372.587s (Max:     0.880s, Count: 1384651)
    Boolean abstraction:               168.312s
    Solving time:                      235.635s (Max:     0.527s)
    Model enumeration time:             12.963s
    Time for BDD construction:           0.114s (Max:     0.019s)
Time for merge operator:                 8.633s
Time for coverage check:                 0.299s
  Time for BDD entailment checks:        0.215s
Total time for SMT solver (w/o itp):   248.598s

Number of path formula cache hits:   7711082 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.321s

Total number of created targets for pointer analysis: 2365292
   Number of created targets for uf: *(struct_hw_scatterlist)* is 166
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 166
   Number of created targets for uf: *(struct_scsi_device)* is 72
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 36
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *(struct_scsi_cmnd)* is 6
   Number of created targets for uf: *enum_ldv_24939 is 24
   Number of created targets for uf: *unsigned_short_int is 5
   Number of created targets for uf: *signed_int is 61
   Number of created targets for uf: *unsigned_char is 26606
   Number of created targets for uf: *(struct_list_head)* is 362
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 3
   Number of created targets for uf: *unsigned_int is 24


Number of BDD nodes:                               284
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10308 (count: 921701, min: 0, max: 150, avg: 0.01)
Time for BDD node cleanup:                             0.121s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.985s
  Time for transition matches:                         3.437s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      6840735 (count: 6840735, min: 1, max: 1, avg: 1.00) [1 x 6840735]

CPA algorithm statistics
------------------------
Number of iterations:            4757376
Max size of waitlist:            274
Average size of waitlist:        84
Number of computed successors:   5254237
Max successors for one state:    2
Number of times merged:          228688
Number of times stopped:         462724
Number of times breaked:         219

Total time for CPA algorithm:       800.333s (Max:    14.840s)
  Time for choose from waitlist:      1.322s
  Time for precision adjustment:    405.218s
  Time for transfer relation:       366.849s
  Time for merge operator:           10.691s
  Time for stop operator:             3.856s
  Time for adding to reached set:     4.761s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   219
Avg. length of target path (in blocks):               11864 (count: 219, min: 8, max: 124, avg: 54.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  91.129s
  Counterexample analysis:                            83.699s (Max:     1.062s, Calls: 219)
    Refinement sat check:                             77.626s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.104s
  ARG update:                                          7.126s

Length of refined path (in blocks):                   11376 (count: 219, min: 4, max: 123, avg: 51.95)
Number of affected states:                            10790 (count: 219, min: 1, max: 121, avg: 49.27)
Length (states) of path with itp 'true':                367 (count: 219, min: 1, max: 50, avg: 1.68)
Length (states) of path with itp non-trivial itp:     10790 (count: 219, min: 1, max: 121, avg: 49.27)
Length (states) of path with itp 'false':               219 (count: 219, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 219, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           10571 (count: 219, min: 0, max: 120, avg: 48.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                219
Number of successful refinements:     219
Number of failed refinements:         0
Max. size of reached set before ref.: 43040
Max. size of reached set after ref.:  13551
Avg. size of reached set before ref.: 21958.29
Avg. size of reached set after ref.:  218.30

Total time for CEGAR algorithm:     893.746s
Time for refinements:                93.376s
Average time for refinement:          0.426s
Max time for refinement:              1.118s

Code Coverage
-----------------------------
  Function coverage:      0.455
  Visited lines:          2373
  Total lines:            8518
  Line coverage:          0.279
  Visited conditions:     626
  Total conditions:       2660
  Condition coverage:     0.235

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             19859
  Number of reached locations:   1714 (14%)
    Avg states per location:     11
    Max states per location:     540 (at node N380)
  Number of reached functions:   87 (46%)
  Number of partitions:          19820
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N11776 (before line 16437), Function main called from node N11563, stack depth 1 [7e615c6a], stack [main]])
  Number of target states:       0
  Size of final wait list        128

Time for analysis setup:          6.585s
  Time for loading CPAs:          1.011s
  Time for loading parser:        0.522s
  Time for CFA construction:      4.940s
    Time for parsing file(s):     0.813s
    Time for AST to CFA:          1.757s
    Time for CFA sanity check:    0.613s
    Time for post-processing:     1.635s
      Time for var class.:        0.751s
Time for Analysis:              893.747s
CPU time for analysis:          893.680s
Total time for CPAchecker:      900.334s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.440s

Time for Garbage Collector:      41.302s (in 1596 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                528MB (   503 MiB) max;    278MB (   265 MiB) avg;    554MB (   528 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           577MB (   550 MiB) max;    397MB (   379 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8371MB (  7984 MiB) max;   8227MB (  7846 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
