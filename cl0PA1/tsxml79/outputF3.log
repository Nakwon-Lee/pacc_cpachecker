scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y3v1ogsb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            135132 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  78922 (58%)
  Because of loop head:            56050 (41%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         160 (0%)
  Times precision was empty:       59553 (44%)
  Times precision was {false}:     1291 (1%)
  Times result was cached:         71695 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2593 (2%)
  Times result was 'false':        8366 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         326872
  BDD entailment checks:           71750
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       354
Number of predicates discovered:          7
Number of abstraction locations:          70
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         311064
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 80.09
Number of irrelevant predicates:          161445 (52%)
Number of preds handled by boolean abs:   7156 (2%)
  Total number of models for allsat:      2615
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 55.163s
  Time for path formula creation:       54.482s
Time for strengthen operator:            1.329s
Time for prec operator:                639.187s
  Time for abstraction:                637.364s (Max:     6.474s, Count: 135132)
    Boolean abstraction:               545.550s
    Solving time:                      553.080s (Max:     6.279s)
    Model enumeration time:              5.482s
    Time for BDD construction:           0.082s (Max:     0.009s)
Time for merge operator:                 2.500s
Time for coverage check:                 0.128s
  Time for BDD entailment checks:        0.083s
Total time for SMT solver (w/o itp):   558.562s

Number of path formula cache hits:   2242534 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    46.969s

Total number of created targets for pointer analysis: 2798603
   Number of created targets for uf: *(struct_aic7xxx_host)* is 481
   Number of created targets for uf: *(struct_scsi_device)* is 77
   Number of created targets for uf: *enum_ldv_24945 is 2781
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 3
   Number of created targets for uf: *enum_ldv_24943 is 2642
   Number of created targets for uf: *(unsigned_int)* is 1081
   Number of created targets for uf: *unsigned_short_int is 11121
   Number of created targets for uf: *signed_int is 5523
   Number of created targets for uf: *(char)* is 4751
   Number of created targets for uf: *unsigned_char is 22244
   Number of created targets for uf: *(struct_list_head)* is 131
   Number of created targets for uf: *enum_ldv_24941 is 2781
   Number of created targets for uf: *char is 246


Number of BDD nodes:                               439
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5393 (count: 155609, min: 0, max: 88, avg: 0.03)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.185s
  Time for transition matches:                         1.319s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      2201399 (count: 2201399, min: 1, max: 1, avg: 1.00) [1 x 2201399]

CPA algorithm statistics
------------------------
Number of iterations:            991426
Max size of waitlist:            257
Average size of waitlist:        109
Number of computed successors:   1187947
Max successors for one state:    2
Number of times merged:          127561
Number of times stopped:         166208
Number of times breaked:         160

Total time for CPA algorithm:       719.636s (Max:    20.893s)
  Time for choose from waitlist:      0.310s
  Time for precision adjustment:    643.925s
  Time for transfer relation:        68.240s
  Time for merge operator:            3.560s
  Time for stop operator:             0.948s
  Time for adding to reached set:     0.813s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   160
Avg. length of target path (in blocks):                3815 (count: 160, min: 8, max: 38, avg: 23.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 175.209s
  Counterexample analysis:                           173.762s (Max:     5.080s, Calls: 160)
    Refinement sat check:                            167.307s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.044s
  ARG update:                                          1.304s

Length of refined path (in blocks):                    3139 (count: 159, min: 4, max: 32, avg: 19.74)
Number of affected states:                             2835 (count: 159, min: 1, max: 30, avg: 17.83)
Length (states) of path with itp 'true':                145 (count: 159, min: 0, max: 15, avg: 0.91)
Length (states) of path with itp non-trivial itp:      2835 (count: 159, min: 1, max: 30, avg: 17.83)
Length (states) of path with itp 'false':               159 (count: 159, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 159, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2676 (count: 159, min: 0, max: 29, avg: 16.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                160
Number of successful refinements:     159
Number of failed refinements:         0
Max. size of reached set before ref.: 12926
Max. size of reached set after ref.:  3174
Avg. size of reached set before ref.: 6358.72
Avg. size of reached set after ref.:  25.29

Total time for CEGAR algorithm:     895.381s
Time for refinements:               175.737s
Average time for refinement:          1.098s
Max time for refinement:              5.095s

Code Coverage
-----------------------------
  Function coverage:      0.293
  Visited lines:          2447
  Total lines:            8518
  Line coverage:          0.287
  Visited conditions:     422
  Total conditions:       2660
  Condition coverage:     0.159

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             8275
  Number of reached locations:   1084 (9%)
    Avg states per location:     7
    Max states per location:     48 (at node N9472)
  Number of reached functions:   56 (29%)
  Number of partitions:          8203
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N11572 (before line 16233), Function main called from node N11563, stack depth 1 [7e615c6a], stack [main]])
  Number of target states:       1
  Size of final wait list        168

Time for analysis setup:          6.357s
  Time for loading CPAs:          0.932s
  Time for loading parser:        0.494s
  Time for CFA construction:      4.811s
    Time for parsing file(s):     0.956s
    Time for AST to CFA:          1.659s
    Time for CFA sanity check:    0.581s
    Time for post-processing:     1.491s
      Time for var class.:        0.628s
Time for Analysis:              895.381s
CPU time for analysis:          895.300s
Total time for CPAchecker:      901.741s
Total CPU time for CPAchecker:  901.640s
Time for statistics:              0.221s

Time for Garbage Collector:      11.674s (in 1155 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                248MB (   237 MiB) max;    134MB (   128 MiB) avg;    265MB (   252 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           293MB (   279 MiB) max;    197MB (   188 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8631MB (  8231 MiB) max;   8397MB (  8008 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
