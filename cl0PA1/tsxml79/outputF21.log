scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--scsi--aic7xxx_old.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_i92jed6o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 6297: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 6381: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7994: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 16507: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7137: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4731: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4763: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4621-4622: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4654: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_driver_template_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_bios_ptable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_partsize to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 16086: Ignoring function call through function pointer *(sht->detect): (*(sht->detect))(sht); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 16167: Ignoring function call through function pointer *(sht->release): (*(sht->release))(shost); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4763: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strsep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_cmd_get_serial to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4731: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6099: Ignoring function call through function pointer *(cur_patch->patch_func): tmp = (*(cur_patch->patch_func))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function panic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_adjust_queue_depth to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dump_stack to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2466279 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2223181 (90%)
  Because of loop head:            243089 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (0%)
  Times precision was empty:       2465760 (100%)
  Times precision was {false}:     87 (0%)
  Times result was cached:         374 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      58 (0%)
  Times result was 'false':        71 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         875997
  BDD entailment checks:           457087
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       354
Number of predicates discovered:          5
Number of abstraction locations:          13
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         1128
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 7.78
Number of irrelevant predicates:          756 (67%)
Number of preds handled by boolean abs:   118 (10%)
  Total number of models for allsat:      63
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.09

Time for post operator:                177.655s
  Time for path formula creation:      175.035s
Time for strengthen operator:            6.058s
Time for prec operator:                 32.273s
  Time for abstraction:                  4.978s (Max:     0.275s, Count: 2466279)
    Boolean abstraction:                 0.220s
    Solving time:                        0.299s (Max:     0.023s)
    Model enumeration time:              0.010s
    Time for BDD construction:           0.013s (Max:     0.005s)
Time for merge operator:                10.295s
Time for coverage check:                 0.355s
  Time for BDD entailment checks:        0.253s
Total time for SMT solver (w/o itp):     0.309s

Number of path formula cache hits:   11765416 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    96.262s

Total number of created targets for pointer analysis: 5075467
   Number of created targets for uf: *enum_ldv_24948 is 9
   Number of created targets for uf: *(struct_aic7xxx_host)* is 29
   Number of created targets for uf: *(struct_aic7xxx_scb_dma)* is 4
   Number of created targets for uf: *(struct_hw_scatterlist)* is 4
   Number of created targets for uf: *(struct_scsi_device)* is 9
   Number of created targets for uf: *enum_ldv_24945 is 321
   Number of created targets for uf: *(struct_aic7xxx_scb)* is 6
   Number of created targets for uf: *enum_ldv_24943 is 321
   Number of created targets for uf: *(struct_pci_dev)* is 9
   Number of created targets for uf: *(unsigned_char)* is 4
   Number of created targets for uf: *(unsigned_int)* is 121
   Number of created targets for uf: *unsigned_short_int_:_10 is 124
   Number of created targets for uf: *(struct_sequencer_patch)* is 10
   Number of created targets for uf: *unsigned_long_int is 9
   Number of created targets for uf: *unsigned_short_int is 1281
   Number of created targets for uf: *signed_int is 5396
   Number of created targets for uf: *(char)* is 51
   Number of created targets for uf: *unsigned_char is 314
   Number of created targets for uf: *signed_long_int is 57
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *enum_ldv_24941 is 321
   Number of created targets for uf: *(struct_aic7xxx_hwscb)* is 4
   Number of created targets for uf: *char is 49
   Number of created targets for uf: *unsigned_int is 9


Number of BDD nodes:                               232
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         161 (count: 2923668, min: 0, max: 31, avg: 0.00)
Time for BDD node cleanup:                             0.347s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 10.265s
  Time for transition matches:                         5.436s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                     10757160 (count: 10757160, min: 1, max: 1, avg: 1.00) [1 x 10757160]

CPA algorithm statistics
------------------------
Number of iterations:            7885495
Max size of waitlist:            239
Average size of waitlist:        127
Number of computed successors:   8552980
Max successors for one state:    2
Number of times merged:          209455
Number of times stopped:         666274
Number of times breaked:         9

Total time for CPA algorithm:       869.669s (Max:   130.650s)
  Time for choose from waitlist:      1.597s
  Time for precision adjustment:     77.363s
  Time for transfer relation:       749.356s
  Time for merge operator:           12.755s
  Time for stop operator:             6.182s
  Time for adding to reached set:     8.458s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  93 (count: 9, min: 8, max: 12, avg: 10.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  20.678s
  Counterexample analysis:                             1.956s (Max:     0.273s, Calls: 9)
    Refinement sat check:                              1.828s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.003s
  ARG update:                                         18.697s

Length of refined path (in blocks):                      66 (count: 9, min: 4, max: 11, avg: 7.33)
Number of affected states:                               45 (count: 9, min: 1, max: 9, avg: 5.00)
Length (states) of path with itp 'true':                 12 (count: 9, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp non-trivial itp:        45 (count: 9, min: 1, max: 9, avg: 5.00)
Length (states) of path with itp 'false':                 9 (count: 9, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              36 (count: 9, min: 0, max: 8, avg: 4.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 1182586
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 807925.56
Avg. size of reached set after ref.:  6.67

Total time for CEGAR algorithm:     895.165s
Time for refinements:                25.496s
Average time for refinement:          2.832s
Max time for refinement:              4.648s

Code Coverage
-----------------------------
  Function coverage:      0.576
  Visited lines:          5172
  Total lines:            8518
  Line coverage:          0.607
  Visited conditions:     1406
  Total conditions:       2660
  Condition coverage:     0.529

CPAchecker general statistics
-----------------------------
Number of program locations:     12050
Number of CFA edges:             14324
Number of relevant variables:    1915
Number of functions:             191
Number of loops:                 140
Size of reached set:             615365
  Number of reached locations:   3784 (31%)
    Avg states per location:     162
    Max states per location:     24940 (at node N380)
  Number of reached functions:   110 (58%)
  Number of partitions:          615363
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N11572 (before line 16233), Function main called from node N11563, stack depth 1 [23119bc3], stack [main]])
  Number of target states:       0
  Size of final wait list        155

Time for analysis setup:          5.193s
  Time for loading CPAs:          0.721s
  Time for loading parser:        0.415s
  Time for CFA construction:      3.988s
    Time for parsing file(s):     0.752s
    Time for AST to CFA:          1.438s
    Time for CFA sanity check:    0.427s
    Time for post-processing:     1.215s
      Time for var class.:        0.605s
Time for Analysis:              895.165s
CPU time for analysis:          895.130s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              5.049s

Time for Garbage Collector:      86.235s (in 508 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1951MB (  1861 MiB) max;   1035MB (   987 MiB) avg;   1994MB (  1902 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          1971MB (  1880 MiB) max;   1575MB (  1502 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8165MB (  7786 MiB) max;   8127MB (  7751 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
