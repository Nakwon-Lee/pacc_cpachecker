scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--isdn--mISDN--l1oip.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vwb5ns0f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5354: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5357: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5360: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7396: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6166-6167: Function pointer *(socket->ops->bind) with type int (*)(struct socket *, struct sockaddr *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freedchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freebchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function send_sig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_initdchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_initbchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_create_on_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5623: Ignoring function call through function pointer *(ch->recv): tmp = (*(ch->recv))(ch->peer, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_ch_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr_inv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kernel_sendmsg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            152388 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  131011 (86%)
  Because of loop head:            21228 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         149 (0%)
  Times precision was empty:       2114 (1%)
  Times precision was {false}:     329 (0%)
  Times result was cached:         146795 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3150 (2%)
  Times result was 'false':        2103 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         197126
  BDD entailment checks:           37562
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          6
Number of abstraction locations:          109
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         546392
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 157.05
Number of irrelevant predicates:          68463 (13%)
Number of preds handled by boolean abs:   9959 (2%)
  Total number of models for allsat:      3194
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 12.620s
  Time for path formula creation:       12.227s
Time for strengthen operator:            0.662s
Time for prec operator:                113.084s
  Time for abstraction:                111.536s (Max:     0.847s, Count: 152388)
    Boolean abstraction:                69.592s
    Solving time:                       73.678s (Max:     0.789s)
    Model enumeration time:              4.015s
    Time for BDD construction:           0.135s (Max:     0.010s)
Time for merge operator:                 1.102s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):    77.693s

Number of path formula cache hits:   1134287 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.985s

Total number of created targets for pointer analysis: 277413
   Number of created targets for uf: *unsigned_short_int is 227
   Number of created targets for uf: *(void)* is 101
   Number of created targets for uf: *signed_int is 758
   Number of created targets for uf: *unsigned_char is 2257
   Number of created targets for uf: *(struct_list_head)* is 250
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *(struct_task_struct)* is 119
   Number of created targets for uf: *unsigned_int is 14751
   Number of created targets for uf: *(struct_socket)* is 83
   Number of created targets for uf: *unsigned_long_int is 221


Number of BDD nodes:                               288
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6394 (count: 60404, min: 0, max: 208, avg: 0.11)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.167s
  Time for transition matches:                         0.636s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1064674 (count: 1064674, min: 1, max: 1, avg: 1.00) [1 x 1064674]

CPA algorithm statistics
------------------------
Number of iterations:            713338
Max size of waitlist:            105
Average size of waitlist:        32
Number of computed successors:   826218
Max successors for one state:    2
Number of times merged:          79782
Number of times stopped:         105357
Number of times breaked:         149

Total time for CPA algorithm:       140.774s (Max:    20.197s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:    116.441s
  Time for transfer relation:        19.374s
  Time for merge operator:            1.744s
  Time for stop operator:             0.639s
  Time for adding to reached set:     0.829s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   149
Avg. length of target path (in blocks):                8797 (count: 149, min: 11, max: 104, avg: 59.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.499s
  Counterexample analysis:                            21.131s (Max:     0.496s, Calls: 149)
    Refinement sat check:                             19.002s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.103s
  ARG update:                                          1.053s

Length of refined path (in blocks):                    7745 (count: 149, min: 10, max: 81, avg: 51.98)
Number of affected states:                             7391 (count: 149, min: 8, max: 79, avg: 49.60)
Length (states) of path with itp 'true':                205 (count: 149, min: 0, max: 32, avg: 1.38)
Length (states) of path with itp non-trivial itp:      7391 (count: 149, min: 8, max: 79, avg: 49.60)
Length (states) of path with itp 'false':               149 (count: 149, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 149, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            7242 (count: 149, min: 7, max: 78, avg: 48.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                149
Number of successful refinements:     149
Number of failed refinements:         0
Max. size of reached set before ref.: 11103
Max. size of reached set after ref.:  4118
Avg. size of reached set before ref.: 4771.66
Avg. size of reached set after ref.:  65.26

Total time for CEGAR algorithm:     163.810s
Time for refinements:                23.013s
Average time for refinement:          0.154s
Max time for refinement:              0.523s

Code Coverage
-----------------------------
  Function coverage:      0.388
  Visited lines:          1673
  Total lines:            2451
  Line coverage:          0.683
  Visited conditions:     280
  Total conditions:       574
  Condition coverage:     0.488

CPAchecker general statistics
-----------------------------
Number of program locations:     3224
Number of CFA edges:             3556
Number of relevant variables:    379
Number of functions:             98
Number of loops:                 18
Size of reached set:             17504
  Number of reached locations:   758 (24%)
    Avg states per location:     23
    Max states per location:     189 (at node N100)
  Number of reached functions:   38 (39%)
  Number of partitions:          17477
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1816 (before line 7308), Function main called from node N1809, stack depth 1 [4c48fe92], stack [main]])
  Number of target states:       0

Time for analysis setup:          4.017s
  Time for loading CPAs:          0.766s
  Time for loading parser:        0.532s
  Time for CFA construction:      2.619s
    Time for parsing file(s):     0.702s
    Time for AST to CFA:          0.933s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.648s
      Time for var class.:        0.328s
Time for Analysis:              163.811s
CPU time for analysis:          163.770s
Time for analyzing result:        0.011s
Total time for CPAchecker:      167.830s
Total CPU time for CPAchecker:  167.780s
Time for statistics:              0.257s

Time for Garbage Collector:       5.282s (in 608 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                149MB (   142 MiB) max;     84MB (    80 MiB) avg;    154MB (   147 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           169MB (   161 MiB) max;    138MB (   131 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8090MB (  7715 MiB) max;   8057MB (  7684 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
