scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--isdn--mISDN--l1oip.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qg1yadfp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5354: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5357: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5360: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7396: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6166-6167: Function pointer *(socket->ops->bind) with type int (*)(struct socket *, struct sockaddr *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freedchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freebchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function send_sig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_initdchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_initbchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kthread_create_on_node to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wake_up_process to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5623: Ignoring function call through function pointer *(ch->recv): tmp = (*(ch->recv))(ch->peer, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_ch_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr_inv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32940 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27097 (82%)
  Because of loop head:            5751 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         92 (0%)
  Times precision was empty:       1442 (4%)
  Times precision was {false}:     160 (0%)
  Times result was cached:         30434 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      904 (3%)
  Times result was 'false':        1025 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         42272
  BDD entailment checks:           7836
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          5
Number of abstraction locations:          93
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         98697
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 92.76
Number of irrelevant predicates:          6639 (7%)
Number of preds handled by boolean abs:   2057 (2%)
  Total number of models for allsat:      899
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                  2.703s
  Time for path formula creation:        2.600s
Time for strengthen operator:            0.198s
Time for prec operator:                 10.778s
  Time for abstraction:                 10.281s (Max:     0.372s, Count: 32940)
    Boolean abstraction:                 4.715s
    Solving time:                        4.625s (Max:     0.345s)
    Model enumeration time:              0.185s
    Time for BDD construction:           0.038s (Max:     0.002s)
Time for merge operator:                 0.146s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     4.810s

Number of path formula cache hits:   263466 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.007s

Total number of created targets for pointer analysis: 5909
   Number of created targets for uf: *unsigned_short_int is 11
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *signed_int is 17
   Number of created targets for uf: *unsigned_char is 785
   Number of created targets for uf: *(struct_list_head)* is 18
   Number of created targets for uf: *(struct_task_struct)* is 5
   Number of created targets for uf: *unsigned_int is 133
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               230
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1842 (count: 15666, min: 0, max: 194, avg: 0.12)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.359s
Automaton transfers with branching:                0
Automaton transfer successors:                       229774 (count: 229774, min: 1, max: 1, avg: 1.00) [1 x 229774]

CPA algorithm statistics
------------------------
Number of iterations:            156780
Max size of waitlist:            33
Average size of waitlist:        16
Number of computed successors:   182120
Max successors for one state:    2
Number of times merged:          17218
Number of times stopped:         22456
Number of times breaked:         92

Total time for CPA algorithm:        18.115s (Max:     0.814s)
  Time for choose from waitlist:      0.131s
  Time for precision adjustment:     11.769s
  Time for transfer relation:         4.827s
  Time for merge operator:            0.370s
  Time for stop operator:             0.258s
  Time for adding to reached set:     0.210s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   92
Avg. length of target path (in blocks):                3971 (count: 92, min: 14, max: 93, avg: 43.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.253s
  Counterexample analysis:                             7.797s (Max:     0.171s, Calls: 92)
    Refinement sat check:                              7.002s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.048s
  ARG update:                                          0.298s

Length of refined path (in blocks):                    3579 (count: 91, min: 10, max: 92, avg: 39.33)
Number of affected states:                             3126 (count: 91, min: 9, max: 90, avg: 34.35)
Length (states) of path with itp 'true':                362 (count: 91, min: 0, max: 25, avg: 3.98)
Length (states) of path with itp non-trivial itp:      3126 (count: 91, min: 9, max: 90, avg: 34.35)
Length (states) of path with itp 'false':                91 (count: 91, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 91, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3035 (count: 91, min: 8, max: 89, avg: 33.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                92
Number of successful refinements:     91
Number of failed refinements:         0
Max. size of reached set before ref.: 3715
Max. size of reached set after ref.:  1806
Avg. size of reached set before ref.: 1801.62
Avg. size of reached set after ref.:  78.12

Total time for CEGAR algorithm:      26.577s
Time for refinements:                 8.448s
Average time for refinement:          0.091s
Max time for refinement:              0.174s

Code Coverage
-----------------------------
  Function coverage:      0.408
  Visited lines:          1593
  Total lines:            2451
  Line coverage:          0.650
  Visited conditions:     262
  Total conditions:       574
  Condition coverage:     0.456

CPAchecker general statistics
-----------------------------
Number of program locations:     3224
Number of CFA edges:             3556
Number of relevant variables:    379
Number of functions:             98
Number of loops:                 18
Size of reached set:             3704
  Number of reached locations:   699 (22%)
    Avg states per location:     5
    Max states per location:     37 (at node N788)
  Number of reached functions:   40 (41%)
  Number of partitions:          3685
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1816 (before line 7308), Function main called from node N1809, stack depth 1 [55e3d6c3], stack [main]])
  Number of target states:       1
  Size of final wait list        29

Time for analysis setup:          3.791s
  Time for loading CPAs:          0.666s
  Time for loading parser:        0.528s
  Time for CFA construction:      2.514s
    Time for parsing file(s):     0.693s
    Time for AST to CFA:          0.880s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.594s
      Time for var class.:        0.274s
Time for Analysis:               26.577s
CPU time for analysis:           26.570s
Total time for CPAchecker:       30.371s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.120s

Time for Garbage Collector:       0.663s (in 100 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     48MB (    45 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
