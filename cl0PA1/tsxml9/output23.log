scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--isdn--mISDN--l1oip.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kls12n89/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5354: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5357: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5360: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7396: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7980: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6166-6167: Function pointer *(socket->ops->bind) with type int (*)(struct socket *, struct sockaddr *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function send_sig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freedchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mISDN_freebchannel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5623: Ignoring function call through function pointer *(ch->recv): tmp = (*(ch->recv))(ch->peer, skb); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memchr_inv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_trim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_ch_frame to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_alloca to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_alloca, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kernel_sendmsg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10342 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8077 (78%)
  Because of loop head:            2217 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       2757 (27%)
  Times precision was {false}:     199 (2%)
  Times result was cached:         6836 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      550 (5%)
  Times result was 'false':        490 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         14379
  BDD entailment checks:           3819
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       66
Number of predicates discovered:          6
Number of abstraction locations:          69
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         22432
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 29.95
Number of irrelevant predicates:          8097 (36%)
Number of preds handled by boolean abs:   1271 (6%)
  Total number of models for allsat:      557
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.245s
  Time for path formula creation:        3.181s
Time for strengthen operator:            0.074s
Time for prec operator:                 13.902s
  Time for abstraction:                 13.627s (Max:     0.386s, Count: 10342)
    Boolean abstraction:                 6.475s
    Solving time:                        9.704s (Max:     0.357s)
    Model enumeration time:              0.708s
    Time for BDD construction:           0.046s (Max:     0.008s)
Time for merge operator:                 0.199s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):    10.413s

Number of path formula cache hits:   75695 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.892s

Total number of created targets for pointer analysis: 48649
   Number of created targets for uf: *unsigned_char is 449
   Number of created targets for uf: *(struct_list_head)* is 6
   Number of created targets for uf: *unsigned_int is 661


Number of BDD nodes:                               268
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1213 (count: 10946, min: 0, max: 139, avg: 0.11)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.313s
Automaton transfers with branching:                0
Automaton transfer successors:                        82648 (count: 82648, min: 1, max: 1, avg: 1.00) [1 x 82648]

CPA algorithm statistics
------------------------
Number of iterations:            51970
Max size of waitlist:            38
Average size of waitlist:        16
Number of computed successors:   60799
Max successors for one state:    2
Number of times merged:          5280
Number of times stopped:         7429
Number of times breaked:         48

Total time for CPA algorithm:        20.139s (Max:     1.765s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:     14.376s
  Time for transfer relation:         4.687s
  Time for merge operator:            0.363s
  Time for stop operator:             0.194s
  Time for adding to reached set:     0.121s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                2329 (count: 48, min: 11, max: 94, avg: 48.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.176s
  Counterexample analysis:                             5.891s (Max:     0.307s, Calls: 48)
    Refinement sat check:                              5.329s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.023s
  ARG update:                                          0.155s

Length of refined path (in blocks):                    1999 (count: 48, min: 10, max: 77, avg: 41.65)
Number of affected states:                             1888 (count: 48, min: 8, max: 75, avg: 39.33)
Length (states) of path with itp 'true':                 63 (count: 48, min: 0, max: 9, avg: 1.31)
Length (states) of path with itp non-trivial itp:      1888 (count: 48, min: 8, max: 75, avg: 39.33)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 48, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1840 (count: 48, min: 7, max: 74, avg: 38.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 2166
Max. size of reached set after ref.:  110
Avg. size of reached set before ref.: 1092.90
Avg. size of reached set after ref.:  11.94

Total time for CEGAR algorithm:      26.435s
Time for refinements:                 6.294s
Average time for refinement:          0.131s
Max time for refinement:              0.321s

Code Coverage
-----------------------------
  Function coverage:      0.316
  Visited lines:          1400
  Total lines:            2451
  Line coverage:          0.571
  Visited conditions:     192
  Total conditions:       574
  Condition coverage:     0.334

CPAchecker general statistics
-----------------------------
Number of program locations:     3224
Number of CFA edges:             3556
Number of relevant variables:    379
Number of functions:             98
Number of loops:                 18
Size of reached set:             994
  Number of reached locations:   500 (16%)
    Avg states per location:     1
    Max states per location:     8 (at node N1703)
  Number of reached functions:   31 (32%)
  Number of partitions:          985
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1816 (before line 7308), Function main called from node N1809, stack depth 1 [55e3d6c3], stack [main]])
  Number of target states:       0
  Size of final wait list        29

Time for analysis setup:          3.890s
  Time for loading CPAs:          0.698s
  Time for loading parser:        0.489s
  Time for CFA construction:      2.602s
    Time for parsing file(s):     0.648s
    Time for AST to CFA:          0.988s
    Time for CFA sanity check:    0.167s
    Time for post-processing:     0.655s
      Time for var class.:        0.293s
Time for Analysis:               26.435s
CPU time for analysis:           26.430s
Total time for CPAchecker:       30.328s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.055s

Time for Garbage Collector:       0.427s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     50MB (    47 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
