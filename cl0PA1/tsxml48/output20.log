scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o_taev9z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            58020 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  47549 (82%)
  Because of loop head:            10407 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         64 (0%)
  Times precision was empty:       29998 (52%)
  Times precision was {false}:     548 (1%)
  Times result was cached:         26244 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1230 (2%)
  Times result was 'false':        666 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         56677
  BDD entailment checks:           12175
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          8
Number of abstraction locations:          107
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         62320
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 35.05
Number of irrelevant predicates:          24336 (39%)
Number of preds handled by boolean abs:   2463 (4%)
  Total number of models for allsat:      1224
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.767s
  Time for path formula creation:        5.556s
Time for strengthen operator:            0.392s
Time for prec operator:                  8.421s
  Time for abstraction:                  7.578s (Max:     0.046s, Count: 58020)
    Boolean abstraction:                 2.024s
    Solving time:                        2.365s (Max:     0.032s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.048s (Max:     0.012s)
Time for merge operator:                 0.842s
Time for coverage check:                 0.059s
  Time for BDD entailment checks:        0.056s
Total time for SMT solver (w/o itp):     2.477s

Number of path formula cache hits:   392717 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.269s

Total number of created targets for pointer analysis: 12840
   Number of created targets for uf: *signed_int is 43
   Number of created targets for uf: *unsigned_char is 37
   Number of created targets for uf: *unsigned_int is 990
   Number of created targets for uf: *enum_controller is 253
   Number of created targets for uf: *unsigned_long_int is 286


Number of BDD nodes:                               280
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2642 (count: 52423, min: 0, max: 138, avg: 0.05)
Time for BDD node cleanup:                             0.026s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.679s
  Time for transition matches:                         0.410s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       371758 (count: 371758, min: 1, max: 1, avg: 1.00) [1 x 371758]

CPA algorithm statistics
------------------------
Number of iterations:            226897
Max size of waitlist:            39
Average size of waitlist:        20
Number of computed successors:   261340
Max successors for one state:    2
Number of times merged:          22251
Number of times stopped:         32589
Number of times breaked:         64

Total time for CPA algorithm:        23.301s (Max:     3.221s)
  Time for choose from waitlist:      0.191s
  Time for precision adjustment:     10.131s
  Time for transfer relation:        10.109s
  Time for merge operator:            1.158s
  Time for stop operator:             0.389s
  Time for adding to reached set:     0.396s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   64
Avg. length of target path (in blocks):                2563 (count: 64, min: 9, max: 100, avg: 40.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.312s
  Counterexample analysis:                             1.610s (Max:     0.072s, Calls: 64)
    Refinement sat check:                              1.209s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.029s
  ARG update:                                          0.576s

Length of refined path (in blocks):                    2164 (count: 64, min: 4, max: 96, avg: 33.81)
Number of affected states:                             2040 (count: 64, min: 1, max: 94, avg: 31.88)
Length (states) of path with itp 'true':                 60 (count: 64, min: 0, max: 4, avg: 0.94)
Length (states) of path with itp non-trivial itp:      2040 (count: 64, min: 1, max: 94, avg: 31.88)
Length (states) of path with itp 'false':                64 (count: 64, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 64, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1976 (count: 64, min: 0, max: 93, avg: 30.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                64
Number of successful refinements:     64
Number of failed refinements:         0
Max. size of reached set before ref.: 8872
Max. size of reached set after ref.:  1701
Avg. size of reached set before ref.: 3557.23
Avg. size of reached set after ref.:  32.14

Total time for CEGAR algorithm:      25.877s
Time for refinements:                 2.574s
Average time for refinement:          0.040s
Max time for refinement:              0.147s

Code Coverage
-----------------------------
  Function coverage:      0.563
  Visited lines:          1846
  Total lines:            2343
  Line coverage:          0.788
  Visited conditions:     396
  Total conditions:       540
  Condition coverage:     0.733

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             2479
  Number of reached locations:   1015 (33%)
    Avg states per location:     2
    Max states per location:     39 (at node N106)
  Number of reached functions:   45 (56%)
  Number of partitions:          2477
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [42f9c19a], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          3.965s
  Time for loading CPAs:          0.735s
  Time for loading parser:        0.525s
  Time for CFA construction:      2.625s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          0.905s
    Time for CFA sanity check:    0.176s
    Time for post-processing:     0.689s
      Time for var class.:        0.313s
Time for Analysis:               25.877s
CPU time for analysis:           25.880s
Total time for CPAchecker:       29.845s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.064s

Time for Garbage Collector:       0.929s (in 112 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     55MB (    53 MiB) avg;     89MB (    85 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8017MB (  7646 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
