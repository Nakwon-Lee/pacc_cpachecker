scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m2zhyilv/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29175 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24510 (84%)
  Because of loop head:            4639 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       20324 (70%)
  Times precision was {false}:     754 (3%)
  Times result was cached:         7915 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      182 (1%)
  Times result was 'false':        320 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         37122
  BDD entailment checks:           7232
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          13
Number of abstraction locations:          98
Max number of predicates per location:    11
Avg number of predicates per location:    1
Total predicates per abstraction:         14181
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 15.15
Number of irrelevant predicates:          11726 (83%)
Number of preds handled by boolean abs:   435 (3%)
  Total number of models for allsat:      1567
  Max number of models for allsat:        128
  Avg number of models for allsat:        8.61

Time for post operator:                 11.103s
  Time for path formula creation:       10.931s
Time for strengthen operator:            0.340s
Time for prec operator:                  4.985s
  Time for abstraction:                  4.198s (Max:     0.065s, Count: 29175)
    Boolean abstraction:                 1.059s
    Solving time:                        0.940s (Max:     0.019s)
    Model enumeration time:              0.523s
    Time for BDD construction:           0.103s (Max:     0.017s)
Time for merge operator:                 1.022s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.038s
Total time for SMT solver (w/o itp):     1.463s

Number of path formula cache hits:   42783 (18%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.944s

Total number of created targets for pointer analysis: 9469
   Number of created targets for uf: *unsigned_short_int is 23
   Number of created targets for uf: *signed_int is 15
   Number of created targets for uf: *unsigned_char is 2737
   Number of created targets for uf: *unsigned_int is 1335
   Number of created targets for uf: *enum_controller is 121


Number of BDD nodes:                               1735
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         748 (count: 32771, min: 0, max: 203, avg: 0.02)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.655s
  Time for transition matches:                         0.318s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       226189 (count: 226189, min: 1, max: 1, avg: 1.00) [1 x 226189]

CPA algorithm statistics
------------------------
Number of iterations:            134645
Max size of waitlist:            151
Average size of waitlist:        86
Number of computed successors:   157195
Max successors for one state:    2
Number of times merged:          14945
Number of times stopped:         20245
Number of times breaked:         26

Total time for CPA algorithm:        24.416s (Max:     2.532s)
  Time for choose from waitlist:      0.167s
  Time for precision adjustment:      6.570s
  Time for transfer relation:        14.576s
  Time for merge operator:            1.552s
  Time for stop operator:             0.282s
  Time for adding to reached set:     0.363s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                1346 (count: 26, min: 9, max: 124, avg: 51.77)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.391s
  Counterexample analysis:                             0.854s (Max:     0.069s, Calls: 26)
    Refinement sat check:                              0.577s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.029s
  ARG update:                                          0.437s

Length of refined path (in blocks):                     980 (count: 26, min: 4, max: 123, avg: 37.69)
Number of affected states:                              913 (count: 26, min: 1, max: 121, avg: 35.12)
Length (states) of path with itp 'true':                 41 (count: 26, min: 1, max: 4, avg: 1.58)
Length (states) of path with itp non-trivial itp:       913 (count: 26, min: 1, max: 121, avg: 35.12)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 26, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             887 (count: 26, min: 0, max: 120, avg: 34.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 9599
Max. size of reached set after ref.:  246
Avg. size of reached set before ref.: 5095.69
Avg. size of reached set after ref.:  16.15

Total time for CEGAR algorithm:      26.006s
Time for refinements:                 1.589s
Average time for refinement:          0.061s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.613
  Visited lines:          1737
  Total lines:            2343
  Line coverage:          0.741
  Visited conditions:     358
  Total conditions:       540
  Condition coverage:     0.663

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             4562
  Number of reached locations:   881 (29%)
    Avg states per location:     5
    Max states per location:     53 (at node N2088)
  Number of reached functions:   49 (61%)
  Number of partitions:          4551
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [2bc9a775], stack [main]])
  Number of target states:       0
  Size of final wait list        118

Time for analysis setup:          3.805s
  Time for loading CPAs:          0.708s
  Time for loading parser:        0.505s
  Time for CFA construction:      2.473s
    Time for parsing file(s):     0.784s
    Time for AST to CFA:          0.821s
    Time for CFA sanity check:    0.142s
    Time for post-processing:     0.554s
      Time for var class.:        0.279s
Time for Analysis:               26.006s
CPU time for analysis:           26.010s
Total time for CPAchecker:       29.817s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              0.115s

Time for Garbage Collector:       1.486s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                141MB (   135 MiB) max;     70MB (    66 MiB) avg;    147MB (   140 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           156MB (   149 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
