scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0krg44_3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            75189 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  58961 (78%)
  Because of loop head:            16180 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       62949 (84%)
  Times precision was {false}:     452 (1%)
  Times result was cached:         11010 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      778 (1%)
  Times result was 'false':        1005 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         66885
  BDD entailment checks:           16575
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         55024
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 44.73
Number of irrelevant predicates:          36938 (67%)
Number of preds handled by boolean abs:   2046 (4%)
  Total number of models for allsat:      751
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                  5.863s
  Time for path formula creation:        5.609s
Time for strengthen operator:            0.529s
Time for prec operator:                  7.233s
  Time for abstraction:                  6.328s (Max:     0.037s, Count: 75189)
    Boolean abstraction:                 1.932s
    Solving time:                        2.209s (Max:     0.025s)
    Model enumeration time:              0.099s
    Time for BDD construction:           0.082s (Max:     0.011s)
Time for merge operator:                 0.778s
Time for coverage check:                 0.079s
  Time for BDD entailment checks:        0.060s
Total time for SMT solver (w/o itp):     2.309s

Number of path formula cache hits:   513289 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.976s

Total number of created targets for pointer analysis: 10750
   Number of created targets for uf: *signed_int is 29
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *enum_controller is 97
   Number of created targets for uf: *unsigned_int is 737
   Number of created targets for uf: *unsigned_long_int is 267


Number of BDD nodes:                               345
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1887 (count: 86745, min: 0, max: 101, avg: 0.02)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.815s
  Time for transition matches:                         0.387s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       465818 (count: 465818, min: 1, max: 1, avg: 1.00) [1 x 465818]

CPA algorithm statistics
------------------------
Number of iterations:            278325
Max size of waitlist:            32
Average size of waitlist:        18
Number of computed successors:   319016
Max successors for one state:    2
Number of times merged:          25155
Number of times stopped:         39407
Number of times breaked:         48

Total time for CPA algorithm:        23.415s (Max:     3.435s)
  Time for choose from waitlist:      0.183s
  Time for precision adjustment:      9.113s
  Time for transfer relation:        10.916s
  Time for merge operator:            1.227s
  Time for stop operator:             0.513s
  Time for adding to reached set:     0.489s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                1589 (count: 48, min: 9, max: 77, avg: 33.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.503s
  Counterexample analysis:                             1.532s (Max:     0.066s, Calls: 48)
    Refinement sat check:                              1.165s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.029s
  ARG update:                                          0.872s

Length of refined path (in blocks):                    1279 (count: 48, min: 6, max: 47, avg: 26.65)
Number of affected states:                             1180 (count: 48, min: 1, max: 45, avg: 24.58)
Length (states) of path with itp 'true':                 51 (count: 48, min: 0, max: 4, avg: 1.06)
Length (states) of path with itp non-trivial itp:      1180 (count: 48, min: 1, max: 45, avg: 24.58)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 48, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:            1131 (count: 48, min: 0, max: 44, avg: 23.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 11285
Max. size of reached set after ref.:  1701
Avg. size of reached set before ref.: 5890.56
Avg. size of reached set after ref.:  146.69

Total time for CEGAR algorithm:      26.279s
Time for refinements:                 2.854s
Average time for refinement:          0.059s
Max time for refinement:              0.181s

Code Coverage
-----------------------------
  Function coverage:      0.575
  Visited lines:          2041
  Total lines:            2343
  Line coverage:          0.871
  Visited conditions:     426
  Total conditions:       540
  Condition coverage:     0.789

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             2898
  Number of reached locations:   1117 (37%)
    Avg states per location:     2
    Max states per location:     41 (at node N106)
  Number of reached functions:   46 (57%)
  Number of partitions:          2890
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [5a67e962], stack [main]])
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:          4.025s
  Time for loading CPAs:          0.826s
  Time for loading parser:        0.545s
  Time for CFA construction:      2.526s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.720s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.702s
      Time for var class.:        0.313s
Time for Analysis:               26.279s
CPU time for analysis:           26.270s
Total time for CPAchecker:       30.312s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.115s

Time for Garbage Collector:       1.329s (in 118 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                111MB (   105 MiB) max;     64MB (    61 MiB) avg;    113MB (   108 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
