scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--ata--pata_legacy.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5_uewub0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5599: Dead code detected: tmp___5 = arch_irqs_disabled_flags(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5600: Dead code detected: [!(tmp___5 != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 5601: Dead code detected: arch_local_irq_restore(flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5604: Dead code detected: trace_hardirqs_on(); (CFACreationUtils.addEdgeToCFA, INFO)

line 6548: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ata_dev_pair to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_compute to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_timing_merge to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register_full to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __devm_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5710: Ignoring function call through function pointer *(controller->setup): tmp___4 = (*(controller->setup))(pdev, probe, ld); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ata_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_std_ports to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_port_desc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_host_activate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function async_synchronize_full to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_sff_data_xfer_noirq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ata_pio_need_iordy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            653249 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  541191 (83%)
  Because of loop head:            111810 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         248 (0%)
  Times precision was empty:       99118 (15%)
  Times precision was {false}:     1457 (0%)
  Times result was cached:         546488 (84%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6186 (1%)
  Times result was 'false':        14923 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         835419
  BDD entailment checks:           153793
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       89
Number of predicates discovered:          11
Number of abstraction locations:          195
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         2629707
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 344.07
Number of irrelevant predicates:          514111 (20%)
Number of preds handled by boolean abs:   17647 (1%)
  Total number of models for allsat:      6855
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.11

Time for post operator:                 30.835s
  Time for path formula creation:       29.167s
Time for strengthen operator:            3.210s
Time for prec operator:                109.119s
  Time for abstraction:                102.524s (Max:     0.501s, Count: 653249)
    Boolean abstraction:                 8.276s
    Solving time:                        8.968s (Max:     0.030s)
    Model enumeration time:              0.747s
    Time for BDD construction:           0.113s (Max:     0.008s)
Time for merge operator:                 4.730s
Time for coverage check:                 0.212s
  Time for BDD entailment checks:        0.135s
Total time for SMT solver (w/o itp):     9.715s

Number of path formula cache hits:   5517277 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.459s

Total number of created targets for pointer analysis: 107255
   Number of created targets for uf: *unsigned_short_int is 7
   Number of created targets for uf: *signed_int is 785
   Number of created targets for uf: *unsigned_char is 1549
   Number of created targets for uf: *unsigned_int is 8281
   Number of created targets for uf: *enum_controller is 4273
   Number of created targets for uf: *unsigned_long_int is 1666


Number of BDD nodes:                               1697
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       13005 (count: 298920, min: 0, max: 291, avg: 0.04)
Time for BDD node cleanup:                             0.055s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.380s
  Time for transition matches:                         2.517s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      4992999 (count: 4992999, min: 1, max: 1, avg: 1.00) [1 x 4992999]

CPA algorithm statistics
------------------------
Number of iterations:            2886797
Max size of waitlist:            263
Average size of waitlist:        105
Number of computed successors:   3388751
Max successors for one state:    2
Number of times merged:          340813
Number of times stopped:         461635
Number of times breaked:         248

Total time for CPA algorithm:       202.403s (Max:     2.745s)
  Time for choose from waitlist:      0.864s
  Time for precision adjustment:    122.247s
  Time for transfer relation:        60.904s
  Time for merge operator:            7.291s
  Time for stop operator:             2.569s
  Time for adding to reached set:     3.464s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   248
Avg. length of target path (in blocks):               13240 (count: 248, min: 9, max: 173, avg: 53.39)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.725s
  Counterexample analysis:                             8.318s (Max:     0.129s, Calls: 248)
    Refinement sat check:                              6.313s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.146s
  ARG update:                                          4.062s

Length of refined path (in blocks):                   10281 (count: 248, min: 4, max: 120, avg: 41.46)
Number of affected states:                             9858 (count: 248, min: 1, max: 119, avg: 39.75)
Length (states) of path with itp 'true':                175 (count: 248, min: 0, max: 4, avg: 0.71)
Length (states) of path with itp non-trivial itp:      9858 (count: 248, min: 1, max: 119, avg: 39.75)
Length (states) of path with itp 'false':               248 (count: 248, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 248, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            9610 (count: 248, min: 0, max: 118, avg: 38.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                248
Number of successful refinements:     248
Number of failed refinements:         0
Max. size of reached set before ref.: 22612
Max. size of reached set after ref.:  2564
Avg. size of reached set before ref.: 11707.53
Avg. size of reached set after ref.:  40.57

Total time for CEGAR algorithm:     216.596s
Time for refinements:                14.177s
Average time for refinement:          0.057s
Max time for refinement:              0.145s

Code Coverage
-----------------------------
  Function coverage:      0.588
  Visited lines:          2072
  Total lines:            2343
  Line coverage:          0.884
  Visited conditions:     436
  Total conditions:       540
  Condition coverage:     0.807

CPAchecker general statistics
-----------------------------
Number of program locations:     3054
Number of CFA edges:             3435
Number of relevant variables:    372
Number of functions:             80
Number of loops:                 14
Size of reached set:             18788
  Number of reached locations:   1149 (38%)
    Avg states per location:     16
    Max states per location:     285 (at node N106)
  Number of reached functions:   47 (59%)
  Number of partitions:          18775
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1687 (before line 6186), Function main called from node N1660, stack depth 1 [2ab2710], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.940s
  Time for loading CPAs:          0.724s
  Time for loading parser:        0.528s
  Time for CFA construction:      2.574s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          0.816s
    Time for CFA sanity check:    0.198s
    Time for post-processing:     0.720s
      Time for var class.:        0.305s
Time for Analysis:              216.596s
CPU time for analysis:          216.570s
Time for analyzing result:        0.015s
Total time for CPAchecker:      220.539s
Total CPU time for CPAchecker:  220.500s
Time for statistics:              0.264s

Time for Garbage Collector:      18.528s (in 950 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                364MB (   347 MiB) max;    179MB (   171 MiB) avg;    372MB (   354 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           374MB (   357 MiB) max;    263MB (   250 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8134MB (  7757 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
