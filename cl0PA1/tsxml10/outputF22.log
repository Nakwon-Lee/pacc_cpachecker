scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--max16065.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_88c9dbv2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5760: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2265: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2265: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27653 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26771 (97%)
  Because of loop head:            799 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (0%)
  Times precision was empty:       22093 (80%)
  Times precision was {false}:     4535 (16%)
  Times result was cached:         785 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      240 (1%)
  Times result was 'false':        3486 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         56289
  BDD entailment checks:           7979
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       450
Number of predicates discovered:          80
Number of abstraction locations:          12
Max number of predicates per location:    79
Avg number of predicates per location:    9
Total predicates per abstraction:         46360
Max number of predicates per abstraction: 79
Avg number of predicates per abstraction: 9.71
Number of irrelevant predicates:          38400 (83%)
Number of preds handled by boolean abs:   6898 (15%)
  Total number of models for allsat:      239
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 11.495s
  Time for path formula creation:       11.376s
Time for strengthen operator:            0.205s
Time for prec operator:                877.153s
  Time for abstraction:                875.658s (Max:   864.357s, Count: 27653)
    Boolean abstraction:               866.786s
    Solving time:                        4.053s (Max:     0.093s)
    Model enumeration time:            806.581s
    Time for BDD construction:          57.986s (Max:     0.055s)
Time for merge operator:                 0.362s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):   810.634s

Number of path formula cache hits:   321808 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.449s

Total number of created targets for pointer analysis: 102
   Number of created targets for uf: *signed_int is 27
   Number of created targets for uf: *_Bool is 13


Number of BDD nodes:                               133242
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       18086 (count: 64454, min: 0, max: 562, avg: 0.28)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.421s (in 196 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.491s
Automaton transfers with branching:                0
Automaton transfer successors:                       287660 (count: 287660, min: 1, max: 1, avg: 1.00) [1 x 287660]

CPA algorithm statistics
------------------------
Number of iterations:            160262
Max size of waitlist:            160
Average size of waitlist:        80
Number of computed successors:   195607
Max successors for one state:    2
Number of times merged:          24155
Number of times stopped:         24575
Number of times breaked:         83

Total time for CPA algorithm:       894.404s (Max:   865.047s)
  Time for choose from waitlist:      0.095s
  Time for precision adjustment:    878.230s
  Time for transfer relation:        14.285s
  Time for merge operator:            0.726s
  Time for stop operator:             0.267s
  Time for adding to reached set:     0.233s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   83
Avg. length of target path (in blocks):                1225 (count: 83, min: 8, max: 18, avg: 14.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.087s
  Counterexample analysis:                             2.625s (Max:     0.062s, Calls: 83)
    Refinement sat check:                              2.293s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.037s
  ARG update:                                          0.359s

Length of refined path (in blocks):                     356 (count: 83, min: 4, max: 7, avg: 4.29)
Number of affected states:                              115 (count: 83, min: 1, max: 5, avg: 1.39)
Length (states) of path with itp 'true':                158 (count: 83, min: 1, max: 2, avg: 1.90)
Length (states) of path with itp non-trivial itp:       115 (count: 83, min: 1, max: 5, avg: 1.39)
Length (states) of path with itp 'false':                83 (count: 83, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 83, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              32 (count: 83, min: 0, max: 4, avg: 0.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                83
Number of successful refinements:     83
Number of failed refinements:         0
Max. size of reached set before ref.: 2437
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 1978.81
Avg. size of reached set after ref.:  7.81

Total time for CEGAR algorithm:     897.686s
Time for refinements:                 3.280s
Average time for refinement:          0.039s
Max time for refinement:              0.121s

Code Coverage
-----------------------------
  Function coverage:      0.296
  Visited lines:          2468
  Total lines:            2931
  Line coverage:          0.842
  Visited conditions:     884
  Total conditions:       1010
  Condition coverage:     0.875

CPAchecker general statistics
-----------------------------
Number of program locations:     3776
Number of CFA edges:             4422
Number of relevant variables:    600
Number of functions:             71
Number of loops:                 8
Size of reached set:             3953
  Number of reached locations:   1665 (44%)
    Avg states per location:     2
    Max states per location:     96 (at node N277)
  Number of reached functions:   21 (30%)
  Number of partitions:          3923
    Avg size of partitions:      1
    Max size of partitions:      31 (with key [N710 (before line 3582), Function main called from node N551, stack depth 1 [75a118e6], stack [main]])
  Number of target states:       0
  Size of final wait list        157

Time for analysis setup:          3.891s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.519s
  Time for CFA construction:      2.495s
    Time for parsing file(s):     0.605s
    Time for AST to CFA:          0.752s
    Time for CFA sanity check:    0.194s
    Time for post-processing:     0.805s
      Time for var class.:        0.376s
Time for Analysis:              897.686s
CPU time for analysis:          897.590s
Total time for CPAchecker:      901.579s
Total CPU time for CPAchecker:  901.470s
Time for statistics:              0.100s

Time for Garbage Collector:       1.600s (in 686 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     57MB (    54 MiB) avg;     94MB (    89 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     39MB (    37 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8388MB (  8000 MiB) max;   8261MB (  7878 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
