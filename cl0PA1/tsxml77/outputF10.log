scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--net--dsa--mv88e6xxx_drv.ko-ldv_main2_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_frjo1io8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5584: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5648: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7216: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            319861 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  269671 (84%)
  Because of loop head:            49015 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1175 (0%)
  Times precision was empty:       7521 (2%)
  Times precision was {false}:     1105 (0%)
  Times result was cached:         301685 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9550 (3%)
  Times result was 'false':        27936 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         220080
  BDD entailment checks:           64324
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       27
Number of predicates discovered:          15
Number of abstraction locations:          176
Max number of predicates per location:    9
Avg number of predicates per location:    5
Total predicates per abstraction:         1830763
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 171.82
Number of irrelevant predicates:          262897 (14%)
Number of preds handled by boolean abs:   36562 (2%)
  Total number of models for allsat:      9412
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                  4.340s
  Time for path formula creation:        3.925s
Time for strengthen operator:            0.948s
Time for prec operator:                 58.343s
  Time for abstraction:                 56.349s (Max:     0.150s, Count: 319861)
    Boolean abstraction:                 4.793s
    Solving time:                        3.811s (Max:     0.038s)
    Model enumeration time:              0.316s
    Time for BDD construction:           0.252s (Max:     0.011s)
Time for merge operator:                 0.231s
Time for coverage check:                 0.096s
  Time for BDD entailment checks:        0.073s
Total time for SMT solver (w/o itp):     4.127s

Number of path formula cache hits:   1791404 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.389s

Total number of created targets for pointer analysis: 982
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *unsigned_int is 68


Number of BDD nodes:                               974
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20479 (count: 135986, min: 0, max: 322, avg: 0.15)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.796s
  Time for transition matches:                         0.872s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                      1480533 (count: 1480533, min: 1, max: 1, avg: 1.00) [1 x 1480533]

CPA algorithm statistics
------------------------
Number of iterations:            1090914
Max size of waitlist:            19
Average size of waitlist:        6
Number of computed successors:   1258287
Max successors for one state:    2
Number of times merged:          77878
Number of times stopped:         133885
Number of times breaked:         1175

Total time for CPA algorithm:        83.479s (Max:     0.659s)
  Time for choose from waitlist:      0.349s
  Time for precision adjustment:     63.224s
  Time for transfer relation:        14.860s
  Time for merge operator:            0.933s
  Time for stop operator:             1.076s
  Time for adding to reached set:     1.125s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1175
Avg. length of target path (in blocks):               76361 (count: 1175, min: 6, max: 209, avg: 64.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.440s
  Counterexample analysis:                            18.740s (Max:     0.113s, Calls: 1175)
    Refinement sat check:                             11.932s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.044s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.250s
  Precision update:                                    0.518s
  ARG update:                                          1.411s

Length of refined path (in blocks):                   74913 (count: 1175, min: 5, max: 208, avg: 63.76)
Number of affected states:                            34431 (count: 1175, min: 1, max: 202, avg: 29.30)
Length (states) of path with itp 'true':              39307 (count: 1175, min: 1, max: 188, avg: 33.45)
Length (states) of path with itp non-trivial itp:     34431 (count: 1175, min: 1, max: 202, avg: 29.30)
Length (states) of path with itp 'false':              1175 (count: 1175, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          15 (count: 1175, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:           33241 (count: 1175, min: 0, max: 201, avg: 28.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1175
Number of successful refinements:     1175
Number of failed refinements:         0
Max. size of reached set before ref.: 7210
Max. size of reached set after ref.:  6631
Avg. size of reached set before ref.: 2219.45
Avg. size of reached set after ref.:  1291.94

Total time for CEGAR algorithm:     108.019s
Time for refinements:                23.535s
Average time for refinement:          0.020s
Max time for refinement:              0.132s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1462
  Total lines:            2327
  Line coverage:          0.628
  Visited conditions:     264
  Total conditions:       600
  Condition coverage:     0.440

CPAchecker general statistics
-----------------------------
Number of program locations:     3078
Number of CFA edges:             3505
Number of relevant variables:    389
Number of functions:             125
Number of loops:                 25
Size of reached set:             6649
  Number of reached locations:   734 (24%)
    Avg states per location:     9
    Max states per location:     156 (at node N94)
  Number of reached functions:   50 (40%)
  Number of partitions:          6639
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N447 (before line 5198), Function mv88e6xxx_phy_read_ppu called from node N1908, stack depth 3 [41d2da5f], stack [main, mv88e6131_phy_read, mv88e6xxx_phy_read_ppu]])
  Number of target states:       0

Time for analysis setup:          4.145s
  Time for loading CPAs:          0.760s
  Time for loading parser:        0.543s
  Time for CFA construction:      2.750s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          1.000s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.687s
      Time for var class.:        0.324s
Time for Analysis:              108.019s
CPU time for analysis:          108.010s
Time for analyzing result:        0.005s
Total time for CPAchecker:      112.168s
Total CPU time for CPAchecker:  112.140s
Time for statistics:              0.154s

Time for Garbage Collector:       5.017s (in 845 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     63MB (    60 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8048MB (  7675 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
