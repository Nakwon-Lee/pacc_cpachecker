scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--net--dsa--mv88e6xxx_drv.ko-ldv_main2_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h511wqmn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5584: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5648: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7216: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23411 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  19619 (84%)
  Because of loop head:            3232 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         560 (2%)
  Times precision was empty:       3020 (13%)
  Times precision was {false}:     245 (1%)
  Times result was cached:         19161 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      985 (4%)
  Times result was 'false':        1333 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         15635
  BDD entailment checks:           4311
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       27
Number of predicates discovered:          9
Number of abstraction locations:          107
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         25131
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 20.43
Number of irrelevant predicates:          7022 (28%)
Number of preds handled by boolean abs:   1222 (5%)
  Total number of models for allsat:      987
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.959s
  Time for path formula creation:        1.902s
Time for strengthen operator:            0.132s
Time for prec operator:                  4.457s
  Time for abstraction:                  4.063s (Max:     0.025s, Count: 23411)
    Boolean abstraction:                 0.742s
    Solving time:                        0.581s (Max:     0.022s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.069s (Max:     0.012s)
Time for merge operator:                 0.153s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.643s

Number of path formula cache hits:   114686 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.713s

Total number of created targets for pointer analysis: 111
   Number of created targets for uf: *signed_int is 81
   Number of created targets for uf: *unsigned_int is 17


Number of BDD nodes:                               226
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2072 (count: 14546, min: 0, max: 372, avg: 0.14)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.405s
Automaton transfers with branching:                0
Automaton transfer successors:                       107195 (count: 107195, min: 1, max: 1, avg: 1.00) [1 x 107195]

CPA algorithm statistics
------------------------
Number of iterations:            78866
Max size of waitlist:            18
Average size of waitlist:        11
Number of computed successors:   90682
Max successors for one state:    2
Number of times merged:          5662
Number of times stopped:         9495
Number of times breaked:         560

Total time for CPA algorithm:        10.103s (Max:     0.525s)
  Time for choose from waitlist:      0.037s
  Time for precision adjustment:      5.123s
  Time for transfer relation:         3.772s
  Time for merge operator:            0.302s
  Time for stop operator:             0.229s
  Time for adding to reached set:     0.230s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   560
Avg. length of target path (in blocks):               51535 (count: 560, min: 6, max: 204, avg: 92.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.617s
  Counterexample analysis:                            13.662s (Max:     0.126s, Calls: 560)
    Refinement sat check:                              8.248s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.050s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.103s
  Precision update:                                    0.216s
  ARG update:                                          0.225s

Length of refined path (in blocks):                   50784 (count: 559, min: 5, max: 203, avg: 90.85)
Number of affected states:                             4777 (count: 559, min: 3, max: 68, avg: 8.55)
Length (states) of path with itp 'true':              45448 (count: 559, min: 1, max: 191, avg: 81.30)
Length (states) of path with itp non-trivial itp:      4777 (count: 559, min: 3, max: 68, avg: 8.55)
Length (states) of path with itp 'false':               559 (count: 559, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 559, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4218 (count: 559, min: 2, max: 67, avg: 7.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                560
Number of successful refinements:     559
Number of failed refinements:         0
Max. size of reached set before ref.: 5985
Max. size of reached set after ref.:  5874
Avg. size of reached set before ref.: 2067.51
Avg. size of reached set after ref.:  1928.35

Total time for CEGAR algorithm:      26.958s
Time for refinements:                15.963s
Average time for refinement:          0.028s
Max time for refinement:              0.140s

Code Coverage
-----------------------------
  Function coverage:      0.240
  Visited lines:          1242
  Total lines:            2327
  Line coverage:          0.534
  Visited conditions:     196
  Total conditions:       600
  Condition coverage:     0.327

CPAchecker general statistics
-----------------------------
Number of program locations:     3078
Number of CFA edges:             3505
Number of relevant variables:    389
Number of functions:             125
Number of loops:                 25
Size of reached set:             3882
  Number of reached locations:   487 (16%)
    Avg states per location:     7
    Max states per location:     111 (at node N94)
  Number of reached functions:   30 (24%)
  Number of partitions:          3880
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1871 (before line 6947), Function mv88e6131_setup called from node N1982, stack depth 2 [3e0a03f9], stack [main, mv88e6131_setup]])
  Number of target states:       1
  Size of final wait list        12

Time for analysis setup:          3.370s
  Time for loading CPAs:          0.649s
  Time for loading parser:        0.428s
  Time for CFA construction:      2.201s
    Time for parsing file(s):     0.610s
    Time for AST to CFA:          0.749s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.550s
      Time for var class.:        0.271s
Time for Analysis:               26.958s
CPU time for analysis:           26.960s
Total time for CPAchecker:       30.330s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.090s

Time for Garbage Collector:       0.426s (in 54 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     50MB (    48 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
