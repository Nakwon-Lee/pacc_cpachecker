scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--net--dsa--mv88e6xxx_drv.ko-ldv_main2_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_39s0zy_o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5584: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5648: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6498: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7216: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mdiobus_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            495132 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  420053 (85%)
  Because of loop head:            72346 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2733 (1%)
  Times precision was empty:       9211 (2%)
  Times precision was {false}:     953 (0%)
  Times result was cached:         479561 (97%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5407 (1%)
  Times result was 'false':        36360 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         347766
  BDD entailment checks:           96858
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       27
Number of predicates discovered:          14
Number of abstraction locations:          176
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         2528638
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 397.58
Number of irrelevant predicates:          188187 (7%)
Number of preds handled by boolean abs:   23170 (1%)
  Total number of models for allsat:      5461
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  5.773s
  Time for path formula creation:        5.108s
Time for strengthen operator:            1.444s
Time for prec operator:                 70.485s
  Time for abstraction:                 67.385s (Max:     0.147s, Count: 495132)
    Boolean abstraction:                 3.101s
    Solving time:                        2.602s (Max:     0.038s)
    Model enumeration time:              0.206s
    Time for BDD construction:           0.184s (Max:     0.012s)
Time for merge operator:                 0.417s
Time for coverage check:                 0.137s
  Time for BDD entailment checks:        0.107s
Total time for SMT solver (w/o itp):     2.808s

Number of path formula cache hits:   2883893 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.479s

Total number of created targets for pointer analysis: 830
   Number of created targets for uf: *signed_int is 721
   Number of created targets for uf: *unsigned_int is 2


Number of BDD nodes:                               966
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12255 (count: 144129, min: 0, max: 398, avg: 0.09)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.595s
  Time for transition matches:                         1.349s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                      2346595 (count: 2346595, min: 1, max: 1, avg: 1.00) [1 x 2346595]

CPA algorithm statistics
------------------------
Number of iterations:            1701070
Max size of waitlist:            72
Average size of waitlist:        19
Number of computed successors:   1968383
Max successors for one state:    2
Number of times merged:          125454
Number of times stopped:         210085
Number of times breaked:         2733

Total time for CPA algorithm:       108.478s (Max:     0.713s)
  Time for choose from waitlist:      0.460s
  Time for precision adjustment:     78.566s
  Time for transfer relation:        21.918s
  Time for merge operator:            1.476s
  Time for stop operator:             1.680s
  Time for adding to reached set:     1.516s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2733
Avg. length of target path (in blocks):              162608 (count: 2733, min: 6, max: 197, avg: 59.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.440s
  Counterexample analysis:                            35.711s (Max:     0.069s, Calls: 2733)
    Refinement sat check:                             22.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.087s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.315s
  Precision update:                                    1.366s
  ARG update:                                          2.282s

Length of refined path (in blocks):                  159423 (count: 2733, min: 5, max: 196, avg: 58.33)
Number of affected states:                            49457 (count: 2733, min: 1, max: 194, avg: 18.10)
Length (states) of path with itp 'true':             107233 (count: 2733, min: 1, max: 188, avg: 39.24)
Length (states) of path with itp non-trivial itp:     49457 (count: 2733, min: 1, max: 194, avg: 18.10)
Length (states) of path with itp 'false':              2733 (count: 2733, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          28 (count: 2733, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:           46696 (count: 2733, min: 0, max: 193, avg: 17.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2733
Number of successful refinements:     2733
Number of failed refinements:         0
Max. size of reached set before ref.: 6152
Max. size of reached set after ref.:  5860
Avg. size of reached set before ref.: 3527.55
Avg. size of reached set after ref.:  2899.72

Total time for CEGAR algorithm:     158.963s
Time for refinements:                46.393s
Average time for refinement:          0.016s
Max time for refinement:              0.083s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          1462
  Total lines:            2327
  Line coverage:          0.628
  Visited conditions:     264
  Total conditions:       600
  Condition coverage:     0.440

CPAchecker general statistics
-----------------------------
Number of program locations:     3078
Number of CFA edges:             3505
Number of relevant variables:    389
Number of functions:             125
Number of loops:                 25
Size of reached set:             6080
  Number of reached locations:   734 (24%)
    Avg states per location:     8
    Max states per location:     138 (at node N94)
  Number of reached functions:   50 (40%)
  Number of partitions:          6078
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N458 (before line 5213), Function mv88e6xxx_phy_write_ppu called from node N1918, stack depth 3 [15c9cf95], stack [main, mv88e6131_phy_write, mv88e6xxx_phy_write_ppu]])
  Number of target states:       0

Time for analysis setup:          4.184s
  Time for loading CPAs:          0.779s
  Time for loading parser:        0.511s
  Time for CFA construction:      2.821s
    Time for parsing file(s):     0.795s
    Time for AST to CFA:          0.958s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.716s
      Time for var class.:        0.358s
Time for Analysis:              158.963s
CPU time for analysis:          158.910s
Time for analyzing result:        0.006s
Total time for CPAchecker:      163.150s
Total CPU time for CPAchecker:  163.090s
Time for statistics:              0.186s

Time for Garbage Collector:       7.529s (in 1283 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     72MB (    68 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8153MB (  7776 MiB) max;   8101MB (  7725 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
