scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--panel--panel.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bgm6q2oy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2812: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3515: Dead code detected: d_bit = 1 << (pin + -2); (CFACreationUtils.addEdgeToCFA, INFO)

line 4231: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4234: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4237: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
    case 1:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 2:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 4:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 8:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 4767: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4770: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4773: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 2:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 4:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 8:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3787: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3823: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3649: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3687: Function pointer *(pprt->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3668: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3698: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4879: Function pointer *(pprt->port->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4881: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4882: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4884: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4885: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4911: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4898: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4899: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3449: Function pointer *(pprt->port->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3464: Function pointer *(pprt->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3424: Function pointer *(pprt->port->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3439: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_close_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_open_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function no_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3844: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3844: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4278: Ignoring call via function pointer lcd_clear_fast for which no suitable target was found in line: (*lcd_clear_fast)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4278: Ignoring function call through function pointer *lcd_clear_fast: (*lcd_clear_fast)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4266: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4266: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4274: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4274: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4275: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4275: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4313: Ignoring call via function pointer lcd_clear_fast for which no suitable target was found in line: (*lcd_clear_fast)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4313: Ignoring function call through function pointer *lcd_clear_fast: (*lcd_clear_fast)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4022: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(28); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4022: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(28); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4017: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(24); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4017: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(24); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4005: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(20); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4005: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(20); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3992: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3992: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4180: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(tmp___7 | tmp___8); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4180: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(tmp___7 | tmp___8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4167: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((tmp___5 | tmp___6) | ((lcd_flags & 4UL) != 0UL)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4167: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((tmp___5 | tmp___6) | ((lcd_flags & 4UL) != 0UL)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4097: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((((int)cgaddr) * 8) | 64); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4097: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((((int)cgaddr) * 8) | 64); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4101: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)((int)(cgbytes[addr])); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4101: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)((int)(cgbytes[addr])); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4029: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4029: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4283: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4283: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3719: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((int)(tmp | tmp___0)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3719: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((int)(tmp | tmp___0)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3733: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)((int)c); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3733: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)((int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3864: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(48); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3864: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(48); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3866: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(48); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3866: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(48); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3868: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(48); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3868: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(48); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3880: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(tmp | tmp___0); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3880: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(tmp | tmp___0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3882: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(8); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3882: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(8); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3894: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((tmp___1 | tmp___2) | ((lcd_flags & 4UL) != 0UL)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3894: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((tmp___1 | tmp___2) | ((lcd_flags & 4UL) != 0UL)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3897: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(6); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3897: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(6); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            90945 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  86654 (95%)
  Because of loop head:            4289 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2 (0%)
  Times precision was empty:       90896 (100%)
  Times precision was {false}:     23 (0%)
  Times result was cached:         14 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12 (0%)
  Times result was 'false':        3 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         46091
  BDD entailment checks:           6749
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          3
Number of abstraction locations:          6
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         67
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.91
Number of irrelevant predicates:          49 (73%)
Number of preds handled by boolean abs:   18 (27%)
  Total number of models for allsat:      12
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  9.267s
  Time for path formula creation:        8.523s
Time for strengthen operator:            0.514s
Time for prec operator:                  1.738s
  Time for abstraction:                  0.440s (Max:     0.032s, Count: 90945)
    Boolean abstraction:                 0.035s
    Solving time:                        0.041s (Max:     0.012s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 1.025s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.049s

Number of path formula cache hits:   364912 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.030s

Total number of created targets for pointer analysis: 51900
   Number of created targets for uf: *unsigned_char is 3193
   Number of created targets for uf: *char is 6661


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          35 (count: 97843, min: 0, max: 20, avg: 0.00)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.818s
  Time for transition matches:                         0.463s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       393783 (count: 393783, min: 1, max: 1, avg: 1.00) [1 x 393783]

CPA algorithm statistics
------------------------
Number of iterations:            291726
Max size of waitlist:            21406
Average size of waitlist:        9891
Number of computed successors:   354311
Max successors for one state:    2
Number of times merged:          19671
Number of times stopped:         26395
Number of times breaked:         2

Total time for CPA algorithm:        24.819s (Max:    12.895s)
  Time for choose from waitlist:      0.233s
  Time for precision adjustment:      5.603s
  Time for transfer relation:        14.680s
  Time for merge operator:            1.598s
  Time for stop operator:             0.514s
  Time for adding to reached set:     0.883s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                  16 (count: 2, min: 8, max: 8, avg: 8.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.513s
  Counterexample analysis:                             0.115s (Max:     0.068s, Calls: 2)
    Refinement sat check:                              0.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.007s
  ARG update:                                          1.379s

Length of refined path (in blocks):                      14 (count: 2, min: 7, max: 7, avg: 7.00)
Number of affected states:                               10 (count: 2, min: 5, max: 5, avg: 5.00)
Length (states) of path with itp 'true':                  2 (count: 2, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:        10 (count: 2, min: 5, max: 5, avg: 5.00)
Length (states) of path with itp 'false':                 2 (count: 2, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               8 (count: 2, min: 4, max: 4, avg: 4.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 196901
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 150931.50
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      26.671s
Time for refinements:                 1.852s
Average time for refinement:          0.926s
Max time for refinement:              1.105s

Code Coverage
-----------------------------
  Function coverage:      0.538
  Visited lines:          1541
  Total lines:            2327
  Line coverage:          0.662
  Visited conditions:     806
  Total conditions:       1082
  Condition coverage:     0.745

CPAchecker general statistics
-----------------------------
Number of program locations:     3639
Number of CFA edges:             4411
Number of relevant variables:    300
Number of functions:             91
Number of loops:                 23
Size of reached set:             26062
  Number of reached locations:   1394 (38%)
    Avg states per location:     18
    Max states per location:     1038 (at node N126)
  Number of reached functions:   49 (54%)
  Number of partitions:          25872
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1342 (before line 4663), Function lcd_init called from node N2048, stack depth 3 [6a9ebf55], stack [main, panel_attach, lcd_init], ABS85094: true])
  Number of target states:       0
  Size of final wait list        3370

Time for analysis setup:          3.668s
  Time for loading CPAs:          0.697s
  Time for loading parser:        0.493s
  Time for CFA construction:      2.402s
    Time for parsing file(s):     0.643s
    Time for AST to CFA:          0.774s
    Time for CFA sanity check:    0.178s
    Time for post-processing:     0.675s
      Time for var class.:        0.299s
Time for Analysis:               26.671s
CPU time for analysis:           26.660s
Total time for CPAchecker:       30.342s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.676s

Time for Garbage Collector:       3.743s (in 77 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                287MB (   273 MiB) max;    109MB (   104 MiB) avg;    299MB (   285 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           348MB (   332 MiB) max;    186MB (   177 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
