scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--panel--panel.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_heuzg5cc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2812: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2818: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2921: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2924: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6158;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3515: Dead code detected: d_bit = 1 << (pin + -2); (CFACreationUtils.addEdgeToCFA, INFO)

line 4231: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4234: Dead code detected: __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4237: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
    case 1:
    __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 2:
    __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 4:
    __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    case 8:
    __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    default:
    __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" (tmp));
    goto ldv_24020;
    } (CFACreationUtils.addEdgeToCFA, INFO)

line 4767: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4770: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 4773: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
  case 1:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 2:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 4:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  case 8:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (tmp): "ebx");
  goto ldv_24075;
  } (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3787: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3823: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3649: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3687: Function pointer *(pprt->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3668: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3698: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4879: Function pointer *(pprt->port->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4881: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4882: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4884: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4885: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4911: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4898: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4899: Function pointer *(pprt->port->ops->read_status) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3449: Function pointer *(pprt->port->ops->read_control) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3464: Function pointer *(pprt->port->ops->write_control) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3424: Function pointer *(pprt->port->ops->read_data) with type unsigned char (*)(struct parport *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3439: Function pointer *(pprt->port->ops->write_data) with type void (*)(struct parport *, unsigned char) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function default_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_probe_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_close_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_open_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_panel_driver_release_1 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function no_llseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function nonseekable_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3844: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(1); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3844: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3687: Ignoring function call through function pointer *(pprt->port->ops->write_control): (*(pprt->port->ops->write_control))(pprt->port, (int)((unsigned char)cmd)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3698: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)data)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3668: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)data)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3649: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)cmd)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3464: Ignoring function call through function pointer *(pprt->port->ops->write_control): (*(pprt->port->ops->write_control))(pprt->port, (int)((unsigned char)val)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3439: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)val)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_claim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function misc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function parport_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_reboot_notifier to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4278: Ignoring call via function pointer lcd_clear_fast for which no suitable target was found in line: (*lcd_clear_fast)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4278: Ignoring function call through function pointer *lcd_clear_fast: (*lcd_clear_fast)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4266: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4266: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4274: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4274: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4275: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)(16); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4275: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)(16); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4313: Ignoring call via function pointer lcd_clear_fast for which no suitable target was found in line: (*lcd_clear_fast)(); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4313: Ignoring function call through function pointer *lcd_clear_fast: (*lcd_clear_fast)(); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3733: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)((int)c); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3733: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)((int)c); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3719: Ignoring call via function pointer lcd_write_cmd for which no suitable target was found in line: (*lcd_write_cmd)((int)(tmp | tmp___0)); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 3719: Ignoring function call through function pointer *lcd_write_cmd: (*lcd_write_cmd)((int)(tmp | tmp___0)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3823: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, 32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3787: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, 32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4881: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)((~((int)((signed char)scan_mask_o))) & ((int)((signed char)oldval))))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4882: Ignoring function call through function pointer *(pprt->port->ops->read_status): tmp___0 = (*(pprt->port->ops->read_status))(pprt->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4884: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)oldval)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4885: Ignoring function call through function pointer *(pprt->port->ops->read_status): tmp___1 = (*(pprt->port->ops->read_status))(pprt->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4911: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)oldval)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4898: Ignoring function call through function pointer *(pprt->port->ops->write_data): (*(pprt->port->ops->write_data))(pprt->port, (int)((unsigned char)((~((int)((signed char)bitval))) & ((int)((signed char)oldval))))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4899: Ignoring function call through function pointer *(pprt->port->ops->read_status): tmp___2 = (*(pprt->port->ops->read_status))(pprt->port); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4928: Ignoring function call through function pointer *(input->u.std.press_fct): (*(input->u.std.press_fct))(input->u.std.press_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5008: Ignoring call via function pointer input_state_falling::release_fct for which no suitable target was found in line: (*release_fct)(input->u.std.release_data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 5008: Ignoring function call through function pointer *release_fct: (*release_fct)(input->u.std.release_data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4283: Ignoring call via function pointer lcd_write_data for which no suitable target was found in line: (*lcd_write_data)(32); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 4283: Ignoring function call through function pointer *lcd_write_data: (*lcd_write_data)(32); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4754961 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3141378 (66%)
  Because of loop head:            1613426 (34%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         157 (0%)
  Times precision was empty:       4514005 (95%)
  Times precision was {false}:     2053 (0%)
  Times result was cached:         230769 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8134 (0%)
  Times result was 'false':        18500 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1751394
  BDD entailment checks:           1107888
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          14
Number of abstraction locations:          75
Max number of predicates per location:    13
Avg number of predicates per location:    5
Total predicates per abstraction:         1160514
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 113.92
Number of irrelevant predicates:          749715 (65%)
Number of preds handled by boolean abs:   31799 (3%)
  Total number of models for allsat:      10961
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.35

Time for post operator:                121.734s
  Time for path formula creation:      115.121s
Time for strengthen operator:           14.018s
Time for prec operator:                404.567s
  Time for abstraction:                370.113s (Max:     4.023s, Count: 4754961)
    Boolean abstraction:               230.908s
    Solving time:                      235.091s (Max:     3.223s)
    Model enumeration time:             10.900s
    Time for BDD construction:           0.238s (Max:     0.014s)
Time for merge operator:                10.582s
Time for coverage check:                 0.658s
  Time for BDD entailment checks:        0.448s
Total time for SMT solver (w/o itp):   245.992s

Number of path formula cache hits:   26975000 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    66.914s

Total number of created targets for pointer analysis: 3557955
   Number of created targets for uf: *unsigned_char is 29037
   Number of created targets for uf: *enum_input_type is 518
   Number of created targets for uf: *unsigned_long_long_int is 1063
   Number of created targets for uf: *enum_input_state is 518
   Number of created targets for uf: *char is 243532


Number of BDD nodes:                               17041
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       19942 (count: 5688887, min: 0, max: 285, avg: 0.00)
Time for BDD node cleanup:                             0.482s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.029s
  Time for transition matches:                        12.272s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     23893388 (count: 23893388, min: 1, max: 1, avg: 1.00) [1 x 23893388]

CPA algorithm statistics
------------------------
Number of iterations:            16296078
Max size of waitlist:            229
Average size of waitlist:        70
Number of computed successors:   17639576
Max successors for one state:    2
Number of times merged:          321753
Number of times stopped:         1315765
Number of times breaked:         157

Total time for CPA algorithm:       823.326s (Max:    38.279s)
  Time for choose from waitlist:      3.371s
  Time for precision adjustment:    485.465s
  Time for transfer relation:       264.386s
  Time for merge operator:           13.389s
  Time for stop operator:            10.495s
  Time for adding to reached set:    18.778s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   157
Avg. length of target path (in blocks):                4511 (count: 157, min: 8, max: 48, avg: 28.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  67.821s
  Counterexample analysis:                            27.290s (Max:     0.790s, Calls: 157)
    Refinement sat check:                             24.836s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.061s
  ARG update:                                         40.327s

Length of refined path (in blocks):                    3511 (count: 157, min: 4, max: 41, avg: 22.36)
Number of affected states:                             2889 (count: 157, min: 1, max: 39, avg: 18.40)
Length (states) of path with itp 'true':                465 (count: 157, min: 0, max: 21, avg: 2.96)
Length (states) of path with itp non-trivial itp:      2889 (count: 157, min: 1, max: 39, avg: 18.40)
Length (states) of path with itp 'false':               157 (count: 157, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 157, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2732 (count: 157, min: 0, max: 38, avg: 17.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                157
Number of successful refinements:     157
Number of failed refinements:         0
Max. size of reached set before ref.: 446893
Max. size of reached set after ref.:  9470
Avg. size of reached set before ref.: 101537.12
Avg. size of reached set after ref.:  762.38

Total time for CEGAR algorithm:     899.562s
Time for refinements:                76.160s
Average time for refinement:          0.485s
Max time for refinement:              1.909s

Code Coverage
-----------------------------
  Function coverage:      0.604
  Visited lines:          1623
  Total lines:            2327
  Line coverage:          0.697
  Visited conditions:     544
  Total conditions:       1082
  Condition coverage:     0.503

CPAchecker general statistics
-----------------------------
Number of program locations:     3639
Number of CFA edges:             4411
Number of relevant variables:    300
Number of functions:             91
Number of loops:                 23
Size of reached set:             483676
  Number of reached locations:   1282 (35%)
    Avg states per location:     377
    Max states per location:     11454 (at node N203)
  Number of reached functions:   55 (60%)
  Number of partitions:          483575
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N2297 (before line 5676), Function main called from node N2282, stack depth 1 [4417af13], stack [main]])
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          3.866s
  Time for loading CPAs:          0.712s
  Time for loading parser:        0.542s
  Time for CFA construction:      2.524s
    Time for parsing file(s):     0.680s
    Time for AST to CFA:          0.828s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.698s
      Time for var class.:        0.299s
Time for Analysis:              899.562s
CPU time for analysis:          899.480s
Total time for CPAchecker:      903.432s
Total CPU time for CPAchecker:  903.340s
Time for statistics:              3.762s

Time for Garbage Collector:     137.700s (in 1539 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1465MB (  1397 MiB) max;    555MB (   529 MiB) avg;   1567MB (  1495 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1740MB (  1659 MiB) max;    831MB (   792 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8566MB (  8169 MiB) max;   8402MB (  8013 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
