scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cn4xr_3i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2425859 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2153097 (89%)
  Because of loop head:            272056 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         706 (0%)
  Times precision was empty:       170915 (7%)
  Times precision was {false}:     7193 (0%)
  Times result was cached:         2223943 (92%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23808 (1%)
  Times result was 'false':        9460 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2265734
  BDD entailment checks:           394506
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          9
Number of abstraction locations:          162
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         10394457
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 335.29
Number of irrelevant predicates:          5336902 (51%)
Number of preds handled by boolean abs:   68312 (1%)
  Total number of models for allsat:      24968
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.05

Time for post operator:                145.355s
  Time for path formula creation:      141.391s
Time for strengthen operator:            8.517s
Time for prec operator:                426.831s
  Time for abstraction:                406.233s (Max:     3.691s, Count: 2425859)
    Boolean abstraction:                88.455s
    Solving time:                      107.093s (Max:     0.345s)
    Model enumeration time:              6.159s
    Time for BDD construction:           0.401s (Max:     0.008s)
Time for merge operator:                13.944s
Time for coverage check:                 0.589s
  Time for BDD entailment checks:        0.384s
Total time for SMT solver (w/o itp):   113.252s

Number of path formula cache hits:   13343495 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    97.255s

Total number of created targets for pointer analysis: 2297855
   Number of created targets for uf: *(struct_pi_adapter)* is 209
   Number of created targets for uf: *signed_int is 11320
   Number of created targets for uf: *(char)* is 337
   Number of created targets for uf: *char is 49063


Number of BDD nodes:                               408
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       47841 (count: 744469, min: 0, max: 1036, avg: 0.06)
Time for BDD node cleanup:                             0.131s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.558s
  Time for transition matches:                         7.523s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     13642917 (count: 13642917, min: 1, max: 1, avg: 1.00) [1 x 13642917]

CPA algorithm statistics
------------------------
Number of iterations:            8567993
Max size of waitlist:            31
Average size of waitlist:        15
Number of computed successors:   9895168
Max successors for one state:    2
Number of times merged:          935614
Number of times stopped:         1314327
Number of times breaked:         706

Total time for CPA algorithm:       760.228s (Max:    14.361s)
  Time for choose from waitlist:      2.316s
  Time for precision adjustment:    465.497s
  Time for transfer relation:       236.259s
  Time for merge operator:           21.244s
  Time for stop operator:             7.920s
  Time for adding to reached set:    11.034s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   706
Avg. length of target path (in blocks):               60937 (count: 706, min: 8, max: 211, avg: 86.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  63.940s
  Counterexample analysis:                            46.837s (Max:     0.313s, Calls: 706)
    Refinement sat check:                             33.933s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.041s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.225s
  Precision update:                                    0.409s
  ARG update:                                         16.028s

Length of refined path (in blocks):                   58648 (count: 706, min: 4, max: 175, avg: 83.07)
Number of affected states:                            44929 (count: 706, min: 0, max: 174, avg: 63.64)
Length (states) of path with itp 'true':              13013 (count: 706, min: 0, max: 96, avg: 18.43)
Length (states) of path with itp non-trivial itp:     44929 (count: 706, min: 0, max: 174, avg: 63.64)
Length (states) of path with itp 'false':               706 (count: 706, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 706, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           44263 (count: 706, min: 0, max: 173, avg: 62.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                706
Number of successful refinements:     706
Number of failed refinements:         0
Max. size of reached set before ref.: 145934
Max. size of reached set after ref.:  88855
Avg. size of reached set before ref.: 59259.85
Avg. size of reached set after ref.:  47243.14

Total time for CEGAR algorithm:     896.528s
Time for refinements:               106.885s
Average time for refinement:          0.151s
Max time for refinement:              5.229s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1606
  Total lines:            1833
  Line coverage:          0.876
  Visited conditions:     314
  Total conditions:       410
  Condition coverage:     0.766

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             87582
  Number of reached locations:   964 (40%)
    Avg states per location:     90
    Max states per location:     5001 (at node N95)
  Number of reached functions:   56 (62%)
  Number of partitions:          87562
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [49d98dc5], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          3.887s
  Time for loading CPAs:          0.792s
  Time for loading parser:        0.580s
  Time for CFA construction:      2.427s
    Time for parsing file(s):     0.699s
    Time for AST to CFA:          0.862s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.558s
      Time for var class.:        0.259s
Time for Analysis:              896.528s
CPU time for analysis:          896.490s
Total time for CPAchecker:      900.419s
Total CPU time for CPAchecker:  900.370s
Time for statistics:              1.021s

Time for Garbage Collector:      68.804s (in 691 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2000MB (  1908 MiB) max;   1075MB (  1025 MiB) avg;   2099MB (  2002 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2568MB (  2449 MiB) max;   1695MB (  1616 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8830MB (  8421 MiB) max;   8404MB (  8015 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
