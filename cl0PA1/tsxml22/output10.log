scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_njwr72cj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            90041 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  76829 (85%)
  Because of loop head:            13150 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (0%)
  Times precision was empty:       67241 (75%)
  Times precision was {false}:     365 (0%)
  Times result was cached:         21713 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      722 (1%)
  Times result was 'false':        719 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         72963
  BDD entailment checks:           19131
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          8
Number of abstraction locations:          57
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         95676
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 88.02
Number of irrelevant predicates:          69410 (73%)
Number of preds handled by boolean abs:   1946 (2%)
  Total number of models for allsat:      733
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  3.788s
  Time for path formula creation:        3.472s
Time for strengthen operator:            0.363s
Time for prec operator:                 10.461s
  Time for abstraction:                  9.395s (Max:     0.068s, Count: 90041)
    Boolean abstraction:                 3.263s
    Solving time:                        3.972s (Max:     0.043s)
    Model enumeration time:              0.249s
    Time for BDD construction:           0.064s (Max:     0.009s)
Time for merge operator:                 0.231s
Time for coverage check:                 0.074s
  Time for BDD entailment checks:        0.057s
Total time for SMT solver (w/o itp):     4.221s

Number of path formula cache hits:   582859 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.278s

Total number of created targets for pointer analysis: 18865
   Number of created targets for uf: *(struct_pi_adapter)* is 29
   Number of created targets for uf: *signed_int is 688
   Number of created targets for uf: *(char)* is 13
   Number of created targets for uf: *char is 721


Number of BDD nodes:                               291
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1546 (count: 92619, min: 0, max: 76, avg: 0.02)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.837s
  Time for transition matches:                         0.435s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       485292 (count: 485292, min: 1, max: 1, avg: 1.00) [1 x 485292]

CPA algorithm statistics
------------------------
Number of iterations:            312342
Max size of waitlist:            31
Average size of waitlist:        16
Number of computed successors:   356501
Max successors for one state:    2
Number of times merged:          26916
Number of times stopped:         42329
Number of times breaked:         62

Total time for CPA algorithm:        24.062s (Max:     1.816s)
  Time for choose from waitlist:      0.255s
  Time for precision adjustment:     12.463s
  Time for transfer relation:         8.478s
  Time for merge operator:            0.733s
  Time for stop operator:             0.465s
  Time for adding to reached set:     0.553s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                1305 (count: 62, min: 8, max: 32, avg: 21.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.218s
  Counterexample analysis:                             1.216s (Max:     0.041s, Calls: 62)
    Refinement sat check:                              0.988s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.050s
  Precision update:                                    0.061s
  ARG update:                                          0.827s

Length of refined path (in blocks):                    1185 (count: 62, min: 4, max: 29, avg: 19.11)
Number of affected states:                             1067 (count: 62, min: 1, max: 27, avg: 17.21)
Length (states) of path with itp 'true':                 56 (count: 62, min: 0, max: 2, avg: 0.90)
Length (states) of path with itp non-trivial itp:      1067 (count: 62, min: 1, max: 27, avg: 17.21)
Length (states) of path with itp 'false':                62 (count: 62, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 62, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1005 (count: 62, min: 0, max: 26, avg: 16.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 5895
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 4983.82
Avg. size of reached set after ref.:  5.68

Total time for CEGAR algorithm:      26.613s
Time for refinements:                 2.546s
Average time for refinement:          0.041s
Max time for refinement:              0.069s

Code Coverage
-----------------------------
  Function coverage:      0.385
  Visited lines:          1074
  Total lines:            1833
  Line coverage:          0.586
  Visited conditions:     162
  Total conditions:       410
  Condition coverage:     0.395

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             4808
  Number of reached locations:   502 (21%)
    Avg states per location:     9
    Max states per location:     219 (at node N95)
  Number of reached functions:   35 (38%)
  Number of partitions:          4784
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N807 (before line 3778), Function pt_detect called from node N1331, stack depth 3 [6d7a309c], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          3.257s
  Time for loading CPAs:          0.632s
  Time for loading parser:        0.490s
  Time for CFA construction:      2.033s
    Time for parsing file(s):     0.599s
    Time for AST to CFA:          0.732s
    Time for CFA sanity check:    0.110s
    Time for post-processing:     0.468s
      Time for var class.:        0.230s
Time for Analysis:               26.613s
CPU time for analysis:           26.620s
Total time for CPAchecker:       29.872s
Total CPU time for CPAchecker:   29.870s
Time for statistics:              0.175s

Time for Garbage Collector:       1.126s (in 132 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     51MB (    49 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
