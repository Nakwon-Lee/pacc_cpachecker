scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mi7wweqb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2482974 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2151790 (87%)
  Because of loop head:            329783 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1401 (0%)
  Times precision was empty:       84931 (3%)
  Times precision was {false}:     3017 (0%)
  Times result was cached:         2363580 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31446 (1%)
  Times result was 'false':        56897 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2017942
  BDD entailment checks:           561576
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          192
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         17312145
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 502.34
Number of irrelevant predicates:          5644586 (33%)
Number of preds handled by boolean abs:   154144 (1%)
  Total number of models for allsat:      34560
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.10

Time for post operator:                 65.120s
  Time for path formula creation:       61.632s
Time for strengthen operator:            7.781s
Time for prec operator:                579.121s
  Time for abstraction:                560.983s (Max:     2.151s, Count: 2482974)
    Boolean abstraction:               112.856s
    Solving time:                      109.766s (Max:     0.200s)
    Model enumeration time:             11.162s
    Time for BDD construction:           0.626s (Max:     0.012s)
Time for merge operator:                 4.314s
Time for coverage check:                 0.738s
  Time for BDD entailment checks:        0.525s
Total time for SMT solver (w/o itp):   120.928s

Number of path formula cache hits:   16434416 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    35.064s

Total number of created targets for pointer analysis: 1214206
   Number of created targets for uf: *(struct_pi_adapter)* is 1641
   Number of created targets for uf: *signed_int is 12447
   Number of created targets for uf: *(char)* is 933
   Number of created targets for uf: *char is 230445


Number of BDD nodes:                               1986
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       63655 (count: 855493, min: 0, max: 239, avg: 0.07)
Time for BDD node cleanup:                             0.136s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.760s
  Time for transition matches:                         7.651s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     14439383 (count: 14439383, min: 1, max: 1, avg: 1.00) [1 x 14439383]

CPA algorithm statistics
------------------------
Number of iterations:            8410585
Max size of waitlist:            962
Average size of waitlist:        335
Number of computed successors:   9652894
Max successors for one state:    2
Number of times merged:          728183
Number of times stopped:         1044407
Number of times breaked:         1401

Total time for CPA algorithm:       808.967s (Max:     9.926s)
  Time for choose from waitlist:      3.217s
  Time for precision adjustment:    616.183s
  Time for transfer relation:       148.548s
  Time for merge operator:            9.819s
  Time for stop operator:             6.751s
  Time for adding to reached set:     8.182s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1401
Avg. length of target path (in blocks):               72238 (count: 1401, min: 8, max: 152, avg: 51.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.313s
  Counterexample analysis:                            33.148s (Max:     0.154s, Calls: 1401)
    Refinement sat check:                             25.843s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.050s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.206s
  Precision update:                                    0.685s
  ARG update:                                         14.806s

Length of refined path (in blocks):                   67305 (count: 1401, min: 4, max: 142, avg: 48.04)
Number of affected states:                            29204 (count: 1401, min: 0, max: 140, avg: 20.85)
Length (states) of path with itp 'true':              36700 (count: 1401, min: 0, max: 104, avg: 26.20)
Length (states) of path with itp non-trivial itp:     29204 (count: 1401, min: 0, max: 140, avg: 20.85)
Length (states) of path with itp 'false':              1401 (count: 1401, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1401, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           28094 (count: 1401, min: 0, max: 139, avg: 20.05)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1401
Number of successful refinements:     1401
Number of failed refinements:         0
Max. size of reached set before ref.: 151443
Max. size of reached set after ref.:  148243
Avg. size of reached set before ref.: 21714.33
Avg. size of reached set after ref.:  15618.25

Total time for CEGAR algorithm:     897.091s
Time for refinements:                72.134s
Average time for refinement:          0.051s
Max time for refinement:              0.557s

Code Coverage
-----------------------------
  Function coverage:      0.549
  Visited lines:          1435
  Total lines:            1833
  Line coverage:          0.783
  Visited conditions:     252
  Total conditions:       410
  Condition coverage:     0.615

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             10995
  Number of reached locations:   763 (32%)
    Avg states per location:     14
    Max states per location:     367 (at node N96)
  Number of reached functions:   50 (55%)
  Number of partitions:          10973
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [1d81e101], stack [main]])
  Number of target states:       0
  Size of final wait list        203

Time for analysis setup:          3.224s
  Time for loading CPAs:          0.674s
  Time for loading parser:        0.437s
  Time for CFA construction:      2.037s
    Time for parsing file(s):     0.574s
    Time for AST to CFA:          0.738s
    Time for CFA sanity check:    0.110s
    Time for post-processing:     0.470s
      Time for var class.:        0.221s
Time for Analysis:              897.091s
CPU time for analysis:          896.990s
Total time for CPAchecker:      900.318s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.198s

Time for Garbage Collector:      87.395s (in 2836 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                932MB (   889 MiB) max;    358MB (   342 MiB) avg;    954MB (   910 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           957MB (   913 MiB) max;    522MB (   498 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8772MB (  8366 MiB) max;   8470MB (  8078 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
