scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xgrpek0p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2200951 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1896470 (86%)
  Because of loop head:            301972 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2509 (0%)
  Times precision was empty:       49953 (2%)
  Times precision was {false}:     1786 (0%)
  Times result was cached:         2119463 (96%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29749 (1%)
  Times result was 'false':        58091 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1817363
  BDD entailment checks:           523743
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          208
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         14180227
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 449.67
Number of irrelevant predicates:          1982042 (14%)
Number of preds handled by boolean abs:   158138 (1%)
  Total number of models for allsat:      33369
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.12

Time for post operator:                 80.716s
  Time for path formula creation:       77.440s
Time for strengthen operator:            7.147s
Time for prec operator:                552.425s
  Time for abstraction:                533.828s (Max:     2.769s, Count: 2200951)
    Boolean abstraction:                95.672s
    Solving time:                       86.793s (Max:     0.159s)
    Model enumeration time:              9.989s
    Time for BDD construction:           0.618s (Max:     0.039s)
Time for merge operator:                 6.642s
Time for coverage check:                 0.573s
  Time for BDD entailment checks:        0.397s
Total time for SMT solver (w/o itp):    96.782s

Number of path formula cache hits:   13758444 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.239s

Total number of created targets for pointer analysis: 1488322
   Number of created targets for uf: *(struct_pi_adapter)* is 1929
   Number of created targets for uf: *signed_int is 17225
   Number of created targets for uf: *(char)* is 1453
   Number of created targets for uf: *char is 383429


Number of BDD nodes:                               1556
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       60242 (count: 767866, min: 0, max: 845, avg: 0.08)
Time for BDD node cleanup:                             0.108s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.233s
  Time for transition matches:                         6.958s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                     12934687 (count: 12934687, min: 1, max: 1, avg: 1.00) [1 x 12934687]

CPA algorithm statistics
------------------------
Number of iterations:            7574110
Max size of waitlist:            4851
Average size of waitlist:        279
Number of computed successors:   8705130
Max successors for one state:    2
Number of times merged:          646810
Number of times stopped:         957757
Number of times breaked:         2509

Total time for CPA algorithm:       785.148s (Max:    52.167s)
  Time for choose from waitlist:      2.359s
  Time for precision adjustment:    585.724s
  Time for transfer relation:       158.011s
  Time for merge operator:           11.452s
  Time for stop operator:             6.336s
  Time for adding to reached set:     8.002s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2509
Avg. length of target path (in blocks):              150493 (count: 2509, min: 8, max: 176, avg: 59.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  73.866s
  Counterexample analysis:                            58.357s (Max:     0.119s, Calls: 2509)
    Refinement sat check:                             42.766s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.093s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.331s
  Precision update:                                    1.184s
  ARG update:                                         13.015s

Length of refined path (in blocks):                  142720 (count: 2509, min: 4, max: 169, avg: 56.88)
Number of affected states:                            48204 (count: 2509, min: 0, max: 168, avg: 19.21)
Length (states) of path with itp 'true':              92007 (count: 2509, min: 0, max: 127, avg: 36.67)
Length (states) of path with itp non-trivial itp:     48204 (count: 2509, min: 0, max: 168, avg: 19.21)
Length (states) of path with itp 'false':              2509 (count: 2509, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2509, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           46221 (count: 2509, min: 0, max: 167, avg: 18.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2509
Number of successful refinements:     2509
Number of failed refinements:         0
Max. size of reached set before ref.: 428521
Max. size of reached set after ref.:  108143
Avg. size of reached set before ref.: 11459.32
Avg. size of reached set after ref.:  8418.17

Total time for CEGAR algorithm:     897.146s
Time for refinements:                96.842s
Average time for refinement:          0.038s
Max time for refinement:              1.420s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1605
  Total lines:            1833
  Line coverage:          0.876
  Visited conditions:     314
  Total conditions:       410
  Condition coverage:     0.766

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             59042
  Number of reached locations:   963 (40%)
    Avg states per location:     61
    Max states per location:     2937 (at node N96)
  Number of reached functions:   56 (62%)
  Number of partitions:          58978
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [1d81e101], stack [main]])
  Number of target states:       0
  Size of final wait list        399

Time for analysis setup:          3.194s
  Time for loading CPAs:          0.654s
  Time for loading parser:        0.378s
  Time for CFA construction:      2.047s
    Time for parsing file(s):     0.551s
    Time for AST to CFA:          0.662s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.560s
      Time for var class.:        0.261s
Time for Analysis:              897.146s
CPU time for analysis:          897.040s
Total time for CPAchecker:      900.350s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.716s

Time for Garbage Collector:      79.205s (in 2701 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1302MB (  1241 MiB) max;    423MB (   404 MiB) avg;   1336MB (  1274 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1420MB (  1354 MiB) max;    620MB (   591 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8436MB (  8046 MiB) max;   8216MB (  7835 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
