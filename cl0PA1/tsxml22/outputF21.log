scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bz81wyfu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3034336 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2689036 (89%)
  Because of loop head:            342172 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3128 (0%)
  Times precision was empty:       199540 (7%)
  Times precision was {false}:     2964 (0%)
  Times result was cached:         2809908 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21924 (1%)
  Times result was 'false':        24058 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2641688
  BDD entailment checks:           502430
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          193
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         15577746
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 625.91
Number of irrelevant predicates:          2890516 (19%)
Number of preds handled by boolean abs:   74710 (0%)
  Total number of models for allsat:      22945
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.05

Time for post operator:                 61.820s
  Time for path formula creation:       57.724s
Time for strengthen operator:            9.351s
Time for prec operator:                491.428s
  Time for abstraction:                470.756s (Max:     1.608s, Count: 3034336)
    Boolean abstraction:                46.784s
    Solving time:                       47.615s (Max:     0.174s)
    Model enumeration time:              3.474s
    Time for BDD construction:           0.366s (Max:     0.042s)
Time for merge operator:                 5.308s
Time for coverage check:                 0.735s
  Time for BDD entailment checks:        0.461s
Total time for SMT solver (w/o itp):    51.089s

Number of path formula cache hits:   19754846 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.484s

Total number of created targets for pointer analysis: 623456
   Number of created targets for uf: *(struct_pi_adapter)* is 497
   Number of created targets for uf: *signed_int is 4932
   Number of created targets for uf: *(char)* is 629
   Number of created targets for uf: *char is 116147


Number of BDD nodes:                               583
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       44305 (count: 850074, min: 0, max: 590, avg: 0.05)
Time for BDD node cleanup:                             0.157s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.715s
  Time for transition matches:                         8.627s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.014s
Automaton transfers with branching:                0
Automaton transfer successors:                     16669133 (count: 16669133, min: 1, max: 1, avg: 1.00) [1 x 16669133]

CPA algorithm statistics
------------------------
Number of iterations:            10498213
Max size of waitlist:            61
Average size of waitlist:        25
Number of computed successors:   12067922
Max successors for one state:    2
Number of times merged:          1069629
Number of times stopped:         1524340
Number of times breaked:         3128

Total time for CPA algorithm:       747.472s (Max:    12.553s)
  Time for choose from waitlist:      2.265s
  Time for precision adjustment:    541.020s
  Time for transfer relation:       155.780s
  Time for merge operator:           13.780s
  Time for stop operator:             7.624s
  Time for adding to reached set:     9.804s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3128
Avg. length of target path (in blocks):              225153 (count: 3128, min: 8, max: 164, avg: 71.98)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 100.795s
  Counterexample analysis:                            77.636s (Max:     0.196s, Calls: 3128)
    Refinement sat check:                             53.599s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.120s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.603s
  Precision update:                                    1.140s
  ARG update:                                         20.330s

Length of refined path (in blocks):                  219252 (count: 3128, min: 4, max: 157, avg: 70.09)
Number of affected states:                           120680 (count: 3128, min: 0, max: 156, avg: 38.58)
Length (states) of path with itp 'true':              95444 (count: 3128, min: 0, max: 93, avg: 30.51)
Length (states) of path with itp non-trivial itp:    120680 (count: 3128, min: 0, max: 156, avg: 38.58)
Length (states) of path with itp 'false':              3128 (count: 3128, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3128, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          117751 (count: 3128, min: 0, max: 155, avg: 37.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3128
Number of successful refinements:     3128
Number of failed refinements:         0
Max. size of reached set before ref.: 108766
Max. size of reached set after ref.:  100585
Avg. size of reached set before ref.: 12794.78
Avg. size of reached set after ref.:  9433.83

Total time for CEGAR algorithm:     896.504s
Time for refinements:               130.541s
Average time for refinement:          0.041s
Max time for refinement:              0.410s

Code Coverage
-----------------------------
  Function coverage:      0.484
  Visited lines:          1133
  Total lines:            1833
  Line coverage:          0.618
  Visited conditions:     180
  Total conditions:       410
  Condition coverage:     0.439

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             6488
  Number of reached locations:   576 (24%)
    Avg states per location:     11
    Max states per location:     274 (at node N95)
  Number of reached functions:   44 (48%)
  Number of partitions:          6477
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [1d81e101], stack [main]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          3.789s
  Time for loading CPAs:          0.678s
  Time for loading parser:        0.521s
  Time for CFA construction:      2.447s
    Time for parsing file(s):     0.702s
    Time for AST to CFA:          0.927s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.504s
      Time for var class.:        0.238s
Time for Analysis:              896.504s
CPU time for analysis:          896.410s
Total time for CPAchecker:      900.297s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.151s

Time for Garbage Collector:      97.989s (in 2627 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                824MB (   785 MiB) max;    356MB (   339 MiB) avg;    857MB (   817 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           856MB (   817 MiB) max;    527MB (   503 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8422MB (  8032 MiB) max;   8269MB (  7886 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
