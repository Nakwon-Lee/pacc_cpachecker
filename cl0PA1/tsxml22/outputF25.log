scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j4r25_4d/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2426476 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2102168 (87%)
  Because of loop head:            322917 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1391 (0%)
  Times precision was empty:       84827 (3%)
  Times precision was {false}:     2997 (0%)
  Times result was cached:         2308647 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30005 (1%)
  Times result was 'false':        56245 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1970729
  BDD entailment checks:           551709
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          192
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         16874181
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 511.31
Number of irrelevant predicates:          5541113 (33%)
Number of preds handled by boolean abs:   145497 (1%)
  Total number of models for allsat:      33107
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.10

Time for post operator:                 62.389s
  Time for path formula creation:       58.480s
Time for strengthen operator:            7.336s
Time for prec operator:                600.537s
  Time for abstraction:                583.795s (Max:     1.756s, Count: 2426476)
    Boolean abstraction:                99.607s
    Solving time:                       97.199s (Max:     0.184s)
    Model enumeration time:              9.847s
    Time for BDD construction:           0.555s (Max:     0.011s)
Time for merge operator:                 4.584s
Time for coverage check:                 0.656s
  Time for BDD entailment checks:        0.453s
Total time for SMT solver (w/o itp):   107.046s

Number of path formula cache hits:   16068431 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.573s

Total number of created targets for pointer analysis: 1189456
   Number of created targets for uf: *(struct_pi_adapter)* is 1625
   Number of created targets for uf: *signed_int is 12231
   Number of created targets for uf: *(char)* is 917
   Number of created targets for uf: *char is 70536


Number of BDD nodes:                               1984
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       60800 (count: 836738, min: 0, max: 225, avg: 0.07)
Time for BDD node cleanup:                             0.118s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.984s
  Time for transition matches:                         7.008s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     14121587 (count: 14121587, min: 1, max: 1, avg: 1.00) [1 x 14121587]

CPA algorithm statistics
------------------------
Number of iterations:            8218936
Max size of waitlist:            962
Average size of waitlist:        332
Number of computed successors:   9432555
Max successors for one state:    2
Number of times merged:          709510
Number of times stopped:         1017900
Number of times breaked:         1391

Total time for CPA algorithm:       813.798s (Max:    10.362s)
  Time for choose from waitlist:      3.242s
  Time for precision adjustment:    633.648s
  Time for transfer relation:       139.315s
  Time for merge operator:            9.560s
  Time for stop operator:             6.397s
  Time for adding to reached set:     7.840s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1391
Avg. length of target path (in blocks):               71471 (count: 1391, min: 8, max: 152, avg: 51.38)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  45.581s
  Counterexample analysis:                            30.928s (Max:     0.154s, Calls: 1391)
    Refinement sat check:                             24.232s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.044s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.205s
  Precision update:                                    0.669s
  ARG update:                                         13.349s

Length of refined path (in blocks):                   66548 (count: 1391, min: 4, max: 142, avg: 47.84)
Number of affected states:                            28731 (count: 1391, min: 0, max: 140, avg: 20.65)
Length (states) of path with itp 'true':              36426 (count: 1391, min: 0, max: 104, avg: 26.19)
Length (states) of path with itp non-trivial itp:     28731 (count: 1391, min: 0, max: 140, avg: 20.65)
Length (states) of path with itp 'false':              1391 (count: 1391, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1391, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           27631 (count: 1391, min: 0, max: 139, avg: 19.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1391
Number of successful refinements:     1391
Number of failed refinements:         0
Max. size of reached set before ref.: 134075
Max. size of reached set after ref.:  98253
Avg. size of reached set before ref.: 21293.11
Avg. size of reached set after ref.:  15298.93

Total time for CEGAR algorithm:     896.908s
Time for refinements:                67.955s
Average time for refinement:          0.048s
Max time for refinement:              0.507s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1476
  Total lines:            1833
  Line coverage:          0.805
  Visited conditions:     266
  Total conditions:       410
  Condition coverage:     0.649

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             20512
  Number of reached locations:   809 (34%)
    Avg states per location:     25
    Max states per location:     951 (at node N96)
  Number of reached functions:   52 (57%)
  Number of partitions:          20498
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1544 (before line 4547), Function main called from node N1442, stack depth 1 [49d98dc5], stack [main]])
  Number of target states:       0
  Size of final wait list        185

Time for analysis setup:          3.345s
  Time for loading CPAs:          0.724s
  Time for loading parser:        0.454s
  Time for CFA construction:      2.098s
    Time for parsing file(s):     0.588s
    Time for AST to CFA:          0.754s
    Time for CFA sanity check:    0.114s
    Time for post-processing:     0.494s
      Time for var class.:        0.245s
Time for Analysis:              896.908s
CPU time for analysis:          896.790s
Total time for CPAchecker:      900.256s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.323s

Time for Garbage Collector:      81.414s (in 2877 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                922MB (   880 MiB) max;    350MB (   334 MiB) avg;    972MB (   927 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          1071MB (  1022 MiB) max;    511MB (   487 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8705MB (  8302 MiB) max;   8395MB (  8006 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
