scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fvne9yx8/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            88602 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  78549 (89%)
  Because of loop head:            10045 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       88445 (100%)
  Times precision was {false}:     44 (0%)
  Times result was cached:         57 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      56 (0%)
  Times result was 'false':        31 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         82572
  BDD entailment checks:           14332
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          7
Number of abstraction locations:          15
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         414
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 4.14
Number of irrelevant predicates:          213 (51%)
Number of preds handled by boolean abs:   148 (36%)
  Total number of models for allsat:      52
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.93

Time for post operator:                  8.533s
  Time for path formula creation:        8.275s
Time for strengthen operator:            0.853s
Time for prec operator:                  2.085s
  Time for abstraction:                  0.818s (Max:     0.059s, Count: 88602)
    Boolean abstraction:                 0.132s
    Solving time:                        0.179s (Max:     0.048s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.013s (Max:     0.005s)
Time for merge operator:                 0.893s
Time for coverage check:                 0.086s
  Time for BDD entailment checks:        0.064s
Total time for SMT solver (w/o itp):     0.181s

Number of path formula cache hits:   537285 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.564s

Total number of created targets for pointer analysis: 39287
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *signed_int is 319
   Number of created targets for uf: *(char)* is 5
   Number of created targets for uf: *char is 11545


Number of BDD nodes:                               235
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         194 (count: 103396, min: 0, max: 41, avg: 0.00)
Time for BDD node cleanup:                             0.032s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.947s
  Time for transition matches:                         0.480s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       499949 (count: 499949, min: 1, max: 1, avg: 1.00) [1 x 499949]

CPA algorithm statistics
------------------------
Number of iterations:            313282
Max size of waitlist:            22
Average size of waitlist:        14
Number of computed successors:   361792
Max successors for one state:    2
Number of times merged:          34120
Number of times stopped:         48389
Number of times breaked:         8

Total time for CPA algorithm:        24.301s (Max:     9.067s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:      4.544s
  Time for transfer relation:        15.095s
  Time for merge operator:            1.544s
  Time for stop operator:             0.678s
  Time for adding to reached set:     0.790s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  88 (count: 8, min: 8, max: 14, avg: 11.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.457s
  Counterexample analysis:                             0.124s (Max:     0.040s, Calls: 8)
    Refinement sat check:                              0.080s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.018s
  Precision update:                                    0.005s
  ARG update:                                          1.303s

Length of refined path (in blocks):                      66 (count: 8, min: 4, max: 13, avg: 8.25)
Number of affected states:                               49 (count: 8, min: 1, max: 11, avg: 6.13)
Length (states) of path with itp 'true':                  9 (count: 8, min: 0, max: 2, avg: 1.13)
Length (states) of path with itp non-trivial itp:        49 (count: 8, min: 1, max: 11, avg: 6.13)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              41 (count: 8, min: 0, max: 10, avg: 5.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 46001
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 38090.88
Avg. size of reached set after ref.:  6.13

Total time for CEGAR algorithm:      26.161s
Time for refinements:                 1.852s
Average time for refinement:          0.231s
Max time for refinement:              0.352s

Code Coverage
-----------------------------
  Function coverage:      0.275
  Visited lines:          1032
  Total lines:            1833
  Line coverage:          0.563
  Visited conditions:     148
  Total conditions:       410
  Condition coverage:     0.361

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             8695
  Number of reached locations:   409 (17%)
    Avg states per location:     21
    Max states per location:     494 (at node N95)
  Number of reached functions:   25 (27%)
  Number of partitions:          8693
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N745 (before line 3709), Function pt_probe called from node N821, stack depth 4 [6e2262ff], stack [main, pt_init, pt_detect, pt_probe]])
  Number of target states:       0
  Size of final wait list        18

Time for analysis setup:          3.632s
  Time for loading CPAs:          0.664s
  Time for loading parser:        0.503s
  Time for CFA construction:      2.362s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          0.908s
    Time for CFA sanity check:    0.127s
    Time for post-processing:     0.510s
      Time for var class.:        0.239s
Time for Analysis:               26.161s
CPU time for analysis:           26.170s
Total time for CPAchecker:       29.796s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              0.169s

Time for Garbage Collector:       2.929s (in 107 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                138MB (   132 MiB) max;     72MB (    68 MiB) avg;    160MB (   153 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           159MB (   151 MiB) max;    134MB (   128 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
