scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6qx966af/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            53269 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  47114 (88%)
  Because of loop head:            6148 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       51748 (97%)
  Times precision was {false}:     217 (0%)
  Times result was cached:         1263 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      41 (0%)
  Times result was 'false':        13 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         49488
  BDD entailment checks:           8720
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          4
Number of abstraction locations:          29
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1630
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 6.32
Number of irrelevant predicates:          1463 (90%)
Number of preds handled by boolean abs:   49 (3%)
  Total number of models for allsat:      41
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 11.218s
  Time for path formula creation:       11.051s
Time for strengthen operator:            0.404s
Time for prec operator:                  2.581s
  Time for abstraction:                  1.602s (Max:     0.062s, Count: 53269)
    Boolean abstraction:                 0.239s
    Solving time:                        0.666s (Max:     0.042s)
    Model enumeration time:              0.008s
    Time for BDD construction:           0.005s (Max:     0.001s)
Time for merge operator:                 1.092s
Time for coverage check:                 0.090s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     0.674s

Number of path formula cache hits:   191085 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.941s

Total number of created targets for pointer analysis: 98907
   Number of created targets for uf: *(struct_pi_adapter)* is 29
   Number of created targets for uf: *signed_int is 1226
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 1203


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         111 (count: 61818, min: 0, max: 29, avg: 0.00)
Time for BDD node cleanup:                             0.044s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.724s
  Time for transition matches:                         0.389s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       302248 (count: 302248, min: 1, max: 1, avg: 1.00) [1 x 302248]

CPA algorithm statistics
------------------------
Number of iterations:            188904
Max size of waitlist:            61
Average size of waitlist:        28
Number of computed successors:   218133
Max successors for one state:    2
Number of times merged:          20384
Number of times stopped:         28997
Number of times breaked:         7

Total time for CPA algorithm:        25.319s (Max:     6.622s)
  Time for choose from waitlist:      0.216s
  Time for precision adjustment:      4.990s
  Time for transfer relation:        16.223s
  Time for merge operator:            1.645s
  Time for stop operator:             0.546s
  Time for adding to reached set:     0.387s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 123 (count: 7, min: 8, max: 33, avg: 17.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.988s
  Counterexample analysis:                             0.193s (Max:     0.041s, Calls: 7)
    Refinement sat check:                              0.158s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.002s
  ARG update:                                          0.777s

Length of refined path (in blocks):                     109 (count: 7, min: 4, max: 32, avg: 15.57)
Number of affected states:                               95 (count: 7, min: 1, max: 30, avg: 13.57)
Length (states) of path with itp 'true':                  7 (count: 7, min: 0, max: 2, avg: 1.00)
Length (states) of path with itp non-trivial itp:        95 (count: 7, min: 1, max: 30, avg: 13.57)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              88 (count: 7, min: 0, max: 29, avg: 12.57)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 38550
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 25360.29
Avg. size of reached set after ref.:  5.86

Total time for CEGAR algorithm:      26.585s
Time for refinements:                 1.264s
Average time for refinement:          0.180s
Max time for refinement:              0.344s

Code Coverage
-----------------------------
  Function coverage:      0.352
  Visited lines:          1375
  Total lines:            1833
  Line coverage:          0.750
  Visited conditions:     246
  Total conditions:       410
  Condition coverage:     0.600

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             11642
  Number of reached locations:   694 (29%)
    Avg states per location:     16
    Max states per location:     638 (at node N96)
  Number of reached functions:   32 (35%)
  Number of partitions:          11632
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [49d98dc5], stack [main]])
  Number of target states:       0
  Size of final wait list        30

Time for analysis setup:          3.705s
  Time for loading CPAs:          0.743s
  Time for loading parser:        0.565s
  Time for CFA construction:      2.316s
    Time for parsing file(s):     0.642s
    Time for AST to CFA:          0.835s
    Time for CFA sanity check:    0.125s
    Time for post-processing:     0.543s
      Time for var class.:        0.246s
Time for Analysis:               26.585s
CPU time for analysis:           26.570s
Total time for CPAchecker:       30.294s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.323s

Time for Garbage Collector:       2.458s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                137MB (   131 MiB) max;     76MB (    72 MiB) avg;    153MB (   146 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           173MB (   165 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
