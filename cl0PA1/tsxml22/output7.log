scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r5h8xzsq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            31831 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28293 (89%)
  Because of loop head:            3523 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         15 (0%)
  Times precision was empty:       30433 (96%)
  Times precision was {false}:     321 (1%)
  Times result was cached:         986 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      91 (0%)
  Times result was 'false':        110 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         29524
  BDD entailment checks:           5064
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          7
Number of abstraction locations:          55
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         1877
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 4.56
Number of irrelevant predicates:          1340 (71%)
Number of preds handled by boolean abs:   192 (10%)
  Total number of models for allsat:      96
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.05

Time for post operator:                 12.622s
  Time for path formula creation:       12.475s
Time for strengthen operator:            0.329s
Time for prec operator:                  3.180s
  Time for abstraction:                  2.415s (Max:     0.098s, Count: 31831)
    Boolean abstraction:                 0.314s
    Solving time:                        1.327s (Max:     0.094s)
    Model enumeration time:              0.015s
    Time for BDD construction:           0.037s (Max:     0.011s)
Time for merge operator:                 1.229s
Time for coverage check:                 0.113s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):     1.342s

Number of path formula cache hits:   17240 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.791s

Total number of created targets for pointer analysis: 98842
   Number of created targets for uf: *(struct_pi_adapter)* is 25
   Number of created targets for uf: *signed_int is 261
   Number of created targets for uf: *(char)* is 181
   Number of created targets for uf: *char is 30505


Number of BDD nodes:                               218
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         268 (count: 37736, min: 0, max: 158, avg: 0.01)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.634s
  Time for transition matches:                         0.388s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       179608 (count: 179608, min: 1, max: 1, avg: 1.00) [1 x 179608]

CPA algorithm statistics
------------------------
Number of iterations:            112632
Max size of waitlist:            44
Average size of waitlist:        23
Number of computed successors:   130180
Max successors for one state:    2
Number of times merged:          12230
Number of times stopped:         17206
Number of times breaked:         15

Total time for CPA algorithm:        25.242s (Max:     3.181s)
  Time for choose from waitlist:      0.245s
  Time for precision adjustment:      4.517s
  Time for transfer relation:        16.532s
  Time for merge operator:            1.712s
  Time for stop operator:             0.687s
  Time for adding to reached set:     0.480s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 397 (count: 15, min: 14, max: 66, avg: 26.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.894s
  Counterexample analysis:                             0.390s (Max:     0.060s, Calls: 15)
    Refinement sat check:                              0.314s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.031s
  ARG update:                                          0.444s

Length of refined path (in blocks):                     208 (count: 15, min: 4, max: 56, avg: 13.87)
Number of affected states:                              136 (count: 15, min: 0, max: 53, avg: 9.07)
Length (states) of path with itp 'true':                 57 (count: 15, min: 0, max: 35, avg: 3.80)
Length (states) of path with itp non-trivial itp:       136 (count: 15, min: 0, max: 53, avg: 9.07)
Length (states) of path with itp 'false':                15 (count: 15, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 15, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             122 (count: 15, min: 0, max: 52, avg: 8.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     15
Number of failed refinements:         0
Max. size of reached set before ref.: 19594
Max. size of reached set after ref.:  293
Avg. size of reached set before ref.: 7053.80
Avg. size of reached set after ref.:  26.13

Total time for CEGAR algorithm:      26.405s
Time for refinements:                 1.161s
Average time for refinement:          0.077s
Max time for refinement:              0.160s

Code Coverage
-----------------------------
  Function coverage:      0.275
  Visited lines:          1091
  Total lines:            1833
  Line coverage:          0.595
  Visited conditions:     170
  Total conditions:       410
  Condition coverage:     0.415

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             7449
  Number of reached locations:   477 (20%)
    Avg states per location:     15
    Max states per location:     395 (at node N96)
  Number of reached functions:   25 (27%)
  Number of partitions:          7442
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N807 (before line 3778), Function pt_detect called from node N1331, stack depth 3 [1a70a5b8], stack [main, pt_init, pt_detect]])
  Number of target states:       0
  Size of final wait list        36

Time for analysis setup:          3.889s
  Time for loading CPAs:          0.758s
  Time for loading parser:        0.585s
  Time for CFA construction:      2.415s
    Time for parsing file(s):     0.710s
    Time for AST to CFA:          0.823s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.576s
      Time for var class.:        0.267s
Time for Analysis:               26.405s
CPU time for analysis:           26.410s
Total time for CPAchecker:       30.299s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.215s

Time for Garbage Collector:       1.805s (in 70 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                146MB (   139 MiB) max;     73MB (    69 MiB) avg;    149MB (   142 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           150MB (   143 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
