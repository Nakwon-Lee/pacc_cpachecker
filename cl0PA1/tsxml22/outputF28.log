scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0dcpqlxo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2657242 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2303636 (87%)
  Because of loop head:            352164 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1442 (0%)
  Times precision was empty:       85458 (3%)
  Times precision was {false}:     3030 (0%)
  Times result was cached:         2536630 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      32124 (1%)
  Times result was 'false':        59770 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2153476
  BDD entailment checks:           591136
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          192
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         18647631
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 530.46
Number of irrelevant predicates:          5873532 (31%)
Number of preds handled by boolean abs:   157210 (1%)
  Total number of models for allsat:      35263
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.10

Time for post operator:                 63.913s
  Time for path formula creation:       60.332s
Time for strengthen operator:            8.643s
Time for prec operator:                591.222s
  Time for abstraction:                573.478s (Max:     1.614s, Count: 2657242)
    Boolean abstraction:               108.755s
    Solving time:                      105.930s (Max:     0.171s)
    Model enumeration time:             10.636s
    Time for BDD construction:           0.529s (Max:     0.008s)
Time for merge operator:                 4.394s
Time for coverage check:                 0.694s
  Time for BDD entailment checks:        0.463s
Total time for SMT solver (w/o itp):   116.566s

Number of path formula cache hits:   17632985 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.020s

Total number of created targets for pointer analysis: 1230130
   Number of created targets for uf: *(struct_pi_adapter)* is 1645
   Number of created targets for uf: *signed_int is 12594
   Number of created targets for uf: *(char)* is 937
   Number of created targets for uf: *char is 233249


Number of BDD nodes:                               1986
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       65047 (count: 889922, min: 0, max: 261, avg: 0.07)
Time for BDD node cleanup:                             0.147s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.687s
  Time for transition matches:                         7.627s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     15426505 (count: 15426505, min: 1, max: 1, avg: 1.00) [1 x 15426505]

CPA algorithm statistics
------------------------
Number of iterations:            8992982
Max size of waitlist:            962
Average size of waitlist:        333
Number of computed successors:   10320601
Max successors for one state:    2
Number of times merged:          781170
Number of times stopped:         1120304
Number of times breaked:         1442

Total time for CPA algorithm:       811.997s (Max:     9.681s)
  Time for choose from waitlist:      2.230s
  Time for precision adjustment:    626.846s
  Time for transfer relation:       146.600s
  Time for merge operator:            9.473s
  Time for stop operator:             6.791s
  Time for adding to reached set:     6.171s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1442
Avg. length of target path (in blocks):               75215 (count: 1442, min: 8, max: 156, avg: 52.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  49.606s
  Counterexample analysis:                            31.575s (Max:     0.182s, Calls: 1442)
    Refinement sat check:                             24.716s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.034s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.218s
  Precision update:                                    0.699s
  ARG update:                                         16.714s

Length of refined path (in blocks):                   70202 (count: 1442, min: 4, max: 142, avg: 48.68)
Number of affected states:                            31120 (count: 1442, min: 0, max: 140, avg: 21.58)
Length (states) of path with itp 'true':              37640 (count: 1442, min: 0, max: 104, avg: 26.10)
Length (states) of path with itp non-trivial itp:     31120 (count: 1442, min: 0, max: 140, avg: 21.58)
Length (states) of path with itp 'false':              1442 (count: 1442, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1442, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           29969 (count: 1442, min: 0, max: 139, avg: 20.78)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1442
Number of successful refinements:     1442
Number of failed refinements:         0
Max. size of reached set before ref.: 151443
Max. size of reached set after ref.:  148243
Avg. size of reached set before ref.: 22026.67
Avg. size of reached set after ref.:  15703.96

Total time for CEGAR algorithm:     896.943s
Time for refinements:                70.590s
Average time for refinement:          0.048s
Max time for refinement:              2.279s

Code Coverage
-----------------------------
  Function coverage:      0.593
  Visited lines:          1527
  Total lines:            1833
  Line coverage:          0.833
  Visited conditions:     286
  Total conditions:       410
  Condition coverage:     0.698

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             23184
  Number of reached locations:   876 (37%)
    Avg states per location:     26
    Max states per location:     937 (at node N96)
  Number of reached functions:   54 (59%)
  Number of partitions:          23152
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [1d81e101], stack [main]])
  Number of target states:       0
  Size of final wait list        313

Time for analysis setup:          3.416s
  Time for loading CPAs:          0.639s
  Time for loading parser:        0.464s
  Time for CFA construction:      2.207s
    Time for parsing file(s):     0.619s
    Time for AST to CFA:          0.798s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.508s
      Time for var class.:        0.240s
Time for Analysis:              896.943s
CPU time for analysis:          896.840s
Total time for CPAchecker:      900.363s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.360s

Time for Garbage Collector:      82.340s (in 2941 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                956MB (   912 MiB) max;    374MB (   357 MiB) avg;    993MB (   947 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1022MB (   975 MiB) max;    542MB (   517 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8835MB (  8426 MiB) max;   8484MB (  8091 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
