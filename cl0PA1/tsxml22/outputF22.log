scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__qphri0e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2050177 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1813013 (88%)
  Because of loop head:            236940 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         224 (0%)
  Times precision was empty:       152844 (7%)
  Times precision was {false}:     7910 (0%)
  Times result was cached:         1852899 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36524 (2%)
  Times result was 'false':        8871 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1914195
  BDD entailment checks:           338461
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          9
Number of abstraction locations:          136
Max number of predicates per location:    9
Avg number of predicates per location:    6
Total predicates per abstraction:         10475730
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 235.76
Number of irrelevant predicates:          4796498 (46%)
Number of preds handled by boolean abs:   161610 (2%)
  Total number of models for allsat:      38999
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.07

Time for post operator:                203.182s
  Time for path formula creation:      199.462s
Time for strengthen operator:            7.085s
Time for prec operator:                462.273s
  Time for abstraction:                443.646s (Max:     3.246s, Count: 2050177)
    Boolean abstraction:               130.317s
    Solving time:                      142.080s (Max:     0.229s)
    Model enumeration time:             10.469s
    Time for BDD construction:           0.661s (Max:     0.012s)
Time for merge operator:                20.391s
Time for coverage check:                 0.648s
  Time for BDD entailment checks:        0.456s
Total time for SMT solver (w/o itp):   152.549s

Number of path formula cache hits:   8119718 (61%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   163.138s

Total number of created targets for pointer analysis: 3648576
   Number of created targets for uf: *(struct_pi_adapter)* is 741
   Number of created targets for uf: *signed_int is 9853
   Number of created targets for uf: *(char)* is 9
   Number of created targets for uf: *char is 1144825


Number of BDD nodes:                               625
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       73386 (count: 750617, min: 0, max: 1261, avg: 0.10)
Time for BDD node cleanup:                             0.171s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.143s
  Time for transition matches:                         7.101s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                     11621304 (count: 11621304, min: 1, max: 1, avg: 1.00) [1 x 11621304]

CPA algorithm statistics
------------------------
Number of iterations:            7283722
Max size of waitlist:            144
Average size of waitlist:        40
Number of computed successors:   8416840
Max successors for one state:    2
Number of times merged:          787867
Number of times stopped:         1115147
Number of times breaked:         224

Total time for CPA algorithm:       861.423s (Max:    21.928s)
  Time for choose from waitlist:      2.546s
  Time for precision adjustment:    508.072s
  Time for transfer relation:       285.553s
  Time for merge operator:           32.686s
  Time for stop operator:             7.355s
  Time for adding to reached set:     9.359s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   224
Avg. length of target path (in blocks):               18713 (count: 224, min: 8, max: 422, avg: 83.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.617s
  Counterexample analysis:                            16.001s (Max:     0.463s, Calls: 224)
    Refinement sat check:                             11.523s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.088s
  Precision update:                                    0.110s
  ARG update:                                         14.199s

Length of refined path (in blocks):                   17750 (count: 224, min: 4, max: 419, avg: 79.24)
Number of affected states:                            16850 (count: 224, min: 0, max: 418, avg: 75.22)
Length (states) of path with itp 'true':                676 (count: 224, min: 0, max: 113, avg: 3.02)
Length (states) of path with itp non-trivial itp:     16850 (count: 224, min: 0, max: 418, avg: 75.22)
Length (states) of path with itp 'false':               224 (count: 224, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 224, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           16631 (count: 224, min: 0, max: 417, avg: 74.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                224
Number of successful refinements:     224
Number of failed refinements:         0
Max. size of reached set before ref.: 88309
Max. size of reached set after ref.:  11102
Avg. size of reached set before ref.: 33477.04
Avg. size of reached set after ref.:  1017.51

Total time for CEGAR algorithm:     896.517s
Time for refinements:                34.960s
Average time for refinement:          0.156s
Max time for refinement:              0.699s

Code Coverage
-----------------------------
  Function coverage:      0.374
  Visited lines:          1295
  Total lines:            1833
  Line coverage:          0.706
  Visited conditions:     230
  Total conditions:       410
  Condition coverage:     0.561

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             21889
  Number of reached locations:   654 (27%)
    Avg states per location:     33
    Max states per location:     1221 (at node N96)
  Number of reached functions:   34 (37%)
  Number of partitions:          21881
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [1d81e101], stack [main]])
  Number of target states:       0
  Size of final wait list        31

Time for analysis setup:          3.754s
  Time for loading CPAs:          0.797s
  Time for loading parser:        0.531s
  Time for CFA construction:      2.310s
    Time for parsing file(s):     0.693s
    Time for AST to CFA:          0.840s
    Time for CFA sanity check:    0.131s
    Time for post-processing:     0.479s
      Time for var class.:        0.245s
Time for Analysis:              896.517s
CPU time for analysis:          896.490s
Total time for CPAchecker:      900.275s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.341s

Time for Garbage Collector:      80.114s (in 678 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2608MB (  2487 MiB) max;   1188MB (  1133 MiB) avg;   2703MB (  2578 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     38MB (    37 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:          3497MB (  3335 MiB) max;   1759MB (  1678 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:  10584MB ( 10093 MiB) max;   9072MB (  8652 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
