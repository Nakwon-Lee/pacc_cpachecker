scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--block--paride--pt.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2hbkud6c/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3196: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3240: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4017: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4207: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4617: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 2944: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2981053 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2638294 (89%)
  Because of loop head:            340130 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2629 (0%)
  Times precision was empty:       187129 (6%)
  Times precision was {false}:     2393 (0%)
  Times result was cached:         2767901 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23630 (1%)
  Times result was 'false':        24650 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2608658
  BDD entailment checks:           498768
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       36
Number of predicates discovered:          10
Number of abstraction locations:          195
Max number of predicates per location:    8
Avg number of predicates per location:    5
Total predicates per abstraction:         15445614
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 593.54
Number of irrelevant predicates:          2511626 (16%)
Number of preds handled by boolean abs:   82060 (1%)
  Total number of models for allsat:      24614
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.04

Time for post operator:                 62.848s
  Time for path formula creation:       58.406s
Time for strengthen operator:            9.708s
Time for prec operator:                526.559s
  Time for abstraction:                506.005s (Max:     1.584s, Count: 2981053)
    Boolean abstraction:                49.569s
    Solving time:                       48.873s (Max:     0.218s)
    Model enumeration time:              3.621s
    Time for BDD construction:           0.433s (Max:     0.024s)
Time for merge operator:                 5.595s
Time for coverage check:                 0.661s
  Time for BDD entailment checks:        0.393s
Total time for SMT solver (w/o itp):    52.494s

Number of path formula cache hits:   19417793 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    26.085s

Total number of created targets for pointer analysis: 627785
   Number of created targets for uf: *(struct_pi_adapter)* is 521
   Number of created targets for uf: *signed_int is 5078
   Number of created targets for uf: *(char)* is 709
   Number of created targets for uf: *char is 120415


Number of BDD nodes:                               706
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       47756 (count: 841457, min: 0, max: 538, avg: 0.06)
Time for BDD node cleanup:                             0.109s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 15.044s
  Time for transition matches:                         8.598s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                     16413642 (count: 16413642, min: 1, max: 1, avg: 1.00) [1 x 16413642]

CPA algorithm statistics
------------------------
Number of iterations:            10334590
Max size of waitlist:            99
Average size of waitlist:        30
Number of computed successors:   11883578
Max successors for one state:    2
Number of times merged:          1054945
Number of times stopped:         1507110
Number of times breaked:         2629

Total time for CPA algorithm:       784.389s (Max:    11.800s)
  Time for choose from waitlist:      2.346s
  Time for precision adjustment:    573.105s
  Time for transfer relation:       159.557s
  Time for merge operator:           13.908s
  Time for stop operator:             8.053s
  Time for adding to reached set:     8.920s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2629
Avg. length of target path (in blocks):              178616 (count: 2629, min: 8, max: 176, avg: 67.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  78.777s
  Counterexample analysis:                            54.966s (Max:     0.155s, Calls: 2629)
    Refinement sat check:                             37.854s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.088s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.482s
  Precision update:                                    1.041s
  ARG update:                                         21.401s

Length of refined path (in blocks):                  173125 (count: 2629, min: 4, max: 169, avg: 65.85)
Number of affected states:                            97100 (count: 2629, min: 0, max: 168, avg: 36.93)
Length (states) of path with itp 'true':              73396 (count: 2629, min: 0, max: 102, avg: 27.92)
Length (states) of path with itp non-trivial itp:     97100 (count: 2629, min: 0, max: 168, avg: 36.93)
Length (states) of path with itp 'false':              2629 (count: 2629, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2629, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           94673 (count: 2629, min: 0, max: 167, avg: 36.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2629
Number of successful refinements:     2629
Number of failed refinements:         0
Max. size of reached set before ref.: 108766
Max. size of reached set after ref.:  100585
Avg. size of reached set before ref.: 10945.05
Avg. size of reached set after ref.:  7041.59

Total time for CEGAR algorithm:     896.365s
Time for refinements:               100.471s
Average time for refinement:          0.038s
Max time for refinement:              1.792s

Code Coverage
-----------------------------
  Function coverage:      0.604
  Visited lines:          1367
  Total lines:            1833
  Line coverage:          0.746
  Visited conditions:     240
  Total conditions:       410
  Condition coverage:     0.585

CPAchecker general statistics
-----------------------------
Number of program locations:     2397
Number of CFA edges:             2680
Number of relevant variables:    297
Number of functions:             91
Number of loops:                 17
Size of reached set:             89628
  Number of reached locations:   766 (32%)
    Avg states per location:     117
    Max states per location:     5130 (at node N95)
  Number of reached functions:   55 (60%)
  Number of partitions:          89617
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1451 (before line 4465), Function main called from node N1442, stack depth 1 [1d81e101], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          3.934s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.579s
  Time for CFA construction:      2.484s
    Time for parsing file(s):     0.724s
    Time for AST to CFA:          0.843s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.591s
      Time for var class.:        0.273s
Time for Analysis:              896.365s
CPU time for analysis:          896.290s
Total time for CPAchecker:      900.303s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              1.033s

Time for Garbage Collector:      96.714s (in 2452 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                840MB (   801 MiB) max;    374MB (   357 MiB) avg;    855MB (   816 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           859MB (   819 MiB) max;    557MB (   531 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8497MB (  8103 MiB) max;   8327MB (  7941 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
