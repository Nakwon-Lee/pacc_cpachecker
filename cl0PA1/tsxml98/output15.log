scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iepircuc/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            32739 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  27671 (85%)
  Because of loop head:            5018 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       17898 (55%)
  Times precision was {false}:     1595 (5%)
  Times result was cached:         12559 (38%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      687 (2%)
  Times result was 'false':        349 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         18624
  BDD entailment checks:           8110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          11
Number of abstraction locations:          108
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         29823
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 13.07
Number of irrelevant predicates:          25402 (85%)
Number of preds handled by boolean abs:   870 (3%)
  Total number of models for allsat:      738
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  6.935s
  Time for path formula creation:        6.794s
Time for strengthen operator:            0.255s
Time for prec operator:                  8.784s
  Time for abstraction:                  8.081s (Max:     0.034s, Count: 32739)
    Boolean abstraction:                 0.869s
    Solving time:                        2.563s (Max:     0.020s)
    Model enumeration time:              0.064s
    Time for BDD construction:           0.118s (Max:     0.009s)
Time for merge operator:                 0.316s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.034s
Total time for SMT solver (w/o itp):     2.627s

Number of path formula cache hits:   131344 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.201s

Total number of created targets for pointer analysis: 25248
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *(unsigned_char)* is 20
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 73
   Number of created targets for uf: *(struct_fb_info)* is 5
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1472 (count: 38275, min: 0, max: 110, avg: 0.04)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.406s
Automaton transfers with branching:                0
Automaton transfer successors:                       157392 (count: 157397, min: 0, max: 1, avg: 1.00) [0 x 5, 1 x 157392]

CPA algorithm statistics
------------------------
Number of iterations:            106260
Max size of waitlist:            32
Average size of waitlist:        21
Number of computed successors:   118885
Max successors for one state:    2
Number of times merged:          5257
Number of times stopped:         12021
Number of times breaked:         50

Total time for CPA algorithm:        22.280s (Max:     3.903s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:     10.115s
  Time for transfer relation:        10.186s
  Time for merge operator:            0.519s
  Time for stop operator:             0.255s
  Time for adding to reached set:     0.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                6391 (count: 50, min: 6, max: 163, avg: 127.82)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.123s
  Counterexample analysis:                             2.625s (Max:     0.110s, Calls: 50)
    Refinement sat check:                              1.254s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.034s
  ARG update:                                          0.341s

Length of refined path (in blocks):                    5957 (count: 49, min: 5, max: 160, avg: 121.57)
Number of affected states:                             1081 (count: 49, min: 2, max: 124, avg: 22.06)
Length (states) of path with itp 'true':               4827 (count: 49, min: 1, max: 125, avg: 98.51)
Length (states) of path with itp non-trivial itp:      1081 (count: 49, min: 2, max: 124, avg: 22.06)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 49, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:            1029 (count: 49, min: 1, max: 123, avg: 21.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 14793
Max. size of reached set after ref.:  12499
Avg. size of reached set before ref.: 11760.78
Avg. size of reached set after ref.:  9827.00

Total time for CEGAR algorithm:      26.538s
Time for refinements:                 3.891s
Average time for refinement:          0.077s
Max time for refinement:              0.144s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          2621
  Total lines:            3007
  Line coverage:          0.872
  Visited conditions:     647
  Total conditions:       782
  Condition coverage:     0.827

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             12749
  Number of reached locations:   1809 (45%)
    Avg states per location:     7
    Max states per location:     539 (at node N3229)
  Number of reached functions:   78 (66%)
  Number of partitions:          12723
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2929 (before line 7199), Function ufx_alloc_urb_list called from node N2493, stack depth 3 [635d34a9], stack [main, ufx_usb_probe, ufx_alloc_urb_list]])
  Number of target states:       1
  Size of final wait list        27

Time for analysis setup:          3.779s
  Time for loading CPAs:          0.686s
  Time for loading parser:        0.490s
  Time for CFA construction:      2.500s
    Time for parsing file(s):     0.624s
    Time for AST to CFA:          0.868s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.666s
      Time for var class.:        0.309s
Time for Analysis:               26.538s
CPU time for analysis:           26.530s
Total time for CPAchecker:       30.320s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.249s

Time for Garbage Collector:       0.965s (in 68 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   113 MiB) max;     74MB (    70 MiB) avg;    123MB (   117 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
