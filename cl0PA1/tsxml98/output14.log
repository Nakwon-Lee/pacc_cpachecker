scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_o0myb5g5/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            72744 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  61992 (85%)
  Because of loop head:            10592 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         160 (0%)
  Times precision was empty:       24881 (34%)
  Times precision was {false}:     523 (1%)
  Times result was cached:         45302 (62%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2038 (3%)
  Times result was 'false':        1256 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         45230
  BDD entailment checks:           16738
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          5
Number of abstraction locations:          155
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         182254
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 71.17
Number of irrelevant predicates:          57146 (31%)
Number of preds handled by boolean abs:   4633 (3%)
  Total number of models for allsat:      2037
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.631s
  Time for path formula creation:        3.409s
Time for strengthen operator:            0.365s
Time for prec operator:                 12.070s
  Time for abstraction:                 11.368s (Max:     0.041s, Count: 72744)
    Boolean abstraction:                 1.850s
    Solving time:                        1.944s (Max:     0.038s)
    Model enumeration time:              0.119s
    Time for BDD construction:           0.081s (Max:     0.008s)
Time for merge operator:                 0.129s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     2.063s

Number of path formula cache hits:   478019 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.723s

Total number of created targets for pointer analysis: 915
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *unsigned_int is 15
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               214
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4117 (count: 56557, min: 0, max: 96, avg: 0.07)
Time for BDD node cleanup:                             0.036s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.777s
  Time for transition matches:                         0.417s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                       415659 (count: 415816, min: 0, max: 1, avg: 1.00) [0 x 157, 1 x 415659]

CPA algorithm statistics
------------------------
Number of iterations:            238916
Max size of waitlist:            79
Average size of waitlist:        27
Number of computed successors:   273735
Max successors for one state:    2
Number of times merged:          14246
Number of times stopped:         24995
Number of times breaked:         160

Total time for CPA algorithm:        24.040s (Max:     0.778s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:     13.767s
  Time for transfer relation:         8.219s
  Time for merge operator:            0.393s
  Time for stop operator:             0.372s
  Time for adding to reached set:     0.350s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   160
Avg. length of target path (in blocks):                3136 (count: 160, min: 6, max: 41, avg: 19.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.871s
  Counterexample analysis:                             1.139s (Max:     0.018s, Calls: 160)
    Refinement sat check:                              0.715s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.062s
  Precision update:                                    0.100s
  ARG update:                                          0.509s

Length of refined path (in blocks):                    2976 (count: 160, min: 5, max: 40, avg: 18.60)
Number of affected states:                             2656 (count: 160, min: 3, max: 38, avg: 16.60)
Length (states) of path with itp 'true':                160 (count: 160, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      2656 (count: 160, min: 3, max: 38, avg: 16.60)
Length (states) of path with itp 'false':               160 (count: 160, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 160, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2496 (count: 160, min: 2, max: 37, avg: 15.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                160
Number of successful refinements:     160
Number of failed refinements:         0
Max. size of reached set before ref.: 3400
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 1545.41
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      26.241s
Time for refinements:                 2.196s
Average time for refinement:          0.013s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.407
  Visited lines:          1325
  Total lines:            3007
  Line coverage:          0.441
  Visited conditions:     197
  Total conditions:       782
  Condition coverage:     0.252

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             1179
  Number of reached locations:   583 (14%)
    Avg states per location:     2
    Max states per location:     41 (at node N3230)
  Number of reached functions:   48 (41%)
  Number of partitions:          1179
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        24

Time for analysis setup:          4.067s
  Time for loading CPAs:          0.734s
  Time for loading parser:        0.534s
  Time for CFA construction:      2.684s
    Time for parsing file(s):     0.654s
    Time for AST to CFA:          0.935s
    Time for CFA sanity check:    0.239s
    Time for post-processing:     0.728s
      Time for var class.:        0.350s
Time for Analysis:               26.241s
CPU time for analysis:           26.230s
Total time for CPAchecker:       30.311s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.084s

Time for Garbage Collector:       0.946s (in 140 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     51MB (    48 MiB) avg;     80MB (    76 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
