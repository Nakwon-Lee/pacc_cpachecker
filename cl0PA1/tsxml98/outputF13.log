scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ox_7cat2/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1738683 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1537930 (88%)
  Because of loop head:            199642 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1111 (0%)
  Times precision was empty:       186229 (11%)
  Times precision was {false}:     4550 (0%)
  Times result was cached:         1496835 (86%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      51069 (3%)
  Times result was 'false':        34587 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1034599
  BDD entailment checks:           357563
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          12
Number of abstraction locations:          352
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         9304172
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 167.28
Number of irrelevant predicates:          3329168 (36%)
Number of preds handled by boolean abs:   197052 (2%)
  Total number of models for allsat:      56059
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.10

Time for post operator:                 54.995s
  Time for path formula creation:       52.636s
Time for strengthen operator:            5.400s
Time for prec operator:                394.968s
  Time for abstraction:                380.980s (Max:     1.001s, Count: 1738683)
    Boolean abstraction:                97.061s
    Solving time:                       90.518s (Max:     0.091s)
    Model enumeration time:              8.447s
    Time for BDD construction:           0.774s (Max:     0.008s)
Time for merge operator:                 3.076s
Time for coverage check:                 0.336s
  Time for BDD entailment checks:        0.227s
Total time for SMT solver (w/o itp):    98.965s

Number of path formula cache hits:   10652449 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    28.568s

Total number of created targets for pointer analysis: 293848
   Number of created targets for uf: *signed_int is 538
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *(unsigned_char)* is 329
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 262
   Number of created targets for uf: *(struct_fb_info)* is 5
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               844
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      102183 (count: 881131, min: 0, max: 748, avg: 0.12)
Time for BDD node cleanup:                             0.134s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.144s
  Time for transition matches:                         5.194s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      9261678 (count: 9262969, min: 0, max: 1, avg: 1.00) [0 x 1291, 1 x 9261678]

CPA algorithm statistics
------------------------
Number of iterations:            6005700
Max size of waitlist:            513
Average size of waitlist:        164
Number of computed successors:   6779024
Max successors for one state:    2
Number of times merged:          338518
Number of times stopped:         607517
Number of times breaked:         1111

Total time for CPA algorithm:       570.986s (Max:     4.106s)
  Time for choose from waitlist:      1.639s
  Time for precision adjustment:    420.754s
  Time for transfer relation:       122.239s
  Time for merge operator:            6.127s
  Time for stop operator:             4.938s
  Time for adding to reached set:     5.480s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1111
Avg. length of target path (in blocks):              145632 (count: 1111, min: 6, max: 307, avg: 131.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  51.981s
  Counterexample analysis:                            41.365s (Max:     0.144s, Calls: 1111)
    Refinement sat check:                             18.956s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.073s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.409s
  Precision update:                                    1.069s
  ARG update:                                          8.451s

Length of refined path (in blocks):                  143145 (count: 1111, min: 5, max: 306, avg: 128.84)
Number of affected states:                            83514 (count: 1111, min: 2, max: 304, avg: 75.17)
Length (states) of path with itp 'true':              58520 (count: 1111, min: 1, max: 131, avg: 52.67)
Length (states) of path with itp non-trivial itp:     83514 (count: 1111, min: 2, max: 304, avg: 75.17)
Length (states) of path with itp 'false':              1111 (count: 1111, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 1111, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           82400 (count: 1111, min: 1, max: 303, avg: 74.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1111
Number of successful refinements:     1111
Number of failed refinements:         0
Max. size of reached set before ref.: 27847
Max. size of reached set after ref.:  22270
Avg. size of reached set before ref.: 10074.16
Avg. size of reached set after ref.:  4563.69

Total time for CEGAR algorithm:     632.799s
Time for refinements:                59.063s
Average time for refinement:          0.053s
Max time for refinement:              1.006s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          2699
  Total lines:            3007
  Line coverage:          0.898
  Visited conditions:     669
  Total conditions:       782
  Condition coverage:     0.855

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             14787
  Number of reached locations:   1868 (46%)
    Avg states per location:     7
    Max states per location:     593 (at node N3229)
  Number of reached functions:   78 (66%)
  Number of partitions:          14767
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [340862a7], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0

Time for analysis setup:          3.944s
  Time for loading CPAs:          0.778s
  Time for loading parser:        0.514s
  Time for CFA construction:      2.543s
    Time for parsing file(s):     0.749s
    Time for AST to CFA:          0.801s
    Time for CFA sanity check:    0.217s
    Time for post-processing:     0.639s
      Time for var class.:        0.299s
Time for Analysis:              632.800s
CPU time for analysis:          632.720s
Time for analyzing result:        0.015s
Total time for CPAchecker:      636.748s
Total CPU time for CPAchecker:  636.660s
Time for statistics:              0.315s

Time for Garbage Collector:      34.560s (in 1915 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                593MB (   565 MiB) max;    288MB (   274 MiB) avg;    620MB (   591 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           674MB (   643 MiB) max;    437MB (   417 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9107MB (  8685 MiB) max;   8500MB (  8107 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
