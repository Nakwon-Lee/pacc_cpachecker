scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vqzmv69a/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1784737 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1479193 (83%)
  Because of loop head:            304966 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         578 (0%)
  Times precision was empty:       266019 (15%)
  Times precision was {false}:     24542 (1%)
  Times result was cached:         1421649 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      72527 (4%)
  Times result was 'false':        6553 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         933783
  BDD entailment checks:           403295
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          13
Number of abstraction locations:          308
Max number of predicates per location:    11
Avg number of predicates per location:    5
Total predicates per abstraction:         6049756
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 62.32
Number of irrelevant predicates:          2239575 (37%)
Number of preds handled by boolean abs:   163401 (3%)
  Total number of models for allsat:      73713
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                103.280s
  Time for path formula creation:      100.911s
Time for strengthen operator:            5.857s
Time for prec operator:                633.773s
  Time for abstraction:                616.759s (Max:     3.817s, Count: 1784737)
    Boolean abstraction:               257.850s
    Solving time:                      337.130s (Max:     3.725s)
    Model enumeration time:             14.222s
    Time for BDD construction:           0.792s (Max:     0.012s)
Time for merge operator:                 3.489s
Time for coverage check:                 0.550s
  Time for BDD entailment checks:        0.422s
Total time for SMT solver (w/o itp):   351.361s

Number of path formula cache hits:   8471478 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    80.838s

Total number of created targets for pointer analysis: 1399879
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *signed_int is 7550
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_list_head)* is 11
   Number of created targets for uf: *(unsigned_char)* is 55
   Number of created targets for uf: *(struct_ufx_data)* is 2
   Number of created targets for uf: *unsigned_int is 2451
   Number of created targets for uf: *unsigned_long_int is 25
   Number of created targets for uf: *(struct_fb_info)* is 5


Number of BDD nodes:                               1084
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      144875 (count: 1228492, min: 0, max: 1240, avg: 0.12)
Time for BDD node cleanup:                             0.206s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.253s
  Time for transition matches:                         5.019s
  Time for transition assertions:                      0.014s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      8291635 (count: 8292631, min: 0, max: 1, avg: 1.00) [0 x 996, 1 x 8291635]

CPA algorithm statistics
------------------------
Number of iterations:            5622183
Max size of waitlist:            87
Average size of waitlist:        28
Number of computed successors:   6284203
Max successors for one state:    2
Number of times merged:          265244
Number of times stopped:         643266
Number of times breaked:         578

Total time for CPA algorithm:       866.718s (Max:     8.949s)
  Time for choose from waitlist:      1.905s
  Time for precision adjustment:    662.473s
  Time for transfer relation:       172.885s
  Time for merge operator:            6.415s
  Time for stop operator:             5.924s
  Time for adding to reached set:     6.388s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   578
Avg. length of target path (in blocks):               58986 (count: 578, min: 6, max: 291, avg: 102.05)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  25.764s
  Counterexample analysis:                            16.984s (Max:     0.140s, Calls: 578)
    Refinement sat check:                              8.429s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.038s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.240s
  Precision update:                                    0.450s
  ARG update:                                          7.786s

Length of refined path (in blocks):                   57933 (count: 578, min: 5, max: 287, avg: 100.23)
Number of affected states:                            47715 (count: 578, min: 2, max: 274, avg: 82.55)
Length (states) of path with itp 'true':               9640 (count: 578, min: 1, max: 246, avg: 16.68)
Length (states) of path with itp non-trivial itp:     47715 (count: 578, min: 2, max: 274, avg: 82.55)
Length (states) of path with itp 'false':               578 (count: 578, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 578, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:           47134 (count: 578, min: 1, max: 273, avg: 81.55)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                578
Number of successful refinements:     578
Number of failed refinements:         0
Max. size of reached set before ref.: 23045
Max. size of reached set after ref.:  17130
Avg. size of reached set before ref.: 11336.59
Avg. size of reached set after ref.:  1619.27

Total time for CEGAR algorithm:     896.335s
Time for refinements:                29.100s
Average time for refinement:          0.050s
Max time for refinement:              0.183s

Code Coverage
-----------------------------
  Function coverage:      0.661
  Visited lines:          2517
  Total lines:            3007
  Line coverage:          0.837
  Visited conditions:     589
  Total conditions:       782
  Condition coverage:     0.753

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             17777
  Number of reached locations:   1659 (41%)
    Avg states per location:     10
    Max states per location:     703 (at node N3229)
  Number of reached functions:   78 (66%)
  Number of partitions:          17698
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [5687d926], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          4.007s
  Time for loading CPAs:          0.738s
  Time for loading parser:        0.491s
  Time for CFA construction:      2.668s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          0.911s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.710s
      Time for var class.:        0.348s
Time for Analysis:              896.336s
CPU time for analysis:          896.240s
Total time for CPAchecker:      900.345s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.347s

Time for Garbage Collector:      32.044s (in 836 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1096MB (  1045 MiB) max;    564MB (   538 MiB) avg;   1112MB (  1061 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1455MB (  1388 MiB) max;    835MB (   796 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:  13742MB ( 13105 MiB) max;  11257MB ( 10735 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
