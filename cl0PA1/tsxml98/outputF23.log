scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ccmk73vr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1103764 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  976724 (88%)
  Because of loop head:            126306 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         734 (0%)
  Times precision was empty:       214974 (19%)
  Times precision was {false}:     5414 (0%)
  Times result was cached:         849195 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      34181 (3%)
  Times result was 'false':        12729 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         585879
  BDD entailment checks:           194155
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          13
Number of abstraction locations:          316
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         4956283
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 125.17
Number of irrelevant predicates:          2835701 (57%)
Number of preds handled by boolean abs:   127116 (3%)
  Total number of models for allsat:      39846
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.17

Time for post operator:                 37.991s
  Time for path formula creation:       36.379s
Time for strengthen operator:            3.303s
Time for prec operator:                740.143s
  Time for abstraction:                732.316s (Max:     4.371s, Count: 1103764)
    Boolean abstraction:               582.079s
    Solving time:                      563.521s (Max:     4.242s)
    Model enumeration time:             23.308s
    Time for BDD construction:           0.603s (Max:     0.009s)
Time for merge operator:                 1.911s
Time for coverage check:                 0.250s
  Time for BDD entailment checks:        0.177s
Total time for SMT solver (w/o itp):   586.831s

Number of path formula cache hits:   6470362 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    26.039s

Total number of created targets for pointer analysis: 261532
   Number of created targets for uf: *signed_int is 675
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *(unsigned_char)* is 244
   Number of created targets for uf: *(struct_ufx_data)* is 4
   Number of created targets for uf: *unsigned_int is 73
   Number of created targets for uf: *(struct_fb_info)* is 5
   Number of created targets for uf: *unsigned_long_int is 3


Number of BDD nodes:                               605
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       68748 (count: 644318, min: 0, max: 923, avg: 0.11)
Time for BDD node cleanup:                             0.114s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.608s
  Time for transition matches:                         3.386s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.020s
Automaton transfers with branching:                0
Automaton transfer successors:                      5722671 (count: 5723881, min: 0, max: 1, avg: 1.00) [0 x 1210, 1 x 5722671]

CPA algorithm statistics
------------------------
Number of iterations:            3699651
Max size of waitlist:            268
Average size of waitlist:        110
Number of computed successors:   4168733
Max successors for one state:    2
Number of times merged:          195862
Number of times stopped:         366052
Number of times breaked:         734

Total time for CPA algorithm:       856.124s (Max:    12.052s)
  Time for choose from waitlist:      1.156s
  Time for precision adjustment:    756.808s
  Time for transfer relation:        80.707s
  Time for merge operator:            3.763s
  Time for stop operator:             3.147s
  Time for adding to reached set:     3.896s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   734
Avg. length of target path (in blocks):               96863 (count: 734, min: 6, max: 295, avg: 131.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.971s
  Counterexample analysis:                            28.693s (Max:     0.157s, Calls: 734)
    Refinement sat check:                             12.729s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.052s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.341s
  Precision update:                                    0.464s
  ARG update:                                          4.942s

Length of refined path (in blocks):                   94860 (count: 734, min: 5, max: 294, avg: 129.24)
Number of affected states:                            65437 (count: 734, min: 3, max: 292, avg: 89.15)
Length (states) of path with itp 'true':              28689 (count: 734, min: 1, max: 268, avg: 39.09)
Length (states) of path with itp non-trivial itp:     65437 (count: 734, min: 3, max: 292, avg: 89.15)
Length (states) of path with itp 'false':               734 (count: 734, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 734, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           64700 (count: 734, min: 2, max: 291, avg: 88.15)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                734
Number of successful refinements:     734
Number of failed refinements:         0
Max. size of reached set before ref.: 13515
Max. size of reached set after ref.:  11783
Avg. size of reached set before ref.: 8086.75
Avg. size of reached set after ref.:  2938.14

Total time for CEGAR algorithm:     896.539s
Time for refinements:                39.233s
Average time for refinement:          0.053s
Max time for refinement:              0.173s

Code Coverage
-----------------------------
  Function coverage:      0.653
  Visited lines:          2610
  Total lines:            3007
  Line coverage:          0.868
  Visited conditions:     645
  Total conditions:       782
  Condition coverage:     0.825

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             10870
  Number of reached locations:   1784 (44%)
    Avg states per location:     6
    Max states per location:     440 (at node N3230)
  Number of reached functions:   77 (65%)
  Number of partitions:          10850
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2265 (before line 6471), Function ufx_setup_modes called from node N2650, stack depth 3 [71a666e0], stack [main, ufx_usb_probe, ufx_setup_modes]])
  Number of target states:       0
  Size of final wait list        204

Time for analysis setup:          3.801s
  Time for loading CPAs:          0.627s
  Time for loading parser:        0.524s
  Time for CFA construction:      2.585s
    Time for parsing file(s):     0.726s
    Time for AST to CFA:          0.853s
    Time for CFA sanity check:    0.220s
    Time for post-processing:     0.625s
      Time for var class.:        0.299s
Time for Analysis:              896.540s
CPU time for analysis:          896.340s
Total time for CPAchecker:      900.343s
Total CPU time for CPAchecker:  900.130s
Time for statistics:              0.240s

Time for Garbage Collector:      18.349s (in 1379 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                393MB (   375 MiB) max;    240MB (   229 MiB) avg;    405MB (   386 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           476MB (   454 MiB) max;    370MB (   353 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9371MB (  8937 MiB) max;   8641MB (  8241 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
