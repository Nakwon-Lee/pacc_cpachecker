scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--smscufx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ppt1k7lu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7471: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            225699 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  192834 (85%)
  Because of loop head:            32678 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         187 (0%)
  Times precision was empty:       37793 (17%)
  Times precision was {false}:     10717 (5%)
  Times result was cached:         162018 (72%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15171 (7%)
  Times result was 'false':        3819 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         146574
  BDD entailment checks:           51906
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          9
Number of abstraction locations:          218
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         690983
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 26.69
Number of irrelevant predicates:          478384 (69%)
Number of preds handled by boolean abs:   20228 (3%)
  Total number of models for allsat:      14975
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.99

Time for post operator:                 45.972s
  Time for path formula creation:       45.508s
Time for strengthen operator:            1.183s
Time for prec operator:                810.362s
  Time for abstraction:                807.496s (Max:   213.956s, Count: 225699)
    Boolean abstraction:               451.960s
    Solving time:                      754.548s (Max:   212.903s)
    Model enumeration time:              5.352s
    Time for BDD construction:           0.288s (Max:     0.048s)
Time for merge operator:                 1.906s
Time for coverage check:                 0.142s
  Time for BDD entailment checks:        0.100s
Total time for SMT solver (w/o itp):   759.907s

Number of path formula cache hits:   674589 (50%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    42.020s

Total number of created targets for pointer analysis: 677803
   Number of created targets for uf: *(struct_usb_device)* is 192
   Number of created targets for uf: *signed_int is 9293
   Number of created targets for uf: *(struct_urb)* is 200
   Number of created targets for uf: *(struct_list_head)* is 2907
   Number of created targets for uf: *(unsigned_char)* is 1208
   Number of created targets for uf: *_Bool is 123
   Number of created targets for uf: *(struct_ufx_data)* is 426
   Number of created targets for uf: *unsigned_int is 3767
   Number of created targets for uf: *unsigned_long_int is 768
   Number of created targets for uf: *(struct_fb_info)* is 364


Number of BDD nodes:                               242
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       30122 (count: 235359, min: 0, max: 707, avg: 0.13)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.738s
  Time for transition matches:                         0.967s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                      1224583 (count: 1224871, min: 0, max: 1, avg: 1.00) [0 x 288, 1 x 1224583]

CPA algorithm statistics
------------------------
Number of iterations:            769202
Max size of waitlist:            169
Average size of waitlist:        78
Number of computed successors:   870177
Max successors for one state:    2
Number of times merged:          47334
Number of times stopped:         86743
Number of times breaked:         187

Total time for CPA algorithm:       882.043s (Max:   398.121s)
  Time for choose from waitlist:      0.334s
  Time for precision adjustment:    816.100s
  Time for transfer relation:        58.527s
  Time for merge operator:            2.560s
  Time for stop operator:             1.141s
  Time for adding to reached set:     1.158s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   187
Avg. length of target path (in blocks):               26797 (count: 187, min: 16, max: 396, avg: 143.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.276s
  Counterexample analysis:                            11.574s (Max:     0.245s, Calls: 187)
    Refinement sat check:                              4.830s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.150s
  Precision update:                                    0.139s
  ARG update:                                          1.237s

Length of refined path (in blocks):                   20939 (count: 187, min: 15, max: 370, avg: 111.97)
Number of affected states:                            15071 (count: 187, min: 13, max: 368, avg: 80.59)
Length (states) of path with itp 'true':               5681 (count: 187, min: 1, max: 184, avg: 30.38)
Length (states) of path with itp non-trivial itp:     15071 (count: 187, min: 13, max: 368, avg: 80.59)
Length (states) of path with itp 'false':               187 (count: 187, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 187, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:           14883 (count: 187, min: 12, max: 367, avg: 79.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                187
Number of successful refinements:     187
Number of failed refinements:         0
Max. size of reached set before ref.: 16626
Max. size of reached set after ref.:  5698
Avg. size of reached set before ref.: 5294.12
Avg. size of reached set after ref.:  1175.53

Total time for CEGAR algorithm:     896.294s
Time for refinements:                14.114s
Average time for refinement:          0.075s
Max time for refinement:              0.284s

Code Coverage
-----------------------------
  Function coverage:      0.610
  Visited lines:          1988
  Total lines:            3007
  Line coverage:          0.661
  Visited conditions:     383
  Total conditions:       782
  Condition coverage:     0.490

CPAchecker general statistics
-----------------------------
Number of program locations:     4028
Number of CFA edges:             4596
Number of relevant variables:    609
Number of functions:             118
Number of loops:                 31
Size of reached set:             9439
  Number of reached locations:   1142 (28%)
    Avg states per location:     8
    Max states per location:     346 (at node N3230)
  Number of reached functions:   72 (61%)
  Number of partitions:          9398
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3137 (before line 7418), Function main called from node N3012, stack depth 1 [2eadc9f6], stack [main]])
  Number of target states:       0
  Size of final wait list        112

Time for analysis setup:          4.096s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.482s
  Time for CFA construction:      2.729s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.914s
    Time for CFA sanity check:    0.253s
    Time for post-processing:     0.742s
      Time for var class.:        0.343s
Time for Analysis:              896.294s
CPU time for analysis:          896.130s
Total time for CPAchecker:      900.394s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.227s

Time for Garbage Collector:       9.841s (in 325 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                511MB (   488 MiB) max;    328MB (   313 MiB) avg;    575MB (   548 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           713MB (   680 MiB) max;    607MB (   579 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8633MB (  8233 MiB) max;   8520MB (  8125 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
