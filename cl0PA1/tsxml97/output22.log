scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--md--dm-snapshot.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h1cgp19g/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3736: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3739: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3742: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8358: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9479: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6559: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6540: Function pointer *(q->merge_bvec_fn) with type merge_bvec_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6260: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6263: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_origin_target_preresume to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_presuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_snapshot_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_snapshot_target_presuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_merge_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_table_get_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtouint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7901: Ignoring function call through function pointer *(type->ctr): r = (*(type->ctr))(tmp_store, 0U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_vcalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_client_create to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7922: Ignoring function call through function pointer *(store->type->dtr): (*(store->type->dtr))(store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io_client_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_client_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6242-6243: Ignoring function call through function pointer *(snap->store->type->status): (*(snap->store->type->status))(snap->store, type, result + ((unsigned long)sz), maxlen - sz); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6211-6212: Ignoring function call through function pointer *(snap->store->type->usage): (*(snap->store->type->usage))(snap->store, &total_sectors, &sectors_allocated, &metadata_sectors); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5434: Ignoring function call through function pointer *(s->store->type->read_metadata): r = (*(s->store->type->read_metadata))(s->store, &dm_add_exception, (void *)s); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_set_target_max_io_len to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io_client_create to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_register_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_unregister_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            98132 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  87278 (89%)
  Because of loop head:            10814 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (0%)
  Times precision was empty:       82563 (84%)
  Times precision was {false}:     188 (0%)
  Times result was cached:         14882 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      499 (1%)
  Times result was 'false':        38 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         64762
  BDD entailment checks:           16066
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       112
Number of predicates discovered:          4
Number of abstraction locations:          53
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         28672
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 41.74
Number of irrelevant predicates:          13040 (45%)
Number of preds handled by boolean abs:   884 (3%)
  Total number of models for allsat:      499
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.164s
  Time for path formula creation:        5.946s
Time for strengthen operator:            0.711s
Time for prec operator:                  4.375s
  Time for abstraction:                  3.101s (Max:     0.036s, Count: 98132)
    Boolean abstraction:                 0.370s
    Solving time:                        0.300s (Max:     0.013s)
    Model enumeration time:              0.027s
    Time for BDD construction:           0.034s (Max:     0.008s)
Time for merge operator:                 0.408s
Time for coverage check:                 0.091s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     0.327s

Number of path formula cache hits:   655470 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.442s

Total number of created targets for pointer analysis: 2126
   Number of created targets for uf: *(void)* is 3
   Number of created targets for uf: *(struct_bio)* is 5
   Number of created targets for uf: *(struct_dm_kcopyd_client)* is 3
   Number of created targets for uf: *(struct_dm_exception_store)* is 5
   Number of created targets for uf: *(struct_dm_snapshot)* is 11
   Number of created targets for uf: *(struct_mempool_s)* is 3
   Number of created targets for uf: *unsigned_long_int is 3
   Number of created targets for uf: *(char)* is 7
   Number of created targets for uf: *signed_int is 59
   Number of created targets for uf: *(struct_list_head)* is 191
   Number of created targets for uf: *(struct_dm_exception_store_type)* is 3
   Number of created targets for uf: *(struct_block_device)* is 3
   Number of created targets for uf: *(struct_workqueue_struct)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 17
   Number of created targets for uf: *unsigned_int is 13
   Number of created targets for uf: *char is 61
   Number of created targets for uf: *(struct_dm_target)* is 3
   Number of created targets for uf: *(struct_commit_callback)* is 3


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1022 (count: 102580, min: 0, max: 66, avg: 0.01)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.930s
  Time for transition matches:                         0.384s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       556033 (count: 556033, min: 1, max: 1, avg: 1.00) [1 x 556033]

CPA algorithm statistics
------------------------
Number of iterations:            358742
Max size of waitlist:            163
Average size of waitlist:        121
Number of computed successors:   405566
Max successors for one state:    2
Number of times merged:          24348
Number of times stopped:         40287
Number of times breaked:         40

Total time for CPA algorithm:        22.665s (Max:     4.865s)
  Time for choose from waitlist:      0.206s
  Time for precision adjustment:      7.091s
  Time for transfer relation:        11.984s
  Time for merge operator:            0.779s
  Time for stop operator:             0.611s
  Time for adding to reached set:     0.581s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                1519 (count: 40, min: 21, max: 69, avg: 37.97)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.035s
  Counterexample analysis:                             0.807s (Max:     0.039s, Calls: 40)
    Refinement sat check:                              0.573s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.061s
  Precision update:                                    0.025s
  ARG update:                                          1.116s

Length of refined path (in blocks):                    1479 (count: 40, min: 20, max: 68, avg: 36.97)
Number of affected states:                             1399 (count: 40, min: 18, max: 66, avg: 34.97)
Length (states) of path with itp 'true':                 40 (count: 40, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      1399 (count: 40, min: 18, max: 66, avg: 34.97)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 40, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1359 (count: 40, min: 17, max: 65, avg: 33.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 9222
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 9027.43
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      25.089s
Time for refinements:                 2.416s
Average time for refinement:          0.060s
Max time for refinement:              0.213s

Code Coverage
-----------------------------
  Function coverage:      0.365
  Visited lines:          1928
  Total lines:            4098
  Line coverage:          0.470
  Visited conditions:     504
  Total conditions:       1128
  Condition coverage:     0.447

CPAchecker general statistics
-----------------------------
Number of program locations:     5782
Number of CFA edges:             6624
Number of relevant variables:    1018
Number of functions:             249
Number of loops:                 38
Size of reached set:             4385
  Number of reached locations:   1239 (21%)
    Avg states per location:     3
    Max states per location:     26 (at node N335)
  Number of reached functions:   91 (37%)
  Number of partitions:          4385
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        134

Time for analysis setup:          5.204s
  Time for loading CPAs:          0.930s
  Time for loading parser:        0.590s
  Time for CFA construction:      3.578s
    Time for parsing file(s):     0.874s
    Time for AST to CFA:          1.212s
    Time for CFA sanity check:    0.306s
    Time for post-processing:     1.019s
      Time for var class.:        0.367s
Time for Analysis:               25.089s
CPU time for analysis:           25.100s
Total time for CPAchecker:       30.296s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.136s

Time for Garbage Collector:       2.010s (in 126 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   118 MiB) max;     68MB (    65 MiB) avg;    129MB (   123 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
