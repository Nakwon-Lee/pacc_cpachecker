scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--md--dm-snapshot.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jn60ktel/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3736: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3739: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3742: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7526: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8017: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8358: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9479: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6559: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6540: Function pointer *(q->merge_bvec_fn) with type merge_bvec_fn * is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6260: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6263: Function pointer *fn with type int (*)(struct dm_target *, struct dm_dev *, sector_t , sector_t , void *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_origin_target_preresume to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_origin_target_presuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_snapshot_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_snapshot_target_presuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_merge_target_postsuspend to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scnprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_register_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_unregister_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_rwsem to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kmem_cache_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_table_get_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_put_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_table_get_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_copy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5867: Ignoring function call through function pointer *(s->store->type->prepare_exception): tmp = (*(s->store->type->prepare_exception))(s->store, &(pe->e)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kmem_cache_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5665: Ignoring function call through function pointer *(s->store->type->drop_snapshot): (*(s->store->type->drop_snapshot))(s->store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_table_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io_client_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6559: Ignoring call via function pointer origin_iterate_devices::fn for which no suitable target was found in line: tmp = (*fn)(ti, dev, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 6242-6243: Ignoring function call through function pointer *(snap->store->type->status): (*(snap->store->type->status))(snap->store, type, result + ((unsigned long)sz), maxlen - sz); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 6211-6212: Ignoring function call through function pointer *(snap->store->type->usage): (*(snap->store->type->usage))(snap->store, &total_sectors, &sectors_allocated, &metadata_sectors); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6260: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6260: Ignoring function call through function pointer *fn: r = (*fn)(ti, snap->origin, 0UL, ti->len, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5120: Ignoring function call through function pointer *(s->store->type->prepare_merge): linear_chunks = (*(s->store->type->prepare_merge))(s->store, &old_chunk, &new_chunk); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function wake_up_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6540: Ignoring function call through function pointer *(q->merge_bvec_fn): tmp___0 = (*(q->merge_bvec_fn))(q, bvm, biovec); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrdup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_module to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtouint to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7901: Ignoring function call through function pointer *(type->ctr): r = (*(type->ctr))(tmp_store, 0U, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kmem_cache_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_suspended to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6263: Ignoring call via function pointer snapshot_iterate_devices::fn for which no suitable target was found in line: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 6263: Ignoring function call through function pointer *fn: r = (*fn)(ti, snap->cow, 0UL, tmp, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_kcopyd_client_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function generic_make_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_vcalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7922: Ignoring function call through function pointer *(store->type->dtr): (*(store->type->dtr))(store); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_kcopyd_client_create to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mempool_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5434: Ignoring function call through function pointer *(s->store->type->read_metadata): r = (*(s->store->type->read_metadata))(s->store, &dm_add_exception, (void *)s); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function dm_set_target_max_io_len to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dm_io_client_create to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4098611 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3598496 (88%)
  Because of loop head:            499939 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         176 (0%)
  Times precision was empty:       2409825 (59%)
  Times precision was {false}:     8500 (0%)
  Times result was cached:         1659259 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21027 (1%)
  Times result was 'false':        20458 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         2066788
  BDD entailment checks:           920930
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       112
Number of predicates discovered:          11
Number of abstraction locations:          242
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         5095600
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 172.57
Number of irrelevant predicates:          4133484 (81%)
Number of preds handled by boolean abs:   35909 (1%)
  Total number of models for allsat:      20972
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                337.266s
  Time for path formula creation:      330.492s
Time for strengthen operator:           14.347s
Time for prec operator:                215.915s
  Time for abstraction:                169.841s (Max:     6.085s, Count: 4098611)
    Boolean abstraction:                12.278s
    Solving time:                       14.126s (Max:     0.018s)
    Model enumeration time:              0.820s
    Time for BDD construction:           0.235s (Max:     0.008s)
Time for merge operator:                11.153s
Time for coverage check:                 0.800s
  Time for BDD entailment checks:        0.519s
Total time for SMT solver (w/o itp):    14.946s

Number of path formula cache hits:   20529720 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   227.493s

Total number of created targets for pointer analysis: 347143
   Number of created targets for uf: *(void)* is 207
   Number of created targets for uf: *(struct_hlist_node)* is 33
   Number of created targets for uf: *(struct_bio)* is 409
   Number of created targets for uf: *(struct_dm_kcopyd_client)* is 205
   Number of created targets for uf: *(struct_dm_exception_store)* is 413
   Number of created targets for uf: *(struct_dm_snapshot)* is 449
   Number of created targets for uf: *(struct_mempool_s)* is 205
   Number of created targets for uf: *unsigned_long_int is 313
   Number of created targets for uf: *(char)* is 819
   Number of created targets for uf: *signed_int is 6961
   Number of created targets for uf: *(struct_list_head)* is 45137
   Number of created targets for uf: *(struct_dm_exception_store_type)* is 207
   Number of created targets for uf: *(struct_block_device)* is 11
   Number of created targets for uf: *(struct_workqueue_struct)* is 207
   Number of created targets for uf: *unsigned_long_long_int is 2379
   Number of created targets for uf: *unsigned_int is 2781
   Number of created targets for uf: *char is 6181
   Number of created targets for uf: *(struct_dm_target)* is 207
   Number of created targets for uf: *(struct_commit_callback)* is 207


Number of BDD nodes:                               448
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       41763 (count: 3502089, min: 0, max: 930, avg: 0.01)
Time for BDD node cleanup:                             0.377s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.626s
  Time for transition matches:                        10.423s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                     20558504 (count: 20558504, min: 1, max: 1, avg: 1.00) [1 x 20558504]

CPA algorithm statistics
------------------------
Number of iterations:            13752932
Max size of waitlist:            208
Average size of waitlist:        132
Number of computed successors:   15177932
Max successors for one state:    2
Number of times merged:          572929
Number of times stopped:         1395706
Number of times breaked:         176

Total time for CPA algorithm:       837.100s (Max:    19.262s)
  Time for choose from waitlist:      3.042s
  Time for precision adjustment:    294.397s
  Time for transfer relation:       472.459s
  Time for merge operator:           16.324s
  Time for stop operator:            12.384s
  Time for adding to reached set:    13.674s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   176
Avg. length of target path (in blocks):               23150 (count: 176, min: 21, max: 220, avg: 131.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.597s
  Counterexample analysis:                             7.423s (Max:     0.230s, Calls: 176)
    Refinement sat check:                              4.024s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.100s
  ARG update:                                         29.802s

Length of refined path (in blocks):                   18221 (count: 176, min: 4, max: 208, avg: 103.53)
Number of affected states:                            11618 (count: 176, min: 1, max: 206, avg: 66.01)
Length (states) of path with itp 'true':               6427 (count: 176, min: 1, max: 105, avg: 36.52)
Length (states) of path with itp non-trivial itp:     11618 (count: 176, min: 1, max: 206, avg: 66.01)
Length (states) of path with itp 'false':               176 (count: 176, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 176, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11442 (count: 176, min: 0, max: 205, avg: 65.01)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                176
Number of successful refinements:     176
Number of failed refinements:         0
Max. size of reached set before ref.: 204902
Max. size of reached set after ref.:  128290
Avg. size of reached set before ref.: 119224.90
Avg. size of reached set after ref.:  42049.63

Total time for CEGAR algorithm:     895.233s
Time for refinements:                51.911s
Average time for refinement:          0.294s
Max time for refinement:              1.429s

Code Coverage
-----------------------------
  Function coverage:      0.711
  Visited lines:          3471
  Total lines:            4098
  Line coverage:          0.847
  Visited conditions:     963
  Total conditions:       1128
  Condition coverage:     0.854

CPAchecker general statistics
-----------------------------
Number of program locations:     5782
Number of CFA edges:             6624
Number of relevant variables:    1018
Number of functions:             249
Number of loops:                 38
Size of reached set:             178920
  Number of reached locations:   2821 (49%)
    Avg states per location:     63
    Max states per location:     2171 (at node N283)
  Number of reached functions:   177 (71%)
  Number of partitions:          178147
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2384 (before line 6373), Function __origin_write called from node N2424, stack depth 6 [47b5b5ac], stack [main, snapshot_merge_resume, start_merge, snapshot_merge_next_chunks, origin_write_extent, __origin_write]])
  Number of target states:       0
  Size of final wait list        127

Time for analysis setup:          5.050s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.607s
  Time for CFA construction:      3.512s
    Time for parsing file(s):     0.861s
    Time for AST to CFA:          1.191s
    Time for CFA sanity check:    0.346s
    Time for post-processing:     0.958s
      Time for var class.:        0.445s
Time for Analysis:              895.233s
CPU time for analysis:          895.180s
Total time for CPAchecker:      900.288s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              1.826s

Time for Garbage Collector:     123.423s (in 1134 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2838MB (  2706 MiB) max;   1074MB (  1024 MiB) avg;   2901MB (  2766 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3209MB (  3060 MiB) max;   1589MB (  1516 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8625MB (  8225 MiB) max;   8258MB (  7876 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
