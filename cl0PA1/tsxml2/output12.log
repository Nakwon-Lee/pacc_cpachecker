scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ath--ath5k--ath5k.ko-ldv_main16_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n37uuvjs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7125: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11764: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11982: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12762: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13650: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14319: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15326: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21035: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21646: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21649: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21652: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26688: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27257: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28130: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29728: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 32275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 24902-24904: Function pointer *(ah->ah_setup_tx_desc) with type int (*)(struct ath5k_hw *, struct ath5k_desc *, unsigned int, unsigned int, int, enum ath5k_pkt_type , unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22061: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 21931-21932: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21985: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21965: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22507-22509: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22563-22566: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22620-22621: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28713: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Only one single ad-hoc interface is allowed.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26588: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_setbssidmask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23878-23880: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): beacon queueprops tqi_aifs:%d tqi_cw_min:%d tqi_cw_max:%d\n", "ath5k_beaconq_config", 1030, (int)(qi.tqi_aifs), (int)(qi.tqi_cw_min), (int)(qi.tqi_cw_max)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 23891-23892: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "%s: unable to update parameters for beacon hardware queue!\n", "ath5k_beaconq_config") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 13043-13044: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): queue %i didn\'t stop !\n", "ath5k_hw_stop_tx_dma", 275, queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13094-13095: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): quiet mechanism didn\'t work q:%i !\n", "ath5k_hw_stop_tx_dma", 328, queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13117-13118: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): tx dma didn\'t stop (q:%i, frm:%i) !\n", "ath5k_hw_stop_tx_dma", 342, queue, pending) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13148-13149: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): beacon queue didn\'t stop !\n", "ath5k_hw_stop_beacon_queue", 365) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25003-25004: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): in beacon_send\n", "ath5k_beacon_send", 1869) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25067-25068: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): resume beacon xmit after %u misses\n", "ath5k_beacon_send", 1895, ah->bmisscount) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25090-25091: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): tsf %llx tsftu %x intval %u slot %u vif %p\n", "ath5k_beacon_send", 1908, tsf, tsftu, ah->bintval, slot, vif) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25113-25114: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "beacon queue %u didn\'t start/stop ?\n", ah->bhalq) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21965: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 21931-21932: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21985: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 24863-24864: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): skb %p [data %p len %u] skbaddr %llx\n", "ath5k_beacon_setup", 1756, skb, skb->data, skb->len, bf->skbaddr) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 24875: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "beacon DMA mapping failed\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_get_hdrlen_from_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 24902-24904: Ignoring function call through function pointer *(ah->ah_setup_tx_desc): ret = (*(ah->ah_setup_tx_desc))(ah, ds, skb->len, tmp___6, padsize, 3, (unsigned int)((ah->ah_txpower.txp_requested) * 2), __CPAchecker_TMP_9, 1U, 4294967295U, (unsigned int)antenna, flags, 0U, 0U); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

lines 25225-25226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "intval %u is too low, min 15\n", intval) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25151-25152: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "bf=%p bf_skb=%p\n", bf, bf->skb) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_is_cpu_idle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22563-22566: Ignoring call via function pointer trace_ath5k_tx::it_func for which no suitable target was found in line: (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 22563-22566: Ignoring function call through function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func): (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_get_buffered_bc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25169-25170: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): TXDP[%u] = %llx (%p)\n", "ath5k_beacon_send", 1947, ah->bhalq, bf->daddr, bf->desc) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24589: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "tx hdrlen not %%4: not enough headroom to pad") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24608: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "no further txbuf available, dropping packet\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_rts_duration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_ctstoself_duration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23483-23486: Ignoring function call through function pointer *(ah->ah_setup_tx_desc): ret = (*(ah->ah_setup_tx_desc))(ah, ds, pktlen, tmp___3, padsize, tmp___2, (unsigned int)((ah->ah_txpower.txp_requested) * 2), (unsigned int)hw_rate, (unsigned int)(((info->ldv_41394.control.ldv_41377.ldv_41375.rates)[0]).count), keyidx, __CPAchecker_TMP_8, flags, (unsigned int)cts_rate, (unsigned int)duration); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 12059: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero retries\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12080: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero rate\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12223: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero retries\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12244: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero rate\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12419: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero rate\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25264-25265: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): need to wait for HW TSF sync\n", "ath5k_beacon_update_timers", 2029) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25280-25281: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reconfigured timers based on HW TSF\n", "ath5k_beacon_update_timers", 2054) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25286-25287: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reset HW TSF and timers\n", "ath5k_beacon_update_timers", 2057) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25291-25292: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): updated timers based on beacon TSF\n", "ath5k_beacon_update_timers", 2060) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25017-25018: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): missed %u consecutive beacons\n", "ath5k_beacon_send", 1881, ah->bmisscount) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25305-25307: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): bc_tsf %llx hw_tsf %llx bc_tu %u hw_tu %u nexttbtt %u\n", "ath5k_beacon_update_timers", 2065, bc_tsf, hw_tsf, bc_tu, hw_tu, nexttbtt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25031-25032: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): stuck beacon time (%u missed)\n", "ath5k_beacon_send", 1885, ah->bmisscount) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25313-25315: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): intval %u %s %s\n", "ath5k_beacon_update_timers", 2069, intval & 65535U, __CPAchecker_TMP_3, __CPAchecker_TMP_4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25044-25045: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): stuck beacon, resetting\n", "ath5k_beacon_send", 1887) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_iterate_active_interfaces_atomic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 28740-28741: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): add interface mode %d\n", "ath5k_add_interface", 146, __CPAchecker_TMP_10) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            16580 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15740 (95%)
  Because of loop head:            830 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         10 (0%)
  Times precision was empty:       16468 (99%)
  Times precision was {false}:     9 (0%)
  Times result was cached:         84 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (0%)
  Times result was 'false':        16 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         11213
  BDD entailment checks:           3605
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       117
Number of predicates discovered:          3
Number of abstraction locations:          22
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         112
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.00
Number of irrelevant predicates:          40 (36%)
Number of preds handled by boolean abs:   19 (17%)
  Total number of models for allsat:      19
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                 10.172s
  Time for path formula creation:       10.084s
Time for strengthen operator:            0.151s
Time for prec operator:                  0.807s
  Time for abstraction:                  0.273s (Max:     0.017s, Count: 16580)
    Boolean abstraction:                 0.042s
    Solving time:                        0.044s (Max:     0.012s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.002s (Max:     0.002s)
Time for merge operator:                 0.373s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     0.045s

Number of path formula cache hits:   70075 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.875s

Total number of created targets for pointer analysis: 11247
   Number of created targets for uf: *unsigned_short_int is 72
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *unsigned_char is 1193
   Number of created targets for uf: *enum_ath5k_tx_queue_subtype is 9
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *enum_ath5k_tx_queue is 9
   Number of created targets for uf: *unsigned_int is 35


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          44 (count: 20239, min: 0, max: 21, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.246s
Automaton transfers with branching:                0
Automaton transfer successors:                        88193 (count: 88193, min: 1, max: 1, avg: 1.00) [1 x 88193]

CPA algorithm statistics
------------------------
Number of iterations:            61305
Max size of waitlist:            64
Average size of waitlist:        44
Number of computed successors:   68930
Max successors for one state:    2
Number of times merged:          3804
Number of times stopped:         7409
Number of times breaked:         10

Total time for CPA algorithm:        20.955s (Max:     8.385s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:      1.362s
  Time for transfer relation:        18.091s
  Time for merge operator:            0.544s
  Time for stop operator:             0.259s
  Time for adding to reached set:     0.170s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                 112 (count: 10, min: 8, max: 14, avg: 11.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.759s
  Counterexample analysis:                             0.345s (Max:     0.041s, Calls: 10)
    Refinement sat check:                              0.276s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.005s
  ARG update:                                          0.395s

Length of refined path (in blocks):                     102 (count: 10, min: 7, max: 13, avg: 10.20)
Number of affected states:                               48 (count: 10, min: 4, max: 7, avg: 4.80)
Length (states) of path with itp 'true':                 44 (count: 10, min: 1, max: 8, avg: 4.40)
Length (states) of path with itp non-trivial itp:        48 (count: 10, min: 4, max: 7, avg: 4.80)
Length (states) of path with itp 'false':                10 (count: 10, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              38 (count: 10, min: 3, max: 6, avg: 3.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 13030
Max. size of reached set after ref.:  232
Avg. size of reached set before ref.: 3977.70
Avg. size of reached set after ref.:  93.60

Total time for CEGAR algorithm:      21.818s
Time for refinements:                 0.863s
Average time for refinement:          0.086s
Max time for refinement:              0.297s

Code Coverage
-----------------------------
  Function coverage:      0.203
  Visited lines:          3188
  Total lines:            14734
  Line coverage:          0.216
  Visited conditions:     870
  Total conditions:       4982
  Condition coverage:     0.175

CPAchecker general statistics
-----------------------------
Number of program locations:     21692
Number of CFA edges:             25876
Number of relevant variables:    4172
Number of functions:             620
Number of loops:                 151
Size of reached set:             22664
  Number of reached locations:   2359 (11%)
    Avg states per location:     9
    Max states per location:     569 (at node N16)
  Number of reached functions:   126 (20%)
  Number of partitions:          22664
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        63

Time for analysis setup:          8.484s
  Time for loading CPAs:          0.840s
  Time for loading parser:        0.560s
  Time for CFA construction:      7.000s
    Time for parsing file(s):     1.268s
    Time for AST to CFA:          2.512s
    Time for CFA sanity check:    0.852s
    Time for post-processing:     2.168s
      Time for var class.:        1.162s
Time for Analysis:               21.818s
CPU time for analysis:           21.810s
Total time for CPAchecker:       30.307s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.486s

Time for Garbage Collector:       1.517s (in 85 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                145MB (   139 MiB) max;     94MB (    90 MiB) avg;    154MB (   147 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     38MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           165MB (   157 MiB) max;    146MB (   139 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
