scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ath--ath5k--ath5k.ko-ldv_main16_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tltcu9fw/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7125: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11764: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11982: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12762: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13650: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14319: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15326: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21035: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21646: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21649: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21652: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26688: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27257: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28130: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29728: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 32275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 24902-24904: Function pointer *(ah->ah_setup_tx_desc) with type int (*)(struct ath5k_hw *, struct ath5k_desc *, unsigned int, unsigned int, int, enum ath5k_pkt_type , unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22061: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 21931-21932: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21985: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21965: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22507-22509: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22563-22566: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22620-22621: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25225-25226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "intval %u is too low, min 15\n", intval) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26588: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18274-18275: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid channel: %d\n", __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_cycle_counters_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28713: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Only one single ad-hoc interface is allowed.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_delete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_iterate_active_interfaces_atomic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 19440-19441: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid tx power: %u\n", (int)txpower) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ath_hw_setbssidmask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23054-23055: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): channel set, resetting (%u -> %u MHz)\n", "ath5k_chan_set", 472, __CPAchecker_TMP_0, __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19530-19531: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): changing txpower to %d\n", "ath5k_hw_set_txpower_limit", 3772, (int)txpower) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 29302-29304: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): Configure tx [queue %d],  aifs: %d, cw_min: %d, cw_max: %d, txop: %d\n", "ath5k_conf_tx", 639, (int)queue, __CPAchecker_TMP_2, __CPAchecker_TMP_3, __CPAchecker_TMP_4, __CPAchecker_TMP_5) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29315-29316: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Unable to update hardware queue %u!\n", (int)queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 15183-15184: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode %d\n", "ath5k_hw_set_opmode", 909, (unsigned int)op_mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 23194-23196: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode setup opmode %d (%s)\n", "ath5k_update_bssid_mask_and_opmode", 558, __CPAchecker_TMP_1, tmp___0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 23225-23226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): RX filter 0x%x\n", "ath5k_update_bssid_mask_and_opmode", 577, rfilt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 28740-28741: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): add interface mode %d\n", "ath5k_add_interface", 146, __CPAchecker_TMP_10) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            17875 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16665 (93%)
  Because of loop head:            1122 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         88 (0%)
  Times precision was empty:       9414 (53%)
  Times precision was {false}:     336 (2%)
  Times result was cached:         7991 (45%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      134 (1%)
  Times result was 'false':        203 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         18382
  BDD entailment checks:           2844
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       117
Number of predicates discovered:          3
Number of abstraction locations:          153
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         8470
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 18.02
Number of irrelevant predicates:          5031 (59%)
Number of preds handled by boolean abs:   135 (2%)
  Total number of models for allsat:      134
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  8.879s
  Time for path formula creation:        8.769s
Time for strengthen operator:            0.154s
Time for prec operator:                  3.974s
  Time for abstraction:                  3.546s (Max:     0.122s, Count: 17875)
    Boolean abstraction:                 0.574s
    Solving time:                        1.413s (Max:     0.117s)
    Model enumeration time:              0.026s
    Time for BDD construction:           0.015s (Max:     0.006s)
Time for merge operator:                 0.333s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     1.439s

Number of path formula cache hits:   122138 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.736s

Total number of created targets for pointer analysis: 26812
   Number of created targets for uf: *unsigned_short_int is 72
   Number of created targets for uf: *enum_nl80211_iftype is 6
   Number of created targets for uf: *signed_int is 6
   Number of created targets for uf: *unsigned_char is 149
   Number of created targets for uf: *enum_ath5k_tx_queue_subtype is 4
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *enum_ath5k_tx_queue is 4
   Number of created targets for uf: *unsigned_int is 757


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         280 (count: 14751, min: 0, max: 20, avg: 0.02)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.336s
Automaton transfers with branching:                0
Automaton transfer successors:                       131892 (count: 131892, min: 1, max: 1, avg: 1.00) [1 x 131892]

CPA algorithm statistics
------------------------
Number of iterations:            75788
Max size of waitlist:            104
Average size of waitlist:        47
Number of computed successors:   88653
Max successors for one state:    2
Number of times merged:          7769
Number of times stopped:         9724
Number of times breaked:         88

Total time for CPA algorithm:        19.289s (Max:     1.526s)
  Time for choose from waitlist:      0.080s
  Time for precision adjustment:      4.724s
  Time for transfer relation:        13.185s
  Time for merge operator:            0.497s
  Time for stop operator:             0.155s
  Time for adding to reached set:     0.187s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   88
Avg. length of target path (in blocks):                1422 (count: 88, min: 8, max: 43, avg: 16.16)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.855s
  Counterexample analysis:                             2.530s (Max:     0.077s, Calls: 88)
    Refinement sat check:                              2.180s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.060s
  ARG update:                                          0.168s

Length of refined path (in blocks):                    1334 (count: 88, min: 7, max: 42, avg: 15.16)
Number of affected states:                              867 (count: 88, min: 4, max: 35, avg: 9.85)
Length (states) of path with itp 'true':                379 (count: 88, min: 1, max: 8, avg: 4.31)
Length (states) of path with itp non-trivial itp:       867 (count: 88, min: 4, max: 35, avg: 9.85)
Length (states) of path with itp 'false':                88 (count: 88, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 88, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             779 (count: 88, min: 3, max: 34, avg: 8.85)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                88
Number of successful refinements:     88
Number of failed refinements:         0
Max. size of reached set before ref.: 3277
Max. size of reached set after ref.:  1973
Avg. size of reached set before ref.: 1858.59
Avg. size of reached set after ref.:  992.05

Total time for CEGAR algorithm:      22.432s
Time for refinements:                 3.060s
Average time for refinement:          0.034s
Max time for refinement:              0.085s

Code Coverage
-----------------------------
  Function coverage:      0.148
  Visited lines:          2309
  Total lines:            14734
  Line coverage:          0.157
  Visited conditions:     414
  Total conditions:       4982
  Condition coverage:     0.083

CPAchecker general statistics
-----------------------------
Number of program locations:     21692
Number of CFA edges:             25876
Number of relevant variables:    4172
Number of functions:             620
Number of loops:                 151
Size of reached set:             2470
  Number of reached locations:   1159 (5%)
    Avg states per location:     2
    Max states per location:     46 (at node N11)
  Number of reached functions:   92 (15%)
  Number of partitions:          2461
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N19168 (before line 29675), Function main called from node N19014, stack depth 1 [753f1c3e], stack [main]])
  Number of target states:       0
  Size of final wait list        73

Time for analysis setup:          7.901s
  Time for loading CPAs:          0.764s
  Time for loading parser:        0.579s
  Time for CFA construction:      6.480s
    Time for parsing file(s):     1.182s
    Time for AST to CFA:          2.143s
    Time for CFA sanity check:    0.926s
    Time for post-processing:     2.049s
      Time for var class.:        0.863s
Time for Analysis:               22.432s
CPU time for analysis:           22.430s
Total time for CPAchecker:       30.337s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.137s

Time for Garbage Collector:       1.029s (in 96 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                132MB (   126 MiB) max;     94MB (    89 MiB) avg;    136MB (   129 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           148MB (   141 MiB) max;    143MB (   137 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8088MB (  7714 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
