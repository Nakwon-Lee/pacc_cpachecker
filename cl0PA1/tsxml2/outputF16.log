scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ath--ath5k--ath5k.ko-ldv_main16_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vtkdx67m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7125: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11764: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11982: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12762: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13650: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14319: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15326: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21035: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21646: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21649: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21652: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26688: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27257: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28130: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29728: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 32275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 24902-24904: Function pointer *(ah->ah_setup_tx_desc) with type int (*)(struct ath5k_hw *, struct ath5k_desc *, unsigned int, unsigned int, int, enum ath5k_pkt_type , unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22061: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 21931-21932: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21985: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21965: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22507-22509: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22563-22566: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22620-22621: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25225-25226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "intval %u is too low, min 15\n", intval) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26588: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18274-18275: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid channel: %d\n", __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_cycle_counters_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28713: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Only one single ad-hoc interface is allowed.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_delete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_iterate_active_interfaces_atomic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 19440-19441: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid tx power: %u\n", (int)txpower) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ath_hw_setbssidmask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23054-23055: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): channel set, resetting (%u -> %u MHz)\n", "ath5k_chan_set", 472, __CPAchecker_TMP_0, __CPAchecker_TMP_1) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 19530-19531: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): changing txpower to %d\n", "ath5k_hw_set_txpower_limit", 3772, (int)txpower) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 29302-29304: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): Configure tx [queue %d],  aifs: %d, cw_min: %d, cw_max: %d, txop: %d\n", "ath5k_conf_tx", 639, (int)queue, __CPAchecker_TMP_2, __CPAchecker_TMP_3, __CPAchecker_TMP_4, __CPAchecker_TMP_5) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 29315-29316: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Unable to update hardware queue %u!\n", (int)queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 28740-28741: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): add interface mode %d\n", "ath5k_add_interface", 146, __CPAchecker_TMP_10) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 15183-15184: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode %d\n", "ath5k_hw_set_opmode", 909, (unsigned int)op_mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 21965: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 19453-19454: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid channel: %d\n", __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23878-23880: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): beacon queueprops tqi_aifs:%d tqi_cw_min:%d tqi_cw_max:%d\n", "ath5k_beaconq_config", 1030, (int)(qi.tqi_aifs), (int)(qi.tqi_cw_min), (int)(qi.tqi_cw_max)) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 23891-23892: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "%s: unable to update parameters for beacon hardware queue!\n", "ath5k_beaconq_config") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25003-25004: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): in beacon_send\n", "ath5k_beacon_send", 1869) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 13148-13149: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): beacon queue didn\'t stop !\n", "ath5k_hw_stop_beacon_queue", 365) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 23194-23196: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): mode setup opmode %d (%s)\n", "ath5k_update_bssid_mask_and_opmode", 558, __CPAchecker_TMP_1, tmp___0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function rcu_is_cpu_idle to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rcu_lockdep_current_cpu_online to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 22563-22566: Ignoring call via function pointer trace_ath5k_tx::it_func for which no suitable target was found in line: (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

lines 22563-22566: Ignoring function call through function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func): (*((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func))(__data, priv, skb, q); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function lockdep_rcu_suspicious to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_generic_frame_duration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24589: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "tx hdrlen not %%4: not enough headroom to pad") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_push to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memmove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 24608: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "no further txbuf available, dropping packet\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23225-23226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): RX filter 0x%x\n", "ath5k_update_bssid_mask_and_opmode", 577, rfilt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25264-25265: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): need to wait for HW TSF sync\n", "ath5k_beacon_update_timers", 2029) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 26166-26167: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): resetting\n", "ath5k_reset", 2791) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function synchronize_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 21931-21932: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 27960-27961: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "ANI mode %d out of range", (unsigned int)mode) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25280-25281: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reconfigured timers based on HW TSF\n", "ath5k_beacon_update_timers", 2054) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25305-25307: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): bc_tsf %llx hw_tsf %llx bc_tu %u hw_tu %u nexttbtt %u\n", "ath5k_beacon_update_timers", 2065, bc_tsf, hw_tsf, bc_tu, hw_tu, nexttbtt) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25286-25287: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): reset HW TSF and timers\n", "ath5k_beacon_update_timers", 2057) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25313-25315: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): intval %u %s %s\n", "ath5k_beacon_update_timers", 2069, intval & 65535U, __CPAchecker_TMP_3, __CPAchecker_TMP_4) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 25291-25292: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): updated timers based on beacon TSF\n", "ath5k_beacon_update_timers", 2060) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 27978-27979: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI off\n", "ath5k_ani_init", 698) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 28012-28013: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI auto\n", "ath5k_ani_init", 718) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27998-27999: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI manual high -> low sensitivity\n", "ath5k_ani_init", 709) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27984-27985: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\017", "(%s:%d): ANI manual low -> high sensitivity\n", "ath5k_ani_init", 701) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27337-27338: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "noise immunity level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27388-27389: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "spur immunity level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

lines 27425-27426: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "firstep level %d out of range", level) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 31380: Ignoring function call through function pointer *(ah->ah_proc_tx_desc): done = (*(ah->ah_proc_tx_desc))(ah, bf->desc, &ts); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function ieee80211_rts_duration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_ctstoself_duration to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_get_hdrlen_from_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 23483-23486: Ignoring function call through function pointer *(ah->ah_setup_tx_desc): ret = (*(ah->ah_setup_tx_desc))(ah, ds, pktlen, tmp___3, padsize, tmp___2, (unsigned int)((ah->ah_txpower.txp_requested) * 2), (unsigned int)hw_rate, (unsigned int)(((info->ldv_41394.control.ldv_41377.ldv_41375.rates)[0]).count), keyidx, __CPAchecker_TMP_8, flags, (unsigned int)cts_rate, (unsigned int)duration); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 12059: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero retries\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12223: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero retries\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12419: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero rate\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12080: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero rate\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

line 12244: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "zero rate\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1796966 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1694716 (94%)
  Because of loop head:            98785 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         3465 (0%)
  Times precision was empty:       707377 (39%)
  Times precision was {false}:     1423 (0%)
  Times result was cached:         1084553 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3613 (0%)
  Times result was 'false':        13903 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1687604
  BDD entailment checks:           326622
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       117
Number of predicates discovered:          10
Number of abstraction locations:          462
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         4662479
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 925.83
Number of irrelevant predicates:          3216201 (69%)
Number of preds handled by boolean abs:   7445 (0%)
  Total number of models for allsat:      3679
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                 96.205s
  Time for path formula creation:       93.392s
Time for strengthen operator:            7.066s
Time for prec operator:                163.406s
  Time for abstraction:                140.290s (Max:     0.354s, Count: 1796966)
    Boolean abstraction:                 8.118s
    Solving time:                        9.861s (Max:     0.133s)
    Model enumeration time:              0.485s
    Time for BDD construction:           0.107s (Max:     0.009s)
Time for merge operator:                 8.262s
Time for coverage check:                 0.401s
  Time for BDD entailment checks:        0.241s
Total time for SMT solver (w/o itp):    10.346s

Number of path formula cache hits:   13734719 (99%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    17.794s

Total number of created targets for pointer analysis: 94131
   Number of created targets for uf: *unsigned_short_int is 229
   Number of created targets for uf: *enum_nl80211_iftype is 9
   Number of created targets for uf: *signed_int is 23
   Number of created targets for uf: *unsigned_char is 3709
   Number of created targets for uf: *enum_ath5k_tx_queue_subtype is 6
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *enum_ath5k_tx_queue is 6
   Number of created targets for uf: *unsigned_int is 225
   Number of created targets for uf: *signed_short_int is 89
   Number of created targets for uf: *(struct_ath5k_chan_pcal_info)* is 13


Number of BDD nodes:                               334
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7551 (count: 1064087, min: 0, max: 106, avg: 0.01)
Time for BDD node cleanup:                             0.117s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  9.954s
  Time for transition matches:                         5.725s
  Time for transition assertions:                      0.006s
  Time for transition actions:                         0.011s
Automaton transfers with branching:                0
Automaton transfer successors:                     11398955 (count: 11398955, min: 1, max: 1, avg: 1.00) [1 x 11398955]

CPA algorithm statistics
------------------------
Number of iterations:            7362433
Max size of waitlist:            347
Average size of waitlist:        144
Number of computed successors:   8475520
Max successors for one state:    2
Number of times merged:          680491
Number of times stopped:         945811
Number of times breaked:         3465

Total time for CPA algorithm:       746.308s (Max:     1.314s)
  Time for choose from waitlist:      2.377s
  Time for precision adjustment:    194.312s
  Time for transfer relation:       511.379s
  Time for merge operator:           12.798s
  Time for stop operator:             6.237s
  Time for adding to reached set:     7.416s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3465
Avg. length of target path (in blocks):              109503 (count: 3465, min: 6, max: 86, avg: 31.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 113.579s
  Counterexample analysis:                           100.196s (Max:     0.099s, Calls: 3465)
    Refinement sat check:                             84.456s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.060s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.462s
  Precision update:                                    2.331s
  ARG update:                                          9.860s

Length of refined path (in blocks):                  103267 (count: 3465, min: 5, max: 85, avg: 29.80)
Number of affected states:                            73794 (count: 3465, min: 3, max: 83, avg: 21.30)
Length (states) of path with itp 'true':              26008 (count: 3465, min: 1, max: 34, avg: 7.51)
Length (states) of path with itp non-trivial itp:     73794 (count: 3465, min: 3, max: 83, avg: 21.30)
Length (states) of path with itp 'false':              3465 (count: 3465, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 3465, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           70329 (count: 3465, min: 2, max: 82, avg: 20.30)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3465
Number of successful refinements:     3465
Number of failed refinements:         0
Max. size of reached set before ref.: 20115
Max. size of reached set after ref.:  17765
Avg. size of reached set before ref.: 8181.93
Avg. size of reached set after ref.:  6014.92

Total time for CEGAR algorithm:     891.765s
Time for refinements:               133.534s
Average time for refinement:          0.038s
Max time for refinement:              0.396s

Code Coverage
-----------------------------
  Function coverage:      0.232
  Visited lines:          3384
  Total lines:            14734
  Line coverage:          0.230
  Visited conditions:     798
  Total conditions:       4982
  Condition coverage:     0.160

CPAchecker general statistics
-----------------------------
Number of program locations:     21692
Number of CFA edges:             25876
Number of relevant variables:    4172
Number of functions:             620
Number of loops:                 151
Size of reached set:             7105
  Number of reached locations:   2268 (10%)
    Avg states per location:     3
    Max states per location:     174 (at node N17)
  Number of reached functions:   144 (23%)
  Number of partitions:          7096
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N18822 (after line 29322), Function ath5k_conf_tx called from node N19116, stack depth 2 [3184cad2], stack [main, ath5k_conf_tx]])
  Number of target states:       0
  Size of final wait list        86

Time for analysis setup:          8.576s
  Time for loading CPAs:          1.011s
  Time for loading parser:        0.439s
  Time for CFA construction:      7.001s
    Time for parsing file(s):     1.004s
    Time for AST to CFA:          2.499s
    Time for CFA sanity check:    0.930s
    Time for post-processing:     2.497s
      Time for var class.:        1.105s
Time for Analysis:              891.765s
CPU time for analysis:          891.700s
Total time for CPAchecker:      900.343s
Total CPU time for CPAchecker:  900.250s
Time for statistics:              0.242s

Time for Garbage Collector:      43.533s (in 2851 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                247MB (   235 MiB) max;    151MB (   144 MiB) avg;    253MB (   241 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           252MB (   240 MiB) max;    220MB (   210 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8219MB (  7838 MiB) max;   8175MB (  7796 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
