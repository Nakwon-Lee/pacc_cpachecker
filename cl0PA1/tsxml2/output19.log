scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--wireless--ath--ath5k--ath5k.ko-ldv_main16_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dz2xiuxs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7125: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 8447: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11764: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11982: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12762: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13650: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14319: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15326: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19767: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21035: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21478: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 21646: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21649: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 21652: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6212;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 26688: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27061: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27257: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28130: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 28583: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29728: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 31799: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 32275: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 24902-24904: Function pointer *(ah->ah_setup_tx_desc) with type int (*)(struct ath5k_hw *, struct ath5k_desc *, unsigned int, unsigned int, int, enum ath5k_pkt_type , unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22061: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22094: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 21931-21932: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21985: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 21965: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22507-22509: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22563-22566: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 22620-22621: Function pointer *((void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *))it_func) with type void (*)(void *, struct ath5k_hw *, struct sk_buff *, struct ath5k_txq *, struct ath5k_tx_status *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 25225-25226: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\f", "intval %u is too low, min 15\n", intval) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __builtin_va_start to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_va_start, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 26588: Return type of function __builtin_va_end is void, but result is used as type int: __builtin_va_end((__va_list_tag *)(&args)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_va_end to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 18274-18275: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "invalid channel: %d\n", __CPAchecker_TMP_0) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_hw_cycle_counters_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 28713: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Only one single ad-hoc interface is allowed.\n") (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function ieee80211_iterate_active_interfaces_atomic to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_delete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_key_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 29315-29316: Ignoring parameters passed as varargs to function _ath5k_printk: _ath5k_printk((const struct ath5k_hw *)ah, "\v", "Unable to update hardware queue %u!\n", (int)queue) (PredicateCPA:CtoFormulaConverter.makeFunctionCall, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_free_txskb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            27070 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25148 (93%)
  Because of loop head:            1807 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         115 (0%)
  Times precision was empty:       16703 (62%)
  Times precision was {false}:     205 (1%)
  Times result was cached:         9749 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      413 (2%)
  Times result was 'false':        582 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         30874
  BDD entailment checks:           4830
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       117
Number of predicates discovered:          5
Number of abstraction locations:          91
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         24803
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 40.13
Number of irrelevant predicates:          11893 (48%)
Number of preds handled by boolean abs:   683 (3%)
  Total number of models for allsat:      415
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  6.440s
  Time for path formula creation:        6.319s
Time for strengthen operator:            0.227s
Time for prec operator:                  5.607s
  Time for abstraction:                  5.158s (Max:     0.141s, Count: 27070)
    Boolean abstraction:                 1.968s
    Solving time:                        2.503s (Max:     0.130s)
    Model enumeration time:              0.078s
    Time for BDD construction:           0.084s (Max:     0.009s)
Time for merge operator:                 0.277s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     2.581s

Number of path formula cache hits:   245131 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.855s

Total number of created targets for pointer analysis: 18341
   Number of created targets for uf: *unsigned_short_int is 143
   Number of created targets for uf: *enum_nl80211_iftype is 3
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 2813
   Number of created targets for uf: *enum_ath5k_tx_queue_subtype is 2
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *enum_ath5k_tx_queue is 2
   Number of created targets for uf: *unsigned_int is 33


Number of BDD nodes:                               209
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         859 (count: 25060, min: 0, max: 60, avg: 0.03)
Time for BDD node cleanup:                             0.028s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.357s
Automaton transfers with branching:                0
Automaton transfer successors:                       226681 (count: 226681, min: 1, max: 1, avg: 1.00) [1 x 226681]

CPA algorithm statistics
------------------------
Number of iterations:            120652
Max size of waitlist:            119
Average size of waitlist:        52
Number of computed successors:   143512
Max successors for one state:    2
Number of times merged:          13022
Number of times stopped:         16034
Number of times breaked:         115

Total time for CPA algorithm:        19.187s (Max:     1.727s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:      6.441s
  Time for transfer relation:        11.114s
  Time for merge operator:            0.471s
  Time for stop operator:             0.255s
  Time for adding to reached set:     0.231s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   115
Avg. length of target path (in blocks):                1441 (count: 115, min: 6, max: 21, avg: 12.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.133s
  Counterexample analysis:                             2.680s (Max:     0.092s, Calls: 115)
    Refinement sat check:                              2.307s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.039s
  ARG update:                                          0.325s

Length of refined path (in blocks):                    1326 (count: 115, min: 5, max: 20, avg: 11.53)
Number of affected states:                              860 (count: 115, min: 3, max: 18, avg: 7.48)
Length (states) of path with itp 'true':                351 (count: 115, min: 1, max: 8, avg: 3.05)
Length (states) of path with itp non-trivial itp:       860 (count: 115, min: 3, max: 18, avg: 7.48)
Length (states) of path with itp 'false':               115 (count: 115, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 115, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             745 (count: 115, min: 2, max: 17, avg: 6.48)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                115
Number of successful refinements:     115
Number of failed refinements:         0
Max. size of reached set before ref.: 2435
Max. size of reached set after ref.:  1798
Avg. size of reached set before ref.: 1624.21
Avg. size of reached set after ref.:  534.83

Total time for CEGAR algorithm:      22.531s
Time for refinements:                 3.311s
Average time for refinement:          0.028s
Max time for refinement:              0.101s

Code Coverage
-----------------------------
  Function coverage:      0.116
  Visited lines:          2062
  Total lines:            14734
  Line coverage:          0.140
  Visited conditions:     322
  Total conditions:       4982
  Condition coverage:     0.065

CPAchecker general statistics
-----------------------------
Number of program locations:     21692
Number of CFA edges:             25876
Number of relevant variables:    4172
Number of functions:             620
Number of loops:                 151
Size of reached set:             1617
  Number of reached locations:   862 (4%)
    Avg states per location:     1
    Max states per location:     43 (at node N16)
  Number of reached functions:   72 (12%)
  Number of partitions:          1617
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        32

Time for analysis setup:          7.842s
  Time for loading CPAs:          0.890s
  Time for loading parser:        0.418s
  Time for CFA construction:      6.406s
    Time for parsing file(s):     1.158s
    Time for AST to CFA:          2.182s
    Time for CFA sanity check:    1.047s
    Time for post-processing:     1.857s
      Time for var class.:        1.012s
Time for Analysis:               22.535s
CPU time for analysis:           22.530s
Total time for CPAchecker:       30.380s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.109s

Time for Garbage Collector:       1.095s (in 101 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     92MB (    88 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           148MB (   141 MiB) max;    144MB (   137 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
