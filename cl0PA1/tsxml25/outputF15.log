scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--sn9c102--sn9c102.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dtttiasc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4070: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4073: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4076: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4124-4125: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4128-4129: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4136-4137: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10862: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10906: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10950: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11004: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11038: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11254: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11412: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15912: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17302: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: [!(err != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: -5 (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: 0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23036: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29074: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30266: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33626: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34823: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4497: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_altnum_to_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l_printk_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7657: Ignoring function call through function pointer *(s->init): err = (*(s->init))(cam); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            79736 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  73333 (92%)
  Because of loop head:            5663 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         740 (1%)
  Times precision was empty:       6813 (9%)
  Times precision was {false}:     900 (1%)
  Times result was cached:         59425 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12598 (16%)
  Times result was 'false':        9944 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         64764
  BDD entailment checks:           40916
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          99
Number of abstraction locations:          106
Max number of predicates per location:    49
Avg number of predicates per location:    12
Total predicates per abstraction:         715012
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 52.97
Number of irrelevant predicates:          85219 (12%)
Number of preds handled by boolean abs:   152146 (21%)
  Total number of models for allsat:      113043
  Max number of models for allsat:        792
  Avg number of models for allsat:        8.97

Time for post operator:                 12.719s
  Time for path formula creation:       12.570s
Time for strengthen operator:            0.244s
Time for prec operator:                309.441s
  Time for abstraction:                308.376s (Max:     2.655s, Count: 79736)
    Boolean abstraction:               274.206s
    Solving time:                       53.253s (Max:     0.583s)
    Model enumeration time:            212.241s
    Time for BDD construction:           6.699s (Max:     0.095s)
Time for merge operator:                 0.347s
Time for coverage check:                 0.238s
  Time for BDD entailment checks:        0.217s
Total time for SMT solver (w/o itp):   265.494s

Number of path formula cache hits:   310035 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.251s

Total number of created targets for pointer analysis: 58936
   Number of created targets for uf: *signed_int is 145
   Number of created targets for uf: *unsigned_char is 561
   Number of created targets for uf: *(struct_list_head)* is 417
   Number of created targets for uf: *unsigned_int is 5849


Number of BDD nodes:                               118402
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      165257 (count: 185223, min: 0, max: 2969, avg: 0.89)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.102s (in 6 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.645s
  Time for transition matches:                         0.333s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       356543 (count: 356543, min: 1, max: 1, avg: 1.00) [1 x 356543]

CPA algorithm statistics
------------------------
Number of iterations:            259932
Max size of waitlist:            147
Average size of waitlist:        59
Number of computed successors:   296446
Max successors for one state:    2
Number of times merged:          11924
Number of times stopped:         18498
Number of times breaked:         740

Total time for CPA algorithm:       329.302s (Max:    39.394s)
  Time for choose from waitlist:      0.123s
  Time for precision adjustment:    310.820s
  Time for transfer relation:        16.057s
  Time for merge operator:            0.597s
  Time for stop operator:             0.566s
  Time for adding to reached set:     0.422s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   740
Avg. length of target path (in blocks):              111229 (count: 740, min: 6, max: 437, avg: 150.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 560.777s
  Counterexample analysis:                           559.165s (Max:     3.427s, Calls: 740)
    Refinement sat check:                            509.434s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.062s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.191s
  Precision update:                                    0.367s
  ARG update:                                          0.485s

Length of refined path (in blocks):                  106696 (count: 739, min: 4, max: 436, avg: 144.38)
Number of affected states:                            17446 (count: 739, min: 1, max: 293, avg: 23.61)
Length (states) of path with itp 'true':              88511 (count: 739, min: 0, max: 423, avg: 119.77)
Length (states) of path with itp non-trivial itp:     17446 (count: 739, min: 1, max: 293, avg: 23.61)
Length (states) of path with itp 'false':               739 (count: 739, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         700 (count: 739, min: 0, max: 31, avg: 0.95)
Equal non-trivial interpolants along paths:           16007 (count: 739, min: 0, max: 277, avg: 21.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                740
Number of successful refinements:     739
Number of failed refinements:         0
Max. size of reached set before ref.: 8395
Max. size of reached set after ref.:  8298
Avg. size of reached set before ref.: 2011.01
Avg. size of reached set after ref.:  1651.08

Total time for CEGAR algorithm:     892.776s
Time for refinements:               562.769s
Average time for refinement:          0.760s
Max time for refinement:              3.446s

Code Coverage
-----------------------------
  Function coverage:      0.115
  Visited lines:          1129
  Total lines:            10405
  Line coverage:          0.109
  Visited conditions:     135
  Total conditions:       2584
  Condition coverage:     0.052

CPAchecker general statistics
-----------------------------
Number of program locations:     13817
Number of CFA edges:             16102
Number of relevant variables:    2279
Number of functions:             381
Number of loops:                 56
Size of reached set:             2568
  Number of reached locations:   415 (3%)
    Avg states per location:     6
    Max states per location:     66 (at node N453)
  Number of reached functions:   44 (12%)
  Number of partitions:          2457
    Avg size of partitions:      1
    Max size of partitions:      33 (with key [N466 (before line 4935), Function sn9c102_empty_framequeues called from node N3270, stack depth 3 [64eb2c24], stack [main, sn9c102_open, sn9c102_empty_framequeues]])
  Number of target states:       1
  Size of final wait list        65

Time for analysis setup:          7.737s
  Time for loading CPAs:          0.784s
  Time for loading parser:        0.443s
  Time for CFA construction:      6.443s
    Time for parsing file(s):     0.962s
    Time for AST to CFA:          2.430s
    Time for CFA sanity check:    0.575s
    Time for post-processing:     2.213s
      Time for var class.:        1.425s
Time for Analysis:              892.776s
CPU time for analysis:          892.510s
Total time for CPAchecker:      900.516s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              0.178s

Time for Garbage Collector:       3.824s (in 426 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                150MB (   143 MiB) max;     98MB (    94 MiB) avg;    152MB (   145 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           160MB (   152 MiB) max;    144MB (   137 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8896MB (  8484 MiB) max;   8518MB (  8123 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
