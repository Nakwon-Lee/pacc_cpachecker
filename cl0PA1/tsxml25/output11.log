scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--sn9c102--sn9c102.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lju_ybrz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4070: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4073: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4076: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4124-4125: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4128-4129: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4136-4137: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10862: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10906: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10950: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11004: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11038: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11254: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11412: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15912: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17302: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: [!(err != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: -5 (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: 0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23036: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29074: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30266: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33626: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34823: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4497: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2172 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1990 (92%)
  Because of loop head:            161 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         21 (1%)
  Times precision was empty:       1545 (71%)
  Times precision was {false}:     48 (2%)
  Times result was cached:         461 (21%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      118 (5%)
  Times result was 'false':        175 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         1200
  BDD entailment checks:           300
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          6
Number of abstraction locations:          10
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         1899
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.44
Number of irrelevant predicates:          904 (48%)
Number of preds handled by boolean abs:   330 (17%)
  Total number of models for allsat:      118
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  7.255s
  Time for path formula creation:        7.210s
Time for strengthen operator:            0.024s
Time for prec operator:                  0.983s
  Time for abstraction:                  0.843s (Max:     0.020s, Count: 2172)
    Boolean abstraction:                 0.233s
    Solving time:                        0.213s (Max:     0.017s)
    Model enumeration time:              0.020s
    Time for BDD construction:           0.025s (Max:     0.006s)
Time for merge operator:                 0.037s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.022s
Total time for SMT solver (w/o itp):     0.233s

Number of path formula cache hits:   14408 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.090s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_usb_device)* is 2


Number of BDD nodes:                               222
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         241 (count: 2840, min: 0, max: 169, avg: 0.08)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.129s
Automaton transfers with branching:                0
Automaton transfer successors:                        14965 (count: 14965, min: 1, max: 1, avg: 1.00) [1 x 14965]

CPA algorithm statistics
------------------------
Number of iterations:            7345
Max size of waitlist:            43
Average size of waitlist:        18
Number of computed successors:   8691
Max successors for one state:    2
Number of times merged:          450
Number of times stopped:         614
Number of times breaked:         21

Total time for CPA algorithm:         9.472s (Max:     7.112s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      1.203s
  Time for transfer relation:         7.848s
  Time for merge operator:            0.073s
  Time for stop operator:             0.070s
  Time for adding to reached set:     0.106s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   21
Avg. length of target path (in blocks):                 172 (count: 21, min: 6, max: 12, avg: 8.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.032s
  Counterexample analysis:                            13.929s (Max:     1.261s, Calls: 21)
    Refinement sat check:                             13.342s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.007s
  ARG update:                                          0.068s

Length of refined path (in blocks):                     140 (count: 20, min: 5, max: 8, avg: 7.00)
Number of affected states:                              100 (count: 20, min: 3, max: 6, avg: 5.00)
Length (states) of path with itp 'true':                 20 (count: 20, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       100 (count: 20, min: 3, max: 6, avg: 5.00)
Length (states) of path with itp 'false':                20 (count: 20, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 20, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              80 (count: 20, min: 2, max: 5, avg: 4.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                21
Number of successful refinements:     20
Number of failed refinements:         0
Max. size of reached set before ref.: 555
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 382.05
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      23.565s
Time for refinements:                14.093s
Average time for refinement:          0.671s
Max time for refinement:              1.281s

Code Coverage
-----------------------------
  Function coverage:      0.092
  Visited lines:          1107
  Total lines:            10405
  Line coverage:          0.106
  Visited conditions:     82
  Total conditions:       2584
  Condition coverage:     0.032

CPAchecker general statistics
-----------------------------
Number of program locations:     13817
Number of CFA edges:             16102
Number of relevant variables:    2279
Number of functions:             381
Number of loops:                 56
Size of reached set:             527
  Number of reached locations:   274 (2%)
    Avg states per location:     1
    Max states per location:     9 (at node N13025)
  Number of reached functions:   35 (9%)
  Number of partitions:          525
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N5899 (before line 10751), Function main called from node N5778, stack depth 1 [7318d347], stack [main]])
  Number of target states:       1
  Size of final wait list        31

Time for analysis setup:          7.082s
  Time for loading CPAs:          0.714s
  Time for loading parser:        0.396s
  Time for CFA construction:      5.878s
    Time for parsing file(s):     0.919s
    Time for AST to CFA:          1.968s
    Time for CFA sanity check:    0.527s
    Time for post-processing:     2.209s
      Time for var class.:        1.546s
Time for Analysis:               23.565s
CPU time for analysis:           23.570s
Total time for CPAchecker:       30.657s
Total CPU time for CPAchecker:   30.620s
Time for statistics:              0.106s

Time for Garbage Collector:       0.670s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                128MB (   122 MiB) max;     99MB (    94 MiB) avg;    136MB (   130 MiB) peak
Used non-heap memory:             45MB (    42 MiB) max;     38MB (    37 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           157MB (   149 MiB) max;    151MB (   144 MiB) avg
Allocated non-heap memory:        46MB (    44 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
