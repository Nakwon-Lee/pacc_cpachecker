scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--sn9c102--sn9c102.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2ewd4fgy/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4070: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4073: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4076: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4124-4125: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4128-4129: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4136-4137: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10862: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10906: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10950: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11004: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11038: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11254: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11412: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15912: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17302: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: [!(err != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: -5 (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: 0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23036: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29074: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30266: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33626: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34823: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4497: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l_printk_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4497: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_32_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            76254 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  69768 (91%)
  Because of loop head:            4840 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1646 (2%)
  Times precision was empty:       23995 (31%)
  Times precision was {false}:     268 (0%)
  Times result was cached:         50921 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1070 (1%)
  Times result was 'false':        4944 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         32752
  BDD entailment checks:           14624
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          15
Number of abstraction locations:          112
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         121913
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 91.12
Number of irrelevant predicates:          53845 (44%)
Number of preds handled by boolean abs:   2664 (2%)
  Total number of models for allsat:      1092
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                  8.547s
  Time for path formula creation:        8.455s
Time for strengthen operator:            0.239s
Time for prec operator:                  8.851s
  Time for abstraction:                  8.208s (Max:     2.248s, Count: 76254)
    Boolean abstraction:                 3.376s
    Solving time:                        3.320s (Max:     2.206s)
    Model enumeration time:              0.110s
    Time for BDD construction:           0.045s (Max:     0.006s)
Time for merge operator:                 0.096s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     3.430s

Number of path formula cache hits:   382829 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.377s

Total number of created targets for pointer analysis: 712
   Number of created targets for uf: *unsigned_char is 161
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *unsigned_int is 137


Number of BDD nodes:                               430
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2726 (count: 46741, min: 0, max: 198, avg: 0.06)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.511s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       310222 (count: 310222, min: 1, max: 1, avg: 1.00) [1 x 310222]

CPA algorithm statistics
------------------------
Number of iterations:            236481
Max size of waitlist:            19
Average size of waitlist:        11
Number of computed successors:   263460
Max successors for one state:    2
Number of times merged:          9064
Number of times stopped:         18021
Number of times breaked:         1646

Total time for CPA algorithm:        22.466s (Max:     7.027s)
  Time for choose from waitlist:      0.092s
  Time for precision adjustment:      9.928s
  Time for transfer relation:        11.243s
  Time for merge operator:            0.212s
  Time for stop operator:             0.262s
  Time for adding to reached set:     0.235s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1646
Avg. length of target path (in blocks):               44432 (count: 1646, min: 6, max: 43, avg: 26.99)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 868.555s
  Counterexample analysis:                           867.304s (Max:     1.048s, Calls: 1646)
    Refinement sat check:                            829.882s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.036s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.148s
  Precision update:                                    0.282s
  ARG update:                                          0.474s

Length of refined path (in blocks):                   41872 (count: 1645, min: 5, max: 42, avg: 25.45)
Number of affected states:                            16430 (count: 1645, min: 3, max: 40, avg: 9.99)
Length (states) of path with itp 'true':              23797 (count: 1645, min: 1, max: 29, avg: 14.47)
Length (states) of path with itp non-trivial itp:     16430 (count: 1645, min: 3, max: 40, avg: 9.99)
Length (states) of path with itp 'false':              1645 (count: 1645, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:        1533 (count: 1645, min: 0, max: 3, avg: 0.93)
Equal non-trivial interpolants along paths:           13252 (count: 1645, min: 1, max: 39, avg: 8.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1646
Number of successful refinements:     1645
Number of failed refinements:         0
Max. size of reached set before ref.: 1659
Max. size of reached set after ref.:  1385
Avg. size of reached set before ref.: 882.10
Avg. size of reached set after ref.:  736.43

Total time for CEGAR algorithm:     892.938s
Time for refinements:               869.714s
Average time for refinement:          0.528s
Max time for refinement:              1.051s

Code Coverage
-----------------------------
  Function coverage:      0.150
  Visited lines:          1258
  Total lines:            10405
  Line coverage:          0.121
  Visited conditions:     173
  Total conditions:       2584
  Condition coverage:     0.067

CPAchecker general statistics
-----------------------------
Number of program locations:     13817
Number of CFA edges:             16102
Number of relevant variables:    2279
Number of functions:             381
Number of loops:                 56
Size of reached set:             1363
  Number of reached locations:   583 (4%)
    Avg states per location:     2
    Max states per location:     14 (at node N208)
  Number of reached functions:   57 (15%)
  Number of partitions:          1347
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5899 (before line 10751), Function main called from node N5778, stack depth 1 [2de8f1dd], stack [main]])
  Number of target states:       1
  Size of final wait list        15

Time for analysis setup:          7.793s
  Time for loading CPAs:          0.888s
  Time for loading parser:        0.504s
  Time for CFA construction:      6.285s
    Time for parsing file(s):     1.065s
    Time for AST to CFA:          2.302s
    Time for CFA sanity check:    0.596s
    Time for post-processing:     2.049s
      Time for var class.:        1.344s
Time for Analysis:              892.938s
CPU time for analysis:          892.820s
Total time for CPAchecker:      900.735s
Total CPU time for CPAchecker:  900.580s
Time for statistics:              0.106s

Time for Garbage Collector:       1.063s (in 167 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     70MB (    66 MiB) avg;    125MB (   119 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8561MB (  8164 MiB) max;   8321MB (  7936 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
