scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--sn9c102--sn9c102.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_21lehkrk/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4070: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4073: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4076: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4124-4125: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4128-4129: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4136-4137: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10862: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10906: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10950: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11004: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11038: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11254: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11412: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15912: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17302: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: [!(err != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: -5 (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: 0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23036: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29074: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30266: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33626: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34823: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4497: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_altnum_to_altsetting to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l_printk_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            79002 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  72691 (92%)
  Because of loop head:            5577 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         734 (1%)
  Times precision was empty:       6750 (9%)
  Times precision was {false}:     874 (1%)
  Times result was cached:         59133 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      12245 (15%)
  Times result was 'false':        9823 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         63299
  BDD entailment checks:           39601
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          99
Number of abstraction locations:          95
Max number of predicates per location:    49
Avg number of predicates per location:    13
Total predicates per abstraction:         704174
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 53.68
Number of irrelevant predicates:          84200 (12%)
Number of preds handled by boolean abs:   145076 (21%)
  Total number of models for allsat:      107032
  Max number of models for allsat:        792
  Avg number of models for allsat:        8.74

Time for post operator:                 13.447s
  Time for path formula creation:       13.290s
Time for strengthen operator:            0.290s
Time for prec operator:                304.275s
  Time for abstraction:                303.138s (Max:     2.835s, Count: 79002)
    Boolean abstraction:               265.726s
    Solving time:                       52.937s (Max:     0.667s)
    Model enumeration time:            203.543s
    Time for BDD construction:           7.066s (Max:     0.109s)
Time for merge operator:                 0.315s
Time for coverage check:                 0.234s
  Time for BDD entailment checks:        0.221s
Total time for SMT solver (w/o itp):   256.480s

Number of path formula cache hits:   308905 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.865s

Total number of created targets for pointer analysis: 53296
   Number of created targets for uf: *signed_int is 1153
   Number of created targets for uf: *unsigned_char is 6881
   Number of created targets for uf: *(struct_list_head)* is 401
   Number of created targets for uf: *unsigned_int is 29921


Number of BDD nodes:                               256677
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      160313 (count: 180206, min: 0, max: 2847, avg: 0.89)
Time for BDD node cleanup:                             0.054s
Time for BDD garbage collection:                       0.056s (in 5 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.712s
  Time for transition matches:                         0.364s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                       353248 (count: 353248, min: 1, max: 1, avg: 1.00) [1 x 353248]

CPA algorithm statistics
------------------------
Number of iterations:            257604
Max size of waitlist:            147
Average size of waitlist:        59
Number of computed successors:   293808
Max successors for one state:    2
Number of times merged:          11849
Number of times stopped:         18380
Number of times breaked:         734

Total time for CPA algorithm:       325.530s (Max:    40.088s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:    305.916s
  Time for transfer relation:        17.133s
  Time for merge operator:            0.590s
  Time for stop operator:             0.554s
  Time for adding to reached set:     0.454s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   734
Avg. length of target path (in blocks):              109463 (count: 734, min: 6, max: 437, avg: 149.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 564.252s
  Counterexample analysis:                           562.534s (Max:     4.004s, Calls: 734)
    Refinement sat check:                            512.262s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.056s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.217s
  Precision update:                                    0.378s
  ARG update:                                          0.514s

Length of refined path (in blocks):                  104932 (count: 733, min: 4, max: 436, avg: 143.15)
Number of affected states:                            17259 (count: 733, min: 1, max: 293, avg: 23.55)
Length (states) of path with itp 'true':              86940 (count: 733, min: 0, max: 423, avg: 118.61)
Length (states) of path with itp non-trivial itp:     17259 (count: 733, min: 1, max: 293, avg: 23.55)
Length (states) of path with itp 'false':               733 (count: 733, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         700 (count: 733, min: 0, max: 31, avg: 0.95)
Equal non-trivial interpolants along paths:           15826 (count: 733, min: 0, max: 277, avg: 21.59)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                734
Number of successful refinements:     733
Number of failed refinements:         0
Max. size of reached set before ref.: 8395
Max. size of reached set after ref.:  8298
Avg. size of reached set before ref.: 1998.92
Avg. size of reached set after ref.:  1639.29

Total time for CEGAR algorithm:     892.662s
Time for refinements:               566.406s
Average time for refinement:          0.771s
Max time for refinement:              4.025s

Code Coverage
-----------------------------
  Function coverage:      0.115
  Visited lines:          1129
  Total lines:            10405
  Line coverage:          0.109
  Visited conditions:     135
  Total conditions:       2584
  Condition coverage:     0.052

CPAchecker general statistics
-----------------------------
Number of program locations:     13817
Number of CFA edges:             16102
Number of relevant variables:    2279
Number of functions:             381
Number of loops:                 56
Size of reached set:             2678
  Number of reached locations:   415 (3%)
    Avg states per location:     6
    Max states per location:     66 (at node N453)
  Number of reached functions:   44 (12%)
  Number of partitions:          2566
    Avg size of partitions:      1
    Max size of partitions:      33 (with key [N466 (before line 4935), Function sn9c102_empty_framequeues called from node N3270, stack depth 3 [560bf114], stack [main, sn9c102_open, sn9c102_empty_framequeues]])
  Number of target states:       1
  Size of final wait list        64

Time for analysis setup:          7.937s
  Time for loading CPAs:          0.920s
  Time for loading parser:        0.489s
  Time for CFA construction:      6.415s
    Time for parsing file(s):     1.033s
    Time for AST to CFA:          2.308s
    Time for CFA sanity check:    0.606s
    Time for post-processing:     2.230s
      Time for var class.:        1.572s
Time for Analysis:              892.662s
CPU time for analysis:          892.410s
Total time for CPAchecker:      900.603s
Total CPU time for CPAchecker:  900.320s
Time for statistics:              0.127s

Time for Garbage Collector:       3.620s (in 367 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                156MB (   148 MiB) max;    117MB (   111 MiB) avg;    159MB (   151 MiB) peak
Used non-heap memory:             48MB (    45 MiB) max;     44MB (    42 MiB) avg;     48MB (    45 MiB) peak
Allocated heap memory:           161MB (   153 MiB) max;    158MB (   151 MiB) avg
Allocated non-heap memory:        50MB (    47 MiB) max;     49MB (    47 MiB) avg
Total process virtual memory:   8898MB (  8486 MiB) max;   8502MB (  8108 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
