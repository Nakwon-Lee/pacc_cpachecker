scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--sn9c102--sn9c102.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_he7emup7/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4070: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4073: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4076: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4124-4125: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4128-4129: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4136-4137: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10862: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10906: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10950: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11004: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11038: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11254: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11412: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15912: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17302: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: [!(err != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: -5 (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: 0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23036: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29074: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30266: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33626: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34823: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4497: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l_printk_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4453: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_32_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 8888: Ignoring function call through function pointer *(s->set_ctrl): err = (*(s->set_ctrl))(cam, (const struct v4l2_control *)(&ctrl)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9084: Ignoring function call through function pointer *(s->set_crop): tmp___1 = (*(s->set_crop))(cam, (const struct v4l2_rect *)rect); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9473: Ignoring function call through function pointer *(s->set_pix_format): tmp___4 = (*(s->set_pix_format))(cam, (const struct v4l2_pix_format *)pix); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 9480: Ignoring function call through function pointer *(s->set_crop): tmp___5 = (*(s->set_crop))(cam, (const struct v4l2_rect *)(&rect)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1052073 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  974957 (93%)
  Because of loop head:            76803 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         313 (0%)
  Times precision was empty:       296221 (28%)
  Times precision was {false}:     1605 (0%)
  Times result was cached:         751470 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2777 (0%)
  Times result was 'false':        34334 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1433377
  BDD entailment checks:           187399
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       61
Number of predicates discovered:          30
Number of abstraction locations:          392
Max number of predicates per location:    11
Avg number of predicates per location:    1
Total predicates per abstraction:         1596568
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 364.35
Number of irrelevant predicates:          779414 (49%)
Number of preds handled by boolean abs:   10398 (1%)
  Total number of models for allsat:      3077
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.11

Time for post operator:                 70.609s
  Time for path formula creation:       68.896s
Time for strengthen operator:            4.572s
Time for prec operator:                467.404s
  Time for abstraction:                456.636s (Max:    33.013s, Count: 1052073)
    Boolean abstraction:               117.675s
    Solving time:                      298.158s (Max:    32.974s)
    Model enumeration time:              1.669s
    Time for BDD construction:           0.105s (Max:     0.002s)
Time for merge operator:                 5.989s
Time for coverage check:                 0.263s
  Time for BDD entailment checks:        0.138s
Total time for SMT solver (w/o itp):   299.827s

Number of path formula cache hits:   8864588 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.463s

Total number of created targets for pointer analysis: 716420
   Number of created targets for uf: *signed_int is 291
   Number of created targets for uf: *unsigned_char is 429397
   Number of created targets for uf: *(struct_list_head)* is 6
   Number of created targets for uf: *unsigned_int is 2604


Number of BDD nodes:                               1394
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7585 (count: 511570, min: 0, max: 231, avg: 0.01)
Time for BDD node cleanup:                             0.051s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.669s
  Time for transition matches:                         3.496s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      7619550 (count: 7619550, min: 1, max: 1, avg: 1.00) [1 x 7619550]

CPA algorithm statistics
------------------------
Number of iterations:            5082052
Max size of waitlist:            87
Average size of waitlist:        56
Number of computed successors:   5901014
Max successors for one state:    2
Number of times merged:          622989
Number of times stopped:         778843
Number of times breaked:         313

Total time for CPA algorithm:       647.511s (Max:    57.458s)
  Time for choose from waitlist:      1.295s
  Time for precision adjustment:    488.594s
  Time for transfer relation:       129.185s
  Time for merge operator:           10.072s
  Time for stop operator:             4.099s
  Time for adding to reached set:     5.681s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   313
Avg. length of target path (in blocks):               14421 (count: 313, min: 12, max: 96, avg: 46.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 239.176s
  Counterexample analysis:                           230.616s (Max:     1.415s, Calls: 313)
    Refinement sat check:                            220.351s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.006s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.136s
  Precision update:                                    0.116s
  ARG update:                                          8.142s

Length of refined path (in blocks):                   13454 (count: 312, min: 11, max: 95, avg: 43.12)
Number of affected states:                             8647 (count: 312, min: 0, max: 84, avg: 27.71)
Length (states) of path with itp 'true':               4495 (count: 312, min: 1, max: 49, avg: 14.41)
Length (states) of path with itp non-trivial itp:      8647 (count: 312, min: 0, max: 84, avg: 27.71)
Length (states) of path with itp 'false':               312 (count: 312, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         416 (count: 312, min: 0, max: 7, avg: 1.33)
Equal non-trivial interpolants along paths:            7920 (count: 312, min: 0, max: 81, avg: 25.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                313
Number of successful refinements:     312
Number of failed refinements:         0
Max. size of reached set before ref.: 51238
Max. size of reached set after ref.:  47438
Avg. size of reached set before ref.: 21790.20
Avg. size of reached set after ref.:  5552.87

Total time for CEGAR algorithm:     891.896s
Time for refinements:               243.088s
Average time for refinement:          0.776s
Max time for refinement:              1.453s

Code Coverage
-----------------------------
  Function coverage:      0.352
  Visited lines:          3510
  Total lines:            10405
  Line coverage:          0.337
  Visited conditions:     1203
  Total conditions:       2584
  Condition coverage:     0.466

CPAchecker general statistics
-----------------------------
Number of program locations:     13817
Number of CFA edges:             16102
Number of relevant variables:    2279
Number of functions:             381
Number of loops:                 56
Size of reached set:             30249
  Number of reached locations:   2878 (21%)
    Avg states per location:     10
    Max states per location:     801 (at node N310)
  Number of reached functions:   134 (35%)
  Number of partitions:          30050
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N3800 (before lines 8561-8569), Function sn9c102_vidioc_querycap called from node N5351, stack depth 4 [5b62894e], stack [main, sn9c102_ioctl, sn9c102_ioctl_v4l2, sn9c102_vidioc_querycap]])
  Number of target states:       1
  Size of final wait list        55

Time for analysis setup:          8.412s
  Time for loading CPAs:          0.941s
  Time for loading parser:        0.515s
  Time for CFA construction:      6.853s
    Time for parsing file(s):     1.260s
    Time for AST to CFA:          2.260s
    Time for CFA sanity check:    0.765s
    Time for post-processing:     2.176s
      Time for var class.:        1.434s
Time for Analysis:              891.896s
CPU time for analysis:          891.780s
Total time for CPAchecker:      900.311s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.507s

Time for Garbage Collector:      42.597s (in 1809 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                450MB (   429 MiB) max;    208MB (   199 MiB) avg;    477MB (   455 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     40MB (    38 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           530MB (   505 MiB) max;    302MB (   288 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8430MB (  8039 MiB) max;   8303MB (  7918 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
