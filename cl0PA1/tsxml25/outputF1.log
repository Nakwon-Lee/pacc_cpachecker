scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/linux-3.8-rc1-32_7a-drivers--media--usb--sn9c102--sn9c102.ko-ldv_main0_true-unreach-call.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_82w4w8x6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4070: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4073: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4076: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2869;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

lines 4124-4125: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4128-4129: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 4136-4137: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 2UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 4UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  case 8UL:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5527;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 10804: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10862: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10906: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10950: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11004: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11038: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11082: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11136: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11200: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11254: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11278: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11412: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11446: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11530: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 13105: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15912: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17302: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19118: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: [!(err != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: -5 (CFACreationUtils.addEdgeToCFA, INFO)

line 19445: Dead code detected: 0 (CFACreationUtils.addEdgeToCFA, INFO)

line 20829: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23036: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 25150: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 29074: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 30266: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 33626: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 34823: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4497: Function pointer *(p->_qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_devdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_set_interface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_32_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4497: Ignoring function call through function pointer *(p->_qproc): (*(p->_qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function v4l_printk_ioctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_alloc to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function video_device_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10456: Ignoring function call through function pointer *(sn9c102_sensor_table[i]): err = (*(sn9c102_sensor_table[i]))(cam); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_match_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7657: Ignoring function call through function pointer *(s->init): err = (*(s->init))(cam); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7698: Ignoring function call through function pointer *(s->set_pix_format): tmp___4 = (*(s->set_pix_format))(cam, (const struct v4l2_pix_format *)(&(s->pix_format))); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7724: Ignoring function call through function pointer *(s->set_crop): err = (*(s->set_crop))(cam, (const struct v4l2_rect *)rect); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 7747: Ignoring function call through function pointer *(s->set_ctrl): err = (*(s->set_ctrl))(cam, (const struct v4l2_control *)(&ctrl)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __video_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            500035 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  461480 (92%)
  Because of loop head:            37484 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1071 (0%)
  Times precision was empty:       361662 (72%)
  Times precision was {false}:     934 (0%)
  Times result was cached:         134880 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2559 (1%)
  Times result was 'false':        4153 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         396570
  BDD entailment checks:           74000
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       463
Number of predicates discovered:          17
Number of abstraction locations:          147
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         569161
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 162.94
Number of irrelevant predicates:          466633 (82%)
Number of preds handled by boolean abs:   6846 (1%)
  Total number of models for allsat:      2605
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                 65.146s
  Time for path formula creation:       64.256s
Time for strengthen operator:            2.355s
Time for prec operator:                210.033s
  Time for abstraction:                204.900s (Max:     4.644s, Count: 500035)
    Boolean abstraction:                 9.857s
    Solving time:                       61.301s (Max:     4.316s)
    Model enumeration time:              0.498s
    Time for BDD construction:           0.094s (Max:     0.012s)
Time for merge operator:                 2.096s
Time for coverage check:                 0.083s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):    61.799s

Number of path formula cache hits:   4428616 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    47.632s

Total number of created targets for pointer analysis: 1897777
   Number of created targets for uf: *(struct_video_device)* is 2
   Number of created targets for uf: *enum_sn9c102_bridge is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *signed_int is 19783
   Number of created targets for uf: *unsigned_char is 2610
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *enum_sn9c102_dev_state is 4
   Number of created targets for uf: *unsigned_int is 137
   Number of created targets for uf: *signed_short_int is 61
   Number of created targets for uf: *unsigned_long_int is 179


Number of BDD nodes:                               604
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6344 (count: 456229, min: 0, max: 200, avg: 0.01)
Time for BDD node cleanup:                             0.046s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.543s
  Time for transition matches:                         2.052s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                      4009397 (count: 4009397, min: 1, max: 1, avg: 1.00) [1 x 4009397]

CPA algorithm statistics
------------------------
Number of iterations:            1965160
Max size of waitlist:            5343
Average size of waitlist:        1766
Number of computed successors:   2347082
Max successors for one state:    2
Number of times merged:          161285
Number of times stopped:         230921
Number of times breaked:         1071

Total time for CPA algorithm:       321.301s (Max:    41.616s)
  Time for choose from waitlist:      0.658s
  Time for precision adjustment:    218.888s
  Time for transfer relation:        91.678s
  Time for merge operator:            3.167s
  Time for stop operator:             1.622s
  Time for adding to reached set:     2.112s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1071
Avg. length of target path (in blocks):               27370 (count: 1071, min: 6, max: 45, avg: 25.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 568.698s
  Counterexample analysis:                           564.820s (Max:     0.937s, Calls: 1071)
    Refinement sat check:                            542.505s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.270s
  ARG update:                                          3.312s

Length of refined path (in blocks):                   25183 (count: 1071, min: 5, max: 44, avg: 23.51)
Number of affected states:                            10295 (count: 1071, min: 3, max: 42, avg: 9.61)
Length (states) of path with itp 'true':              13817 (count: 1071, min: 1, max: 27, avg: 12.90)
Length (states) of path with itp non-trivial itp:     10295 (count: 1071, min: 3, max: 42, avg: 9.61)
Length (states) of path with itp 'false':              1071 (count: 1071, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         508 (count: 1071, min: 0, max: 3, avg: 0.47)
Equal non-trivial interpolants along paths:            8716 (count: 1071, min: 1, max: 41, avg: 8.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1071
Number of successful refinements:     1071
Number of failed refinements:         0
Max. size of reached set before ref.: 74030
Max. size of reached set after ref.:  863
Avg. size of reached set before ref.: 2523.35
Avg. size of reached set after ref.:  560.19

Total time for CEGAR algorithm:     891.916s
Time for refinements:               570.153s
Average time for refinement:          0.532s
Max time for refinement:              0.940s

Code Coverage
-----------------------------
  Function coverage:      0.323
  Visited lines:          3092
  Total lines:            10405
  Line coverage:          0.297
  Visited conditions:     571
  Total conditions:       2584
  Condition coverage:     0.221

CPAchecker general statistics
-----------------------------
Number of program locations:     13817
Number of CFA edges:             16102
Number of relevant variables:    2279
Number of functions:             381
Number of loops:                 56
Size of reached set:             9464
  Number of reached locations:   1363 (10%)
    Avg states per location:     6
    Max states per location:     265 (at node N311)
  Number of reached functions:   123 (32%)
  Number of partitions:          9456
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5659 (before line 10504), Function sn9c102_usb_probe called from node N5875, stack depth 2 [5eac70bb], stack [main, sn9c102_usb_probe]])
  Number of target states:       0
  Size of final wait list        774

Time for analysis setup:          8.398s
  Time for loading CPAs:          0.809s
  Time for loading parser:        0.572s
  Time for CFA construction:      6.935s
    Time for parsing file(s):     1.141s
    Time for AST to CFA:          2.549s
    Time for CFA sanity check:    0.687s
    Time for post-processing:     2.243s
      Time for var class.:        1.531s
Time for Analysis:              891.916s
CPU time for analysis:          891.830s
Total time for CPAchecker:      900.317s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.228s

Time for Garbage Collector:      25.210s (in 1171 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                454MB (   433 MiB) max;    200MB (   191 MiB) avg;    475MB (   453 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     42MB (    40 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           475MB (   453 MiB) max;    292MB (   279 MiB) avg
Allocated non-heap memory:        49MB (    47 MiB) max;     49MB (    46 MiB) avg
Total process virtual memory:   8717MB (  8313 MiB) max;   8450MB (  8059 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
