scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--v4l2-core--videobuf-dma-contig.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b4j71__i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2994: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2997: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3000: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3324: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3357: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3161-3162: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3248: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3228: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3195: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_queue_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_vma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3228: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3357: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3195: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            58162 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46188 (79%)
  Because of loop head:            11802 (20%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         172 (0%)
  Times precision was empty:       15465 (27%)
  Times precision was {false}:     680 (1%)
  Times result was cached:         39163 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2854 (5%)
  Times result was 'false':        1973 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         33690
  BDD entailment checks:           15612
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          9
Number of abstraction locations:          103
Max number of predicates per location:    5
Avg number of predicates per location:    4
Total predicates per abstraction:         160337
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 45.37
Number of irrelevant predicates:          42306 (26%)
Number of preds handled by boolean abs:   6460 (4%)
  Total number of models for allsat:      2933
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  3.127s
  Time for path formula creation:        2.940s
Time for strengthen operator:            0.310s
Time for prec operator:                 13.427s
  Time for abstraction:                 12.712s (Max:     0.029s, Count: 58162)
    Boolean abstraction:                 1.932s
    Solving time:                        1.735s (Max:     0.020s)
    Model enumeration time:              0.127s
    Time for BDD construction:           0.171s (Max:     0.012s)
Time for merge operator:                 0.133s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     1.862s

Number of path formula cache hits:   368897 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.395s

Total number of created targets for pointer analysis: 257
   Number of created targets for uf: *(void)* is 9
   Number of created targets for uf: *(struct_videobuf_mapping)* is 7
   Number of created targets for uf: *(struct_videobuf_buffer)* is 21
   Number of created targets for uf: *(struct_videobuf_queue)* is 2
   Number of created targets for uf: *unsigned_int is 35
   Number of created targets for uf: *unsigned_long_int is 22


Number of BDD nodes:                               343
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5968 (count: 52297, min: 0, max: 262, avg: 0.11)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.735s
  Time for transition matches:                         0.397s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       327378 (count: 327378, min: 1, max: 1, avg: 1.00) [1 x 327378]

CPA algorithm statistics
------------------------
Number of iterations:            191679
Max size of waitlist:            83
Average size of waitlist:        40
Number of computed successors:   218944
Max successors for one state:    2
Number of times merged:          9039
Number of times stopped:         19069
Number of times breaked:         172

Total time for CPA algorithm:        24.199s (Max:     0.907s)
  Time for choose from waitlist:      0.128s
  Time for precision adjustment:     15.044s
  Time for transfer relation:         7.021s
  Time for merge operator:            0.370s
  Time for stop operator:             0.419s
  Time for adding to reached set:     0.357s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   172
Avg. length of target path (in blocks):                5086 (count: 172, min: 7, max: 69, avg: 29.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.294s
  Counterexample analysis:                             1.560s (Max:     0.027s, Calls: 172)
    Refinement sat check:                              1.007s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.072s
  Precision update:                                    0.103s
  ARG update:                                          0.454s

Length of refined path (in blocks):                    4699 (count: 172, min: 5, max: 68, avg: 27.32)
Number of affected states:                             2762 (count: 172, min: 3, max: 65, avg: 16.06)
Length (states) of path with itp 'true':               1765 (count: 172, min: 1, max: 37, avg: 10.26)
Length (states) of path with itp non-trivial itp:      2762 (count: 172, min: 3, max: 65, avg: 16.06)
Length (states) of path with itp 'false':               172 (count: 172, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          44 (count: 172, min: 0, max: 2, avg: 0.26)
Equal non-trivial interpolants along paths:            2546 (count: 172, min: 2, max: 64, avg: 14.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                172
Number of successful refinements:     172
Number of failed refinements:         0
Max. size of reached set before ref.: 3368
Max. size of reached set after ref.:  2550
Avg. size of reached set before ref.: 1875.37
Avg. size of reached set after ref.:  741.79

Total time for CEGAR algorithm:      27.089s
Time for refinements:                 2.790s
Average time for refinement:          0.016s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.449
  Visited lines:          1141
  Total lines:            1456
  Line coverage:          0.784
  Visited conditions:     176
  Total conditions:       310
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     1967
Number of CFA edges:             2165
Number of relevant variables:    261
Number of functions:             78
Number of loops:                 21
Size of reached set:             2927
  Number of reached locations:   534 (27%)
    Avg states per location:     5
    Max states per location:     162 (at node N1124)
  Number of reached functions:   35 (45%)
  Number of partitions:          2909
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1050 (before line 4275), Function main called from node N949, stack depth 1 [12cd9150], stack [main]])
  Number of target states:       0
  Size of final wait list        67

Time for analysis setup:          3.280s
  Time for loading CPAs:          0.631s
  Time for loading parser:        0.510s
  Time for CFA construction:      2.029s
    Time for parsing file(s):     0.606s
    Time for AST to CFA:          0.677s
    Time for CFA sanity check:    0.127s
    Time for post-processing:     0.483s
      Time for var class.:        0.217s
Time for Analysis:               27.089s
CPU time for analysis:           27.090s
Total time for CPAchecker:       30.372s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.173s

Time for Garbage Collector:       0.719s (in 114 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 71MB (    68 MiB) max;     47MB (    45 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
