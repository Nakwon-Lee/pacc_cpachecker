scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--media--v4l2-core--videobuf-dma-contig.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bw4sh7y6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2994: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2997: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3000: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4328: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3324: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3357: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3161-3162: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3248: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3228: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3195: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function videobuf_queue_cancel to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3195: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_pages_exact to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3357: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_vma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function follow_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vm_insert_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3228: Ignoring function call through function pointer *(ops->sync_single_for_cpu): (*(ops->sync_single_for_cpu))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 3161-3162: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3324: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_mapping_error to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3248: Ignoring function call through function pointer *(ops->mapping_error): tmp___0 = (*(ops->mapping_error))(dev, dma_addr); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            290675 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  241050 (83%)
  Because of loop head:            49207 (17%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         418 (0%)
  Times precision was empty:       40125 (14%)
  Times precision was {false}:     1837 (1%)
  Times result was cached:         218855 (75%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29858 (10%)
  Times result was 'false':        7235 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         244161
  BDD entailment checks:           101585
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       25
Number of predicates discovered:          31
Number of abstraction locations:          124
Max number of predicates per location:    18
Avg number of predicates per location:    6
Total predicates per abstraction:         1537794
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 48.52
Number of irrelevant predicates:          711374 (46%)
Number of preds handled by boolean abs:   133184 (9%)
  Total number of models for allsat:      102827
  Max number of models for allsat:        44
  Avg number of models for allsat:        3.44

Time for post operator:                 17.203s
  Time for path formula creation:       16.688s
Time for strengthen operator:            1.238s
Time for prec operator:                129.643s
  Time for abstraction:                126.881s (Max:     0.616s, Count: 290675)
    Boolean abstraction:                44.213s
    Solving time:                       27.072s (Max:     0.038s)
    Model enumeration time:             12.919s
    Time for BDD construction:           1.490s (Max:     0.019s)
Time for merge operator:                 0.988s
Time for coverage check:                 0.196s
  Time for BDD entailment checks:        0.141s
Total time for SMT solver (w/o itp):    39.991s

Number of path formula cache hits:   1469665 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.291s

Total number of created targets for pointer analysis: 9293
   Number of created targets for uf: *(void)* is 646
   Number of created targets for uf: *(struct_videobuf_mapping)* is 295
   Number of created targets for uf: *(struct_videobuf_buffer)* is 21
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *(struct_videobuf_queue)* is 2
   Number of created targets for uf: *unsigned_int is 317
   Number of created targets for uf: *unsigned_long_int is 479


Number of BDD nodes:                               17196
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       67811 (count: 334998, min: 0, max: 1172, avg: 0.20)
Time for BDD node cleanup:                             0.083s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.082s
  Time for transition matches:                         1.185s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      1569083 (count: 1569083, min: 1, max: 1, avg: 1.00) [1 x 1569083]

CPA algorithm statistics
------------------------
Number of iterations:            989154
Max size of waitlist:            153
Average size of waitlist:        65
Number of computed successors:   1127387
Max successors for one state:    2
Number of times merged:          71288
Number of times stopped:         116040
Number of times breaked:         418

Total time for CPA algorithm:       175.260s (Max:     2.919s)
  Time for choose from waitlist:      0.553s
  Time for precision adjustment:    135.911s
  Time for transfer relation:        31.507s
  Time for merge operator:            1.913s
  Time for stop operator:             1.317s
  Time for adding to reached set:     1.446s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   418
Avg. length of target path (in blocks):               23222 (count: 418, min: 12, max: 125, avg: 55.56)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.297s
  Counterexample analysis:                             7.109s (Max:     0.106s, Calls: 418)
    Refinement sat check:                              3.650s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.162s
  Precision update:                                    0.211s
  ARG update:                                          1.540s

Length of refined path (in blocks):                   19457 (count: 418, min: 5, max: 124, avg: 46.55)
Number of affected states:                             9875 (count: 418, min: 3, max: 89, avg: 23.62)
Length (states) of path with itp 'true':               9164 (count: 418, min: 0, max: 105, avg: 21.92)
Length (states) of path with itp non-trivial itp:      9875 (count: 418, min: 3, max: 89, avg: 23.62)
Length (states) of path with itp 'false':               418 (count: 418, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         513 (count: 418, min: 0, max: 10, avg: 1.23)
Equal non-trivial interpolants along paths:            8944 (count: 418, min: 1, max: 88, avg: 21.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                418
Number of successful refinements:     418
Number of failed refinements:         0
Max. size of reached set before ref.: 15434
Max. size of reached set after ref.:  7757
Avg. size of reached set before ref.: 4268.11
Avg. size of reached set after ref.:  1895.58

Total time for CEGAR algorithm:     186.689s
Time for refinements:                10.824s
Average time for refinement:          0.025s
Max time for refinement:              0.123s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          1201
  Total lines:            1456
  Line coverage:          0.825
  Visited conditions:     204
  Total conditions:       310
  Condition coverage:     0.658

CPAchecker general statistics
-----------------------------
Number of program locations:     1967
Number of CFA edges:             2165
Number of relevant variables:    261
Number of functions:             78
Number of loops:                 21
Size of reached set:             12393
  Number of reached locations:   620 (32%)
    Avg states per location:     19
    Max states per location:     531 (at node N1123)
  Number of reached functions:   39 (50%)
  Number of partitions:          12280
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1050 (before line 4275), Function main called from node N949, stack depth 1 [f415a95], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.204s
  Time for loading CPAs:          0.697s
  Time for loading parser:        0.484s
  Time for CFA construction:      1.921s
    Time for parsing file(s):     0.571s
    Time for AST to CFA:          0.679s
    Time for CFA sanity check:    0.112s
    Time for post-processing:     0.422s
      Time for var class.:        0.183s
Time for Analysis:              186.689s
CPU time for analysis:          186.650s
Time for analyzing result:        0.011s
Total time for CPAchecker:      189.895s
Total CPU time for CPAchecker:  189.850s
Time for statistics:              0.288s

Time for Garbage Collector:       8.634s (in 556 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                303MB (   289 MiB) max;    148MB (   141 MiB) avg;    310MB (   296 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           431MB (   411 MiB) max;    219MB (   209 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    40 MiB) avg
Total process virtual memory:   8423MB (  8033 MiB) max;   8184MB (  7804 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
