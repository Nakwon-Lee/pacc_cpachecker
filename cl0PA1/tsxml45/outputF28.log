scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6l_7bm8x/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2563078 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2152492 (84%)
  Because of loop head:            410069 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         517 (0%)
  Times precision was empty:       254312 (10%)
  Times precision was {false}:     2393 (0%)
  Times result was cached:         2248832 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57541 (2%)
  Times result was 'false':        80635 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         1445943
  BDD entailment checks:           589219
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          40
Number of abstraction locations:          257
Max number of predicates per location:    15
Avg number of predicates per location:    9
Total predicates per abstraction:         18320264
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 305.67
Number of irrelevant predicates:          4018788 (22%)
Number of preds handled by boolean abs:   401385 (2%)
  Total number of models for allsat:      75286
  Max number of models for allsat:        36
  Avg number of models for allsat:        1.31

Time for post operator:                149.902s
  Time for path formula creation:      146.291s
Time for strengthen operator:            9.556s
Time for prec operator:                553.998s
  Time for abstraction:                534.576s (Max:     5.230s, Count: 2563078)
    Boolean abstraction:                59.311s
    Solving time:                       49.628s (Max:     0.021s)
    Model enumeration time:              4.863s
    Time for BDD construction:           1.134s (Max:     0.010s)
Time for merge operator:                 4.139s
Time for coverage check:                 0.757s
  Time for BDD entailment checks:        0.547s
Total time for SMT solver (w/o itp):    54.491s

Number of path formula cache hits:   13352799 (79%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   117.488s

Total number of created targets for pointer analysis: 321716
   Number of created targets for uf: *signed_int is 576
   Number of created targets for uf: *(char)* is 86
   Number of created targets for uf: *(struct_usb_device)* is 266
   Number of created targets for uf: *(struct_urb)* is 2362
   Number of created targets for uf: *(struct_list_head)* is 12960
   Number of created targets for uf: *(unsigned_char)* is 1045
   Number of created targets for uf: *_Bool is 52
   Number of created targets for uf: *(struct_device)* is 266
   Number of created targets for uf: *unsigned_int is 169
   Number of created targets for uf: *char is 46
   Number of created targets for uf: *(struct_dlfb_data)* is 677
   Number of created targets for uf: *unsigned_long_int is 519


Number of BDD nodes:                               20328
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      132262 (count: 1230076, min: 0, max: 2843, avg: 0.11)
Time for BDD node cleanup:                             0.197s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.184s
  Time for transition matches:                         8.304s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     14629278 (count: 14629452, min: 0, max: 1, avg: 1.00) [0 x 174, 1 x 14629278]

CPA algorithm statistics
------------------------
Number of iterations:            8274607
Max size of waitlist:            46
Average size of waitlist:        20
Number of computed successors:   9188472
Max successors for one state:    2
Number of times merged:          428362
Number of times stopped:         822594
Number of times breaked:         517

Total time for CPA algorithm:       867.832s (Max:    13.883s)
  Time for choose from waitlist:      2.067s
  Time for precision adjustment:    590.775s
  Time for transfer relation:       236.150s
  Time for merge operator:            8.102s
  Time for stop operator:             7.371s
  Time for adding to reached set:     8.554s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   517
Avg. length of target path (in blocks):               31257 (count: 517, min: 9, max: 291, avg: 60.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  24.305s
  Counterexample analysis:                            11.345s (Max:     0.273s, Calls: 517)
    Refinement sat check:                              5.811s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.151s
  Precision update:                                    0.430s
  ARG update:                                         12.167s

Length of refined path (in blocks):                   27907 (count: 517, min: 4, max: 278, avg: 53.98)
Number of affected states:                            25443 (count: 517, min: 0, max: 277, avg: 49.21)
Length (states) of path with itp 'true':               1947 (count: 517, min: 0, max: 227, avg: 3.77)
Length (states) of path with itp non-trivial itp:     25443 (count: 517, min: 0, max: 277, avg: 49.21)
Length (states) of path with itp 'false':               517 (count: 517, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         180 (count: 517, min: 0, max: 5, avg: 0.35)
Equal non-trivial interpolants along paths:           24747 (count: 517, min: 0, max: 275, avg: 47.87)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                517
Number of successful refinements:     517
Number of failed refinements:         0
Max. size of reached set before ref.: 90604
Max. size of reached set after ref.:  10812
Avg. size of reached set before ref.: 16423.58
Avg. size of reached set after ref.:  556.81

Total time for CEGAR algorithm:     896.210s
Time for refinements:                28.190s
Average time for refinement:          0.054s
Max time for refinement:              0.337s

Code Coverage
-----------------------------
  Function coverage:      0.558
  Visited lines:          2049
  Total lines:            2807
  Line coverage:          0.730
  Visited conditions:     379
  Total conditions:       628
  Condition coverage:     0.604

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             82125
  Number of reached locations:   1165 (30%)
    Avg states per location:     70
    Max states per location:     1106 (at node N2803)
  Number of reached functions:   82 (56%)
  Number of partitions:          81418
    Avg size of partitions:      1
    Max size of partitions:      15 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        25

Time for analysis setup:          4.114s
  Time for loading CPAs:          0.762s
  Time for loading parser:        0.490s
  Time for CFA construction:      2.734s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          0.924s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.719s
      Time for var class.:        0.320s
Time for Analysis:              896.210s
CPU time for analysis:          896.170s
Total time for CPAchecker:      900.333s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.914s

Time for Garbage Collector:      73.186s (in 1408 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2306MB (  2199 MiB) max;   1037MB (   989 MiB) avg;   2324MB (  2216 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3069MB (  2927 MiB) max;   1587MB (  1513 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9975MB (  9513 MiB) max;   8726MB (  8322 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
