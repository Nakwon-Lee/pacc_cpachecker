scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q04l43sm/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2865441 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2639337 (92%)
  Because of loop head:            225281 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         823 (0%)
  Times precision was empty:       481105 (17%)
  Times precision was {false}:     2107 (0%)
  Times result was cached:         2338754 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43475 (2%)
  Times result was 'false':        95544 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         2874839
  BDD entailment checks:           1147419
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          191
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         17479178
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 383.47
Number of irrelevant predicates:          3865949 (22%)
Number of preds handled by boolean abs:   267521 (2%)
  Total number of models for allsat:      71204
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.64

Time for post operator:                148.242s
  Time for path formula creation:      143.378s
Time for strengthen operator:           10.669s
Time for prec operator:                504.372s
  Time for abstraction:                484.587s (Max:     4.289s, Count: 2865441)
    Boolean abstraction:                42.972s
    Solving time:                       34.000s (Max:     0.148s)
    Model enumeration time:              5.598s
    Time for BDD construction:           1.100s (Max:     0.052s)
Time for merge operator:                 9.033s
Time for coverage check:                 1.129s
  Time for BDD entailment checks:        0.830s
Total time for SMT solver (w/o itp):    39.598s

Number of path formula cache hits:   18063361 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   114.178s

Total number of created targets for pointer analysis: 356704
   Number of created targets for uf: *signed_int is 3311
   Number of created targets for uf: *(char)* is 92
   Number of created targets for uf: *(struct_usb_device)* is 1147
   Number of created targets for uf: *(struct_urb)* is 1348
   Number of created targets for uf: *(struct_list_head)* is 18937
   Number of created targets for uf: *_Bool is 530
   Number of created targets for uf: *(struct_device)* is 1147
   Number of created targets for uf: *unsigned_int is 1933
   Number of created targets for uf: *char is 119
   Number of created targets for uf: *(struct_dlfb_data)* is 1423
   Number of created targets for uf: *unsigned_long_int is 2292


Number of BDD nodes:                               61029
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       99416 (count: 1933637, min: 0, max: 2348, avg: 0.05)
Time for BDD node cleanup:                             0.285s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 16.743s
  Time for transition matches:                         9.894s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.015s
Automaton transfers with branching:                0
Automaton transfer successors:                     18272682 (count: 18276476, min: 0, max: 1, avg: 1.00) [0 x 3794, 1 x 18272682]

CPA algorithm statistics
------------------------
Number of iterations:            10431605
Max size of waitlist:            1125
Average size of waitlist:        412
Number of computed successors:   12005770
Max successors for one state:    2
Number of times merged:          863710
Number of times stopped:         1269206
Number of times breaked:         823

Total time for CPA algorithm:       858.760s (Max:     9.275s)
  Time for choose from waitlist:      3.309s
  Time for precision adjustment:    552.899s
  Time for transfer relation:       245.990s
  Time for merge operator:           16.326s
  Time for stop operator:             9.601s
  Time for adding to reached set:    11.007s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   823
Avg. length of target path (in blocks):               32276 (count: 823, min: 10, max: 93, avg: 39.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  26.187s
  Counterexample analysis:                             8.833s (Max:     0.050s, Calls: 823)
    Refinement sat check:                              5.716s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.139s
  Precision update:                                    0.449s
  ARG update:                                         16.505s

Length of refined path (in blocks):                   24437 (count: 823, min: 4, max: 70, avg: 29.69)
Number of affected states:                            15938 (count: 823, min: 1, max: 69, avg: 19.37)
Length (states) of path with itp 'true':               7676 (count: 823, min: 0, max: 44, avg: 9.33)
Length (states) of path with itp non-trivial itp:     15938 (count: 823, min: 1, max: 69, avg: 19.37)
Length (states) of path with itp 'false':               823 (count: 823, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         158 (count: 823, min: 0, max: 1, avg: 0.19)
Equal non-trivial interpolants along paths:           14957 (count: 823, min: 0, max: 67, avg: 18.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                823
Number of successful refinements:     823
Number of failed refinements:         0
Max. size of reached set before ref.: 73585
Max. size of reached set after ref.:  35581
Avg. size of reached set before ref.: 18449.04
Avg. size of reached set after ref.:  5573.84

Total time for CEGAR algorithm:     896.195s
Time for refinements:                34.703s
Average time for refinement:          0.042s
Max time for refinement:              0.330s

Code Coverage
-----------------------------
  Function coverage:      0.503
  Visited lines:          1891
  Total lines:            2807
  Line coverage:          0.674
  Visited conditions:     399
  Total conditions:       628
  Condition coverage:     0.635

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             44727
  Number of reached locations:   1087 (28%)
    Avg states per location:     41
    Max states per location:     684 (at node N2803)
  Number of reached functions:   74 (50%)
  Number of partitions:          44431
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        648

Time for analysis setup:          4.142s
  Time for loading CPAs:          0.681s
  Time for loading parser:        0.529s
  Time for CFA construction:      2.825s
    Time for parsing file(s):     0.716s
    Time for AST to CFA:          1.037s
    Time for CFA sanity check:    0.200s
    Time for post-processing:     0.721s
      Time for var class.:        0.315s
Time for Analysis:              896.195s
CPU time for analysis:          896.140s
Total time for CPAchecker:      900.339s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.523s

Time for Garbage Collector:      88.829s (in 1945 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2206MB (  2104 MiB) max;    887MB (   846 MiB) avg;   2254MB (  2149 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2486MB (  2371 MiB) max;   1323MB (  1262 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8763MB (  8357 MiB) max;   8285MB (  7901 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
