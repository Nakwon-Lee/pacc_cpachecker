scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_3acvj3q9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5373511 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4603885 (86%)
  Because of loop head:            769432 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         194 (0%)
  Times precision was empty:       1385570 (26%)
  Times precision was {false}:     3955 (0%)
  Times result was cached:         3966031 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      17955 (0%)
  Times result was 'false':        65745 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2358320
  BDD entailment checks:           949562
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          20
Number of abstraction locations:          180
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         15126871
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 690.41
Number of irrelevant predicates:          11221231 (74%)
Number of preds handled by boolean abs:   53507 (0%)
  Total number of models for allsat:      21846
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.22

Time for post operator:                129.125s
  Time for path formula creation:      121.749s
Time for strengthen operator:           17.113s
Time for prec operator:                384.692s
  Time for abstraction:                349.977s (Max:     3.949s, Count: 5373511)
    Boolean abstraction:                13.770s
    Solving time:                       13.011s (Max:     0.015s)
    Model enumeration time:              1.260s
    Time for BDD construction:           0.311s (Max:     0.003s)
Time for merge operator:                 3.627s
Time for coverage check:                 0.915s
  Time for BDD entailment checks:        0.625s
Total time for SMT solver (w/o itp):    14.271s

Number of path formula cache hits:   32622588 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    75.747s

Total number of created targets for pointer analysis: 150104
   Number of created targets for uf: *signed_int is 956
   Number of created targets for uf: *(char)* is 1466
   Number of created targets for uf: *(struct_usb_device)* is 236
   Number of created targets for uf: *(struct_urb)* is 317
   Number of created targets for uf: *(struct_list_head)* is 2351
   Number of created targets for uf: *(unsigned_char)* is 1278
   Number of created targets for uf: *unsigned_int is 1138
   Number of created targets for uf: *(struct_device)* is 236
   Number of created targets for uf: *(struct_dlfb_data)* is 236
   Number of created targets for uf: *unsigned_long_int is 471


Number of BDD nodes:                               2867
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       37172 (count: 2466067, min: 0, max: 1036, avg: 0.02)
Time for BDD node cleanup:                             0.329s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 29.929s
  Time for transition matches:                        16.556s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.021s
Automaton transfers with branching:                0
Automaton transfer successors:                     29067736 (count: 29069186, min: 0, max: 1, avg: 1.00) [0 x 1450, 1 x 29067736]

CPA algorithm statistics
------------------------
Number of iterations:            16231404
Max size of waitlist:            82
Average size of waitlist:        58
Number of computed successors:   17813352
Max successors for one state:    2
Number of times merged:          704379
Number of times stopped:         1506885
Number of times breaked:         194

Total time for CPA algorithm:       846.163s (Max:    15.340s)
  Time for choose from waitlist:      4.103s
  Time for precision adjustment:    466.442s
  Time for transfer relation:       308.145s
  Time for merge operator:           11.213s
  Time for stop operator:            13.465s
  Time for adding to reached set:    15.902s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   194
Avg. length of target path (in blocks):               10493 (count: 194, min: 9, max: 219, avg: 54.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  39.867s
  Counterexample analysis:                             3.609s (Max:     0.101s, Calls: 194)
    Refinement sat check:                              2.067s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.076s
  Precision update:                                    0.098s
  ARG update:                                         35.970s

Length of refined path (in blocks):                    8498 (count: 194, min: 4, max: 214, avg: 43.80)
Number of affected states:                             7033 (count: 194, min: 1, max: 212, avg: 36.25)
Length (states) of path with itp 'true':               1271 (count: 194, min: 0, max: 106, avg: 6.55)
Length (states) of path with itp non-trivial itp:      7033 (count: 194, min: 1, max: 212, avg: 36.25)
Length (states) of path with itp 'false':               194 (count: 194, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          93 (count: 194, min: 0, max: 1, avg: 0.48)
Equal non-trivial interpolants along paths:            6746 (count: 194, min: 0, max: 211, avg: 34.77)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                194
Number of successful refinements:     194
Number of failed refinements:         0
Max. size of reached set before ref.: 213761
Max. size of reached set after ref.:  84325
Avg. size of reached set before ref.: 91636.28
Avg. size of reached set after ref.:  8542.84

Total time for CEGAR algorithm:     895.964s
Time for refinements:                48.520s
Average time for refinement:          0.250s
Max time for refinement:              1.474s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          2066
  Total lines:            2807
  Line coverage:          0.736
  Visited conditions:     397
  Total conditions:       628
  Condition coverage:     0.632

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             120596
  Number of reached locations:   1194 (31%)
    Avg states per location:     101
    Max states per location:     1885 (at node N267)
  Number of reached functions:   84 (57%)
  Number of partitions:          120231
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [3ac8cf9b], stack [main]])
  Number of target states:       0
  Size of final wait list        66

Time for analysis setup:          4.349s
  Time for loading CPAs:          0.691s
  Time for loading parser:        0.559s
  Time for CFA construction:      3.001s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          1.159s
    Time for CFA sanity check:    0.254s
    Time for post-processing:     0.760s
      Time for var class.:        0.321s
Time for Analysis:              895.964s
CPU time for analysis:          895.910s
Total time for CPAchecker:      900.316s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              1.346s

Time for Garbage Collector:     161.439s (in 1479 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1977MB (  1885 MiB) max;    735MB (   701 MiB) avg;   2049MB (  1954 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2089MB (  1992 MiB) max;   1074MB (  1024 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8422MB (  8032 MiB) max;   8200MB (  7821 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
