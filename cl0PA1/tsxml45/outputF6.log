scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_u5r8ph8p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2675554 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2475610 (93%)
  Because of loop head:            199304 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         640 (0%)
  Times precision was empty:       495850 (19%)
  Times precision was {false}:     2731 (0%)
  Times result was cached:         2132491 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      44482 (2%)
  Times result was 'false':        101038 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2613734
  BDD entailment checks:           880618
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          34
Number of abstraction locations:          242
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         17731565
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 375.57
Number of irrelevant predicates:          4684508 (26%)
Number of preds handled by boolean abs:   218614 (1%)
  Total number of models for allsat:      69126
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.55

Time for post operator:                150.454s
  Time for path formula creation:      145.250s
Time for strengthen operator:           11.757s
Time for prec operator:                497.816s
  Time for abstraction:                479.019s (Max:     3.391s, Count: 2675554)
    Boolean abstraction:                45.583s
    Solving time:                       36.244s (Max:     0.136s)
    Model enumeration time:              6.850s
    Time for BDD construction:           1.151s (Max:     0.028s)
Time for merge operator:                10.134s
Time for coverage check:                 1.029s
  Time for BDD entailment checks:        0.756s
Total time for SMT solver (w/o itp):    43.094s

Number of path formula cache hits:   19042240 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   116.376s

Total number of created targets for pointer analysis: 314504
   Number of created targets for uf: *signed_int is 3739
   Number of created targets for uf: *(struct_usb_device)* is 724
   Number of created targets for uf: *(char)* is 55
   Number of created targets for uf: *(struct_urb)* is 38
   Number of created targets for uf: *(struct_list_head)* is 391
   Number of created targets for uf: *(unsigned_char)* is 17
   Number of created targets for uf: *_Bool is 666
   Number of created targets for uf: *unsigned_int is 44347
   Number of created targets for uf: *char is 2078
   Number of created targets for uf: *(struct_device)* is 724
   Number of created targets for uf: *(struct_dlfb_data)* is 38
   Number of created targets for uf: *unsigned_long_int is 1738


Number of BDD nodes:                               29251
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       93114 (count: 1682477, min: 0, max: 1111, avg: 0.06)
Time for BDD node cleanup:                             0.269s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.289s
  Time for transition matches:                        10.954s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                     19289195 (count: 19296284, min: 0, max: 1, avg: 1.00) [0 x 7089, 1 x 19289195]

CPA algorithm statistics
------------------------
Number of iterations:            9825193
Max size of waitlist:            874
Average size of waitlist:        290
Number of computed successors:   11363214
Max successors for one state:    2
Number of times merged:          866558
Number of times stopped:         1231413
Number of times breaked:         640

Total time for CPA algorithm:       864.076s (Max:     7.408s)
  Time for choose from waitlist:      3.334s
  Time for precision adjustment:    548.537s
  Time for transfer relation:       256.386s
  Time for merge operator:           17.412s
  Time for stop operator:             9.064s
  Time for adding to reached set:    11.281s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   640
Avg. length of target path (in blocks):               29392 (count: 640, min: 10, max: 115, avg: 45.92)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.503s
  Counterexample analysis:                            11.584s (Max:     0.078s, Calls: 640)
    Refinement sat check:                              7.654s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.027s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.173s
  Precision update:                                    0.432s
  ARG update:                                         16.956s

Length of refined path (in blocks):                   23691 (count: 640, min: 4, max: 92, avg: 37.02)
Number of affected states:                            20453 (count: 640, min: 1, max: 91, avg: 31.96)
Length (states) of path with itp 'true':               2598 (count: 640, min: 0, max: 45, avg: 4.06)
Length (states) of path with itp non-trivial itp:     20453 (count: 640, min: 1, max: 91, avg: 31.96)
Length (states) of path with itp 'false':               640 (count: 640, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         179 (count: 640, min: 0, max: 3, avg: 0.28)
Equal non-trivial interpolants along paths:           19634 (count: 640, min: 0, max: 89, avg: 30.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                640
Number of successful refinements:     640
Number of failed refinements:         0
Max. size of reached set before ref.: 48345
Max. size of reached set after ref.:  22986
Avg. size of reached set before ref.: 17916.99
Avg. size of reached set after ref.:  2266.36

Total time for CEGAR algorithm:     900.456s
Time for refinements:                35.467s
Average time for refinement:          0.055s
Max time for refinement:              0.318s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          1672
  Total lines:            2807
  Line coverage:          0.596
  Visited conditions:     313
  Total conditions:       628
  Condition coverage:     0.498

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             14359
  Number of reached locations:   850 (22%)
    Avg states per location:     16
    Max states per location:     250 (at node N2804)
  Number of reached functions:   65 (44%)
  Number of partitions:          14290
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       0
  Size of final wait list        226

Time for analysis setup:          4.042s
  Time for loading CPAs:          0.709s
  Time for loading parser:        0.497s
  Time for CFA construction:      2.751s
    Time for parsing file(s):     0.705s
    Time for AST to CFA:          0.942s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.713s
      Time for var class.:        0.313s
Time for Analysis:              900.456s
CPU time for analysis:          900.430s
Total time for CPAchecker:      904.508s
Total CPU time for CPAchecker:  904.470s
Time for statistics:              0.216s

Time for Garbage Collector:      80.111s (in 1461 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1955MB (  1864 MiB) max;    991MB (   945 MiB) avg;   1981MB (  1890 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3337MB (  3182 MiB) max;   1408MB (  1343 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8897MB (  8485 MiB) max;   8538MB (  8143 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
