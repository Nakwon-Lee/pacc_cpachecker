scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pm9wyahs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            45167 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  42427 (94%)
  Because of loop head:            2627 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         113 (0%)
  Times precision was empty:       12423 (28%)
  Times precision was {false}:     535 (1%)
  Times result was cached:         29233 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2976 (7%)
  Times result was 'false':        1738 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         47633
  BDD entailment checks:           6885
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          9
Number of abstraction locations:          116
Max number of predicates per location:    7
Avg number of predicates per location:    4
Total predicates per abstraction:         132316
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 37.69
Number of irrelevant predicates:          34809 (26%)
Number of preds handled by boolean abs:   8721 (7%)
  Total number of models for allsat:      3042
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  5.421s
  Time for path formula creation:        5.321s
Time for strengthen operator:            0.279s
Time for prec operator:                 11.493s
  Time for abstraction:                 10.891s (Max:     0.023s, Count: 45167)
    Boolean abstraction:                 2.737s
    Solving time:                        2.392s (Max:     0.015s)
    Model enumeration time:              0.301s
    Time for BDD construction:           0.116s (Max:     0.011s)
Time for merge operator:                 0.323s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     2.693s

Number of path formula cache hits:   292298 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.587s

Total number of created targets for pointer analysis: 4945
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *signed_int is 150
   Number of created targets for uf: *(struct_usb_device)* is 22
   Number of created targets for uf: *(struct_urb)* is 76
   Number of created targets for uf: *(struct_list_head)* is 1006
   Number of created targets for uf: *(unsigned_char)* is 2
   Number of created targets for uf: *_Bool is 22
   Number of created targets for uf: *unsigned_int is 4
   Number of created targets for uf: *(struct_dlfb_data)* is 84
   Number of created targets for uf: *(struct_device)* is 22
   Number of created targets for uf: *unsigned_long_int is 128


Number of BDD nodes:                               540
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6311 (count: 40469, min: 0, max: 316, avg: 0.16)
Time for BDD node cleanup:                             0.034s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.677s
  Time for transition matches:                         0.294s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       289242 (count: 289242, min: 1, max: 1, avg: 1.00) [1 x 289242]

CPA algorithm statistics
------------------------
Number of iterations:            188485
Max size of waitlist:            169
Average size of waitlist:        83
Number of computed successors:   226177
Max successors for one state:    2
Number of times merged:          20374
Number of times stopped:         24320
Number of times breaked:         113

Total time for CPA algorithm:        23.849s (Max:     1.212s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:     12.772s
  Time for transfer relation:         8.735s
  Time for merge operator:            0.668s
  Time for stop operator:             0.317s
  Time for adding to reached set:     0.410s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   113
Avg. length of target path (in blocks):                4919 (count: 113, min: 10, max: 82, avg: 43.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.214s
  Counterexample analysis:                             1.505s (Max:     0.034s, Calls: 113)
    Refinement sat check:                              0.982s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.089s
  Precision update:                                    0.062s
  ARG update:                                          0.475s

Length of refined path (in blocks):                    4617 (count: 112, min: 4, max: 81, avg: 41.22)
Number of affected states:                             4287 (count: 112, min: 0, max: 79, avg: 38.28)
Length (states) of path with itp 'true':                218 (count: 112, min: 1, max: 15, avg: 1.95)
Length (states) of path with itp non-trivial itp:      4287 (count: 112, min: 0, max: 79, avg: 38.28)
Length (states) of path with itp 'false':               112 (count: 112, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 112, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4176 (count: 112, min: 0, max: 78, avg: 37.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                113
Number of successful refinements:     112
Number of failed refinements:         0
Max. size of reached set before ref.: 2822
Max. size of reached set after ref.:  546
Avg. size of reached set before ref.: 1812.82
Avg. size of reached set after ref.:  42.22

Total time for CEGAR algorithm:      26.277s
Time for refinements:                 2.418s
Average time for refinement:          0.021s
Max time for refinement:              0.061s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          1546
  Total lines:            2807
  Line coverage:          0.551
  Visited conditions:     267
  Total conditions:       628
  Condition coverage:     0.425

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             2822
  Number of reached locations:   738 (19%)
    Avg states per location:     3
    Max states per location:     26 (at node N2803)
  Number of reached functions:   65 (44%)
  Number of partitions:          2807
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       1
  Size of final wait list        166

Time for analysis setup:          4.055s
  Time for loading CPAs:          0.692s
  Time for loading parser:        0.519s
  Time for CFA construction:      2.736s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.974s
    Time for CFA sanity check:    0.191s
    Time for post-processing:     0.706s
      Time for var class.:        0.338s
Time for Analysis:               26.277s
CPU time for analysis:           26.270s
Total time for CPAchecker:       30.334s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.114s

Time for Garbage Collector:       0.856s (in 111 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     54MB (    52 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
