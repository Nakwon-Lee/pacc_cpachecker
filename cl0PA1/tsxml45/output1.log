scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9usji47n/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            74160 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  68832 (93%)
  Because of loop head:            5278 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         50 (0%)
  Times precision was empty:       57639 (78%)
  Times precision was {false}:     1019 (1%)
  Times result was cached:         14794 (20%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      708 (1%)
  Times result was 'false':        3012 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         81138
  BDD entailment checks:           19994
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          13
Number of abstraction locations:          35
Max number of predicates per location:    11
Avg number of predicates per location:    3
Total predicates per abstraction:         55441
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 32.10
Number of irrelevant predicates:          35058 (63%)
Number of preds handled by boolean abs:   2110 (4%)
  Total number of models for allsat:      1020
  Max number of models for allsat:        18
  Avg number of models for allsat:        1.44

Time for post operator:                  6.510s
  Time for path formula creation:        6.221s
Time for strengthen operator:            0.514s
Time for prec operator:                  7.065s
  Time for abstraction:                  6.188s (Max:     0.026s, Count: 74160)
    Boolean abstraction:                 0.964s
    Solving time:                        0.989s (Max:     0.015s)
    Model enumeration time:              0.168s
    Time for BDD construction:           0.124s (Max:     0.012s)
Time for merge operator:                 0.402s
Time for coverage check:                 0.092s
  Time for BDD entailment checks:        0.081s
Total time for SMT solver (w/o itp):     1.157s

Number of path formula cache hits:   618247 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.149s

Total number of created targets for pointer analysis: 642
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(char)* is 4
   Number of created targets for uf: *(struct_list_head)* is 5
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *_Bool is 2
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *(struct_device)* is 2
   Number of created targets for uf: *unsigned_long_int is 10


Number of BDD nodes:                               2093
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2183 (count: 87952, min: 0, max: 305, avg: 0.02)
Time for BDD node cleanup:                             0.039s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.880s
  Time for transition matches:                         0.435s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       571749 (count: 572013, min: 0, max: 1, avg: 1.00) [0 x 264, 1 x 571749]

CPA algorithm statistics
------------------------
Number of iterations:            296352
Max size of waitlist:            481
Average size of waitlist:        213
Number of computed successors:   351385
Max successors for one state:    2
Number of times merged:          30572
Number of times stopped:         39119
Number of times breaked:         50

Total time for CPA algorithm:        23.943s (Max:     1.420s)
  Time for choose from waitlist:      0.250s
  Time for precision adjustment:      9.165s
  Time for transfer relation:        11.735s
  Time for merge operator:            0.834s
  Time for stop operator:             0.509s
  Time for adding to reached set:     0.408s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   50
Avg. length of target path (in blocks):                 757 (count: 50, min: 9, max: 20, avg: 15.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.488s
  Counterexample analysis:                             0.469s (Max:     0.020s, Calls: 50)
    Refinement sat check:                              0.312s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.033s
  Precision update:                                    0.024s
  ARG update:                                          0.918s

Length of refined path (in blocks):                     563 (count: 50, min: 4, max: 17, avg: 11.26)
Number of affected states:                              433 (count: 50, min: 1, max: 15, avg: 8.66)
Length (states) of path with itp 'true':                 80 (count: 50, min: 0, max: 7, avg: 1.60)
Length (states) of path with itp non-trivial itp:       433 (count: 50, min: 1, max: 15, avg: 8.66)
Length (states) of path with itp 'false':                50 (count: 50, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 50, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             382 (count: 50, min: 0, max: 14, avg: 7.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                50
Number of successful refinements:     50
Number of failed refinements:         0
Max. size of reached set before ref.: 11654
Max. size of reached set after ref.:  1404
Avg. size of reached set before ref.: 6211.50
Avg. size of reached set after ref.:  66.46

Total time for CEGAR algorithm:      25.697s
Time for refinements:                 1.745s
Average time for refinement:          0.034s
Max time for refinement:              0.190s

Code Coverage
-----------------------------
  Function coverage:      0.306
  Visited lines:          1238
  Total lines:            2807
  Line coverage:          0.441
  Visited conditions:     220
  Total conditions:       628
  Condition coverage:     0.350

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             2002
  Number of reached locations:   503 (13%)
    Avg states per location:     3
    Max states per location:     18 (at node N2698)
  Number of reached functions:   45 (31%)
  Number of partitions:          1992
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       0
  Size of final wait list        103

Time for analysis setup:          4.158s
  Time for loading CPAs:          0.794s
  Time for loading parser:        0.535s
  Time for CFA construction:      2.708s
    Time for parsing file(s):     0.686s
    Time for AST to CFA:          0.962s
    Time for CFA sanity check:    0.258s
    Time for post-processing:     0.685s
      Time for var class.:        0.310s
Time for Analysis:               25.697s
CPU time for analysis:           25.700s
Total time for CPAchecker:       29.858s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.086s

Time for Garbage Collector:       1.644s (in 131 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   112 MiB) max;     60MB (    58 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8076MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
