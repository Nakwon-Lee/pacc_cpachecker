scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2d1aw9l6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3133175 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2809852 (90%)
  Because of loop head:            322310 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1013 (0%)
  Times precision was empty:       863854 (28%)
  Times precision was {false}:     9266 (0%)
  Times result was cached:         2229380 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      30675 (1%)
  Times result was 'false':        140210 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         4897501
  BDD entailment checks:           2280437
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          25
Number of abstraction locations:          185
Max number of predicates per location:    16
Avg number of predicates per location:    5
Total predicates per abstraction:         14624590
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 366.15
Number of irrelevant predicates:          9380910 (64%)
Number of preds handled by boolean abs:   130580 (1%)
  Total number of models for allsat:      58432
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.90

Time for post operator:                148.481s
  Time for path formula creation:      141.986s
Time for strengthen operator:           15.136s
Time for prec operator:                390.895s
  Time for abstraction:                367.544s (Max:     2.708s, Count: 3133175)
    Boolean abstraction:                32.220s
    Solving time:                       28.541s (Max:     0.023s)
    Model enumeration time:              5.351s
    Time for BDD construction:           0.938s (Max:     0.062s)
Time for merge operator:                10.535s
Time for coverage check:                 1.942s
  Time for BDD entailment checks:        1.411s
Total time for SMT solver (w/o itp):    33.892s

Number of path formula cache hits:   26305062 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    96.571s

Total number of created targets for pointer analysis: 257733
   Number of created targets for uf: *signed_int is 6235
   Number of created targets for uf: *(struct_usb_device)* is 117
   Number of created targets for uf: *(char)* is 198
   Number of created targets for uf: *(struct_urb)* is 75
   Number of created targets for uf: *(struct_list_head)* is 1306
   Number of created targets for uf: *(unsigned_char)* is 23
   Number of created targets for uf: *_Bool is 1033
   Number of created targets for uf: *unsigned_int is 5546
   Number of created targets for uf: *(struct_device)* is 117
   Number of created targets for uf: *unsigned_long_int is 2637


Number of BDD nodes:                               52839
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       68384 (count: 3403707, min: 0, max: 1876, avg: 0.02)
Time for BDD node cleanup:                             0.373s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 21.968s
  Time for transition matches:                        12.982s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.026s
Automaton transfers with branching:                0
Automaton transfer successors:                     24957647 (count: 24968009, min: 0, max: 1, avg: 1.00) [0 x 10362, 1 x 24957647]

CPA algorithm statistics
------------------------
Number of iterations:            12881283
Max size of waitlist:            1801
Average size of waitlist:        858
Number of computed successors:   15181783
Max successors for one state:    2
Number of times merged:          1308532
Number of times stopped:         1743003
Number of times breaked:         1013

Total time for CPA algorithm:       799.996s (Max:     6.630s)
  Time for choose from waitlist:      3.506s
  Time for precision adjustment:    445.497s
  Time for transfer relation:       280.421s
  Time for merge operator:           20.781s
  Time for stop operator:            13.100s
  Time for adding to reached set:    13.123s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1013
Avg. length of target path (in blocks):               79476 (count: 1013, min: 10, max: 135, avg: 78.46)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  53.426s
  Counterexample analysis:                            28.380s (Max:     0.109s, Calls: 1013)
    Refinement sat check:                             15.016s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.043s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.153s
  Precision update:                                    0.581s
  ARG update:                                         23.762s

Length of refined path (in blocks):                   63276 (count: 1013, min: 4, max: 120, avg: 62.46)
Number of affected states:                            11894 (count: 1013, min: 1, max: 118, avg: 11.74)
Length (states) of path with itp 'true':              50369 (count: 1013, min: 0, max: 109, avg: 49.72)
Length (states) of path with itp non-trivial itp:     11894 (count: 1013, min: 1, max: 118, avg: 11.74)
Length (states) of path with itp 'false':              1013 (count: 1013, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         423 (count: 1013, min: 0, max: 1, avg: 0.42)
Equal non-trivial interpolants along paths:           10458 (count: 1013, min: 0, max: 117, avg: 10.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1013
Number of successful refinements:     1013
Number of failed refinements:         0
Max. size of reached set before ref.: 63536
Max. size of reached set after ref.:  51896
Avg. size of reached set before ref.: 33777.50
Avg. size of reached set after ref.:  20693.05

Total time for CEGAR algorithm:     896.043s
Time for refinements:                79.021s
Average time for refinement:          0.078s
Max time for refinement:              0.363s

Code Coverage
-----------------------------
  Function coverage:      0.442
  Visited lines:          1635
  Total lines:            2807
  Line coverage:          0.582
  Visited conditions:     347
  Total conditions:       628
  Condition coverage:     0.553

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             44027
  Number of reached locations:   910 (24%)
    Avg states per location:     48
    Max states per location:     766 (at node N2804)
  Number of reached functions:   65 (44%)
  Number of partitions:          43852
    Avg size of partitions:      1
    Max size of partitions:      43 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       0
  Size of final wait list        1381

Time for analysis setup:          4.287s
  Time for loading CPAs:          0.809s
  Time for loading parser:        0.559s
  Time for CFA construction:      2.796s
    Time for parsing file(s):     0.746s
    Time for AST to CFA:          1.002s
    Time for CFA sanity check:    0.197s
    Time for post-processing:     0.672s
      Time for var class.:        0.342s
Time for Analysis:              896.043s
CPU time for analysis:          896.020s
Total time for CPAchecker:      900.334s
Total CPU time for CPAchecker:  900.300s
Time for statistics:              0.578s

Time for Garbage Collector:      67.532s (in 918 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1840MB (  1755 MiB) max;   1069MB (  1019 MiB) avg;   1862MB (  1776 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:          2227MB (  2124 MiB) max;   1641MB (  1565 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    45 MiB) avg
Total process virtual memory:   8628MB (  8228 MiB) max;   8435MB (  8044 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
