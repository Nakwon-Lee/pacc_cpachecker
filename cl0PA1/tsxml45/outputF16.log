scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_91uvemht/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5251833 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4459227 (85%)
  Because of loop head:            792084 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         522 (0%)
  Times precision was empty:       2370207 (45%)
  Times precision was {false}:     4402 (0%)
  Times result was cached:         2857012 (54%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20212 (0%)
  Times result was 'false':        56018 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2648776
  BDD entailment checks:           1165276
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          27
Number of abstraction locations:          277
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         15584013
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 633.14
Number of irrelevant predicates:          11074129 (71%)
Number of preds handled by boolean abs:   80510 (1%)
  Total number of models for allsat:      22627
  Max number of models for allsat:        27
  Avg number of models for allsat:        1.12

Time for post operator:                125.457s
  Time for path formula creation:      118.553s
Time for strengthen operator:           17.930s
Time for prec operator:                402.233s
  Time for abstraction:                367.814s (Max:     2.683s, Count: 5251833)
    Boolean abstraction:                14.795s
    Solving time:                       13.734s (Max:     0.056s)
    Model enumeration time:              1.287s
    Time for BDD construction:           0.354s (Max:     0.012s)
Time for merge operator:                 3.284s
Time for coverage check:                 1.206s
  Time for BDD entailment checks:        0.910s
Total time for SMT solver (w/o itp):    15.021s

Number of path formula cache hits:   32829214 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    67.433s

Total number of created targets for pointer analysis: 122322
   Number of created targets for uf: *signed_int is 156
   Number of created targets for uf: *(struct_usb_device)* is 31
   Number of created targets for uf: *(char)* is 2294
   Number of created targets for uf: *(struct_urb)* is 173
   Number of created targets for uf: *(struct_list_head)* is 1915
   Number of created targets for uf: *(unsigned_char)* is 373
   Number of created targets for uf: *_Bool is 11
   Number of created targets for uf: *char is 28
   Number of created targets for uf: *unsigned_int is 745
   Number of created targets for uf: *(struct_device)* is 31
   Number of created targets for uf: *(struct_dlfb_data)* is 164
   Number of created targets for uf: *unsigned_long_int is 154


Number of BDD nodes:                               16000
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       46995 (count: 3691727, min: 0, max: 828, avg: 0.01)
Time for BDD node cleanup:                             0.382s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 26.485s
  Time for transition matches:                        14.085s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     28876202 (count: 28877073, min: 0, max: 1, avg: 1.00) [0 x 871, 1 x 28876202]

CPA algorithm statistics
------------------------
Number of iterations:            16218650
Max size of waitlist:            49
Average size of waitlist:        26
Number of computed successors:   17847009
Max successors for one state:    2
Number of times merged:          741750
Number of times stopped:         1568213
Number of times breaked:         522

Total time for CPA algorithm:       837.919s (Max:     8.394s)
  Time for choose from waitlist:      3.726s
  Time for precision adjustment:    483.813s
  Time for transfer relation:       287.793s
  Time for merge operator:            9.345s
  Time for stop operator:            13.024s
  Time for adding to reached set:    14.156s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   522
Avg. length of target path (in blocks):               25693 (count: 522, min: 9, max: 191, avg: 49.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  35.207s
  Counterexample analysis:                             6.812s (Max:     0.069s, Calls: 522)
    Refinement sat check:                              4.171s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.157s
  Precision update:                                    0.255s
  ARG update:                                         27.645s

Length of refined path (in blocks):                   19677 (count: 522, min: 4, max: 190, avg: 37.70)
Number of affected states:                            13314 (count: 522, min: 0, max: 188, avg: 25.51)
Length (states) of path with itp 'true':               5841 (count: 522, min: 0, max: 42, avg: 11.19)
Length (states) of path with itp non-trivial itp:     13314 (count: 522, min: 0, max: 188, avg: 25.51)
Length (states) of path with itp 'false':               522 (count: 522, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         191 (count: 522, min: 0, max: 3, avg: 0.37)
Equal non-trivial interpolants along paths:           12602 (count: 522, min: 0, max: 187, avg: 24.14)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                522
Number of successful refinements:     522
Number of failed refinements:         0
Max. size of reached set before ref.: 197895
Max. size of reached set after ref.:  177541
Avg. size of reached set before ref.: 50221.93
Avg. size of reached set after ref.:  19235.47

Total time for CEGAR algorithm:     895.850s
Time for refinements:                50.917s
Average time for refinement:          0.097s
Max time for refinement:              0.617s

Code Coverage
-----------------------------
  Function coverage:      0.558
  Visited lines:          2019
  Total lines:            2807
  Line coverage:          0.719
  Visited conditions:     389
  Total conditions:       628
  Condition coverage:     0.619

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             47845
  Number of reached locations:   1170 (31%)
    Avg states per location:     40
    Max states per location:     768 (at node N2803)
  Number of reached functions:   82 (56%)
  Number of partitions:          46930
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       0
  Size of final wait list        38

Time for analysis setup:          4.481s
  Time for loading CPAs:          0.693s
  Time for loading parser:        0.608s
  Time for CFA construction:      3.057s
    Time for parsing file(s):     0.749s
    Time for AST to CFA:          1.109s
    Time for CFA sanity check:    0.223s
    Time for post-processing:     0.786s
      Time for var class.:        0.367s
Time for Analysis:              895.850s
CPU time for analysis:          895.800s
Total time for CPAchecker:      900.334s
Total CPU time for CPAchecker:  900.270s
Time for statistics:              0.512s

Time for Garbage Collector:     125.152s (in 1596 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1776MB (  1694 MiB) max;    674MB (   642 MiB) avg;   1807MB (  1724 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1844MB (  1758 MiB) max;    968MB (   923 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8195MB (  7815 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
