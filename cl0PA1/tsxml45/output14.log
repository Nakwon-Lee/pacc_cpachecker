scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_duu2804t/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42326 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  39898 (94%)
  Because of loop head:            2318 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         110 (0%)
  Times precision was empty:       11567 (27%)
  Times precision was {false}:     472 (1%)
  Times result was cached:         27517 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2770 (7%)
  Times result was 'false':        1611 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         43484
  BDD entailment checks:           6198
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          9
Number of abstraction locations:          100
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         117877
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 36.36
Number of irrelevant predicates:          30033 (25%)
Number of preds handled by boolean abs:   8169 (7%)
  Total number of models for allsat:      2836
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  5.345s
  Time for path formula creation:        5.158s
Time for strengthen operator:            0.225s
Time for prec operator:                 11.320s
  Time for abstraction:                 10.624s (Max:     0.022s, Count: 42326)
    Boolean abstraction:                 2.825s
    Solving time:                        2.490s (Max:     0.015s)
    Model enumeration time:              0.241s
    Time for BDD construction:           0.119s (Max:     0.012s)
Time for merge operator:                 0.417s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.069s
Total time for SMT solver (w/o itp):     2.731s

Number of path formula cache hits:   271771 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.491s

Total number of created targets for pointer analysis: 4837
   Number of created targets for uf: *signed_int is 140
   Number of created targets for uf: *(struct_usb_device)* is 24
   Number of created targets for uf: *(char)* is 3
   Number of created targets for uf: *(struct_urb)* is 66
   Number of created targets for uf: *(struct_list_head)* is 992
   Number of created targets for uf: *_Bool is 24
   Number of created targets for uf: *(struct_dlfb_data)* is 72
   Number of created targets for uf: *(struct_device)* is 24
   Number of created targets for uf: *unsigned_int is 95
   Number of created targets for uf: *unsigned_long_int is 132


Number of BDD nodes:                               540
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5897 (count: 37333, min: 0, max: 309, avg: 0.16)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.534s
  Time for transition matches:                         0.267s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       268778 (count: 268778, min: 1, max: 1, avg: 1.00) [1 x 268778]

CPA algorithm statistics
------------------------
Number of iterations:            175083
Max size of waitlist:            166
Average size of waitlist:        79
Number of computed successors:   209629
Max successors for one state:    2
Number of times merged:          18643
Number of times stopped:         22290
Number of times breaked:         110

Total time for CPA algorithm:        23.590s (Max:     1.227s)
  Time for choose from waitlist:      0.126s
  Time for precision adjustment:     12.722s
  Time for transfer relation:         8.530s
  Time for merge operator:            0.717s
  Time for stop operator:             0.381s
  Time for adding to reached set:     0.290s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   110
Avg. length of target path (in blocks):                4866 (count: 110, min: 10, max: 78, avg: 44.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.231s
  Counterexample analysis:                             1.582s (Max:     0.036s, Calls: 110)
    Refinement sat check:                              1.043s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.086s
  ARG update:                                          0.439s

Length of refined path (in blocks):                    4592 (count: 109, min: 4, max: 77, avg: 42.13)
Number of affected states:                             4254 (count: 109, min: 0, max: 75, avg: 39.03)
Length (states) of path with itp 'true':                229 (count: 109, min: 1, max: 15, avg: 2.10)
Length (states) of path with itp non-trivial itp:      4254 (count: 109, min: 0, max: 75, avg: 39.03)
Length (states) of path with itp 'false':               109 (count: 109, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 109, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4146 (count: 109, min: 0, max: 74, avg: 38.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                110
Number of successful refinements:     109
Number of failed refinements:         0
Max. size of reached set before ref.: 2517
Max. size of reached set after ref.:  546
Avg. size of reached set before ref.: 1736.17
Avg. size of reached set after ref.:  48.17

Total time for CEGAR algorithm:      26.075s
Time for refinements:                 2.460s
Average time for refinement:          0.022s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.367
  Visited lines:          1328
  Total lines:            2807
  Line coverage:          0.473
  Visited conditions:     227
  Total conditions:       628
  Condition coverage:     0.361

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             2514
  Number of reached locations:   598 (16%)
    Avg states per location:     4
    Max states per location:     21 (at node N2803)
  Number of reached functions:   54 (37%)
  Number of partitions:          2504
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       1
  Size of final wait list        156

Time for analysis setup:          4.244s
  Time for loading CPAs:          0.750s
  Time for loading parser:        0.505s
  Time for CFA construction:      2.918s
    Time for parsing file(s):     0.784s
    Time for AST to CFA:          1.009s
    Time for CFA sanity check:    0.204s
    Time for post-processing:     0.695s
      Time for var class.:        0.331s
Time for Analysis:               26.075s
CPU time for analysis:           26.080s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.083s

Time for Garbage Collector:       0.714s (in 103 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     54MB (    52 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
