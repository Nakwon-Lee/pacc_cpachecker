scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q7_7soix/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            143326 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  123185 (86%)
  Because of loop head:            20094 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (0%)
  Times precision was empty:       138074 (96%)
  Times precision was {false}:     497 (0%)
  Times result was cached:         4485 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      270 (0%)
  Times result was 'false':        809 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         64006
  BDD entailment checks:           23240
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          12
Number of abstraction locations:          51
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         15448
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 20.14
Number of irrelevant predicates:          10797 (70%)
Number of preds handled by boolean abs:   860 (6%)
  Total number of models for allsat:      318
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.18

Time for post operator:                  6.948s
  Time for path formula creation:        6.620s
Time for strengthen operator:            0.695s
Time for prec operator:                  3.906s
  Time for abstraction:                  2.342s (Max:     0.021s, Count: 143326)
    Boolean abstraction:                 0.302s
    Solving time:                        0.323s (Max:     0.012s)
    Model enumeration time:              0.033s
    Time for BDD construction:           0.062s (Max:     0.010s)
Time for merge operator:                 0.271s
Time for coverage check:                 0.069s
  Time for BDD entailment checks:        0.065s
Total time for SMT solver (w/o itp):     0.356s

Number of path formula cache hits:   898753 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.156s

Total number of created targets for pointer analysis: 1603
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 4
   Number of created targets for uf: *(char)* is 24
   Number of created targets for uf: *(struct_urb)* is 4
   Number of created targets for uf: *(struct_list_head)* is 40
   Number of created targets for uf: *(unsigned_char)* is 24
   Number of created targets for uf: *_Bool is 2
   Number of created targets for uf: *unsigned_int is 140
   Number of created targets for uf: *(struct_dlfb_data)* is 4
   Number of created targets for uf: *(struct_device)* is 4
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               767
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1000 (count: 165725, min: 0, max: 171, avg: 0.01)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.028s
  Time for transition matches:                         0.551s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       797506 (count: 797552, min: 0, max: 1, avg: 1.00) [0 x 46, 1 x 797506]

CPA algorithm statistics
------------------------
Number of iterations:            438397
Max size of waitlist:            44
Average size of waitlist:        25
Number of computed successors:   482239
Max successors for one state:    2
Number of times merged:          20383
Number of times stopped:         41849
Number of times breaked:         47

Total time for CPA algorithm:        24.328s (Max:     2.521s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:      6.819s
  Time for transfer relation:        14.144s
  Time for merge operator:            0.640s
  Time for stop operator:             0.596s
  Time for adding to reached set:     0.552s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                 792 (count: 47, min: 9, max: 37, avg: 16.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.473s
  Counterexample analysis:                             0.370s (Max:     0.021s, Calls: 47)
    Refinement sat check:                              0.252s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.033s
  ARG update:                                          1.000s

Length of refined path (in blocks):                     457 (count: 47, min: 4, max: 36, avg: 9.72)
Number of affected states:                              258 (count: 47, min: 1, max: 34, avg: 5.49)
Length (states) of path with itp 'true':                152 (count: 47, min: 0, max: 7, avg: 3.23)
Length (states) of path with itp non-trivial itp:       258 (count: 47, min: 1, max: 34, avg: 5.49)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 47, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:             210 (count: 47, min: 0, max: 33, avg: 4.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 23715
Max. size of reached set after ref.:  14008
Avg. size of reached set before ref.: 11557.11
Avg. size of reached set after ref.:  2253.15

Total time for CEGAR algorithm:      26.352s
Time for refinements:                 1.947s
Average time for refinement:          0.041s
Max time for refinement:              0.135s

Code Coverage
-----------------------------
  Function coverage:      0.415
  Visited lines:          1442
  Total lines:            2807
  Line coverage:          0.514
  Visited conditions:     259
  Total conditions:       628
  Condition coverage:     0.412

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             2296
  Number of reached locations:   731 (19%)
    Avg states per location:     3
    Max states per location:     60 (at node N267)
  Number of reached functions:   61 (41%)
  Number of partitions:          2286
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [7c1c5936], stack [main]])
  Number of target states:       0
  Size of final wait list        34

Time for analysis setup:          3.981s
  Time for loading CPAs:          0.683s
  Time for loading parser:        0.488s
  Time for CFA construction:      2.746s
    Time for parsing file(s):     0.776s
    Time for AST to CFA:          0.973s
    Time for CFA sanity check:    0.199s
    Time for post-processing:     0.634s
      Time for var class.:        0.309s
Time for Analysis:               26.352s
CPU time for analysis:           26.350s
Total time for CPAchecker:       30.336s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.083s

Time for Garbage Collector:       2.782s (in 156 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     70MB (    66 MiB) avg;    138MB (   131 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           145MB (   139 MiB) max;    128MB (   123 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
