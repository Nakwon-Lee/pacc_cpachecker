scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vxbt7nql/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_var to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_nearest_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_best_display to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2645702 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2462450 (93%)
  Because of loop head:            182752 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         500 (0%)
  Times precision was empty:       503780 (19%)
  Times precision was {false}:     3298 (0%)
  Times result was cached:         2068504 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70120 (3%)
  Times result was 'false':        95961 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         2873800
  BDD entailment checks:           1115650
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          29
Number of abstraction locations:          222
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         17381018
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 236.74
Number of irrelevant predicates:          4454286 (26%)
Number of preds handled by boolean abs:   390765 (2%)
  Total number of models for allsat:      116775
  Max number of models for allsat:        72
  Avg number of models for allsat:        1.67

Time for post operator:                148.298s
  Time for path formula creation:      143.640s
Time for strengthen operator:           10.572s
Time for prec operator:                521.087s
  Time for abstraction:                501.960s (Max:     4.872s, Count: 2645702)
    Boolean abstraction:                62.975s
    Solving time:                       48.930s (Max:     0.100s)
    Model enumeration time:              9.627s
    Time for BDD construction:           1.526s (Max:     0.012s)
Time for merge operator:                 9.845s
Time for coverage check:                 1.095s
  Time for BDD entailment checks:        0.769s
Total time for SMT solver (w/o itp):    58.557s

Number of path formula cache hits:   18079916 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   117.710s

Total number of created targets for pointer analysis: 268063
   Number of created targets for uf: *signed_int is 6624
   Number of created targets for uf: *(char)* is 97
   Number of created targets for uf: *(struct_usb_device)* is 1997
   Number of created targets for uf: *(struct_urb)* is 16
   Number of created targets for uf: *(struct_list_head)* is 5604
   Number of created targets for uf: *(unsigned_char)* is 8
   Number of created targets for uf: *_Bool is 754
   Number of created targets for uf: *(struct_device)* is 1997
   Number of created targets for uf: *unsigned_int is 3739
   Number of created targets for uf: *char is 22
   Number of created targets for uf: *(struct_dlfb_data)* is 480
   Number of created targets for uf: *unsigned_long_int is 699


Number of BDD nodes:                               72117
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      150684 (count: 2085088, min: 0, max: 2154, avg: 0.07)
Time for BDD node cleanup:                             0.281s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 17.097s
  Time for transition matches:                        10.339s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                     18779132 (count: 18784259, min: 0, max: 1, avg: 1.00) [0 x 5127, 1 x 18779132]

CPA algorithm statistics
------------------------
Number of iterations:            9746941
Max size of waitlist:            1583
Average size of waitlist:        371
Number of computed successors:   11300461
Max successors for one state:    2
Number of times merged:          879075
Number of times stopped:         1232678
Number of times breaked:         500

Total time for CPA algorithm:       867.371s (Max:    10.558s)
  Time for choose from waitlist:      3.297s
  Time for precision adjustment:    562.696s
  Time for transfer relation:       250.025s
  Time for merge operator:           16.670s
  Time for stop operator:             8.249s
  Time for adding to reached set:     9.944s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   500
Avg. length of target path (in blocks):               23284 (count: 500, min: 10, max: 110, avg: 46.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  23.118s
  Counterexample analysis:                             7.723s (Max:     0.064s, Calls: 500)
    Refinement sat check:                              5.099s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.124s
  Precision update:                                    0.318s
  ARG update:                                         14.710s

Length of refined path (in blocks):                   18888 (count: 500, min: 4, max: 87, avg: 37.78)
Number of affected states:                            17060 (count: 500, min: 1, max: 86, avg: 34.12)
Length (states) of path with itp 'true':               1328 (count: 500, min: 0, max: 46, avg: 2.66)
Length (states) of path with itp non-trivial itp:     17060 (count: 500, min: 1, max: 86, avg: 34.12)
Length (states) of path with itp 'false':               500 (count: 500, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         138 (count: 500, min: 0, max: 1, avg: 0.28)
Equal non-trivial interpolants along paths:           16422 (count: 500, min: 0, max: 84, avg: 32.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                500
Number of successful refinements:     500
Number of failed refinements:         0
Max. size of reached set before ref.: 69471
Max. size of reached set after ref.:  35261
Avg. size of reached set before ref.: 21051.13
Avg. size of reached set after ref.:  1194.23

Total time for CEGAR algorithm:     896.189s
Time for refinements:                28.379s
Average time for refinement:          0.056s
Max time for refinement:              0.433s

Code Coverage
-----------------------------
  Function coverage:      0.599
  Visited lines:          2181
  Total lines:            2807
  Line coverage:          0.777
  Visited conditions:     451
  Total conditions:       628
  Condition coverage:     0.718

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             43375
  Number of reached locations:   1282 (33%)
    Avg states per location:     33
    Max states per location:     689 (at node N2804)
  Number of reached functions:   88 (60%)
  Number of partitions:          43118
    Avg size of partitions:      1
    Max size of partitions:      29 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        520

Time for analysis setup:          4.084s
  Time for loading CPAs:          0.673s
  Time for loading parser:        0.558s
  Time for CFA construction:      2.746s
    Time for parsing file(s):     0.722s
    Time for AST to CFA:          0.999s
    Time for CFA sanity check:    0.192s
    Time for post-processing:     0.668s
      Time for var class.:        0.336s
Time for Analysis:              896.189s
CPU time for analysis:          896.110s
Total time for CPAchecker:      900.278s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.512s

Time for Garbage Collector:      75.202s (in 1533 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2432MB (  2319 MiB) max;   1130MB (  1078 MiB) avg;   2476MB (  2361 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2874MB (  2740 MiB) max;   1678MB (  1601 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   9507MB (  9067 MiB) max;   8753MB (  8347 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
