scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uxqjotbw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5574748 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4749389 (85%)
  Because of loop head:            824642 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         717 (0%)
  Times precision was empty:       2432064 (44%)
  Times precision was {false}:     3968 (0%)
  Times result was cached:         3126773 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11943 (0%)
  Times result was 'false':        56813 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         2870256
  BDD entailment checks:           1246404
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          21
Number of abstraction locations:          264
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         19485312
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 1224.64
Number of irrelevant predicates:          11898455 (61%)
Number of preds handled by boolean abs:   45557 (0%)
  Total number of models for allsat:      12872
  Max number of models for allsat:        27
  Avg number of models for allsat:        1.08

Time for post operator:                 88.592s
  Time for path formula creation:       79.617s
Time for strengthen operator:           18.940s
Time for prec operator:                430.480s
  Time for abstraction:                397.384s (Max:     1.573s, Count: 5574748)
    Boolean abstraction:                 8.073s
    Solving time:                        7.960s (Max:     0.016s)
    Model enumeration time:              0.758s
    Time for BDD construction:           0.228s (Max:     0.009s)
Time for merge operator:                 2.937s
Time for coverage check:                 1.007s
  Time for BDD entailment checks:        0.698s
Total time for SMT solver (w/o itp):     8.718s

Number of path formula cache hits:   36037812 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.123s

Total number of created targets for pointer analysis: 69594
   Number of created targets for uf: *signed_int is 168
   Number of created targets for uf: *(char)* is 6
   Number of created targets for uf: *(struct_usb_device)* is 79
   Number of created targets for uf: *(struct_urb)* is 753
   Number of created targets for uf: *(struct_list_head)* is 4513
   Number of created targets for uf: *(unsigned_char)* is 109
   Number of created targets for uf: *_Bool is 37
   Number of created targets for uf: *(struct_device)* is 79
   Number of created targets for uf: *unsigned_int is 43
   Number of created targets for uf: *char is 21
   Number of created targets for uf: *(struct_dlfb_data)* is 222
   Number of created targets for uf: *unsigned_long_int is 201


Number of BDD nodes:                               10015
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       27463 (count: 3787582, min: 0, max: 390, avg: 0.01)
Time for BDD node cleanup:                             0.392s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 28.060s
  Time for transition matches:                        15.171s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                     30745565 (count: 30746563, min: 0, max: 1, avg: 1.00) [0 x 998, 1 x 30745565]

CPA algorithm statistics
------------------------
Number of iterations:            17288379
Max size of waitlist:            53
Average size of waitlist:        25
Number of computed successors:   19046461
Max successors for one state:    2
Number of times merged:          811926
Number of times stopped:         1692000
Number of times breaked:         717

Total time for CPA algorithm:       830.710s (Max:     6.331s)
  Time for choose from waitlist:      3.575s
  Time for precision adjustment:    506.941s
  Time for transfer relation:       255.671s
  Time for merge operator:           10.342s
  Time for stop operator:            12.954s
  Time for adding to reached set:    14.807s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   717
Avg. length of target path (in blocks):               34117 (count: 717, min: 9, max: 192, avg: 47.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.176s
  Counterexample analysis:                             8.391s (Max:     0.071s, Calls: 717)
    Refinement sat check:                              5.206s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.100s
  Precision update:                                    0.420s
  ARG update:                                         28.056s

Length of refined path (in blocks):                   25436 (count: 717, min: 4, max: 191, avg: 35.48)
Number of affected states:                            15079 (count: 717, min: 1, max: 189, avg: 21.03)
Length (states) of path with itp 'true':               9640 (count: 717, min: 0, max: 35, avg: 13.44)
Length (states) of path with itp non-trivial itp:     15079 (count: 717, min: 1, max: 189, avg: 21.03)
Length (states) of path with itp 'false':               717 (count: 717, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         108 (count: 717, min: 0, max: 1, avg: 0.15)
Equal non-trivial interpolants along paths:           14254 (count: 717, min: 0, max: 188, avg: 19.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                717
Number of successful refinements:     717
Number of failed refinements:         0
Max. size of reached set before ref.: 95571
Max. size of reached set after ref.:  79793
Avg. size of reached set before ref.: 43012.74
Avg. size of reached set after ref.:  18930.49

Total time for CEGAR algorithm:     896.309s
Time for refinements:                56.014s
Average time for refinement:          0.078s
Max time for refinement:              1.610s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          2091
  Total lines:            2807
  Line coverage:          0.745
  Visited conditions:     399
  Total conditions:       628
  Condition coverage:     0.635

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             30679
  Number of reached locations:   1218 (32%)
    Avg states per location:     25
    Max states per location:     450 (at node N267)
  Number of reached functions:   84 (57%)
  Number of partitions:          30490
    Avg size of partitions:      1
    Max size of partitions:      14 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        17

Time for analysis setup:          4.037s
  Time for loading CPAs:          0.680s
  Time for loading parser:        0.548s
  Time for CFA construction:      2.700s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          1.017s
    Time for CFA sanity check:    0.182s
    Time for post-processing:     0.604s
      Time for var class.:        0.301s
Time for Analysis:              896.309s
CPU time for analysis:          896.250s
Total time for CPAchecker:      900.350s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.418s

Time for Garbage Collector:     120.341s (in 2222 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                958MB (   914 MiB) max;    470MB (   448 MiB) avg;    969MB (   925 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           972MB (   927 MiB) max;    688MB (   656 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8130MB (  7753 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
