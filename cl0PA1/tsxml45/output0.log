scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_phpyxi93/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49741 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46736 (94%)
  Because of loop head:            2882 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         123 (0%)
  Times precision was empty:       13467 (27%)
  Times precision was {false}:     499 (1%)
  Times result was cached:         32761 (66%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3014 (6%)
  Times result was 'false':        1935 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         52520
  BDD entailment checks:           7640
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          9
Number of abstraction locations:          121
Max number of predicates per location:    7
Avg number of predicates per location:    5
Total predicates per abstraction:         147050
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 41.86
Number of irrelevant predicates:          38261 (26%)
Number of preds handled by boolean abs:   8887 (6%)
  Total number of models for allsat:      3080
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.02

Time for post operator:                  5.502s
  Time for path formula creation:        5.392s
Time for strengthen operator:            0.287s
Time for prec operator:                 11.585s
  Time for abstraction:                 10.933s (Max:     0.024s, Count: 49741)
    Boolean abstraction:                 2.714s
    Solving time:                        2.401s (Max:     0.014s)
    Model enumeration time:              0.244s
    Time for BDD construction:           0.088s (Max:     0.011s)
Time for merge operator:                 0.306s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     2.645s

Number of path formula cache hits:   324937 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.664s

Total number of created targets for pointer analysis: 5185
   Number of created targets for uf: *signed_int is 85
   Number of created targets for uf: *(char)* is 6
   Number of created targets for uf: *(struct_usb_device)* is 61
   Number of created targets for uf: *(struct_urb)* is 73
   Number of created targets for uf: *(struct_list_head)* is 826
   Number of created targets for uf: *(unsigned_char)* is 5
   Number of created targets for uf: *_Bool is 24
   Number of created targets for uf: *(struct_device)* is 61
   Number of created targets for uf: *unsigned_int is 7
   Number of created targets for uf: *(struct_dlfb_data)* is 76
   Number of created targets for uf: *unsigned_long_int is 140


Number of BDD nodes:                               540
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6387 (count: 42366, min: 0, max: 305, avg: 0.15)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.543s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       318445 (count: 318445, min: 1, max: 1, avg: 1.00) [1 x 318445]

CPA algorithm statistics
------------------------
Number of iterations:            207494
Max size of waitlist:            168
Average size of waitlist:        83
Number of computed successors:   249036
Max successors for one state:    2
Number of times merged:          22440
Number of times stopped:         26786
Number of times breaked:         123

Total time for CPA algorithm:        23.739s (Max:     1.201s)
  Time for choose from waitlist:      0.139s
  Time for precision adjustment:     12.991s
  Time for transfer relation:         8.566s
  Time for merge operator:            0.592s
  Time for stop operator:             0.329s
  Time for adding to reached set:     0.330s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   123
Avg. length of target path (in blocks):                5457 (count: 123, min: 10, max: 78, avg: 44.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.225s
  Counterexample analysis:                             1.527s (Max:     0.031s, Calls: 123)
    Refinement sat check:                              1.097s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.056s
  Precision update:                                    0.098s
  ARG update:                                          0.459s

Length of refined path (in blocks):                    5200 (count: 123, min: 4, max: 77, avg: 42.28)
Number of affected states:                             4834 (count: 123, min: 0, max: 75, avg: 39.30)
Length (states) of path with itp 'true':                243 (count: 123, min: 1, max: 15, avg: 1.98)
Length (states) of path with itp non-trivial itp:      4834 (count: 123, min: 0, max: 75, avg: 39.30)
Length (states) of path with itp 'false':               123 (count: 123, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 123, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            4712 (count: 123, min: 0, max: 74, avg: 38.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                123
Number of successful refinements:     123
Number of failed refinements:         0
Max. size of reached set before ref.: 2769
Max. size of reached set after ref.:  546
Avg. size of reached set before ref.: 1826.57
Avg. size of reached set after ref.:  43.37

Total time for CEGAR algorithm:      26.229s
Time for refinements:                 2.463s
Average time for refinement:          0.020s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.184
  Visited lines:          926
  Total lines:            2807
  Line coverage:          0.330
  Visited conditions:     154
  Total conditions:       628
  Condition coverage:     0.245

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             980
  Number of reached locations:   293 (8%)
    Avg states per location:     3
    Max states per location:     8 (at node N931)
  Number of reached functions:   27 (18%)
  Number of partitions:          977
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        108

Time for analysis setup:          4.107s
  Time for loading CPAs:          0.812s
  Time for loading parser:        0.502s
  Time for CFA construction:      2.686s
    Time for parsing file(s):     0.668s
    Time for AST to CFA:          0.965s
    Time for CFA sanity check:    0.190s
    Time for post-processing:     0.707s
      Time for var class.:        0.357s
Time for Analysis:               26.229s
CPU time for analysis:           26.230s
Total time for CPAchecker:       30.350s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.081s

Time for Garbage Collector:       0.905s (in 121 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     54MB (    52 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
