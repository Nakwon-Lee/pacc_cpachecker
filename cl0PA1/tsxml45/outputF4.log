scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--video--udlfb.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__vl2y66g/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 7024: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_edid_attr_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_edid_attr_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_probe_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_dlfb_ops_release_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __usb_get_extra_descriptor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unlink_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc_to_pfn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_copyarea to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function down_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4626: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)front); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 4627: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)back); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function sys_imageblit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_deferred_io_cleanup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4155: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_sys_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sys_fillrect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2555773 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2198495 (86%)
  Because of loop head:            356620 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         658 (0%)
  Times precision was empty:       151038 (6%)
  Times precision was {false}:     894 (0%)
  Times result was cached:         2367789 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36052 (1%)
  Times result was 'false':        60004 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1495295
  BDD entailment checks:           624109
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          33
Number of abstraction locations:          280
Max number of predicates per location:    13
Avg number of predicates per location:    8
Total predicates per abstraction:         18417057
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 498.49
Number of irrelevant predicates:          4329399 (24%)
Number of preds handled by boolean abs:   217201 (1%)
  Total number of models for allsat:      48458
  Max number of models for allsat:        8
  Avg number of models for allsat:        1.34

Time for post operator:                156.899s
  Time for path formula creation:      153.023s
Time for strengthen operator:            8.474s
Time for prec operator:                538.641s
  Time for abstraction:                519.232s (Max:     6.649s, Count: 2555773)
    Boolean abstraction:                42.284s
    Solving time:                       35.687s (Max:     0.025s)
    Model enumeration time:              3.777s
    Time for BDD construction:           0.742s (Max:     0.012s)
Time for merge operator:                 4.399s
Time for coverage check:                 0.774s
  Time for BDD entailment checks:        0.584s
Total time for SMT solver (w/o itp):    39.464s

Number of path formula cache hits:   12389551 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   126.401s

Total number of created targets for pointer analysis: 513697
   Number of created targets for uf: *signed_int is 1263
   Number of created targets for uf: *(char)* is 397
   Number of created targets for uf: *(struct_usb_device)* is 584
   Number of created targets for uf: *(struct_urb)* is 1661
   Number of created targets for uf: *(struct_list_head)* is 24691
   Number of created targets for uf: *(unsigned_char)* is 535
   Number of created targets for uf: *_Bool is 284
   Number of created targets for uf: *(struct_device)* is 584
   Number of created targets for uf: *unsigned_int is 127
   Number of created targets for uf: *char is 29
   Number of created targets for uf: *(struct_dlfb_data)* is 805
   Number of created targets for uf: *unsigned_long_int is 1075


Number of BDD nodes:                               4987
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       76518 (count: 1009547, min: 0, max: 1248, avg: 0.08)
Time for BDD node cleanup:                             0.149s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 13.521s
  Time for transition matches:                         7.845s
  Time for transition assertions:                      0.019s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     13980555 (count: 13980900, min: 0, max: 1, avg: 1.00) [0 x 345, 1 x 13980555]

CPA algorithm statistics
------------------------
Number of iterations:            8204288
Max size of waitlist:            210
Average size of waitlist:        137
Number of computed successors:   9127728
Max successors for one state:    2
Number of times merged:          435593
Number of times stopped:         787017
Number of times breaked:         658

Total time for CPA algorithm:       860.796s (Max:    10.107s)
  Time for choose from waitlist:      2.542s
  Time for precision adjustment:    575.707s
  Time for transfer relation:       242.958s
  Time for merge operator:            8.410s
  Time for stop operator:             6.743s
  Time for adding to reached set:     9.314s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   658
Avg. length of target path (in blocks):               37328 (count: 658, min: 10, max: 235, avg: 56.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.807s
  Counterexample analysis:                            16.565s (Max:     0.165s, Calls: 658)
    Refinement sat check:                             10.326s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.022s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.186s
  Precision update:                                    0.608s
  ARG update:                                         13.014s

Length of refined path (in blocks):                   29478 (count: 658, min: 4, max: 221, avg: 44.80)
Number of affected states:                            24702 (count: 658, min: 0, max: 220, avg: 37.54)
Length (states) of path with itp 'true':               4118 (count: 658, min: 0, max: 117, avg: 6.26)
Length (states) of path with itp non-trivial itp:     24702 (count: 658, min: 0, max: 220, avg: 37.54)
Length (states) of path with itp 'false':               658 (count: 658, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         274 (count: 658, min: 0, max: 3, avg: 0.42)
Equal non-trivial interpolants along paths:           23771 (count: 658, min: 0, max: 218, avg: 36.13)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                658
Number of successful refinements:     658
Number of failed refinements:         0
Max. size of reached set before ref.: 35225
Max. size of reached set after ref.:  11666
Avg. size of reached set before ref.: 13146.14
Avg. size of reached set after ref.:  576.88

Total time for CEGAR algorithm:     896.100s
Time for refinements:                35.059s
Average time for refinement:          0.053s
Max time for refinement:              0.289s

Code Coverage
-----------------------------
  Function coverage:      0.537
  Visited lines:          1936
  Total lines:            2807
  Line coverage:          0.690
  Visited conditions:     353
  Total conditions:       628
  Condition coverage:     0.562

CPAchecker general statistics
-----------------------------
Number of program locations:     3827
Number of CFA edges:             4260
Number of relevant variables:    674
Number of functions:             147
Number of loops:                 24
Size of reached set:             10139
  Number of reached locations:   1081 (28%)
    Avg states per location:     9
    Max states per location:     139 (at node N267)
  Number of reached functions:   79 (54%)
  Number of partitions:          9973
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N2374 (before line 6652), Function main called from node N2361, stack depth 1 [1b15f922], stack [main]])
  Number of target states:       0
  Size of final wait list        97

Time for analysis setup:          4.202s
  Time for loading CPAs:          0.756s
  Time for loading parser:        0.465s
  Time for CFA construction:      2.888s
    Time for parsing file(s):     0.701s
    Time for AST to CFA:          1.046s
    Time for CFA sanity check:    0.256s
    Time for post-processing:     0.763s
      Time for var class.:        0.350s
Time for Analysis:              896.100s
CPU time for analysis:          896.050s
Total time for CPAchecker:      900.305s
Total CPU time for CPAchecker:  900.240s
Time for statistics:              0.276s

Time for Garbage Collector:      88.347s (in 1846 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               2461MB (  2347 MiB) max;    950MB (   906 MiB) avg;   2477MB (  2362 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          3405MB (  3247 MiB) max;   1411MB (  1346 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   9039MB (  8620 MiB) max;   8434MB (  8043 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
