scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2eyhvch7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            64025 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  52385 (82%)
  Because of loop head:            11615 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       60538 (95%)
  Times precision was {false}:     455 (1%)
  Times result was cached:         2725 (4%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      307 (0%)
  Times result was 'false':        305 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         85540
  BDD entailment checks:           22920
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          11
Number of abstraction locations:          21
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         10339
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 13.57
Number of irrelevant predicates:          7156 (69%)
Number of preds handled by boolean abs:   1029 (10%)
  Total number of models for allsat:      900
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.93

Time for post operator:                  7.405s
  Time for path formula creation:        6.996s
Time for strengthen operator:            0.445s
Time for prec operator:                  5.264s
  Time for abstraction:                  4.282s (Max:     0.064s, Count: 64025)
    Boolean abstraction:                 1.570s
    Solving time:                        0.979s (Max:     0.020s)
    Model enumeration time:              0.646s
    Time for BDD construction:           0.132s (Max:     0.019s)
Time for merge operator:                 0.588s
Time for coverage check:                 0.123s
  Time for BDD entailment checks:        0.103s
Total time for SMT solver (w/o itp):     1.625s

Number of path formula cache hits:   495217 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.710s

Total number of created targets for pointer analysis: 3078
   Number of created targets for uf: *signed_int is 28
   Number of created targets for uf: *unsigned_long_long_int is 53
   Number of created targets for uf: *unsigned_long_int is 38


Number of BDD nodes:                               1871
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1157 (count: 87883, min: 0, max: 101, avg: 0.01)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.877s
  Time for transition matches:                         0.472s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       493450 (count: 493450, min: 1, max: 1, avg: 1.00) [1 x 493450]

CPA algorithm statistics
------------------------
Number of iterations:            290543
Max size of waitlist:            230
Average size of waitlist:        104
Number of computed successors:   344112
Max successors for one state:    2
Number of times merged:          31310
Number of times stopped:         52031
Number of times breaked:         25

Total time for CPA algorithm:        24.881s (Max:     2.187s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:      7.788s
  Time for transfer relation:        13.254s
  Time for merge operator:            1.164s
  Time for stop operator:             0.615s
  Time for adding to reached set:     0.577s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 322 (count: 25, min: 8, max: 18, avg: 12.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.243s
  Counterexample analysis:                             0.272s (Max:     0.026s, Calls: 25)
    Refinement sat check:                              0.152s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.013s
  ARG update:                                          0.924s

Length of refined path (in blocks):                     231 (count: 25, min: 4, max: 17, avg: 9.24)
Number of affected states:                              173 (count: 25, min: 1, max: 15, avg: 6.92)
Length (states) of path with itp 'true':                 33 (count: 25, min: 1, max: 2, avg: 1.32)
Length (states) of path with itp non-trivial itp:       173 (count: 25, min: 1, max: 15, avg: 6.92)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             148 (count: 25, min: 0, max: 14, avg: 5.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 25512
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 11562.16
Avg. size of reached set after ref.:  6.64

Total time for CEGAR algorithm:      26.452s
Time for refinements:                 1.562s
Average time for refinement:          0.062s
Max time for refinement:              0.132s

Code Coverage
-----------------------------
  Function coverage:      0.300
  Visited lines:          1300
  Total lines:            2094
  Line coverage:          0.621
  Visited conditions:     312
  Total conditions:       632
  Condition coverage:     0.494

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             2888
  Number of reached locations:   617 (22%)
    Avg states per location:     4
    Max states per location:     24 (at node N89)
  Number of reached functions:   30 (30%)
  Number of partitions:          2882
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0
  Size of final wait list        123

Time for analysis setup:          3.391s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.461s
  Time for CFA construction:      2.203s
    Time for parsing file(s):     0.618s
    Time for AST to CFA:          0.746s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.556s
      Time for var class.:        0.241s
Time for Analysis:               26.452s
CPU time for analysis:           26.460s
Total time for CPAchecker:       29.847s
Total CPU time for CPAchecker:   29.840s
Time for statistics:              0.081s

Time for Garbage Collector:       2.193s (in 109 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                127MB (   121 MiB) max;     69MB (    66 MiB) avg;    139MB (   132 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           135MB (   129 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
