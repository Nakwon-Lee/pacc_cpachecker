scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_wuqwbley/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            60179 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  53351 (89%)
  Because of loop head:            6757 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         71 (0%)
  Times precision was empty:       40968 (68%)
  Times precision was {false}:     624 (1%)
  Times result was cached:         17445 (29%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1142 (2%)
  Times result was 'false':        1410 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         143563
  BDD entailment checks:           21985
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          14
Number of abstraction locations:          40
Max number of predicates per location:    13
Avg number of predicates per location:    4
Total predicates per abstraction:         88621
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 50.18
Number of irrelevant predicates:          60617 (68%)
Number of preds handled by boolean abs:   4077 (5%)
  Total number of models for allsat:      6984
  Max number of models for allsat:        256
  Avg number of models for allsat:        6.12

Time for post operator:                  3.833s
  Time for path formula creation:        3.578s
Time for strengthen operator:            0.515s
Time for prec operator:                 11.129s
  Time for abstraction:                 10.456s (Max:     0.270s, Count: 60179)
    Boolean abstraction:                 5.501s
    Solving time:                        1.622s (Max:     0.031s)
    Model enumeration time:              3.797s
    Time for BDD construction:           0.206s (Max:     0.012s)
Time for merge operator:                 0.467s
Time for coverage check:                 0.069s
  Time for BDD entailment checks:        0.043s
Total time for SMT solver (w/o itp):     5.419s

Number of path formula cache hits:   699469 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.458s

Total number of created targets for pointer analysis: 190
   Number of created targets for uf: *(struct_backlight_device)* is 2
   Number of created targets for uf: *(struct_dentry)* is 2
   Number of created targets for uf: *signed_int is 31
   Number of created targets for uf: *(struct_platform_device)* is 4
   Number of created targets for uf: *unsigned_long_int is 12


Number of BDD nodes:                               14463
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3408 (count: 73545, min: 0, max: 159, avg: 0.05)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.678s
  Time for transition matches:                         0.342s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       622312 (count: 622312, min: 1, max: 1, avg: 1.00) [1 x 622312]

CPA algorithm statistics
------------------------
Number of iterations:            372189
Max size of waitlist:            243
Average size of waitlist:        103
Number of computed successors:   454285
Max successors for one state:    2
Number of times merged:          60789
Number of times stopped:         71839
Number of times breaked:         71

Total time for CPA algorithm:        24.345s (Max:     1.360s)
  Time for choose from waitlist:      0.164s
  Time for precision adjustment:     12.995s
  Time for transfer relation:         8.360s
  Time for merge operator:            1.042s
  Time for stop operator:             0.448s
  Time for adding to reached set:     0.440s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                1000 (count: 71, min: 8, max: 18, avg: 14.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.387s
  Counterexample analysis:                             0.581s (Max:     0.027s, Calls: 71)
    Refinement sat check:                              0.416s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.038s
  Precision update:                                    0.032s
  ARG update:                                          0.694s

Length of refined path (in blocks):                     814 (count: 70, min: 4, max: 17, avg: 11.63)
Number of affected states:                              662 (count: 70, min: 1, max: 15, avg: 9.46)
Length (states) of path with itp 'true':                 82 (count: 70, min: 1, max: 2, avg: 1.17)
Length (states) of path with itp non-trivial itp:       662 (count: 70, min: 1, max: 15, avg: 9.46)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 70, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             592 (count: 70, min: 0, max: 14, avg: 8.46)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 9930
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 5372.97
Avg. size of reached set after ref.:  6.34

Total time for CEGAR algorithm:      26.002s
Time for refinements:                 1.654s
Average time for refinement:          0.023s
Max time for refinement:              0.060s

Code Coverage
-----------------------------
  Function coverage:      0.410
  Visited lines:          1495
  Total lines:            2094
  Line coverage:          0.714
  Visited conditions:     364
  Total conditions:       632
  Condition coverage:     0.576

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             9926
  Number of reached locations:   827 (29%)
    Avg states per location:     12
    Max states per location:     175 (at node N89)
  Number of reached functions:   41 (41%)
  Number of partitions:          9889
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       1
  Size of final wait list        208

Time for analysis setup:          3.805s
  Time for loading CPAs:          0.803s
  Time for loading parser:        0.508s
  Time for CFA construction:      2.403s
    Time for parsing file(s):     0.676s
    Time for AST to CFA:          0.805s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.620s
      Time for var class.:        0.260s
Time for Analysis:               26.002s
CPU time for analysis:           26.000s
Total time for CPAchecker:       29.813s
Total CPU time for CPAchecker:   29.790s
Time for statistics:              0.347s

Time for Garbage Collector:       1.469s (in 151 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   117 MiB) max;     56MB (    54 MiB) avg;    127MB (   121 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
