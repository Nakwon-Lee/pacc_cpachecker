scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__rx1_1be/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            19865 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  16714 (84%)
  Because of loop head:            3078 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         73 (0%)
  Times precision was empty:       15168 (76%)
  Times precision was {false}:     701 (4%)
  Times result was cached:         3710 (19%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      286 (1%)
  Times result was 'false':        405 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         32587
  BDD entailment checks:           6373
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          15
Number of abstraction locations:          69
Max number of predicates per location:    13
Avg number of predicates per location:    1
Total predicates per abstraction:         7847
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 7.95
Number of irrelevant predicates:          4632 (59%)
Number of preds handled by boolean abs:   707 (9%)
  Total number of models for allsat:      2764
  Max number of models for allsat:        256
  Avg number of models for allsat:        9.66

Time for post operator:                  7.451s
  Time for path formula creation:        7.275s
Time for strengthen operator:            0.288s
Time for prec operator:                  7.219s
  Time for abstraction:                  6.714s (Max:     0.289s, Count: 19865)
    Boolean abstraction:                 3.356s
    Solving time:                        1.245s (Max:     0.025s)
    Model enumeration time:              2.293s
    Time for BDD construction:           0.195s (Max:     0.029s)
Time for merge operator:                 0.836s
Time for coverage check:                 0.070s
  Time for BDD entailment checks:        0.054s
Total time for SMT solver (w/o itp):     3.538s

Number of path formula cache hits:   67893 (39%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.660s

Total number of created targets for pointer analysis: 4155
   Number of created targets for uf: *(struct_backlight_device)* is 19
   Number of created targets for uf: *(struct_dentry)* is 37
   Number of created targets for uf: *signed_int is 20
   Number of created targets for uf: *unsigned_long_long_int is 29
   Number of created targets for uf: *(struct_platform_device)* is 19
   Number of created targets for uf: *(struct_rfkill)* is 55
   Number of created targets for uf: *unsigned_long_int is 34


Number of BDD nodes:                               2039
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1059 (count: 27164, min: 0, max: 236, avg: 0.04)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.534s
  Time for transition matches:                         0.253s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       163409 (count: 163409, min: 1, max: 1, avg: 1.00) [1 x 163409]

CPA algorithm statistics
------------------------
Number of iterations:            100791
Max size of waitlist:            121
Average size of waitlist:        56
Number of computed successors:   120916
Max successors for one state:    2
Number of times merged:          13107
Number of times stopped:         18545
Number of times breaked:         73

Total time for CPA algorithm:        22.015s (Max:     2.455s)
  Time for choose from waitlist:      0.174s
  Time for precision adjustment:      8.433s
  Time for transfer relation:        10.649s
  Time for merge operator:            1.334s
  Time for stop operator:             0.333s
  Time for adding to reached set:     0.316s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   73
Avg. length of target path (in blocks):                6215 (count: 73, min: 8, max: 107, avg: 85.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.208s
  Counterexample analysis:                             2.606s (Max:     0.083s, Calls: 73)
    Refinement sat check:                              1.598s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.058s
  ARG update:                                          0.401s

Length of refined path (in blocks):                    5275 (count: 73, min: 4, max: 106, avg: 72.26)
Number of affected states:                             1086 (count: 73, min: 1, max: 85, avg: 14.88)
Length (states) of path with itp 'true':               4116 (count: 73, min: 1, max: 86, avg: 56.38)
Length (states) of path with itp non-trivial itp:      1086 (count: 73, min: 1, max: 85, avg: 14.88)
Length (states) of path with itp 'false':                73 (count: 73, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 73, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1013 (count: 73, min: 0, max: 84, avg: 13.88)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                73
Number of successful refinements:     73
Number of failed refinements:         0
Max. size of reached set before ref.: 6667
Max. size of reached set after ref.:  6421
Avg. size of reached set before ref.: 5719.08
Avg. size of reached set after ref.:  4322.66

Total time for CEGAR algorithm:      26.240s
Time for refinements:                 3.903s
Average time for refinement:          0.053s
Max time for refinement:              0.134s

Code Coverage
-----------------------------
  Function coverage:      0.020
  Visited lines:          786
  Total lines:            2094
  Line coverage:          0.375
  Visited conditions:     18
  Total conditions:       632
  Condition coverage:     0.028

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             26
  Number of reached locations:   26 (1%)
    Avg states per location:     1
    Max states per location:     1 (at node N1108)
  Number of reached functions:   2 (2%)
  Number of partitions:          26
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          4.042s
  Time for loading CPAs:          0.802s
  Time for loading parser:        0.575s
  Time for CFA construction:      2.573s
    Time for parsing file(s):     0.709s
    Time for AST to CFA:          0.891s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.665s
      Time for var class.:        0.285s
Time for Analysis:               26.241s
CPU time for analysis:           26.240s
Total time for CPAchecker:       30.286s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.033s

Time for Garbage Collector:       1.267s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                118MB (   113 MiB) max;     66MB (    63 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           156MB (   149 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
