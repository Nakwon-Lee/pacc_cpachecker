scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_im_95qob/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2891777 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2383843 (82%)
  Because of loop head:            507277 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         657 (0%)
  Times precision was empty:       291892 (10%)
  Times precision was {false}:     8071 (0%)
  Times result was cached:         2566485 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25329 (1%)
  Times result was 'false':        12641 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4032639
  BDD entailment checks:           1227197
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         14895015
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 445.96
Number of irrelevant predicates:          6481107 (44%)
Number of preds handled by boolean abs:   104066 (1%)
  Total number of models for allsat:      232572
  Max number of models for allsat:        768
  Avg number of models for allsat:        9.18

Time for post operator:                112.953s
  Time for path formula creation:      107.837s
Time for strengthen operator:           12.057s
Time for prec operator:                483.019s
  Time for abstraction:                459.039s (Max:     4.351s, Count: 2891777)
    Boolean abstraction:               131.631s
    Solving time:                       21.749s (Max:     0.023s)
    Model enumeration time:            108.574s
    Time for BDD construction:           3.809s (Max:     0.058s)
Time for merge operator:                12.876s
Time for coverage check:                 1.266s
  Time for BDD entailment checks:        0.826s
Total time for SMT solver (w/o itp):   130.323s

Number of path formula cache hits:   22657492 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.959s

Total number of created targets for pointer analysis: 319436
   Number of created targets for uf: *(struct_backlight_device)* is 30
   Number of created targets for uf: *(struct_dentry)* is 700
   Number of created targets for uf: *signed_int is 1172
   Number of created targets for uf: *unsigned_long_long_int is 176
   Number of created targets for uf: *(struct_platform_device)* is 260
   Number of created targets for uf: *(struct_rfkill)* is 436
   Number of created targets for uf: *unsigned_long_int is 75025


Number of BDD nodes:                               80913
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       53723 (count: 1715105, min: 0, max: 599, avg: 0.03)
Time for BDD node cleanup:                             0.261s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 19.737s
  Time for transition matches:                        10.811s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.013s
Automaton transfers with branching:                0
Automaton transfer successors:                     22167187 (count: 22167187, min: 1, max: 1, avg: 1.00) [1 x 22167187]

CPA algorithm statistics
------------------------
Number of iterations:            13071666
Max size of waitlist:            339
Average size of waitlist:        127
Number of computed successors:   15466620
Max successors for one state:    2
Number of times merged:          1402721
Number of times stopped:         2336035
Number of times breaked:         657

Total time for CPA algorithm:       848.129s (Max:    10.992s)
  Time for choose from waitlist:      3.685s
  Time for precision adjustment:    540.438s
  Time for transfer relation:       233.954s
  Time for merge operator:           24.368s
  Time for stop operator:            11.012s
  Time for adding to reached set:    11.009s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   657
Avg. length of target path (in blocks):               33570 (count: 657, min: 8, max: 96, avg: 51.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  29.138s
  Counterexample analysis:                             8.687s (Max:     0.039s, Calls: 657)
    Refinement sat check:                              5.715s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.070s
  Precision update:                                    0.274s
  ARG update:                                         19.860s

Length of refined path (in blocks):                   29585 (count: 657, min: 4, max: 95, avg: 45.03)
Number of affected states:                            13565 (count: 657, min: 1, max: 76, avg: 20.65)
Length (states) of path with itp 'true':              15363 (count: 657, min: 0, max: 85, avg: 23.38)
Length (states) of path with itp non-trivial itp:     13565 (count: 657, min: 1, max: 76, avg: 20.65)
Length (states) of path with itp 'false':               657 (count: 657, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 657, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           12908 (count: 657, min: 0, max: 75, avg: 19.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                657
Number of successful refinements:     657
Number of failed refinements:         0
Max. size of reached set before ref.: 73075
Max. size of reached set after ref.:  50793
Avg. size of reached set before ref.: 33457.69
Avg. size of reached set after ref.:  13572.03

Total time for CEGAR algorithm:     896.553s
Time for refinements:                42.113s
Average time for refinement:          0.064s
Max time for refinement:              0.263s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             53063
  Number of reached locations:   1097 (38%)
    Avg states per location:     48
    Max states per location:     1935 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          52999
    Avg size of partitions:      1
    Max size of partitions:      21 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        91

Time for analysis setup:          3.759s
  Time for loading CPAs:          0.741s
  Time for loading parser:        0.485s
  Time for CFA construction:      2.395s
    Time for parsing file(s):     0.677s
    Time for AST to CFA:          0.790s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.611s
      Time for var class.:        0.249s
Time for Analysis:              896.553s
CPU time for analysis:          896.480s
Total time for CPAchecker:      900.316s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.639s

Time for Garbage Collector:      81.772s (in 1608 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1958MB (  1867 MiB) max;    717MB (   684 MiB) avg;   2036MB (  1942 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          2633MB (  2511 MiB) max;   1059MB (  1010 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8289MB (  7905 MiB) max;   8157MB (  7779 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
