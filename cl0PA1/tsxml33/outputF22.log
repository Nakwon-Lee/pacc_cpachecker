scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xhkx_wkf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2017463 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1734982 (86%)
  Because of loop head:            268630 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13851 (1%)
  Times precision was empty:       397520 (20%)
  Times precision was {false}:     3357 (0%)
  Times result was cached:         1606357 (80%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10229 (1%)
  Times result was 'false':        42259 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2029485
  BDD entailment checks:           664753
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          135
Max number of predicates per location:    15
Avg number of predicates per location:    5
Total predicates per abstraction:         8270585
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 608.76
Number of irrelevant predicates:          4623541 (56%)
Number of preds handled by boolean abs:   29874 (0%)
  Total number of models for allsat:      30753
  Max number of models for allsat:        512
  Avg number of models for allsat:        3.01

Time for post operator:                 36.923s
  Time for path formula creation:       33.768s
Time for strengthen operator:            7.206s
Time for prec operator:                202.900s
  Time for abstraction:                189.378s (Max:     0.664s, Count: 2017463)
    Boolean abstraction:                17.880s
    Solving time:                        7.241s (Max:     0.027s)
    Model enumeration time:             11.127s
    Time for BDD construction:           0.558s (Max:     0.026s)
Time for merge operator:                 3.056s
Time for coverage check:                 0.703s
  Time for BDD entailment checks:        0.472s
Total time for SMT solver (w/o itp):    18.368s

Number of path formula cache hits:   15423755 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    11.708s

Total number of created targets for pointer analysis: 29291
   Number of created targets for uf: *(struct_backlight_device)* is 129
   Number of created targets for uf: *(struct_dentry)* is 129
   Number of created targets for uf: *signed_int is 8966
   Number of created targets for uf: *unsigned_long_long_int is 890
   Number of created targets for uf: *(struct_platform_device)* is 65
   Number of created targets for uf: *(struct_rfkill)* is 358
   Number of created targets for uf: *unsigned_long_int is 7630


Number of BDD nodes:                               21843
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21768 (count: 1144740, min: 0, max: 216, avg: 0.02)
Time for BDD node cleanup:                             0.156s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.414s
  Time for transition matches:                         6.452s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                     13218673 (count: 13218673, min: 1, max: 1, avg: 1.00) [1 x 13218673]

CPA algorithm statistics
------------------------
Number of iterations:            7998558
Max size of waitlist:            44
Average size of waitlist:        13
Number of computed successors:   9304907
Max successors for one state:    2
Number of times merged:          682366
Number of times stopped:         1229439
Number of times breaked:         13851

Total time for CPA algorithm:       385.530s (Max:     2.237s)
  Time for choose from waitlist:      1.765s
  Time for precision adjustment:    236.185s
  Time for transfer relation:       110.552s
  Time for merge operator:            8.765s
  Time for stop operator:             6.904s
  Time for adding to reached set:     8.378s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13851
Avg. length of target path (in blocks):             1050822 (count: 13851, min: 8, max: 112, avg: 75.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 257.846s
  Counterexample analysis:                           236.146s (Max:     0.055s, Calls: 13851)
    Refinement sat check:                            145.394s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.507s
  Error path post-processing:                          0.000s
  Predicate creation:                                  1.009s
  Precision update:                                    3.878s
  ARG update:                                         12.499s

Length of refined path (in blocks):                 1032752 (count: 13850, min: 4, max: 111, avg: 74.57)
Number of affected states:                           167578 (count: 13850, min: 1, max: 84, avg: 12.10)
Length (states) of path with itp 'true':             851324 (count: 13850, min: 0, max: 95, avg: 61.47)
Length (states) of path with itp non-trivial itp:    167578 (count: 13850, min: 1, max: 84, avg: 12.10)
Length (states) of path with itp 'false':             13850 (count: 13850, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13850, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          153728 (count: 13850, min: 0, max: 83, avg: 11.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13851
Number of successful refinements:     13850
Number of failed refinements:         0
Max. size of reached set before ref.: 33542
Max. size of reached set after ref.:  32806
Avg. size of reached set before ref.: 13786.57
Avg. size of reached set after ref.:  13207.55

Total time for CEGAR algorithm:     896.462s
Time for refinements:               400.716s
Average time for refinement:          0.028s
Max time for refinement:              0.694s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          1722
  Total lines:            2094
  Line coverage:          0.822
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             16851
  Number of reached locations:   1101 (39%)
    Avg states per location:     15
    Max states per location:     621 (at node N106)
  Number of reached functions:   56 (56%)
  Number of partitions:          16811
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       1
  Size of final wait list        7

Time for analysis setup:          3.860s
  Time for loading CPAs:          0.723s
  Time for loading parser:        0.577s
  Time for CFA construction:      2.441s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.804s
    Time for CFA sanity check:    0.146s
    Time for post-processing:     0.617s
      Time for var class.:        0.256s
Time for Analysis:              896.462s
CPU time for analysis:          896.350s
Total time for CPAchecker:      900.326s
Total CPU time for CPAchecker:  900.200s
Time for statistics:              0.275s

Time for Garbage Collector:      56.412s (in 2641 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                389MB (   371 MiB) max;    203MB (   194 MiB) avg;    397MB (   378 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           404MB (   385 MiB) max;    295MB (   281 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8122MB (  7746 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
