scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2ua_343n/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            823128 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  692067 (84%)
  Because of loop head:            130421 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         640 (0%)
  Times precision was empty:       65749 (8%)
  Times precision was {false}:     3611 (0%)
  Times result was cached:         727740 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26028 (3%)
  Times result was 'false':        18058 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1064820
  BDD entailment checks:           317188
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         3931832
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 132.66
Number of irrelevant predicates:          920181 (23%)
Number of preds handled by boolean abs:   96842 (2%)
  Total number of models for allsat:      74087
  Max number of models for allsat:        768
  Avg number of models for allsat:        2.85

Time for post operator:                 27.379s
  Time for path formula creation:       25.733s
Time for strengthen operator:            3.541s
Time for prec operator:                167.125s
  Time for abstraction:                160.286s (Max:     0.672s, Count: 823128)
    Boolean abstraction:                43.821s
    Solving time:                       16.075s (Max:     0.020s)
    Model enumeration time:             26.880s
    Time for BDD construction:           1.261s (Max:     0.026s)
Time for merge operator:                 2.289s
Time for coverage check:                 0.346s
  Time for BDD entailment checks:        0.235s
Total time for SMT solver (w/o itp):    42.955s

Number of path formula cache hits:   6676163 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.825s

Total number of created targets for pointer analysis: 46704
   Number of created targets for uf: *(struct_backlight_device)* is 220
   Number of created targets for uf: *(struct_dentry)* is 272
   Number of created targets for uf: *signed_int is 14202
   Number of created targets for uf: *unsigned_long_long_int is 1614
   Number of created targets for uf: *(struct_rfkill)* is 649
   Number of created targets for uf: *(struct_platform_device)* is 119
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               86751
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       54925 (count: 563438, min: 0, max: 738, avg: 0.10)
Time for BDD node cleanup:                             0.124s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  5.625s
  Time for transition matches:                         3.257s
  Time for transition assertions:                      0.004s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      6127520 (count: 6127520, min: 1, max: 1, avg: 1.00) [1 x 6127520]

CPA algorithm statistics
------------------------
Number of iterations:            3664559
Max size of waitlist:            44
Average size of waitlist:        17
Number of computed successors:   4308892
Max successors for one state:    2
Number of times merged:          373816
Number of times stopped:         620770
Number of times breaked:         640

Total time for CPA algorithm:       266.912s (Max:     2.718s)
  Time for choose from waitlist:      1.009s
  Time for precision adjustment:    183.872s
  Time for transfer relation:        63.794s
  Time for merge operator:            5.024s
  Time for stop operator:             3.440s
  Time for adding to reached set:     3.455s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   640
Avg. length of target path (in blocks):               36319 (count: 640, min: 8, max: 141, avg: 56.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  15.020s
  Counterexample analysis:                             9.367s (Max:     0.053s, Calls: 640)
    Refinement sat check:                              6.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.315s
  ARG update:                                          4.962s

Length of refined path (in blocks):                   31346 (count: 640, min: 4, max: 121, avg: 48.98)
Number of affected states:                            17816 (count: 640, min: 1, max: 111, avg: 27.84)
Length (states) of path with itp 'true':              12890 (count: 640, min: 0, max: 62, avg: 20.14)
Length (states) of path with itp non-trivial itp:     17816 (count: 640, min: 1, max: 111, avg: 27.84)
Length (states) of path with itp 'false':               640 (count: 640, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 640, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           17176 (count: 640, min: 0, max: 110, avg: 26.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                640
Number of successful refinements:     640
Number of failed refinements:         0
Max. size of reached set before ref.: 23971
Max. size of reached set after ref.:  6832
Avg. size of reached set before ref.: 7112.86
Avg. size of reached set after ref.:  1414.91

Total time for CEGAR algorithm:     285.259s
Time for refinements:                17.745s
Average time for refinement:          0.027s
Max time for refinement:              0.106s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             23377
  Number of reached locations:   1097 (38%)
    Avg states per location:     21
    Max states per location:     860 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          23363
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.439s
  Time for loading CPAs:          0.693s
  Time for loading parser:        0.469s
  Time for CFA construction:      2.173s
    Time for parsing file(s):     0.618s
    Time for AST to CFA:          0.733s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.541s
      Time for var class.:        0.231s
Time for Analysis:              285.260s
CPU time for analysis:          285.200s
Time for analyzing result:        0.020s
Total time for CPAchecker:      288.702s
Total CPU time for CPAchecker:  288.620s
Time for statistics:              0.408s

Time for Garbage Collector:      17.206s (in 1094 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                462MB (   440 MiB) max;    198MB (   189 MiB) avg;    470MB (   449 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           542MB (   517 MiB) max;    287MB (   274 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8208MB (  7828 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
