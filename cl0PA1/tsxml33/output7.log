scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_buytywdy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25532 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21599 (85%)
  Because of loop head:            3827 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         106 (0%)
  Times precision was empty:       16962 (66%)
  Times precision was {false}:     963 (4%)
  Times result was cached:         7220 (28%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      387 (2%)
  Times result was 'false':        562 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         43112
  BDD entailment checks:           8294
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          15
Number of abstraction locations:          73
Max number of predicates per location:    13
Avg number of predicates per location:    1
Total predicates per abstraction:         13784
Max number of predicates per abstraction: 13
Avg number of predicates per abstraction: 10.21
Number of irrelevant predicates:          8431 (61%)
Number of preds handled by boolean abs:   855 (6%)
  Total number of models for allsat:      2876
  Max number of models for allsat:        256
  Avg number of models for allsat:        7.43

Time for post operator:                  7.317s
  Time for path formula creation:        7.180s
Time for strengthen operator:            0.288s
Time for prec operator:                  6.372s
  Time for abstraction:                  5.826s (Max:     0.166s, Count: 25532)
    Boolean abstraction:                 2.775s
    Solving time:                        1.138s (Max:     0.019s)
    Model enumeration time:              1.769s
    Time for BDD construction:           0.208s (Max:     0.019s)
Time for merge operator:                 0.732s
Time for coverage check:                 0.067s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     2.907s

Number of path formula cache hits:   92356 (41%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.438s

Total number of created targets for pointer analysis: 5228
   Number of created targets for uf: *(struct_backlight_device)* is 22
   Number of created targets for uf: *(struct_dentry)* is 44
   Number of created targets for uf: *signed_int is 26
   Number of created targets for uf: *unsigned_long_long_int is 40
   Number of created targets for uf: *(struct_platform_device)* is 23
   Number of created targets for uf: *(struct_rfkill)* is 67
   Number of created targets for uf: *unsigned_long_int is 46


Number of BDD nodes:                               2040
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1293 (count: 32818, min: 0, max: 210, avg: 0.04)
Time for BDD node cleanup:                             0.027s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.524s
  Time for transition matches:                         0.272s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                       211379 (count: 211379, min: 1, max: 1, avg: 1.00) [1 x 211379]

CPA algorithm statistics
------------------------
Number of iterations:            131098
Max size of waitlist:            121
Average size of waitlist:        61
Number of computed successors:   157551
Max successors for one state:    2
Number of times merged:          17409
Number of times stopped:         24282
Number of times breaked:         106

Total time for CPA algorithm:        21.553s (Max:     1.982s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:      7.795s
  Time for transfer relation:        10.592s
  Time for merge operator:            1.438s
  Time for stop operator:             0.360s
  Time for adding to reached set:     0.394s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   106
Avg. length of target path (in blocks):                9385 (count: 106, min: 8, max: 107, avg: 88.54)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.814s
  Counterexample analysis:                             3.121s (Max:     0.074s, Calls: 106)
    Refinement sat check:                              1.849s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.017s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.064s
  ARG update:                                          0.433s

Length of refined path (in blocks):                    8412 (count: 106, min: 4, max: 106, avg: 79.36)
Number of affected states:                             1717 (count: 106, min: 1, max: 85, avg: 16.20)
Length (states) of path with itp 'true':               6589 (count: 106, min: 1, max: 86, avg: 62.16)
Length (states) of path with itp non-trivial itp:      1717 (count: 106, min: 1, max: 85, avg: 16.20)
Length (states) of path with itp 'false':               106 (count: 106, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 106, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1611 (count: 106, min: 0, max: 84, avg: 15.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                106
Number of successful refinements:     106
Number of failed refinements:         0
Max. size of reached set before ref.: 6720
Max. size of reached set after ref.:  6474
Avg. size of reached set before ref.: 5997.52
Avg. size of reached set after ref.:  4804.26

Total time for CEGAR algorithm:      26.619s
Time for refinements:                 4.695s
Average time for refinement:          0.044s
Max time for refinement:              0.109s

Code Coverage
-----------------------------
  Function coverage:      0.420
  Visited lines:          1557
  Total lines:            2094
  Line coverage:          0.744
  Visited conditions:     418
  Total conditions:       632
  Condition coverage:     0.661

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             6222
  Number of reached locations:   918 (32%)
    Avg states per location:     6
    Max states per location:     131 (at node N106)
  Number of reached functions:   42 (42%)
  Number of partitions:          6213
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        92

Time for analysis setup:          3.239s
  Time for loading CPAs:          0.689s
  Time for loading parser:        0.466s
  Time for CFA construction:      2.005s
    Time for parsing file(s):     0.561s
    Time for AST to CFA:          0.674s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.511s
      Time for var class.:        0.234s
Time for Analysis:               26.619s
CPU time for analysis:           26.620s
Total time for CPAchecker:       29.862s
Total CPU time for CPAchecker:   29.850s
Time for statistics:              0.148s

Time for Garbage Collector:       1.357s (in 74 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     70MB (    67 MiB) avg;    135MB (   128 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    35 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           149MB (   142 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
