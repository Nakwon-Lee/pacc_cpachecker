scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_171q621d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            36509 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  34043 (93%)
  Because of loop head:            2400 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (0%)
  Times precision was empty:       24795 (68%)
  Times precision was {false}:     454 (1%)
  Times result was cached:         9904 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1356 (4%)
  Times result was 'false':        921 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         124807
  BDD entailment checks:           11927
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          13
Number of abstraction locations:          41
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         58291
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 32.20
Number of irrelevant predicates:          20545 (35%)
Number of preds handled by boolean abs:   4760 (8%)
  Total number of models for allsat:      5380
  Max number of models for allsat:        128
  Avg number of models for allsat:        3.97

Time for post operator:                  4.191s
  Time for path formula creation:        3.907s
Time for strengthen operator:            0.376s
Time for prec operator:                 11.518s
  Time for abstraction:                 10.951s (Max:     0.109s, Count: 36509)
    Boolean abstraction:                 5.511s
    Solving time:                        2.589s (Max:     0.032s)
    Model enumeration time:              2.731s
    Time for BDD construction:           0.267s (Max:     0.030s)
Time for merge operator:                 0.674s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     5.320s

Number of path formula cache hits:   481348 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.849s

Total number of created targets for pointer analysis: 120
   Number of created targets for uf: *signed_int is 51
   Number of created targets for uf: *unsigned_long_int is 5


Number of BDD nodes:                               5517
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3712 (count: 47675, min: 0, max: 157, avg: 0.08)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.587s
  Time for transition matches:                         0.275s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       445644 (count: 445644, min: 1, max: 1, avg: 1.00) [1 x 445644]

CPA algorithm statistics
------------------------
Number of iterations:            283975
Max size of waitlist:            210
Average size of waitlist:        93
Number of computed successors:   354276
Max successors for one state:    2
Number of times merged:          56440
Number of times stopped:         60985
Number of times breaked:         66

Total time for CPA algorithm:        24.602s (Max:     1.206s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:     13.444s
  Time for transfer relation:         7.957s
  Time for merge operator:            1.348s
  Time for stop operator:             0.404s
  Time for adding to reached set:     0.380s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   66
Avg. length of target path (in blocks):                 983 (count: 66, min: 8, max: 26, avg: 14.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.340s
  Counterexample analysis:                             0.626s (Max:     0.028s, Calls: 66)
    Refinement sat check:                              0.427s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.034s
  ARG update:                                          0.589s

Length of refined path (in blocks):                     824 (count: 66, min: 4, max: 25, avg: 12.48)
Number of affected states:                              681 (count: 66, min: 1, max: 23, avg: 10.32)
Length (states) of path with itp 'true':                 77 (count: 66, min: 1, max: 2, avg: 1.17)
Length (states) of path with itp non-trivial itp:       681 (count: 66, min: 1, max: 23, avg: 10.32)
Length (states) of path with itp 'false':                66 (count: 66, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 66, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             615 (count: 66, min: 0, max: 22, avg: 9.32)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                66
Number of successful refinements:     66
Number of failed refinements:         0
Max. size of reached set before ref.: 6391
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 4357.30
Avg. size of reached set after ref.:  6.33

Total time for CEGAR algorithm:      26.280s
Time for refinements:                 1.668s
Average time for refinement:          0.025s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.320
  Visited lines:          1292
  Total lines:            2094
  Line coverage:          0.617
  Visited conditions:     296
  Total conditions:       632
  Condition coverage:     0.468

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             5206
  Number of reached locations:   606 (21%)
    Avg states per location:     8
    Max states per location:     70 (at node N89)
  Number of reached functions:   32 (32%)
  Number of partitions:          5194
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        157

Time for analysis setup:          4.036s
  Time for loading CPAs:          0.741s
  Time for loading parser:        0.602s
  Time for CFA construction:      2.564s
    Time for parsing file(s):     0.727s
    Time for AST to CFA:          0.872s
    Time for CFA sanity check:    0.172s
    Time for post-processing:     0.646s
      Time for var class.:        0.260s
Time for Analysis:               26.280s
CPU time for analysis:           26.280s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.155s

Time for Garbage Collector:       1.019s (in 120 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 87MB (    83 MiB) max;     52MB (    50 MiB) avg;     92MB (    87 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7649 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
