scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lg6h1bb8/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2109158 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1816999 (86%)
  Because of loop head:            278281 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13878 (1%)
  Times precision was empty:       323905 (15%)
  Times precision was {false}:     3871 (0%)
  Times result was cached:         1757410 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      23972 (1%)
  Times result was 'false':        47846 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         2193411
  BDD entailment checks:           700585
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          18
Number of abstraction locations:          161
Max number of predicates per location:    16
Avg number of predicates per location:    6
Total predicates per abstraction:         9495061
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 341.02
Number of irrelevant predicates:          4469567 (47%)
Number of preds handled by boolean abs:   80407 (1%)
  Total number of models for allsat:      55747
  Max number of models for allsat:        768
  Avg number of models for allsat:        2.33

Time for post operator:                 40.646s
  Time for path formula creation:       37.477s
Time for strengthen operator:            7.534s
Time for prec operator:                264.889s
  Time for abstraction:                250.406s (Max:     0.725s, Count: 2109158)
    Boolean abstraction:                30.546s
    Solving time:                       13.694s (Max:     0.021s)
    Model enumeration time:             16.575s
    Time for BDD construction:           0.947s (Max:     0.037s)
Time for merge operator:                 3.268s
Time for coverage check:                 0.770s
  Time for BDD entailment checks:        0.518s
Total time for SMT solver (w/o itp):    30.269s

Number of path formula cache hits:   16256920 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    15.135s

Total number of created targets for pointer analysis: 42153
   Number of created targets for uf: *(struct_backlight_device)* is 223
   Number of created targets for uf: *(struct_dentry)* is 304
   Number of created targets for uf: *signed_int is 12807
   Number of created targets for uf: *unsigned_long_long_int is 1467
   Number of created targets for uf: *(struct_rfkill)* is 598
   Number of created targets for uf: *(struct_platform_device)* is 99
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               65368
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       50374 (count: 1193736, min: 0, max: 773, avg: 0.04)
Time for BDD node cleanup:                             0.188s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.941s
  Time for transition matches:                         6.631s
  Time for transition assertions:                      0.011s
  Time for transition actions:                         0.041s
Automaton transfers with branching:                0
Automaton transfer successors:                     14017577 (count: 14017577, min: 1, max: 1, avg: 1.00) [1 x 14017577]

CPA algorithm statistics
------------------------
Number of iterations:            8484427
Max size of waitlist:            45
Average size of waitlist:        14
Number of computed successors:   9880298
Max successors for one state:    2
Number of times merged:          746413
Number of times stopped:         1311173
Number of times breaked:         13878

Total time for CPA algorithm:       451.706s (Max:     2.579s)
  Time for choose from waitlist:      1.809s
  Time for precision adjustment:    299.849s
  Time for transfer relation:       114.608s
  Time for merge operator:            8.757s
  Time for stop operator:             7.220s
  Time for adding to reached set:     6.509s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13878
Avg. length of target path (in blocks):             1074481 (count: 13878, min: 8, max: 137, avg: 77.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 257.424s
  Counterexample analysis:                           236.940s (Max:     0.075s, Calls: 13878)
    Refinement sat check:                            144.821s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.453s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.864s
  Precision update:                                    4.280s
  ARG update:                                         11.154s

Length of refined path (in blocks):                 1051867 (count: 13878, min: 4, max: 131, avg: 75.79)
Number of affected states:                           171130 (count: 13878, min: 1, max: 111, avg: 12.33)
Length (states) of path with itp 'true':             866859 (count: 13878, min: 0, max: 115, avg: 62.46)
Length (states) of path with itp non-trivial itp:    171130 (count: 13878, min: 1, max: 111, avg: 12.33)
Length (states) of path with itp 'false':             13878 (count: 13878, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 13878, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:          157252 (count: 13878, min: 0, max: 110, avg: 11.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13878
Number of successful refinements:     13878
Number of failed refinements:         0
Max. size of reached set before ref.: 29626
Max. size of reached set after ref.:  25519
Avg. size of reached set before ref.: 11314.13
Avg. size of reached set after ref.:  10701.77

Total time for CEGAR algorithm:     896.197s
Time for refinements:               364.158s
Average time for refinement:          0.026s
Max time for refinement:              0.645s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1720
  Total lines:            2094
  Line coverage:          0.821
  Visited conditions:     464
  Total conditions:       632
  Condition coverage:     0.734

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             22964
  Number of reached locations:   1097 (38%)
    Avg states per location:     20
    Max states per location:     824 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          22935
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.115s
  Time for loading CPAs:          0.881s
  Time for loading parser:        0.524s
  Time for CFA construction:      2.568s
    Time for parsing file(s):     0.713s
    Time for AST to CFA:          0.865s
    Time for CFA sanity check:    0.159s
    Time for post-processing:     0.659s
      Time for var class.:        0.291s
Time for Analysis:              896.198s
CPU time for analysis:          896.120s
Total time for CPAchecker:      900.315s
Total CPU time for CPAchecker:  900.230s
Time for statistics:              0.474s

Time for Garbage Collector:      48.731s (in 2657 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                469MB (   447 MiB) max;    214MB (   204 MiB) avg;    486MB (   464 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           502MB (   478 MiB) max;    311MB (   297 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8422MB (  8032 MiB) max;   8216MB (  7835 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
