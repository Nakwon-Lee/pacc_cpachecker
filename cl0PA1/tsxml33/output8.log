scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fl_lbg54/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            67650 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  55367 (82%)
  Because of loop head:            12257 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (0%)
  Times precision was empty:       63693 (94%)
  Times precision was {false}:     514 (1%)
  Times result was cached:         3112 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      331 (0%)
  Times result was 'false':        334 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         90312
  BDD entailment checks:           23928
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          11
Number of abstraction locations:          22
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         11269
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 13.34
Number of irrelevant predicates:          7849 (70%)
Number of preds handled by boolean abs:   1100 (10%)
  Total number of models for allsat:      1031
  Max number of models for allsat:        32
  Avg number of models for allsat:        3.11

Time for post operator:                  7.714s
  Time for path formula creation:        7.447s
Time for strengthen operator:            0.509s
Time for prec operator:                  5.461s
  Time for abstraction:                  4.471s (Max:     0.060s, Count: 67650)
    Boolean abstraction:                 1.665s
    Solving time:                        1.104s (Max:     0.022s)
    Model enumeration time:              0.663s
    Time for BDD construction:           0.089s (Max:     0.014s)
Time for merge operator:                 0.773s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     1.767s

Number of path formula cache hits:   516384 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.003s

Total number of created targets for pointer analysis: 3525
   Number of created targets for uf: *signed_int is 32
   Number of created targets for uf: *unsigned_long_long_int is 66
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               1885
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1255 (count: 92486, min: 0, max: 101, avg: 0.01)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.845s
  Time for transition matches:                         0.451s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       522308 (count: 522308, min: 1, max: 1, avg: 1.00) [1 x 522308]

CPA algorithm statistics
------------------------
Number of iterations:            307323
Max size of waitlist:            229
Average size of waitlist:        105
Number of computed successors:   364060
Max successors for one state:    2
Number of times merged:          33192
Number of times stopped:         54867
Number of times breaked:         26

Total time for CPA algorithm:        25.510s (Max:     2.046s)
  Time for choose from waitlist:      0.210s
  Time for precision adjustment:      7.958s
  Time for transfer relation:        13.554s
  Time for merge operator:            1.363s
  Time for stop operator:             0.503s
  Time for adding to reached set:     0.598s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 342 (count: 26, min: 8, max: 20, avg: 13.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.229s
  Counterexample analysis:                             0.257s (Max:     0.017s, Calls: 26)
    Refinement sat check:                              0.166s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.020s
  ARG update:                                          0.901s

Length of refined path (in blocks):                     235 (count: 26, min: 4, max: 17, avg: 9.04)
Number of affected states:                              174 (count: 26, min: 1, max: 15, avg: 6.69)
Length (states) of path with itp 'true':                 35 (count: 26, min: 1, max: 2, avg: 1.35)
Length (states) of path with itp non-trivial itp:       174 (count: 26, min: 1, max: 15, avg: 6.69)
Length (states) of path with itp 'false':                26 (count: 26, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 26, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             148 (count: 26, min: 0, max: 14, avg: 5.69)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 25431
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 11478.73
Avg. size of reached set after ref.:  6.69

Total time for CEGAR algorithm:      27.083s
Time for refinements:                 1.571s
Average time for refinement:          0.060s
Max time for refinement:              0.187s

Code Coverage
-----------------------------
  Function coverage:      0.340
  Visited lines:          1391
  Total lines:            2094
  Line coverage:          0.664
  Visited conditions:     358
  Total conditions:       632
  Condition coverage:     0.566

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             10586
  Number of reached locations:   725 (25%)
    Avg states per location:     14
    Max states per location:     321 (at node N106)
  Number of reached functions:   34 (34%)
  Number of partitions:          10560
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [34b9fc7d], stack [main]])
  Number of target states:       0
  Size of final wait list        207

Time for analysis setup:          3.240s
  Time for loading CPAs:          0.609s
  Time for loading parser:        0.463s
  Time for CFA construction:      2.068s
    Time for parsing file(s):     0.590s
    Time for AST to CFA:          0.668s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.533s
      Time for var class.:        0.228s
Time for Analysis:               27.083s
CPU time for analysis:           27.080s
Total time for CPAchecker:       30.326s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.236s

Time for Garbage Collector:       2.326s (in 108 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                144MB (   138 MiB) max;     73MB (    70 MiB) avg;    165MB (   157 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     35MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           160MB (   152 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
