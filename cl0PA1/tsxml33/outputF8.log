scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--platform--x86--ideapad-laptop.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_j70djjav/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5977: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function seq_lseek to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function seq_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_complete_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_poweroff_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_prepare_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_freeze_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_noirq_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_thaw_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_resume_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_restore_early_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ideapad_pm_suspend_late_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_object to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_evaluate_integer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_report_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i8042_command to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_set_hw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_force_update to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_remove_recursive to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function single_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_bus_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_dir to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debugfs_create_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sparse_keymap_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_init_sw_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rfkill_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function acpi_video_backlight_support to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4007: Ignoring function call through function pointer *(bd->ops->update_status): (*(bd->ops->update_status))(bd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3108548 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2556902 (82%)
  Because of loop head:            550769 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         877 (0%)
  Times precision was empty:       341353 (11%)
  Times precision was {false}:     7881 (0%)
  Times result was cached:         2736622 (88%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22692 (1%)
  Times result was 'false':        12414 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4341930
  BDD entailment checks:           1337528
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       78
Number of predicates discovered:          16
Number of abstraction locations:          152
Max number of predicates per location:    14
Avg number of predicates per location:    6
Total predicates per abstraction:         16126219
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 527.47
Number of irrelevant predicates:          7993113 (50%)
Number of preds handled by boolean abs:   90973 (1%)
  Total number of models for allsat:      65767
  Max number of models for allsat:        192
  Avg number of models for allsat:        2.90

Time for post operator:                118.786s
  Time for path formula creation:      112.708s
Time for strengthen operator:           13.108s
Time for prec operator:                423.722s
  Time for abstraction:                396.924s (Max:     3.601s, Count: 3108548)
    Boolean abstraction:                43.542s
    Solving time:                       21.064s (Max:     0.032s)
    Model enumeration time:             24.499s
    Time for BDD construction:           1.197s (Max:     0.195s)
Time for merge operator:                12.925s
Time for coverage check:                 1.440s
  Time for BDD entailment checks:        0.989s
Total time for SMT solver (w/o itp):    45.563s

Number of path formula cache hits:   24725377 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    65.000s

Total number of created targets for pointer analysis: 304148
   Number of created targets for uf: *(struct_backlight_device)* is 30
   Number of created targets for uf: *(struct_dentry)* is 828
   Number of created targets for uf: *signed_int is 86527
   Number of created targets for uf: *unsigned_long_long_int is 13224
   Number of created targets for uf: *(struct_rfkill)* is 400
   Number of created targets for uf: *(struct_platform_device)* is 70
   Number of created targets for uf: *unsigned_long_int is 9


Number of BDD nodes:                               23020
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       47905 (count: 1857960, min: 0, max: 574, avg: 0.03)
Time for BDD node cleanup:                             0.225s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.050s
  Time for transition matches:                        11.112s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                     23832582 (count: 23832582, min: 1, max: 1, avg: 1.00) [1 x 23832582]

CPA algorithm statistics
------------------------
Number of iterations:            14025975
Max size of waitlist:            341
Average size of waitlist:        146
Number of computed successors:   16599569
Max successors for one state:    2
Number of times merged:          1502201
Number of times stopped:         2497147
Number of times breaked:         877

Total time for CPA algorithm:       816.297s (Max:     8.454s)
  Time for choose from waitlist:      4.212s
  Time for precision adjustment:    486.371s
  Time for transfer relation:       250.429s
  Time for merge operator:           25.020s
  Time for stop operator:            12.775s
  Time for adding to reached set:    14.137s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   877
Avg. length of target path (in blocks):               53123 (count: 877, min: 8, max: 100, avg: 60.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  40.501s
  Counterexample analysis:                            14.016s (Max:     0.064s, Calls: 877)
    Refinement sat check:                              8.817s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.039s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.449s
  ARG update:                                         25.556s

Length of refined path (in blocks):                   50096 (count: 877, min: 4, max: 95, avg: 57.12)
Number of affected states:                            15398 (count: 877, min: 1, max: 76, avg: 17.56)
Length (states) of path with itp 'true':              33821 (count: 877, min: 0, max: 85, avg: 38.56)
Length (states) of path with itp non-trivial itp:     15398 (count: 877, min: 1, max: 76, avg: 17.56)
Length (states) of path with itp 'false':               877 (count: 877, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 877, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           14521 (count: 877, min: 0, max: 75, avg: 16.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                877
Number of successful refinements:     877
Number of failed refinements:         0
Max. size of reached set before ref.: 72701
Max. size of reached set after ref.:  59932
Avg. size of reached set before ref.: 37745.42
Avg. size of reached set after ref.:  21743.98

Total time for CEGAR algorithm:     896.562s
Time for refinements:                64.992s
Average time for refinement:          0.074s
Max time for refinement:              0.412s

Code Coverage
-----------------------------
  Function coverage:      0.550
  Visited lines:          1711
  Total lines:            2094
  Line coverage:          0.817
  Visited conditions:     458
  Total conditions:       632
  Condition coverage:     0.725

CPAchecker general statistics
-----------------------------
Number of program locations:     2853
Number of CFA edges:             3225
Number of relevant variables:    327
Number of functions:             100
Number of loops:                 9
Size of reached set:             56744
  Number of reached locations:   1078 (38%)
    Avg states per location:     52
    Max states per location:     2132 (at node N106)
  Number of reached functions:   55 (55%)
  Number of partitions:          56696
    Avg size of partitions:      1
    Max size of partitions:      23 (with key [N1133 (before line 5355), Function main called from node N1108, stack depth 1 [cda0432], stack [main]])
  Number of target states:       0
  Size of final wait list        107

Time for analysis setup:          3.795s
  Time for loading CPAs:          0.654s
  Time for loading parser:        0.591s
  Time for CFA construction:      2.404s
    Time for parsing file(s):     0.690s
    Time for AST to CFA:          0.824s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.573s
      Time for var class.:        0.242s
Time for Analysis:              896.562s
CPU time for analysis:          896.500s
Total time for CPAchecker:      900.360s
Total CPU time for CPAchecker:  900.290s
Time for statistics:              0.599s

Time for Garbage Collector:      86.287s (in 1634 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1860MB (  1774 MiB) max;    687MB (   655 MiB) avg;   1886MB (  1799 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:          1967MB (  1876 MiB) max;    999MB (   953 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8356MB (  7969 MiB) max;   8208MB (  7828 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
