scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--tehuti--tehuti.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uswt9b1b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7135: Dead code detected: __ms___0 = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

lines 9701-9702: Dead code detected: __asm__ volatile ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/home/mikhail/launches/cpachecker-regression2/launcher-working-dir/ldv-manager-work-dir/work/current--X--drivers/net/ethernet/tehuti/tehuti.ko--X--regression-testlinux-3.8-rc1--X--32_7a--X--cpachecker/linux-3.8-rc1/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/net/ethernet/tehuti/tehuti.c.prepared"),
                         "i" (2403), "i" (12UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10100: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6311: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6344: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6170: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6103-6104: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6233: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6200: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6137: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vmalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function capable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6002: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __napi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_trylock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            93020 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  80570 (87%)
  Because of loop head:            12303 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         147 (0%)
  Times precision was empty:       41629 (45%)
  Times precision was {false}:     488 (1%)
  Times result was cached:         49685 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1218 (1%)
  Times result was 'false':        1002 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         47344
  BDD entailment checks:           21372
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          4
Number of abstraction locations:          159
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         149499
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 87.63
Number of irrelevant predicates:          76098 (51%)
Number of preds handled by boolean abs:   2130 (1%)
  Total number of models for allsat:      1218
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.219s
  Time for path formula creation:        3.974s
Time for strengthen operator:            0.432s
Time for prec operator:                  9.521s
  Time for abstraction:                  8.650s (Max:     0.027s, Count: 93020)
    Boolean abstraction:                 1.048s
    Solving time:                        1.010s (Max:     0.013s)
    Model enumeration time:              0.072s
    Time for BDD construction:           0.088s (Max:     0.009s)
Time for merge operator:                 0.227s
Time for coverage check:                 0.044s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     1.082s

Number of path formula cache hits:   532318 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.079s

Total number of created targets for pointer analysis: 155
   Number of created targets for uf: *unsigned_short_int is 19
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *unsigned_int is 19


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2450 (count: 72769, min: 0, max: 55, avg: 0.03)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.677s
  Time for transition matches:                         0.345s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       468423 (count: 468423, min: 1, max: 1, avg: 1.00) [1 x 468423]

CPA algorithm statistics
------------------------
Number of iterations:            301648
Max size of waitlist:            88
Average size of waitlist:        44
Number of computed successors:   337757
Max successors for one state:    2
Number of times merged:          12986
Number of times stopped:         25393
Number of times breaked:         147

Total time for CPA algorithm:        23.594s (Max:     0.748s)
  Time for choose from waitlist:      0.197s
  Time for precision adjustment:     11.414s
  Time for transfer relation:         9.424s
  Time for merge operator:            0.483s
  Time for stop operator:             0.467s
  Time for adding to reached set:     0.486s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   147
Avg. length of target path (in blocks):                3540 (count: 147, min: 12, max: 32, avg: 24.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.889s
  Counterexample analysis:                             0.967s (Max:     0.019s, Calls: 147)
    Refinement sat check:                              0.637s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.073s
  Precision update:                                    0.105s
  ARG update:                                          0.648s

Length of refined path (in blocks):                    3362 (count: 146, min: 11, max: 31, avg: 23.03)
Number of affected states:                             3070 (count: 146, min: 9, max: 29, avg: 21.03)
Length (states) of path with itp 'true':                146 (count: 146, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      3070 (count: 146, min: 9, max: 29, avg: 21.03)
Length (states) of path with itp 'false':               146 (count: 146, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 146, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2924 (count: 146, min: 8, max: 28, avg: 20.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                147
Number of successful refinements:     146
Number of failed refinements:         0
Max. size of reached set before ref.: 2960
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 2124.07
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      25.769s
Time for refinements:                 2.151s
Average time for refinement:          0.014s
Max time for refinement:              0.051s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          2118
  Total lines:            3477
  Line coverage:          0.609
  Visited conditions:     304
  Total conditions:       664
  Condition coverage:     0.458

CPAchecker general statistics
-----------------------------
Number of program locations:     4741
Number of CFA edges:             5330
Number of relevant variables:    751
Number of functions:             186
Number of loops:                 71
Size of reached set:             2845
  Number of reached locations:   1116 (24%)
    Avg states per location:     2
    Max states per location:     53 (at node N586)
  Number of reached functions:   93 (50%)
  Number of partitions:          2816
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3667 (before line 10044), Function main called from node N3477, stack depth 1 [76563d26], stack [main]])
  Number of target states:       1
  Size of final wait list        72

Time for analysis setup:          4.559s
  Time for loading CPAs:          0.747s
  Time for loading parser:        0.458s
  Time for CFA construction:      3.267s
    Time for parsing file(s):     0.759s
    Time for AST to CFA:          1.229s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.883s
      Time for var class.:        0.369s
Time for Analysis:               25.769s
CPU time for analysis:           25.770s
Total time for CPAchecker:       30.331s
Total CPU time for CPAchecker:   30.330s
Time for statistics:              0.121s

Time for Garbage Collector:       0.921s (in 146 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    76 MiB) max;     53MB (    51 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
