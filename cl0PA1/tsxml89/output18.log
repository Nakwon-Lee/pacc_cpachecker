scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--tehuti--tehuti.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_zx4oxqm3/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 7135: Dead code detected: __ms___0 = 2UL; (CFACreationUtils.addEdgeToCFA, INFO)

lines 9701-9702: Dead code detected: __asm__ volatile ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/home/mikhail/launches/cpachecker-regression2/launcher-working-dir/ldv-manager-work-dir/work/current--X--drivers/net/ethernet/tehuti/tehuti.ko--X--regression-testlinux-3.8-rc1--X--32_7a--X--cpachecker/linux-3.8-rc1/csd_deg_dscv/12/dscv_tempdir/dscv/ri/32_7a/drivers/net/ethernet/tehuti/tehuti.c.prepared"),
                         "i" (2403), "i" (12UL)); (CFACreationUtils.addEdgeToCFA, INFO)

line 10100: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6311: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6344: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6170: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 6103-6104: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6233: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6200: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6137: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netdev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6200: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, 0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6344: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6137: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function release_firmware to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __phys_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

lines 6103-6104: Ignoring function call through function pointer *(ops->map_page): addr = (*(ops->map_page))(dev, 18446719884453740544ULL + (tmp___2 >> 12), ((unsigned long)ptr) & 4095UL, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            92440 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  76063 (82%)
  Because of loop head:            16279 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         98 (0%)
  Times precision was empty:       13811 (15%)
  Times precision was {false}:     548 (1%)
  Times result was cached:         76209 (82%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1872 (2%)
  Times result was 'false':        700 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         35112
  BDD entailment checks:           12978
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       35
Number of predicates discovered:          5
Number of abstraction locations:          254
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         231411
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 95.62
Number of irrelevant predicates:          21280 (9%)
Number of preds handled by boolean abs:   3468 (1%)
  Total number of models for allsat:      1868
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  2.940s
  Time for path formula creation:        2.805s
Time for strengthen operator:            0.303s
Time for prec operator:                 11.165s
  Time for abstraction:                 10.344s (Max:     0.022s, Count: 92440)
    Boolean abstraction:                 0.838s
    Solving time:                        0.635s (Max:     0.013s)
    Model enumeration time:              0.045s
    Time for BDD construction:           0.103s (Max:     0.012s)
Time for merge operator:                 0.112s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     0.680s

Number of path formula cache hits:   442943 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.041s

Total number of created targets for pointer analysis: 90
   Number of created targets for uf: *unsigned_short_int is 37


Number of BDD nodes:                               224
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3790 (count: 40793, min: 0, max: 366, avg: 0.09)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.557s
  Time for transition matches:                         0.257s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       364864 (count: 364864, min: 1, max: 1, avg: 1.00) [1 x 364864]

CPA algorithm statistics
------------------------
Number of iterations:            264870
Max size of waitlist:            51
Average size of waitlist:        36
Number of computed successors:   292666
Max successors for one state:    2
Number of times merged:          11067
Number of times stopped:         23147
Number of times breaked:         98

Total time for CPA algorithm:        22.192s (Max:     0.570s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:     12.781s
  Time for transfer relation:         7.607s
  Time for merge operator:            0.297s
  Time for stop operator:             0.353s
  Time for adding to reached set:     0.356s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   98
Avg. length of target path (in blocks):               11925 (count: 98, min: 12, max: 197, avg: 121.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.552s
  Counterexample analysis:                             2.668s (Max:     0.073s, Calls: 98)
    Refinement sat check:                              1.255s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.082s
  Precision update:                                    0.095s
  ARG update:                                          0.581s

Length of refined path (in blocks):                   11771 (count: 98, min: 11, max: 196, avg: 120.11)
Number of affected states:                            11521 (count: 98, min: 5, max: 194, avg: 117.56)
Length (states) of path with itp 'true':                152 (count: 98, min: 1, max: 55, avg: 1.55)
Length (states) of path with itp non-trivial itp:     11521 (count: 98, min: 5, max: 194, avg: 117.56)
Length (states) of path with itp 'false':                98 (count: 98, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 98, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           11423 (count: 98, min: 4, max: 193, avg: 116.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                98
Number of successful refinements:     98
Number of failed refinements:         0
Max. size of reached set before ref.: 5439
Max. size of reached set after ref.:  4914
Avg. size of reached set before ref.: 2756.03
Avg. size of reached set after ref.:  56.08

Total time for CEGAR algorithm:      26.069s
Time for refinements:                 3.868s
Average time for refinement:          0.039s
Max time for refinement:              0.099s

Code Coverage
-----------------------------
  Function coverage:      0.452
  Visited lines:          1666
  Total lines:            3477
  Line coverage:          0.479
  Visited conditions:     216
  Total conditions:       664
  Condition coverage:     0.325

CPAchecker general statistics
-----------------------------
Number of program locations:     4741
Number of CFA edges:             5330
Number of relevant variables:    751
Number of functions:             186
Number of loops:                 71
Size of reached set:             4225
  Number of reached locations:   820 (17%)
    Avg states per location:     5
    Max states per location:     195 (at node N3733)
  Number of reached functions:   84 (45%)
  Number of partitions:          4225
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        42

Time for analysis setup:          4.252s
  Time for loading CPAs:          0.692s
  Time for loading parser:        0.455s
  Time for CFA construction:      3.043s
    Time for parsing file(s):     0.786s
    Time for AST to CFA:          1.128s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.795s
      Time for var class.:        0.344s
Time for Analysis:               26.069s
CPU time for analysis:           26.070s
Total time for CPAchecker:       30.323s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.122s

Time for Garbage Collector:       1.013s (in 160 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 89MB (    85 MiB) max;     55MB (    53 MiB) avg;     92MB (    88 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
