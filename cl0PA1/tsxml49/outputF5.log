scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bj_g2cs4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            130140 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  128142 (98%)
  Because of loop head:            1973 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (0%)
  Times precision was empty:       119966 (92%)
  Times precision was {false}:     541 (0%)
  Times result was cached:         9360 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      273 (0%)
  Times result was 'false':        253 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         107003
  BDD entailment checks:           10775
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       661
Number of predicates discovered:          22
Number of abstraction locations:          11
Max number of predicates per location:    21
Avg number of predicates per location:    4
Total predicates per abstraction:         28891
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 35.49
Number of irrelevant predicates:          26104 (90%)
Number of preds handled by boolean abs:   1954 (7%)
  Total number of models for allsat:      327893
  Max number of models for allsat:        65536
  Avg number of models for allsat:        1201.07

Time for post operator:                 30.084s
  Time for path formula creation:       29.686s
Time for strengthen operator:            0.851s
Time for prec operator:                848.118s
  Time for abstraction:                844.770s (Max:   174.345s, Count: 130140)
    Boolean abstraction:               840.765s
    Solving time:                        4.350s (Max:     0.094s)
    Model enumeration time:            828.451s
    Time for BDD construction:           8.268s (Max:     2.111s)
Time for merge operator:                 0.995s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):   832.801s

Number of path formula cache hits:   1452685 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.842s

Total number of created targets for pointer analysis: 107388
   Number of created targets for uf: *unsigned_char is 107389


Number of BDD nodes:                               65760
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2736 (count: 136129, min: 0, max: 127, avg: 0.02)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.107s (in 14 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.329s
  Time for transition matches:                         0.774s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                      1362447 (count: 1362447, min: 1, max: 1, avg: 1.00) [1 x 1362447]

CPA algorithm statistics
------------------------
Number of iterations:            503451
Max size of waitlist:            1374
Average size of waitlist:        721
Number of computed successors:   584199
Max successors for one state:    2
Number of times merged:          48114
Number of times stopped:         52476
Number of times breaked:         25

Total time for CPA algorithm:       893.544s (Max:   404.118s)
  Time for choose from waitlist:      0.253s
  Time for precision adjustment:    851.032s
  Time for transfer relation:        38.164s
  Time for merge operator:            1.567s
  Time for stop operator:             0.471s
  Time for adding to reached set:     0.689s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 275 (count: 25, min: 8, max: 14, avg: 11.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.072s
  Counterexample analysis:                             1.018s (Max:     0.079s, Calls: 25)
    Refinement sat check:                              0.896s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.009s
  ARG update:                                          1.024s

Length of refined path (in blocks):                     148 (count: 25, min: 4, max: 13, avg: 5.92)
Number of affected states:                               81 (count: 25, min: 1, max: 11, avg: 3.24)
Length (states) of path with itp 'true':                 42 (count: 25, min: 1, max: 2, avg: 1.68)
Length (states) of path with itp non-trivial itp:        81 (count: 25, min: 1, max: 11, avg: 3.24)
Length (states) of path with itp 'false':                25 (count: 25, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              56 (count: 25, min: 0, max: 10, avg: 2.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 25824
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 20976.96
Avg. size of reached set after ref.:  7.36

Total time for CEGAR algorithm:     895.936s
Time for refinements:                 2.389s
Average time for refinement:          0.095s
Max time for refinement:              0.218s

Code Coverage
-----------------------------
  Function coverage:      0.346
  Visited lines:          3609
  Total lines:            5131
  Line coverage:          0.703
  Visited conditions:     1252
  Total conditions:       1634
  Condition coverage:     0.766

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             7230
  Number of reached locations:   2129 (33%)
    Avg states per location:     3
    Max states per location:     174 (at node N23)
  Number of reached functions:   44 (35%)
  Number of partitions:          7228
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2231 (before line 5575), Function main called from node N1994, stack depth 1 [741741d0], stack [main]])
  Number of target states:       0
  Size of final wait list        569

Time for analysis setup:          4.433s
  Time for loading CPAs:          0.605s
  Time for loading parser:        0.416s
  Time for CFA construction:      3.320s
    Time for parsing file(s):     0.602s
    Time for AST to CFA:          0.904s
    Time for CFA sanity check:    0.294s
    Time for post-processing:     1.388s
      Time for var class.:        0.444s
Time for Analysis:              895.936s
CPU time for analysis:          895.880s
Total time for CPAchecker:      900.372s
Total CPU time for CPAchecker:  900.310s
Time for statistics:              0.177s

Time for Garbage Collector:       3.605s (in 194 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                213MB (   203 MiB) max;    134MB (   128 MiB) avg;    221MB (   210 MiB) peak
Used non-heap memory:             45MB (    43 MiB) max;     38MB (    36 MiB) avg;     45MB (    43 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    218MB (   208 MiB) avg
Allocated non-heap memory:        47MB (    44 MiB) max;     46MB (    44 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8085MB (  7711 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
