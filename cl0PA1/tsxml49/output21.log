scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7c76rmwx/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23067 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  22719 (98%)
  Because of loop head:            340 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       22270 (97%)
  Times precision was {false}:     115 (0%)
  Times result was cached:         612 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      70 (0%)
  Times result was 'false':        33 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         22774
  BDD entailment checks:           1182
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       661
Number of predicates discovered:          6
Number of abstraction locations:          8
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         2091
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.30
Number of irrelevant predicates:          1774 (85%)
Number of preds handled by boolean abs:   169 (8%)
  Total number of models for allsat:      80
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.14

Time for post operator:                 15.111s
  Time for path formula creation:       14.905s
Time for strengthen operator:            0.353s
Time for prec operator:                  3.101s
  Time for abstraction:                  2.059s (Max:     0.121s, Count: 23067)
    Boolean abstraction:                 0.878s
    Solving time:                        0.876s (Max:     0.081s)
    Model enumeration time:              0.074s
    Time for BDD construction:           0.010s (Max:     0.004s)
Time for merge operator:                 0.786s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     0.950s

Number of path formula cache hits:   242594 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.693s

Total number of created targets for pointer analysis: 107388
   Number of created targets for uf: *unsigned_char is 107389


Number of BDD nodes:                               260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         239 (count: 24506, min: 0, max: 33, avg: 0.01)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.517s
  Time for transition matches:                         0.250s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       290309 (count: 290309, min: 1, max: 1, avg: 1.00) [1 x 290309]

CPA algorithm statistics
------------------------
Number of iterations:            94913
Max size of waitlist:            1085
Average size of waitlist:        503
Number of computed successors:   111275
Max successors for one state:    2
Number of times merged:          10796
Number of times stopped:         11127
Number of times breaked:         8

Total time for CPA algorithm:        24.435s (Max:     5.816s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      4.108s
  Time for transfer relation:        18.309s
  Time for merge operator:            1.062s
  Time for stop operator:             0.178s
  Time for adding to reached set:     0.186s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  85 (count: 8, min: 8, max: 14, avg: 10.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.819s
  Counterexample analysis:                             0.481s (Max:     0.087s, Calls: 8)
    Refinement sat check:                              0.431s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.007s
  ARG update:                                          0.306s

Length of refined path (in blocks):                      71 (count: 8, min: 4, max: 13, avg: 8.88)
Number of affected states:                               54 (count: 8, min: 1, max: 11, avg: 6.75)
Length (states) of path with itp 'true':                  9 (count: 8, min: 1, max: 2, avg: 1.13)
Length (states) of path with itp non-trivial itp:        54 (count: 8, min: 1, max: 11, avg: 6.75)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              46 (count: 8, min: 0, max: 10, avg: 5.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 21589
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 11480.38
Avg. size of reached set after ref.:  6.25

Total time for CEGAR algorithm:      25.415s
Time for refinements:                 0.980s
Average time for refinement:          0.122s
Max time for refinement:              0.143s

Code Coverage
-----------------------------
  Function coverage:      0.346
  Visited lines:          3644
  Total lines:            5131
  Line coverage:          0.710
  Visited conditions:     1260
  Total conditions:       1634
  Condition coverage:     0.771

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             8322
  Number of reached locations:   2147 (33%)
    Avg states per location:     3
    Max states per location:     511 (at node N23)
  Number of reached functions:   44 (35%)
  Number of partitions:          8320
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2231 (before line 5575), Function main called from node N1994, stack depth 1 [3c19592c], stack [main]])
  Number of target states:       0
  Size of final wait list        583

Time for analysis setup:          4.926s
  Time for loading CPAs:          0.595s
  Time for loading parser:        0.502s
  Time for CFA construction:      3.691s
    Time for parsing file(s):     0.755s
    Time for AST to CFA:          1.149s
    Time for CFA sanity check:    0.342s
    Time for post-processing:     1.284s
      Time for var class.:        0.554s
Time for Analysis:               25.415s
CPU time for analysis:           25.420s
Total time for CPAchecker:       30.352s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.272s

Time for Garbage Collector:       1.258s (in 52 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                207MB (   198 MiB) max;    134MB (   128 MiB) avg;    221MB (   210 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     40MB (    38 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    208MB (   198 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
