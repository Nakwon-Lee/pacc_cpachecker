scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_umo3t1c9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            37165 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  36412 (98%)
  Because of loop head:            731 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (0%)
  Times precision was empty:       33518 (90%)
  Times precision was {false}:     1461 (4%)
  Times result was cached:         1923 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      263 (1%)
  Times result was 'false':        247 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         72852
  BDD entailment checks:           2524
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       661
Number of predicates discovered:          22
Number of abstraction locations:          16
Max number of predicates per location:    21
Avg number of predicates per location:    3
Total predicates per abstraction:         10449
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 6.06
Number of irrelevant predicates:          8195 (78%)
Number of preds handled by boolean abs:   1765 (17%)
  Total number of models for allsat:      262358
  Max number of models for allsat:        65536
  Avg number of models for allsat:        997.56

Time for post operator:                 17.169s
  Time for path formula creation:       16.956s
Time for strengthen operator:            0.479s
Time for prec operator:                866.637s
  Time for abstraction:                865.525s (Max:   200.930s, Count: 37165)
    Boolean abstraction:               860.772s
    Solving time:                        4.482s (Max:     0.092s)
    Model enumeration time:            848.071s
    Time for BDD construction:           9.159s (Max:     1.790s)
Time for merge operator:                 1.542s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):   852.554s

Number of path formula cache hits:   425527 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.460s

Total number of created targets for pointer analysis: 90746
   Number of created targets for uf: *unsigned_char is 90747


Number of BDD nodes:                               230259
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2829 (count: 46012, min: 0, max: 187, avg: 0.06)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.129s (in 12 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.757s
  Time for transition matches:                         0.381s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       529970 (count: 529970, min: 1, max: 1, avg: 1.00) [1 x 529970]

CPA algorithm statistics
------------------------
Number of iterations:            215182
Max size of waitlist:            784
Average size of waitlist:        447
Number of computed successors:   267356
Max successors for one state:    2
Number of times merged:          35164
Number of times stopped:         36043
Number of times breaked:         22

Total time for CPA algorithm:       893.275s (Max:   332.460s)
  Time for choose from waitlist:      0.161s
  Time for precision adjustment:    868.152s
  Time for transfer relation:        21.334s
  Time for merge operator:            2.076s
  Time for stop operator:             0.303s
  Time for adding to reached set:     0.424s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 297 (count: 22, min: 8, max: 15, avg: 13.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.545s
  Counterexample analysis:                             1.009s (Max:     0.091s, Calls: 22)
    Refinement sat check:                              0.871s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.019s
  Precision update:                                    0.014s
  ARG update:                                          0.476s

Length of refined path (in blocks):                     109 (count: 22, min: 4, max: 13, avg: 4.95)
Number of affected states:                               48 (count: 22, min: 1, max: 11, avg: 2.18)
Length (states) of path with itp 'true':                 39 (count: 22, min: 1, max: 2, avg: 1.77)
Length (states) of path with itp non-trivial itp:        48 (count: 22, min: 1, max: 11, avg: 2.18)
Length (states) of path with itp 'false':                22 (count: 22, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 22, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              26 (count: 22, min: 0, max: 10, avg: 1.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 11128
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 10188.41
Avg. size of reached set after ref.:  7.55

Total time for CEGAR algorithm:     895.079s
Time for refinements:                 1.803s
Average time for refinement:          0.081s
Max time for refinement:              0.189s

Code Coverage
-----------------------------
  Function coverage:      0.354
  Visited lines:          3617
  Total lines:            5131
  Line coverage:          0.705
  Visited conditions:     1260
  Total conditions:       1634
  Condition coverage:     0.771

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             7087
  Number of reached locations:   2151 (33%)
    Avg states per location:     3
    Max states per location:     115 (at node N1424)
  Number of reached functions:   45 (35%)
  Number of partitions:          7085
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2231 (before line 5575), Function main called from node N1994, stack depth 1 [3380ca3d], stack [main]])
  Number of target states:       0
  Size of final wait list        572

Time for analysis setup:          5.187s
  Time for loading CPAs:          0.715s
  Time for loading parser:        0.516s
  Time for CFA construction:      3.887s
    Time for parsing file(s):     0.758s
    Time for AST to CFA:          1.188s
    Time for CFA sanity check:    0.355s
    Time for post-processing:     1.428s
      Time for var class.:        0.445s
Time for Analysis:              895.079s
CPU time for analysis:          895.010s
Total time for CPAchecker:      900.269s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.174s

Time for Garbage Collector:       2.740s (in 128 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                213MB (   204 MiB) max;    148MB (   141 MiB) avg;    226MB (   215 MiB) peak
Used non-heap memory:             47MB (    45 MiB) max;     38MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           241MB (   230 MiB) max;    235MB (   224 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     48MB (    46 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8103MB (  7728 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
