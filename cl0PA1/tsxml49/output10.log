scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--hwmon--w83792d.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_eo45x5px/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 8853: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Function pointer *(adap->algo->functionality) with type u32 (*)(struct i2c_adapter *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_smbus_read_byte_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_new_dummy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2326: Ignoring function call through function pointer *(adap->algo->functionality): tmp = (*(adap->algo->functionality))(adap); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function kstrtoull to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kstrtoll to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            29302 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  28633 (98%)
  Because of loop head:            599 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         70 (0%)
  Times precision was empty:       26286 (90%)
  Times precision was {false}:     2852 (10%)
  Times result was cached:         27 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      137 (0%)
  Times result was 'false':        2556 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         63676
  BDD entailment checks:           872
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       661
Number of predicates discovered:          70
Number of abstraction locations:          12
Max number of predicates per location:    69
Avg number of predicates per location:    6
Total predicates per abstraction:         7688
Max number of predicates per abstraction: 69
Avg number of predicates per abstraction: 2.57
Number of irrelevant predicates:          2877 (37%)
Number of preds handled by boolean abs:   4761 (62%)
  Total number of models for allsat:      137
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  6.103s
  Time for path formula creation:        5.965s
Time for strengthen operator:            0.239s
Time for prec operator:                  9.799s
  Time for abstraction:                  9.162s (Max:     0.147s, Count: 29302)
    Boolean abstraction:                 3.364s
    Solving time:                        4.225s (Max:     0.094s)
    Model enumeration time:              0.242s
    Time for BDD construction:           0.030s (Max:     0.009s)
Time for merge operator:                 0.475s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     4.467s

Number of path formula cache hits:   389168 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.032s

Total number of created targets for pointer analysis: 7536
   Number of created targets for uf: *unsigned_char is 7537


Number of BDD nodes:                               2548
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12211 (count: 49603, min: 0, max: 677, avg: 0.25)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.556s
  Time for transition matches:                         0.260s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       343252 (count: 343252, min: 1, max: 1, avg: 1.00) [1 x 343252]

CPA algorithm statistics
------------------------
Number of iterations:            186901
Max size of waitlist:            201
Average size of waitlist:        141
Number of computed successors:   233244
Max successors for one state:    2
Number of times merged:          31402
Number of times stopped:         32274
Number of times breaked:         70

Total time for CPA algorithm:        21.921s (Max:     2.552s)
  Time for choose from waitlist:      0.104s
  Time for precision adjustment:     10.861s
  Time for transfer relation:         8.905s
  Time for merge operator:            0.929s
  Time for stop operator:             0.232s
  Time for adding to reached set:     0.309s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   70
Avg. length of target path (in blocks):                 792 (count: 70, min: 11, max: 12, avg: 11.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.503s
  Counterexample analysis:                             2.907s (Max:     0.082s, Calls: 70)
    Refinement sat check:                              2.570s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.031s
  ARG update:                                          0.520s

Length of refined path (in blocks):                     280 (count: 70, min: 4, max: 4, avg: 4.00)
Number of affected states:                               70 (count: 70, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                140 (count: 70, min: 2, max: 2, avg: 2.00)
Length (states) of path with itp non-trivial itp:        70 (count: 70, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                70 (count: 70, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 70, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 70, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                70
Number of successful refinements:     70
Number of failed refinements:         0
Max. size of reached set before ref.: 3009
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 2819.29
Avg. size of reached set after ref.:  8.00

Total time for CEGAR algorithm:      25.636s
Time for refinements:                 3.713s
Average time for refinement:          0.053s
Max time for refinement:              0.145s

Code Coverage
-----------------------------
  Function coverage:      0.197
  Visited lines:          2534
  Total lines:            5131
  Line coverage:          0.494
  Visited conditions:     966
  Total conditions:       1634
  Condition coverage:     0.591

CPAchecker general statistics
-----------------------------
Number of program locations:     6541
Number of CFA edges:             7688
Number of relevant variables:    1065
Number of functions:             127
Number of loops:                 22
Size of reached set:             1625
  Number of reached locations:   1560 (24%)
    Avg states per location:     1
    Max states per location:     14 (at node N613)
  Number of reached functions:   25 (20%)
  Number of partitions:          1625
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        123

Time for analysis setup:          4.714s
  Time for loading CPAs:          0.602s
  Time for loading parser:        0.416s
  Time for CFA construction:      3.595s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          1.137s
    Time for CFA sanity check:    0.268s
    Time for post-processing:     1.413s
      Time for var class.:        0.472s
Time for Analysis:               25.636s
CPU time for analysis:           25.640s
Total time for CPAchecker:       30.356s
Total CPU time for CPAchecker:   30.340s
Time for statistics:              0.096s

Time for Garbage Collector:       0.612s (in 66 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                178MB (   169 MiB) max;    134MB (   127 MiB) avg;    184MB (   176 MiB) peak
Used non-heap memory:             46MB (    43 MiB) max;     41MB (    39 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    208MB (   199 MiB) avg
Allocated non-heap memory:        47MB (    45 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8077MB (  7703 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
