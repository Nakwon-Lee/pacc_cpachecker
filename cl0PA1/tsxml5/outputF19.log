scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--comedi--drivers--ni_660x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uuvc7s_m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4093: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 5365: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ni_660x_driver_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_attach_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_close_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_open_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_unconfig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_free_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_unsetup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_setup2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_alloc_subdevices to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_construct to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_init_counter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            816952 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  632391 (77%)
  Because of loop head:            184460 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (0%)
  Times precision was empty:       426467 (52%)
  Times precision was {false}:     1021 (0%)
  Times result was cached:         387689 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1775 (0%)
  Times result was 'false':        2944 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         375636
  BDD entailment checks:           193340
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          128
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         1148317
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 410.70
Number of irrelevant predicates:          586296 (51%)
Number of preds handled by boolean abs:   3113 (0%)
  Total number of models for allsat:      1807
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.02

Time for post operator:                 10.685s
  Time for path formula creation:        9.457s
Time for strengthen operator:            2.189s
Time for prec operator:                 35.208s
  Time for abstraction:                 29.418s (Max:     0.231s, Count: 816952)
    Boolean abstraction:                 1.005s
    Solving time:                        1.135s (Max:     0.020s)
    Model enumeration time:              0.088s
    Time for BDD construction:           0.056s (Max:     0.010s)
Time for merge operator:                 0.493s
Time for coverage check:                 0.204s
  Time for BDD entailment checks:        0.159s
Total time for SMT solver (w/o itp):     1.223s

Number of path formula cache hits:   4154316 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.432s

Total number of created targets for pointer analysis: 5047
   Number of created targets for uf: *unsigned_short_int is 2437
   Number of created targets for uf: *(struct_mite_dma_descriptor_ring)* is 689
   Number of created targets for uf: *unsigned_int is 161
   Number of created targets for uf: *(struct_mite_struct)* is 87
   Number of created targets for uf: *(struct_ni_gpct_device)* is 82


Number of BDD nodes:                               510
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3793 (count: 636507, min: 0, max: 84, avg: 0.01)
Time for BDD node cleanup:                             0.079s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.070s
  Time for transition matches:                         1.487s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                      3363599 (count: 3363599, min: 1, max: 1, avg: 1.00) [1 x 3363599]

CPA algorithm statistics
------------------------
Number of iterations:            2293179
Max size of waitlist:            23
Average size of waitlist:        12
Number of computed successors:   2544195
Max successors for one state:    2
Number of times merged:          91148
Number of times stopped:         247509
Number of times breaked:         101

Total time for CPA algorithm:        88.625s (Max:     1.994s)
  Time for choose from waitlist:      0.558s
  Time for precision adjustment:     46.936s
  Time for transfer relation:        31.421s
  Time for merge operator:            1.430s
  Time for stop operator:             1.854s
  Time for adding to reached set:     2.226s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                4362 (count: 101, min: 8, max: 112, avg: 43.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.635s
  Counterexample analysis:                             0.967s (Max:     0.046s, Calls: 101)
    Refinement sat check:                              0.618s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.028s
  ARG update:                                          3.551s

Length of refined path (in blocks):                    4211 (count: 101, min: 4, max: 111, avg: 41.69)
Number of affected states:                             4001 (count: 101, min: 1, max: 109, avg: 39.61)
Length (states) of path with itp 'true':                109 (count: 101, min: 1, max: 5, avg: 1.08)
Length (states) of path with itp non-trivial itp:      4001 (count: 101, min: 1, max: 109, avg: 39.61)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 101, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3900 (count: 101, min: 0, max: 108, avg: 38.61)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 41157
Max. size of reached set after ref.:  166
Avg. size of reached set before ref.: 22586.06
Avg. size of reached set after ref.:  7.66

Total time for CEGAR algorithm:      94.453s
Time for refinements:                 5.827s
Average time for refinement:          0.057s
Max time for refinement:              0.158s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1199
  Total lines:            1860
  Line coverage:          0.645
  Visited conditions:     184
  Total conditions:       430
  Condition coverage:     0.428

CPAchecker general statistics
-----------------------------
Number of program locations:     2409
Number of CFA edges:             2689
Number of relevant variables:    273
Number of functions:             99
Number of loops:                 23
Size of reached set:             13325
  Number of reached locations:   598 (25%)
    Avg states per location:     22
    Max states per location:     252 (at node N495)
  Number of reached functions:   42 (42%)
  Number of partitions:          13322
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1458 (before line 5147), Function main called from node N1447, stack depth 1 [49096b06], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.366s
  Time for loading CPAs:          0.646s
  Time for loading parser:        0.418s
  Time for CFA construction:      2.240s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          0.765s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.481s
      Time for var class.:        0.233s
Time for Analysis:               94.454s
CPU time for analysis:           94.450s
Time for analyzing result:        0.009s
Total time for CPAchecker:       97.823s
Total CPU time for CPAchecker:   97.810s
Time for statistics:              0.222s

Time for Garbage Collector:      14.007s (in 872 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                175MB (   167 MiB) max;     88MB (    84 MiB) avg;    180MB (   172 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           179MB (   170 MiB) max;    142MB (   135 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8083MB (  7708 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
