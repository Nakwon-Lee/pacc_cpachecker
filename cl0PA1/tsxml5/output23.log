scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--comedi--drivers--ni_660x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_y1607e8d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4093: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 5365: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ni_660x_driver_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_attach_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_close_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_open_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_free_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_unsetup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_unconfig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_setup2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_alloc_subdevices to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_construct to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_init_counter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            103378 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  85063 (82%)
  Because of loop head:            18221 (18%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         94 (0%)
  Times precision was empty:       30563 (30%)
  Times precision was {false}:     391 (0%)
  Times result was cached:         71265 (69%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1159 (1%)
  Times result was 'false':        1941 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         57936
  BDD entailment checks:           19384
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          121
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         215191
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 138.83
Number of irrelevant predicates:          90579 (42%)
Number of preds handled by boolean abs:   2242 (1%)
  Total number of models for allsat:      1145
  Max number of models for allsat:        4
  Avg number of models for allsat:        0.99

Time for post operator:                  3.244s
  Time for path formula creation:        3.015s
Time for strengthen operator:            0.434s
Time for prec operator:                 10.213s
  Time for abstraction:                  9.318s (Max:     0.030s, Count: 103378)
    Boolean abstraction:                 0.950s
    Solving time:                        0.736s (Max:     0.015s)
    Model enumeration time:              0.068s
    Time for BDD construction:           0.146s (Max:     0.014s)
Time for merge operator:                 0.280s
Time for coverage check:                 0.069s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.804s

Number of path formula cache hits:   597081 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.991s

Total number of created targets for pointer analysis: 399
   Number of created targets for uf: *unsigned_short_int is 265
   Number of created targets for uf: *(struct_mite_dma_descriptor_ring)* is 33
   Number of created targets for uf: *unsigned_int is 13
   Number of created targets for uf: *(struct_mite_struct)* is 5
   Number of created targets for uf: *(struct_ni_gpct_device)* is 4


Number of BDD nodes:                               358
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2514 (count: 59804, min: 0, max: 171, avg: 0.04)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.774s
  Time for transition matches:                         0.335s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       500552 (count: 500552, min: 1, max: 1, avg: 1.00) [1 x 500552]

CPA algorithm statistics
------------------------
Number of iterations:            327906
Max size of waitlist:            328
Average size of waitlist:        95
Number of computed successors:   370359
Max successors for one state:    2
Number of times merged:          19276
Number of times stopped:         32621
Number of times breaked:         94

Total time for CPA algorithm:        23.256s (Max:     0.735s)
  Time for choose from waitlist:      0.163s
  Time for precision adjustment:     12.290s
  Time for transfer relation:         8.229s
  Time for merge operator:            0.653s
  Time for stop operator:             0.393s
  Time for adding to reached set:     0.487s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   94
Avg. length of target path (in blocks):                4277 (count: 94, min: 8, max: 136, avg: 45.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.402s
  Counterexample analysis:                             1.414s (Max:     0.042s, Calls: 94)
    Refinement sat check:                              0.860s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.116s
  Precision update:                                    0.066s
  ARG update:                                          0.740s

Length of refined path (in blocks):                    4141 (count: 94, min: 4, max: 135, avg: 44.05)
Number of affected states:                             3946 (count: 94, min: 1, max: 133, avg: 41.98)
Length (states) of path with itp 'true':                101 (count: 94, min: 1, max: 5, avg: 1.07)
Length (states) of path with itp non-trivial itp:      3946 (count: 94, min: 1, max: 133, avg: 41.98)
Length (states) of path with itp 'false':                94 (count: 94, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 94, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3852 (count: 94, min: 0, max: 132, avg: 40.98)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                94
Number of successful refinements:     94
Number of failed refinements:         0
Max. size of reached set before ref.: 15124
Max. size of reached set after ref.:  178
Avg. size of reached set before ref.: 3470.01
Avg. size of reached set after ref.:  7.89

Total time for CEGAR algorithm:      26.014s
Time for refinements:                 2.756s
Average time for refinement:          0.029s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1186
  Total lines:            1860
  Line coverage:          0.638
  Visited conditions:     182
  Total conditions:       430
  Condition coverage:     0.423

CPAchecker general statistics
-----------------------------
Number of program locations:     2409
Number of CFA edges:             2689
Number of relevant variables:    273
Number of functions:             99
Number of loops:                 23
Size of reached set:             10359
  Number of reached locations:   585 (24%)
    Avg states per location:     17
    Max states per location:     161 (at node N495)
  Number of reached functions:   42 (42%)
  Number of partitions:          10355
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1458 (before line 5147), Function main called from node N1447, stack depth 1 [3044e9c7], stack [main]])
  Number of target states:       0
  Size of final wait list        239

Time for analysis setup:          3.798s
  Time for loading CPAs:          0.787s
  Time for loading parser:        0.524s
  Time for CFA construction:      2.400s
    Time for parsing file(s):     0.738s
    Time for AST to CFA:          0.813s
    Time for CFA sanity check:    0.175s
    Time for post-processing:     0.550s
      Time for var class.:        0.260s
Time for Analysis:               26.014s
CPU time for analysis:           26.020s
Total time for CPAchecker:       29.815s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.191s

Time for Garbage Collector:       1.663s (in 159 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                117MB (   111 MiB) max;     53MB (    51 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8011MB (  7640 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
