scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--comedi--drivers--ni_660x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0ykl7vl0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4093: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 5365: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ni_660x_driver_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_attach_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_close_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_open_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_free_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_unconfig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_unsetup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_setup2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_alloc_subdevices to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_construct to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_init_counter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            865037 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  669550 (77%)
  Because of loop head:            195386 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         101 (0%)
  Times precision was empty:       341627 (39%)
  Times precision was {false}:     947 (0%)
  Times result was cached:         520388 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2075 (0%)
  Times result was 'false':        1939 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         378114
  BDD entailment checks:           187386
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          7
Number of abstraction locations:          128
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         1180978
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 390.79
Number of irrelevant predicates:          524170 (44%)
Number of preds handled by boolean abs:   3647 (0%)
  Total number of models for allsat:      2111
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.02

Time for post operator:                 12.419s
  Time for path formula creation:       11.315s
Time for strengthen operator:            2.322s
Time for prec operator:                 45.194s
  Time for abstraction:                 38.754s (Max:     0.307s, Count: 865037)
    Boolean abstraction:                 1.207s
    Solving time:                        1.406s (Max:     0.018s)
    Model enumeration time:              0.108s
    Time for BDD construction:           0.065s (Max:     0.008s)
Time for merge operator:                 0.719s
Time for coverage check:                 0.187s
  Time for BDD entailment checks:        0.141s
Total time for SMT solver (w/o itp):     1.514s

Number of path formula cache hits:   4412037 (98%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.160s

Total number of created targets for pointer analysis: 5159
   Number of created targets for uf: *unsigned_short_int is 2297
   Number of created targets for uf: *(struct_mite_dma_descriptor_ring)* is 761
   Number of created targets for uf: *unsigned_int is 225
   Number of created targets for uf: *(struct_mite_struct)* is 96
   Number of created targets for uf: *(struct_ni_gpct_device)* is 97


Number of BDD nodes:                               520
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4436 (count: 547119, min: 0, max: 108, avg: 0.01)
Time for BDD node cleanup:                             0.105s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.415s
  Time for transition matches:                         1.750s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                      3563092 (count: 3563092, min: 1, max: 1, avg: 1.00) [1 x 3563092]

CPA algorithm statistics
------------------------
Number of iterations:            2417056
Max size of waitlist:            35
Average size of waitlist:        17
Number of computed successors:   2679637
Max successors for one state:    2
Number of times merged:          95364
Number of times stopped:         259414
Number of times breaked:         101

Total time for CPA algorithm:       108.157s (Max:     2.966s)
  Time for choose from waitlist:      0.676s
  Time for precision adjustment:     60.133s
  Time for transfer relation:        35.636s
  Time for merge operator:            1.812s
  Time for stop operator:             2.210s
  Time for adding to reached set:     2.647s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                4308 (count: 101, min: 8, max: 112, avg: 42.65)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.512s
  Counterexample analysis:                             1.022s (Max:     0.033s, Calls: 101)
    Refinement sat check:                              0.648s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.037s
  Precision update:                                    0.040s
  ARG update:                                          4.351s

Length of refined path (in blocks):                    4157 (count: 101, min: 4, max: 111, avg: 41.16)
Number of affected states:                             3947 (count: 101, min: 1, max: 109, avg: 39.08)
Length (states) of path with itp 'true':                109 (count: 101, min: 1, max: 5, avg: 1.08)
Length (states) of path with itp non-trivial itp:      3947 (count: 101, min: 1, max: 109, avg: 39.08)
Length (states) of path with itp 'false':               101 (count: 101, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 101, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3846 (count: 101, min: 0, max: 108, avg: 38.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 61765
Max. size of reached set after ref.:  166
Avg. size of reached set before ref.: 23761.93
Avg. size of reached set after ref.:  7.66

Total time for CEGAR algorithm:     115.092s
Time for refinements:                 6.928s
Average time for refinement:          0.068s
Max time for refinement:              0.209s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1199
  Total lines:            1860
  Line coverage:          0.645
  Visited conditions:     184
  Total conditions:       430
  Condition coverage:     0.428

CPAchecker general statistics
-----------------------------
Number of program locations:     2409
Number of CFA edges:             2689
Number of relevant variables:    273
Number of functions:             99
Number of loops:                 23
Size of reached set:             19104
  Number of reached locations:   598 (25%)
    Avg states per location:     31
    Max states per location:     364 (at node N495)
  Number of reached functions:   42 (42%)
  Number of partitions:          19100
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1458 (before line 5147), Function main called from node N1447, stack depth 1 [49096b06], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.168s
  Time for loading CPAs:          0.661s
  Time for loading parser:        0.464s
  Time for CFA construction:      1.985s
    Time for parsing file(s):     0.602s
    Time for AST to CFA:          0.615s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.508s
      Time for var class.:        0.259s
Time for Analysis:              115.093s
CPU time for analysis:          115.090s
Time for analyzing result:        0.013s
Total time for CPAchecker:      118.265s
Total CPU time for CPAchecker:  118.250s
Time for statistics:              0.257s

Time for Garbage Collector:      15.894s (in 762 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                200MB (   190 MiB) max;    108MB (   103 MiB) avg;    209MB (   199 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           207MB (   198 MiB) max;    174MB (   166 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8019MB (  7647 MiB) max;   8016MB (  7644 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
