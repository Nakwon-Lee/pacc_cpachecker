scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--staging--comedi--drivers--ni_660x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ke9zqzki/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4093: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 5365: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_ni_660x_driver_probe_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_attach_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_close_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_open_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_ni_660x_driver_release_2 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_free_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_pci_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_unconfig to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_auto_config to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_unsetup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_setup2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mite_alloc_ring to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_alloc_subdevices to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_gpct_device_construct to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ni_tio_init_counter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            194652 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  150846 (77%)
  Because of loop head:            43775 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (0%)
  Times precision was empty:       189269 (97%)
  Times precision was {false}:     352 (0%)
  Times result was cached:         4785 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      246 (0%)
  Times result was 'false':        509 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         82262
  BDD entailment checks:           38218
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       22
Number of predicates discovered:          6
Number of abstraction locations:          61
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         9840
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 16.45
Number of irrelevant predicates:          5949 (60%)
Number of preds handled by boolean abs:   487 (5%)
  Total number of models for allsat:      276
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.12

Time for post operator:                  5.040s
  Time for path formula creation:        4.694s
Time for strengthen operator:            0.680s
Time for prec operator:                  3.865s
  Time for abstraction:                  2.252s (Max:     0.028s, Count: 194652)
    Boolean abstraction:                 0.295s
    Solving time:                        0.365s (Max:     0.014s)
    Model enumeration time:              0.022s
    Time for BDD construction:           0.018s (Max:     0.005s)
Time for merge operator:                 0.208s
Time for coverage check:                 0.066s
  Time for BDD entailment checks:        0.059s
Total time for SMT solver (w/o itp):     0.387s

Number of path formula cache hits:   984815 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.683s

Total number of created targets for pointer analysis: 1871
   Number of created targets for uf: *unsigned_short_int is 705
   Number of created targets for uf: *(struct_mite_dma_descriptor_ring)* is 241
   Number of created targets for uf: *unsigned_int is 77
   Number of created targets for uf: *(struct_mite_struct)* is 31
   Number of created targets for uf: *(struct_ni_gpct_device)* is 30


Number of BDD nodes:                               344
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         644 (count: 230929, min: 0, max: 31, avg: 0.00)
Time for BDD node cleanup:                             0.052s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.078s
  Time for transition matches:                         0.551s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       809388 (count: 809388, min: 1, max: 1, avg: 1.00) [1 x 809388]

CPA algorithm statistics
------------------------
Number of iterations:            547939
Max size of waitlist:            38
Average size of waitlist:        14
Number of computed successors:   607694
Max successors for one state:    2
Number of times merged:          22022
Number of times stopped:         58908
Number of times breaked:         31

Total time for CPA algorithm:        23.932s (Max:     1.842s)
  Time for choose from waitlist:      0.278s
  Time for precision adjustment:      7.575s
  Time for transfer relation:        12.055s
  Time for merge operator:            0.570s
  Time for stop operator:             0.731s
  Time for adding to reached set:     0.877s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   31
Avg. length of target path (in blocks):                 616 (count: 31, min: 8, max: 60, avg: 19.87)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.843s
  Counterexample analysis:                             0.240s (Max:     0.032s, Calls: 31)
    Refinement sat check:                              0.141s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.024s
  ARG update:                                          1.538s

Length of refined path (in blocks):                     549 (count: 31, min: 4, max: 59, avg: 17.71)
Number of affected states:                              483 (count: 31, min: 1, max: 57, avg: 15.58)
Length (states) of path with itp 'true':                 35 (count: 31, min: 1, max: 2, avg: 1.13)
Length (states) of path with itp non-trivial itp:       483 (count: 31, min: 1, max: 57, avg: 15.58)
Length (states) of path with itp 'false':                31 (count: 31, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 31, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             452 (count: 31, min: 0, max: 56, avg: 14.58)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                31
Number of successful refinements:     31
Number of failed refinements:         0
Max. size of reached set before ref.: 29208
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 17608.39
Avg. size of reached set after ref.:  6.26

Total time for CEGAR algorithm:      26.283s
Time for refinements:                 2.351s
Average time for refinement:          0.075s
Max time for refinement:              0.194s

Code Coverage
-----------------------------
  Function coverage:      0.424
  Visited lines:          1188
  Total lines:            1860
  Line coverage:          0.639
  Visited conditions:     182
  Total conditions:       430
  Condition coverage:     0.423

CPAchecker general statistics
-----------------------------
Number of program locations:     2409
Number of CFA edges:             2689
Number of relevant variables:    273
Number of functions:             99
Number of loops:                 23
Size of reached set:             2611
  Number of reached locations:   584 (24%)
    Avg states per location:     4
    Max states per location:     34 (at node N495)
  Number of reached functions:   42 (42%)
  Number of partitions:          2596
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1458 (before line 5147), Function main called from node N1447, stack depth 1 [49096b06], stack [main]])
  Number of target states:       0
  Size of final wait list        28

Time for analysis setup:          3.547s
  Time for loading CPAs:          0.586s
  Time for loading parser:        0.504s
  Time for CFA construction:      2.356s
    Time for parsing file(s):     0.615s
    Time for AST to CFA:          0.768s
    Time for CFA sanity check:    0.150s
    Time for post-processing:     0.662s
      Time for var class.:        0.317s
Time for Analysis:               26.283s
CPU time for analysis:           26.290s
Total time for CPAchecker:       29.833s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.112s

Time for Garbage Collector:       3.122s (in 172 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     65MB (    62 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
