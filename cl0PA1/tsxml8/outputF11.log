scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--aty--radeonfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1x6tz674/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5096: Dead code detected: v.bits_per_pixel = 8U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5098: Dead code detected: v.bits_per_pixel = 16U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5100: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

line 5101: Dead code detected: v.bits_per_pixel = 32U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5272: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5275: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5281: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5337: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5340: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5346: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7270: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7918: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7937: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7956: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8139: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8177: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8239: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8262: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8285: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8329: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8410: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8429: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8448: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8467: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8486: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8505: Dead code detected: __ms___5 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8573: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8592: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8711: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8861: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9076: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9097: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9135: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9153: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9188: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9256: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9285: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9304: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9323: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9342: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9501: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9527: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9583: Dead code detected: __ms___2 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9791: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10079: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12119: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12512: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12889: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_validate_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_map_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unmap_rom to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function do_gettimeofday to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_bit_add_bus to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_alloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_edid_to_monspecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_videomode_to_modelist to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_find_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_var_to_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_add_videomode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_parse_edid to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_ddc_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1518037 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1416000 (93%)
  Because of loop head:            101392 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         645 (0%)
  Times precision was empty:       234154 (15%)
  Times precision was {false}:     5164 (0%)
  Times result was cached:         1258699 (83%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      20020 (1%)
  Times result was 'false':        19488 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1362859
  BDD entailment checks:           362829
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       68
Number of predicates discovered:          18
Number of abstraction locations:          431
Max number of predicates per location:    15
Avg number of predicates per location:    4
Total predicates per abstraction:         10428572
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 414.10
Number of irrelevant predicates:          5591858 (54%)
Number of preds handled by boolean abs:   88981 (1%)
  Total number of models for allsat:      24374
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.22

Time for post operator:                194.169s
  Time for path formula creation:      191.730s
Time for strengthen operator:            5.946s
Time for prec operator:                374.365s
  Time for abstraction:                357.874s (Max:     4.097s, Count: 1518037)
    Boolean abstraction:                80.068s
    Solving time:                       87.573s (Max:     0.260s)
    Model enumeration time:              9.869s
    Time for BDD construction:           0.407s (Max:     0.012s)
Time for merge operator:                16.949s
Time for coverage check:                 0.448s
  Time for BDD entailment checks:        0.282s
Total time for SMT solver (w/o itp):    97.442s

Number of path formula cache hits:   7371184 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   167.944s

Total number of created targets for pointer analysis: 2830882
   Number of created targets for uf: *unsigned_char is 6261
   Number of created targets for uf: *enum_radeon_pm_mode is 1106
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_radeonfb_info)*],_VarArgs:_false)* is 1106
   Number of created targets for uf: *(unsigned_char)* is 3793
   Number of created targets for uf: *unsigned_int is 5029
   Number of created targets for uf: *char is 791
   Number of created targets for uf: *unsigned_long_int is 6274


Number of BDD nodes:                               1850
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       41363 (count: 745752, min: 0, max: 1025, avg: 0.06)
Time for BDD node cleanup:                             0.100s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.402s
  Time for transition matches:                         5.313s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.005s
Automaton transfers with branching:                0
Automaton transfer successors:                      9110629 (count: 9110629, min: 1, max: 1, avg: 1.00) [1 x 9110629]

CPA algorithm statistics
------------------------
Number of iterations:            5865338
Max size of waitlist:            709
Average size of waitlist:        168
Number of computed successors:   6695998
Max successors for one state:    2
Number of times merged:          500015
Number of times stopped:         732569
Number of times breaked:         645

Total time for CPA algorithm:       830.408s (Max:    32.568s)
  Time for choose from waitlist:      1.769s
  Time for precision adjustment:    403.104s
  Time for transfer relation:       381.998s
  Time for merge operator:           21.160s
  Time for stop operator:             5.174s
  Time for adding to reached set:     6.564s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   645
Avg. length of target path (in blocks):               70200 (count: 645, min: 7, max: 522, avg: 108.84)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  59.006s
  Counterexample analysis:                            48.630s (Max:     0.746s, Calls: 645)
    Refinement sat check:                             28.980s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.031s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.356s
  Precision update:                                    0.441s
  ARG update:                                          9.177s

Length of refined path (in blocks):                   64485 (count: 645, min: 6, max: 508, avg: 99.98)
Number of affected states:                            58011 (count: 645, min: 1, max: 507, avg: 89.94)
Length (states) of path with itp 'true':               5829 (count: 645, min: 0, max: 337, avg: 9.04)
Length (states) of path with itp non-trivial itp:     58011 (count: 645, min: 1, max: 507, avg: 89.94)
Length (states) of path with itp 'false':               645 (count: 645, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 645, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           57366 (count: 645, min: 0, max: 506, avg: 88.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                645
Number of successful refinements:     645
Number of failed refinements:         0
Max. size of reached set before ref.: 52678
Max. size of reached set after ref.:  21728
Avg. size of reached set before ref.: 10971.34
Avg. size of reached set after ref.:  1767.24

Total time for CEGAR algorithm:     895.094s
Time for refinements:                64.037s
Average time for refinement:          0.099s
Max time for refinement:              0.848s

Code Coverage
-----------------------------
  Function coverage:      0.301
  Visited lines:          2383
  Total lines:            6139
  Line coverage:          0.388
  Visited conditions:     596
  Total conditions:       1546
  Condition coverage:     0.386

CPAchecker general statistics
-----------------------------
Number of program locations:     8772
Number of CFA edges:             10682
Number of relevant variables:    995
Number of functions:             226
Number of loops:                 60
Size of reached set:             7295
  Number of reached locations:   1589 (18%)
    Avg states per location:     4
    Max states per location:     159 (at node N55)
  Number of reached functions:   68 (30%)
  Number of partitions:          7235
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1529 (before line 5683), Function radeonfb_setcmap called from node N3089, stack depth 2 [b19f03b], stack [main, radeonfb_setcmap]])
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          5.245s
  Time for loading CPAs:          0.763s
  Time for loading parser:        0.510s
  Time for CFA construction:      3.871s
    Time for parsing file(s):     0.804s
    Time for AST to CFA:          1.310s
    Time for CFA sanity check:    0.465s
    Time for post-processing:     1.154s
      Time for var class.:        0.528s
Time for Analysis:              895.094s
CPU time for analysis:          895.020s
Total time for CPAchecker:      900.345s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.203s

Time for Garbage Collector:      63.756s (in 1486 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1748MB (  1667 MiB) max;    705MB (   673 MiB) avg;   1847MB (  1762 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    39 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          2408MB (  2296 MiB) max;   1049MB (  1001 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8774MB (  8367 MiB) max;   8415MB (  8025 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
