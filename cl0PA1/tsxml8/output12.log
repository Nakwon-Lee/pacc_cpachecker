scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--video--aty--radeonfb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_t1_p73f_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5096: Dead code detected: v.bits_per_pixel = 8U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5098: Dead code detected: v.bits_per_pixel = 16U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5100: Dead code detected: return (-22); (CFACreationUtils.addEdgeToCFA, INFO)

line 5101: Dead code detected: v.bits_per_pixel = 32U; (CFACreationUtils.addEdgeToCFA, INFO)

line 5272: Dead code detected: __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5275: Dead code detected: __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

line 5281: Dead code detected: __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __get_user_1": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 2UL:
  __asm__ volatile ("call __get_user_2": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 4UL:
  __asm__ volatile ("call __get_user_4": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  case 8UL:
  __asm__ volatile ("call __get_user_8": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  default:
  __asm__ volatile ("call __get_user_X": "=a" (__ret_gu), "=d" (__val_gu): "0" ((__u32 *)arg));
  goto ldv_33448;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5337: Dead code detected: __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5340: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5346: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 2UL:
  __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 4UL:
  __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  case 8UL:
  __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  default:
  __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" ((__u32 *)arg): "ebx");
  goto ldv_33458;
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 7270: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 7918: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7937: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 7956: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8139: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8177: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8216: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8239: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8262: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8285: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8329: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8410: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8429: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8448: Dead code detected: __ms___2 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8467: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8486: Dead code detected: __ms___4 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8505: Dead code detected: __ms___5 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8573: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8592: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8711: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 8861: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9076: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9097: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9135: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9153: Dead code detected: __ms___0 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9188: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9256: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9285: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9304: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9323: Dead code detected: __ms___2 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9342: Dead code detected: __ms___3 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9501: Dead code detected: __ms___0 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9527: Dead code detected: __ms___1 = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9583: Dead code detected: __ms___2 = 3UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9791: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 9810: Dead code detected: __ms___1 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10079: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10765: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 11680: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12119: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12512: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12889: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_validate_mode to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_bin_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtrr_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_framebuffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_destroy_modedb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function backlight_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_adapter to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fb_dealloc_cmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function framebuffer_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            58290 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  51438 (88%)
  Because of loop head:            6746 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         106 (0%)
  Times precision was empty:       34058 (58%)
  Times precision was {false}:     277 (0%)
  Times result was cached:         23147 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      808 (1%)
  Times result was 'false':        1006 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         59231
  BDD entailment checks:           15559
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       45
Number of predicates discovered:          6
Number of abstraction locations:          79
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         89554
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 82.54
Number of irrelevant predicates:          56488 (63%)
Number of preds handled by boolean abs:   1814 (2%)
  Total number of models for allsat:      808
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  4.271s
  Time for path formula creation:        4.118s
Time for strengthen operator:            0.363s
Time for prec operator:                  7.385s
  Time for abstraction:                  6.759s (Max:     0.213s, Count: 58290)
    Boolean abstraction:                 1.477s
    Solving time:                        2.119s (Max:     0.196s)
    Model enumeration time:              0.107s
    Time for BDD construction:           0.048s (Max:     0.012s)
Time for merge operator:                 0.441s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.047s
Total time for SMT solver (w/o itp):     2.226s

Number of path formula cache hits:   459617 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.163s

Total number of created targets for pointer analysis: 18149
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_int is 289
   Number of created targets for uf: *unsigned_long_int is 21


Number of BDD nodes:                               236
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1693 (count: 55910, min: 0, max: 92, avg: 0.03)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.530s
  Time for transition matches:                         0.302s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       408479 (count: 408479, min: 1, max: 1, avg: 1.00) [1 x 408479]

CPA algorithm statistics
------------------------
Number of iterations:            238029
Max size of waitlist:            108
Average size of waitlist:        52
Number of computed successors:   277988
Max successors for one state:    2
Number of times merged:          21836
Number of times stopped:         30922
Number of times breaked:         106

Total time for CPA algorithm:        22.410s (Max:     0.827s)
  Time for choose from waitlist:      0.195s
  Time for precision adjustment:      8.765s
  Time for transfer relation:        11.178s
  Time for merge operator:            0.746s
  Time for stop operator:             0.355s
  Time for adding to reached set:     0.405s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   106
Avg. length of target path (in blocks):                1706 (count: 106, min: 7, max: 20, avg: 16.09)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.634s
  Counterexample analysis:                             2.008s (Max:     0.074s, Calls: 106)
    Refinement sat check:                              1.609s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.071s
  Precision update:                                    0.039s
  ARG update:                                          0.481s

Length of refined path (in blocks):                    1592 (count: 106, min: 6, max: 19, avg: 15.02)
Number of affected states:                             1374 (count: 106, min: 1, max: 17, avg: 12.96)
Length (states) of path with itp 'true':                112 (count: 106, min: 1, max: 7, avg: 1.06)
Length (states) of path with itp non-trivial itp:      1374 (count: 106, min: 1, max: 17, avg: 12.96)
Length (states) of path with itp 'false':               106 (count: 106, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 106, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1268 (count: 106, min: 0, max: 16, avg: 11.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                106
Number of successful refinements:     106
Number of failed refinements:         0
Max. size of reached set before ref.: 3304
Max. size of reached set after ref.:  2080
Avg. size of reached set before ref.: 2324.36
Avg. size of reached set after ref.:  25.57

Total time for CEGAR algorithm:      25.265s
Time for refinements:                 2.843s
Average time for refinement:          0.026s
Max time for refinement:              0.083s

Code Coverage
-----------------------------
  Function coverage:      0.217
  Visited lines:          1564
  Total lines:            6139
  Line coverage:          0.255
  Visited conditions:     276
  Total conditions:       1546
  Condition coverage:     0.179

CPAchecker general statistics
-----------------------------
Number of program locations:     8772
Number of CFA edges:             10682
Number of relevant variables:    995
Number of functions:             226
Number of loops:                 60
Size of reached set:             2388
  Number of reached locations:   776 (9%)
    Avg states per location:     3
    Max states per location:     54 (at node N68)
  Number of reached functions:   49 (22%)
  Number of partitions:          2351
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3149 (before line 7194), Function main called from node N3024, stack depth 1 [350d26f3], stack [main]])
  Number of target states:       0
  Size of final wait list        80

Time for analysis setup:          5.038s
  Time for loading CPAs:          0.825s
  Time for loading parser:        0.464s
  Time for CFA construction:      3.639s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          1.271s
    Time for CFA sanity check:    0.420s
    Time for post-processing:     1.084s
      Time for var class.:        0.529s
Time for Analysis:               25.265s
CPU time for analysis:           25.270s
Total time for CPAchecker:       30.306s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.116s

Time for Garbage Collector:       0.966s (in 137 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 82MB (    78 MiB) max;     57MB (    55 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
