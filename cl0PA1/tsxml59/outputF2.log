scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--vfio--pci--vfio-pci.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vaiy_e4i/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 2245-2246: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2249-2250: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2257-2258: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 2:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 4:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 8:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2769: Dead code detected: info___0.offset = (unsigned long long )info___0.index << 40; (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).start) != 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).end) != (((pdev->resource)[info___0.index]).start))] (CFACreationUtils.addEdgeToCFA, INFO)

line 2771: Dead code detected: info___0.size = (pdev->resource[info___0.index].end - pdev->resource[info___0.index].start) + 1ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2773: Dead code detected: info___0.size = 0ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [(info___0.size) == 0ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [!((info___0.size) == 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2776: Dead code detected: info___0.flags = 0U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2781: Dead code detected: info___0.flags = 3U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!(((((pdev->resource)[info___0.index]).flags) & 512UL) != 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [(info___0.size) > 4095ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!((info___0.size) > 4095ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2783: Dead code detected: info___0.flags = info___0.flags | 4U; (CFACreationUtils.addEdgeToCFA, INFO)

line 3417: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4662: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5003: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5006: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5009: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
      case 1:
      __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 2:
      __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 4:
      __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 8:
      __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      default:
      __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 5097: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3782: Function pointer *(file->f_op->poll) with type unsigned int (*)(struct file *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_del_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_add_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4621: Ignoring call via function pointer vfio_pci_set_irqs_ioctl::func for which no suitable target was found in line: tmp = (*func)(vdev, index, start, count, flags, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function pci_intx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_and_free_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_reset_function to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_check_and_unmask_intx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_signal to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_ctx_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kasprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_ctx_fdget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function remap_pfn_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_reset_function to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_store_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_intx_mask_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_word to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_find_capability to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_dword to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msi to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msi_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2331: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_fget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_ctx_fileget to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function fput to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3782: Ignoring function call through function pointer *(file->f_op->poll): events = (*(file->f_op->poll))(file, &(virqfd->pt)); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3081370 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2877370 (93%)
  Because of loop head:            203530 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         470 (0%)
  Times precision was empty:       820450 (27%)
  Times precision was {false}:     3613 (0%)
  Times result was cached:         2249246 (73%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8061 (0%)
  Times result was 'false':        9627 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         3293540
  BDD entailment checks:           944584
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          8
Number of abstraction locations:          330
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         6914831
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 592.33
Number of irrelevant predicates:          1923970 (28%)
Number of preds handled by boolean abs:   14255 (0%)
  Total number of models for allsat:      8157
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.01

Time for post operator:                103.883s
  Time for path formula creation:       99.123s
Time for strengthen operator:           10.934s
Time for prec operator:                446.025s
  Time for abstraction:                420.416s (Max:     1.848s, Count: 3081370)
    Boolean abstraction:                31.848s
    Solving time:                       43.310s (Max:     0.073s)
    Model enumeration time:              1.813s
    Time for BDD construction:           0.133s (Max:     0.008s)
Time for merge operator:                 7.059s
Time for coverage check:                 0.873s
  Time for BDD entailment checks:        0.543s
Total time for SMT solver (w/o itp):    45.123s

Number of path formula cache hits:   21167085 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    50.605s

Total number of created targets for pointer analysis: 1689485
   Number of created targets for uf: *(void)* is 10
   Number of created targets for uf: *(struct_pci_dev)* is 147
   Number of created targets for uf: *(struct_msix_entry)* is 3
   Number of created targets for uf: *(unsigned_char)* is 9763
   Number of created targets for uf: *(struct_pci_saved_state)* is 3
   Number of created targets for uf: *(struct_perm_bits)* is 3
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_2,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 10
   Number of created targets for uf: *unsigned_short_int is 784
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[unsigned_int],_VarArgs:_false)* is 49307
   Number of created targets for uf: *(struct_eventfd_ctx)* is 67
   Number of created targets for uf: *signed_int is 5
   Number of created targets for uf: *(struct_virqfd)* is 58
   Number of created targets for uf: *(char)* is 67
   Number of created targets for uf: *unsigned_char is 15587
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[(unsigned_int)*],_VarArgs:_false)* is 5727
   Number of created targets for uf: *_Bool is 13
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[(void)*],_VarArgs:_false)* is 10
   Number of created targets for uf: *(struct_vfio_pci_irq_ctx)* is 3
   Number of created targets for uf: *((struct_virqfd)*)* is 10
   Number of created targets for uf: *(struct_vfio_pci_device)* is 10
   Number of created targets for uf: *unsigned_int is 28


Number of BDD nodes:                               644
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       16461 (count: 1834957, min: 0, max: 380, avg: 0.01)
Time for BDD node cleanup:                             0.212s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 14.815s
  Time for transition matches:                         8.416s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                     17803532 (count: 17803532, min: 1, max: 1, avg: 1.00) [1 x 17803532]

CPA algorithm statistics
------------------------
Number of iterations:            11546670
Max size of waitlist:            65
Average size of waitlist:        31
Number of computed successors:   13508915
Max successors for one state:    2
Number of times merged:          1174478
Number of times stopped:         1933672
Number of times breaked:         470

Total time for CPA algorithm:       766.824s (Max:     4.212s)
  Time for choose from waitlist:      2.568s
  Time for precision adjustment:    505.788s
  Time for transfer relation:       205.069s
  Time for merge operator:           14.707s
  Time for stop operator:             9.534s
  Time for adding to reached set:    10.136s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   470
Avg. length of target path (in blocks):               63033 (count: 470, min: 26, max: 178, avg: 134.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 122.089s
  Counterexample analysis:                           103.725s (Max:     0.509s, Calls: 470)
    Refinement sat check:                             84.367s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.031s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.236s
  Precision update:                                    0.289s
  ARG update:                                         17.490s

Length of refined path (in blocks):                   60885 (count: 470, min: 4, max: 177, avg: 129.54)
Number of affected states:                            55238 (count: 470, min: 1, max: 175, avg: 117.53)
Length (states) of path with itp 'true':               5177 (count: 470, min: 1, max: 107, avg: 11.01)
Length (states) of path with itp non-trivial itp:     55238 (count: 470, min: 1, max: 175, avg: 117.53)
Length (states) of path with itp 'false':               470 (count: 470, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 470, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           54768 (count: 470, min: 0, max: 174, avg: 116.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                470
Number of successful refinements:     470
Number of failed refinements:         0
Max. size of reached set before ref.: 39023
Max. size of reached set after ref.:  33450
Avg. size of reached set before ref.: 27438.02
Avg. size of reached set after ref.:  2890.58

Total time for CEGAR algorithm:     896.214s
Time for refinements:               128.439s
Average time for refinement:          0.273s
Max time for refinement:              0.660s

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          2192
  Total lines:            3214
  Line coverage:          0.682
  Visited conditions:     715
  Total conditions:       1174
  Condition coverage:     0.609

CPAchecker general statistics
-----------------------------
Number of program locations:     4606
Number of CFA edges:             5420
Number of relevant variables:    873
Number of functions:             157
Number of loops:                 18
Size of reached set:             28317
  Number of reached locations:   1757 (38%)
    Avg states per location:     16
    Max states per location:     324 (at node N58)
  Number of reached functions:   91 (58%)
  Number of partitions:          28214
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N820 (before line 3215), Function main called from node N809, stack depth 1 [eca6a74], stack [main]])
  Number of target states:       0
  Size of final wait list        47

Time for analysis setup:          4.129s
  Time for loading CPAs:          0.754s
  Time for loading parser:        0.550s
  Time for CFA construction:      2.706s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.904s
    Time for CFA sanity check:    0.237s
    Time for post-processing:     0.758s
      Time for var class.:        0.403s
Time for Analysis:              896.214s
CPU time for analysis:          896.160s
Total time for CPAchecker:      900.346s
Total CPU time for CPAchecker:  900.280s
Time for statistics:              0.427s

Time for Garbage Collector:      77.110s (in 2596 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                818MB (   780 MiB) max;    385MB (   367 MiB) avg;    840MB (   801 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     40MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           844MB (   805 MiB) max;    559MB (   533 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8297MB (  7913 MiB) max;   8207MB (  7827 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
