scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--vfio--pci--vfio-pci.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1fugy0nq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 2245-2246: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2249-2250: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2257-2258: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 2:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 4:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 8:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2769: Dead code detected: info___0.offset = (unsigned long long )info___0.index << 40; (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).start) != 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).end) != (((pdev->resource)[info___0.index]).start))] (CFACreationUtils.addEdgeToCFA, INFO)

line 2771: Dead code detected: info___0.size = (pdev->resource[info___0.index].end - pdev->resource[info___0.index].start) + 1ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2773: Dead code detected: info___0.size = 0ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [(info___0.size) == 0ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [!((info___0.size) == 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2776: Dead code detected: info___0.flags = 0U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2781: Dead code detected: info___0.flags = 3U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!(((((pdev->resource)[info___0.index]).flags) & 512UL) != 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [(info___0.size) > 4095ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!((info___0.size) > 4095ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2783: Dead code detected: info___0.flags = info___0.flags | 4U; (CFACreationUtils.addEdgeToCFA, INFO)

line 3417: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4662: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5003: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5006: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5009: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
      case 1:
      __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 2:
      __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 4:
      __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 8:
      __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      default:
      __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 5097: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3782: Function pointer *(file->f_op->poll) with type unsigned int (*)(struct file *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function module_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_del_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function try_module_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_add_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4621: Ignoring call via function pointer vfio_pci_set_irqs_ioctl::func for which no suitable target was found in line: tmp = (*func)(vdev, index, start, count, flags, data); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

Assuming external function pci_intx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq_nosync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_load_and_free_saved_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_selected_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_reset_function to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_check_and_unmask_intx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eventfd_signal to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25955 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  25547 (98%)
  Because of loop head:            369 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (0%)
  Times precision was empty:       10056 (39%)
  Times precision was {false}:     296 (1%)
  Times result was cached:         14894 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      709 (3%)
  Times result was 'false':        246 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         12527
  BDD entailment checks:           4481
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          4
Number of abstraction locations:          77
Max number of predicates per location:    3
Avg number of predicates per location:    2
Total predicates per abstraction:         45831
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 45.60
Number of irrelevant predicates:          23622 (52%)
Number of preds handled by boolean abs:   1341 (3%)
  Total number of models for allsat:      709
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  2.717s
  Time for path formula creation:        2.639s
Time for strengthen operator:            0.165s
Time for prec operator:                 13.167s
  Time for abstraction:                 12.766s (Max:     0.071s, Count: 25955)
    Boolean abstraction:                 4.586s
    Solving time:                        5.719s (Max:     0.059s)
    Model enumeration time:              0.220s
    Time for BDD construction:           0.054s (Max:     0.006s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.026s
Total time for SMT solver (w/o itp):     5.939s

Number of path formula cache hits:   143134 (95%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.318s

Total number of created targets for pointer analysis: 45004
   Number of created targets for uf: *unsigned_short_int is 301
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[unsigned_int],_VarArgs:_false)* is 1121
   Number of created targets for uf: *signed_int is 2
   Number of created targets for uf: *unsigned_char is 1029
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[(unsigned_int)*],_VarArgs:_false)* is 1121
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(unsigned_char)* is 2241
   Number of created targets for uf: *_Bool is 2


Number of BDD nodes:                               208
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1442 (count: 20291, min: 0, max: 190, avg: 0.07)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.239s
Automaton transfers with branching:                0
Automaton transfer successors:                       122417 (count: 122417, min: 1, max: 1, avg: 1.00) [1 x 122417]

CPA algorithm statistics
------------------------
Number of iterations:            75345
Max size of waitlist:            34
Average size of waitlist:        25
Number of computed successors:   83382
Max successors for one state:    2
Number of times merged:          4023
Number of times stopped:         6733
Number of times breaked:         39

Total time for CPA algorithm:        19.142s (Max:     2.157s)
  Time for choose from waitlist:      0.081s
  Time for precision adjustment:     13.763s
  Time for transfer relation:         4.344s
  Time for merge operator:            0.201s
  Time for stop operator:             0.181s
  Time for adding to reached set:     0.163s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                3750 (count: 39, min: 26, max: 114, avg: 96.15)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.929s
  Counterexample analysis:                             6.582s (Max:     0.364s, Calls: 39)
    Refinement sat check:                              5.522s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.029s
  Precision update:                                    0.029s
  ARG update:                                          0.245s

Length of refined path (in blocks):                    3614 (count: 38, min: 25, max: 113, avg: 95.11)
Number of affected states:                             3538 (count: 38, min: 23, max: 111, avg: 93.11)
Length (states) of path with itp 'true':                 38 (count: 38, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:      3538 (count: 38, min: 23, max: 111, avg: 93.11)
Length (states) of path with itp 'false':                38 (count: 38, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 38, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            3500 (count: 38, min: 22, max: 110, avg: 92.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     38
Number of failed refinements:         0
Max. size of reached set before ref.: 2363
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 1964.92
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      26.220s
Time for refinements:                 7.078s
Average time for refinement:          0.181s
Max time for refinement:              0.369s

Code Coverage
-----------------------------
  Function coverage:      0.408
  Visited lines:          1115
  Total lines:            3214
  Line coverage:          0.347
  Visited conditions:     290
  Total conditions:       1174
  Condition coverage:     0.247

CPAchecker general statistics
-----------------------------
Number of program locations:     4606
Number of CFA edges:             5420
Number of relevant variables:    873
Number of functions:             157
Number of loops:                 18
Size of reached set:             2362
  Number of reached locations:   758 (16%)
    Avg states per location:     3
    Max states per location:     88 (at node N2747)
  Number of reached functions:   64 (41%)
  Number of partitions:          2336
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N3152 (before line 5882), Function vfio_pci_init_perm_bits called from node N785, stack depth 3 [76a99305], stack [main, vfio_pci_init, vfio_pci_init_perm_bits]])
  Number of target states:       1
  Size of final wait list        28

Time for analysis setup:          4.107s
  Time for loading CPAs:          0.647s
  Time for loading parser:        0.487s
  Time for CFA construction:      2.875s
    Time for parsing file(s):     0.742s
    Time for AST to CFA:          1.025s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.716s
      Time for var class.:        0.362s
Time for Analysis:               26.220s
CPU time for analysis:           26.220s
Total time for CPAchecker:       30.330s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.104s

Time for Garbage Collector:       0.507s (in 102 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     49MB (    46 MiB) avg;     73MB (    70 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8009MB (  7638 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
