scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--vfio--pci--vfio-pci.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pkqkfbyq/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 2245-2246: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2249-2250: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

lines 2257-2258: Dead code detected: __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddb %b0, %1\n": "+q" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 2:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddw %w0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 4:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddl %0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  case 8:
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; xaddq %q0, %1\n": "+r" (__ret),
                       "+m" (v->counter): : "memory", "cc");
  goto ldv_5474;
  default:
  __xadd_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 2769: Dead code detected: info___0.offset = (unsigned long long )info___0.index << 40; (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).start) != 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2770: Dead code detected: [!((((pdev->resource)[info___0.index]).end) != (((pdev->resource)[info___0.index]).start))] (CFACreationUtils.addEdgeToCFA, INFO)

line 2771: Dead code detected: info___0.size = (pdev->resource[info___0.index].end - pdev->resource[info___0.index].start) + 1ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2773: Dead code detected: info___0.size = 0ULL; (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [(info___0.size) == 0ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2775: Dead code detected: [!((info___0.size) == 0ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2776: Dead code detected: info___0.flags = 0U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2781: Dead code detected: info___0.flags = 3U; (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!(((((pdev->resource)[info___0.index]).flags) & 512UL) != 0UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [(info___0.size) > 4095ULL] (CFACreationUtils.addEdgeToCFA, INFO)

line 2782: Dead code detected: [!((info___0.size) > 4095ULL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 2783: Dead code detected: info___0.flags = info___0.flags | 4U; (CFACreationUtils.addEdgeToCFA, INFO)

line 3417: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 4662: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5003: Dead code detected: __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5006: Dead code detected: __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

line 5009: Dead code detected: __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx"); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (1UL) {
      case 1:
      __asm__ volatile ("call __put_user_1": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 2:
      __asm__ volatile ("call __put_user_2": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 4:
      __asm__ volatile ("call __put_user_4": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      case 8:
      __asm__ volatile ("call __put_user_8": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      default:
      __asm__ volatile ("call __put_user_X": "=a" (__ret_pu): "0" (__pu_val), "c" (buf + i): "ebx");
      goto ldv_23048;
      } (CFACreationUtils.addEdgeToCFA, INFO)

line 5097: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6973: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3782: Function pointer *(file->f_op->poll) with type unsigned int (*)(struct file *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function pci_bus_read_config_byte to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iommu_group_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_add_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfio_del_group_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10819 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10444 (97%)
  Because of loop head:            340 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (0%)
  Times precision was empty:       1791 (17%)
  Times precision was {false}:     181 (2%)
  Times result was cached:         7960 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      887 (8%)
  Times result was 'false':        188 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         7624
  BDD entailment checks:           1286
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          5
Number of abstraction locations:          70
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         25462
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 23.84
Number of irrelevant predicates:          3540 (14%)
Number of preds handled by boolean abs:   1773 (7%)
  Total number of models for allsat:      915
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  2.011s
  Time for path formula creation:        1.925s
Time for strengthen operator:            0.078s
Time for prec operator:                  9.623s
  Time for abstraction:                  9.402s (Max:     0.063s, Count: 10819)
    Boolean abstraction:                 4.410s
    Solving time:                        5.009s (Max:     0.060s)
    Model enumeration time:              0.216s
    Time for BDD construction:           0.047s (Max:     0.008s)
Time for merge operator:                 0.129s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.031s
Total time for SMT solver (w/o itp):     5.225s

Number of path formula cache hits:   61791 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.763s

Total number of created targets for pointer analysis: 22826
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[unsigned_int],_VarArgs:_false)* is 561
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *unsigned_char is 50
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_6,_Parameter_1_type:_[(struct_vfio_pci_device)*],_Parameter_2_type:_[signed_int],_Parameter_3_type:_[signed_int],_Parameter_4_type:_[(struct_perm_bits)*],_Parameter_5_type:_[signed_int],_Parameter_6_type:_[(unsigned_int)*],_VarArgs:_false)* is 561
   Number of created targets for uf: *(struct_pci_dev)* is 16
   Number of created targets for uf: *(unsigned_char)* is 1121


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1818 (count: 9403, min: 0, max: 288, avg: 0.19)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.201s
Automaton transfers with branching:                0
Automaton transfer successors:                        57044 (count: 57044, min: 1, max: 1, avg: 1.00) [1 x 57044]

CPA algorithm statistics
------------------------
Number of iterations:            36976
Max size of waitlist:            91
Average size of waitlist:        41
Number of computed successors:   43100
Max successors for one state:    2
Number of times merged:          3169
Number of times stopped:         3648
Number of times breaked:         35

Total time for CPA algorithm:        13.759s (Max:     1.427s)
  Time for choose from waitlist:      0.042s
  Time for precision adjustment:      9.984s
  Time for transfer relation:         2.957s
  Time for merge operator:            0.284s
  Time for stop operator:             0.132s
  Time for adding to reached set:     0.061s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   35
Avg. length of target path (in blocks):                5711 (count: 35, min: 26, max: 234, avg: 163.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.696s
  Counterexample analysis:                            12.436s (Max:     0.975s, Calls: 35)
    Refinement sat check:                             10.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.044s
  ARG update:                                          0.115s

Length of refined path (in blocks):                    5406 (count: 34, min: 4, max: 233, avg: 159.00)
Number of affected states:                             5336 (count: 34, min: 1, max: 231, avg: 156.94)
Length (states) of path with itp 'true':                 36 (count: 34, min: 1, max: 2, avg: 1.06)
Length (states) of path with itp non-trivial itp:      5336 (count: 34, min: 1, max: 231, avg: 156.94)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 34, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5302 (count: 34, min: 0, max: 230, avg: 155.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                35
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 1550
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 1127.80
Avg. size of reached set after ref.:  6.12

Total time for CEGAR algorithm:      26.567s
Time for refinements:                12.808s
Average time for refinement:          0.365s
Max time for refinement:              0.982s

Code Coverage
-----------------------------
  Function coverage:      0.223
  Visited lines:          747
  Total lines:            3214
  Line coverage:          0.232
  Visited conditions:     108
  Total conditions:       1174
  Condition coverage:     0.092

CPAchecker general statistics
-----------------------------
Number of program locations:     4606
Number of CFA edges:             5420
Number of relevant variables:    873
Number of functions:             157
Number of loops:                 18
Size of reached set:             1548
  Number of reached locations:   324 (7%)
    Avg states per location:     4
    Max states per location:     56 (at node N2748)
  Number of reached functions:   35 (22%)
  Number of partitions:          1537
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N820 (before line 3215), Function main called from node N809, stack depth 1 [eca6a74], stack [main]])
  Number of target states:       1
  Size of final wait list        83

Time for analysis setup:          3.852s
  Time for loading CPAs:          0.652s
  Time for loading parser:        0.459s
  Time for CFA construction:      2.653s
    Time for parsing file(s):     0.656s
    Time for AST to CFA:          0.915s
    Time for CFA sanity check:    0.231s
    Time for post-processing:     0.720s
      Time for var class.:        0.353s
Time for Analysis:               26.567s
CPU time for analysis:           26.570s
Total time for CPAchecker:       30.422s
Total CPU time for CPAchecker:   30.420s
Time for statistics:              0.089s

Time for Garbage Collector:       0.336s (in 57 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     46MB (    44 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     36MB (    34 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8019MB (  7648 MiB) max;   8010MB (  7639 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
