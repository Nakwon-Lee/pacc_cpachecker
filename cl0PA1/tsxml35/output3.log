scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--arcnet--com90xx.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_a0i17o7c/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5948: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_arcdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function probe_irq_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            12560 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  8552 (68%)
  Because of loop head:            3919 (31%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         89 (1%)
  Times precision was empty:       908 (7%)
  Times precision was {false}:     352 (3%)
  Times result was cached:         10229 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1071 (9%)
  Times result was 'false':        887 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         18590
  BDD entailment checks:           5118
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       47
Number of predicates discovered:          8
Number of abstraction locations:          70
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         33506
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 23.55
Number of irrelevant predicates:          7268 (22%)
Number of preds handled by boolean abs:   1980 (6%)
  Total number of models for allsat:      1069
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                  1.879s
  Time for path formula creation:        1.831s
Time for strengthen operator:            0.107s
Time for prec operator:                  5.761s
  Time for abstraction:                  5.506s (Max:     0.023s, Count: 12560)
    Boolean abstraction:                 1.091s
    Solving time:                        1.226s (Max:     0.015s)
    Model enumeration time:              0.094s
    Time for BDD construction:           0.048s (Max:     0.010s)
Time for merge operator:                 0.168s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):     1.320s

Number of path formula cache hits:   107958 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.683s

Total number of created targets for pointer analysis: 1942
   Number of created targets for uf: *(struct_net_device)* is 193
   Number of created targets for uf: *signed_int is 301
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               245
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2286 (count: 14445, min: 0, max: 177, avg: 0.16)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.392s
Automaton transfers with branching:                0
Automaton transfer successors:                       104865 (count: 104865, min: 1, max: 1, avg: 1.00) [1 x 104865]

CPA algorithm statistics
------------------------
Number of iterations:            68857
Max size of waitlist:            19
Average size of waitlist:        6
Number of computed successors:   80243
Max successors for one state:    2
Number of times merged:          6736
Number of times stopped:         9925
Number of times breaked:         89

Total time for CPA algorithm:        11.370s (Max:     0.469s)
  Time for choose from waitlist:      0.092s
  Time for precision adjustment:      6.372s
  Time for transfer relation:         3.703s
  Time for merge operator:            0.383s
  Time for stop operator:             0.206s
  Time for adding to reached set:     0.178s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   89
Avg. length of target path (in blocks):                3231 (count: 89, min: 10, max: 60, avg: 36.30)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.909s
  Counterexample analysis:                             1.336s (Max:     0.047s, Calls: 89)
    Refinement sat check:                              0.905s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.146s
  ARG update:                                          0.267s

Length of refined path (in blocks):                    3120 (count: 89, min: 6, max: 59, avg: 35.06)
Number of affected states:                             2934 (count: 89, min: 5, max: 57, avg: 32.97)
Length (states) of path with itp 'true':                 97 (count: 89, min: 0, max: 13, avg: 1.09)
Length (states) of path with itp non-trivial itp:      2934 (count: 89, min: 5, max: 57, avg: 32.97)
Length (states) of path with itp 'false':                89 (count: 89, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 89, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            2845 (count: 89, min: 4, max: 56, avg: 31.97)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                89
Number of successful refinements:     89
Number of failed refinements:         0
Max. size of reached set before ref.: 1389
Max. size of reached set after ref.:  135
Avg. size of reached set before ref.: 775.52
Avg. size of reached set after ref.:  7.31

Total time for CEGAR algorithm:      13.464s
Time for refinements:                 2.085s
Average time for refinement:          0.023s
Max time for refinement:              0.067s

Code Coverage
-----------------------------
  Function coverage:      0.309
  Visited lines:          1424
  Total lines:            1668
  Line coverage:          0.854
  Visited conditions:     258
  Total conditions:       342
  Condition coverage:     0.754

CPAchecker general statistics
-----------------------------
Number of program locations:     2136
Number of CFA edges:             2331
Number of relevant variables:    147
Number of functions:             55
Number of loops:                 18
Size of reached set:             1062
  Number of reached locations:   663 (31%)
    Avg states per location:     1
    Max states per location:     12 (at node N723)
  Number of reached functions:   17 (31%)
  Number of partitions:          1058
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N189 (before line 4887), Function com90xx_probe called from node N988, stack depth 3 [5c80bd18], stack [main, com90xx_init, com90xx_probe]])
  Number of target states:       0

Time for analysis setup:          3.250s
  Time for loading CPAs:          0.637s
  Time for loading parser:        0.512s
  Time for CFA construction:      2.041s
    Time for parsing file(s):     0.680s
    Time for AST to CFA:          0.630s
    Time for CFA sanity check:    0.126s
    Time for post-processing:     0.446s
      Time for var class.:        0.163s
Time for Analysis:               13.464s
CPU time for analysis:           13.470s
Time for analyzing result:        0.001s
Total time for CPAchecker:       16.716s
Total CPU time for CPAchecker:   16.700s
Time for statistics:              0.079s

Time for Garbage Collector:       0.290s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    42 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     33MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   8006MB (  7635 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
