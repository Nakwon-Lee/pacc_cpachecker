scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--ethernet--3com--3c59x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fkjit6xi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 11783: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5458: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5490: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5284-5285: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5349: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5381: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5317: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_vortex_pm_ops_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_thaw_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_freeze_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_freeze_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_thaw_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_netdev_ops_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_netdev_ops_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_boomrang_netdev_ops_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_boomrang_netdev_ops_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            48335 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  45192 (93%)
  Because of loop head:            3082 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (0%)
  Times precision was empty:       26491 (55%)
  Times precision was {false}:     885 (2%)
  Times result was cached:         20312 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      647 (1%)
  Times result was 'false':        1949 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         97512
  BDD entailment checks:           11806
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       100
Number of predicates discovered:          8
Number of abstraction locations:          54
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         46712
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 30.49
Number of irrelevant predicates:          32094 (69%)
Number of preds handled by boolean abs:   1129 (2%)
  Total number of models for allsat:      1000
  Max number of models for allsat:        16
  Avg number of models for allsat:        1.55

Time for post operator:                  8.277s
  Time for path formula creation:        8.081s
Time for strengthen operator:            0.450s
Time for prec operator:                  5.480s
  Time for abstraction:                  4.779s (Max:     0.042s, Count: 48335)
    Boolean abstraction:                 0.975s
    Solving time:                        0.787s (Max:     0.020s)
    Model enumeration time:              0.288s
    Time for BDD construction:           0.056s (Max:     0.011s)
Time for merge operator:                 0.988s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.071s
Total time for SMT solver (w/o itp):     1.076s

Number of path formula cache hits:   410101 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.026s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               501
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1510 (count: 47387, min: 0, max: 140, avg: 0.03)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.777s
  Time for transition matches:                         0.436s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       509327 (count: 509327, min: 1, max: 1, avg: 1.00) [1 x 509327]

CPA algorithm statistics
------------------------
Number of iterations:            283156
Max size of waitlist:            301
Average size of waitlist:        147
Number of computed successors:   344828
Max successors for one state:    2
Number of times merged:          42853
Number of times stopped:         47017
Number of times breaked:         61

Total time for CPA algorithm:        23.711s (Max:     1.647s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:      7.154s
  Time for transfer relation:        12.840s
  Time for merge operator:            1.607s
  Time for stop operator:             0.452s
  Time for adding to reached set:     0.464s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   61
Avg. length of target path (in blocks):                1242 (count: 61, min: 10, max: 29, avg: 20.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.608s
  Counterexample analysis:                             0.949s (Max:     0.034s, Calls: 61)
    Refinement sat check:                              0.790s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.060s
  ARG update:                                          0.523s

Length of refined path (in blocks):                     799 (count: 61, min: 4, max: 21, avg: 13.10)
Number of affected states:                              642 (count: 61, min: 1, max: 19, avg: 10.52)
Length (states) of path with itp 'true':                 96 (count: 61, min: 1, max: 2, avg: 1.57)
Length (states) of path with itp non-trivial itp:       642 (count: 61, min: 1, max: 19, avg: 10.52)
Length (states) of path with itp 'false':                61 (count: 61, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 61, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             581 (count: 61, min: 0, max: 18, avg: 9.52)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                61
Number of successful refinements:     61
Number of failed refinements:         0
Max. size of reached set before ref.: 6843
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 4807.59
Avg. size of reached set after ref.:  7.15

Total time for CEGAR algorithm:      25.517s
Time for refinements:                 1.796s
Average time for refinement:          0.029s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.293
  Visited lines:          1745
  Total lines:            5033
  Line coverage:          0.347
  Visited conditions:     424
  Total conditions:       1610
  Condition coverage:     0.263

CPAchecker general statistics
-----------------------------
Number of program locations:     7147
Number of CFA edges:             8275
Number of relevant variables:    983
Number of functions:             167
Number of loops:                 49
Size of reached set:             3035
  Number of reached locations:   808 (11%)
    Avg states per location:     3
    Max states per location:     103 (at node N563)
  Number of reached functions:   49 (29%)
  Number of partitions:          3032
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N5251 (before line 10868), Function main called from node N5234, stack depth 1 [73a6cc79], stack [main]])
  Number of target states:       0
  Size of final wait list        183

Time for analysis setup:          4.760s
  Time for loading CPAs:          0.704s
  Time for loading parser:        0.531s
  Time for CFA construction:      3.434s
    Time for parsing file(s):     0.943s
    Time for AST to CFA:          1.105s
    Time for CFA sanity check:    0.309s
    Time for post-processing:     0.868s
      Time for var class.:        0.408s
Time for Analysis:               25.517s
CPU time for analysis:           25.520s
Total time for CPAchecker:       30.285s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.108s

Time for Garbage Collector:       1.583s (in 126 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                146MB (   139 MiB) max;     75MB (    72 MiB) avg;    151MB (   144 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           192MB (   183 MiB) max;    139MB (   133 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
