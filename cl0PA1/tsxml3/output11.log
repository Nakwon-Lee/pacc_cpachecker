scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--ethernet--3com--3c59x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_g3k_l1e7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 11783: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5458: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5490: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5284-5285: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5349: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5381: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5317: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_vortex_pm_ops_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_thaw_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_freeze_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_freeze_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_thaw_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_netdev_ops_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_netdev_ops_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_boomrang_netdev_ops_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_boomrang_netdev_ops_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            49097 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  46838 (95%)
  Because of loop head:            2211 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         48 (0%)
  Times precision was empty:       39500 (80%)
  Times precision was {false}:     661 (1%)
  Times result was cached:         8533 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      403 (1%)
  Times result was 'false':        1363 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         98599
  BDD entailment checks:           10325
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       100
Number of predicates discovered:          10
Number of abstraction locations:          40
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         26565
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 24.97
Number of irrelevant predicates:          17353 (65%)
Number of preds handled by boolean abs:   950 (4%)
  Total number of models for allsat:      795
  Max number of models for allsat:        32
  Avg number of models for allsat:        1.97

Time for post operator:                  6.279s
  Time for path formula creation:        6.060s
Time for strengthen operator:            0.543s
Time for prec operator:                  5.562s
  Time for abstraction:                  4.731s (Max:     0.063s, Count: 49097)
    Boolean abstraction:                 1.206s
    Solving time:                        0.881s (Max:     0.048s)
    Model enumeration time:              0.406s
    Time for BDD construction:           0.080s (Max:     0.009s)
Time for merge operator:                 0.881s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):     1.287s

Number of path formula cache hits:   516962 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.659s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1148
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1092 (count: 55864, min: 0, max: 68, avg: 0.02)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.938s
  Time for transition matches:                         0.464s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       504362 (count: 504362, min: 1, max: 1, avg: 1.00) [1 x 504362]

CPA algorithm statistics
------------------------
Number of iterations:            298854
Max size of waitlist:            368
Average size of waitlist:        186
Number of computed successors:   359862
Max successors for one state:    2
Number of times merged:          44137
Number of times stopped:         48948
Number of times breaked:         48

Total time for CPA algorithm:        23.058s (Max:     1.870s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:      7.896s
  Time for transfer relation:        11.509s
  Time for merge operator:            1.502s
  Time for stop operator:             0.536s
  Time for adding to reached set:     0.389s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   48
Avg. length of target path (in blocks):                 681 (count: 48, min: 8, max: 18, avg: 14.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.663s
  Counterexample analysis:                             0.790s (Max:     0.031s, Calls: 48)
    Refinement sat check:                              0.611s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.063s
  ARG update:                                          0.742s

Length of refined path (in blocks):                     499 (count: 48, min: 4, max: 17, avg: 10.40)
Number of affected states:                              387 (count: 48, min: 1, max: 15, avg: 8.06)
Length (states) of path with itp 'true':                 64 (count: 48, min: 0, max: 2, avg: 1.33)
Length (states) of path with itp non-trivial itp:       387 (count: 48, min: 1, max: 15, avg: 8.06)
Length (states) of path with itp 'false':                48 (count: 48, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 48, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             339 (count: 48, min: 0, max: 14, avg: 7.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                48
Number of successful refinements:     48
Number of failed refinements:         0
Max. size of reached set before ref.: 10434
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 6410.04
Avg. size of reached set after ref.:  6.65

Total time for CEGAR algorithm:      25.049s
Time for refinements:                 1.989s
Average time for refinement:          0.041s
Max time for refinement:              0.092s

Code Coverage
-----------------------------
  Function coverage:      0.251
  Visited lines:          1666
  Total lines:            5033
  Line coverage:          0.331
  Visited conditions:     418
  Total conditions:       1610
  Condition coverage:     0.260

CPAchecker general statistics
-----------------------------
Number of program locations:     7147
Number of CFA edges:             8275
Number of relevant variables:    983
Number of functions:             167
Number of loops:                 49
Size of reached set:             2188
  Number of reached locations:   772 (11%)
    Avg states per location:     2
    Max states per location:     47 (at node N563)
  Number of reached functions:   42 (25%)
  Number of partitions:          2186
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N5251 (before line 10868), Function main called from node N5234, stack depth 1 [73a6cc79], stack [main]])
  Number of target states:       0
  Size of final wait list        138

Time for analysis setup:          5.320s
  Time for loading CPAs:          0.974s
  Time for loading parser:        0.442s
  Time for CFA construction:      3.790s
    Time for parsing file(s):     0.750s
    Time for AST to CFA:          1.206s
    Time for CFA sanity check:    0.412s
    Time for post-processing:     1.290s
      Time for var class.:        0.504s
Time for Analysis:               25.049s
CPU time for analysis:           25.050s
Total time for CPAchecker:       30.372s
Total CPU time for CPAchecker:   30.360s
Time for statistics:              0.086s

Time for Garbage Collector:       1.618s (in 125 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   116 MiB) max;     67MB (    64 MiB) avg;    131MB (   125 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           137MB (   130 MiB) max;    128MB (   122 MiB) avg
Allocated non-heap memory:        41MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8083MB (  7709 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
