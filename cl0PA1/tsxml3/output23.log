scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-drivers--net--ethernet--3com--3c59x.ko-main.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4bbjq1zm/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 11783: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 5458: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5490: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5284-5285: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5349: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5381: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5317: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_vortex_pm_ops_complete_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_suspend_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_restore_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_poweroff_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_poweroff_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_thaw_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_freeze_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_prepare_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_freeze_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_resume_noirq_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_thaw_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_resume_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_restore_early_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_pm_ops_suspend_late_5 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ethtool_op_get_link to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_netdev_ops_ndo_uninit_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_vortex_netdev_ops_ndo_init_3 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_mac_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_change_mtu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function eth_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_boomrang_netdev_ops_ndo_uninit_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_boomrang_netdev_ops_ndo_init_4 to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioport_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32_rep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_set_wakeup_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netdev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite8 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            62008 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  58156 (94%)
  Because of loop head:            3808 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (0%)
  Times precision was empty:       53053 (86%)
  Times precision was {false}:     637 (1%)
  Times result was cached:         8058 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      260 (0%)
  Times result was 'false':        1428 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         96679
  BDD entailment checks:           11679
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       100
Number of predicates discovered:          11
Number of abstraction locations:          37
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         28363
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 31.62
Number of irrelevant predicates:          22126 (78%)
Number of preds handled by boolean abs:   668 (2%)
  Total number of models for allsat:      595
  Max number of models for allsat:        32
  Avg number of models for allsat:        2.29

Time for post operator:                  7.278s
  Time for path formula creation:        7.005s
Time for strengthen operator:            0.444s
Time for prec operator:                  4.806s
  Time for abstraction:                  3.981s (Max:     0.096s, Count: 62008)
    Boolean abstraction:                 1.125s
    Solving time:                        0.843s (Max:     0.084s)
    Model enumeration time:              0.309s
    Time for BDD construction:           0.118s (Max:     0.012s)
Time for merge operator:                 0.774s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.046s
Total time for SMT solver (w/o itp):     1.152s

Number of path formula cache hits:   580350 (89%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.500s

Total number of created targets for pointer analysis: 2804
   Number of created targets for uf: *signed_int is 541
   Number of created targets for uf: *unsigned_int is 121
   Number of created targets for uf: *unsigned_long_int is 81


Number of BDD nodes:                               1129
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         886 (count: 69809, min: 0, max: 78, avg: 0.01)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.771s
  Time for transition matches:                         0.360s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       560290 (count: 560290, min: 1, max: 1, avg: 1.00) [1 x 560290]

CPA algorithm statistics
------------------------
Number of iterations:            334926
Max size of waitlist:            415
Average size of waitlist:        188
Number of computed successors:   395085
Max successors for one state:    2
Number of times merged:          42500
Number of times stopped:         48577
Number of times breaked:         44

Total time for CPA algorithm:        23.435s (Max:     1.584s)
  Time for choose from waitlist:      0.219s
  Time for precision adjustment:      7.001s
  Time for transfer relation:        12.837s
  Time for merge operator:            1.288s
  Time for stop operator:             0.457s
  Time for adding to reached set:     0.646s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   44
Avg. length of target path (in blocks):                 593 (count: 44, min: 8, max: 17, avg: 13.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.441s
  Counterexample analysis:                             0.668s (Max:     0.032s, Calls: 44)
    Refinement sat check:                              0.520s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.050s
  ARG update:                                          0.687s

Length of refined path (in blocks):                     398 (count: 44, min: 4, max: 15, avg: 9.05)
Number of affected states:                              294 (count: 44, min: 1, max: 13, avg: 6.68)
Length (states) of path with itp 'true':                 60 (count: 44, min: 0, max: 2, avg: 1.36)
Length (states) of path with itp non-trivial itp:       294 (count: 44, min: 1, max: 13, avg: 6.68)
Length (states) of path with itp 'false':                44 (count: 44, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 44, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             250 (count: 44, min: 0, max: 12, avg: 5.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                44
Number of successful refinements:     44
Number of failed refinements:         0
Max. size of reached set before ref.: 13465
Max. size of reached set after ref.:  8
Avg. size of reached set before ref.: 7611.64
Avg. size of reached set after ref.:  6.68

Total time for CEGAR algorithm:      25.340s
Time for refinements:                 1.905s
Average time for refinement:          0.043s
Max time for refinement:              0.243s

Code Coverage
-----------------------------
  Function coverage:      0.479
  Visited lines:          2486
  Total lines:            5033
  Line coverage:          0.494
  Visited conditions:     674
  Total conditions:       1610
  Condition coverage:     0.419

CPAchecker general statistics
-----------------------------
Number of program locations:     7147
Number of CFA edges:             8275
Number of relevant variables:    983
Number of functions:             167
Number of loops:                 49
Size of reached set:             10462
  Number of reached locations:   1614 (23%)
    Avg states per location:     6
    Max states per location:     303 (at node N563)
  Number of reached functions:   80 (48%)
  Number of partitions:          10434
    Avg size of partitions:      1
    Max size of partitions:      7 (with key [N5251 (before line 10868), Function main called from node N5234, stack depth 1 [73a6cc79], stack [main]])
  Number of target states:       0
  Size of final wait list        387

Time for analysis setup:          4.974s
  Time for loading CPAs:          0.752s
  Time for loading parser:        0.461s
  Time for CFA construction:      3.677s
    Time for parsing file(s):     0.717s
    Time for AST to CFA:          1.254s
    Time for CFA sanity check:    0.471s
    Time for post-processing:     1.116s
      Time for var class.:        0.496s
Time for Analysis:               25.340s
CPU time for analysis:           25.340s
Total time for CPAchecker:       30.317s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.299s

Time for Garbage Collector:       1.791s (in 131 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                125MB (   119 MiB) max;     69MB (    65 MiB) avg;    135MB (   129 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           147MB (   140 MiB) max;    130MB (   124 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8084MB (  7710 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
