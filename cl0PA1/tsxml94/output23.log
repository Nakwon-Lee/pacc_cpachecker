scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--net--ethernet--intel--e1000e--e1000e.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6bus93d6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 8938: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 10098: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 10153: Dead code detected: __ms___0 = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 13259: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 14309: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14667: Dead code detected: __ms = 5UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 15937: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17996: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18128: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 18493: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19453: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23268: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23815: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 26227: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 27434: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 27537: Dead code detected: __ptr = (u8 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 27542: Dead code detected: __ptr___0 = (u16 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

line 27552: Dead code detected: __ptr___2 = (u64 volatile *)(& v->counter); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (4UL) {
  case 1UL:
  __ptr = (u8 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgb %2,%1": "=a" (__ret),
                       "+m" (*__ptr): "q" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 2UL:
  __ptr___0 = (u16 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgw %2,%1": "=a" (__ret),
                       "+m" (*__ptr___0): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 4UL:
  __ptr___1 = (u32 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgl %2,%1": "=a" (__ret),
                       "+m" (*__ptr___1): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  case 8UL:
  __ptr___2 = (u64 volatile *)(& v->counter);
  __asm__ volatile (".pushsection .smp_locks,\"a\"\n.balign 4\n.long 671f - .\n.popsection\n671:\n\tlock; cmpxchgq %2,%1": "=a" (__ret),
                       "+m" (*__ptr___2): "r" (__new), "0" (__old): "memory");
  goto ldv_5494;
  default:
  __cmpxchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 27619: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27622: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 27625: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6216;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6216;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6216;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_6216;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 34630: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 36820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 24260: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24293: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27862: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 24064-24065: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 27795-27796: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24184: Function pointer *(ops->mapping_error) with type int (*)(struct device *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24131: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27925: Function pointer *(ops->sync_single_for_cpu) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24164: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27958: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27892: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 24098: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 27829: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 13868: Function pointer *(hw->phy.ops.set_page) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10955-10956: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10957-10958: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10960-10961: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 10962-10963: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35151: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35154: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 35155: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 35106-35107: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 35108-35109: Function pointer *(hw->phy.ops.write_reg_page) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6385: Function pointer *(hw->nvm.ops.read) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 22685: Function pointer *(hw->phy.ops.set_d0_lplu_state) with type s32 (*)(struct e1000_hw *, bool ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6395: Function pointer *(hw->nvm.ops.write) with type s32 (*)(struct e1000_hw *, u16 , u16 , u16 *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 33513: Function pointer *(hw->phy.ops.set_page) with type s32 (*)(struct e1000_hw *, u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 6357: Function pointer *(hw->phy.ops.write_reg) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9123: Function pointer *(hw->phy.ops.write_reg_locked) with type s32 (*)(struct e1000_hw *, u32 , u16 ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 14058: Destroying the void* pointer ldv_successful_malloc::p produces garbage or the memory pointed by it is unused: e1000_rev_polarity_p1 = ldv_successful_malloc(4); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6385: Ignoring function call through function pointer *(hw->nvm.ops.read): tmp = (*(hw->nvm.ops.read))(hw, (int)offset, (int)words, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 6395: Ignoring function call through function pointer *(hw->nvm.ops.write): tmp = (*(hw->nvm.ops.write))(hw, (int)offset, (int)words, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __dynamic_netdev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6348: Ignoring function call through function pointer *(hw->phy.ops.read_reg): tmp = (*(hw->phy.ops.read_reg))(hw, offset, data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6357: Ignoring function call through function pointer *(hw->phy.ops.write_reg): tmp = (*(hw->phy.ops.write_reg))(hw, offset, (int)data); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function usleep_range to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11682 (23% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10321 (88%)
  Because of loop head:            1354 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       11585 (99%)
  Times precision was {false}:     38 (0%)
  Times result was cached:         28 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31 (0%)
  Times result was 'false':        28 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         4260
  BDD entailment checks:           1972
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       91
Number of predicates discovered:          7
Number of abstraction locations:          9
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         209
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.03
Number of irrelevant predicates:          96 (46%)
Number of preds handled by boolean abs:   86 (41%)
  Total number of models for allsat:      32
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.03

Time for post operator:                  6.656s
  Time for path formula creation:        6.584s
Time for strengthen operator:            0.124s
Time for prec operator:                  1.131s
  Time for abstraction:                  0.384s (Max:     0.018s, Count: 11682)
    Boolean abstraction:                 0.048s
    Solving time:                        0.052s (Max:     0.012s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.011s (Max:     0.007s)
Time for merge operator:                 0.447s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.056s

Number of path formula cache hits:   6394 (12%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.351s

Total number of created targets for pointer analysis: 7575
   Number of created targets for uf: *enum_e1000_bus_width is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_4,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_short_int],_Parameter_3_type:_[unsigned_short_int],_Parameter_4_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 5
   Number of created targets for uf: *unsigned_long_int is 2
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 4
   Number of created targets for uf: *signed_int is 203
   Number of created targets for uf: *unsigned_char is 4
   Number of created targets for uf: *enum_e1000_mac_type is 15
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[(unsigned_short_int)*],_Parameter_3_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 3
   Number of created targets for uf: *(Return_type:_[_Bool],_Parameters:_1,_Parameter_1_type:_[(struct_e1000_hw)*],_VarArgs:_false)* is 5
   Number of created targets for uf: *unsigned_int is 61
   Number of created targets for uf: *(void)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_short_int],_VarArgs:_false)* is 3
   Number of created targets for uf: *enum_e1000_phy_type is 3
   Number of created targets for uf: *enum_e1000_nvm_type is 4
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[(unsigned_char)*],_Parameter_3_type:_[unsigned_int],_VarArgs:_false)* is 3
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 2
   Number of created targets for uf: *unsigned_short_int is 24
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[(unsigned_short_int)*],_VarArgs:_false)* is 7
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_2,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[_Bool],_VarArgs:_false)* is 2
   Number of created targets for uf: *(struct_e1000_adapter)* is 2
   Number of created targets for uf: *_Bool is 16
   Number of created targets for uf: *enum_e1000_media_type is 5
   Number of created targets for uf: *(Return_type:_[void],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_int],_VarArgs:_false)* is 2
   Number of created targets for uf: *(Return_type:_[signed_int],_Parameters:_3,_Parameter_1_type:_[(struct_e1000_hw)*],_Parameter_2_type:_[unsigned_int],_Parameter_3_type:_[unsigned_short_int],_VarArgs:_false)* is 9


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         155 (count: 13998, min: 0, max: 80, avg: 0.01)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.297s
Automaton transfers with branching:                0
Automaton transfer successors:                        50758 (count: 50758, min: 1, max: 1, avg: 1.00) [1 x 50758]

CPA algorithm statistics
------------------------
Number of iterations:            33743
Max size of waitlist:            168
Average size of waitlist:        141
Number of computed successors:   37232
Max successors for one state:    2
Number of times merged:          1144
Number of times stopped:         3107
Number of times breaked:         7

Total time for CPA algorithm:        16.394s (Max:    14.294s)
  Time for choose from waitlist:      0.096s
  Time for precision adjustment:      1.658s
  Time for transfer relation:        13.298s
  Time for merge operator:            0.603s
  Time for stop operator:             0.194s
  Time for adding to reached set:     0.150s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                 382 (count: 7, min: 54, max: 56, avg: 54.57)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.242s
  Counterexample analysis:                             1.198s (Max:     0.215s, Calls: 7)
    Refinement sat check:                              1.069s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.005s
  ARG update:                                          0.008s

Length of refined path (in blocks):                     372 (count: 7, min: 52, max: 55, avg: 53.14)
Number of affected states:                               23 (count: 7, min: 3, max: 5, avg: 3.29)
Length (states) of path with itp 'true':                342 (count: 7, min: 48, max: 49, avg: 48.86)
Length (states) of path with itp non-trivial itp:        23 (count: 7, min: 3, max: 5, avg: 3.29)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 7, min: 2, max: 4, avg: 2.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 451
Max. size of reached set after ref.:  174
Avg. size of reached set before ref.: 416.00
Avg. size of reached set after ref.:  173.57

Total time for CEGAR algorithm:      17.669s
Time for refinements:                 1.274s
Average time for refinement:          0.182s
Max time for refinement:              0.234s

Code Coverage
-----------------------------
  Function coverage:      0.121
  Visited lines:          2574
  Total lines:            19070
  Line coverage:          0.135
  Visited conditions:     512
  Total conditions:       28502
  Condition coverage:     0.018

CPAchecker general statistics
-----------------------------
Number of program locations:     60234
Number of CFA edges:             87865
Number of relevant variables:    4479
Number of functions:             812
Number of loops:                 187
Size of reached set:             32399
  Number of reached locations:   1417 (2%)
    Avg states per location:     22
    Max states per location:     920 (at node N0)
  Number of reached functions:   98 (12%)
  Number of partitions:          32398
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N7283 (before line 14230), Function main called from node N6938, stack depth 1 [48816424], stack [main]])
  Number of target states:       0
  Size of final wait list        137

Time for analysis setup:         12.613s
  Time for loading CPAs:          1.214s
  Time for loading parser:        0.474s
  Time for CFA construction:     10.805s
    Time for parsing file(s):     1.061s
    Time for AST to CFA:          2.935s
    Time for CFA sanity check:    1.574s
    Time for post-processing:     5.459s
      Time for var class.:        3.084s
Time for Analysis:               17.669s
CPU time for analysis:           17.680s
Total time for CPAchecker:       30.289s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.782s

Time for Garbage Collector:       2.028s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                224MB (   213 MiB) max;    132MB (   126 MiB) avg;    235MB (   224 MiB) peak
Used non-heap memory:             46MB (    44 MiB) max;     35MB (    34 MiB) avg;     46MB (    44 MiB) peak
Allocated heap memory:           233MB (   222 MiB) max;    208MB (   198 MiB) avg
Allocated non-heap memory:        48MB (    45 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8070MB (  7696 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
