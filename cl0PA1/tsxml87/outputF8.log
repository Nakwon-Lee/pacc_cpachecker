scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--be2iscsi--be2iscsi.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_e4u10lba/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9234: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9419: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9422: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9425: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 17060: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18235: Dead code detected: return (rc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18808: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19581: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 20220: Dead code detected: return (-6); (CFACreationUtils.addEdgeToCFA, INFO)

line 20508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7385: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7418: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9707-9708: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9741: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_register_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_unregister_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_destroy_iface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segment_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9741: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7385: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_sched to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_next to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sg_copy_to_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7418: Ignoring function call through function pointer *(ops->free): (*(ops->free))(dev, size, vaddr, bus, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function sg_copy_from_buffer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bsg_job_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_for_each_session to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cancel_delayed_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_boot_destroy_kset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __alloc_workqueue_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_boot_create_host_kset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_boot_create_target to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_boot_create_initiator to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_boot_create_ethernet to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_create_iface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_delayed_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3793679 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3176589 (84%)
  Because of loop head:            615889 (16%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1201 (0%)
  Times precision was empty:       169559 (4%)
  Times precision was {false}:     7631 (0%)
  Times result was cached:         3595256 (95%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21233 (1%)
  Times result was 'false':        152596 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         4270599
  BDD entailment checks:           856343
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          20
Number of abstraction locations:          863
Max number of predicates per location:    10
Avg number of predicates per location:    3
Total predicates per abstraction:         12337654
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 427.44
Number of irrelevant predicates:          2088073 (17%)
Number of preds handled by boolean abs:   37392 (0%)
  Total number of models for allsat:      22470
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.06

Time for post operator:                119.279s
  Time for path formula creation:      113.046s
Time for strengthen operator:           15.092s
Time for prec operator:                382.555s
  Time for abstraction:                345.527s (Max:     1.854s, Count: 3793679)
    Boolean abstraction:                14.380s
    Solving time:                       16.571s (Max:     0.083s)
    Model enumeration time:              1.309s
    Time for BDD construction:           0.238s (Max:     0.009s)
Time for merge operator:                11.462s
Time for coverage check:                 0.855s
  Time for BDD entailment checks:        0.504s
Total time for SMT solver (w/o itp):    17.880s

Number of path formula cache hits:   29108032 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    34.540s

Total number of created targets for pointer analysis: 15412
   Number of created targets for uf: *unsigned_short_int is 4001
   Number of created targets for uf: *(void)* is 27
   Number of created targets for uf: *(struct_hwi_context_memory)* is 16
   Number of created targets for uf: *(struct_mem_array)* is 8
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *(struct_list_head)* is 3
   Number of created targets for uf: *unsigned_long_long_int is 36
   Number of created targets for uf: *(struct_be_mcc_wrb)* is 23
   Number of created targets for uf: *unsigned_int is 42


Number of BDD nodes:                               773
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       42714 (count: 1242267, min: 0, max: 1039, avg: 0.03)
Time for BDD node cleanup:                             0.154s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 20.556s
  Time for transition matches:                        10.970s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.017s
Automaton transfers with branching:                0
Automaton transfer successors:                     24790682 (count: 24790682, min: 1, max: 1, avg: 1.00) [1 x 24790682]

CPA algorithm statistics
------------------------
Number of iterations:            15848528
Max size of waitlist:            216
Average size of waitlist:        69
Number of computed successors:   18402334
Max successors for one state:    2
Number of times merged:          1707128
Number of times stopped:         2327273
Number of times breaked:         1201

Total time for CPA algorithm:       817.742s (Max:     4.560s)
  Time for choose from waitlist:      4.140s
  Time for precision adjustment:    453.586s
  Time for transfer relation:       288.953s
  Time for merge operator:           21.490s
  Time for stop operator:            11.553s
  Time for adding to reached set:    14.731s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1201
Avg. length of target path (in blocks):               93909 (count: 1201, min: 7, max: 550, avg: 78.19)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  57.256s
  Counterexample analysis:                            28.677s (Max:     0.308s, Calls: 1201)
    Refinement sat check:                             12.897s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.052s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.303s
  Precision update:                                    1.326s
  ARG update:                                         26.376s

Length of refined path (in blocks):                   81874 (count: 1201, min: 6, max: 549, avg: 68.17)
Number of affected states:                            71832 (count: 1201, min: 0, max: 547, avg: 59.81)
Length (states) of path with itp 'true':               8841 (count: 1201, min: 1, max: 128, avg: 7.36)
Length (states) of path with itp non-trivial itp:     71832 (count: 1201, min: 0, max: 547, avg: 59.81)
Length (states) of path with itp 'false':              1201 (count: 1201, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           2 (count: 1201, min: 0, max: 1, avg: 0.00)
Equal non-trivial interpolants along paths:           70785 (count: 1201, min: 0, max: 546, avg: 58.94)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1201
Number of successful refinements:     1201
Number of failed refinements:         0
Max. size of reached set before ref.: 95350
Max. size of reached set after ref.:  62003
Avg. size of reached set before ref.: 20378.18
Avg. size of reached set after ref.:  7161.16

Total time for CEGAR algorithm:     894.307s
Time for refinements:                70.939s
Average time for refinement:          0.059s
Max time for refinement:              1.603s

Code Coverage
-----------------------------
  Function coverage:      0.463
  Visited lines:          4366
  Total lines:            9301
  Line coverage:          0.469
  Visited conditions:     944
  Total conditions:       2700
  Condition coverage:     0.350

CPAchecker general statistics
-----------------------------
Number of program locations:     12873
Number of CFA edges:             15247
Number of relevant variables:    2524
Number of functions:             356
Number of loops:                 81
Size of reached set:             48824
  Number of reached locations:   2838 (22%)
    Avg states per location:     17
    Max states per location:     893 (at node N8948)
  Number of reached functions:   165 (46%)
  Number of partitions:          48483
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N5421 (before lines 13266-13267), Function beiscsi_alloc_mem called from node N5516, stack depth 6 [32616e4], stack [main, beiscsi_dev_probe, beiscsi_init_port, beiscsi_init_controller, beiscsi_get_memory, beiscsi_alloc_mem]])
  Number of target states:       0
  Size of final wait list        91

Time for analysis setup:          5.961s
  Time for loading CPAs:          0.754s
  Time for loading parser:        0.427s
  Time for CFA construction:      4.699s
    Time for parsing file(s):     1.086s
    Time for AST to CFA:          1.704s
    Time for CFA sanity check:    0.460s
    Time for post-processing:     1.271s
      Time for var class.:        0.600s
Time for Analysis:              894.307s
CPU time for analysis:          894.250s
Total time for CPAchecker:      900.271s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.610s

Time for Garbage Collector:     107.738s (in 2151 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                957MB (   913 MiB) max;    426MB (   407 MiB) avg;   1007MB (   960 MiB) peak
Used non-heap memory:             43MB (    41 MiB) max;     42MB (    40 MiB) avg;     43MB (    41 MiB) peak
Allocated heap memory:          1025MB (   978 MiB) max;    621MB (   593 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   8288MB (  7904 MiB) max;   8185MB (  7806 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
