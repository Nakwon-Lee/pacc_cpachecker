scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--be2iscsi--be2iscsi.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yi699lj7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9234: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9419: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9422: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9425: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 17060: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18235: Dead code detected: return (rc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18808: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19581: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 20220: Dead code detected: return (-6); (CFACreationUtils.addEdgeToCFA, INFO)

line 20508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7385: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7418: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9707-9708: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9741: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_register_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_unregister_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segment_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_destroy_iface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_sched to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioremap_nocache to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 9741: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_weight to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_remove to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7385: Ignoring function call through function pointer *(ops->alloc): memory = (*(ops->alloc))(dev, size, dma_handle, tmp___1, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            62960 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  56776 (90%)
  Because of loop head:            6073 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         111 (0%)
  Times precision was empty:       39515 (63%)
  Times precision was {false}:     570 (1%)
  Times result was cached:         21640 (34%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1235 (2%)
  Times result was 'false':        1166 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         55754
  BDD entailment checks:           14998
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          8
Number of abstraction locations:          119
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         66415
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 36.80
Number of irrelevant predicates:          34297 (52%)
Number of preds handled by boolean abs:   2091 (3%)
  Total number of models for allsat:      1235
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.428s
  Time for path formula creation:        5.198s
Time for strengthen operator:            0.459s
Time for prec operator:                  7.176s
  Time for abstraction:                  6.400s (Max:     0.022s, Count: 62960)
    Boolean abstraction:                 1.382s
    Solving time:                        1.537s (Max:     0.014s)
    Model enumeration time:              0.157s
    Time for BDD construction:           0.070s (Max:     0.008s)
Time for merge operator:                 0.259s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     1.694s

Number of path formula cache hits:   485745 (92%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.116s

Total number of created targets for pointer analysis: 121
   Number of created targets for uf: *unsigned_char is 21
   Number of created targets for uf: *unsigned_long_long_int is 43


Number of BDD nodes:                               240
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2601 (count: 64872, min: 0, max: 108, avg: 0.04)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.798s
  Time for transition matches:                         0.408s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       451181 (count: 451181, min: 1, max: 1, avg: 1.00) [1 x 451181]

CPA algorithm statistics
------------------------
Number of iterations:            246577
Max size of waitlist:            104
Average size of waitlist:        52
Number of computed successors:   285220
Max successors for one state:    2
Number of times merged:          20378
Number of times stopped:         28691
Number of times breaked:         111

Total time for CPA algorithm:        22.761s (Max:     0.807s)
  Time for choose from waitlist:      0.191s
  Time for precision adjustment:      8.951s
  Time for transfer relation:        11.281s
  Time for merge operator:            0.578s
  Time for stop operator:             0.403s
  Time for adding to reached set:     0.389s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   111
Avg. length of target path (in blocks):                1837 (count: 111, min: 7, max: 25, avg: 16.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.318s
  Counterexample analysis:                             0.647s (Max:     0.016s, Calls: 111)
    Refinement sat check:                              0.449s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.071s
  ARG update:                                          0.508s

Length of refined path (in blocks):                    1691 (count: 111, min: 6, max: 24, avg: 15.23)
Number of affected states:                             1434 (count: 111, min: 1, max: 22, avg: 12.92)
Length (states) of path with itp 'true':                146 (count: 111, min: 1, max: 8, avg: 1.32)
Length (states) of path with itp non-trivial itp:      1434 (count: 111, min: 1, max: 22, avg: 12.92)
Length (states) of path with itp 'false':               111 (count: 111, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 111, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1323 (count: 111, min: 0, max: 21, avg: 11.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                111
Number of successful refinements:     111
Number of failed refinements:         0
Max. size of reached set before ref.: 3288
Max. size of reached set after ref.:  1881
Avg. size of reached set before ref.: 2366.50
Avg. size of reached set after ref.:  87.41

Total time for CEGAR algorithm:      24.383s
Time for refinements:                 1.604s
Average time for refinement:          0.014s
Max time for refinement:              0.045s

Code Coverage
-----------------------------
  Function coverage:      0.242
  Visited lines:          2482
  Total lines:            9301
  Line coverage:          0.267
  Visited conditions:     410
  Total conditions:       2700
  Condition coverage:     0.152

CPAchecker general statistics
-----------------------------
Number of program locations:     12873
Number of CFA edges:             15247
Number of relevant variables:    2524
Number of functions:             356
Number of loops:                 81
Size of reached set:             2384
  Number of reached locations:   1175 (9%)
    Avg states per location:     2
    Max states per location:     26 (at node N217)
  Number of reached functions:   86 (24%)
  Number of partitions:          2374
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N8878 (before line 16984), Function main called from node N8745, stack depth 1 [3ee200ae], stack [main]])
  Number of target states:       0
  Size of final wait list        65

Time for analysis setup:          5.952s
  Time for loading CPAs:          0.917s
  Time for loading parser:        0.445s
  Time for CFA construction:      4.496s
    Time for parsing file(s):     0.867s
    Time for AST to CFA:          1.630s
    Time for CFA sanity check:    0.594s
    Time for post-processing:     1.287s
      Time for var class.:        0.638s
Time for Analysis:               24.383s
CPU time for analysis:           24.380s
Total time for CPAchecker:       30.338s
Total CPU time for CPAchecker:   30.320s
Time for statistics:              0.103s

Time for Garbage Collector:       1.035s (in 131 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   105 MiB) max;     78MB (    74 MiB) avg;    116MB (   110 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     41MB (    39 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        49MB (    46 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
