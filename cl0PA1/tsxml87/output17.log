scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--scsi--be2iscsi--be2iscsi.ko-ldv_main1_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1e64z4xk/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 9234: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 9419: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9422: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 9425: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2861;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 17060: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 18235: Dead code detected: return (rc); (CFACreationUtils.addEdgeToCFA, INFO)

line 18808: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 19581: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 20220: Dead code detected: return (-6); (CFACreationUtils.addEdgeToCFA, INFO)

line 20508: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 7385: Function pointer *(ops->alloc) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 7418: Function pointer *(ops->free) with type void (*)(struct device *, size_t , void *, dma_addr_t , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 9707-9708: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 9741: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_register_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_unregister_transport to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_pool_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_queue_max_segment_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite32 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_destroy_iface to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iscsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_is_host_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_sched to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function destroy_workqueue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function blk_iopoll_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_msix to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            37509 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  33118 (88%)
  Because of loop head:            4284 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         107 (0%)
  Times precision was empty:       18309 (49%)
  Times precision was {false}:     500 (1%)
  Times result was cached:         17502 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1198 (3%)
  Times result was 'false':        1255 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         30241
  BDD entailment checks:           10847
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          8
Number of abstraction locations:          111
Max number of predicates per location:    5
Avg number of predicates per location:    3
Total predicates per abstraction:         53872
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 31.73
Number of irrelevant predicates:          23168 (43%)
Number of preds handled by boolean abs:   2034 (4%)
  Total number of models for allsat:      1198
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  5.740s
  Time for path formula creation:        5.501s
Time for strengthen operator:            0.381s
Time for prec operator:                  8.647s
  Time for abstraction:                  7.932s (Max:     0.027s, Count: 37509)
    Boolean abstraction:                 1.715s
    Solving time:                        1.981s (Max:     0.015s)
    Model enumeration time:              0.112s
    Time for BDD construction:           0.132s (Max:     0.009s)
Time for merge operator:                 0.236s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.050s
Total time for SMT solver (w/o itp):     2.093s

Number of path formula cache hits:   284789 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.642s

Total number of created targets for pointer analysis: 38
   Number of created targets for uf: *unsigned_long_long_int is 39


Number of BDD nodes:                               239
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2525 (count: 38943, min: 0, max: 104, avg: 0.06)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.682s
  Time for transition matches:                         0.347s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       281789 (count: 281789, min: 1, max: 1, avg: 1.00) [1 x 281789]

CPA algorithm statistics
------------------------
Number of iterations:            145255
Max size of waitlist:            107
Average size of waitlist:        47
Number of computed successors:   169580
Max successors for one state:    2
Number of times merged:          9697
Number of times stopped:         15172
Number of times breaked:         107

Total time for CPA algorithm:        22.870s (Max:     0.896s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:     10.106s
  Time for transfer relation:        10.311s
  Time for merge operator:            0.521s
  Time for stop operator:             0.454s
  Time for adding to reached set:     0.333s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   107
Avg. length of target path (in blocks):                1803 (count: 107, min: 7, max: 27, avg: 16.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.562s
  Counterexample analysis:                             0.909s (Max:     0.019s, Calls: 107)
    Refinement sat check:                              0.627s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.068s
  Precision update:                                    0.066s
  ARG update:                                          0.468s

Length of refined path (in blocks):                    1661 (count: 107, min: 6, max: 26, avg: 15.52)
Number of affected states:                             1412 (count: 107, min: 1, max: 24, avg: 13.20)
Length (states) of path with itp 'true':                142 (count: 107, min: 1, max: 8, avg: 1.33)
Length (states) of path with itp non-trivial itp:      1412 (count: 107, min: 1, max: 24, avg: 13.20)
Length (states) of path with itp 'false':               107 (count: 107, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 107, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            1305 (count: 107, min: 0, max: 23, avg: 12.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                107
Number of successful refinements:     107
Number of failed refinements:         0
Max. size of reached set before ref.: 2024
Max. size of reached set after ref.:  924
Avg. size of reached set before ref.: 1462.86
Avg. size of reached set after ref.:  45.51

Total time for CEGAR algorithm:      24.660s
Time for refinements:                 1.787s
Average time for refinement:          0.016s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.199
  Visited lines:          2253
  Total lines:            9301
  Line coverage:          0.242
  Visited conditions:     330
  Total conditions:       2700
  Condition coverage:     0.122

CPAchecker general statistics
-----------------------------
Number of program locations:     12873
Number of CFA edges:             15247
Number of relevant variables:    2524
Number of functions:             356
Number of loops:                 81
Size of reached set:             1497
  Number of reached locations:   907 (7%)
    Avg states per location:     1
    Max states per location:     15 (at node N8876)
  Number of reached functions:   71 (20%)
  Number of partitions:          1497
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        35

Time for analysis setup:          5.711s
  Time for loading CPAs:          0.731s
  Time for loading parser:        0.449s
  Time for CFA construction:      4.420s
    Time for parsing file(s):     0.827s
    Time for AST to CFA:          1.693s
    Time for CFA sanity check:    0.443s
    Time for post-processing:     1.281s
      Time for var class.:        0.684s
Time for Analysis:               24.660s
CPU time for analysis:           24.660s
Total time for CPAchecker:       30.374s
Total CPU time for CPAchecker:   30.350s
Time for statistics:              0.093s

Time for Garbage Collector:       0.852s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 94MB (    90 MiB) max;     65MB (    62 MiB) avg;     99MB (    94 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     36MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
