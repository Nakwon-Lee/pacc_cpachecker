scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/loops/string_true-unreach-call_true-termination.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1npmu048/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            182 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            170 (93%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (7%)
  Times precision was empty:       53 (29%)
  Times precision was {false}:     47 (26%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      82 (45%)
  Times result was 'false':        43 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         226
  BDD entailment checks:           158
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          7
Number of abstraction locations:          4
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         435
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 3.37
Number of irrelevant predicates:          104 (24%)
Number of preds handled by boolean abs:   331 (76%)
  Total number of models for allsat:      72
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.88

Time for post operator:                  0.299s
  Time for path formula creation:        0.292s
Time for strengthen operator:            0.014s
Time for prec operator:                  0.538s
  Time for abstraction:                  0.506s (Max:     0.017s, Count: 182)
    Boolean abstraction:                 0.228s
    Solving time:                        0.201s (Max:     0.013s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.012s (Max:     0.003s)
Time for merge operator:                 0.015s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):     0.205s

Number of path formula cache hits:   461 (43%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.258s

Total number of created targets for pointer analysis: 175
   Number of created targets for uf: *char is 6


Number of BDD nodes:                               312
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 1088, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                         1031 (count: 1031, min: 1, max: 1, avg: 1.00) [1 x 1031]

CPA algorithm statistics
------------------------
Number of iterations:            755
Max size of waitlist:            3
Average size of waitlist:        2
Number of computed successors:   889
Max successors for one state:    2
Number of times merged:          34
Number of times stopped:         72
Number of times breaked:         11

Total time for CPA algorithm:         1.159s (Max:     0.208s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:      0.597s
  Time for transfer relation:         0.448s
  Time for merge operator:            0.025s
  Time for stop operator:             0.015s
  Time for adding to reached set:     0.007s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 121 (count: 11, min: 6, max: 16, avg: 11.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.127s
  Counterexample analysis:                             0.098s (Max:     0.016s, Calls: 11)
    Refinement sat check:                              0.061s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.003s
  ARG update:                                          0.012s

Length of refined path (in blocks):                      76 (count: 11, min: 2, max: 16, avg: 6.91)
Number of affected states:                               30 (count: 11, min: 0, max: 5, avg: 2.73)
Length (states) of path with itp 'true':                 35 (count: 11, min: 0, max: 15, avg: 3.18)
Length (states) of path with itp non-trivial itp:        30 (count: 11, min: 0, max: 5, avg: 2.73)
Length (states) of path with itp 'false':                10 (count: 11, min: 0, max: 1, avg: 0.91)
Different non-trivial interpolants along paths:          20 (count: 11, min: 0, max: 4, avg: 1.82)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 127
Max. size of reached set after ref.:  126
Avg. size of reached set before ref.: 87.00
Avg. size of reached set after ref.:  28.73

Total time for CEGAR algorithm:       1.305s
Time for refinements:                 0.146s
Average time for refinement:          0.013s
Max time for refinement:              0.033s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          28
  Total lines:            28
  Line coverage:          1.000
  Visited conditions:     26
  Total conditions:       26
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     79
Number of CFA edges:             91
Number of relevant variables:    10
Number of functions:             2
Number of loops:                 5
Size of reached set:             134
  Number of reached locations:   51 (65%)
    Avg states per location:     2
    Max states per location:     14 (at node N8)
  Number of reached functions:   2 (100%)
  Number of partitions:          124
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N19 (before line 19), Function main called from node N9, stack depth 1 [3646a422], stack [main]])
  Number of target states:       0

Time for analysis setup:          2.083s
  Time for loading CPAs:          0.616s
  Time for loading parser:        0.646s
  Time for CFA construction:      0.720s
    Time for parsing file(s):     0.262s
    Time for AST to CFA:          0.166s
    Time for CFA sanity check:    0.017s
    Time for post-processing:     0.145s
      Time for var class.:        0.038s
Time for Analysis:                1.305s
CPU time for analysis:            1.310s
Time for analyzing result:        0.008s
Total time for CPAchecker:        3.392s
Total CPU time for CPAchecker:    3.390s
Time for statistics:              0.041s

Time for Garbage Collector:       0.093s (in 4 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 46MB (    43 MiB) max;     27MB (    26 MiB) avg;     62MB (    59 MiB) peak
Used non-heap memory:             30MB (    29 MiB) max;     23MB (    22 MiB) avg;     32MB (    30 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        33MB (    32 MiB) max;     25MB (    24 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8056MB (  7682 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
