scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec5_product32_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ic2lslye/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 51: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 74: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 177: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 331: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 951: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 983: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 992: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 694: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2356 (28% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2305 (98%)
  Because of loop head:            35 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         16 (1%)
  Times precision was empty:       437 (19%)
  Times precision was {false}:     50 (2%)
  Times result was cached:         1734 (74%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      135 (6%)
  Times result was 'false':        238 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         591
  BDD entailment checks:           337
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          5
Number of abstraction locations:          47
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         2692
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 14.55
Number of irrelevant predicates:          939 (35%)
Number of preds handled by boolean abs:   190 (7%)
  Total number of models for allsat:      145
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.07

Time for post operator:                  0.744s
  Time for path formula creation:        0.705s
Time for strengthen operator:            0.047s
Time for prec operator:                  1.220s
  Time for abstraction:                  1.093s (Max:     0.017s, Count: 2356)
    Boolean abstraction:                 0.159s
    Solving time:                        0.131s (Max:     0.016s)
    Model enumeration time:              0.014s
    Time for BDD construction:           0.015s (Max:     0.004s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.024s
Total time for SMT solver (w/o itp):     0.145s

Number of path formula cache hits:   5133 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.656s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               211
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         179 (count: 1861, min: 0, max: 92, avg: 0.10)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.134s
Automaton transfers with branching:                0
Automaton transfer successors:                         8516 (count: 8516, min: 1, max: 1, avg: 1.00) [1 x 8516]

CPA algorithm statistics
------------------------
Number of iterations:            6583
Max size of waitlist:            15
Average size of waitlist:        6
Number of computed successors:   7324
Max successors for one state:    2
Number of times merged:          127
Number of times stopped:         412
Number of times breaked:         16

Total time for CPA algorithm:         3.611s (Max:     0.406s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:      1.562s
  Time for transfer relation:         1.479s
  Time for merge operator:            0.092s
  Time for stop operator:             0.123s
  Time for adding to reached set:     0.139s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   16
Avg. length of target path (in blocks):                 778 (count: 16, min: 32, max: 70, avg: 48.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.387s
  Counterexample analysis:                             0.224s (Max:     0.031s, Calls: 16)
    Refinement sat check:                              0.113s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.026s
  ARG update:                                          0.059s

Length of refined path (in blocks):                     492 (count: 16, min: 19, max: 54, avg: 30.75)
Number of affected states:                              410 (count: 16, min: 6, max: 53, avg: 25.63)
Length (states) of path with itp 'true':                 66 (count: 16, min: 0, max: 14, avg: 4.13)
Length (states) of path with itp non-trivial itp:       410 (count: 16, min: 6, max: 53, avg: 25.63)
Length (states) of path with itp 'false':                16 (count: 16, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 16, min: 0, max: 1, avg: 0.06)
Equal non-trivial interpolants along paths:             393 (count: 16, min: 5, max: 52, avg: 24.56)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                16
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 954
Max. size of reached set after ref.:  637
Avg. size of reached set before ref.: 538.25
Avg. size of reached set after ref.:  172.50

Total time for CEGAR algorithm:       4.075s
Time for refinements:                 0.462s
Average time for refinement:          0.028s
Max time for refinement:              0.091s

Code Coverage
-----------------------------
  Function coverage:      0.525
  Visited lines:          115
  Total lines:            444
  Line coverage:          0.259
  Visited conditions:     34
  Total conditions:       74
  Condition coverage:     0.459

CPAchecker general statistics
-----------------------------
Number of program locations:     645
Number of CFA edges:             697
Number of relevant variables:    116
Number of functions:             40
Number of loops:                 5
Size of reached set:             823
  Number of reached locations:   158 (24%)
    Avg states per location:     5
    Max states per location:     30 (at node N278)
  Number of reached functions:   21 (53%)
  Number of partitions:          816
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N235 (before lines 432-481), Function test called from node N71, stack depth 3 [3913f206], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.322s
  Time for loading CPAs:          0.875s
  Time for loading parser:        0.788s
  Time for CFA construction:      1.419s
    Time for parsing file(s):     0.532s
    Time for AST to CFA:          0.314s
    Time for CFA sanity check:    0.105s
    Time for post-processing:     0.310s
      Time for var class.:        0.127s
Time for Analysis:                4.077s
CPU time for analysis:            4.080s
Time for analyzing result:        0.001s
Total time for CPAchecker:        7.409s
Total CPU time for CPAchecker:    7.410s
Time for statistics:              0.130s

Time for Garbage Collector:       0.150s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     27MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8087MB (  7712 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
