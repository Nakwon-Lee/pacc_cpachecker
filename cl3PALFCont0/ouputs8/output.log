scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product39_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9lpocjom/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 91: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 123: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 484: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 566: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 589: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 909: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 955: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 746: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            15662 (25% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  15423 (98%)
  Because of loop head:            152 (1%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         87 (1%)
  Times precision was empty:       472 (3%)
  Times precision was {false}:     195 (1%)
  Times result was cached:         12187 (78%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2808 (18%)
  Times result was 'false':        1734 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         9196
  BDD entailment checks:           5826
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       9
Number of predicates discovered:          10
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         65078
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 21.67
Number of irrelevant predicates:          22842 (35%)
Number of preds handled by boolean abs:   8316 (13%)
  Total number of models for allsat:      2989
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.06

Time for post operator:                  2.534s
  Time for path formula creation:        2.442s
Time for strengthen operator:            0.181s
Time for prec operator:                 11.744s
  Time for abstraction:                 11.191s (Max:     0.027s, Count: 15662)
    Boolean abstraction:                 2.696s
    Solving time:                        1.967s (Max:     0.021s)
    Model enumeration time:              0.212s
    Time for BDD construction:           0.232s (Max:     0.012s)
Time for merge operator:                 0.090s
Time for coverage check:                 0.053s
  Time for BDD entailment checks:        0.048s
Total time for SMT solver (w/o itp):     2.179s

Number of path formula cache hits:   38792 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.205s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               699
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6316 (count: 24910, min: 0, max: 582, avg: 0.25)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.367s
Automaton transfers with branching:                0
Automaton transfer successors:                        62896 (count: 62896, min: 1, max: 1, avg: 1.00) [1 x 62896]

CPA algorithm statistics
------------------------
Number of iterations:            49585
Max size of waitlist:            18
Average size of waitlist:        8
Number of computed successors:   55266
Max successors for one state:    2
Number of times merged:          1685
Number of times stopped:         3654
Number of times breaked:         87

Total time for CPA algorithm:        19.371s (Max:     0.925s)
  Time for choose from waitlist:      0.135s
  Time for precision adjustment:     12.656s
  Time for transfer relation:         4.762s
  Time for merge operator:            0.275s
  Time for stop operator:             0.332s
  Time for adding to reached set:     0.243s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   87
Avg. length of target path (in blocks):                4901 (count: 87, min: 27, max: 108, avg: 56.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.609s
  Counterexample analysis:                             1.046s (Max:     0.027s, Calls: 87)
    Refinement sat check:                              0.564s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.087s
  Precision update:                                    0.135s
  ARG update:                                          0.222s

Length of refined path (in blocks):                    3566 (count: 87, min: 16, max: 67, avg: 40.99)
Number of affected states:                             1286 (count: 87, min: 2, max: 56, avg: 14.78)
Length (states) of path with itp 'true':               2193 (count: 87, min: 0, max: 63, avg: 25.21)
Length (states) of path with itp non-trivial itp:      1286 (count: 87, min: 2, max: 56, avg: 14.78)
Length (states) of path with itp 'false':                87 (count: 87, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           9 (count: 87, min: 0, max: 2, avg: 0.10)
Equal non-trivial interpolants along paths:            1190 (count: 87, min: 1, max: 53, avg: 13.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                87
Number of successful refinements:     87
Number of failed refinements:         0
Max. size of reached set before ref.: 4452
Max. size of reached set after ref.:  3291
Avg. size of reached set before ref.: 1639.70
Avg. size of reached set after ref.:  1092.53

Total time for CEGAR algorithm:      21.388s
Time for refinements:                 1.922s
Average time for refinement:          0.022s
Max time for refinement:              0.080s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          131
  Total lines:            439
  Line coverage:          0.298
  Visited conditions:     42
  Total conditions:       74
  Condition coverage:     0.568

CPAchecker general statistics
-----------------------------
Number of program locations:     629
Number of CFA edges:             679
Number of relevant variables:    113
Number of functions:             37
Number of loops:                 5
Size of reached set:             2275
  Number of reached locations:   179 (28%)
    Avg states per location:     12
    Max states per location:     64 (at node N134)
  Number of reached functions:   24 (65%)
  Number of partitions:          2214
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N170 (before lines 306-353), Function test called from node N110, stack depth 3 [2b441609], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          3.479s
  Time for loading CPAs:          0.919s
  Time for loading parser:        0.827s
  Time for CFA construction:      1.465s
    Time for parsing file(s):     0.554s
    Time for AST to CFA:          0.334s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.313s
      Time for var class.:        0.127s
Time for Analysis:               21.388s
CPU time for analysis:           21.380s
Time for analyzing result:        0.002s
Total time for CPAchecker:       24.873s
Total CPU time for CPAchecker:   24.860s
Time for statistics:              0.140s

Time for Garbage Collector:       0.478s (in 35 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    66 MiB) max;     43MB (    41 MiB) avg;     73MB (    69 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8118MB (  7742 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
