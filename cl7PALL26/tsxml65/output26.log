scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3_false-termination.4-32_1-drivers--staging--serqt_usb2--serqt_usb2.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bb4bmr5d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3635: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 3638: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 3641: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

line 3647: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_control_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_get_baud_rate to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_port_tty_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tty_kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_clear_halt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function interruptible_sleep_on_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            212 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            114 (54%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         98 (46%)
  Times precision was empty:       31 (15%)
  Times precision was {false}:     30 (14%)
  Times result was cached:         133 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (8%)
  Times result was 'false':        93 (44%)
Number of strengthen sat checks:   0
Number of coverage checks:         4693
  BDD entailment checks:           57
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       715
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         181
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.77
Number of irrelevant predicates:          108 (60%)
Number of preds handled by boolean abs:   18 (10%)
  Total number of models for allsat:      17
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  1.287s
  Time for path formula creation:        1.243s
Time for strengthen operator:            0.101s
Time for prec operator:                  2.201s
  Time for abstraction:                  2.140s (Max:     1.018s, Count: 212)
    Boolean abstraction:                 1.183s
    Solving time:                        1.088s (Max:     0.734s)
    Model enumeration time:              0.232s
    Time for BDD construction:           0.022s (Max:     0.015s)
Time for merge operator:                 0.229s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     1.320s

Number of path formula cache hits:   40243 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.084s

Total number of created targets for pointer analysis: 37
   Number of created targets for uf: *unsigned_char is 3
   Number of created targets for uf: *_Bool is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          34 (count: 363, min: 0, max: 8, avg: 0.09)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.243s
Automaton transfers with branching:                0
Automaton transfer successors:                        48024 (count: 48024, min: 1, max: 1, avg: 1.00) [1 x 48024]

CPA algorithm statistics
------------------------
Number of iterations:            19035
Max size of waitlist:            27
Average size of waitlist:        13
Number of computed successors:   21637
Max successors for one state:    2
Number of times merged:          2318
Number of times stopped:         2369
Number of times breaked:         7

Total time for CPA algorithm:         5.633s (Max:     2.723s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:      2.452s
  Time for transfer relation:         2.441s
  Time for merge operator:            0.319s
  Time for stop operator:             0.049s
  Time for adding to reached set:     0.099s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  28 (count: 7, min: 2, max: 5, avg: 4.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.243s
  Counterexample analysis:                             0.137s (Max:     0.040s, Calls: 7)
    Refinement sat check:                              0.110s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.012s
  ARG update:                                          0.081s

Length of refined path (in blocks):                      28 (count: 7, min: 2, max: 5, avg: 4.00)
Number of affected states:                               21 (count: 7, min: 1, max: 4, avg: 3.00)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        21 (count: 7, min: 1, max: 4, avg: 3.00)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              14 (count: 7, min: 0, max: 3, avg: 2.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 2905
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 2350.86
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:       5.973s
Time for refinements:                 0.340s
Average time for refinement:          0.048s
Max time for refinement:              0.071s

Code Coverage
-----------------------------
  Function coverage:      0.776
  Visited lines:          4273
  Total lines:            4961
  Line coverage:          0.861
  Visited conditions:     444
  Total conditions:       552
  Condition coverage:     0.804

CPAchecker general statistics
-----------------------------
Number of program locations:     5693
Number of CFA edges:             6036
Number of relevant variables:    1312
Number of functions:             67
Number of loops:                 8
Size of reached set:             2741
  Number of reached locations:   1565 (27%)
    Avg states per location:     1
    Max states per location:     25 (at node N316)
  Number of reached functions:   52 (78%)
  Number of partitions:          2741
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.306s
  Time for loading CPAs:          0.673s
  Time for loading parser:        0.467s
  Time for CFA construction:      3.045s
    Time for parsing file(s):     0.775s
    Time for AST to CFA:          0.963s
    Time for CFA sanity check:    0.351s
    Time for post-processing:     0.804s
      Time for var class.:        0.385s
Time for Analysis:                5.974s
CPU time for analysis:            5.970s
Time for analyzing result:        0.002s
Total time for CPAchecker:       10.283s
Total CPU time for CPAchecker:   10.270s
Time for statistics:              0.133s

Time for Garbage Collector:       0.353s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     42MB (    40 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     30MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8106MB (  7731 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
