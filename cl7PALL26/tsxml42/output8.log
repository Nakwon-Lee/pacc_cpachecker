scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--wl12xx--wl12xx_sdio.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rjzjnevf/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 5776: Dead code detected: Goto: case_1 (CFACreationUtils.addEdgeToCFA, INFO)

line 5779: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 5785: Dead code detected: Goto: case_8 (CFACreationUtils.addEdgeToCFA, INFO)

line 5788: Dead code detected: Goto: switch_default (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_8 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_default is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_1 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wl12xx_get_platform_data to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_get_host_pm_caps to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_host_pm_flags to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_claim_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_set_block_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_release_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pm_runtime_resume to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_power_restore_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_enable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_disable_func to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_power_save_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pm_runtime_idle to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_f0_writeb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_writesb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_memcpy_toio to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_f0_readb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_readsb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sdio_memcpy_fromio to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_resources to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add_data to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            18 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11 (61%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (39%)
  Times precision was empty:       6 (33%)
  Times precision was {false}:     4 (22%)
  Times result was cached:         3 (17%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (28%)
  Times result was 'false':        4 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         177
  BDD entailment checks:           5
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       217
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          5 (42%)
Number of preds handled by boolean abs:   5 (42%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.679s
  Time for path formula creation:        0.671s
Time for strengthen operator:            0.022s
Time for prec operator:                  0.222s
  Time for abstraction:                  0.214s (Max:     0.083s, Count: 18)
    Boolean abstraction:                 0.083s
    Solving time:                        0.089s (Max:     0.050s)
    Model enumeration time:              0.005s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.086s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.094s

Number of path formula cache hits:   1681 (43%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.653s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *signed_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 68, min: 0, max: 5, avg: 0.07)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.062s
Automaton transfers with branching:                0
Automaton transfer successors:                         3900 (count: 3900, min: 1, max: 1, avg: 1.00) [1 x 3900]

CPA algorithm statistics
------------------------
Number of iterations:            1016
Max size of waitlist:            14
Average size of waitlist:        6
Number of computed successors:   1123
Max successors for one state:    2
Number of times merged:          86
Number of times stopped:         91
Number of times breaked:         3

Total time for CPA algorithm:         1.461s (Max:     0.587s)
  Time for choose from waitlist:      0.005s
  Time for precision adjustment:      0.269s
  Time for transfer relation:         0.979s
  Time for merge operator:            0.103s
  Time for stop operator:             0.018s
  Time for adding to reached set:     0.015s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   6 (count: 3, min: 1, max: 3, avg: 2.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.049s
  Counterexample analysis:                             0.031s (Max:     0.016s, Calls: 3)
    Refinement sat check:                              0.022s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.002s
  ARG update:                                          0.005s

Length of refined path (in blocks):                       6 (count: 3, min: 1, max: 3, avg: 2.00)
Number of affected states:                                3 (count: 3, min: 0, max: 2, avg: 1.00)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 3, min: 0, max: 2, avg: 1.00)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 3, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               1 (count: 3, min: 0, max: 1, avg: 0.33)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 459
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 208.67
Avg. size of reached set after ref.:  21.00

Total time for CEGAR algorithm:       1.530s
Time for refinements:                 0.069s
Average time for refinement:          0.023s
Max time for refinement:              0.030s

Code Coverage
-----------------------------
  Function coverage:      0.718
  Visited lines:          1924
  Total lines:            2018
  Line coverage:          0.953
  Visited conditions:     90
  Total conditions:       110
  Condition coverage:     0.818

CPAchecker general statistics
-----------------------------
Number of program locations:     2267
Number of CFA edges:             2332
Number of relevant variables:    396
Number of functions:             39
Number of loops:                 2
Size of reached set:             466
  Number of reached locations:   389 (17%)
    Avg states per location:     1
    Max states per location:     12 (at node N1484)
  Number of reached functions:   28 (72%)
  Number of partitions:          466
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.719s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.523s
  Time for CFA construction:      2.366s
    Time for parsing file(s):     0.714s
    Time for AST to CFA:          0.834s
    Time for CFA sanity check:    0.137s
    Time for post-processing:     0.506s
      Time for var class.:        0.207s
Time for Analysis:                1.530s
CPU time for analysis:            1.530s
Time for analyzing result:        0.001s
Total time for CPAchecker:        5.254s
Total CPU time for CPAchecker:    5.250s
Time for statistics:              0.084s

Time for Garbage Collector:       0.167s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 55MB (    52 MiB) max;     32MB (    30 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     26MB (    24 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
