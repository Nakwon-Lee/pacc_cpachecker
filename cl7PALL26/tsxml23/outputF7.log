scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--input--joystick--spaceorb.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xdrp7zhf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __serio_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function serio_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_event to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            172 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            150 (87%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (13%)
  Times precision was empty:       36 (21%)
  Times precision was {false}:     13 (8%)
  Times result was cached:         97 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      26 (15%)
  Times result was 'false':        14 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         482
  BDD entailment checks:           78
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       235
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         136
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 3.49
Number of irrelevant predicates:          35 (26%)
Number of preds handled by boolean abs:   26 (19%)
  Total number of models for allsat:      26
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.747s
  Time for path formula creation:        0.730s
Time for strengthen operator:            0.023s
Time for prec operator:                  0.544s
  Time for abstraction:                  0.521s (Max:     0.047s, Count: 172)
    Boolean abstraction:                 0.148s
    Solving time:                        0.180s (Max:     0.018s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.005s (Max:     0.004s)
Time for merge operator:                 0.161s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.184s

Number of path formula cache hits:   6688 (60%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.666s

Total number of created targets for pointer analysis: 376
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 11


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          31 (count: 342, min: 0, max: 17, avg: 0.09)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.129s
Automaton transfers with branching:                0
Automaton transfer successors:                        10812 (count: 10812, min: 1, max: 1, avg: 1.00) [1 x 10812]

CPA algorithm statistics
------------------------
Number of iterations:            3097
Max size of waitlist:            11
Average size of waitlist:        5
Number of computed successors:   3432
Max successors for one state:    2
Number of times merged:          202
Number of times stopped:         274
Number of times breaked:         8

Total time for CPA algorithm:         2.302s (Max:     0.445s)
  Time for choose from waitlist:      0.028s
  Time for precision adjustment:      0.670s
  Time for transfer relation:         1.299s
  Time for merge operator:            0.179s
  Time for stop operator:             0.016s
  Time for adding to reached set:     0.036s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  33 (count: 8, min: 1, max: 7, avg: 4.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.130s
  Counterexample analysis:                             0.093s (Max:     0.021s, Calls: 8)
    Refinement sat check:                              0.049s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.012s
  ARG update:                                          0.011s

Length of refined path (in blocks):                      33 (count: 8, min: 1, max: 7, avg: 4.13)
Number of affected states:                               25 (count: 8, min: 0, max: 6, avg: 3.13)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        25 (count: 8, min: 0, max: 6, avg: 3.13)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 8, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              18 (count: 8, min: 0, max: 5, avg: 2.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 567
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 360.00
Avg. size of reached set after ref.:  21.63

Total time for CEGAR algorithm:       2.463s
Time for refinements:                 0.160s
Average time for refinement:          0.020s
Max time for refinement:              0.040s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1153
  Total lines:            1199
  Line coverage:          0.962
  Visited conditions:     76
  Total conditions:       96
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     1381
Number of CFA edges:             1432
Number of relevant variables:    257
Number of functions:             27
Number of loops:                 10
Size of reached set:             438
  Number of reached locations:   285 (21%)
    Avg states per location:     1
    Max states per location:     7 (at node N949)
  Number of reached functions:   18 (67%)
  Number of partitions:          438
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          2.980s
  Time for loading CPAs:          0.582s
  Time for loading parser:        0.490s
  Time for CFA construction:      1.769s
    Time for parsing file(s):     0.614s
    Time for AST to CFA:          0.536s
    Time for CFA sanity check:    0.118s
    Time for post-processing:     0.356s
      Time for var class.:        0.159s
Time for Analysis:                2.463s
CPU time for analysis:            2.470s
Time for analyzing result:        0.000s
Total time for CPAchecker:        5.446s
Total CPU time for CPAchecker:    5.440s
Time for statistics:              0.057s

Time for Garbage Collector:       0.149s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     27MB (    26 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8089MB (  7715 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
