scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--mmc--host--sdricoh_cs.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_aqewq_5o/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_resume_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_suspend_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_remove_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_free_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pcmcia_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_request_done to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_alloc_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mmc_add_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            596 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            568 (95%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (5%)
  Times precision was empty:       229 (38%)
  Times precision was {false}:     55 (9%)
  Times result was cached:         278 (47%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      34 (6%)
  Times result was 'false':        56 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         2270
  BDD entailment checks:           364
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       269
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         367
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.12
Number of irrelevant predicates:          160 (44%)
Number of preds handled by boolean abs:   34 (9%)
  Total number of models for allsat:      32
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.94

Time for post operator:                  1.488s
  Time for path formula creation:        1.444s
Time for strengthen operator:            0.121s
Time for prec operator:                  1.055s
  Time for abstraction:                  0.956s (Max:     0.081s, Count: 596)
    Boolean abstraction:                 0.209s
    Solving time:                        0.352s (Max:     0.054s)
    Model enumeration time:              0.011s
    Time for BDD construction:           0.005s (Max:     0.004s)
Time for merge operator:                 0.194s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):     0.363s

Number of path formula cache hits:   33142 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.248s

Total number of created targets for pointer analysis: 52
   Number of created targets for uf: *signed_int is 11


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          65 (count: 1095, min: 0, max: 26, avg: 0.06)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.236s
Automaton transfers with branching:                0
Automaton transfer successors:                        43679 (count: 43679, min: 1, max: 1, avg: 1.00) [1 x 43679]

CPA algorithm statistics
------------------------
Number of iterations:            18008
Max size of waitlist:            12
Average size of waitlist:        6
Number of computed successors:   19386
Max successors for one state:    2
Number of times merged:          953
Number of times stopped:         1264
Number of times breaked:         10

Total time for CPA algorithm:         4.667s (Max:     1.072s)
  Time for choose from waitlist:      0.059s
  Time for precision adjustment:      1.322s
  Time for transfer relation:         2.664s
  Time for merge operator:            0.233s
  Time for stop operator:             0.095s
  Time for adding to reached set:     0.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   10
Avg. length of target path (in blocks):                  55 (count: 10, min: 1, max: 10, avg: 5.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.302s
  Counterexample analysis:                             0.178s (Max:     0.029s, Calls: 10)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.015s
  ARG update:                                          0.102s

Length of refined path (in blocks):                      55 (count: 10, min: 1, max: 10, avg: 5.50)
Number of affected states:                               45 (count: 10, min: 0, max: 9, avg: 4.50)
Length (states) of path with itp 'true':                  0 (count: 10, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        45 (count: 10, min: 0, max: 9, avg: 4.50)
Length (states) of path with itp 'false':                 0 (count: 10, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 10, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              36 (count: 10, min: 0, max: 8, avg: 3.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                10
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 2341
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 1675.80
Avg. size of reached set after ref.:  21.70

Total time for CEGAR algorithm:       5.036s
Time for refinements:                 0.368s
Average time for refinement:          0.036s
Max time for refinement:              0.054s

Code Coverage
-----------------------------
  Function coverage:      0.795
  Visited lines:          2085
  Total lines:            2130
  Line coverage:          0.979
  Visited conditions:     154
  Total conditions:       174
  Condition coverage:     0.885

CPAchecker general statistics
-----------------------------
Number of program locations:     2448
Number of CFA edges:             2587
Number of relevant variables:    445
Number of functions:             39
Number of loops:                 12
Size of reached set:             1526
  Number of reached locations:   682 (28%)
    Avg states per location:     2
    Max states per location:     41 (at node N23)
  Number of reached functions:   31 (79%)
  Number of partitions:          1526
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.465s
  Time for loading CPAs:          0.639s
  Time for loading parser:        0.487s
  Time for CFA construction:      2.218s
    Time for parsing file(s):     0.660s
    Time for AST to CFA:          0.751s
    Time for CFA sanity check:    0.170s
    Time for post-processing:     0.484s
      Time for var class.:        0.236s
Time for Analysis:                5.036s
CPU time for analysis:            5.030s
Time for analyzing result:        0.001s
Total time for CPAchecker:        8.505s
Total CPU time for CPAchecker:    8.490s
Time for statistics:              0.106s

Time for Garbage Collector:       0.216s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     39MB (    37 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8065MB (  7692 MiB) max;   8042MB (  7669 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
