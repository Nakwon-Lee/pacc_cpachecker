scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--comedi--drivers--comedi_bond.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bov5r9bs/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2097: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

line 2100: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1632: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp10); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_find_subdevice_by_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_get_n_channels to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            128 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            114 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (11%)
  Times precision was empty:       25 (20%)
  Times precision was {false}:     23 (18%)
  Times result was cached:         62 (48%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (14%)
  Times result was 'false':        15 (12%)
Number of strengthen sat checks:   0
Number of coverage checks:         353
  BDD entailment checks:           61
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       294
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         103
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.51
Number of irrelevant predicates:          36 (35%)
Number of preds handled by boolean abs:   18 (17%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.131s
  Time for path formula creation:        1.117s
Time for strengthen operator:            0.037s
Time for prec operator:                  1.020s
  Time for abstraction:                  1.003s (Max:     0.148s, Count: 128)
    Boolean abstraction:                 0.407s
    Solving time:                        0.633s (Max:     0.111s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.009s (Max:     0.008s)
Time for merge operator:                 0.061s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.661s

Number of path formula cache hits:   6184 (57%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.079s

Total number of created targets for pointer analysis: 1483
   Number of created targets for uf: *(struct_comedi_device)* is 41
   Number of created targets for uf: *char is 39
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          33 (count: 323, min: 0, max: 17, avg: 0.10)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.108s
Automaton transfers with branching:                0
Automaton transfer successors:                        10752 (count: 10752, min: 1, max: 1, avg: 1.00) [1 x 10752]

CPA algorithm statistics
------------------------
Number of iterations:            1902
Max size of waitlist:            7
Average size of waitlist:        3
Number of computed successors:   2135
Max successors for one state:    2
Number of times merged:          146
Number of times stopped:         194
Number of times breaked:         7

Total time for CPA algorithm:         2.862s (Max:     0.563s)
  Time for choose from waitlist:      0.012s
  Time for precision adjustment:      1.105s
  Time for transfer relation:         1.565s
  Time for merge operator:            0.083s
  Time for stop operator:             0.020s
  Time for adding to reached set:     0.029s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  29 (count: 7, min: 1, max: 7, avg: 4.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.303s
  Counterexample analysis:                             0.274s (Max:     0.091s, Calls: 7)
    Refinement sat check:                              0.242s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.003s
  Precision update:                                    0.004s
  ARG update:                                          0.014s

Length of refined path (in blocks):                      29 (count: 7, min: 1, max: 7, avg: 4.14)
Number of affected states:                               22 (count: 7, min: 0, max: 6, avg: 3.14)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 7, min: 0, max: 6, avg: 3.14)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 7, min: 0, max: 5, avg: 2.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 488
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 245.86
Avg. size of reached set after ref.:  21.57

Total time for CEGAR algorithm:       3.190s
Time for refinements:                 0.326s
Average time for refinement:          0.046s
Max time for refinement:              0.094s

Code Coverage
-----------------------------
  Function coverage:      0.607
  Visited lines:          1374
  Total lines:            1742
  Line coverage:          0.789
  Visited conditions:     70
  Total conditions:       116
  Condition coverage:     0.603

CPAchecker general statistics
-----------------------------
Number of program locations:     1930
Number of CFA edges:             1986
Number of relevant variables:    552
Number of functions:             28
Number of loops:                 6
Size of reached set:             357
  Number of reached locations:   247 (13%)
    Avg states per location:     1
    Max states per location:     6 (at node N1619)
  Number of reached functions:   17 (61%)
  Number of partitions:          357
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.353s
  Time for loading CPAs:          0.658s
  Time for loading parser:        0.567s
  Time for CFA construction:      1.995s
    Time for parsing file(s):     0.599s
    Time for AST to CFA:          0.557s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.535s
      Time for var class.:        0.301s
Time for Analysis:                3.190s
CPU time for analysis:            3.040s
Time for analyzing result:        0.000s
Total time for CPAchecker:        6.547s
Total CPU time for CPAchecker:    6.400s
Time for statistics:              0.070s

Time for Garbage Collector:       0.160s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     35MB (    34 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8091MB (  7716 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
