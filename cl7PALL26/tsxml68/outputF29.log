scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--staging--comedi--drivers--comedi_bond.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2lu17xlw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2097: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

line 2100: Dead code detected: Goto: switch_break (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 1632: Destroying the void* pointer alloc_private::__cil_tmp4 produces garbage or the memory pointed by it is unused: tmp = alloc_private(dev, __cil_tmp10); (PredicateCPA:DynamicMemoryHandler.handleDeferredAllocationInFunctionExit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_open to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_find_subdevice_by_type to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_get_n_channels to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function comedi_close to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            125 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            111 (89%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (11%)
  Times precision was empty:       31 (25%)
  Times precision was {false}:     23 (18%)
  Times result was cached:         53 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      18 (14%)
  Times result was 'false':        18 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         382
  BDD entailment checks:           56
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       294
Number of predicates discovered:          2
Number of abstraction locations:          8
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         94
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 2.29
Number of irrelevant predicates:          33 (35%)
Number of preds handled by boolean abs:   18 (19%)
  Total number of models for allsat:      18
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.988s
  Time for path formula creation:        0.964s
Time for strengthen operator:            0.008s
Time for prec operator:                  1.173s
  Time for abstraction:                  1.149s (Max:     0.236s, Count: 125)
    Boolean abstraction:                 0.476s
    Solving time:                        0.747s (Max:     0.195s)
    Model enumeration time:              0.029s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.111s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.005s
Total time for SMT solver (w/o itp):     0.776s

Number of path formula cache hits:   6738 (59%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.898s

Total number of created targets for pointer analysis: 1483
   Number of created targets for uf: *(struct_comedi_device)* is 41
   Number of created targets for uf: *char is 39
   Number of created targets for uf: *unsigned_long_int is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          27 (count: 327, min: 0, max: 12, avg: 0.08)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.120s
Automaton transfers with branching:                0
Automaton transfer successors:                        11295 (count: 11295, min: 1, max: 1, avg: 1.00) [1 x 11295]

CPA algorithm statistics
------------------------
Number of iterations:            2029
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   2280
Max successors for one state:    2
Number of times merged:          163
Number of times stopped:         206
Number of times breaked:         7

Total time for CPA algorithm:         3.074s (Max:     0.658s)
  Time for choose from waitlist:      0.025s
  Time for precision adjustment:      1.279s
  Time for transfer relation:         1.512s
  Time for merge operator:            0.133s
  Time for stop operator:             0.019s
  Time for adding to reached set:     0.039s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  29 (count: 7, min: 1, max: 7, avg: 4.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.319s
  Counterexample analysis:                             0.277s (Max:     0.085s, Calls: 7)
    Refinement sat check:                              0.239s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.004s
  Precision update:                                    0.010s
  ARG update:                                          0.019s

Length of refined path (in blocks):                      29 (count: 7, min: 1, max: 7, avg: 4.14)
Number of affected states:                               22 (count: 7, min: 0, max: 6, avg: 3.14)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 7, min: 0, max: 6, avg: 3.14)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 7, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              16 (count: 7, min: 0, max: 5, avg: 2.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 462
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 264.43
Avg. size of reached set after ref.:  21.57

Total time for CEGAR algorithm:       3.419s
Time for refinements:                 0.343s
Average time for refinement:          0.049s
Max time for refinement:              0.089s

Code Coverage
-----------------------------
  Function coverage:      0.607
  Visited lines:          1374
  Total lines:            1742
  Line coverage:          0.789
  Visited conditions:     70
  Total conditions:       116
  Condition coverage:     0.603

CPAchecker general statistics
-----------------------------
Number of program locations:     1930
Number of CFA edges:             1986
Number of relevant variables:    552
Number of functions:             28
Number of loops:                 6
Size of reached set:             357
  Number of reached locations:   247 (13%)
    Avg states per location:     1
    Max states per location:     6 (at node N1619)
  Number of reached functions:   17 (61%)
  Number of partitions:          357
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.339s
  Time for loading CPAs:          0.666s
  Time for loading parser:        0.459s
  Time for CFA construction:      2.098s
    Time for parsing file(s):     0.657s
    Time for AST to CFA:          0.608s
    Time for CFA sanity check:    0.143s
    Time for post-processing:     0.503s
      Time for var class.:        0.275s
Time for Analysis:                3.419s
CPU time for analysis:            3.410s
Time for analyzing result:        0.001s
Total time for CPAchecker:        6.769s
Total CPU time for CPAchecker:    6.750s
Time for statistics:              0.054s

Time for Garbage Collector:       0.156s (in 9 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     36MB (    34 MiB) avg;     67MB (    63 MiB) peak
Used non-heap memory:             34MB (    32 MiB) max;     28MB (    26 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8097MB (  7722 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
