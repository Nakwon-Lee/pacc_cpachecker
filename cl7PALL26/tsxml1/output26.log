scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--on20.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qh3g79ff/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            31 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            23 (74%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (26%)
  Times precision was empty:       8 (26%)
  Times precision was {false}:     5 (16%)
  Times result was cached:         10 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (26%)
  Times result was 'false':        4 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         1335
  BDD entailment checks:           13
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       320
Number of predicates discovered:          2
Number of abstraction locations:          4
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         23
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.77
Number of irrelevant predicates:          8 (35%)
Number of preds handled by boolean abs:   8 (35%)
  Total number of models for allsat:      8
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.700s
  Time for path formula creation:        0.672s
Time for strengthen operator:            0.062s
Time for prec operator:                  1.050s
  Time for abstraction:                  1.014s (Max:     0.851s, Count: 31)
    Boolean abstraction:                 0.893s
    Solving time:                        0.409s (Max:     0.337s)
    Model enumeration time:              0.487s
    Time for BDD construction:           0.002s (Max:     0.001s)
Time for merge operator:                 0.078s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.896s

Number of path formula cache hits:   13516 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.645s

Total number of created targets for pointer analysis: 4
   Number of created targets for uf: *(char)* is 3


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          15 (count: 100, min: 0, max: 6, avg: 0.15)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.111s
Automaton transfers with branching:                0
Automaton transfer successors:                        19921 (count: 19921, min: 1, max: 1, avg: 1.00) [1 x 19921]

CPA algorithm statistics
------------------------
Number of iterations:            6725
Max size of waitlist:            10
Average size of waitlist:        6
Number of computed successors:   7410
Max successors for one state:    2
Number of times merged:          661
Number of times stopped:         672
Number of times breaked:         4

Total time for CPA algorithm:         3.633s (Max:     2.408s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:      1.265s
  Time for transfer relation:         2.059s
  Time for merge operator:            0.104s
  Time for stop operator:             0.027s
  Time for adding to reached set:     0.071s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  11 (count: 4, min: 1, max: 4, avg: 2.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.103s
  Counterexample analysis:                             0.032s (Max:     0.016s, Calls: 4)
    Refinement sat check:                              0.020s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.002s
  Precision update:                                    0.008s
  ARG update:                                          0.056s

Length of refined path (in blocks):                      11 (count: 4, min: 1, max: 4, avg: 2.75)
Number of affected states:                                7 (count: 4, min: 0, max: 3, avg: 1.75)
Length (states) of path with itp 'true':                  0 (count: 4, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 4, min: 0, max: 3, avg: 1.75)
Length (states) of path with itp 'false':                 0 (count: 4, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               4 (count: 4, min: 0, max: 2, avg: 1.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 2298
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 1136.75
Avg. size of reached set after ref.:  21.25

Total time for CEGAR algorithm:       3.775s
Time for refinements:                 0.135s
Average time for refinement:          0.033s
Max time for refinement:              0.079s

Code Coverage
-----------------------------
  Function coverage:      0.609
  Visited lines:          5208
  Total lines:            5254
  Line coverage:          0.991
  Visited conditions:     462
  Total conditions:       482
  Condition coverage:     0.959

CPAchecker general statistics
-----------------------------
Number of program locations:     5792
Number of CFA edges:             6241
Number of relevant variables:    495
Number of functions:             23
Number of loops:                 3
Size of reached set:             2273
  Number of reached locations:   1627 (28%)
    Avg states per location:     1
    Max states per location:     204 (at node N0)
  Number of reached functions:   14 (61%)
  Number of partitions:          2273
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.028s
  Time for loading CPAs:          0.736s
  Time for loading parser:        0.539s
  Time for CFA construction:      2.665s
    Time for parsing file(s):     0.710s
    Time for AST to CFA:          0.670s
    Time for CFA sanity check:    0.295s
    Time for post-processing:     0.802s
      Time for var class.:        0.478s
Time for Analysis:                3.775s
CPU time for analysis:            3.780s
Time for analyzing result:        0.002s
Total time for CPAchecker:        7.806s
Total CPU time for CPAchecker:    7.800s
Time for statistics:              0.138s

Time for Garbage Collector:       0.205s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 69MB (    65 MiB) max;     41MB (    39 MiB) avg;     72MB (    68 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     27MB (    26 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     29MB (    28 MiB) avg
Total process virtual memory:   8135MB (  7758 MiB) max;   8096MB (  7721 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
