scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/minepump_spec2_product58_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_leo4zvig/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 92: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 138: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 147: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 467: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 720: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 729: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 803: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 866: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 889: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 986: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 304: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            57 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            29 (51%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         28 (49%)
  Times precision was empty:       11 (19%)
  Times precision was {false}:     21 (37%)
  Times result was cached:         10 (18%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (26%)
  Times result was 'false':        26 (46%)
Number of strengthen sat checks:   0
Number of coverage checks:         1151
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       72
Number of predicates discovered:          7
Number of abstraction locations:          3
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         98
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 2.72
Number of irrelevant predicates:          27 (28%)
Number of preds handled by boolean abs:   47 (48%)
  Total number of models for allsat:      32
  Max number of models for allsat:        5
  Avg number of models for allsat:        2.13

Time for post operator:                  0.317s
  Time for path formula creation:        0.301s
Time for strengthen operator:            0.036s
Time for prec operator:                  0.333s
  Time for abstraction:                  0.306s (Max:     0.020s, Count: 57)
    Boolean abstraction:                 0.085s
    Solving time:                        0.104s (Max:     0.018s)
    Model enumeration time:              0.019s
    Time for BDD construction:           0.009s (Max:     0.005s)
Time for merge operator:                 0.053s
Time for coverage check:                 0.002s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.123s

Number of path formula cache hits:   5877 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.270s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               290
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         161 (count: 302, min: 0, max: 102, avg: 0.53)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.152s
Automaton transfers with branching:                0
Automaton transfer successors:                         7349 (count: 7349, min: 1, max: 1, avg: 1.00) [1 x 7349]

CPA algorithm statistics
------------------------
Number of iterations:            5682
Max size of waitlist:            10
Average size of waitlist:        5
Number of computed successors:   6302
Max successors for one state:    2
Number of times merged:          566
Number of times stopped:         568
Number of times breaked:         5

Total time for CPA algorithm:         1.719s (Max:     0.378s)
  Time for choose from waitlist:      0.010s
  Time for precision adjustment:      0.535s
  Time for transfer relation:         0.804s
  Time for merge operator:            0.138s
  Time for stop operator:             0.060s
  Time for adding to reached set:     0.047s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.130s
  Counterexample analysis:                             0.076s (Max:     0.026s, Calls: 5)
    Refinement sat check:                              0.054s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.015s
  Precision update:                                    0.011s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      16 (count: 5, min: 2, max: 4, avg: 3.20)
Number of affected states:                               11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        11 (count: 5, min: 1, max: 3, avg: 2.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 5, min: 0, max: 2, avg: 0.80)
Equal non-trivial interpolants along paths:               2 (count: 5, min: 0, max: 1, avg: 0.40)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1455
Max. size of reached set after ref.:  32
Avg. size of reached set before ref.: 920.20
Avg. size of reached set after ref.:  32.00

Total time for CEGAR algorithm:       1.889s
Time for refinements:                 0.161s
Average time for refinement:          0.032s
Max time for refinement:              0.041s

Code Coverage
-----------------------------
  Function coverage:      0.725
  Visited lines:          153
  Total lines:            454
  Line coverage:          0.337
  Visited conditions:     44
  Total conditions:       76
  Condition coverage:     0.579

CPAchecker general statistics
-----------------------------
Number of program locations:     655
Number of CFA edges:             705
Number of relevant variables:    120
Number of functions:             40
Number of loops:                 5
Size of reached set:             1268
  Number of reached locations:   202 (31%)
    Avg states per location:     6
    Max states per location:     24 (at node N424)
  Number of reached functions:   29 (73%)
  Number of partitions:          1266
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N379 (before lines 530-577), Function test called from node N643, stack depth 3 [3370f42], stack [main, runTest, test]])
  Number of target states:       0

Time for analysis setup:          2.302s
  Time for loading CPAs:          0.501s
  Time for loading parser:        0.533s
  Time for CFA construction:      1.142s
    Time for parsing file(s):     0.409s
    Time for AST to CFA:          0.257s
    Time for CFA sanity check:    0.087s
    Time for post-processing:     0.274s
      Time for var class.:        0.108s
Time for Analysis:                1.889s
CPU time for analysis:            1.890s
Time for analyzing result:        0.000s
Total time for CPAchecker:        4.195s
Total CPU time for CPAchecker:    4.190s
Time for statistics:              0.091s

Time for Garbage Collector:       0.107s (in 7 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 53MB (    50 MiB) max;     31MB (    29 MiB) avg;     61MB (    59 MiB) peak
Used non-heap memory:             33MB (    31 MiB) max;     25MB (    24 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     27MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8077MB (  7703 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
