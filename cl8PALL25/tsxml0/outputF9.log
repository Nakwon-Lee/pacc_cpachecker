scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/systemc/token_ring.01_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_vf37uhc0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            64 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            44 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (31%)
  Times precision was empty:       3 (5%)
  Times precision was {false}:     18 (28%)
  Times result was cached:         5 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38 (59%)
  Times result was 'false':        25 (39%)
Number of strengthen sat checks:   0
Number of coverage checks:         1538
  BDD entailment checks:           26
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          19
Number of abstraction locations:          3
Max number of predicates per location:    18
Avg number of predicates per location:    10
Total predicates per abstraction:         424
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 7.57
Number of irrelevant predicates:          37 (9%)
Number of preds handled by boolean abs:   342 (81%)
  Total number of models for allsat:      148
  Max number of models for allsat:        16
  Avg number of models for allsat:        3.89

Time for post operator:                  0.856s
  Time for path formula creation:        0.784s
Time for strengthen operator:            0.080s
Time for prec operator:                  1.435s
  Time for abstraction:                  1.347s (Max:     0.061s, Count: 64)
    Boolean abstraction:                 0.634s
    Solving time:                        0.383s (Max:     0.023s)
    Model enumeration time:              0.096s
    Time for BDD construction:           0.113s (Max:     0.019s)
Time for merge operator:                 0.115s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.479s

Number of path formula cache hits:   5241 (72%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.722s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1158 (count: 817, min: 0, max: 822, avg: 1.42)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.187s
Automaton transfers with branching:                0
Automaton transfer successors:                         6740 (count: 6740, min: 1, max: 1, avg: 1.00) [1 x 6740]

CPA algorithm statistics
------------------------
Number of iterations:            5359
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   6179
Max successors for one state:    2
Number of times merged:          756
Number of times stopped:         758
Number of times breaked:         6

Total time for CPA algorithm:         4.476s (Max:     0.977s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:      1.865s
  Time for transfer relation:         1.754s
  Time for merge operator:            0.263s
  Time for stop operator:             0.109s
  Time for adding to reached set:     0.147s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  31 (count: 6, min: 3, max: 7, avg: 5.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.501s
  Counterexample analysis:                             0.330s (Max:     0.080s, Calls: 6)
    Refinement sat check:                              0.252s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.041s
  Precision update:                                    0.004s
  ARG update:                                          0.090s

Length of refined path (in blocks):                      28 (count: 6, min: 3, max: 6, avg: 4.67)
Number of affected states:                               22 (count: 6, min: 2, max: 5, avg: 3.67)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        22 (count: 6, min: 2, max: 5, avg: 3.67)
Length (states) of path with itp 'false':                 1 (count: 6, min: 0, max: 1, avg: 0.17)
Different non-trivial interpolants along paths:           9 (count: 6, min: 0, max: 3, avg: 1.50)
Equal non-trivial interpolants along paths:               7 (count: 6, min: 1, max: 2, avg: 1.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 1228
Max. size of reached set after ref.:  105
Avg. size of reached set before ref.: 808.00
Avg. size of reached set after ref.:  105.00

Total time for CEGAR algorithm:       5.073s
Time for refinements:                 0.590s
Average time for refinement:          0.098s
Max time for refinement:              0.125s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          189
  Total lines:            190
  Line coverage:          0.995
  Visited conditions:     70
  Total conditions:       70
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     315
Number of CFA edges:             358
Number of relevant variables:    29
Number of functions:             19
Number of loops:                 2
Size of reached set:             1179
  Number of reached locations:   252 (80%)
    Avg states per location:     4
    Max states per location:     13 (at node N69)
  Number of reached functions:   19 (100%)
  Number of partitions:          1177
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N138 (before lines 200-238), Function eval called from node N292, stack depth 3 [260ff5b7], stack [main, start_simulation, eval]])
  Number of target states:       0

Time for analysis setup:          4.667s
  Time for loading CPAs:          1.326s
  Time for loading parser:        1.276s
  Time for CFA construction:      1.814s
    Time for parsing file(s):     0.621s
    Time for AST to CFA:          0.383s
    Time for CFA sanity check:    0.163s
    Time for post-processing:     0.423s
      Time for var class.:        0.149s
Time for Analysis:                5.074s
CPU time for analysis:            5.070s
Time for analyzing result:        0.001s
Total time for CPAchecker:        9.751s
Total CPU time for CPAchecker:    9.740s
Time for statistics:              0.122s

Time for Garbage Collector:       0.208s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 58MB (    55 MiB) max;     32MB (    30 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     26MB (    25 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8078MB (  7704 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
