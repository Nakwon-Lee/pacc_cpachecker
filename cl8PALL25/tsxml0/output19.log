scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/systemc/token_ring.01_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1rwa_srd/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            59 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            41 (69%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (31%)
  Times precision was empty:       3 (5%)
  Times precision was {false}:     17 (29%)
  Times result was cached:         1 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38 (64%)
  Times result was 'false':        20 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         1435
  BDD entailment checks:           31
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          17
Number of abstraction locations:          3
Max number of predicates per location:    16
Avg number of predicates per location:    8
Total predicates per abstraction:         317
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 5.76
Number of irrelevant predicates:          29 (9%)
Number of preds handled by boolean abs:   280 (88%)
  Total number of models for allsat:      173
  Max number of models for allsat:        22
  Avg number of models for allsat:        4.55

Time for post operator:                  0.596s
  Time for path formula creation:        0.553s
Time for strengthen operator:            0.059s
Time for prec operator:                  0.975s
  Time for abstraction:                  0.906s (Max:     0.042s, Count: 59)
    Boolean abstraction:                 0.521s
    Solving time:                        0.293s (Max:     0.020s)
    Model enumeration time:              0.093s
    Time for BDD construction:           0.103s (Max:     0.017s)
Time for merge operator:                 0.043s
Time for coverage check:                 0.001s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):     0.386s

Number of path formula cache hits:   4743 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.504s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2307
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         328 (count: 743, min: 0, max: 328, avg: 0.44)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.152s
Automaton transfers with branching:                0
Automaton transfer successors:                         6248 (count: 6248, min: 1, max: 1, avg: 1.00) [1 x 6248]

CPA algorithm statistics
------------------------
Number of iterations:            4967
Max size of waitlist:            9
Average size of waitlist:        3
Number of computed successors:   5725
Max successors for one state:    2
Number of times merged:          702
Number of times stopped:         706
Number of times breaked:         5

Total time for CPA algorithm:         3.045s (Max:     0.700s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      1.287s
  Time for transfer relation:         1.250s
  Time for merge operator:            0.157s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.116s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                  24 (count: 5, min: 3, max: 6, avg: 4.80)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.293s
  Counterexample analysis:                             0.196s (Max:     0.073s, Calls: 5)
    Refinement sat check:                              0.143s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.002s
  ARG update:                                          0.059s

Length of refined path (in blocks):                      24 (count: 5, min: 3, max: 6, avg: 4.80)
Number of affected states:                               19 (count: 5, min: 2, max: 5, avg: 3.80)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        19 (count: 5, min: 2, max: 5, avg: 3.80)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           8 (count: 5, min: 0, max: 3, avg: 1.60)
Equal non-trivial interpolants along paths:               6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 1584
Max. size of reached set after ref.:  105
Avg. size of reached set before ref.: 869.20
Avg. size of reached set after ref.:  105.00

Total time for CEGAR algorithm:       3.389s
Time for refinements:                 0.343s
Average time for refinement:          0.068s
Max time for refinement:              0.118s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          189
  Total lines:            190
  Line coverage:          0.995
  Visited conditions:     70
  Total conditions:       70
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     315
Number of CFA edges:             358
Number of relevant variables:    29
Number of functions:             19
Number of loops:                 2
Size of reached set:             1179
  Number of reached locations:   252 (80%)
    Avg states per location:     4
    Max states per location:     13 (at node N69)
  Number of reached functions:   19 (100%)
  Number of partitions:          1177
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N138 (before lines 200-238), Function eval called from node N292, stack depth 3 [c6da8bb], stack [main, start_simulation, eval]])
  Number of target states:       0

Time for analysis setup:          3.038s
  Time for loading CPAs:          0.946s
  Time for loading parser:        0.780s
  Time for CFA construction:      1.157s
    Time for parsing file(s):     0.462s
    Time for AST to CFA:          0.234s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.205s
      Time for var class.:        0.061s
Time for Analysis:                3.391s
CPU time for analysis:            3.400s
Time for analyzing result:        0.002s
Total time for CPAchecker:        6.436s
Total CPU time for CPAchecker:    6.430s
Time for statistics:              0.126s

Time for Garbage Collector:       0.149s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     34MB (    32 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             32MB (    31 MiB) max;     26MB (    25 MiB) avg;     34MB (    32 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        35MB (    33 MiB) max;     28MB (    26 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8079MB (  7705 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
