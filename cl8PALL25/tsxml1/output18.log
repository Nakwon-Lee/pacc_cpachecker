scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/systemc/pc_sfifo_2_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7zuyel6d/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            574 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            393 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         181 (32%)
  Times precision was empty:       18 (3%)
  Times precision was {false}:     149 (26%)
  Times result was cached:         78 (14%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      329 (57%)
  Times result was 'false':        365 (64%)
Number of strengthen sat checks:   0
Number of coverage checks:         1639
  BDD entailment checks:           193
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          19
Number of abstraction locations:          5
Max number of predicates per location:    18
Avg number of predicates per location:    13
Total predicates per abstraction:         4105
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 8.59
Number of irrelevant predicates:          410 (10%)
Number of preds handled by boolean abs:   3324 (81%)
  Total number of models for allsat:      272
  Max number of models for allsat:        8
  Avg number of models for allsat:        0.83

Time for post operator:                  0.808s
  Time for path formula creation:        0.783s
Time for strengthen operator:            0.085s
Time for prec operator:                  2.893s
  Time for abstraction:                  2.763s (Max:     0.028s, Count: 574)
    Boolean abstraction:                 1.027s
    Solving time:                        0.667s (Max:     0.016s)
    Model enumeration time:              0.062s
    Time for BDD construction:           0.108s (Max:     0.012s)
Time for merge operator:                 0.065s
Time for coverage check:                 0.022s
  Time for BDD entailment checks:        0.021s
Total time for SMT solver (w/o itp):     0.729s

Number of path formula cache hits:   7483 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.731s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               3729
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3562 (count: 4321, min: 0, max: 1077, avg: 0.82)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.221s
Automaton transfers with branching:                0
Automaton transfer successors:                        10443 (count: 10443, min: 1, max: 1, avg: 1.00) [1 x 10443]

CPA algorithm statistics
------------------------
Number of iterations:            7921
Max size of waitlist:            10
Average size of waitlist:        4
Number of computed successors:   9129
Max successors for one state:    2
Number of times merged:          723
Number of times stopped:         772
Number of times breaked:         14

Total time for CPA algorithm:         5.629s (Max:     1.297s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      3.259s
  Time for transfer relation:         1.765s
  Time for merge operator:            0.136s
  Time for stop operator:             0.087s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 102 (count: 14, min: 3, max: 11, avg: 7.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.400s
  Counterexample analysis:                             0.239s (Max:     0.038s, Calls: 14)
    Refinement sat check:                              0.147s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.028s
  ARG update:                                          0.063s

Length of refined path (in blocks):                      98 (count: 14, min: 3, max: 11, avg: 7.00)
Number of affected states:                               62 (count: 14, min: 1, max: 10, avg: 4.43)
Length (states) of path with itp 'true':                 22 (count: 14, min: 0, max: 6, avg: 1.57)
Length (states) of path with itp non-trivial itp:        62 (count: 14, min: 1, max: 10, avg: 4.43)
Length (states) of path with itp 'false':                 2 (count: 14, min: 0, max: 1, avg: 0.14)
Different non-trivial interpolants along paths:          23 (count: 14, min: 0, max: 7, avg: 1.64)
Equal non-trivial interpolants along paths:              25 (count: 14, min: 0, max: 5, avg: 1.79)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1170
Max. size of reached set after ref.:  465
Avg. size of reached set before ref.: 612.79
Avg. size of reached set after ref.:  218.14

Total time for CEGAR algorithm:       6.135s
Time for refinements:                 0.502s
Average time for refinement:          0.035s
Max time for refinement:              0.084s

Code Coverage
-----------------------------
  Function coverage:      0.944
  Visited lines:          190
  Total lines:            200
  Line coverage:          0.950
  Visited conditions:     64
  Total conditions:       68
  Condition coverage:     0.941

CPAchecker general statistics
-----------------------------
Number of program locations:     320
Number of CFA edges:             360
Number of relevant variables:    35
Number of functions:             18
Number of loops:                 4
Size of reached set:             2468
  Number of reached locations:   225 (70%)
    Avg states per location:     10
    Max states per location:     46 (at node N1)
  Number of reached functions:   17 (94%)
  Number of partitions:          2455
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N228 (before lines 329-369), Function eval called from node N287, stack depth 3 [996a546], stack [main, start_simulation, eval]])
  Number of target states:       0

Time for analysis setup:          2.882s
  Time for loading CPAs:          0.871s
  Time for loading parser:        0.738s
  Time for CFA construction:      1.156s
    Time for parsing file(s):     0.448s
    Time for AST to CFA:          0.229s
    Time for CFA sanity check:    0.091s
    Time for post-processing:     0.217s
      Time for var class.:        0.080s
Time for Analysis:                6.135s
CPU time for analysis:            6.130s
Time for analyzing result:        0.002s
Total time for CPAchecker:        9.022s
Total CPU time for CPAchecker:    9.010s
Time for statistics:              0.165s

Time for Garbage Collector:       0.156s (in 8 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     37MB (    35 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     30MB (    29 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8097MB (  7722 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
