scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_snn7__mt/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            141 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            94 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (33%)
  Times precision was empty:       113 (80%)
  Times precision was {false}:     28 (20%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        28 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         18375
  BDD entailment checks:           21
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         28
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          28 (100%)

Time for post operator:                  5.089s
  Time for path formula creation:        4.887s
Time for strengthen operator:            0.239s
Time for prec operator:                  2.367s
  Time for abstraction:                  2.202s (Max:     0.204s, Count: 141)
    Solving time:                        0.737s (Max:     0.085s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.036s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.737s

Number of path formula cache hits:   156 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.744s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 304, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.343s
Automaton transfers with branching:                0
Automaton transfer successors:                        44667 (count: 44667, min: 1, max: 1, avg: 1.00) [1 x 44667]

CPA algorithm statistics
------------------------
Number of iterations:            33027
Max size of waitlist:            44
Average size of waitlist:        26
Number of computed successors:   42310
Max successors for one state:    2
Number of times merged:          9177
Number of times stopped:         9198
Number of times breaked:         29

Total time for CPA algorithm:        14.136s (Max:     3.574s)
  Time for choose from waitlist:      0.142s
  Time for precision adjustment:      3.326s
  Time for transfer relation:         7.559s
  Time for merge operator:            1.750s
  Time for stop operator:             0.265s
  Time for adding to reached set:     0.194s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                  61 (count: 29, min: 1, max: 4, avg: 2.10)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.314s
  Counterexample analysis:                             7.704s (Max:     0.816s, Calls: 29)
    Refinement sat check:                              6.830s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.009s
  ARG update:                                          0.039s

Length of refined path (in blocks):                      44 (count: 28, min: 1, max: 3, avg: 1.57)
Number of affected states:                                0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 16 (count: 28, min: 0, max: 2, avg: 0.57)
Length (states) of path with itp non-trivial itp:         0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                10 (count: 28, min: 0, max: 1, avg: 0.36)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 28, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 26911
Max. size of reached set after ref.:  26847
Avg. size of reached set before ref.: 21222.17
Avg. size of reached set after ref.:  20798.50

Total time for CEGAR algorithm:      25.943s
Time for refinements:                11.193s
Average time for refinement:          0.385s
Max time for refinement:              0.950s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          983
  Total lines:            1668
  Line coverage:          0.589
  Visited conditions:     576
  Total conditions:       722
  Condition coverage:     0.798

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             26829
  Number of reached locations:   1119 (51%)
    Avg states per location:     23
    Max states per location:     305 (at node N39)
  Number of reached functions:   44 (62%)
  Number of partitions:          26829
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        36

Time for analysis setup:          4.297s
  Time for loading CPAs:          0.868s
  Time for loading parser:        0.756s
  Time for CFA construction:      2.464s
    Time for parsing file(s):     0.700s
    Time for AST to CFA:          0.725s
    Time for CFA sanity check:    0.257s
    Time for post-processing:     0.595s
      Time for var class.:        0.334s
Time for Analysis:               25.943s
CPU time for analysis:           25.950s
Total time for CPAchecker:       30.245s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.664s

Time for Garbage Collector:       1.242s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                132MB (   126 MiB) max;     71MB (    68 MiB) avg;    142MB (   136 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           153MB (   146 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8152MB (  7775 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
