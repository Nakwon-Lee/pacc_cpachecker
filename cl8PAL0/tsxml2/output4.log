scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_18ytew99/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            177 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            121 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         56 (32%)
  Times precision was empty:       144 (81%)
  Times precision was {false}:     33 (19%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        32 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         29764
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         33
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          33 (100%)

Time for post operator:                  5.706s
  Time for path formula creation:        5.470s
Time for strengthen operator:            0.179s
Time for prec operator:                  3.810s
  Time for abstraction:                  3.563s (Max:     0.298s, Count: 177)
    Solving time:                        1.182s (Max:     0.132s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.274s
Time for coverage check:                 0.017s
Total time for SMT solver (w/o itp):     1.182s

Number of path formula cache hits:   72 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.316s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 340, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.445s
Automaton transfers with branching:                0
Automaton transfer successors:                        72091 (count: 72091, min: 1, max: 1, avg: 1.00) [1 x 72091]

CPA algorithm statistics
------------------------
Number of iterations:            53272
Max size of waitlist:            87
Average size of waitlist:        44
Number of computed successors:   68298
Max successors for one state:    2
Number of times merged:          14882
Number of times stopped:         14882
Number of times breaked:         33

Total time for CPA algorithm:        17.144s (Max:     3.487s)
  Time for choose from waitlist:      0.133s
  Time for precision adjustment:      5.052s
  Time for transfer relation:         8.217s
  Time for merge operator:            2.047s
  Time for stop operator:             0.374s
  Time for adding to reached set:     0.355s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                  58 (count: 33, min: 1, max: 2, avg: 1.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.279s
  Counterexample analysis:                             3.773s (Max:     0.539s, Calls: 33)
    Refinement sat check:                              3.368s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.026s
  ARG update:                                          0.006s

Length of refined path (in blocks):                      48 (count: 33, min: 1, max: 2, avg: 1.45)
Number of affected states:                                0 (count: 33, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 15 (count: 33, min: 0, max: 1, avg: 0.45)
Length (states) of path with itp non-trivial itp:         0 (count: 33, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                10 (count: 33, min: 0, max: 1, avg: 0.30)
Different non-trivial interpolants along paths:           0 (count: 33, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 33, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 53079
Max. size of reached set after ref.:  53038
Avg. size of reached set before ref.: 33087.27
Avg. size of reached set after ref.:  33076.76

Total time for CEGAR algorithm:      25.461s
Time for refinements:                 7.133s
Average time for refinement:          0.216s
Max time for refinement:              0.711s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          956
  Total lines:            1668
  Line coverage:          0.573
  Visited conditions:     556
  Total conditions:       722
  Condition coverage:     0.770

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             53037
  Number of reached locations:   1087 (50%)
    Avg states per location:     48
    Max states per location:     610 (at node N39)
  Number of reached functions:   44 (62%)
  Number of partitions:          53037
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        81

Time for analysis setup:          4.259s
  Time for loading CPAs:          0.898s
  Time for loading parser:        0.733s
  Time for CFA construction:      2.414s
    Time for parsing file(s):     0.696s
    Time for AST to CFA:          0.679s
    Time for CFA sanity check:    0.279s
    Time for post-processing:     0.588s
      Time for var class.:        0.317s
Time for Analysis:               25.461s
CPU time for analysis:           25.470s
Total time for CPAchecker:       29.728s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.728s

Time for Garbage Collector:       1.485s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     67MB (    64 MiB) avg;    141MB (   134 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    30 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           171MB (   164 MiB) max;    135MB (   129 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8205MB (  7825 MiB) max;   8123MB (  7747 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
