scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9ct6uiay/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            138 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            94 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         44 (32%)
  Times precision was empty:       115 (83%)
  Times precision was {false}:     22 (16%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        23 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         29742
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         23
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.05
Number of irrelevant predicates:          23 (100%)

Time for post operator:                  5.988s
  Time for path formula creation:        5.686s
Time for strengthen operator:            0.260s
Time for prec operator:                  2.493s
  Time for abstraction:                  2.221s (Max:     0.310s, Count: 138)
    Solving time:                        0.690s (Max:     0.111s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.526s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.690s

Number of path formula cache hits:   36 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.457s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 253, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.520s
  Time for transition matches:                         0.214s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        71796 (count: 71796, min: 1, max: 1, avg: 1.00) [1 x 71796]

CPA algorithm statistics
------------------------
Number of iterations:            53042
Max size of waitlist:            86
Average size of waitlist:        44
Number of computed successors:   68027
Max successors for one state:    2
Number of times merged:          14869
Number of times stopped:         14873
Number of times breaked:         24

Total time for CPA algorithm:        17.113s (Max:     3.519s)
  Time for choose from waitlist:      0.149s
  Time for precision adjustment:      3.836s
  Time for transfer relation:         9.206s
  Time for merge operator:            2.350s
  Time for stop operator:             0.307s
  Time for adding to reached set:     0.349s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                  42 (count: 24, min: 1, max: 3, avg: 1.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.487s
  Counterexample analysis:                             4.006s (Max:     1.055s, Calls: 24)
    Refinement sat check:                              3.566s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.014s
  ARG update:                                          0.003s

Length of refined path (in blocks):                      39 (count: 24, min: 1, max: 3, avg: 1.63)
Number of affected states:                                0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 15 (count: 24, min: 0, max: 2, avg: 0.63)
Length (states) of path with itp non-trivial itp:         0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 3 (count: 24, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 24, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 52987
Max. size of reached set after ref.:  52986
Avg. size of reached set before ref.: 30330.96
Avg. size of reached set after ref.:  30324.88

Total time for CEGAR algorithm:      25.231s
Time for refinements:                 7.318s
Average time for refinement:          0.304s
Max time for refinement:              1.314s

Code Coverage
-----------------------------
  Function coverage:      0.662
  Visited lines:          1056
  Total lines:            1668
  Line coverage:          0.633
  Visited conditions:     604
  Total conditions:       722
  Condition coverage:     0.837

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             52986
  Number of reached locations:   1195 (55%)
    Avg states per location:     44
    Max states per location:     620 (at node N39)
  Number of reached functions:   47 (66%)
  Number of partitions:          52986
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        82

Time for analysis setup:          4.536s
  Time for loading CPAs:          0.907s
  Time for loading parser:        0.812s
  Time for CFA construction:      2.623s
    Time for parsing file(s):     0.765s
    Time for AST to CFA:          0.791s
    Time for CFA sanity check:    0.297s
    Time for post-processing:     0.568s
      Time for var class.:        0.296s
Time for Analysis:               25.231s
CPU time for analysis:           25.240s
Total time for CPAchecker:       29.772s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.820s

Time for Garbage Collector:       1.584s (in 49 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                142MB (   136 MiB) max;     70MB (    66 MiB) avg;    153MB (   146 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           192MB (   183 MiB) max;    138MB (   131 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8146MB (  7769 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
