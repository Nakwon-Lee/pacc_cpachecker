scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_08f_ov2r/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            129 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            87 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (33%)
  Times precision was empty:       104 (81%)
  Times precision was {false}:     25 (19%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        25 (19%)
Number of strengthen sat checks:   0
Number of coverage checks:         18281
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         25
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          25 (100%)

Time for post operator:                  4.478s
  Time for path formula creation:        4.355s
Time for strengthen operator:            0.232s
Time for prec operator:                  2.474s
  Time for abstraction:                  2.260s (Max:     0.218s, Count: 129)
    Solving time:                        0.669s (Max:     0.067s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 0.975s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.669s

Number of path formula cache hits:   153 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.214s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 275, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.391s
Automaton transfers with branching:                0
Automaton transfer successors:                        44429 (count: 44429, min: 1, max: 1, avg: 1.00) [1 x 44429]

CPA algorithm statistics
------------------------
Number of iterations:            32832
Max size of waitlist:            48
Average size of waitlist:        27
Number of computed successors:   42064
Max successors for one state:    2
Number of times merged:          9131
Number of times stopped:         9150
Number of times breaked:         26

Total time for CPA algorithm:        13.409s (Max:     3.448s)
  Time for choose from waitlist:      0.114s
  Time for precision adjustment:      3.377s
  Time for transfer relation:         6.953s
  Time for merge operator:            1.707s
  Time for stop operator:             0.192s
  Time for adding to reached set:     0.232s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                  54 (count: 26, min: 1, max: 4, avg: 2.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.377s
  Counterexample analysis:                             7.865s (Max:     1.093s, Calls: 26)
    Refinement sat check:                              6.989s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.016s
  ARG update:                                          0.015s

Length of refined path (in blocks):                      41 (count: 25, min: 1, max: 3, avg: 1.64)
Number of affected states:                                0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 16 (count: 25, min: 0, max: 2, avg: 0.64)
Length (states) of path with itp non-trivial itp:         0 (count: 25, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 9 (count: 25, min: 0, max: 1, avg: 0.36)
Different non-trivial interpolants along paths:           0 (count: 25, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 25, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 32203
Max. size of reached set after ref.:  32159
Avg. size of reached set before ref.: 23035.35
Avg. size of reached set after ref.:  22641.16

Total time for CEGAR algorithm:      25.383s
Time for refinements:                11.374s
Average time for refinement:          0.437s
Max time for refinement:              1.605s

Code Coverage
-----------------------------
  Function coverage:      0.662
  Visited lines:          1050
  Total lines:            1668
  Line coverage:          0.629
  Visited conditions:     602
  Total conditions:       722
  Condition coverage:     0.834

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             32203
  Number of reached locations:   1188 (54%)
    Avg states per location:     27
    Max states per location:     371 (at node N39)
  Number of reached functions:   47 (66%)
  Number of partitions:          32203
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        47

Time for analysis setup:          4.374s
  Time for loading CPAs:          0.956s
  Time for loading parser:        0.748s
  Time for CFA construction:      2.497s
    Time for parsing file(s):     0.746s
    Time for AST to CFA:          0.711s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.572s
      Time for var class.:        0.319s
Time for Analysis:               25.383s
CPU time for analysis:           25.380s
Total time for CPAchecker:       29.762s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.743s

Time for Garbage Collector:       1.206s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                148MB (   141 MiB) max;     76MB (    72 MiB) avg;    168MB (   160 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           191MB (   182 MiB) max;    148MB (   141 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8149MB (  7771 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
