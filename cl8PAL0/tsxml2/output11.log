scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_sas_uz3w/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            118 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            79 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         39 (33%)
  Times precision was empty:       94 (80%)
  Times precision was {false}:     24 (20%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        24 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         15457
  BDD entailment checks:           19
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          24 (100%)

Time for post operator:                  4.556s
  Time for path formula creation:        4.422s
Time for strengthen operator:            0.132s
Time for prec operator:                  2.583s
  Time for abstraction:                  2.365s (Max:     0.284s, Count: 118)
    Solving time:                        0.809s (Max:     0.105s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.077s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.809s

Number of path formula cache hits:   152 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.258s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 259, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.482s
Automaton transfers with branching:                0
Automaton transfer successors:                        37718 (count: 37718, min: 1, max: 1, avg: 1.00) [1 x 37718]

CPA algorithm statistics
------------------------
Number of iterations:            27862
Max size of waitlist:            47
Average size of waitlist:        25
Number of computed successors:   35674
Max successors for one state:    2
Number of times merged:          7719
Number of times stopped:         7738
Number of times breaked:         24

Total time for CPA algorithm:        13.557s (Max:     3.735s)
  Time for choose from waitlist:      0.169s
  Time for precision adjustment:      3.579s
  Time for transfer relation:         6.777s
  Time for merge operator:            1.788s
  Time for stop operator:             0.239s
  Time for adding to reached set:     0.250s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                  50 (count: 24, min: 1, max: 4, avg: 2.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.312s
  Counterexample analysis:                             7.779s (Max:     1.178s, Calls: 24)
    Refinement sat check:                              6.911s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.007s
  ARG update:                                          0.012s

Length of refined path (in blocks):                      39 (count: 24, min: 1, max: 3, avg: 1.63)
Number of affected states:                                0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 15 (count: 24, min: 0, max: 2, avg: 0.63)
Length (states) of path with itp non-trivial itp:         0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 9 (count: 24, min: 0, max: 1, avg: 0.38)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 24, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 26849
Max. size of reached set after ref.:  26848
Avg. size of reached set before ref.: 22273.17
Avg. size of reached set after ref.:  22244.58

Total time for CEGAR algorithm:      25.647s
Time for refinements:                11.471s
Average time for refinement:          0.477s
Max time for refinement:              1.425s

Code Coverage
-----------------------------
  Function coverage:      0.662
  Visited lines:          1050
  Total lines:            1668
  Line coverage:          0.629
  Visited conditions:     602
  Total conditions:       722
  Condition coverage:     0.834

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             27225
  Number of reached locations:   1187 (54%)
    Avg states per location:     22
    Max states per location:     311 (at node N39)
  Number of reached functions:   47 (66%)
  Number of partitions:          27225
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          4.559s
  Time for loading CPAs:          0.879s
  Time for loading parser:        0.825s
  Time for CFA construction:      2.658s
    Time for parsing file(s):     0.776s
    Time for AST to CFA:          0.772s
    Time for CFA sanity check:    0.277s
    Time for post-processing:     0.640s
      Time for var class.:        0.350s
Time for Analysis:               25.647s
CPU time for analysis:           25.640s
Total time for CPAchecker:       30.212s
Total CPU time for CPAchecker:   30.200s
Time for statistics:              0.650s

Time for Garbage Collector:       1.465s (in 43 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                135MB (   128 MiB) max;     68MB (    65 MiB) avg;    177MB (   169 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           189MB (   180 MiB) max;    139MB (   132 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8207MB (  7827 MiB) max;   8145MB (  7767 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
