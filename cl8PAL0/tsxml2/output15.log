scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product21_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_igjbn1wy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 862: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1217: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1297: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1459: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1493: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1502: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1542: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1635: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1987: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2026: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2060: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2116: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2158: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2733: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3257: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3094: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            142 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            96 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         46 (32%)
  Times precision was empty:       118 (83%)
  Times precision was {false}:     24 (17%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        24 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         29690
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3329
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          24 (100%)

Time for post operator:                  6.624s
  Time for path formula creation:        6.376s
Time for strengthen operator:            0.253s
Time for prec operator:                  2.650s
  Time for abstraction:                  2.351s (Max:     0.232s, Count: 142)
    Solving time:                        0.782s (Max:     0.061s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.704s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.782s

Number of path formula cache hits:   37 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.153s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 266, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.534s
  Time for transition matches:                         0.171s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        71615 (count: 71615, min: 1, max: 1, avg: 1.00) [1 x 71615]

CPA algorithm statistics
------------------------
Number of iterations:            52910
Max size of waitlist:            88
Average size of waitlist:        44
Number of computed successors:   67874
Max successors for one state:    2
Number of times merged:          14844
Number of times stopped:         14846
Number of times breaked:         25

Total time for CPA algorithm:        18.463s (Max:     3.632s)
  Time for choose from waitlist:      0.165s
  Time for precision adjustment:      4.094s
  Time for transfer relation:         9.849s
  Time for merge operator:            2.566s
  Time for stop operator:             0.310s
  Time for adding to reached set:     0.419s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                  42 (count: 25, min: 1, max: 2, avg: 1.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.899s
  Counterexample analysis:                             2.502s (Max:     0.274s, Calls: 25)
    Refinement sat check:                              2.238s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.014s
  ARG update:                                          0.005s

Length of refined path (in blocks):                      37 (count: 24, min: 1, max: 2, avg: 1.54)
Number of affected states:                                0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 13 (count: 24, min: 0, max: 1, avg: 0.54)
Length (states) of path with itp non-trivial itp:         0 (count: 24, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 3 (count: 24, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:           0 (count: 24, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 24, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     24
Number of failed refinements:         0
Max. size of reached set before ref.: 52859
Max. size of reached set after ref.:  52815
Avg. size of reached set before ref.: 29459.00
Avg. size of reached set after ref.:  28477.92

Total time for CEGAR algorithm:      24.865s
Time for refinements:                 5.606s
Average time for refinement:          0.224s
Max time for refinement:              0.580s

Code Coverage
-----------------------------
  Function coverage:      0.620
  Visited lines:          989
  Total lines:            1668
  Line coverage:          0.593
  Visited conditions:     578
  Total conditions:       722
  Condition coverage:     0.801

CPAchecker general statistics
-----------------------------
Number of program locations:     2180
Number of CFA edges:             2658
Number of relevant variables:    303
Number of functions:             71
Number of loops:                 9
Size of reached set:             52859
  Number of reached locations:   1127 (52%)
    Avg states per location:     46
    Max states per location:     610 (at node N39)
  Number of reached functions:   44 (62%)
  Number of partitions:          52859
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        87

Time for analysis setup:          4.831s
  Time for loading CPAs:          0.909s
  Time for loading parser:        0.862s
  Time for CFA construction:      2.855s
    Time for parsing file(s):     0.793s
    Time for AST to CFA:          0.924s
    Time for CFA sanity check:    0.295s
    Time for post-processing:     0.653s
      Time for var class.:        0.365s
Time for Analysis:               24.865s
CPU time for analysis:           24.860s
Total time for CPAchecker:       29.704s
Total CPU time for CPAchecker:   29.690s
Time for statistics:              0.760s

Time for Garbage Collector:       1.588s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                157MB (   150 MiB) max;     65MB (    62 MiB) avg;    169MB (   161 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           198MB (   189 MiB) max;    132MB (   126 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8138MB (  7761 MiB) max;   8120MB (  7744 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
