scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec14_product27_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s1tjtf42/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 140: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 322: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 356: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 405: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 485: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 498: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 850: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 913: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1000: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1014: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1587: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1598: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2419: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2431: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2454: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2544: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2583: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2622: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2736: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2972: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3283: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2210: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            6 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (70%)
  Times precision was empty:       6 (30%)
  Times precision was {false}:     9 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (25%)
  Times result was 'false':        8 (40%)
Number of strengthen sat checks:   0
Number of coverage checks:         21830
  BDD entailment checks:           10
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3507
Number of predicates discovered:          15
Number of abstraction locations:          2
Max number of predicates per location:    14
Avg number of predicates per location:    7
Total predicates per abstraction:         79
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 5.64
Number of irrelevant predicates:          9 (11%)
Number of preds handled by boolean abs:   70 (89%)
  Total number of models for allsat:      65
  Max number of models for allsat:        34
  Avg number of models for allsat:        13.00

Time for post operator:                  4.532s
  Time for path formula creation:        4.297s
Time for strengthen operator:            0.305s
Time for prec operator:                  8.806s
  Time for abstraction:                  8.655s (Max:     1.587s, Count: 20)
    Boolean abstraction:                 4.208s
    Solving time:                        5.473s (Max:     1.161s)
    Model enumeration time:              1.799s
    Time for BDD construction:           0.076s (Max:     0.033s)
Time for merge operator:                 1.226s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     7.272s

Number of path formula cache hits:   6481 (12%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.130s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               1638
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         176 (count: 178, min: 0, max: 70, avg: 0.99)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.323s
Automaton transfers with branching:                0
Automaton transfer successors:                        53625 (count: 53625, min: 1, max: 1, avg: 1.00) [1 x 53625]

CPA algorithm statistics
------------------------
Number of iterations:            39952
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   50878
Max successors for one state:    2
Number of times merged:          10910
Number of times stopped:         10910
Number of times breaked:         5

Total time for CPA algorithm:        20.590s (Max:    10.340s)
  Time for choose from waitlist:      0.158s
  Time for precision adjustment:      9.720s
  Time for transfer relation:         7.177s
  Time for merge operator:            1.963s
  Time for stop operator:             0.332s
  Time for adding to reached set:     0.295s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   5
Avg. length of target path (in blocks):                   6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.603s
  Counterexample analysis:                             4.410s (Max:     1.799s, Calls: 5)
    Refinement sat check:                              4.115s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.003s
  ARG update:                                          0.035s

Length of refined path (in blocks):                       6 (count: 5, min: 1, max: 2, avg: 1.20)
Number of affected states:                                1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'true':                  0 (count: 5, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 5, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp 'false':                 0 (count: 5, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 5, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 5, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                5
Number of successful refinements:     5
Number of failed refinements:         0
Max. size of reached set before ref.: 19819
Max. size of reached set after ref.:  15801
Avg. size of reached set before ref.: 11866.00
Avg. size of reached set after ref.:  11061.60

Total time for CEGAR algorithm:      25.880s
Time for refinements:                 5.204s
Average time for refinement:          1.040s
Max time for refinement:              2.133s

Code Coverage
-----------------------------
  Function coverage:      0.644
  Visited lines:          994
  Total lines:            1659
  Line coverage:          0.599
  Visited conditions:     568
  Total conditions:       712
  Condition coverage:     0.798

CPAchecker general statistics
-----------------------------
Number of program locations:     2169
Number of CFA edges:             2637
Number of relevant variables:    295
Number of functions:             73
Number of loops:                 9
Size of reached set:             35938
  Number of reached locations:   1125 (52%)
    Avg states per location:     31
    Max states per location:     259 (at node N2052)
  Number of reached functions:   47 (64%)
  Number of partitions:          35934
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N1340 (before lines 1757-1785), Function cleanup called from node N1877, stack depth 4 [7381d6f0], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          4.424s
  Time for loading CPAs:          0.905s
  Time for loading parser:        0.741s
  Time for CFA construction:      2.602s
    Time for parsing file(s):     0.759s
    Time for AST to CFA:          0.769s
    Time for CFA sanity check:    0.270s
    Time for post-processing:     0.582s
      Time for var class.:        0.325s
Time for Analysis:               25.880s
CPU time for analysis:           25.890s
Total time for CPAchecker:       30.308s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.762s

Time for Garbage Collector:       0.832s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   104 MiB) max;     63MB (    60 MiB) avg;    119MB (   113 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8204MB (  7824 MiB) max;   8154MB (  7777 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
