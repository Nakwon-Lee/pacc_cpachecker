scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gxa5xilj/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            110 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            75 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (32%)
  Times precision was empty:       84 (76%)
  Times precision was {false}:     20 (18%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (5%)
  Times result was 'false':        20 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         15586
  BDD entailment checks:           18
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          3
Number of abstraction locations:          4
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         26
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.04
Number of irrelevant predicates:          21 (81%)
Number of preds handled by boolean abs:   5 (19%)
  Total number of models for allsat:      7
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.40

Time for post operator:                  3.902s
  Time for path formula creation:        3.815s
Time for strengthen operator:            0.159s
Time for prec operator:                  1.837s
  Time for abstraction:                  1.703s (Max:     0.213s, Count: 110)
    Boolean abstraction:                 0.020s
    Solving time:                        0.509s (Max:     0.076s)
    Model enumeration time:              0.002s
    Time for BDD construction:           0.008s (Max:     0.008s)
Time for merge operator:                 0.894s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.511s

Number of path formula cache hits:   219 (1%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.730s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 258, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.376s
Automaton transfers with branching:                0
Automaton transfer successors:                        38280 (count: 38280, min: 1, max: 1, avg: 1.00) [1 x 38280]

CPA algorithm statistics
------------------------
Number of iterations:            28198
Max size of waitlist:            47
Average size of waitlist:        24
Number of computed successors:   36066
Max successors for one state:    2
Number of times merged:          7784
Number of times stopped:         7800
Number of times breaked:         20

Total time for CPA algorithm:        11.438s (Max:     3.269s)
  Time for choose from waitlist:      0.101s
  Time for precision adjustment:      2.752s
  Time for transfer relation:         5.836s
  Time for merge operator:            1.543s
  Time for stop operator:             0.228s
  Time for adding to reached set:     0.343s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   20
Avg. length of target path (in blocks):                  51 (count: 20, min: 1, max: 6, avg: 2.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.513s
  Counterexample analysis:                            10.062s (Max:     2.860s, Calls: 20)
    Refinement sat check:                              9.153s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.016s
  ARG update:                                          0.022s

Length of refined path (in blocks):                      39 (count: 19, min: 1, max: 5, avg: 2.05)
Number of affected states:                                2 (count: 19, min: 0, max: 2, avg: 0.11)
Length (states) of path with itp 'true':                 18 (count: 19, min: 0, max: 3, avg: 0.95)
Length (states) of path with itp non-trivial itp:         2 (count: 19, min: 0, max: 2, avg: 0.11)
Length (states) of path with itp 'false':                 5 (count: 19, min: 0, max: 1, avg: 0.26)
Different non-trivial interpolants along paths:           1 (count: 19, min: 0, max: 1, avg: 0.05)
Equal non-trivial interpolants along paths:               0 (count: 19, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                20
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 27798
Max. size of reached set after ref.:  27670
Avg. size of reached set before ref.: 22101.75
Avg. size of reached set after ref.:  21778.32

Total time for CEGAR algorithm:      25.376s
Time for refinements:                13.474s
Average time for refinement:          0.673s
Max time for refinement:              2.997s

Code Coverage
-----------------------------
  Function coverage:      0.681
  Visited lines:          1121
  Total lines:            1678
  Line coverage:          0.668
  Visited conditions:     640
  Total conditions:       724
  Condition coverage:     0.884

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             27798
  Number of reached locations:   1266 (58%)
    Avg states per location:     21
    Max states per location:     310 (at node N39)
  Number of reached functions:   49 (68%)
  Number of partitions:          27797
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1781 (before lines 2239-2297), Function existInLiftCallsInDirection called from node N1945, stack depth 7 [6ae729fb], stack [main, runTest, test, cleanup, timeShift, __utac_acc__Specification13_spec__2, existInLiftCallsInDirection]])
  Number of target states:       1
  Size of final wait list        39

Time for analysis setup:          4.384s
  Time for loading CPAs:          0.849s
  Time for loading parser:        0.747s
  Time for CFA construction:      2.572s
    Time for parsing file(s):     0.729s
    Time for AST to CFA:          0.762s
    Time for CFA sanity check:    0.272s
    Time for post-processing:     0.617s
      Time for var class.:        0.341s
Time for Analysis:               25.377s
CPU time for analysis:           25.380s
Total time for CPAchecker:       29.766s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.612s

Time for Garbage Collector:       1.225s (in 39 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                131MB (   125 MiB) max;     76MB (    72 MiB) avg;    162MB (   154 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           191MB (   182 MiB) max;    150MB (   143 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8269MB (  7886 MiB) max;   8152MB (  7774 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
