scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--net--wireless--orinoco--orinoco_pci.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_klp5ihtr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iomap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_orinocodev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hermes_struct_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function iowrite16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ioread16 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function orinoco_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function orinoco_if_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_orinocodev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_iounmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            21 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16 (76%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5 (24%)
  Times precision was empty:       9 (43%)
  Times precision was {false}:     3 (14%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      9 (43%)
  Times result was 'false':        3 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         56
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       88
Number of predicates discovered:          2
Number of abstraction locations:          5
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          3 (25%)
Number of preds handled by boolean abs:   9 (75%)
  Total number of models for allsat:      9
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.358s
  Time for path formula creation:        0.345s
Time for strengthen operator:            0.019s
Time for prec operator:                  0.106s
  Time for abstraction:                  0.103s (Max:     0.023s, Count: 21)
    Boolean abstraction:                 0.045s
    Solving time:                        0.029s (Max:     0.010s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.029s
Time for coverage check:                 0.010s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     0.032s

Number of path formula cache hits:   373 (22%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.334s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 93, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.054s
Automaton transfers with branching:                0
Automaton transfer successors:                         1640 (count: 1640, min: 1, max: 1, avg: 1.00) [1 x 1640]

CPA algorithm statistics
------------------------
Number of iterations:            361
Max size of waitlist:            12
Average size of waitlist:        8
Number of computed successors:   401
Max successors for one state:    2
Number of times merged:          24
Number of times stopped:         32
Number of times breaked:         2

Total time for CPA algorithm:         0.753s (Max:     0.594s)
  Time for choose from waitlist:      0.002s
  Time for precision adjustment:      0.141s
  Time for transfer relation:         0.532s
  Time for merge operator:            0.045s
  Time for stop operator:             0.015s
  Time for adding to reached set:     0.011s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   6 (count: 2, min: 1, max: 5, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.043s
  Counterexample analysis:                             0.024s (Max:     0.013s, Calls: 2)
    Refinement sat check:                              0.011s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.006s
  Precision update:                                    0.007s
  ARG update:                                          0.001s

Length of refined path (in blocks):                       6 (count: 2, min: 1, max: 5, avg: 3.00)
Number of affected states:                                4 (count: 2, min: 0, max: 4, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 2, min: 0, max: 4, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               3 (count: 2, min: 0, max: 3, avg: 1.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 183
Max. size of reached set after ref.:  172
Avg. size of reached set before ref.: 178.00
Avg. size of reached set after ref.:  96.50

Total time for CEGAR algorithm:       0.810s
Time for refinements:                 0.056s
Average time for refinement:          0.028s
Max time for refinement:              0.037s

Code Coverage
-----------------------------
  Function coverage:      0.409
  Visited lines:          1082
  Total lines:            1249
  Line coverage:          0.866
  Visited conditions:     40
  Total conditions:       64
  Condition coverage:     0.625

CPAchecker general statistics
-----------------------------
Number of program locations:     1409
Number of CFA edges:             1441
Number of relevant variables:    114
Number of functions:             22
Number of loops:                 4
Size of reached set:             204
  Number of reached locations:   150 (11%)
    Avg states per location:     1
    Max states per location:     3 (at node N14)
  Number of reached functions:   9 (41%)
  Number of partitions:          204
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          3.139s
  Time for loading CPAs:          0.608s
  Time for loading parser:        0.461s
  Time for CFA construction:      1.966s
    Time for parsing file(s):     0.637s
    Time for AST to CFA:          0.667s
    Time for CFA sanity check:    0.088s
    Time for post-processing:     0.378s
      Time for var class.:        0.123s
Time for Analysis:                0.811s
CPU time for analysis:            0.810s
Time for analyzing result:        0.000s
Total time for CPAchecker:        3.952s
Total CPU time for CPAchecker:    3.930s
Time for statistics:              0.066s

Time for Garbage Collector:       0.110s (in 6 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 52MB (    49 MiB) max;     31MB (    30 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             33MB (    32 MiB) max;     24MB (    23 MiB) avg;     34MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    34 MiB) max;     26MB (    25 MiB) avg
Total process virtual memory:   8132MB (  7756 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
