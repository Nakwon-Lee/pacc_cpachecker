scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_fib_longer_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_lef241r6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 825: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 912: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 918: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Could not replay error path to get a more precise model (build_model: too many iterations) (PredicateCPA:Mathsat5NativeApi.processSolveResult, WARNING)

The satisfying assignment may be imprecise! (PredicateCPA:PathChecker.createCounterexample, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            488 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            445 (91%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (9%)
  Times precision was empty:       18 (4%)
  Times precision was {false}:     192 (39%)
  Times result was cached:         6 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      272 (56%)
  Times result was 'false':        231 (47%)
Number of strengthen sat checks:   0
Number of coverage checks:         7857
  BDD entailment checks:           1499
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       348
Number of predicates discovered:          12
Number of abstraction locations:          5
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         2020
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 4.35
Number of irrelevant predicates:          319 (16%)
Number of preds handled by boolean abs:   1699 (84%)
  Total number of models for allsat:      1342
  Max number of models for allsat:        28
  Avg number of models for allsat:        4.93

Time for post operator:                  2.257s
  Time for path formula creation:        2.216s
Time for strengthen operator:            0.052s
Time for prec operator:                167.374s
  Time for abstraction:                167.304s (Max:    34.270s, Count: 488)
    Boolean abstraction:                14.592s
    Solving time:                      148.720s (Max:    34.115s)
    Model enumeration time:             12.580s
    Time for BDD construction:           0.094s (Max:     0.014s)
Time for merge operator:                 0.354s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):   161.300s

Number of path formula cache hits:   27807 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.219s

Total number of created targets for pointer analysis: 55173
   Number of created targets for uf: *signed_int is 325
   Number of created targets for uf: *unsigned_char is 1123
   Number of created targets for uf: *(unsigned_char)* is 505
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 25


Number of BDD nodes:                               3500
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1864 (count: 4800, min: 0, max: 90, avg: 0.39)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.144s
Automaton transfers with branching:                0
Automaton transfer successors:                        34845 (count: 34845, min: 1, max: 1, avg: 1.00) [1 x 34845]

CPA algorithm statistics
------------------------
Number of iterations:            20893
Max size of waitlist:            55
Average size of waitlist:        10
Number of computed successors:   25034
Max successors for one state:    2
Number of times merged:          3179
Number of times stopped:         3212
Number of times breaked:         13

Total time for CPA algorithm:       171.565s (Max:    51.964s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:    167.654s
  Time for transfer relation:         3.073s
  Time for merge operator:            0.450s
  Time for stop operator:             0.069s
  Time for adding to reached set:     0.101s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   13
Avg. length of target path (in blocks):                 177 (count: 13, min: 2, max: 37, avg: 13.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  35.038s
  Counterexample analysis:                            23.777s (Max:    21.140s, Calls: 13)
    Refinement sat check:                             20.437s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                         11.149s
  Predicate creation:                                  0.008s
  Precision update:                                    0.006s
  ARG update:                                          0.078s

Length of refined path (in blocks):                     135 (count: 12, min: 2, max: 32, avg: 11.25)
Number of affected states:                              120 (count: 12, min: 1, max: 31, avg: 10.00)
Length (states) of path with itp 'true':                  3 (count: 12, min: 0, max: 1, avg: 0.25)
Length (states) of path with itp non-trivial itp:       120 (count: 12, min: 1, max: 31, avg: 10.00)
Length (states) of path with itp 'false':                 5 (count: 12, min: 0, max: 1, avg: 0.42)
Different non-trivial interpolants along paths:          30 (count: 12, min: 0, max: 7, avg: 2.50)
Equal non-trivial interpolants along paths:              78 (count: 12, min: 0, max: 23, avg: 6.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                13
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 4176
Max. size of reached set after ref.:  507
Avg. size of reached set before ref.: 1780.00
Avg. size of reached set after ref.:  129.00

Total time for CEGAR algorithm:     206.667s
Time for refinements:                35.091s
Average time for refinement:          2.699s
Max time for refinement:             32.299s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          314
  Total lines:            379
  Line coverage:          0.828
  Visited conditions:     153
  Total conditions:       214
  Condition coverage:     0.715

CPAchecker general statistics
-----------------------------
Number of program locations:     745
Number of CFA edges:             809
Number of relevant variables:    51
Number of functions:             18
Number of loops:                 6
Size of reached set:             4176
  Number of reached locations:   218 (29%)
    Avg states per location:     19
    Max states per location:     152 (at node N8)
  Number of reached functions:   7 (39%)
  Number of partitions:          4142
    Avg size of partitions:      1
    Max size of partitions:      28 (with key [N288 (before line 844), Function main called from node N272, stack depth 1 [40db2a24], stack [main]])
  Number of target states:       1
  Size of final wait list        55

Time for analysis setup:          2.359s
  Time for loading CPAs:          0.409s
  Time for loading parser:        0.509s
  Time for CFA construction:      1.329s
    Time for parsing file(s):     0.434s
    Time for AST to CFA:          0.382s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.324s
      Time for var class.:        0.132s
Time for Analysis:              206.667s
CPU time for analysis:          206.660s
Time for analyzing result:        0.005s
Total time for CPAchecker:      209.030s
Total CPU time for CPAchecker:  209.010s
Time for statistics:              0.097s

Time for Garbage Collector:       0.398s (in 64 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     44MB (    42 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8534MB (  8139 MiB) max;   8306MB (  7921 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
