scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/32_1_cilled_true-unreach-call_ok_nondet_linux-3.4-32_1-drivers--block--paride--dstr.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_amov15e4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function paride_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            268 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            246 (92%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         22 (8%)
  Times precision was empty:       93 (35%)
  Times precision was {false}:     12 (4%)
  Times result was cached:         134 (50%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      29 (11%)
  Times result was 'false':        11 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         3945
  BDD entailment checks:           145
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       255
Number of predicates discovered:          2
Number of abstraction locations:          11
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         175
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 4.27
Number of irrelevant predicates:          29 (17%)
Number of preds handled by boolean abs:   29 (17%)
  Total number of models for allsat:      29
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.320s
  Time for path formula creation:        1.196s
Time for strengthen operator:            0.139s
Time for prec operator:                  3.000s
  Time for abstraction:                  2.902s (Max:     1.800s, Count: 268)
    Boolean abstraction:                 2.431s
    Solving time:                        1.539s (Max:     0.957s)
    Model enumeration time:              0.873s
    Time for BDD construction:           0.013s (Max:     0.004s)
Time for merge operator:                 0.166s
Time for coverage check:                 0.018s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     2.412s

Number of path formula cache hits:   51985 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.060s

Total number of created targets for pointer analysis: 25
   Number of created targets for uf: *(char)* is 6


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          53 (count: 478, min: 0, max: 8, avg: 0.11)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.318s
Automaton transfers with branching:                0
Automaton transfer successors:                        56022 (count: 56022, min: 1, max: 1, avg: 1.00) [1 x 56022]

CPA algorithm statistics
------------------------
Number of iterations:            19848
Max size of waitlist:            19
Average size of waitlist:        12
Number of computed successors:   21969
Max successors for one state:    2
Number of times merged:          1900
Number of times stopped:         2036
Number of times breaked:         11

Total time for CPA algorithm:         8.675s (Max:     2.244s)
  Time for choose from waitlist:      0.053s
  Time for precision adjustment:      3.450s
  Time for transfer relation:         4.034s
  Time for merge operator:            0.306s
  Time for stop operator:             0.138s
  Time for adding to reached set:     0.221s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  39 (count: 11, min: 1, max: 4, avg: 3.55)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.311s
  Counterexample analysis:                             0.141s (Max:     0.026s, Calls: 11)
    Refinement sat check:                              0.108s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.012s
  Precision update:                                    0.027s
  ARG update:                                          0.101s

Length of refined path (in blocks):                      39 (count: 11, min: 1, max: 4, avg: 3.55)
Number of affected states:                               28 (count: 11, min: 0, max: 3, avg: 2.55)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        28 (count: 11, min: 0, max: 3, avg: 2.55)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              18 (count: 11, min: 0, max: 2, avg: 1.64)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 2012
Max. size of reached set after ref.:  35
Avg. size of reached set before ref.: 1653.64
Avg. size of reached set after ref.:  23.09

Total time for CEGAR algorithm:       9.101s
Time for refinements:                 0.425s
Average time for refinement:          0.038s
Max time for refinement:              0.072s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          4362
  Total lines:            4408
  Line coverage:          0.990
  Visited conditions:     422
  Total conditions:       442
  Condition coverage:     0.955

CPAchecker general statistics
-----------------------------
Number of program locations:     4889
Number of CFA edges:             5267
Number of relevant variables:    446
Number of functions:             27
Number of loops:                 10
Size of reached set:             1987
  Number of reached locations:   1444 (30%)
    Avg states per location:     1
    Max states per location:     151 (at node N0)
  Number of reached functions:   18 (67%)
  Number of partitions:          1987
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.890s
  Time for loading CPAs:          1.022s
  Time for loading parser:        0.772s
  Time for CFA construction:      3.951s
    Time for parsing file(s):     1.027s
    Time for AST to CFA:          1.143s
    Time for CFA sanity check:    0.318s
    Time for post-processing:     1.170s
      Time for var class.:        0.583s
Time for Analysis:                9.102s
CPU time for analysis:            9.100s
Time for analyzing result:        0.005s
Total time for CPAchecker:       14.997s
Total CPU time for CPAchecker:   14.890s
Time for statistics:              0.193s

Time for Garbage Collector:       0.300s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     43MB (    41 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     30MB (    29 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8201MB (  7821 MiB) max;   8111MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
