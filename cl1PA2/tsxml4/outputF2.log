scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_szymanski_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0bf4dy_4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 822: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 822: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 823: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 877: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 878: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 957: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 963: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            875 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  552 (63%)
  Because of loop head:            293 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (3%)
  Times precision was empty:       146 (17%)
  Times precision was {false}:     62 (7%)
  Times result was cached:         345 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      322 (37%)
  Times result was 'false':        262 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         1912
  BDD entailment checks:           966
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       59
Number of predicates discovered:          14
Number of abstraction locations:          15
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         2679
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 6.98
Number of irrelevant predicates:          447 (17%)
Number of preds handled by boolean abs:   1077 (40%)
  Total number of models for allsat:      645
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.00

Time for post operator:                  1.877s
  Time for path formula creation:        1.842s
Time for strengthen operator:            0.041s
Time for prec operator:                  7.714s
  Time for abstraction:                  7.581s (Max:     0.150s, Count: 875)
    Boolean abstraction:                 4.366s
    Solving time:                        4.089s (Max:     0.142s)
    Model enumeration time:              0.979s
    Time for BDD construction:           0.076s (Max:     0.009s)
Time for merge operator:                 0.165s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):     5.068s

Number of path formula cache hits:   8077 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.838s

Total number of created targets for pointer analysis: 9645
   Number of created targets for uf: *signed_int is 10
   Number of created targets for uf: *unsigned_char is 173
   Number of created targets for uf: *(unsigned_char)* is 163
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 55


Number of BDD nodes:                               1280
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1238 (count: 3687, min: 0, max: 361, avg: 0.34)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.151s
Automaton transfers with branching:                0
Automaton transfer successors:                        10260 (count: 10260, min: 1, max: 1, avg: 1.00) [1 x 10260]

CPA algorithm statistics
------------------------
Number of iterations:            6752
Max size of waitlist:            30
Average size of waitlist:        8
Number of computed successors:   7636
Max successors for one state:    2
Number of times merged:          473
Number of times stopped:         534
Number of times breaked:         15

Total time for CPA algorithm:        11.094s (Max:     1.436s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:      7.934s
  Time for transfer relation:         2.574s
  Time for merge operator:            0.222s
  Time for stop operator:             0.084s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 296 (count: 15, min: 3, max: 34, avg: 19.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.807s
  Counterexample analysis:                             2.627s (Max:     1.382s, Calls: 15)
    Refinement sat check:                              2.163s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          3.087s
  Predicate creation:                                  0.024s
  Precision update:                                    0.023s
  ARG update:                                          0.035s

Length of refined path (in blocks):                     215 (count: 14, min: 2, max: 30, avg: 15.36)
Number of affected states:                              198 (count: 14, min: 1, max: 29, avg: 14.14)
Length (states) of path with itp 'true':                  3 (count: 14, min: 0, max: 1, avg: 0.21)
Length (states) of path with itp non-trivial itp:       198 (count: 14, min: 1, max: 29, avg: 14.14)
Length (states) of path with itp 'false':                 8 (count: 14, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:          16 (count: 14, min: 0, max: 3, avg: 1.14)
Equal non-trivial interpolants along paths:             168 (count: 14, min: 0, max: 27, avg: 12.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 860
Max. size of reached set after ref.:  66
Avg. size of reached set before ref.: 471.47
Avg. size of reached set after ref.:  16.50

Total time for CEGAR algorithm:      16.957s
Time for refinements:                 5.862s
Average time for refinement:          0.390s
Max time for refinement:              4.476s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          261
  Total lines:            367
  Line coverage:          0.711
  Visited conditions:     87
  Total conditions:       222
  Condition coverage:     0.392

CPAchecker general statistics
-----------------------------
Number of program locations:     758
Number of CFA edges:             884
Number of relevant variables:    50
Number of functions:             18
Number of loops:                 12
Size of reached set:             860
  Number of reached locations:   140 (18%)
    Avg states per location:     6
    Max states per location:     12 (at node N9)
  Number of reached functions:   6 (33%)
  Number of partitions:          844
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N438 (before line 919), Function main called from node N420, stack depth 1 [77128536], stack [main]])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          3.474s
  Time for loading CPAs:          0.670s
  Time for loading parser:        0.662s
  Time for CFA construction:      1.951s
    Time for parsing file(s):     0.541s
    Time for AST to CFA:          0.601s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.502s
      Time for var class.:        0.206s
Time for Analysis:               16.958s
CPU time for analysis:           16.960s
Time for analyzing result:        0.000s
Total time for CPAchecker:       20.435s
Total CPU time for CPAchecker:   20.420s
Time for statistics:              0.102s

Time for Garbage Collector:       0.191s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     38MB (    36 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8070MB (  7696 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
