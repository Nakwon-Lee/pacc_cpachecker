scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_rtykizgg/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            14591 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13824 (95%)
  Because of loop head:            730 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (0%)
  Times precision was empty:       12902 (88%)
  Times precision was {false}:     221 (2%)
  Times result was cached:         1162 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      306 (2%)
  Times result was 'false':        188 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         21488
  BDD entailment checks:           4138
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          13
Number of abstraction locations:          12
Max number of predicates per location:    9
Avg number of predicates per location:    3
Total predicates per abstraction:         2685
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 5.09
Number of irrelevant predicates:          1502 (56%)
Number of preds handled by boolean abs:   847 (32%)
  Total number of models for allsat:      562
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.84

Time for post operator:                  7.917s
  Time for path formula creation:        7.727s
Time for strengthen operator:            0.310s
Time for prec operator:                  8.173s
  Time for abstraction:                  7.632s (Max:     0.227s, Count: 14591)
    Boolean abstraction:                 3.836s
    Solving time:                        4.463s (Max:     0.207s)
    Model enumeration time:              0.815s
    Time for BDD construction:           0.078s (Max:     0.008s)
Time for merge operator:                 0.974s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):     5.278s

Number of path formula cache hits:   54159 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.124s

Total number of created targets for pointer analysis: 16087
   Number of created targets for uf: *signed_int is 333
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 23


Number of BDD nodes:                               889
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         837 (count: 20270, min: 0, max: 172, avg: 0.04)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.409s
Automaton transfers with branching:                0
Automaton transfer successors:                       107189 (count: 107189, min: 1, max: 1, avg: 1.00) [1 x 107189]

CPA algorithm statistics
------------------------
Number of iterations:            72149
Max size of waitlist:            118
Average size of waitlist:        44
Number of computed successors:   85070
Max successors for one state:    2
Number of times merged:          8675
Number of times stopped:         12353
Number of times breaked:         36

Total time for CPA algorithm:        24.172s (Max:     3.322s)
  Time for choose from waitlist:      0.177s
  Time for precision adjustment:      9.268s
  Time for transfer relation:        11.384s
  Time for merge operator:            1.469s
  Time for stop operator:             0.394s
  Time for adding to reached set:     0.358s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 430 (count: 36, min: 3, max: 33, avg: 11.94)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.799s
  Counterexample analysis:                             1.410s (Max:     0.078s, Calls: 36)
    Refinement sat check:                              1.170s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.024s
  ARG update:                                          0.313s

Length of refined path (in blocks):                     251 (count: 36, min: 2, max: 29, avg: 6.97)
Number of affected states:                              108 (count: 36, min: 0, max: 28, avg: 3.00)
Length (states) of path with itp 'true':                107 (count: 36, min: 0, max: 12, avg: 2.97)
Length (states) of path with itp non-trivial itp:       108 (count: 36, min: 0, max: 28, avg: 3.00)
Length (states) of path with itp 'false':                33 (count: 36, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:          20 (count: 36, min: 0, max: 4, avg: 0.56)
Equal non-trivial interpolants along paths:              74 (count: 36, min: 0, max: 26, avg: 2.06)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 5386
Max. size of reached set after ref.:  4746
Avg. size of reached set before ref.: 4349.81
Avg. size of reached set after ref.:  2354.08

Total time for CEGAR algorithm:      26.352s
Time for refinements:                 2.108s
Average time for refinement:          0.058s
Max time for refinement:              0.140s

Code Coverage
-----------------------------
  Function coverage:      0.320
  Visited lines:          269
  Total lines:            400
  Line coverage:          0.673
  Visited conditions:     81
  Total conditions:       212
  Condition coverage:     0.382

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             683
  Number of reached locations:   132 (14%)
    Avg states per location:     5
    Max states per location:     19 (at node N8)
  Number of reached functions:   8 (32%)
  Number of partitions:          669
    Avg size of partitions:      1
    Max size of partitions:      8 (with key [N499 (before line 1174), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          3.397s
  Time for loading CPAs:          0.709s
  Time for loading parser:        0.595s
  Time for CFA construction:      1.931s
    Time for parsing file(s):     0.625s
    Time for AST to CFA:          0.610s
    Time for CFA sanity check:    0.136s
    Time for post-processing:     0.435s
      Time for var class.:        0.161s
Time for Analysis:               26.352s
CPU time for analysis:           26.350s
Total time for CPAchecker:       29.753s
Total CPU time for CPAchecker:   29.750s
Time for statistics:              0.106s

Time for Garbage Collector:       0.692s (in 41 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     51MB (    48 MiB) avg;     87MB (    83 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
