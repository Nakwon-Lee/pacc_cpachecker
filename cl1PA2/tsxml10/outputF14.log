scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__d6pv0xg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            4734 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  3200 (68%)
  Because of loop head:            1358 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         176 (4%)
  Times precision was empty:       602 (13%)
  Times precision was {false}:     168 (4%)
  Times result was cached:         2846 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1118 (24%)
  Times result was 'false':        1489 (31%)
Number of strengthen sat checks:   0
Number of coverage checks:         6911
  BDD entailment checks:           3675
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          68
Number of abstraction locations:          39
Max number of predicates per location:    33
Avg number of predicates per location:    8
Total predicates per abstraction:         26840
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 20.87
Number of irrelevant predicates:          7402 (28%)
Number of preds handled by boolean abs:   6556 (24%)
  Total number of models for allsat:      509546
  Max number of models for allsat:        64296
  Avg number of models for allsat:        455.77

Time for post operator:                  2.526s
  Time for path formula creation:        2.461s
Time for strengthen operator:            0.061s
Time for prec operator:                883.824s
  Time for abstraction:                883.558s (Max:   215.027s, Count: 4734)
    Boolean abstraction:               874.658s
    Solving time:                        9.511s (Max:     0.176s)
    Model enumeration time:            833.606s
    Time for BDD construction:          32.879s (Max:     3.586s)
Time for merge operator:                 0.247s
Time for coverage check:                 0.025s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):   843.117s

Number of path formula cache hits:   31085 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.275s

Total number of created targets for pointer analysis: 8035
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 7


Number of BDD nodes:                               110540
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24963 (count: 21494, min: 0, max: 5449, avg: 1.16)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.299s (in 67 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.284s
Automaton transfers with branching:                0
Automaton transfer successors:                        35177 (count: 35177, min: 1, max: 1, avg: 1.00) [1 x 35177]

CPA algorithm statistics
------------------------
Number of iterations:            24754
Max size of waitlist:            39
Average size of waitlist:        9
Number of computed successors:   28774
Max successors for one state:    2
Number of times merged:          1618
Number of times stopped:         2006
Number of times breaked:         62

Total time for CPA algorithm:       889.230s (Max:   483.639s)
  Time for choose from waitlist:      0.085s
  Time for precision adjustment:    884.326s
  Time for transfer relation:         3.765s
  Time for merge operator:            0.434s
  Time for stop operator:             0.125s
  Time for adding to reached set:     0.190s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   62
Avg. length of target path (in blocks):                1462 (count: 62, min: 3, max: 49, avg: 23.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.152s
  Counterexample analysis:                             6.873s (Max:     0.763s, Calls: 62)
    Refinement sat check:                              5.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.057s
  Precision update:                                    0.055s
  ARG update:                                          0.113s

Length of refined path (in blocks):                    1215 (count: 62, min: 2, max: 49, avg: 19.60)
Number of affected states:                              916 (count: 62, min: 0, max: 48, avg: 14.77)
Length (states) of path with itp 'true':                237 (count: 62, min: 0, max: 30, avg: 3.82)
Length (states) of path with itp non-trivial itp:       916 (count: 62, min: 0, max: 48, avg: 14.77)
Length (states) of path with itp 'false':                45 (count: 62, min: 0, max: 1, avg: 0.73)
Different non-trivial interpolants along paths:          79 (count: 62, min: 0, max: 12, avg: 1.27)
Equal non-trivial interpolants along paths:             796 (count: 62, min: 0, max: 39, avg: 12.84)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                62
Number of successful refinements:     62
Number of failed refinements:         0
Max. size of reached set before ref.: 1635
Max. size of reached set after ref.:  513
Avg. size of reached set before ref.: 485.92
Avg. size of reached set after ref.:  100.24

Total time for CEGAR algorithm:     896.566s
Time for refinements:                 7.305s
Average time for refinement:          0.117s
Max time for refinement:              0.772s

Code Coverage
-----------------------------
  Function coverage:      0.400
  Visited lines:          304
  Total lines:            400
  Line coverage:          0.760
  Visited conditions:     105
  Total conditions:       212
  Condition coverage:     0.495

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             1367
  Number of reached locations:   183 (19%)
    Avg states per location:     7
    Max states per location:     31 (at node N9)
  Number of reached functions:   10 (40%)
  Number of partitions:          1341
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        20

Time for analysis setup:          3.721s
  Time for loading CPAs:          0.683s
  Time for loading parser:        0.656s
  Time for CFA construction:      2.221s
    Time for parsing file(s):     0.675s
    Time for AST to CFA:          0.730s
    Time for CFA sanity check:    0.134s
    Time for post-processing:     0.522s
      Time for var class.:        0.211s
Time for Analysis:              896.566s
CPU time for analysis:          896.490s
Total time for CPAchecker:      900.292s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.109s

Time for Garbage Collector:       0.853s (in 219 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     46MB (    44 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8089MB (  7714 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
