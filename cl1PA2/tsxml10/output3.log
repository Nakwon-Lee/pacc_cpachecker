scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_4x5lw8j7/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5797 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5145 (89%)
  Because of loop head:            609 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (1%)
  Times precision was empty:       4429 (76%)
  Times precision was {false}:     190 (3%)
  Times result was cached:         775 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      403 (7%)
  Times result was 'false':        433 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         9696
  BDD entailment checks:           2348
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          39
Number of abstraction locations:          30
Max number of predicates per location:    19
Avg number of predicates per location:    6
Total predicates per abstraction:         7194
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 12.13
Number of irrelevant predicates:          3140 (44%)
Number of preds handled by boolean abs:   1668 (23%)
  Total number of models for allsat:      3049
  Max number of models for allsat:        1224
  Avg number of models for allsat:        7.57

Time for post operator:                  4.814s
  Time for path formula creation:        4.723s
Time for strengthen operator:            0.129s
Time for prec operator:                 11.492s
  Time for abstraction:                 11.192s (Max:     0.463s, Count: 5797)
    Boolean abstraction:                 6.512s
    Solving time:                        4.966s (Max:     0.143s)
    Model enumeration time:              2.651s
    Time for BDD construction:           0.277s (Max:     0.118s)
Time for merge operator:                 0.387s
Time for coverage check:                 0.054s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     7.617s

Number of path formula cache hits:   22909 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.396s

Total number of created targets for pointer analysis: 11026
   Number of created targets for uf: *signed_int is 89
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 61


Number of BDD nodes:                               34847
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2091 (count: 10983, min: 0, max: 493, avg: 0.19)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.394s
Automaton transfers with branching:                0
Automaton transfer successors:                        44537 (count: 44537, min: 1, max: 1, avg: 1.00) [1 x 44537]

CPA algorithm statistics
------------------------
Number of iterations:            29643
Max size of waitlist:            28
Average size of waitlist:        7
Number of computed successors:   35132
Max successors for one state:    2
Number of times merged:          3674
Number of times stopped:         4824
Number of times breaked:         43

Total time for CPA algorithm:        20.768s (Max:     2.314s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:     12.194s
  Time for transfer relation:         6.834s
  Time for merge operator:            0.683s
  Time for stop operator:             0.280s
  Time for adding to reached set:     0.182s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   43
Avg. length of target path (in blocks):                 803 (count: 43, min: 3, max: 52, avg: 18.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.398s
  Counterexample analysis:                             5.085s (Max:     1.068s, Calls: 43)
    Refinement sat check:                              4.555s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.053s
  ARG update:                                          0.188s

Length of refined path (in blocks):                     575 (count: 42, min: 2, max: 48, avg: 13.69)
Number of affected states:                              340 (count: 42, min: 0, max: 47, avg: 8.10)
Length (states) of path with itp 'true':                193 (count: 42, min: 0, max: 46, avg: 4.60)
Length (states) of path with itp non-trivial itp:       340 (count: 42, min: 0, max: 47, avg: 8.10)
Length (states) of path with itp 'false':                35 (count: 42, min: 0, max: 1, avg: 0.83)
Different non-trivial interpolants along paths:          42 (count: 42, min: 0, max: 8, avg: 1.00)
Equal non-trivial interpolants along paths:             277 (count: 42, min: 0, max: 40, avg: 6.60)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                43
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 1957
Max. size of reached set after ref.:  1215
Avg. size of reached set before ref.: 1097.49
Avg. size of reached set after ref.:  412.29

Total time for CEGAR algorithm:      26.405s
Time for refinements:                 5.594s
Average time for refinement:          0.130s
Max time for refinement:              1.083s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          337
  Total lines:            400
  Line coverage:          0.843
  Visited conditions:     141
  Total conditions:       212
  Condition coverage:     0.665

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             1062
  Number of reached locations:   263 (28%)
    Avg states per location:     4
    Max states per location:     33 (at node N8)
  Number of reached functions:   15 (60%)
  Number of partitions:          1039
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          3.800s
  Time for loading CPAs:          0.708s
  Time for loading parser:        0.749s
  Time for CFA construction:      2.135s
    Time for parsing file(s):     0.670s
    Time for AST to CFA:          0.686s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.473s
      Time for var class.:        0.200s
Time for Analysis:               26.405s
CPU time for analysis:           26.400s
Total time for CPAchecker:       30.220s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.083s

Time for Garbage Collector:       0.336s (in 28 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     44MB (    42 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
