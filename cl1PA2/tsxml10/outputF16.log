scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_djinux4p/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Error: Refinement failed: Interpolation failed (msat_get_model failed with "non-integer model value", probably the actual problem is interpolation) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            8828 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5724 (65%)
  Because of loop head:            2817 (32%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         287 (3%)
  Times precision was empty:       540 (6%)
  Times precision was {false}:     157 (2%)
  Times result was cached:         5779 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2352 (27%)
  Times result was 'false':        3184 (36%)
Number of strengthen sat checks:   0
Number of coverage checks:         15010
  BDD entailment checks:           8560
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          73
Number of abstraction locations:          51
Max number of predicates per location:    35
Avg number of predicates per location:    9
Total predicates per abstraction:         89542
Max number of predicates per abstraction: 35
Avg number of predicates per abstraction: 35.69
Number of irrelevant predicates:          13091 (15%)
Number of preds handled by boolean abs:   18289 (20%)
  Total number of models for allsat:      381781
  Max number of models for allsat:        37368
  Avg number of models for allsat:        162.32

Time for post operator:                  3.365s
  Time for path formula creation:        3.286s
Time for strengthen operator:            0.104s
Time for prec operator:                201.925s
  Time for abstraction:                201.639s (Max:    13.155s, Count: 8828)
    Boolean abstraction:               187.008s
    Solving time:                       14.085s (Max:     0.110s)
    Model enumeration time:            152.119s
    Time for BDD construction:          20.590s (Max:     2.463s)
Time for merge operator:                 0.305s
Time for coverage check:                 0.045s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):   166.204s

Number of path formula cache hits:   58817 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.044s

Total number of created targets for pointer analysis: 11637
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 70


Number of BDD nodes:                               153740
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       46664 (count: 41394, min: 0, max: 4379, avg: 1.13)
Time for BDD node cleanup:                             0.030s
Time for BDD garbage collection:                       0.238s (in 45 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.267s
Automaton transfers with branching:                0
Automaton transfer successors:                        66089 (count: 66089, min: 1, max: 1, avg: 1.00) [1 x 66089]

CPA algorithm statistics
------------------------
Number of iterations:            46308
Max size of waitlist:            30
Average size of waitlist:        6
Number of computed successors:   54151
Max successors for one state:    2
Number of times merged:          3225
Number of times stopped:         4018
Number of times breaked:         84

Total time for CPA algorithm:       208.869s (Max:    32.010s)
  Time for choose from waitlist:      0.088s
  Time for precision adjustment:    202.505s
  Time for transfer relation:         4.901s
  Time for merge operator:            0.436s
  Time for stop operator:             0.182s
  Time for adding to reached set:     0.196s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   84
Avg. length of target path (in blocks):                4076 (count: 84, min: 3, max: 89, avg: 48.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  37.552s
  Counterexample analysis:                            37.115s (Max:    23.240s, Calls: 84)
    Refinement sat check:                             11.845s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.098s
  Precision update:                                    0.076s
  ARG update:                                          0.199s

Length of refined path (in blocks):                    3229 (count: 83, min: 2, max: 77, avg: 38.90)
Number of affected states:                             2815 (count: 83, min: 0, max: 76, avg: 33.92)
Length (states) of path with itp 'true':                331 (count: 83, min: 0, max: 44, avg: 3.99)
Length (states) of path with itp non-trivial itp:      2815 (count: 83, min: 0, max: 76, avg: 33.92)
Length (states) of path with itp 'false':                61 (count: 83, min: 0, max: 1, avg: 0.73)
Different non-trivial interpolants along paths:         212 (count: 83, min: 0, max: 18, avg: 2.55)
Equal non-trivial interpolants along paths:            2524 (count: 83, min: 0, max: 73, avg: 30.41)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                84
Number of successful refinements:     83
Number of failed refinements:         1
Max. size of reached set before ref.: 1100
Max. size of reached set after ref.:  554
Avg. size of reached set before ref.: 619.69
Avg. size of reached set after ref.:  61.49

Total time for CEGAR algorithm:     246.581s
Time for refinements:                37.711s
Average time for refinement:          0.448s
Max time for refinement:             23.241s

Code Coverage
-----------------------------
  Function coverage:      0.480
  Visited lines:          302
  Total lines:            400
  Line coverage:          0.755
  Visited conditions:     103
  Total conditions:       212
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             807
  Number of reached locations:   190 (20%)
    Avg states per location:     4
    Max states per location:     17 (at node N9)
  Number of reached functions:   12 (48%)
  Number of partitions:          783
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       1
  Size of final wait list        9

Time for analysis setup:          3.665s
  Time for loading CPAs:          0.782s
  Time for loading parser:        0.634s
  Time for CFA construction:      2.064s
    Time for parsing file(s):     0.601s
    Time for AST to CFA:          0.745s
    Time for CFA sanity check:    0.123s
    Time for post-processing:     0.456s
      Time for var class.:        0.170s
Time for Analysis:              246.581s
CPU time for analysis:          246.530s
Total time for CPAchecker:      250.258s
Total CPU time for CPAchecker:  250.210s
Time for statistics:              0.080s

Time for Garbage Collector:       1.013s (in 225 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     48MB (    46 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8154MB (  7777 MiB) max;   8104MB (  7728 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
