scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7vzafir4/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            10408 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  9900 (95%)
  Because of loop head:            472 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         36 (0%)
  Times precision was empty:       9509 (91%)
  Times precision was {false}:     203 (2%)
  Times result was cached:         501 (5%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      195 (2%)
  Times result was 'false':        195 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         17169
  BDD entailment checks:           2761
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          11
Number of abstraction locations:          18
Max number of predicates per location:    8
Avg number of predicates per location:    1
Total predicates per abstraction:         1805
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 4.54
Number of irrelevant predicates:          793 (44%)
Number of preds handled by boolean abs:   584 (32%)
  Total number of models for allsat:      364
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.87

Time for post operator:                  8.463s
  Time for path formula creation:        8.212s
Time for strengthen operator:            0.209s
Time for prec operator:                  6.933s
  Time for abstraction:                  6.433s (Max:     0.173s, Count: 10408)
    Boolean abstraction:                 2.764s
    Solving time:                        3.446s (Max:     0.156s)
    Model enumeration time:              0.525s
    Time for BDD construction:           0.081s (Max:     0.009s)
Time for merge operator:                 0.789s
Time for coverage check:                 0.062s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     3.971s

Number of path formula cache hits:   30739 (36%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.615s

Total number of created targets for pointer analysis: 19249
   Number of created targets for uf: *signed_int is 193
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 217


Number of BDD nodes:                               666
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         662 (count: 14673, min: 0, max: 121, avg: 0.05)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.603s
  Time for transition matches:                         0.280s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        79683 (count: 79683, min: 1, max: 1, avg: 1.00) [1 x 79683]

CPA algorithm statistics
------------------------
Number of iterations:            52825
Max size of waitlist:            28
Average size of waitlist:        12
Number of computed successors:   62705
Max successors for one state:    2
Number of times merged:          7204
Number of times stopped:         9560
Number of times breaked:         36

Total time for CPA algorithm:        23.164s (Max:     2.284s)
  Time for choose from waitlist:      0.168s
  Time for precision adjustment:      8.193s
  Time for transfer relation:        11.758s
  Time for merge operator:            1.428s
  Time for stop operator:             0.332s
  Time for adding to reached set:     0.328s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   36
Avg. length of target path (in blocks):                 478 (count: 36, min: 3, max: 33, avg: 13.28)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.511s
  Counterexample analysis:                             2.133s (Max:     0.153s, Calls: 36)
    Refinement sat check:                              1.873s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.007s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.042s
  Precision update:                                    0.020s
  ARG update:                                          0.292s

Length of refined path (in blocks):                     309 (count: 36, min: 2, max: 33, avg: 8.58)
Number of affected states:                              126 (count: 36, min: 0, max: 32, avg: 3.50)
Length (states) of path with itp 'true':                147 (count: 36, min: 0, max: 12, avg: 4.08)
Length (states) of path with itp non-trivial itp:       126 (count: 36, min: 0, max: 32, avg: 3.50)
Length (states) of path with itp 'false':                31 (count: 36, min: 0, max: 1, avg: 0.86)
Different non-trivial interpolants along paths:          20 (count: 36, min: 0, max: 4, avg: 0.56)
Equal non-trivial interpolants along paths:              91 (count: 36, min: 0, max: 30, avg: 2.53)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                36
Number of successful refinements:     36
Number of failed refinements:         0
Max. size of reached set before ref.: 3617
Max. size of reached set after ref.:  1215
Avg. size of reached set before ref.: 1932.39
Avg. size of reached set after ref.:  462.11

Total time for CEGAR algorithm:      25.935s
Time for refinements:                 2.739s
Average time for refinement:          0.076s
Max time for refinement:              0.171s

Code Coverage
-----------------------------
  Function coverage:      0.040
  Visited lines:          219
  Total lines:            400
  Line coverage:          0.548
  Visited conditions:     13
  Total conditions:       212
  Condition coverage:     0.061

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             21
  Number of reached locations:   21 (2%)
    Avg states per location:     1
    Max states per location:     1 (at node N482)
  Number of reached functions:   1 (4%)
  Number of partitions:          21
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          3.811s
  Time for loading CPAs:          0.679s
  Time for loading parser:        0.708s
  Time for CFA construction:      2.196s
    Time for parsing file(s):     0.720s
    Time for AST to CFA:          0.707s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.482s
      Time for var class.:        0.195s
Time for Analysis:               25.935s
CPU time for analysis:           25.940s
Total time for CPAchecker:       29.760s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              0.087s

Time for Garbage Collector:       0.516s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     46MB (    44 MiB) avg;     78MB (    74 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
