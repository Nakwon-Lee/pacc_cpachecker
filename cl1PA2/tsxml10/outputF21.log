scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_m2drilzz/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15884 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14594 (92%)
  Because of loop head:            1181 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         109 (1%)
  Times precision was empty:       9236 (58%)
  Times precision was {false}:     348 (2%)
  Times result was cached:         4807 (30%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1493 (9%)
  Times result was 'false':        971 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         27562
  BDD entailment checks:           6262
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          64
Number of abstraction locations:          30
Max number of predicates per location:    36
Avg number of predicates per location:    11
Total predicates per abstraction:         72365
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 39.31
Number of irrelevant predicates:          51119 (71%)
Number of preds handled by boolean abs:   11219 (16%)
  Total number of models for allsat:      1554305
  Max number of models for allsat:        113232
  Avg number of models for allsat:        1041.06

Time for post operator:                  6.327s
  Time for path formula creation:        6.172s
Time for strengthen operator:            0.210s
Time for prec operator:                873.496s
  Time for abstraction:                872.995s (Max:   138.003s, Count: 15884)
    Boolean abstraction:               862.451s
    Solving time:                       10.289s (Max:     0.099s)
    Model enumeration time:            770.607s
    Time for BDD construction:          82.884s (Max:     7.929s)
Time for merge operator:                 0.605s
Time for coverage check:                 0.052s
  Time for BDD entailment checks:        0.044s
Total time for SMT solver (w/o itp):   780.896s

Number of path formula cache hits:   103442 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.553s

Total number of created targets for pointer analysis: 15541
   Number of created targets for uf: *signed_int is 121
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 115


Number of BDD nodes:                               29059
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       42122 (count: 42705, min: 0, max: 2396, avg: 0.99)
Time for BDD node cleanup:                             0.029s
Time for BDD garbage collection:                       0.730s (in 239 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.518s
  Time for transition matches:                         0.263s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       122914 (count: 122914, min: 1, max: 1, avg: 1.00) [1 x 122914]

CPA algorithm statistics
------------------------
Number of iterations:            82208
Max size of waitlist:            31
Average size of waitlist:        12
Number of computed successors:   97348
Max successors for one state:    2
Number of times merged:          10650
Number of times stopped:         13873
Number of times breaked:         67

Total time for CPA algorithm:       886.981s (Max:   222.269s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:    874.674s
  Time for transfer relation:         9.476s
  Time for merge operator:            0.960s
  Time for stop operator:             0.380s
  Time for adding to reached set:     0.393s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                1724 (count: 67, min: 3, max: 65, avg: 25.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.259s
  Counterexample analysis:                             8.746s (Max:     1.526s, Calls: 67)
    Refinement sat check:                              7.796s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.076s
  ARG update:                                          0.334s

Length of refined path (in blocks):                    1447 (count: 67, min: 2, max: 65, avg: 21.60)
Number of affected states:                              676 (count: 67, min: 0, max: 64, avg: 10.09)
Length (states) of path with itp 'true':                704 (count: 67, min: 0, max: 38, avg: 10.51)
Length (states) of path with itp non-trivial itp:       676 (count: 67, min: 0, max: 64, avg: 10.09)
Length (states) of path with itp 'false':                56 (count: 67, min: 0, max: 1, avg: 0.84)
Different non-trivial interpolants along paths:          66 (count: 67, min: 0, max: 11, avg: 0.99)
Equal non-trivial interpolants along paths:             564 (count: 67, min: 0, max: 52, avg: 8.42)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 4693
Max. size of reached set after ref.:  3852
Avg. size of reached set before ref.: 2124.36
Avg. size of reached set after ref.:  925.78

Total time for CEGAR algorithm:     896.603s
Time for refinements:                 9.532s
Average time for refinement:          0.142s
Max time for refinement:              1.543s

Code Coverage
-----------------------------
  Function coverage:      0.680
  Visited lines:          367
  Total lines:            400
  Line coverage:          0.918
  Visited conditions:     181
  Total conditions:       212
  Condition coverage:     0.854

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             2199
  Number of reached locations:   343 (36%)
    Avg states per location:     6
    Max states per location:     92 (at node N8)
  Number of reached functions:   17 (68%)
  Number of partitions:          2173
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.656s
  Time for loading CPAs:          0.756s
  Time for loading parser:        0.634s
  Time for CFA construction:      2.031s
    Time for parsing file(s):     0.592s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.128s
    Time for post-processing:     0.432s
      Time for var class.:        0.164s
Time for Analysis:              896.603s
CPU time for analysis:          896.560s
Total time for CPAchecker:      900.264s
Total CPU time for CPAchecker:  900.210s
Time for statistics:              0.103s

Time for Garbage Collector:       2.181s (in 515 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 85MB (    81 MiB) max;     62MB (    59 MiB) avg;     90MB (    86 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8109MB (  7734 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
