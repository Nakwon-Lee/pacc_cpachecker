scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v6jkmurf/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7297 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5491 (75%)
  Because of loop head:            1581 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         225 (3%)
  Times precision was empty:       1312 (18%)
  Times precision was {false}:     200 (3%)
  Times result was cached:         4425 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1360 (19%)
  Times result was 'false':        1583 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         10731
  BDD entailment checks:           4393
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          70
Number of abstraction locations:          44
Max number of predicates per location:    33
Avg number of predicates per location:    7
Total predicates per abstraction:         34782
Max number of predicates per abstraction: 33
Avg number of predicates per abstraction: 22.30
Number of irrelevant predicates:          12996 (37%)
Number of preds handled by boolean abs:   8215 (24%)
  Total number of models for allsat:      1122767
  Max number of models for allsat:        328050
  Avg number of models for allsat:        825.56

Time for post operator:                  3.366s
  Time for path formula creation:        3.245s
Time for strengthen operator:            0.125s
Time for prec operator:                889.860s
  Time for abstraction:                889.539s (Max:   160.860s, Count: 7297)
    Boolean abstraction:               879.169s
    Solving time:                       11.371s (Max:     0.118s)
    Model enumeration time:            791.450s
    Time for BDD construction:          77.661s (Max:    20.072s)
Time for merge operator:                 0.370s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):   802.821s

Number of path formula cache hits:   52743 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.993s

Total number of created targets for pointer analysis: 10788
   Number of created targets for uf: *signed_int is 34
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 28


Number of BDD nodes:                               238974
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       54760 (count: 36501, min: 0, max: 11665, avg: 1.50)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.715s (in 212 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.430s
Automaton transfers with branching:                0
Automaton transfer successors:                        57243 (count: 57243, min: 1, max: 1, avg: 1.00) [1 x 57243]

CPA algorithm statistics
------------------------
Number of iterations:            40817
Max size of waitlist:            54
Average size of waitlist:        14
Number of computed successors:   47195
Max successors for one state:    2
Number of times merged:          3169
Number of times stopped:         3734
Number of times breaked:         82

Total time for CPA algorithm:       897.030s (Max:   533.945s)
  Time for choose from waitlist:      0.062s
  Time for precision adjustment:    890.483s
  Time for transfer relation:         5.020s
  Time for merge operator:            0.574s
  Time for stop operator:             0.219s
  Time for adding to reached set:     0.197s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   82
Avg. length of target path (in blocks):                2238 (count: 82, min: 3, max: 49, avg: 27.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.653s
  Counterexample analysis:                             8.315s (Max:     0.809s, Calls: 82)
    Refinement sat check:                              7.001s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.023s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.023s
  ARG update:                                          0.193s

Length of refined path (in blocks):                    1926 (count: 82, min: 2, max: 49, avg: 23.49)
Number of affected states:                             1014 (count: 82, min: 0, max: 48, avg: 12.37)
Length (states) of path with itp 'true':                830 (count: 82, min: 0, max: 30, avg: 10.12)
Length (states) of path with itp non-trivial itp:      1014 (count: 82, min: 0, max: 48, avg: 12.37)
Length (states) of path with itp 'false':                63 (count: 82, min: 0, max: 1, avg: 0.77)
Different non-trivial interpolants along paths:          81 (count: 82, min: 0, max: 12, avg: 0.99)
Equal non-trivial interpolants along paths:             872 (count: 82, min: 0, max: 40, avg: 10.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                82
Number of successful refinements:     82
Number of failed refinements:         0
Max. size of reached set before ref.: 2199
Max. size of reached set after ref.:  1074
Avg. size of reached set before ref.: 771.44
Avg. size of reached set after ref.:  281.52

Total time for CEGAR algorithm:     905.908s
Time for refinements:                 8.840s
Average time for refinement:          0.107s
Max time for refinement:              0.818s

Code Coverage
-----------------------------
  Function coverage:      0.520
  Visited lines:          336
  Total lines:            400
  Line coverage:          0.840
  Visited conditions:     135
  Total conditions:       212
  Condition coverage:     0.637

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             1705
  Number of reached locations:   249 (26%)
    Avg states per location:     6
    Max states per location:     52 (at node N9)
  Number of reached functions:   13 (52%)
  Number of partitions:          1677
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        23

Time for analysis setup:          3.632s
  Time for loading CPAs:          0.712s
  Time for loading parser:        0.652s
  Time for CFA construction:      2.046s
    Time for parsing file(s):     0.662s
    Time for AST to CFA:          0.676s
    Time for CFA sanity check:    0.144s
    Time for post-processing:     0.444s
      Time for var class.:        0.158s
Time for Analysis:              905.908s
CPU time for analysis:          905.820s
Total time for CPAchecker:      909.549s
Total CPU time for CPAchecker:  909.450s
Time for statistics:              0.107s

Time for Garbage Collector:       1.489s (in 519 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     48MB (    46 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8219MB (  7839 MiB) max;   8111MB (  7736 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
