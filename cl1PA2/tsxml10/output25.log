scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jv40l7ka/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            7055 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6170 (87%)
  Because of loop head:            824 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         61 (1%)
  Times precision was empty:       3910 (55%)
  Times precision was {false}:     213 (3%)
  Times result was cached:         2255 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      677 (10%)
  Times result was 'false':        699 (10%)
Number of strengthen sat checks:   0
Number of coverage checks:         12616
  BDD entailment checks:           3682
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          17
Number of abstraction locations:          29
Max number of predicates per location:    10
Avg number of predicates per location:    2
Total predicates per abstraction:         11035
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 12.40
Number of irrelevant predicates:          4501 (41%)
Number of preds handled by boolean abs:   1779 (16%)
  Total number of models for allsat:      1068
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.58

Time for post operator:                  4.732s
  Time for path formula creation:        4.589s
Time for strengthen operator:            0.182s
Time for prec operator:                 11.920s
  Time for abstraction:                 11.497s (Max:     0.317s, Count: 7055)
    Boolean abstraction:                 4.939s
    Solving time:                        4.996s (Max:     0.218s)
    Model enumeration time:              1.114s
    Time for BDD construction:           0.115s (Max:     0.011s)
Time for merge operator:                 0.489s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     6.110s

Number of path formula cache hits:   38801 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.180s

Total number of created targets for pointer analysis: 10649
   Number of created targets for uf: *signed_int is 129
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 85


Number of BDD nodes:                               1432
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2156 (count: 13199, min: 0, max: 382, avg: 0.16)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.489s
Automaton transfers with branching:                0
Automaton transfer successors:                        54392 (count: 54392, min: 1, max: 1, avg: 1.00) [1 x 54392]

CPA algorithm statistics
------------------------
Number of iterations:            36207
Max size of waitlist:            23
Average size of waitlist:        8
Number of computed successors:   42870
Max successors for one state:    2
Number of times merged:          4467
Number of times stopped:         5783
Number of times breaked:         39

Total time for CPA algorithm:        22.039s (Max:     1.770s)
  Time for choose from waitlist:      0.122s
  Time for precision adjustment:     12.776s
  Time for transfer relation:         7.225s
  Time for merge operator:            0.783s
  Time for stop operator:             0.262s
  Time for adding to reached set:     0.256s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 884 (count: 39, min: 3, max: 56, avg: 22.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.160s
  Counterexample analysis:                             3.810s (Max:     0.377s, Calls: 39)
    Refinement sat check:                              3.217s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.063s
  Precision update:                                    0.052s
  ARG update:                                          0.194s

Length of refined path (in blocks):                     729 (count: 39, min: 2, max: 52, avg: 18.69)
Number of affected states:                              581 (count: 39, min: 0, max: 51, avg: 14.90)
Length (states) of path with itp 'true':                109 (count: 39, min: 0, max: 42, avg: 2.79)
Length (states) of path with itp non-trivial itp:       581 (count: 39, min: 0, max: 51, avg: 14.90)
Length (states) of path with itp 'false':                28 (count: 39, min: 0, max: 1, avg: 0.72)
Different non-trivial interpolants along paths:          36 (count: 39, min: 0, max: 5, avg: 0.92)
Equal non-trivial interpolants along paths:             518 (count: 39, min: 0, max: 49, avg: 13.28)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 2037
Max. size of reached set after ref.:  1636
Avg. size of reached set before ref.: 1159.77
Avg. size of reached set after ref.:  250.54

Total time for CEGAR algorithm:      26.413s
Time for refinements:                 4.359s
Average time for refinement:          0.111s
Max time for refinement:              0.397s

Code Coverage
-----------------------------
  Function coverage:      0.560
  Visited lines:          329
  Total lines:            400
  Line coverage:          0.823
  Visited conditions:     129
  Total conditions:       212
  Condition coverage:     0.608

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             929
  Number of reached locations:   240 (26%)
    Avg states per location:     3
    Max states per location:     27 (at node N8)
  Number of reached functions:   14 (56%)
  Number of partitions:          904
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          3.806s
  Time for loading CPAs:          0.701s
  Time for loading parser:        0.736s
  Time for CFA construction:      2.151s
    Time for parsing file(s):     0.731s
    Time for AST to CFA:          0.681s
    Time for CFA sanity check:    0.135s
    Time for post-processing:     0.447s
      Time for var class.:        0.163s
Time for Analysis:               26.413s
CPU time for analysis:           26.420s
Total time for CPAchecker:       30.224s
Total CPU time for CPAchecker:   30.210s
Time for statistics:              0.115s

Time for Garbage Collector:       0.386s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     43MB (    41 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
