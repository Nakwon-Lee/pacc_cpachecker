scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_7y87guob/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            13144 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  12398 (94%)
  Because of loop head:            703 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (0%)
  Times precision was empty:       10982 (84%)
  Times precision was {false}:     313 (2%)
  Times result was cached:         1539 (12%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      310 (2%)
  Times result was 'false':        351 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         22070
  BDD entailment checks:           3986
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          40
Number of abstraction locations:          26
Max number of predicates per location:    20
Avg number of predicates per location:    6
Total predicates per abstraction:         4263
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 6.84
Number of irrelevant predicates:          1809 (42%)
Number of preds handled by boolean abs:   1102 (26%)
  Total number of models for allsat:      546
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.76

Time for post operator:                  7.812s
  Time for path formula creation:        7.631s
Time for strengthen operator:            0.227s
Time for prec operator:                  7.764s
  Time for abstraction:                  7.270s (Max:     0.162s, Count: 13144)
    Boolean abstraction:                 3.281s
    Solving time:                        3.832s (Max:     0.146s)
    Model enumeration time:              0.642s
    Time for BDD construction:           0.115s (Max:     0.011s)
Time for merge operator:                 0.834s
Time for coverage check:                 0.058s
  Time for BDD entailment checks:        0.051s
Total time for SMT solver (w/o itp):     4.478s

Number of path formula cache hits:   47411 (44%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.122s

Total number of created targets for pointer analysis: 22000
   Number of created targets for uf: *signed_int is 217
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 45
   Number of created targets for uf: *unsigned_int is 221
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 253


Number of BDD nodes:                               6647
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1155 (count: 18791, min: 0, max: 398, avg: 0.06)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.514s
  Time for transition matches:                         0.231s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       100320 (count: 100320, min: 1, max: 1, avg: 1.00) [1 x 100320]

CPA algorithm statistics
------------------------
Number of iterations:            66527
Max size of waitlist:            30
Average size of waitlist:        13
Number of computed successors:   79011
Max successors for one state:    2
Number of times merged:          9042
Number of times stopped:         11978
Number of times breaked:         39

Total time for CPA algorithm:        23.069s (Max:     2.152s)
  Time for choose from waitlist:      0.147s
  Time for precision adjustment:      8.914s
  Time for transfer relation:        10.827s
  Time for merge operator:            1.261s
  Time for stop operator:             0.438s
  Time for adding to reached set:     0.411s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 601 (count: 39, min: 3, max: 45, avg: 15.41)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.231s
  Counterexample analysis:                             2.818s (Max:     0.942s, Calls: 39)
    Refinement sat check:                              2.428s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.046s
  Precision update:                                    0.041s
  ARG update:                                          0.285s

Length of refined path (in blocks):                     431 (count: 39, min: 2, max: 44, avg: 11.05)
Number of affected states:                              245 (count: 39, min: 0, max: 43, avg: 6.28)
Length (states) of path with itp 'true':                147 (count: 39, min: 0, max: 12, avg: 3.77)
Length (states) of path with itp non-trivial itp:       245 (count: 39, min: 0, max: 43, avg: 6.28)
Length (states) of path with itp 'false':                32 (count: 39, min: 0, max: 1, avg: 0.82)
Different non-trivial interpolants along paths:          28 (count: 39, min: 0, max: 6, avg: 0.72)
Equal non-trivial interpolants along paths:             199 (count: 39, min: 0, max: 38, avg: 5.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 3911
Max. size of reached set after ref.:  1215
Avg. size of reached set before ref.: 2129.05
Avg. size of reached set after ref.:  426.79

Total time for CEGAR algorithm:      26.513s
Time for refinements:                 3.426s
Average time for refinement:          0.087s
Max time for refinement:              0.985s

Code Coverage
-----------------------------
  Function coverage:      0.080
  Visited lines:          250
  Total lines:            400
  Line coverage:          0.625
  Visited conditions:     57
  Total conditions:       212
  Condition coverage:     0.269

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             294
  Number of reached locations:   78 (8%)
    Avg states per location:     3
    Max states per location:     12 (at node N492)
  Number of reached functions:   2 (8%)
  Number of partitions:          274
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.709s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.658s
  Time for CFA construction:      2.107s
    Time for parsing file(s):     0.669s
    Time for AST to CFA:          0.729s
    Time for CFA sanity check:    0.124s
    Time for post-processing:     0.445s
      Time for var class.:        0.161s
Time for Analysis:               26.513s
CPU time for analysis:           26.510s
Total time for CPAchecker:       30.231s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.091s

Time for Garbage Collector:       0.615s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 77MB (    74 MiB) max;     48MB (    46 MiB) avg;     81MB (    77 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
