scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_stack_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jz7w_tw_/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1017: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1019: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1021: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1022: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1023: Dead code detected: return; (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1041: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1058: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1070: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1081: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1089: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1091: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1092: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1093: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1212: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1218: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6325 (14% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4457 (70%)
  Because of loop head:            1651 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         217 (3%)
  Times precision was empty:       776 (12%)
  Times precision was {false}:     185 (3%)
  Times result was cached:         3996 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1368 (22%)
  Times result was 'false':        1757 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         9232
  BDD entailment checks:           4776
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          76
Number of abstraction locations:          44
Max number of predicates per location:    36
Avg number of predicates per location:    8
Total predicates per abstraction:         35217
Max number of predicates per abstraction: 36
Avg number of predicates per abstraction: 22.68
Number of irrelevant predicates:          11485 (33%)
Number of preds handled by boolean abs:   8470 (24%)
  Total number of models for allsat:      349576
  Max number of models for allsat:        75924
  Avg number of models for allsat:        255.54

Time for post operator:                  3.181s
  Time for path formula creation:        3.104s
Time for strengthen operator:            0.098s
Time for prec operator:                881.828s
  Time for abstraction:                881.537s (Max:   703.438s, Count: 6325)
    Boolean abstraction:               871.297s
    Solving time:                       11.219s (Max:     0.150s)
    Model enumeration time:            837.947s
    Time for BDD construction:          23.610s (Max:     4.312s)
Time for merge operator:                 0.274s
Time for coverage check:                 0.042s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):   849.166s

Number of path formula cache hits:   41824 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.836s

Total number of created targets for pointer analysis: 11123
   Number of created targets for uf: *signed_int is 46
   Number of created targets for uf: *unsigned_char is 15
   Number of created targets for uf: *(unsigned_char)* is 181
   Number of created targets for uf: *_Bool is 61
   Number of created targets for uf: *unsigned_int is 301
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 13


Number of BDD nodes:                               152355
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       25698 (count: 24525, min: 0, max: 2810, avg: 1.05)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.218s (in 46 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.363s
Automaton transfers with branching:                0
Automaton transfer successors:                        46154 (count: 46154, min: 1, max: 1, avg: 1.00) [1 x 46154]

CPA algorithm statistics
------------------------
Number of iterations:            32488
Max size of waitlist:            40
Average size of waitlist:        10
Number of computed successors:   37726
Max successors for one state:    2
Number of times merged:          2228
Number of times stopped:         2772
Number of times breaked:         71

Total time for CPA algorithm:       888.072s (Max:   704.607s)
  Time for choose from waitlist:      0.070s
  Time for precision adjustment:    882.367s
  Time for transfer relation:         4.516s
  Time for merge operator:            0.430s
  Time for stop operator:             0.141s
  Time for adding to reached set:     0.141s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   71
Avg. length of target path (in blocks):                1872 (count: 71, min: 3, max: 52, avg: 26.37)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.339s
  Counterexample analysis:                             8.029s (Max:     0.682s, Calls: 71)
    Refinement sat check:                              6.725s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.047s
  Precision update:                                    0.042s
  ARG update:                                          0.164s

Length of refined path (in blocks):                    1593 (count: 71, min: 2, max: 52, avg: 22.44)
Number of affected states:                             1082 (count: 71, min: 0, max: 51, avg: 15.24)
Length (states) of path with itp 'true':                440 (count: 71, min: 0, max: 30, avg: 6.20)
Length (states) of path with itp non-trivial itp:      1082 (count: 71, min: 0, max: 51, avg: 15.24)
Length (states) of path with itp 'false':                52 (count: 71, min: 0, max: 1, avg: 0.73)
Different non-trivial interpolants along paths:         102 (count: 71, min: 0, max: 13, avg: 1.44)
Equal non-trivial interpolants along paths:             930 (count: 71, min: 0, max: 41, avg: 13.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                71
Number of successful refinements:     71
Number of failed refinements:         0
Max. size of reached set before ref.: 1758
Max. size of reached set after ref.:  602
Avg. size of reached set before ref.: 624.59
Avg. size of reached set after ref.:  165.93

Total time for CEGAR algorithm:     896.591s
Time for refinements:                 8.499s
Average time for refinement:          0.119s
Max time for refinement:              0.694s

Code Coverage
-----------------------------
  Function coverage:      0.320
  Visited lines:          283
  Total lines:            400
  Line coverage:          0.708
  Visited conditions:     79
  Total conditions:       212
  Condition coverage:     0.373

CPAchecker general statistics
-----------------------------
Number of program locations:     940
Number of CFA edges:             1075
Number of relevant variables:    63
Number of functions:             25
Number of loops:                 7
Size of reached set:             632
  Number of reached locations:   138 (15%)
    Avg states per location:     4
    Max states per location:     12 (at node N492)
  Number of reached functions:   8 (32%)
  Number of partitions:          610
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N506 (before line 1179), Function main called from node N482, stack depth 1 [6ad3381f], stack [main]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          3.960s
  Time for loading CPAs:          0.855s
  Time for loading parser:        0.676s
  Time for CFA construction:      2.247s
    Time for parsing file(s):     0.657s
    Time for AST to CFA:          0.782s
    Time for CFA sanity check:    0.147s
    Time for post-processing:     0.504s
      Time for var class.:        0.201s
Time for Analysis:              896.591s
CPU time for analysis:          896.450s
Total time for CPAchecker:      900.557s
Total CPU time for CPAchecker:  900.410s
Time for statistics:              0.075s

Time for Garbage Collector:       0.804s (in 176 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     48MB (    46 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8555MB (  8159 MiB) max;   8285MB (  7901 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
