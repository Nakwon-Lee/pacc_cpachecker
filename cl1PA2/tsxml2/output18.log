scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_read_write_lock_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nyo2vhzr/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 828: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 828: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 828: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 910: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 916: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 922: Ignoring function call through function pointer *(__CS_thread[3]): (*(__CS_thread[3]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 928: Ignoring function call through function pointer *(__CS_thread[4]): (*(__CS_thread[4]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1614 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1157 (72%)
  Because of loop head:            410 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (3%)
  Times precision was empty:       273 (17%)
  Times precision was {false}:     109 (7%)
  Times result was cached:         629 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      603 (37%)
  Times result was 'false':        688 (43%)
Number of strengthen sat checks:   0
Number of coverage checks:         2571
  BDD entailment checks:           1195
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       73
Number of predicates discovered:          21
Number of abstraction locations:          22
Max number of predicates per location:    12
Avg number of predicates per location:    3
Total predicates per abstraction:         4794
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 6.73
Number of irrelevant predicates:          794 (17%)
Number of preds handled by boolean abs:   2216 (46%)
  Total number of models for allsat:      826
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.37

Time for post operator:                  2.151s
  Time for path formula creation:        2.122s
Time for strengthen operator:            0.080s
Time for prec operator:                 20.286s
  Time for abstraction:                 20.141s (Max:     0.363s, Count: 1614)
    Boolean abstraction:                12.787s
    Solving time:                       12.746s (Max:     0.337s)
    Model enumeration time:              2.347s
    Time for BDD construction:           0.117s (Max:     0.012s)
Time for merge operator:                 0.238s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):    15.094s

Number of path formula cache hits:   9921 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.002s

Total number of created targets for pointer analysis: 7228
   Number of created targets for uf: *signed_int is 37
   Number of created targets for uf: *unsigned_char is 241
   Number of created targets for uf: *(unsigned_char)* is 161
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 33


Number of BDD nodes:                               2582
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2551 (count: 6379, min: 0, max: 303, avg: 0.40)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.189s
Automaton transfers with branching:                0
Automaton transfer successors:                        13012 (count: 13012, min: 1, max: 1, avg: 1.00) [1 x 13012]

CPA algorithm statistics
------------------------
Number of iterations:            8764
Max size of waitlist:            42
Average size of waitlist:        10
Number of computed successors:   10549
Max successors for one state:    2
Number of times merged:          688
Number of times stopped:         765
Number of times breaked:         28

Total time for CPA algorithm:        24.244s (Max:     2.454s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:     20.525s
  Time for transfer relation:         2.996s
  Time for merge operator:            0.334s
  Time for stop operator:             0.067s
  Time for adding to reached set:     0.101s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 449 (count: 28, min: 3, max: 35, avg: 16.04)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.453s
  Counterexample analysis:                             2.296s (Max:     0.204s, Calls: 28)
    Refinement sat check:                              1.957s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.026s
  Precision update:                                    0.008s
  ARG update:                                          0.076s

Length of refined path (in blocks):                     332 (count: 28, min: 2, max: 35, avg: 11.86)
Number of affected states:                              291 (count: 28, min: 0, max: 34, avg: 10.39)
Length (states) of path with itp 'true':                 13 (count: 28, min: 0, max: 1, avg: 0.46)
Length (states) of path with itp non-trivial itp:       291 (count: 28, min: 0, max: 34, avg: 10.39)
Length (states) of path with itp 'false':                20 (count: 28, min: 0, max: 1, avg: 0.71)
Different non-trivial interpolants along paths:          26 (count: 28, min: 0, max: 4, avg: 0.93)
Equal non-trivial interpolants along paths:             245 (count: 28, min: 0, max: 32, avg: 8.75)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 773
Max. size of reached set after ref.:  131
Avg. size of reached set before ref.: 371.96
Avg. size of reached set after ref.:  56.96

Total time for CEGAR algorithm:      26.759s
Time for refinements:                 2.509s
Average time for refinement:          0.089s
Max time for refinement:              0.209s

Code Coverage
-----------------------------
  Function coverage:      0.095
  Visited lines:          223
  Total lines:            349
  Line coverage:          0.639
  Visited conditions:     76
  Total conditions:       182
  Condition coverage:     0.418

CPAchecker general statistics
-----------------------------
Number of program locations:     732
Number of CFA edges:             836
Number of relevant variables:    57
Number of functions:             21
Number of loops:                 4
Size of reached set:             276
  Number of reached locations:   99 (14%)
    Avg states per location:     2
    Max states per location:     12 (at node N330)
  Number of reached functions:   2 (10%)
  Number of partitions:          263
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N338 (before line 876), Function main called from node N318, stack depth 1 [60129b9a], stack [main]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          3.503s
  Time for loading CPAs:          0.739s
  Time for loading parser:        0.676s
  Time for CFA construction:      1.858s
    Time for parsing file(s):     0.596s
    Time for AST to CFA:          0.579s
    Time for CFA sanity check:    0.129s
    Time for post-processing:     0.412s
      Time for var class.:        0.165s
Time for Analysis:               26.759s
CPU time for analysis:           26.760s
Total time for CPAchecker:       30.266s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.097s

Time for Garbage Collector:       0.234s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     40MB (    38 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
