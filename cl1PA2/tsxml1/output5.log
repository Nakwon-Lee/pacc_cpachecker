scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_fib_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jce4bk6z/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 825: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 825: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 827: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 829: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 904: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 910: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            838 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  596 (71%)
  Because of loop head:            216 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (3%)
  Times precision was empty:       324 (39%)
  Times precision was {false}:     127 (15%)
  Times result was cached:         123 (15%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      264 (32%)
  Times result was 'false':        244 (29%)
Number of strengthen sat checks:   0
Number of coverage checks:         1074
  BDD entailment checks:           580
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       107
Number of predicates discovered:          12
Number of abstraction locations:          12
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         1371
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 3.51
Number of irrelevant predicates:          304 (22%)
Number of preds handled by boolean abs:   946 (69%)
  Total number of models for allsat:      555
  Max number of models for allsat:        16
  Avg number of models for allsat:        2.10

Time for post operator:                  2.718s
  Time for path formula creation:        2.665s
Time for strengthen operator:            0.055s
Time for prec operator:                 20.281s
  Time for abstraction:                 20.199s (Max:     1.149s, Count: 838)
    Boolean abstraction:                12.209s
    Solving time:                       13.167s (Max:     1.108s)
    Model enumeration time:              3.199s
    Time for BDD construction:           0.073s (Max:     0.017s)
Time for merge operator:                 0.124s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):    16.366s

Number of path formula cache hits:   5829 (54%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.577s

Total number of created targets for pointer analysis: 17916
   Number of created targets for uf: *signed_int is 208
   Number of created targets for uf: *unsigned_char is 379
   Number of created targets for uf: *(unsigned_char)* is 325
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 19


Number of BDD nodes:                               1508
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1214 (count: 3533, min: 0, max: 137, avg: 0.34)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.141s
Automaton transfers with branching:                0
Automaton transfer successors:                        10480 (count: 10480, min: 1, max: 1, avg: 1.00) [1 x 10480]

CPA algorithm statistics
------------------------
Number of iterations:            7210
Max size of waitlist:            61
Average size of waitlist:        20
Number of computed successors:   7932
Max successors for one state:    2
Number of times merged:          247
Number of times stopped:         281
Number of times breaked:         26

Total time for CPA algorithm:        24.495s (Max:     4.253s)
  Time for choose from waitlist:      0.017s
  Time for precision adjustment:     20.527s
  Time for transfer relation:         3.452s
  Time for merge operator:            0.176s
  Time for stop operator:             0.090s
  Time for adding to reached set:     0.081s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   26
Avg. length of target path (in blocks):                 269 (count: 26, min: 3, max: 27, avg: 10.35)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.275s
  Counterexample analysis:                             2.171s (Max:     0.219s, Calls: 26)
    Refinement sat check:                              1.979s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.013s
  Precision update:                                    0.020s
  ARG update:                                          0.037s

Length of refined path (in blocks):                     151 (count: 26, min: 2, max: 22, avg: 5.81)
Number of affected states:                               84 (count: 26, min: 0, max: 21, avg: 3.23)
Length (states) of path with itp 'true':                 41 (count: 26, min: 0, max: 6, avg: 1.58)
Length (states) of path with itp non-trivial itp:        84 (count: 26, min: 0, max: 21, avg: 3.23)
Length (states) of path with itp 'false':                23 (count: 26, min: 0, max: 1, avg: 0.88)
Different non-trivial interpolants along paths:          20 (count: 26, min: 0, max: 5, avg: 0.77)
Equal non-trivial interpolants along paths:              53 (count: 26, min: 0, max: 15, avg: 2.04)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                26
Number of successful refinements:     26
Number of failed refinements:         0
Max. size of reached set before ref.: 812
Max. size of reached set after ref.:  414
Avg. size of reached set before ref.: 493.35
Avg. size of reached set after ref.:  226.04

Total time for CEGAR algorithm:      26.871s
Time for refinements:                 2.374s
Average time for refinement:          0.091s
Max time for refinement:              0.229s

Code Coverage
-----------------------------
  Function coverage:      0.056
  Visited lines:          259
  Total lines:            363
  Line coverage:          0.713
  Visited conditions:     107
  Total conditions:       198
  Condition coverage:     0.540

CPAchecker general statistics
-----------------------------
Number of program locations:     721
Number of CFA edges:             785
Number of relevant variables:    51
Number of functions:             18
Number of loops:                 6
Size of reached set:             458
  Number of reached locations:   123 (17%)
    Avg states per location:     3
    Max states per location:     12 (at node N282)
  Number of reached functions:   1 (6%)
  Number of partitions:          444
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N288 (before line 844), Function main called from node N272, stack depth 1 [7fb95505], stack [main]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          3.351s
  Time for loading CPAs:          0.655s
  Time for loading parser:        0.723s
  Time for CFA construction:      1.764s
    Time for parsing file(s):     0.564s
    Time for AST to CFA:          0.531s
    Time for CFA sanity check:    0.086s
    Time for post-processing:     0.403s
      Time for var class.:        0.157s
Time for Analysis:               26.871s
CPU time for analysis:           26.870s
Total time for CPAchecker:       30.226s
Total CPU time for CPAchecker:   30.220s
Time for statistics:              0.090s

Time for Garbage Collector:       0.226s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     39MB (    38 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     33MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
