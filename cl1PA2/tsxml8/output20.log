scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_time_var_mutex_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uqo1iml2/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 810: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 931: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 937: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1541 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  930 (60%)
  Because of loop head:            556 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (4%)
  Times precision was empty:       154 (10%)
  Times precision was {false}:     61 (4%)
  Times result was cached:         910 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      416 (27%)
  Times result was 'false':        517 (34%)
Number of strengthen sat checks:   0
Number of coverage checks:         3437
  BDD entailment checks:           1947
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          14
Number of abstraction locations:          23
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         6127
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 12.84
Number of irrelevant predicates:          772 (13%)
Number of preds handled by boolean abs:   1320 (22%)
  Total number of models for allsat:      797
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.92

Time for post operator:                  2.227s
  Time for path formula creation:        2.172s
Time for strengthen operator:            0.060s
Time for prec operator:                 16.228s
  Time for abstraction:                 16.060s (Max:     0.371s, Count: 1541)
    Boolean abstraction:                10.470s
    Solving time:                        9.265s (Max:     0.359s)
    Model enumeration time:              2.189s
    Time for BDD construction:           0.062s (Max:     0.009s)
Time for merge operator:                 0.165s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):    11.454s

Number of path formula cache hits:   15682 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.029s

Total number of created targets for pointer analysis: 10958
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *unsigned_char is 289
   Number of created targets for uf: *(unsigned_char)* is 145
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 7


Number of BDD nodes:                               1281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1417 (count: 5233, min: 0, max: 306, avg: 0.27)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.212s
Automaton transfers with branching:                0
Automaton transfer successors:                        18324 (count: 18324, min: 1, max: 1, avg: 1.00) [1 x 18324]

CPA algorithm statistics
------------------------
Number of iterations:            12354
Max size of waitlist:            31
Average size of waitlist:        8
Number of computed successors:   13852
Max successors for one state:    2
Number of times merged:          745
Number of times stopped:         872
Number of times breaked:         24

Total time for CPA algorithm:        20.494s (Max:     1.800s)
  Time for choose from waitlist:      0.032s
  Time for precision adjustment:     16.573s
  Time for transfer relation:         3.239s
  Time for merge operator:            0.263s
  Time for stop operator:             0.090s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 650 (count: 24, min: 3, max: 46, avg: 27.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.859s
  Counterexample analysis:                             5.683s (Max:     2.491s, Calls: 24)
    Refinement sat check:                              5.202s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.045s
  Precision update:                                    0.016s
  ARG update:                                          0.083s

Length of refined path (in blocks):                     527 (count: 23, min: 2, max: 42, avg: 22.91)
Number of affected states:                              501 (count: 23, min: 1, max: 41, avg: 21.78)
Length (states) of path with itp 'true':                  3 (count: 23, min: 0, max: 1, avg: 0.13)
Length (states) of path with itp non-trivial itp:       501 (count: 23, min: 1, max: 41, avg: 21.78)
Length (states) of path with itp 'false':                14 (count: 23, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:          25 (count: 23, min: 0, max: 3, avg: 1.09)
Equal non-trivial interpolants along paths:             453 (count: 23, min: 0, max: 39, avg: 19.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 959
Max. size of reached set after ref.:  74
Avg. size of reached set before ref.: 531.08
Avg. size of reached set after ref.:  12.26

Total time for CEGAR algorithm:      26.413s
Time for refinements:                 5.918s
Average time for refinement:          0.246s
Max time for refinement:              2.494s

Code Coverage
-----------------------------
  Function coverage:      0.444
  Visited lines:          282
  Total lines:            365
  Line coverage:          0.773
  Visited conditions:     103
  Total conditions:       184
  Condition coverage:     0.560

CPAchecker general statistics
-----------------------------
Number of program locations:     714
Number of CFA edges:             815
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 4
Size of reached set:             959
  Number of reached locations:   168 (24%)
    Avg states per location:     5
    Max states per location:     15 (at node N9)
  Number of reached functions:   8 (44%)
  Number of partitions:          943
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N377 (before line 889), Function main called from node N355, stack depth 1 [1458ed9c], stack [main]])
  Number of target states:       1
  Size of final wait list        8

Time for analysis setup:          3.412s
  Time for loading CPAs:          0.722s
  Time for loading parser:        0.646s
  Time for CFA construction:      1.889s
    Time for parsing file(s):     0.634s
    Time for AST to CFA:          0.573s
    Time for CFA sanity check:    0.097s
    Time for post-processing:     0.396s
      Time for var class.:        0.171s
Time for Analysis:               26.413s
CPU time for analysis:           26.420s
Total time for CPAchecker:       29.833s
Total CPU time for CPAchecker:   29.830s
Time for statistics:              0.088s

Time for Garbage Collector:       0.229s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    56 MiB) max;     38MB (    37 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    32 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
