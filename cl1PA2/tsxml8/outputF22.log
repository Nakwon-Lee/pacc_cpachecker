scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_time_var_mutex_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_dtbyss5o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 810: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 931: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 937: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Error: Refinement failed: Interpolation failed (msat_get_model failed with "non-integer model value", probably the actual problem is interpolation) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            5001 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4140 (83%)
  Because of loop head:            756 (15%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         105 (2%)
  Times precision was empty:       1523 (30%)
  Times precision was {false}:     95 (2%)
  Times result was cached:         2116 (42%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1267 (25%)
  Times result was 'false':        769 (15%)
Number of strengthen sat checks:   0
Number of coverage checks:         10512
  BDD entailment checks:           3632
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          45
Number of abstraction locations:          29
Max number of predicates per location:    28
Avg number of predicates per location:    14
Total predicates per abstraction:         24963
Max number of predicates per abstraction: 28
Avg number of predicates per abstraction: 18.33
Number of irrelevant predicates:          4643 (19%)
Number of preds handled by boolean abs:   9258 (37%)
  Total number of models for allsat:      7501
  Max number of models for allsat:        216
  Avg number of models for allsat:        5.92

Time for post operator:                  3.880s
  Time for path formula creation:        3.793s
Time for strengthen operator:            0.106s
Time for prec operator:                 32.003s
  Time for abstraction:                 31.755s (Max:     0.835s, Count: 5001)
    Boolean abstraction:                22.842s
    Solving time:                       13.704s (Max:     0.384s)
    Model enumeration time:              9.654s
    Time for BDD construction:           0.466s (Max:     0.018s)
Time for merge operator:                 0.466s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.008s
Total time for SMT solver (w/o itp):    23.358s

Number of path formula cache hits:   40834 (77%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.497s

Total number of created targets for pointer analysis: 22959
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *unsigned_char is 289
   Number of created targets for uf: *(unsigned_char)* is 145
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 151


Number of BDD nodes:                               110516
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12011 (count: 17204, min: 0, max: 1563, avg: 0.70)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.360s
Automaton transfers with branching:                0
Automaton transfer successors:                        47957 (count: 47957, min: 1, max: 1, avg: 1.00) [1 x 47957]

CPA algorithm statistics
------------------------
Number of iterations:            32848
Max size of waitlist:            28
Average size of waitlist:        7
Number of computed successors:   37886
Max successors for one state:    2
Number of times merged:          3440
Number of times stopped:         4159
Number of times breaked:         34

Total time for CPA algorithm:        39.764s (Max:     5.337s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:     32.544s
  Time for transfer relation:         5.640s
  Time for merge operator:            0.666s
  Time for stop operator:             0.170s
  Time for adding to reached set:     0.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                1356 (count: 34, min: 3, max: 106, avg: 39.88)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 117.796s
  Counterexample analysis:                           117.510s (Max:   103.292s, Calls: 34)
    Refinement sat check:                             16.143s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.014s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.065s
  Precision update:                                    0.029s
  ARG update:                                          0.146s

Length of refined path (in blocks):                    1181 (count: 33, min: 2, max: 100, avg: 35.79)
Number of affected states:                             1127 (count: 33, min: 0, max: 99, avg: 34.15)
Length (states) of path with itp 'true':                 21 (count: 33, min: 0, max: 16, avg: 0.64)
Length (states) of path with itp non-trivial itp:      1127 (count: 33, min: 0, max: 99, avg: 34.15)
Length (states) of path with itp 'false':                20 (count: 33, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:         100 (count: 33, min: 0, max: 19, avg: 3.03)
Equal non-trivial interpolants along paths:             996 (count: 33, min: 0, max: 86, avg: 30.18)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     33
Number of failed refinements:         1
Max. size of reached set before ref.: 1810
Max. size of reached set after ref.:  556
Avg. size of reached set before ref.: 1014.21
Avg. size of reached set after ref.:  46.18

Total time for CEGAR algorithm:     157.717s
Time for refinements:               117.948s
Average time for refinement:          3.469s
Max time for refinement:            103.301s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          292
  Total lines:            365
  Line coverage:          0.800
  Visited conditions:     113
  Total conditions:       184
  Condition coverage:     0.614

CPAchecker general statistics
-----------------------------
Number of program locations:     714
Number of CFA edges:             815
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 4
Size of reached set:             1471
  Number of reached locations:   189 (26%)
    Avg states per location:     7
    Max states per location:     31 (at node N8)
  Number of reached functions:   9 (50%)
  Number of partitions:          1453
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N377 (before line 889), Function main called from node N355, stack depth 1 [1458ed9c], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.424s
  Time for loading CPAs:          0.698s
  Time for loading parser:        0.673s
  Time for CFA construction:      1.828s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.599s
    Time for CFA sanity check:    0.103s
    Time for post-processing:     0.376s
      Time for var class.:        0.150s
Time for Analysis:              157.717s
CPU time for analysis:          157.700s
Total time for CPAchecker:      161.145s
Total CPU time for CPAchecker:  161.120s
Time for statistics:              0.104s

Time for Garbage Collector:       0.413s (in 55 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    38 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8133MB (  7757 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
