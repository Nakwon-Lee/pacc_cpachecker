scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_time_var_mutex_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nc86_wwt/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 810: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 931: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 937: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2009 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1398 (70%)
  Because of loop head:            556 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         55 (3%)
  Times precision was empty:       406 (20%)
  Times precision was {false}:     77 (4%)
  Times result was cached:         1062 (53%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      464 (23%)
  Times result was 'false':        517 (26%)
Number of strengthen sat checks:   0
Number of coverage checks:         4437
  BDD entailment checks:           2093
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          14
Number of abstraction locations:          23
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         6688
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 12.36
Number of irrelevant predicates:          1108 (17%)
Number of preds handled by boolean abs:   1396 (21%)
  Total number of models for allsat:      893
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.92

Time for post operator:                  2.529s
  Time for path formula creation:        2.494s
Time for strengthen operator:            0.074s
Time for prec operator:                 15.861s
  Time for abstraction:                 15.674s (Max:     0.543s, Count: 2009)
    Boolean abstraction:                10.115s
    Solving time:                        8.841s (Max:     0.510s)
    Model enumeration time:              2.350s
    Time for BDD construction:           0.105s (Max:     0.010s)
Time for merge operator:                 0.250s
Time for coverage check:                 0.019s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):    11.191s

Number of path formula cache hits:   20641 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.494s

Total number of created targets for pointer analysis: 14164
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *unsigned_char is 325
   Number of created targets for uf: *(unsigned_char)* is 163
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 13


Number of BDD nodes:                               1281
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1519 (count: 5999, min: 0, max: 296, avg: 0.25)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.200s
Automaton transfers with branching:                0
Automaton transfer successors:                        23980 (count: 23980, min: 1, max: 1, avg: 1.00) [1 x 23980]

CPA algorithm statistics
------------------------
Number of iterations:            16694
Max size of waitlist:            36
Average size of waitlist:        10
Number of computed successors:   18747
Max successors for one state:    2
Number of times merged:          1172
Number of times stopped:         1369
Number of times breaked:         24

Total time for CPA algorithm:        20.593s (Max:     1.841s)
  Time for choose from waitlist:      0.034s
  Time for precision adjustment:     16.175s
  Time for transfer relation:         3.494s
  Time for merge operator:            0.355s
  Time for stop operator:             0.124s
  Time for adding to reached set:     0.154s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 650 (count: 24, min: 3, max: 46, avg: 27.08)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.052s
  Counterexample analysis:                             6.783s (Max:     3.542s, Calls: 24)
    Refinement sat check:                              5.810s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          2.085s
  Predicate creation:                                  0.027s
  Precision update:                                    0.019s
  ARG update:                                          0.101s

Length of refined path (in blocks):                     527 (count: 23, min: 2, max: 42, avg: 22.91)
Number of affected states:                              501 (count: 23, min: 1, max: 41, avg: 21.78)
Length (states) of path with itp 'true':                  3 (count: 23, min: 0, max: 1, avg: 0.13)
Length (states) of path with itp non-trivial itp:       501 (count: 23, min: 1, max: 41, avg: 21.78)
Length (states) of path with itp 'false':                14 (count: 23, min: 0, max: 1, avg: 0.61)
Different non-trivial interpolants along paths:          25 (count: 23, min: 0, max: 3, avg: 1.09)
Equal non-trivial interpolants along paths:             453 (count: 23, min: 0, max: 39, avg: 19.70)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1148
Max. size of reached set after ref.:  74
Avg. size of reached set before ref.: 714.33
Avg. size of reached set after ref.:  12.26

Total time for CEGAR algorithm:      29.735s
Time for refinements:                 9.141s
Average time for refinement:          0.380s
Max time for refinement:              5.630s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          292
  Total lines:            365
  Line coverage:          0.800
  Visited conditions:     113
  Total conditions:       184
  Condition coverage:     0.614

CPAchecker general statistics
-----------------------------
Number of program locations:     714
Number of CFA edges:             815
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 4
Size of reached set:             1148
  Number of reached locations:   189 (26%)
    Avg states per location:     6
    Max states per location:     16 (at node N8)
  Number of reached functions:   9 (50%)
  Number of partitions:          1130
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N377 (before line 889), Function main called from node N355, stack depth 1 [1458ed9c], stack [main]])
  Number of target states:       1
  Size of final wait list        10

Time for analysis setup:          3.522s
  Time for loading CPAs:          0.711s
  Time for loading parser:        0.726s
  Time for CFA construction:      1.863s
    Time for parsing file(s):     0.589s
    Time for AST to CFA:          0.601s
    Time for CFA sanity check:    0.094s
    Time for post-processing:     0.429s
      Time for var class.:        0.169s
Time for Analysis:               29.736s
CPU time for analysis:           29.740s
Time for analyzing result:        0.001s
Total time for CPAchecker:       33.262s
Total CPU time for CPAchecker:   33.260s
Time for statistics:              0.110s

Time for Garbage Collector:       0.268s (in 37 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    59 MiB) max;     41MB (    39 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8079MB (  7705 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
