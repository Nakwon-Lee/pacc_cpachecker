scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_time_var_mutex_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2c9h6i42/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 810: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 810: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 811: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 819: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 835: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 836: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 846: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 931: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 937: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            3188 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2907 (91%)
  Because of loop head:            261 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (1%)
  Times precision was empty:       2085 (65%)
  Times precision was {false}:     153 (5%)
  Times result was cached:         748 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      202 (6%)
  Times result was 'false':        219 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         6139
  BDD entailment checks:           1381
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          10
Number of abstraction locations:          21
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         2326
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 6.55
Number of irrelevant predicates:          703 (30%)
Number of preds handled by boolean abs:   522 (22%)
  Total number of models for allsat:      393
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.95

Time for post operator:                  4.289s
  Time for path formula creation:        4.186s
Time for strengthen operator:            0.088s
Time for prec operator:                  9.859s
  Time for abstraction:                  9.655s (Max:     0.189s, Count: 3188)
    Boolean abstraction:                 4.758s
    Solving time:                        5.537s (Max:     0.179s)
    Model enumeration time:              1.215s
    Time for BDD construction:           0.084s (Max:     0.010s)
Time for merge operator:                 0.424s
Time for coverage check:                 0.046s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     6.752s

Number of path formula cache hits:   15665 (52%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.067s

Total number of created targets for pointer analysis: 27478
   Number of created targets for uf: *signed_int is 16
   Number of created targets for uf: *unsigned_char is 325
   Number of created targets for uf: *(unsigned_char)* is 163
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 211


Number of BDD nodes:                               605
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         613 (count: 5604, min: 0, max: 134, avg: 0.11)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.280s
Automaton transfers with branching:                0
Automaton transfer successors:                        27222 (count: 27222, min: 1, max: 1, avg: 1.00) [1 x 27222]

CPA algorithm statistics
------------------------
Number of iterations:            17961
Max size of waitlist:            28
Average size of waitlist:        6
Number of computed successors:   21162
Max successors for one state:    2
Number of times merged:          2379
Number of times stopped:         2931
Number of times breaked:         14

Total time for CPA algorithm:        17.362s (Max:     1.714s)
  Time for choose from waitlist:      0.056s
  Time for precision adjustment:     10.211s
  Time for transfer relation:         5.631s
  Time for merge operator:            0.662s
  Time for stop operator:             0.225s
  Time for adding to reached set:     0.216s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 310 (count: 14, min: 3, max: 46, avg: 22.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.964s
  Counterexample analysis:                             6.758s (Max:     4.615s, Calls: 14)
    Refinement sat check:                              6.059s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          2.059s
  Predicate creation:                                  0.016s
  Precision update:                                    0.015s
  ARG update:                                          0.098s

Length of refined path (in blocks):                     227 (count: 13, min: 2, max: 42, avg: 17.46)
Number of affected states:                              211 (count: 13, min: 1, max: 41, avg: 16.23)
Length (states) of path with itp 'true':                  3 (count: 13, min: 0, max: 1, avg: 0.23)
Length (states) of path with itp non-trivial itp:       211 (count: 13, min: 1, max: 41, avg: 16.23)
Length (states) of path with itp 'false':                 6 (count: 13, min: 0, max: 1, avg: 0.46)
Different non-trivial interpolants along paths:          15 (count: 13, min: 0, max: 3, avg: 1.15)
Equal non-trivial interpolants along paths:             183 (count: 13, min: 0, max: 39, avg: 14.08)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 1683
Max. size of reached set after ref.:  74
Avg. size of reached set before ref.: 1304.64
Avg. size of reached set after ref.:  19.38

Total time for CEGAR algorithm:      26.429s
Time for refinements:                 9.067s
Average time for refinement:          0.647s
Max time for refinement:              6.687s

Code Coverage
-----------------------------
  Function coverage:      0.500
  Visited lines:          292
  Total lines:            365
  Line coverage:          0.800
  Visited conditions:     113
  Total conditions:       184
  Condition coverage:     0.614

CPAchecker general statistics
-----------------------------
Number of program locations:     714
Number of CFA edges:             815
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 4
Size of reached set:             1683
  Number of reached locations:   188 (26%)
    Avg states per location:     8
    Max states per location:     50 (at node N8)
  Number of reached functions:   9 (50%)
  Number of partitions:          1668
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N377 (before line 889), Function main called from node N355, stack depth 1 [1458ed9c], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.338s
  Time for loading CPAs:          0.663s
  Time for loading parser:        0.635s
  Time for CFA construction:      1.890s
    Time for parsing file(s):     0.575s
    Time for AST to CFA:          0.610s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.432s
      Time for var class.:        0.195s
Time for Analysis:               26.429s
CPU time for analysis:           26.430s
Total time for CPAchecker:       29.772s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.103s

Time for Garbage Collector:       0.257s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8151MB (  7773 MiB) max;   8078MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
