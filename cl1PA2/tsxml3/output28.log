scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_peterson_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0e8bllan/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 804: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 911: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 917: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1941 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1441 (74%)
  Because of loop head:            437 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         63 (3%)
  Times precision was empty:       498 (26%)
  Times precision was {false}:     73 (4%)
  Times result was cached:         691 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      679 (35%)
  Times result was 'false':        438 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         4680
  BDD entailment checks:           1758
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          42
Number of abstraction locations:          20
Max number of predicates per location:    25
Avg number of predicates per location:    10
Total predicates per abstraction:         8516
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 11.32
Number of irrelevant predicates:          1616 (19%)
Number of preds handled by boolean abs:   4035 (47%)
  Total number of models for allsat:      2056
  Max number of models for allsat:        216
  Avg number of models for allsat:        3.03

Time for post operator:                  2.733s
  Time for path formula creation:        2.668s
Time for strengthen operator:            0.111s
Time for prec operator:                 14.605s
  Time for abstraction:                 14.422s (Max:     0.297s, Count: 1941)
    Boolean abstraction:                 9.809s
    Solving time:                        8.014s (Max:     0.236s)
    Model enumeration time:              2.287s
    Time for BDD construction:           0.214s (Max:     0.027s)
Time for merge operator:                 0.218s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.009s
Total time for SMT solver (w/o itp):    10.301s

Number of path formula cache hits:   17427 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.543s

Total number of created targets for pointer analysis: 11899
   Number of created targets for uf: *signed_int is 185
   Number of created targets for uf: *unsigned_char is 841
   Number of created targets for uf: *(unsigned_char)* is 235
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 17


Number of BDD nodes:                               24939
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7018 (count: 9221, min: 0, max: 1908, avg: 0.76)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.227s
Automaton transfers with branching:                0
Automaton transfer successors:                        21570 (count: 21570, min: 1, max: 1, avg: 1.00) [1 x 21570]

CPA algorithm statistics
------------------------
Number of iterations:            14561
Max size of waitlist:            27
Average size of waitlist:        7
Number of computed successors:   16756
Max successors for one state:    2
Number of times merged:          1461
Number of times stopped:         1676
Number of times breaked:         22

Total time for CPA algorithm:        19.859s (Max:     2.096s)
  Time for choose from waitlist:      0.048s
  Time for precision adjustment:     14.929s
  Time for transfer relation:         3.946s
  Time for merge operator:            0.333s
  Time for stop operator:             0.121s
  Time for adding to reached set:     0.151s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 572 (count: 22, min: 3, max: 54, avg: 26.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.249s
  Counterexample analysis:                             6.085s (Max:     1.220s, Calls: 22)
    Refinement sat check:                              5.503s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.018s
  ARG update:                                          0.080s

Length of refined path (in blocks):                     479 (count: 22, min: 2, max: 54, avg: 21.77)
Number of affected states:                              436 (count: 22, min: 0, max: 53, avg: 19.82)
Length (states) of path with itp 'true':                 21 (count: 22, min: 0, max: 16, avg: 0.95)
Length (states) of path with itp non-trivial itp:       436 (count: 22, min: 0, max: 53, avg: 19.82)
Length (states) of path with itp 'false':                13 (count: 22, min: 0, max: 1, avg: 0.59)
Different non-trivial interpolants along paths:          62 (count: 22, min: 0, max: 13, avg: 2.82)
Equal non-trivial interpolants along paths:             354 (count: 22, min: 0, max: 40, avg: 16.09)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 1239
Max. size of reached set after ref.:  332
Avg. size of reached set before ref.: 680.59
Avg. size of reached set after ref.:  51.14

Total time for CEGAR algorithm:      26.193s
Time for refinements:                 6.333s
Average time for refinement:          0.287s
Max time for refinement:              1.234s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          268
  Total lines:            344
  Line coverage:          0.779
  Visited conditions:     93
  Total conditions:       174
  Condition coverage:     0.534

CPAchecker general statistics
-----------------------------
Number of program locations:     687
Number of CFA edges:             769
Number of relevant variables:    52
Number of functions:             18
Number of loops:                 6
Size of reached set:             794
  Number of reached locations:   146 (21%)
    Avg states per location:     5
    Max states per location:     12 (at node N334)
  Number of reached functions:   6 (33%)
  Number of partitions:          775
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N342 (before line 871), Function main called from node N322, stack depth 1 [401f7633], stack [main]])
  Number of target states:       0
  Size of final wait list        6

Time for analysis setup:          3.576s
  Time for loading CPAs:          0.701s
  Time for loading parser:        0.694s
  Time for CFA construction:      1.931s
    Time for parsing file(s):     0.627s
    Time for AST to CFA:          0.618s
    Time for CFA sanity check:    0.106s
    Time for post-processing:     0.419s
      Time for var class.:        0.144s
Time for Analysis:               26.193s
CPU time for analysis:           26.200s
Total time for CPAchecker:       29.773s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.089s

Time for Garbage Collector:       0.279s (in 26 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     41MB (    39 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
