scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_peterson_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_fhjqbemq/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 804: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 911: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 917: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement failed: Interpolation failed (build_model: too many iterations) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            800 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  610 (76%)
  Because of loop head:            176 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (2%)
  Times precision was empty:       369 (46%)
  Times precision was {false}:     75 (9%)
  Times result was cached:         182 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      174 (22%)
  Times result was 'false':        144 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         1861
  BDD entailment checks:           595
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          10
Number of abstraction locations:          13
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         1171
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 4.70
Number of irrelevant predicates:          271 (23%)
Number of preds handled by boolean abs:   494 (42%)
  Total number of models for allsat:      362
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.08

Time for post operator:                  2.056s
  Time for path formula creation:        2.021s
Time for strengthen operator:            0.072s
Time for prec operator:                  5.179s
  Time for abstraction:                  5.081s (Max:     0.134s, Count: 800)
    Boolean abstraction:                 2.638s
    Solving time:                        2.953s (Max:     0.122s)
    Model enumeration time:              0.638s
    Time for BDD construction:           0.070s (Max:     0.018s)
Time for merge operator:                 0.163s
Time for coverage check:                 0.012s
  Time for BDD entailment checks:        0.011s
Total time for SMT solver (w/o itp):     3.591s

Number of path formula cache hits:   5046 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.917s

Total number of created targets for pointer analysis: 9693
   Number of created targets for uf: *signed_int is 185
   Number of created targets for uf: *unsigned_char is 438
   Number of created targets for uf: *(unsigned_char)* is 235
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 17


Number of BDD nodes:                               605
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         547 (count: 2535, min: 0, max: 136, avg: 0.22)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.127s
Automaton transfers with branching:                0
Automaton transfer successors:                         8952 (count: 8952, min: 1, max: 1, avg: 1.00) [1 x 8952]

CPA algorithm statistics
------------------------
Number of iterations:            5646
Max size of waitlist:            26
Average size of waitlist:        7
Number of computed successors:   6568
Max successors for one state:    2
Number of times merged:          633
Number of times stopped:         731
Number of times breaked:         11

Total time for CPA algorithm:         8.909s (Max:     1.597s)
  Time for choose from waitlist:      0.021s
  Time for precision adjustment:      5.428s
  Time for transfer relation:         2.823s
  Time for merge operator:            0.240s
  Time for stop operator:             0.083s
  Time for adding to reached set:     0.116s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 184 (count: 11, min: 3, max: 34, avg: 16.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 303.179s
  Counterexample analysis:                           303.096s (Max:   302.150s, Calls: 11)
    Refinement sat check:                            252.310s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.008s
  ARG update:                                          0.046s

Length of refined path (in blocks):                     113 (count: 10, min: 2, max: 30, avg: 11.30)
Number of affected states:                              100 (count: 10, min: 1, max: 29, avg: 10.00)
Length (states) of path with itp 'true':                  3 (count: 10, min: 0, max: 1, avg: 0.30)
Length (states) of path with itp non-trivial itp:       100 (count: 10, min: 1, max: 29, avg: 10.00)
Length (states) of path with itp 'false':                 6 (count: 10, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:          12 (count: 10, min: 0, max: 3, avg: 1.20)
Equal non-trivial interpolants along paths:              78 (count: 10, min: 0, max: 27, avg: 7.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     10
Number of failed refinements:         1
Max. size of reached set before ref.: 883
Max. size of reached set after ref.:  70
Avg. size of reached set before ref.: 538.64
Avg. size of reached set after ref.:  23.10

Total time for CEGAR algorithm:     312.138s
Time for refinements:               303.229s
Average time for refinement:         27.566s
Max time for refinement:            302.156s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          268
  Total lines:            344
  Line coverage:          0.779
  Visited conditions:     93
  Total conditions:       174
  Condition coverage:     0.534

CPAchecker general statistics
-----------------------------
Number of program locations:     687
Number of CFA edges:             769
Number of relevant variables:    52
Number of functions:             18
Number of loops:                 6
Size of reached set:             883
  Number of reached locations:   146 (21%)
    Avg states per location:     6
    Max states per location:     17 (at node N8)
  Number of reached functions:   6 (33%)
  Number of partitions:          868
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N342 (before line 871), Function main called from node N322, stack depth 1 [401f7633], stack [main]])
  Number of target states:       1
  Size of final wait list        7

Time for analysis setup:          3.424s
  Time for loading CPAs:          0.693s
  Time for loading parser:        0.793s
  Time for CFA construction:      1.762s
    Time for parsing file(s):     0.544s
    Time for AST to CFA:          0.572s
    Time for CFA sanity check:    0.108s
    Time for post-processing:     0.383s
      Time for var class.:        0.146s
Time for Analysis:              312.139s
CPU time for analysis:          312.120s
Total time for CPAchecker:      315.569s
Total CPU time for CPAchecker:  315.550s
Time for statistics:              0.103s

Time for Garbage Collector:       0.148s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     35MB (    33 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8084MB (  7709 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
