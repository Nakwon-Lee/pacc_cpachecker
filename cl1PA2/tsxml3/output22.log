scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_peterson_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cludgosa/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 804: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 804: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 834: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 911: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 917: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Warning: Could not replay error path to get a more precise model (build_model: too many iterations) (PredicateCPA:Mathsat5NativeApi.processSolveResult, WARNING)

The satisfying assignment may be imprecise! (PredicateCPA:PathChecker.createCounterexample, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1281 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1093 (85%)
  Because of loop head:            174 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (1%)
  Times precision was empty:       807 (63%)
  Times precision was {false}:     94 (7%)
  Times result was cached:         206 (16%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      174 (14%)
  Times result was 'false':        144 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         2925
  BDD entailment checks:           693
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          10
Number of abstraction locations:          13
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         1214
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 4.53
Number of irrelevant predicates:          314 (26%)
Number of preds handled by boolean abs:   494 (41%)
  Total number of models for allsat:      362
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.08

Time for post operator:                  2.934s
  Time for path formula creation:        2.874s
Time for strengthen operator:            0.079s
Time for prec operator:                  6.539s
  Time for abstraction:                  6.370s (Max:     0.218s, Count: 1281)
    Boolean abstraction:                 3.342s
    Solving time:                        4.130s (Max:     0.193s)
    Model enumeration time:              0.652s
    Time for BDD construction:           0.031s (Max:     0.006s)
Time for merge operator:                 0.215s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):     4.782s

Number of path formula cache hits:   6581 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.869s

Total number of created targets for pointer analysis: 15873
   Number of created targets for uf: *signed_int is 208
   Number of created targets for uf: *unsigned_char is 464
   Number of created targets for uf: *(unsigned_char)* is 397
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 19


Number of BDD nodes:                               605
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         541 (count: 3166, min: 0, max: 159, avg: 0.17)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.156s
Automaton transfers with branching:                0
Automaton transfer successors:                        13015 (count: 13015, min: 1, max: 1, avg: 1.00) [1 x 13015]

CPA algorithm statistics
------------------------
Number of iterations:            8263
Max size of waitlist:            26
Average size of waitlist:        6
Number of computed successors:   9759
Max successors for one state:    2
Number of times merged:          1116
Number of times stopped:         1313
Number of times breaked:         11

Total time for CPA algorithm:        11.641s (Max:     1.587s)
  Time for choose from waitlist:      0.036s
  Time for precision adjustment:      6.936s
  Time for transfer relation:         3.884s
  Time for merge operator:            0.348s
  Time for stop operator:             0.150s
  Time for adding to reached set:     0.100s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 184 (count: 11, min: 3, max: 34, avg: 16.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.953s
  Counterexample analysis:                             4.661s (Max:     3.594s, Calls: 11)
    Refinement sat check:                              4.188s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          3.219s
  Predicate creation:                                  0.011s
  Precision update:                                    0.006s
  ARG update:                                          0.047s

Length of refined path (in blocks):                     113 (count: 10, min: 2, max: 30, avg: 11.30)
Number of affected states:                              100 (count: 10, min: 1, max: 29, avg: 10.00)
Length (states) of path with itp 'true':                  3 (count: 10, min: 0, max: 1, avg: 0.30)
Length (states) of path with itp non-trivial itp:       100 (count: 10, min: 1, max: 29, avg: 10.00)
Length (states) of path with itp 'false':                 6 (count: 10, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:          12 (count: 10, min: 0, max: 3, avg: 1.20)
Equal non-trivial interpolants along paths:              78 (count: 10, min: 0, max: 27, avg: 7.80)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 1109
Max. size of reached set after ref.:  70
Avg. size of reached set before ref.: 775.82
Avg. size of reached set after ref.:  23.10

Total time for CEGAR algorithm:      19.689s
Time for refinements:                 8.047s
Average time for refinement:          0.731s
Max time for refinement:              6.825s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          268
  Total lines:            344
  Line coverage:          0.779
  Visited conditions:     93
  Total conditions:       174
  Condition coverage:     0.534

CPAchecker general statistics
-----------------------------
Number of program locations:     687
Number of CFA edges:             769
Number of relevant variables:    52
Number of functions:             18
Number of loops:                 6
Size of reached set:             1109
  Number of reached locations:   146 (21%)
    Avg states per location:     7
    Max states per location:     25 (at node N8)
  Number of reached functions:   6 (33%)
  Number of partitions:          1094
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N342 (before line 871), Function main called from node N322, stack depth 1 [401f7633], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.460s
  Time for loading CPAs:          0.716s
  Time for loading parser:        0.643s
  Time for CFA construction:      1.877s
    Time for parsing file(s):     0.577s
    Time for AST to CFA:          0.623s
    Time for CFA sanity check:    0.108s
    Time for post-processing:     0.394s
      Time for var class.:        0.140s
Time for Analysis:               19.689s
CPU time for analysis:           19.690s
Time for analyzing result:        0.000s
Total time for CPAchecker:       23.153s
Total CPU time for CPAchecker:   23.150s
Time for statistics:              0.112s

Time for Garbage Collector:       0.177s (in 15 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     36MB (    34 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
