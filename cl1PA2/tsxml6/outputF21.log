scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yiiw5amw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            25013 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  24265 (97%)
  Because of loop head:            715 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         33 (0%)
  Times precision was empty:       24484 (98%)
  Times precision was {false}:     91 (0%)
  Times result was cached:         124 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      314 (1%)
  Times result was 'false':        122 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         40862
  BDD entailment checks:           7330
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          9
Number of abstraction locations:          9
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         966
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 2.39
Number of irrelevant predicates:          379 (39%)
Number of preds handled by boolean abs:   565 (58%)
  Total number of models for allsat:      534
  Max number of models for allsat:        6
  Avg number of models for allsat:        1.70

Time for post operator:                 20.658s
  Time for path formula creation:       20.419s
Time for strengthen operator:            0.375s
Time for prec operator:                852.240s
  Time for abstraction:                851.409s (Max:   493.863s, Count: 25013)
    Boolean abstraction:               832.307s
    Solving time:                       43.109s (Max:     2.841s)
    Model enumeration time:            802.341s
    Time for BDD construction:           0.050s (Max:     0.003s)
Time for merge operator:                 0.992s
Time for coverage check:                 0.082s
  Time for BDD entailment checks:        0.077s
Total time for SMT solver (w/o itp):   845.451s

Number of path formula cache hits:   62511 (28%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    19.262s

Total number of created targets for pointer analysis: 359644
   Number of created targets for uf: *signed_int is 2409
   Number of created targets for uf: *unsigned_char is 3103
   Number of created targets for uf: *(unsigned_char)* is 229
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 29


Number of BDD nodes:                               348
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         704 (count: 34267, min: 0, max: 115, avg: 0.02)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.678s
  Time for transition matches:                         0.328s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                       210179 (count: 210179, min: 1, max: 1, avg: 1.00) [1 x 210179]

CPA algorithm statistics
------------------------
Number of iterations:            142681
Max size of waitlist:            123
Average size of waitlist:        46
Number of computed successors:   166903
Max successors for one state:    2
Number of times merged:          16766
Number of times stopped:         23912
Number of times breaked:         33

Total time for CPA algorithm:       883.767s (Max:   494.926s)
  Time for choose from waitlist:      0.237s
  Time for precision adjustment:    854.173s
  Time for transfer relation:        25.681s
  Time for merge operator:            1.529s
  Time for stop operator:             0.452s
  Time for adding to reached set:     0.559s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                 483 (count: 33, min: 3, max: 23, avg: 14.64)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.249s
  Counterexample analysis:                            11.713s (Max:     1.044s, Calls: 33)
    Refinement sat check:                             10.823s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.032s
  ARG update:                                          0.453s

Length of refined path (in blocks):                     274 (count: 33, min: 2, max: 18, avg: 8.30)
Number of affected states:                               39 (count: 33, min: 0, max: 5, avg: 1.18)
Length (states) of path with itp 'true':                202 (count: 33, min: 0, max: 17, avg: 6.12)
Length (states) of path with itp non-trivial itp:        39 (count: 33, min: 0, max: 5, avg: 1.18)
Length (states) of path with itp 'false':                32 (count: 33, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:          24 (count: 33, min: 0, max: 4, avg: 0.73)
Equal non-trivial interpolants along paths:               0 (count: 33, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     33
Number of failed refinements:         0
Max. size of reached set before ref.: 10750
Max. size of reached set after ref.:  9774
Avg. size of reached set before ref.: 8235.03
Avg. size of reached set after ref.:  3912.24

Total time for CEGAR algorithm:     896.616s
Time for refinements:                12.717s
Average time for refinement:          0.385s
Max time for refinement:              1.087s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          341
  Total lines:            548
  Line coverage:          0.622
  Visited conditions:     135
  Total conditions:       334
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             217
  Number of reached locations:   157 (13%)
    Avg states per location:     1
    Max states per location:     6 (at node N624)
  Number of reached functions:   1 (4%)
  Number of partitions:          205
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.895s
  Time for loading CPAs:          0.724s
  Time for loading parser:        0.721s
  Time for CFA construction:      2.277s
    Time for parsing file(s):     0.629s
    Time for AST to CFA:          0.799s
    Time for CFA sanity check:    0.156s
    Time for post-processing:     0.518s
      Time for var class.:        0.229s
Time for Analysis:              896.616s
CPU time for analysis:          896.500s
Total time for CPAchecker:      900.517s
Total CPU time for CPAchecker:  900.400s
Time for statistics:              0.071s

Time for Garbage Collector:       2.417s (in 133 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                124MB (   119 MiB) max;     78MB (    74 MiB) avg;    139MB (   132 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     38MB (    36 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           165MB (   158 MiB) max;    161MB (   154 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     40MB (    39 MiB) avg
Total process virtual memory:   8471MB (  8079 MiB) max;   8291MB (  7907 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
