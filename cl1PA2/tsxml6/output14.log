scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_790w5z8v/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            920 (10% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  874 (95%)
  Because of loop head:            34 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         12 (1%)
  Times precision was empty:       876 (95%)
  Times precision was {false}:     17 (2%)
  Times result was cached:         17 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      10 (1%)
  Times result was 'false':        15 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1504
  BDD entailment checks:           236
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          4
Number of abstraction locations:          6
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         46
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.70
Number of irrelevant predicates:          29 (63%)
Number of preds handled by boolean abs:   11 (24%)
  Total number of models for allsat:      14
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.40

Time for post operator:                  2.759s
  Time for path formula creation:        2.717s
Time for strengthen operator:            0.042s
Time for prec operator:                 18.564s
  Time for abstraction:                 18.440s (Max:     4.088s, Count: 920)
    Boolean abstraction:                14.323s
    Solving time:                       16.809s (Max:     4.019s)
    Model enumeration time:              0.389s
    Time for BDD construction:           0.011s (Max:     0.007s)
Time for merge operator:                 0.097s
Time for coverage check:                 0.005s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):    17.198s

Number of path formula cache hits:   5246 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.622s

Total number of created targets for pointer analysis: 21576
   Number of created targets for uf: *signed_int is 345
   Number of created targets for uf: *unsigned_char is 177
   Number of created targets for uf: *(unsigned_char)* is 13
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 5


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          29 (count: 1276, min: 0, max: 12, avg: 0.02)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.179s
Automaton transfers with branching:                0
Automaton transfer successors:                         9186 (count: 9186, min: 1, max: 1, avg: 1.00) [1 x 9186]

CPA algorithm statistics
------------------------
Number of iterations:            6096
Max size of waitlist:            61
Average size of waitlist:        15
Number of computed successors:   7023
Max successors for one state:    2
Number of times merged:          634
Number of times stopped:         868
Number of times breaked:         12

Total time for CPA algorithm:        23.030s (Max:     5.131s)
  Time for choose from waitlist:      0.038s
  Time for precision adjustment:     18.848s
  Time for transfer relation:         3.571s
  Time for merge operator:            0.187s
  Time for stop operator:             0.066s
  Time for adding to reached set:     0.118s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  80 (count: 12, min: 3, max: 7, avg: 6.67)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.208s
  Counterexample analysis:                             3.128s (Max:     0.583s, Calls: 12)
    Refinement sat check:                              2.881s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.005s
  ARG update:                                          0.058s

Length of refined path (in blocks):                      25 (count: 12, min: 2, max: 3, avg: 2.08)
Number of affected states:                                3 (count: 12, min: 0, max: 2, avg: 0.25)
Length (states) of path with itp 'true':                 10 (count: 12, min: 0, max: 1, avg: 0.83)
Length (states) of path with itp non-trivial itp:         3 (count: 12, min: 0, max: 2, avg: 0.25)
Length (states) of path with itp 'false':                11 (count: 12, min: 0, max: 1, avg: 0.92)
Different non-trivial interpolants along paths:           1 (count: 12, min: 0, max: 1, avg: 0.08)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 2961
Max. size of reached set after ref.:  2484
Avg. size of reached set before ref.: 1514.50
Avg. size of reached set after ref.:  1016.58

Total time for CEGAR algorithm:      26.371s
Time for refinements:                 3.319s
Average time for refinement:          0.276s
Max time for refinement:              0.602s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          341
  Total lines:            548
  Line coverage:          0.622
  Visited conditions:     135
  Total conditions:       334
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             165
  Number of reached locations:   157 (13%)
    Avg states per location:     1
    Max states per location:     2 (at node N613)
  Number of reached functions:   1 (4%)
  Number of partitions:          164
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N613 (before line 1229), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          3.933s
  Time for loading CPAs:          0.757s
  Time for loading parser:        0.706s
  Time for CFA construction:      2.325s
    Time for parsing file(s):     0.663s
    Time for AST to CFA:          0.792s
    Time for CFA sanity check:    0.164s
    Time for post-processing:     0.543s
      Time for var class.:        0.261s
Time for Analysis:               26.372s
CPU time for analysis:           26.360s
Total time for CPAchecker:       30.318s
Total CPU time for CPAchecker:   30.310s
Time for statistics:              0.057s

Time for Garbage Collector:       0.202s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 63MB (    60 MiB) max;     42MB (    40 MiB) avg;     66MB (    63 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8084MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
