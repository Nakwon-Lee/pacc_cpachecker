scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kj83clr_/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5311 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5160 (97%)
  Because of loop head:            147 (3%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         4 (0%)
  Times precision was empty:       5255 (99%)
  Times precision was {false}:     28 (1%)
  Times result was cached:         7 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      21 (0%)
  Times result was 'false':        15 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         8835
  BDD entailment checks:           1491
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          3
Number of abstraction locations:          5
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         65
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          44 (68%)
Number of preds handled by boolean abs:   21 (32%)
  Total number of models for allsat:      31
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.48

Time for post operator:                  8.914s
  Time for path formula creation:        8.727s
Time for strengthen operator:            0.130s
Time for prec operator:                  8.662s
  Time for abstraction:                  8.384s (Max:     0.979s, Count: 5311)
    Boolean abstraction:                 1.703s
    Solving time:                        6.324s (Max:     0.834s)
    Model enumeration time:              0.440s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.421s
Time for coverage check:                 0.049s
  Time for BDD entailment checks:        0.041s
Total time for SMT solver (w/o itp):     6.764s

Number of path formula cache hits:   12937 (27%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.360s

Total number of created targets for pointer analysis: 93936
   Number of created targets for uf: *signed_int is 861
   Number of created targets for uf: *unsigned_char is 463
   Number of created targets for uf: *(unsigned_char)* is 49
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 11


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          46 (count: 7031, min: 0, max: 15, avg: 0.01)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.300s
Automaton transfers with branching:                0
Automaton transfer successors:                        45136 (count: 45136, min: 1, max: 1, avg: 1.00) [1 x 45136]

CPA algorithm statistics
------------------------
Number of iterations:            30031
Max size of waitlist:            99
Average size of waitlist:        47
Number of computed successors:   35315
Max successors for one state:    2
Number of times merged:          3672
Number of times stopped:         5151
Number of times breaked:         4

Total time for CPA algorithm:        22.578s (Max:     6.304s)
  Time for choose from waitlist:      0.105s
  Time for precision adjustment:      9.421s
  Time for transfer relation:        11.089s
  Time for merge operator:            0.770s
  Time for stop operator:             0.325s
  Time for adding to reached set:     0.284s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   4
Avg. length of target path (in blocks):                  59 (count: 4, min: 11, max: 17, avg: 14.75)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.557s
  Counterexample analysis:                             3.351s (Max:     1.011s, Calls: 4)
    Refinement sat check:                              3.087s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.003s
  ARG update:                                          0.188s

Length of refined path (in blocks):                      16 (count: 4, min: 2, max: 7, avg: 4.00)
Number of affected states:                                4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'true':                  8 (count: 4, min: 0, max: 5, avg: 2.00)
Length (states) of path with itp non-trivial itp:         4 (count: 4, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp 'false':                 4 (count: 4, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 4, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 4, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                4
Number of successful refinements:     4
Number of failed refinements:         0
Max. size of reached set before ref.: 9699
Max. size of reached set after ref.:  4388
Avg. size of reached set before ref.: 9374.75
Avg. size of reached set after ref.:  3283.00

Total time for CEGAR algorithm:      26.323s
Time for refinements:                 3.730s
Average time for refinement:          0.932s
Max time for refinement:              1.111s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          462
  Total lines:            548
  Line coverage:          0.843
  Visited conditions:     271
  Total conditions:       334
  Condition coverage:     0.811

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             5781
  Number of reached locations:   438 (38%)
    Avg states per location:     13
    Max states per location:     280 (at node N9)
  Number of reached functions:   13 (57%)
  Number of partitions:          5777
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N613 (before line 1229), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        39

Time for analysis setup:          3.954s
  Time for loading CPAs:          0.765s
  Time for loading parser:        0.654s
  Time for CFA construction:      2.382s
    Time for parsing file(s):     0.682s
    Time for AST to CFA:          0.849s
    Time for CFA sanity check:    0.160s
    Time for post-processing:     0.482s
      Time for var class.:        0.214s
Time for Analysis:               26.323s
CPU time for analysis:           26.320s
Total time for CPAchecker:       30.281s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.203s

Time for Garbage Collector:       0.562s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 81MB (    77 MiB) max;     50MB (    48 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8102MB (  7727 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
