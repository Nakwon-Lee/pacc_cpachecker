scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l5785scb/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            12038 (11% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10947 (91%)
  Because of loop head:            1011 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         80 (1%)
  Times precision was empty:       10899 (91%)
  Times precision was {false}:     154 (1%)
  Times result was cached:         137 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      848 (7%)
  Times result was 'false':        453 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         20673
  BDD entailment checks:           4747
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          18
Number of abstraction locations:          9
Max number of predicates per location:    14
Avg number of predicates per location:    4
Total predicates per abstraction:         5442
Max number of predicates per abstraction: 14
Avg number of predicates per abstraction: 5.43
Number of irrelevant predicates:          1067 (20%)
Number of preds handled by boolean abs:   4369 (80%)
  Total number of models for allsat:      2091
  Max number of models for allsat:        13
  Avg number of models for allsat:        2.47

Time for post operator:                 14.741s
  Time for path formula creation:       14.594s
Time for strengthen operator:            0.205s
Time for prec operator:                845.078s
  Time for abstraction:                844.656s (Max:   120.950s, Count: 12038)
    Boolean abstraction:               812.851s
    Solving time:                       72.521s (Max:     3.561s)
    Model enumeration time:            761.219s
    Time for BDD construction:           0.177s (Max:     0.008s)
Time for merge operator:                 0.563s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):   833.741s

Number of path formula cache hits:   28209 (26%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    14.037s

Total number of created targets for pointer analysis: 345807
   Number of created targets for uf: *signed_int is 4817
   Number of created targets for uf: *unsigned_char is 2267
   Number of created targets for uf: *(unsigned_char)* is 565
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 57


Number of BDD nodes:                               3649
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3455 (count: 22482, min: 0, max: 407, avg: 0.15)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.465s
Automaton transfers with branching:                0
Automaton transfer successors:                       105666 (count: 105666, min: 1, max: 1, avg: 1.00) [1 x 105666]

CPA algorithm statistics
------------------------
Number of iterations:            71754
Max size of waitlist:            66
Average size of waitlist:        16
Number of computed successors:   83539
Max successors for one state:    2
Number of times merged:          7963
Number of times stopped:         10980
Number of times breaked:         80

Total time for CPA algorithm:       865.708s (Max:   160.018s)
  Time for choose from waitlist:      0.126s
  Time for precision adjustment:    846.038s
  Time for transfer relation:        17.507s
  Time for merge operator:            0.830s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.214s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   80
Avg. length of target path (in blocks):                1865 (count: 80, min: 3, max: 37, avg: 23.31)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  30.386s
  Counterexample analysis:                            30.052s (Max:     1.027s, Calls: 80)
    Refinement sat check:                             27.774s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.027s
  ARG update:                                          0.236s

Length of refined path (in blocks):                    1316 (count: 80, min: 2, max: 32, avg: 16.45)
Number of affected states:                              176 (count: 80, min: 0, max: 12, avg: 2.20)
Length (states) of path with itp 'true':               1060 (count: 80, min: 0, max: 31, avg: 13.25)
Length (states) of path with itp non-trivial itp:       176 (count: 80, min: 0, max: 12, avg: 2.20)
Length (states) of path with itp 'false':                79 (count: 80, min: 0, max: 1, avg: 0.99)
Different non-trivial interpolants along paths:         138 (count: 80, min: 0, max: 11, avg: 1.73)
Equal non-trivial interpolants along paths:               8 (count: 80, min: 0, max: 8, avg: 0.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                80
Number of successful refinements:     80
Number of failed refinements:         0
Max. size of reached set before ref.: 3061
Max. size of reached set after ref.:  1597
Avg. size of reached set before ref.: 1744.31
Avg. size of reached set after ref.:  846.65

Total time for CEGAR algorithm:     896.393s
Time for refinements:                30.617s
Average time for refinement:          0.382s
Max time for refinement:              1.036s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          341
  Total lines:            548
  Line coverage:          0.622
  Visited conditions:     135
  Total conditions:       334
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             293
  Number of reached locations:   157 (13%)
    Avg states per location:     1
    Max states per location:     13 (at node N614)
  Number of reached functions:   1 (4%)
  Number of partitions:          265
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          3.908s
  Time for loading CPAs:          0.750s
  Time for loading parser:        0.648s
  Time for CFA construction:      2.348s
    Time for parsing file(s):     0.659s
    Time for AST to CFA:          0.832s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.545s
      Time for var class.:        0.257s
Time for Analysis:              896.394s
CPU time for analysis:          896.280s
Total time for CPAchecker:      900.311s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.078s

Time for Garbage Collector:       1.224s (in 143 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 86MB (    82 MiB) max;     67MB (    64 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     37MB (    36 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8377MB (  7989 MiB) max;   8271MB (  7888 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
