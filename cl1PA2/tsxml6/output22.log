scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ch_oe8ln/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            371 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  322 (87%)
  Because of loop head:            40 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         9 (2%)
  Times precision was empty:       278 (75%)
  Times precision was {false}:     31 (8%)
  Times result was cached:         24 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38 (10%)
  Times result was 'false':        22 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         381
  BDD entailment checks:           29
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          5
Number of abstraction locations:          9
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         101
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.46
Number of irrelevant predicates:          52 (51%)
Number of preds handled by boolean abs:   39 (39%)
  Total number of models for allsat:      58
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.53

Time for post operator:                  3.521s
  Time for path formula creation:        3.469s
Time for strengthen operator:            0.028s
Time for prec operator:                 17.875s
  Time for abstraction:                 17.769s (Max:     2.222s, Count: 371)
    Boolean abstraction:                12.078s
    Solving time:                       15.339s (Max:     2.170s)
    Model enumeration time:              0.529s
    Time for BDD construction:           0.018s (Max:     0.009s)
Time for merge operator:                 0.122s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    15.868s

Number of path formula cache hits:   1508 (23%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.364s

Total number of created targets for pointer analysis: 35316
   Number of created targets for uf: *signed_int is 689
   Number of created targets for uf: *unsigned_char is 573
   Number of created targets for uf: *(unsigned_char)* is 49
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 9


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          73 (count: 716, min: 0, max: 16, avg: 0.10)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.106s
Automaton transfers with branching:                0
Automaton transfer successors:                         6574 (count: 6574, min: 1, max: 1, avg: 1.00) [1 x 6574]

CPA algorithm statistics
------------------------
Number of iterations:            4949
Max size of waitlist:            90
Average size of waitlist:        36
Number of computed successors:   5291
Max successors for one state:    2
Number of times merged:          176
Number of times stopped:         195
Number of times breaked:         9

Total time for CPA algorithm:        22.507s (Max:    11.450s)
  Time for choose from waitlist:      0.008s
  Time for precision adjustment:     18.097s
  Time for transfer relation:         4.029s
  Time for merge operator:            0.159s
  Time for stop operator:             0.030s
  Time for adding to reached set:     0.074s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  74 (count: 9, min: 3, max: 13, avg: 8.22)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.203s
  Counterexample analysis:                             3.133s (Max:     0.523s, Calls: 9)
    Refinement sat check:                              2.888s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.004s
  ARG update:                                          0.043s

Length of refined path (in blocks):                      27 (count: 9, min: 2, max: 7, avg: 3.00)
Number of affected states:                                6 (count: 9, min: 0, max: 2, avg: 0.67)
Length (states) of path with itp 'true':                 12 (count: 9, min: 0, max: 5, avg: 1.33)
Length (states) of path with itp non-trivial itp:         6 (count: 9, min: 0, max: 2, avg: 0.67)
Length (states) of path with itp 'false':                 8 (count: 9, min: 0, max: 1, avg: 0.89)
Different non-trivial interpolants along paths:           1 (count: 9, min: 0, max: 1, avg: 0.11)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 1372
Max. size of reached set after ref.:  725
Avg. size of reached set before ref.: 822.89
Avg. size of reached set after ref.:  277.00

Total time for CEGAR algorithm:      25.774s
Time for refinements:                 3.257s
Average time for refinement:          0.361s
Max time for refinement:              0.561s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          340
  Total lines:            548
  Line coverage:          0.620
  Visited conditions:     133
  Total conditions:       334
  Condition coverage:     0.398

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             162
  Number of reached locations:   152 (13%)
    Avg states per location:     1
    Max states per location:     2 (at node N624)
  Number of reached functions:   1 (4%)
  Number of partitions:          160
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.023s
  Time for loading CPAs:          0.769s
  Time for loading parser:        0.712s
  Time for CFA construction:      2.366s
    Time for parsing file(s):     0.691s
    Time for AST to CFA:          0.788s
    Time for CFA sanity check:    0.133s
    Time for post-processing:     0.575s
      Time for var class.:        0.251s
Time for Analysis:               25.774s
CPU time for analysis:           25.770s
Total time for CPAchecker:       29.801s
Total CPU time for CPAchecker:   29.790s
Time for statistics:              0.070s

Time for Garbage Collector:       0.187s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    36 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     31MB (    30 MiB) avg;     35MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8153MB (  7775 MiB) max;   8101MB (  7726 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
