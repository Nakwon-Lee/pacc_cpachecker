scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_s_rj682x/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            289 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  146 (51%)
  Because of loop head:            132 (46%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (4%)
  Times precision was empty:       142 (49%)
  Times precision was {false}:     29 (10%)
  Times result was cached:         9 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      109 (38%)
  Times result was 'false':        41 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         273
  BDD entailment checks:           117
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          7
Number of abstraction locations:          6
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         311
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.25
Number of irrelevant predicates:          118 (38%)
Number of preds handled by boolean abs:   193 (62%)
  Total number of models for allsat:      163
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.50

Time for post operator:                  4.479s
  Time for path formula creation:        4.439s
Time for strengthen operator:            0.028s
Time for prec operator:                 15.571s
  Time for abstraction:                 15.531s (Max:     2.155s, Count: 289)
    Boolean abstraction:                13.914s
    Solving time:                       10.409s (Max:     2.094s)
    Model enumeration time:              3.652s
    Time for BDD construction:           0.022s (Max:     0.001s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.015s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):    14.065s

Number of path formula cache hits:   468 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.376s

Total number of created targets for pointer analysis: 93994
   Number of created targets for uf: *signed_int is 1893
   Number of created targets for uf: *unsigned_char is 463
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 23


Number of BDD nodes:                               238
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         219 (count: 1098, min: 0, max: 60, avg: 0.20)
Time for BDD node cleanup:                             0.006s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.117s
Automaton transfers with branching:                0
Automaton transfer successors:                         4939 (count: 4939, min: 1, max: 1, avg: 1.00) [1 x 4939]

CPA algorithm statistics
------------------------
Number of iterations:            3276
Max size of waitlist:            68
Average size of waitlist:        32
Number of computed successors:   3525
Max successors for one state:    2
Number of times merged:          78
Number of times stopped:         113
Number of times breaked:         11

Total time for CPA algorithm:        21.073s (Max:     4.115s)
  Time for choose from waitlist:      0.027s
  Time for precision adjustment:     15.780s
  Time for transfer relation:         5.006s
  Time for merge operator:            0.090s
  Time for stop operator:             0.034s
  Time for adding to reached set:     0.058s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 158 (count: 11, min: 3, max: 20, avg: 14.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.192s
  Counterexample analysis:                             5.115s (Max:     0.715s, Calls: 11)
    Refinement sat check:                              4.703s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.014s
  Precision update:                                    0.003s
  ARG update:                                          0.042s

Length of refined path (in blocks):                      71 (count: 11, min: 3, max: 13, avg: 6.45)
Number of affected states:                               24 (count: 11, min: 1, max: 4, avg: 2.18)
Length (states) of path with itp 'true':                 36 (count: 11, min: 0, max: 9, avg: 3.27)
Length (states) of path with itp non-trivial itp:        24 (count: 11, min: 1, max: 4, avg: 2.18)
Length (states) of path with itp 'false':                10 (count: 11, min: 0, max: 1, avg: 0.91)
Different non-trivial interpolants along paths:          13 (count: 11, min: 0, max: 3, avg: 1.18)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 489
Max. size of reached set after ref.:  189
Avg. size of reached set before ref.: 439.55
Avg. size of reached set after ref.:  147.55

Total time for CEGAR algorithm:      26.316s
Time for refinements:                 5.239s
Average time for refinement:          0.476s
Max time for refinement:              0.719s

Code Coverage
-----------------------------
  Function coverage:      0.174
  Visited lines:          337
  Total lines:            548
  Line coverage:          0.615
  Visited conditions:     131
  Total conditions:       334
  Condition coverage:     0.392

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             159
  Number of reached locations:   150 (13%)
    Avg states per location:     1
    Max states per location:     3 (at node N519)
  Number of reached functions:   4 (17%)
  Number of partitions:          158
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        8

Time for analysis setup:          3.976s
  Time for loading CPAs:          0.761s
  Time for loading parser:        0.659s
  Time for CFA construction:      2.412s
    Time for parsing file(s):     0.692s
    Time for AST to CFA:          0.846s
    Time for CFA sanity check:    0.139s
    Time for post-processing:     0.553s
      Time for var class.:        0.241s
Time for Analysis:               26.316s
CPU time for analysis:           26.320s
Total time for CPAchecker:       30.296s
Total CPU time for CPAchecker:   30.290s
Time for statistics:              0.064s

Time for Garbage Collector:       0.188s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     39MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8113MB (  7737 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
