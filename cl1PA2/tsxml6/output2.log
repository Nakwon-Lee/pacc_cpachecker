scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1r131642/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            284 (6% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  146 (51%)
  Because of loop head:            127 (45%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         11 (4%)
  Times precision was empty:       142 (50%)
  Times precision was {false}:     29 (10%)
  Times result was cached:         9 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      104 (37%)
  Times result was 'false':        39 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         272
  BDD entailment checks:           116
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          6
Number of abstraction locations:          6
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         291
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 2.19
Number of irrelevant predicates:          116 (40%)
Number of preds handled by boolean abs:   175 (60%)
  Total number of models for allsat:      160
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.54

Time for post operator:                  4.542s
  Time for path formula creation:        4.507s
Time for strengthen operator:            0.057s
Time for prec operator:                 15.475s
  Time for abstraction:                 15.437s (Max:     2.141s, Count: 284)
    Boolean abstraction:                13.660s
    Solving time:                       10.470s (Max:     2.070s)
    Model enumeration time:              3.340s
    Time for BDD construction:           0.015s (Max:     0.001s)
Time for merge operator:                 0.095s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):    13.810s

Number of path formula cache hits:   451 (9%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.454s

Total number of created targets for pointer analysis: 93994
   Number of created targets for uf: *signed_int is 1893
   Number of created targets for uf: *unsigned_char is 463
   Number of created targets for uf: *(unsigned_char)* is 133
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 23


Number of BDD nodes:                               228
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         219 (count: 1063, min: 0, max: 60, avg: 0.21)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.133s
Automaton transfers with branching:                0
Automaton transfer successors:                         4924 (count: 4924, min: 1, max: 1, avg: 1.00) [1 x 4924]

CPA algorithm statistics
------------------------
Number of iterations:            3265
Max size of waitlist:            68
Average size of waitlist:        32
Number of computed successors:   3512
Max successors for one state:    2
Number of times merged:          78
Number of times stopped:         113
Number of times breaked:         11

Total time for CPA algorithm:        21.077s (Max:     3.996s)
  Time for choose from waitlist:      0.026s
  Time for precision adjustment:     15.664s
  Time for transfer relation:         5.082s
  Time for merge operator:            0.114s
  Time for stop operator:             0.047s
  Time for adding to reached set:     0.043s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                 158 (count: 11, min: 3, max: 20, avg: 14.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.605s
  Counterexample analysis:                             4.548s (Max:     0.498s, Calls: 11)
    Refinement sat check:                              4.169s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.003s
  ARG update:                                          0.032s

Length of refined path (in blocks):                      65 (count: 10, min: 3, max: 13, avg: 6.50)
Number of affected states:                               20 (count: 10, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                 35 (count: 10, min: 0, max: 9, avg: 3.50)
Length (states) of path with itp non-trivial itp:        20 (count: 10, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 9 (count: 10, min: 0, max: 1, avg: 0.90)
Different non-trivial interpolants along paths:          10 (count: 10, min: 0, max: 2, avg: 1.00)
Equal non-trivial interpolants along paths:               0 (count: 10, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     10
Number of failed refinements:         0
Max. size of reached set before ref.: 489
Max. size of reached set after ref.:  189
Avg. size of reached set before ref.: 439.55
Avg. size of reached set after ref.:  147.40

Total time for CEGAR algorithm:      25.730s
Time for refinements:                 4.650s
Average time for refinement:          0.422s
Max time for refinement:              0.503s

Code Coverage
-----------------------------
  Function coverage:      0.261
  Visited lines:          353
  Total lines:            548
  Line coverage:          0.644
  Visited conditions:     145
  Total conditions:       334
  Condition coverage:     0.434

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             489
  Number of reached locations:   184 (16%)
    Avg states per location:     2
    Max states per location:     6 (at node N519)
  Number of reached functions:   6 (26%)
  Number of partitions:          479
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       1
  Size of final wait list        16

Time for analysis setup:          4.081s
  Time for loading CPAs:          0.798s
  Time for loading parser:        0.745s
  Time for CFA construction:      2.422s
    Time for parsing file(s):     0.727s
    Time for AST to CFA:          0.789s
    Time for CFA sanity check:    0.152s
    Time for post-processing:     0.556s
      Time for var class.:        0.260s
Time for Analysis:               25.731s
CPU time for analysis:           25.730s
Total time for CPAchecker:       29.819s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.075s

Time for Garbage Collector:       0.185s (in 20 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     40MB (    38 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    30 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    32 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8110MB (  7734 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
