scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2wtw85ra/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            897 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  525 (59%)
  Because of loop head:            340 (38%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (4%)
  Times precision was empty:       387 (43%)
  Times precision was {false}:     96 (11%)
  Times result was cached:         58 (6%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      356 (40%)
  Times result was 'false':        188 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         1233
  BDD entailment checks:           739
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          10
Number of abstraction locations:          9
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         1494
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 3.31
Number of irrelevant predicates:          489 (33%)
Number of preds handled by boolean abs:   998 (67%)
  Total number of models for allsat:      820
  Max number of models for allsat:        10
  Avg number of models for allsat:        2.30

Time for post operator:                  7.134s
  Time for path formula creation:        7.091s
Time for strengthen operator:            0.073s
Time for prec operator:                876.097s
  Time for abstraction:                876.010s (Max:   446.570s, Count: 897)
    Boolean abstraction:               853.186s
    Solving time:                       51.592s (Max:     3.983s)
    Model enumeration time:            816.879s
    Time for BDD construction:           0.064s (Max:     0.003s)
Time for merge operator:                 0.202s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):   868.471s

Number of path formula cache hits:   2483 (20%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.956s

Total number of created targets for pointer analysis: 165920
   Number of created targets for uf: *signed_int is 3269
   Number of created targets for uf: *unsigned_char is 991
   Number of created targets for uf: *(unsigned_char)* is 421
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 39


Number of BDD nodes:                               400
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         770 (count: 3886, min: 0, max: 111, avg: 0.20)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.150s
Automaton transfers with branching:                0
Automaton transfer successors:                        11984 (count: 11984, min: 1, max: 1, avg: 1.00) [1 x 11984]

CPA algorithm statistics
------------------------
Number of iterations:            8620
Max size of waitlist:            73
Average size of waitlist:        26
Number of computed successors:   9364
Max successors for one state:    2
Number of times merged:          247
Number of times stopped:         313
Number of times breaked:         32

Total time for CPA algorithm:       884.830s (Max:   454.936s)
  Time for choose from waitlist:      0.044s
  Time for precision adjustment:    876.319s
  Time for transfer relation:         7.840s
  Time for merge operator:            0.234s
  Time for stop operator:             0.079s
  Time for adding to reached set:     0.077s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   32
Avg. length of target path (in blocks):                 449 (count: 32, min: 3, max: 21, avg: 14.03)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.037s
  Counterexample analysis:                            10.893s (Max:     1.085s, Calls: 32)
    Refinement sat check:                              9.986s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.034s
  ARG update:                                          0.061s

Length of refined path (in blocks):                     256 (count: 32, min: 2, max: 16, avg: 8.00)
Number of affected states:                               40 (count: 32, min: 0, max: 11, avg: 1.25)
Length (states) of path with itp 'true':                184 (count: 32, min: 0, max: 15, avg: 5.75)
Length (states) of path with itp non-trivial itp:        40 (count: 32, min: 0, max: 11, avg: 1.25)
Length (states) of path with itp 'false':                31 (count: 32, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:          18 (count: 32, min: 0, max: 3, avg: 0.56)
Equal non-trivial interpolants along paths:               8 (count: 32, min: 0, max: 8, avg: 0.25)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                32
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 724
Max. size of reached set after ref.:  574
Avg. size of reached set before ref.: 596.91
Avg. size of reached set after ref.:  334.34

Total time for CEGAR algorithm:     895.987s
Time for refinements:                11.146s
Average time for refinement:          0.348s
Max time for refinement:              1.095s

Code Coverage
-----------------------------
  Function coverage:      0.174
  Visited lines:          341
  Total lines:            548
  Line coverage:          0.622
  Visited conditions:     135
  Total conditions:       334
  Condition coverage:     0.404

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             461
  Number of reached locations:   160 (14%)
    Avg states per location:     2
    Max states per location:     10 (at node N614)
  Number of reached functions:   4 (17%)
  Number of partitions:          434
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        13

Time for analysis setup:          4.271s
  Time for loading CPAs:          0.852s
  Time for loading parser:        0.692s
  Time for CFA construction:      2.552s
    Time for parsing file(s):     0.733s
    Time for AST to CFA:          0.916s
    Time for CFA sanity check:    0.165s
    Time for post-processing:     0.560s
      Time for var class.:        0.229s
Time for Analysis:              895.987s
CPU time for analysis:          895.880s
Total time for CPAchecker:      900.263s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.071s

Time for Garbage Collector:       0.454s (in 67 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 64MB (    61 MiB) max;     45MB (    43 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    35 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8425MB (  8035 MiB) max;   8294MB (  7909 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
