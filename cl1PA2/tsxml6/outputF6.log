scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_queue_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z1tzs94o/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 1046: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1046: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1051: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1062: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1067: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1090: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1143: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1164: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1166: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1168: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1183: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1200: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1202: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1315: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1321: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2083 (7% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1390 (67%)
  Because of loop head:            628 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         65 (3%)
  Times precision was empty:       1088 (52%)
  Times precision was {false}:     132 (6%)
  Times result was cached:         156 (7%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      707 (34%)
  Times result was 'false':        367 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         2932
  BDD entailment checks:           1500
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       131
Number of predicates discovered:          16
Number of abstraction locations:          9
Max number of predicates per location:    11
Avg number of predicates per location:    4
Total predicates per abstraction:         3894
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 4.64
Number of irrelevant predicates:          858 (22%)
Number of preds handled by boolean abs:   2998 (77%)
  Total number of models for allsat:      1667
  Max number of models for allsat:        10
  Avg number of models for allsat:        2.36

Time for post operator:                  8.712s
  Time for path formula creation:        8.637s
Time for strengthen operator:            0.072s
Time for prec operator:                862.467s
  Time for abstraction:                862.284s (Max:   322.677s, Count: 2083)
    Boolean abstraction:               835.523s
    Solving time:                       95.332s (Max:     2.719s)
    Model enumeration time:            757.331s
    Time for BDD construction:           0.158s (Max:     0.018s)
Time for merge operator:                 0.225s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):   852.664s

Number of path formula cache hits:   4972 (18%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.469s

Total number of created targets for pointer analysis: 205542
   Number of created targets for uf: *signed_int is 3957
   Number of created targets for uf: *unsigned_char is 2751
   Number of created targets for uf: *(unsigned_char)* is 433
   Number of created targets for uf: *_Bool is 7
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 47


Number of BDD nodes:                               2120
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2215 (count: 8092, min: 0, max: 254, avg: 0.27)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.170s
Automaton transfers with branching:                0
Automaton transfer successors:                        27933 (count: 27933, min: 1, max: 1, avg: 1.00) [1 x 27933]

CPA algorithm statistics
------------------------
Number of iterations:            22300
Max size of waitlist:            90
Average size of waitlist:        30
Number of computed successors:   23921
Max successors for one state:    2
Number of times merged:          716
Number of times stopped:         787
Number of times breaked:         65

Total time for CPA algorithm:       873.505s (Max:   331.163s)
  Time for choose from waitlist:      0.067s
  Time for precision adjustment:    862.837s
  Time for transfer relation:         9.757s
  Time for merge operator:            0.270s
  Time for stop operator:             0.112s
  Time for adding to reached set:     0.167s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   65
Avg. length of target path (in blocks):                1340 (count: 65, min: 3, max: 32, avg: 20.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  22.249s
  Counterexample analysis:                            22.029s (Max:     1.051s, Calls: 65)
    Refinement sat check:                             20.393s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.016s
  ARG update:                                          0.137s

Length of refined path (in blocks):                     902 (count: 65, min: 2, max: 27, avg: 13.88)
Number of affected states:                              120 (count: 65, min: 0, max: 11, avg: 1.85)
Length (states) of path with itp 'true':                717 (count: 65, min: 0, max: 26, avg: 11.03)
Length (states) of path with itp non-trivial itp:       120 (count: 65, min: 0, max: 11, avg: 1.85)
Length (states) of path with itp 'false':                64 (count: 65, min: 0, max: 1, avg: 0.98)
Different non-trivial interpolants along paths:          87 (count: 65, min: 0, max: 9, avg: 1.34)
Equal non-trivial interpolants along paths:               8 (count: 65, min: 0, max: 8, avg: 0.12)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                65
Number of successful refinements:     65
Number of failed refinements:         0
Max. size of reached set before ref.: 1372
Max. size of reached set after ref.:  846
Avg. size of reached set before ref.: 817.66
Avg. size of reached set after ref.:  470.28

Total time for CEGAR algorithm:     895.946s
Time for refinements:                22.423s
Average time for refinement:          0.344s
Max time for refinement:              1.061s

Code Coverage
-----------------------------
  Function coverage:      0.043
  Visited lines:          337
  Total lines:            548
  Line coverage:          0.615
  Visited conditions:     131
  Total conditions:       334
  Condition coverage:     0.392

CPAchecker general statistics
-----------------------------
Number of program locations:     1166
Number of CFA edges:             1348
Number of relevant variables:    79
Number of functions:             23
Number of loops:                 8
Size of reached set:             187
  Number of reached locations:   147 (13%)
    Avg states per location:     1
    Max states per location:     9 (at node N624)
  Number of reached functions:   1 (4%)
  Number of partitions:          179
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N624 (before line 1236), Function main called from node N601, stack depth 1 [4bd1f8dd], stack [main]])
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.341s
  Time for loading CPAs:          0.809s
  Time for loading parser:        0.876s
  Time for CFA construction:      2.513s
    Time for parsing file(s):     0.761s
    Time for AST to CFA:          0.867s
    Time for CFA sanity check:    0.148s
    Time for post-processing:     0.506s
      Time for var class.:        0.208s
Time for Analysis:              895.946s
CPU time for analysis:          895.840s
Total time for CPAchecker:      900.292s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.079s

Time for Garbage Collector:       0.651s (in 97 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    64 MiB) max;     42MB (    40 MiB) avg;     70MB (    66 MiB) peak
Used non-heap memory:             37MB (    36 MiB) max;     37MB (    35 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8380MB (  7991 MiB) max;   8269MB (  7886 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
