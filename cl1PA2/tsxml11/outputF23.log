scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_lamport_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_b30p5cqr/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 809: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1013: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1019: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1513 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  990 (65%)
  Because of loop head:            451 (30%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         72 (5%)
  Times precision was empty:       131 (9%)
  Times precision was {false}:     29 (2%)
  Times result was cached:         598 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      755 (50%)
  Times result was 'false':        451 (30%)
Number of strengthen sat checks:   0
Number of coverage checks:         3318
  BDD entailment checks:           1586
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          44
Number of abstraction locations:          20
Max number of predicates per location:    27
Avg number of predicates per location:    11
Total predicates per abstraction:         10025
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 12.79
Number of irrelevant predicates:          1213 (12%)
Number of preds handled by boolean abs:   5593 (56%)
  Total number of models for allsat:      5009
  Max number of models for allsat:        404
  Avg number of models for allsat:        6.63

Time for post operator:                  2.530s
  Time for path formula creation:        2.489s
Time for strengthen operator:            0.058s
Time for prec operator:                 17.104s
  Time for abstraction:                 16.962s (Max:     0.346s, Count: 1513)
    Boolean abstraction:                12.762s
    Solving time:                        7.532s (Max:     0.212s)
    Model enumeration time:              4.643s
    Time for BDD construction:           0.402s (Max:     0.048s)
Time for merge operator:                 0.189s
Time for coverage check:                 0.026s
  Time for BDD entailment checks:        0.025s
Total time for SMT solver (w/o itp):    12.175s

Number of path formula cache hits:   14823 (73%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.442s

Total number of created targets for pointer analysis: 12831
   Number of created targets for uf: *signed_int is 233
   Number of created targets for uf: *unsigned_char is 546
   Number of created targets for uf: *(unsigned_char)* is 145
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 17


Number of BDD nodes:                               84318
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10487 (count: 10407, min: 0, max: 2112, avg: 1.01)
Time for BDD node cleanup:                             0.015s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.209s
Automaton transfers with branching:                0
Automaton transfer successors:                        18436 (count: 18436, min: 1, max: 1, avg: 1.00) [1 x 18436]

CPA algorithm statistics
------------------------
Number of iterations:            12727
Max size of waitlist:            30
Average size of waitlist:        8
Number of computed successors:   14284
Max successors for one state:    2
Number of times merged:          866
Number of times stopped:         1017
Number of times breaked:         22

Total time for CPA algorithm:        21.648s (Max:     2.904s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:     17.403s
  Time for transfer relation:         3.531s
  Time for merge operator:            0.258s
  Time for stop operator:             0.102s
  Time for adding to reached set:     0.103s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   22
Avg. length of target path (in blocks):                 637 (count: 22, min: 3, max: 62, avg: 28.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.815s
  Counterexample analysis:                             7.044s (Max:     1.405s, Calls: 22)
    Refinement sat check:                              6.003s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          1.604s
  Predicate creation:                                  0.060s
  Precision update:                                    0.008s
  ARG update:                                          0.082s

Length of refined path (in blocks):                     520 (count: 21, min: 2, max: 62, avg: 24.76)
Number of affected states:                              480 (count: 21, min: 1, max: 61, avg: 22.86)
Length (states) of path with itp 'true':                 19 (count: 21, min: 0, max: 16, avg: 0.90)
Length (states) of path with itp non-trivial itp:       480 (count: 21, min: 1, max: 61, avg: 22.86)
Length (states) of path with itp 'false':                11 (count: 21, min: 0, max: 1, avg: 0.52)
Different non-trivial interpolants along paths:          79 (count: 21, min: 0, max: 18, avg: 3.76)
Equal non-trivial interpolants along paths:             380 (count: 21, min: 0, max: 42, avg: 18.10)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                22
Number of successful refinements:     21
Number of failed refinements:         0
Max. size of reached set before ref.: 1397
Max. size of reached set after ref.:  347
Avg. size of reached set before ref.: 611.18
Avg. size of reached set after ref.:  29.95

Total time for CEGAR algorithm:      30.537s
Time for refinements:                 8.886s
Average time for refinement:          0.403s
Max time for refinement:              3.016s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          275
  Total lines:            413
  Line coverage:          0.666
  Visited conditions:     97
  Total conditions:       266
  Condition coverage:     0.365

CPAchecker general statistics
-----------------------------
Number of program locations:     840
Number of CFA edges:             1002
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 6
Size of reached set:             1397
  Number of reached locations:   151 (18%)
    Avg states per location:     9
    Max states per location:     21 (at node N8)
  Number of reached functions:   6 (33%)
  Number of partitions:          1378
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N554 (before line 971), Function main called from node N532, stack depth 1 [53fd0d10], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.421s
  Time for loading CPAs:          0.676s
  Time for loading parser:        0.707s
  Time for CFA construction:      1.837s
    Time for parsing file(s):     0.516s
    Time for AST to CFA:          0.616s
    Time for CFA sanity check:    0.132s
    Time for post-processing:     0.431s
      Time for var class.:        0.169s
Time for Analysis:               30.537s
CPU time for analysis:           30.530s
Time for analyzing result:        0.000s
Total time for CPAchecker:       33.966s
Total CPU time for CPAchecker:   33.960s
Time for statistics:              0.113s

Time for Garbage Collector:       0.262s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     41MB (    39 MiB) avg;     67MB (    64 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7702 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
