scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_lamport_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gyom__3l/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 809: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1013: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1019: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Warning: Could not replay error path to get a more precise model (build_model: too many iterations) (PredicateCPA:Mathsat5NativeApi.processSolveResult, WARNING)

The satisfying assignment may be imprecise! (PredicateCPA:PathChecker.createCounterexample, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2237 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1665 (74%)
  Because of loop head:            497 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         75 (3%)
  Times precision was empty:       510 (23%)
  Times precision was {false}:     73 (3%)
  Times result was cached:         805 (36%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      849 (38%)
  Times result was 'false':        505 (23%)
Number of strengthen sat checks:   0
Number of coverage checks:         5357
  BDD entailment checks:           2017
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          43
Number of abstraction locations:          20
Max number of predicates per location:    26
Avg number of predicates per location:    11
Total predicates per abstraction:         12540
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 13.60
Number of irrelevant predicates:          2082 (17%)
Number of preds handled by boolean abs:   6552 (52%)
  Total number of models for allsat:      5702
  Max number of models for allsat:        388
  Avg number of models for allsat:        6.72

Time for post operator:                  2.785s
  Time for path formula creation:        2.737s
Time for strengthen operator:            0.114s
Time for prec operator:                 20.449s
  Time for abstraction:                 20.281s (Max:     0.321s, Count: 2237)
    Boolean abstraction:                14.467s
    Solving time:                        9.870s (Max:     0.219s)
    Model enumeration time:              5.022s
    Time for BDD construction:           0.388s (Max:     0.026s)
Time for merge operator:                 0.235s
Time for coverage check:                 0.041s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):    14.892s

Number of path formula cache hits:   21020 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.663s

Total number of created targets for pointer analysis: 16073
   Number of created targets for uf: *signed_int is 262
   Number of created targets for uf: *unsigned_char is 666
   Number of created targets for uf: *(unsigned_char)* is 163
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 19


Number of BDD nodes:                               77547
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       11655 (count: 12416, min: 0, max: 1683, avg: 0.94)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.219s
Automaton transfers with branching:                0
Automaton transfer successors:                        25552 (count: 25552, min: 1, max: 1, avg: 1.00) [1 x 25552]

CPA algorithm statistics
------------------------
Number of iterations:            17365
Max size of waitlist:            30
Average size of waitlist:        8
Number of computed successors:   19880
Max successors for one state:    2
Number of times merged:          1670
Number of times stopped:         1922
Number of times breaked:         24

Total time for CPA algorithm:        25.851s (Max:     3.251s)
  Time for choose from waitlist:      0.069s
  Time for precision adjustment:     20.795s
  Time for transfer relation:         4.038s
  Time for merge operator:            0.367s
  Time for stop operator:             0.148s
  Time for adding to reached set:     0.181s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   24
Avg. length of target path (in blocks):                 668 (count: 24, min: 3, max: 62, avg: 27.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 446.461s
  Counterexample analysis:                           349.636s (Max:   342.505s, Calls: 24)
    Refinement sat check:                            347.093s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                         96.650s
  Predicate creation:                                  0.052s
  Precision update:                                    0.007s
  ARG update:                                          0.098s

Length of refined path (in blocks):                     541 (count: 23, min: 2, max: 62, avg: 23.52)
Number of affected states:                              513 (count: 23, min: 0, max: 61, avg: 22.30)
Length (states) of path with itp 'true':                  5 (count: 23, min: 0, max: 1, avg: 0.22)
Length (states) of path with itp non-trivial itp:       513 (count: 23, min: 0, max: 61, avg: 22.30)
Length (states) of path with itp 'false':                13 (count: 23, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:          82 (count: 23, min: 0, max: 18, avg: 3.57)
Equal non-trivial interpolants along paths:             410 (count: 23, min: 0, max: 42, avg: 17.83)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                24
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 1429
Max. size of reached set after ref.:  336
Avg. size of reached set before ref.: 761.42
Avg. size of reached set after ref.:  35.65

Total time for CEGAR algorithm:     472.397s
Time for refinements:               446.537s
Average time for refinement:         18.605s
Max time for refinement:            439.165s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          275
  Total lines:            413
  Line coverage:          0.666
  Visited conditions:     97
  Total conditions:       266
  Condition coverage:     0.365

CPAchecker general statistics
-----------------------------
Number of program locations:     840
Number of CFA edges:             1002
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 6
Size of reached set:             1429
  Number of reached locations:   151 (18%)
    Avg states per location:     9
    Max states per location:     22 (at node N8)
  Number of reached functions:   6 (33%)
  Number of partitions:          1409
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N554 (before line 971), Function main called from node N532, stack depth 1 [53fd0d10], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.539s
  Time for loading CPAs:          0.749s
  Time for loading parser:        0.628s
  Time for CFA construction:      1.999s
    Time for parsing file(s):     0.568s
    Time for AST to CFA:          0.642s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.490s
      Time for var class.:        0.199s
Time for Analysis:              472.397s
CPU time for analysis:          472.390s
Time for analyzing result:        0.001s
Total time for CPAchecker:      475.941s
Total CPU time for CPAchecker:  475.920s
Time for statistics:              0.125s

Time for Garbage Collector:       0.264s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 61MB (    58 MiB) max;     46MB (    44 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     38MB (    36 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8146MB (  7769 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
