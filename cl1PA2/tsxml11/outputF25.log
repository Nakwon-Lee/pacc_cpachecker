scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_lamport_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jf_u24lw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 809: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 837: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 852: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 853: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 886: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 914: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 920: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 930: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 1013: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 1019: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Warning: Could not replay error path to get a more precise model (build_model: too many iterations) (PredicateCPA:Mathsat5NativeApi.processSolveResult, WARNING)

The satisfying assignment may be imprecise! (PredicateCPA:PathChecker.createCounterexample, WARNING)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2434 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2113 (87%)
  Because of loop head:            290 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         31 (1%)
  Times precision was empty:       1354 (56%)
  Times precision was {false}:     131 (5%)
  Times result was cached:         593 (24%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      356 (15%)
  Times result was 'false':        264 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         5699
  BDD entailment checks:           1365
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       67
Number of predicates discovered:          14
Number of abstraction locations:          15
Max number of predicates per location:    8
Avg number of predicates per location:    2
Total predicates per abstraction:         3467
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 7.12
Number of irrelevant predicates:          1031 (30%)
Number of preds handled by boolean abs:   1125 (32%)
  Total number of models for allsat:      711
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.00

Time for post operator:                  3.352s
  Time for path formula creation:        3.289s
Time for strengthen operator:            0.101s
Time for prec operator:                 11.506s
  Time for abstraction:                 11.309s (Max:     0.196s, Count: 2434)
    Boolean abstraction:                 6.158s
    Solving time:                        6.568s (Max:     0.192s)
    Model enumeration time:              1.368s
    Time for BDD construction:           0.106s (Max:     0.014s)
Time for merge operator:                 0.323s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.033s
Total time for SMT solver (w/o itp):     7.936s

Number of path formula cache hits:   18189 (63%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.221s

Total number of created targets for pointer analysis: 20802
   Number of created targets for uf: *signed_int is 262
   Number of created targets for uf: *unsigned_char is 709
   Number of created targets for uf: *(unsigned_char)* is 163
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 19


Number of BDD nodes:                               1279
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1288 (count: 5838, min: 0, max: 288, avg: 0.22)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.224s
Automaton transfers with branching:                0
Automaton transfer successors:                        26045 (count: 26045, min: 1, max: 1, avg: 1.00) [1 x 26045]

CPA algorithm statistics
------------------------
Number of iterations:            17406
Max size of waitlist:            36
Average size of waitlist:        10
Number of computed successors:   20267
Max successors for one state:    2
Number of times merged:          2167
Number of times stopped:         2549
Number of times breaked:         15

Total time for CPA algorithm:        17.636s (Max:     2.057s)
  Time for choose from waitlist:      0.061s
  Time for precision adjustment:     11.919s
  Time for transfer relation:         4.531s
  Time for merge operator:            0.523s
  Time for stop operator:             0.163s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   15
Avg. length of target path (in blocks):                 296 (count: 15, min: 3, max: 34, avg: 19.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.350s
  Counterexample analysis:                             4.783s (Max:     2.622s, Calls: 15)
    Refinement sat check:                              4.127s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          3.395s
  Predicate creation:                                  0.045s
  Precision update:                                    0.015s
  ARG update:                                          0.095s

Length of refined path (in blocks):                     215 (count: 14, min: 2, max: 30, avg: 15.36)
Number of affected states:                              198 (count: 14, min: 1, max: 29, avg: 14.14)
Length (states) of path with itp 'true':                  3 (count: 14, min: 0, max: 1, avg: 0.21)
Length (states) of path with itp non-trivial itp:       198 (count: 14, min: 1, max: 29, avg: 14.14)
Length (states) of path with itp 'false':                 8 (count: 14, min: 0, max: 1, avg: 0.57)
Different non-trivial interpolants along paths:          16 (count: 14, min: 0, max: 3, avg: 1.14)
Equal non-trivial interpolants along paths:             168 (count: 14, min: 0, max: 27, avg: 12.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                15
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 1692
Max. size of reached set after ref.:  74
Avg. size of reached set before ref.: 1180.67
Avg. size of reached set after ref.:  18.21

Total time for CEGAR algorithm:      26.107s
Time for refinements:                 8.471s
Average time for refinement:          0.564s
Max time for refinement:              6.026s

Code Coverage
-----------------------------
  Function coverage:      0.333
  Visited lines:          275
  Total lines:            413
  Line coverage:          0.666
  Visited conditions:     97
  Total conditions:       266
  Condition coverage:     0.365

CPAchecker general statistics
-----------------------------
Number of program locations:     840
Number of CFA edges:             1002
Number of relevant variables:    54
Number of functions:             18
Number of loops:                 6
Size of reached set:             1692
  Number of reached locations:   151 (18%)
    Avg states per location:     11
    Max states per location:     35 (at node N8)
  Number of reached functions:   6 (33%)
  Number of partitions:          1674
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N554 (before line 971), Function main called from node N532, stack depth 1 [53fd0d10], stack [main]])
  Number of target states:       1
  Size of final wait list        4

Time for analysis setup:          3.489s
  Time for loading CPAs:          0.691s
  Time for loading parser:        0.735s
  Time for CFA construction:      1.922s
    Time for parsing file(s):     0.577s
    Time for AST to CFA:          0.581s
    Time for CFA sanity check:    0.145s
    Time for post-processing:     0.483s
      Time for var class.:        0.201s
Time for Analysis:               26.107s
CPU time for analysis:           26.100s
Time for analyzing result:        0.001s
Total time for CPAchecker:       29.601s
Total CPU time for CPAchecker:   29.590s
Time for statistics:              0.127s

Time for Garbage Collector:       0.258s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     38MB (    37 MiB) avg;     65MB (    62 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     34MB (    32 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8074MB (  7700 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
