scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_dekker_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ygjk5dhh/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 816: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 942: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 948: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1290 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  888 (69%)
  Because of loop head:            377 (29%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         25 (2%)
  Times precision was empty:       249 (19%)
  Times precision was {false}:     69 (5%)
  Times result was cached:         427 (33%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      545 (42%)
  Times result was 'false':        347 (27%)
Number of strengthen sat checks:   0
Number of coverage checks:         3350
  BDD entailment checks:           1380
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          35
Number of abstraction locations:          23
Max number of predicates per location:    18
Avg number of predicates per location:    8
Total predicates per abstraction:         5802
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 9.45
Number of irrelevant predicates:          1026 (18%)
Number of preds handled by boolean abs:   2429 (42%)
  Total number of models for allsat:      1604
  Max number of models for allsat:        96
  Avg number of models for allsat:        2.94

Time for post operator:                  2.554s
  Time for path formula creation:        2.476s
Time for strengthen operator:            0.070s
Time for prec operator:                 11.979s
  Time for abstraction:                 11.823s (Max:     0.295s, Count: 1290)
    Boolean abstraction:                 7.406s
    Solving time:                        6.065s (Max:     0.227s)
    Model enumeration time:              2.171s
    Time for BDD construction:           0.164s (Max:     0.015s)
Time for merge operator:                 0.271s
Time for coverage check:                 0.030s
  Time for BDD entailment checks:        0.029s
Total time for SMT solver (w/o itp):     8.236s

Number of path formula cache hits:   13023 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.482s

Total number of created targets for pointer analysis: 10389
   Number of created targets for uf: *signed_int is 265
   Number of created targets for uf: *unsigned_char is 217
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 13


Number of BDD nodes:                               5133
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3068 (count: 6158, min: 0, max: 587, avg: 0.50)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.168s
Automaton transfers with branching:                0
Automaton transfer successors:                        16767 (count: 16767, min: 1, max: 1, avg: 1.00) [1 x 16767]

CPA algorithm statistics
------------------------
Number of iterations:            11753
Max size of waitlist:            36
Average size of waitlist:        10
Number of computed successors:   13333
Max successors for one state:    2
Number of times merged:          985
Number of times stopped:         1076
Number of times breaked:         17

Total time for CPA algorithm:        16.712s (Max:     1.681s)
  Time for choose from waitlist:      0.054s
  Time for precision adjustment:     12.295s
  Time for transfer relation:         3.521s
  Time for merge operator:            0.398s
  Time for stop operator:             0.118s
  Time for adding to reached set:     0.092s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                 531 (count: 17, min: 15, max: 50, avg: 31.24)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.677s
  Counterexample analysis:                             7.528s (Max:     3.154s, Calls: 17)
    Refinement sat check:                              5.694s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          2.012s
  Predicate creation:                                  0.046s
  Precision update:                                    0.005s
  ARG update:                                          0.071s

Length of refined path (in blocks):                     378 (count: 16, min: 2, max: 50, avg: 23.63)
Number of affected states:                              359 (count: 16, min: 1, max: 49, avg: 22.44)
Length (states) of path with itp 'true':                  3 (count: 16, min: 0, max: 1, avg: 0.19)
Length (states) of path with itp non-trivial itp:       359 (count: 16, min: 1, max: 49, avg: 22.44)
Length (states) of path with itp 'false':                12 (count: 16, min: 0, max: 1, avg: 0.75)
Different non-trivial interpolants along paths:          45 (count: 16, min: 0, max: 12, avg: 2.81)
Equal non-trivial interpolants along paths:             298 (count: 16, min: 0, max: 39, avg: 18.63)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 1231
Max. size of reached set after ref.:  71
Avg. size of reached set before ref.: 715.47
Avg. size of reached set after ref.:  15.75

Total time for CEGAR algorithm:      26.477s
Time for refinements:                 9.757s
Average time for refinement:          0.573s
Max time for refinement:              5.168s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          271
  Total lines:            366
  Line coverage:          0.740
  Visited conditions:     101
  Total conditions:       208
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     744
Number of CFA edges:             857
Number of relevant variables:    53
Number of functions:             18
Number of loops:                 6
Size of reached set:             757
  Number of reached locations:   160 (22%)
    Avg states per location:     4
    Max states per location:     12 (at node N404)
  Number of reached functions:   7 (39%)
  Number of partitions:          740
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N412 (before line 901), Function main called from node N392, stack depth 1 [30e868be], stack [main]])
  Number of target states:       1
  Size of final wait list        4

Time for analysis setup:          3.340s
  Time for loading CPAs:          0.746s
  Time for loading parser:        0.684s
  Time for CFA construction:      1.739s
    Time for parsing file(s):     0.508s
    Time for AST to CFA:          0.562s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.407s
      Time for var class.:        0.165s
Time for Analysis:               26.477s
CPU time for analysis:           26.470s
Total time for CPAchecker:       29.821s
Total CPU time for CPAchecker:   29.810s
Time for statistics:              0.124s

Time for Garbage Collector:       0.201s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     42MB (    40 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     34MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
