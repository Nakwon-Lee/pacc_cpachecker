scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_dekker_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_mouj4y0j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 816: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 942: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 948: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2485 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1864 (75%)
  Because of loop head:            553 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         68 (3%)
  Times precision was empty:       661 (27%)
  Times precision was {false}:     74 (3%)
  Times result was cached:         977 (39%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      773 (31%)
  Times result was 'false':        538 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         6043
  BDD entailment checks:           2259
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          42
Number of abstraction locations:          23
Max number of predicates per location:    25
Avg number of predicates per location:    11
Total predicates per abstraction:         10627
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 12.55
Number of irrelevant predicates:          1861 (18%)
Number of preds handled by boolean abs:   4491 (42%)
  Total number of models for allsat:      1719
  Max number of models for allsat:        54
  Avg number of models for allsat:        2.22

Time for post operator:                  2.813s
  Time for path formula creation:        2.745s
Time for strengthen operator:            0.063s
Time for prec operator:                 15.891s
  Time for abstraction:                 15.708s (Max:     0.205s, Count: 2485)
    Boolean abstraction:                10.079s
    Solving time:                        8.538s (Max:     0.195s)
    Model enumeration time:              2.161s
    Time for BDD construction:           0.165s (Max:     0.012s)
Time for merge operator:                 0.244s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.014s
Total time for SMT solver (w/o itp):    10.700s

Number of path formula cache hits:   22354 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.596s

Total number of created targets for pointer analysis: 11888
   Number of created targets for uf: *signed_int is 193
   Number of created targets for uf: *unsigned_char is 193
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 103


Number of BDD nodes:                               12781
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6234 (count: 10233, min: 0, max: 1253, avg: 0.61)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.270s
Automaton transfers with branching:                0
Automaton transfer successors:                        26778 (count: 26778, min: 1, max: 1, avg: 1.00) [1 x 26778]

CPA algorithm statistics
------------------------
Number of iterations:            18083
Max size of waitlist:            27
Average size of waitlist:        7
Number of computed successors:   20897
Max successors for one state:    2
Number of times merged:          1892
Number of times stopped:         2189
Number of times breaked:         25

Total time for CPA algorithm:        21.210s (Max:     2.146s)
  Time for choose from waitlist:      0.072s
  Time for precision adjustment:     16.248s
  Time for transfer relation:         4.027s
  Time for merge operator:            0.405s
  Time for stop operator:             0.085s
  Time for adding to reached set:     0.113s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   25
Avg. length of target path (in blocks):                 738 (count: 25, min: 3, max: 66, avg: 29.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.848s
  Counterexample analysis:                             5.653s (Max:     1.015s, Calls: 25)
    Refinement sat check:                              5.017s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.055s
  Precision update:                                    0.008s
  ARG update:                                          0.102s

Length of refined path (in blocks):                     635 (count: 25, min: 2, max: 66, avg: 25.40)
Number of affected states:                              605 (count: 25, min: 0, max: 65, avg: 24.20)
Length (states) of path with itp 'true':                  5 (count: 25, min: 0, max: 1, avg: 0.20)
Length (states) of path with itp non-trivial itp:       605 (count: 25, min: 0, max: 65, avg: 24.20)
Length (states) of path with itp 'false':                15 (count: 25, min: 0, max: 1, avg: 0.60)
Different non-trivial interpolants along paths:          65 (count: 25, min: 0, max: 13, avg: 2.60)
Equal non-trivial interpolants along paths:             517 (count: 25, min: 0, max: 53, avg: 20.68)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                25
Number of successful refinements:     25
Number of failed refinements:         0
Max. size of reached set before ref.: 1347
Max. size of reached set after ref.:  386
Avg. size of reached set before ref.: 746.00
Avg. size of reached set after ref.:  35.48

Total time for CEGAR algorithm:      27.130s
Time for refinements:                 5.918s
Average time for refinement:          0.236s
Max time for refinement:              1.027s

Code Coverage
-----------------------------
  Function coverage:      0.278
  Visited lines:          248
  Total lines:            366
  Line coverage:          0.678
  Visited conditions:     79
  Total conditions:       208
  Condition coverage:     0.380

CPAchecker general statistics
-----------------------------
Number of program locations:     744
Number of CFA edges:             857
Number of relevant variables:    53
Number of functions:             18
Number of loops:                 6
Size of reached set:             407
  Number of reached locations:   119 (16%)
    Avg states per location:     3
    Max states per location:     12 (at node N404)
  Number of reached functions:   5 (28%)
  Number of partitions:          392
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N412 (before line 901), Function main called from node N392, stack depth 1 [30e868be], stack [main]])
  Number of target states:       0
  Size of final wait list        3

Time for analysis setup:          3.113s
  Time for loading CPAs:          0.687s
  Time for loading parser:        0.596s
  Time for CFA construction:      1.691s
    Time for parsing file(s):     0.516s
    Time for AST to CFA:          0.540s
    Time for CFA sanity check:    0.130s
    Time for post-processing:     0.397s
      Time for var class.:        0.145s
Time for Analysis:               27.130s
CPU time for analysis:           27.130s
Total time for CPAchecker:       30.250s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.076s

Time for Garbage Collector:       0.233s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    58 MiB) max;     42MB (    40 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             38MB (    36 MiB) max;     35MB (    33 MiB) avg;     38MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
