scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_dekker_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uysaua31/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 816: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 942: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 948: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            747 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  526 (70%)
  Because of loop head:            207 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         14 (2%)
  Times precision was empty:       313 (42%)
  Times precision was {false}:     67 (9%)
  Times result was cached:         204 (27%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      163 (22%)
  Times result was 'false':        167 (22%)
Number of strengthen sat checks:   0
Number of coverage checks:         1793
  BDD entailment checks:           699
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          10
Number of abstraction locations:          16
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         1327
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 5.77
Number of irrelevant predicates:          276 (21%)
Number of preds handled by boolean abs:   483 (36%)
  Total number of models for allsat:      354
  Max number of models for allsat:        12
  Avg number of models for allsat:        2.17

Time for post operator:                  2.114s
  Time for path formula creation:        2.077s
Time for strengthen operator:            0.053s
Time for prec operator:                  5.359s
  Time for abstraction:                  5.277s (Max:     0.210s, Count: 747)
    Boolean abstraction:                 2.849s
    Solving time:                        3.126s (Max:     0.183s)
    Model enumeration time:              0.641s
    Time for BDD construction:           0.049s (Max:     0.008s)
Time for merge operator:                 0.168s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     3.767s

Number of path formula cache hits:   5020 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.096s

Total number of created targets for pointer analysis: 10281
   Number of created targets for uf: *signed_int is 265
   Number of created targets for uf: *unsigned_char is 217
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 55


Number of BDD nodes:                               605
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         524 (count: 2480, min: 0, max: 161, avg: 0.21)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.115s
Automaton transfers with branching:                0
Automaton transfer successors:                         8379 (count: 8379, min: 1, max: 1, avg: 1.00) [1 x 8379]

CPA algorithm statistics
------------------------
Number of iterations:            5366
Max size of waitlist:            25
Average size of waitlist:        6
Number of computed successors:   6221
Max successors for one state:    2
Number of times merged:          547
Number of times stopped:         643
Number of times breaked:         14

Total time for CPA algorithm:         9.029s (Max:     1.048s)
  Time for choose from waitlist:      0.031s
  Time for precision adjustment:      5.597s
  Time for transfer relation:         2.845s
  Time for merge operator:            0.267s
  Time for stop operator:             0.055s
  Time for adding to reached set:     0.089s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                 236 (count: 14, min: 3, max: 38, avg: 16.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.072s
  Counterexample analysis:                             3.956s (Max:     2.833s, Calls: 14)
    Refinement sat check:                              3.435s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          4.030s
  Predicate creation:                                  0.023s
  Precision update:                                    0.013s
  ARG update:                                          0.036s

Length of refined path (in blocks):                     151 (count: 13, min: 2, max: 34, avg: 11.62)
Number of affected states:                              133 (count: 13, min: 0, max: 33, avg: 10.23)
Length (states) of path with itp 'true':                  5 (count: 13, min: 0, max: 1, avg: 0.38)
Length (states) of path with itp non-trivial itp:       133 (count: 13, min: 0, max: 33, avg: 10.23)
Length (states) of path with itp 'false':                 8 (count: 13, min: 0, max: 1, avg: 0.62)
Different non-trivial interpolants along paths:          13 (count: 13, min: 0, max: 3, avg: 1.00)
Equal non-trivial interpolants along paths:             109 (count: 13, min: 0, max: 31, avg: 8.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     13
Number of failed refinements:         0
Max. size of reached set before ref.: 592
Max. size of reached set after ref.:  386
Avg. size of reached set before ref.: 447.36
Avg. size of reached set after ref.:  65.46

Total time for CEGAR algorithm:      17.163s
Time for refinements:                 8.134s
Average time for refinement:          0.581s
Max time for refinement:              6.866s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          270
  Total lines:            366
  Line coverage:          0.738
  Visited conditions:     101
  Total conditions:       208
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     744
Number of CFA edges:             857
Number of relevant variables:    53
Number of functions:             18
Number of loops:                 6
Size of reached set:             558
  Number of reached locations:   157 (21%)
    Avg states per location:     3
    Max states per location:     12 (at node N404)
  Number of reached functions:   7 (39%)
  Number of partitions:          543
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N412 (before line 901), Function main called from node N392, stack depth 1 [30e868be], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.344s
  Time for loading CPAs:          0.694s
  Time for loading parser:        0.664s
  Time for CFA construction:      1.798s
    Time for parsing file(s):     0.591s
    Time for AST to CFA:          0.539s
    Time for CFA sanity check:    0.113s
    Time for post-processing:     0.395s
      Time for var class.:        0.147s
Time for Analysis:               17.163s
CPU time for analysis:           17.160s
Time for analyzing result:        0.009s
Total time for CPAchecker:       20.515s
Total CPU time for CPAchecker:   20.500s
Time for statistics:              0.093s

Time for Garbage Collector:       0.190s (in 16 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 59MB (    57 MiB) max;     42MB (    40 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     33MB (    31 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    38 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8070MB (  7697 MiB) avg

Verification result: FALSE. Property violation (__VERIFIER_error(); called in line 636) found by chosen configuration.
More details about the verification run can be found in the directory "./output".
