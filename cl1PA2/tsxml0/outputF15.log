scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_dekker_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ckmv6b2z/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 816: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 942: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 948: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Error: Refinement failed: Interpolation failed (build_model: too many iterations) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            1254 (8% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  880 (70%)
  Because of loop head:            348 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (2%)
  Times precision was empty:       200 (16%)
  Times precision was {false}:     72 (6%)
  Times result was cached:         397 (32%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      585 (47%)
  Times result was 'false':        349 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         3229
  BDD entailment checks:           1273
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          35
Number of abstraction locations:          23
Max number of predicates per location:    18
Avg number of predicates per location:    7
Total predicates per abstraction:         5532
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 8.42
Number of irrelevant predicates:          1081 (20%)
Number of preds handled by boolean abs:   2466 (45%)
  Total number of models for allsat:      1666
  Max number of models for allsat:        96
  Avg number of models for allsat:        2.85

Time for post operator:                  2.590s
  Time for path formula creation:        2.535s
Time for strengthen operator:            0.047s
Time for prec operator:                 13.262s
  Time for abstraction:                 13.147s (Max:     0.312s, Count: 1254)
    Boolean abstraction:                 8.312s
    Solving time:                        7.230s (Max:     0.295s)
    Model enumeration time:              2.040s
    Time for BDD construction:           0.144s (Max:     0.013s)
Time for merge operator:                 0.211s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.016s
Total time for SMT solver (w/o itp):     9.270s

Number of path formula cache hits:   12327 (70%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.416s

Total number of created targets for pointer analysis: 8927
   Number of created targets for uf: *signed_int is 193
   Number of created targets for uf: *unsigned_char is 193
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 7


Number of BDD nodes:                               5266
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3168 (count: 6290, min: 0, max: 611, avg: 0.50)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.193s
Automaton transfers with branching:                0
Automaton transfer successors:                        16421 (count: 16421, min: 1, max: 1, avg: 1.00) [1 x 16421]

CPA algorithm statistics
------------------------
Number of iterations:            11556
Max size of waitlist:            36
Average size of waitlist:        9
Number of computed successors:   13107
Max successors for one state:    2
Number of times merged:          978
Number of times stopped:         1062
Number of times breaked:         18

Total time for CPA algorithm:        17.957s (Max:     1.861s)
  Time for choose from waitlist:      0.051s
  Time for precision adjustment:     13.604s
  Time for transfer relation:         3.521s
  Time for merge operator:            0.285s
  Time for stop operator:             0.107s
  Time for adding to reached set:     0.109s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   18
Avg. length of target path (in blocks):                 538 (count: 18, min: 3, max: 50, avg: 29.89)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 114.440s
  Counterexample analysis:                           114.310s (Max:   110.130s, Calls: 18)
    Refinement sat check:                             64.817s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.034s
  Precision update:                                    0.010s
  ARG update:                                          0.073s

Length of refined path (in blocks):                     381 (count: 17, min: 2, max: 50, avg: 22.41)
Number of affected states:                              345 (count: 17, min: 1, max: 49, avg: 20.29)
Length (states) of path with itp 'true':                 19 (count: 17, min: 0, max: 16, avg: 1.12)
Length (states) of path with itp non-trivial itp:       345 (count: 17, min: 1, max: 49, avg: 20.29)
Length (states) of path with itp 'false':                12 (count: 17, min: 0, max: 1, avg: 0.71)
Different non-trivial interpolants along paths:          45 (count: 17, min: 0, max: 12, avg: 2.65)
Equal non-trivial interpolants along paths:             283 (count: 17, min: 0, max: 39, avg: 16.65)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                18
Number of successful refinements:     17
Number of failed refinements:         1
Max. size of reached set before ref.: 1231
Max. size of reached set after ref.:  331
Avg. size of reached set before ref.: 682.06
Avg. size of reached set after ref.:  34.12

Total time for CEGAR algorithm:     132.476s
Time for refinements:               114.515s
Average time for refinement:          6.361s
Max time for refinement:            110.133s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          271
  Total lines:            366
  Line coverage:          0.740
  Visited conditions:     101
  Total conditions:       208
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     744
Number of CFA edges:             857
Number of relevant variables:    53
Number of functions:             18
Number of loops:                 6
Size of reached set:             822
  Number of reached locations:   160 (22%)
    Avg states per location:     5
    Max states per location:     12 (at node N404)
  Number of reached functions:   7 (39%)
  Number of partitions:          804
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N412 (before line 901), Function main called from node N392, stack depth 1 [30e868be], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.396s
  Time for loading CPAs:          0.695s
  Time for loading parser:        0.668s
  Time for CFA construction:      1.796s
    Time for parsing file(s):     0.598s
    Time for AST to CFA:          0.514s
    Time for CFA sanity check:    0.120s
    Time for post-processing:     0.432s
      Time for var class.:        0.153s
Time for Analysis:              132.476s
CPU time for analysis:          132.470s
Total time for CPAchecker:      135.878s
Total CPU time for CPAchecker:  135.860s
Time for statistics:              0.082s

Time for Garbage Collector:       0.234s (in 22 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 60MB (    57 MiB) max;     30MB (    29 MiB) avg;     63MB (    60 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        39MB (    37 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8083MB (  7708 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
