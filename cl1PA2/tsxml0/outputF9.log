scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/seq-pthread/cs_dekker_true-unreach-call.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2n_puqw9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 816: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 816: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 817: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: __CS_cs(); (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: [!(__CS_ret != 0)] (CFACreationUtils.addEdgeToCFA, INFO)

line 859: Dead code detected: return 0; (CFACreationUtils.addEdgeToCFA, INFO)

line 860: Dead code detected: goto __CS_ERROR; (CFACreationUtils.addEdgeToCFA, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

line 942: Ignoring function call through function pointer *(__CS_thread[1]): (*(__CS_thread[1]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 948: Ignoring function call through function pointer *(__CS_thread[2]): (*(__CS_thread[2]))(0); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

What!
Error: Refinement failed: Interpolation failed (msat_get_model failed with "non-integer model value", probably the actual problem is interpolation) (InterpolationManager.fallbackWithoutInterpolation, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2832 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2167 (77%)
  Because of loop head:            582 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         83 (3%)
  Times precision was empty:       674 (24%)
  Times precision was {false}:     76 (3%)
  Times result was cached:         1057 (37%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1025 (36%)
  Times result was 'false':        589 (21%)
Number of strengthen sat checks:   0
Number of coverage checks:         6794
  BDD entailment checks:           2434
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       63
Number of predicates discovered:          42
Number of abstraction locations:          23
Max number of predicates per location:    25
Avg number of predicates per location:    12
Total predicates per abstraction:         15017
Max number of predicates per abstraction: 25
Avg number of predicates per abstraction: 13.64
Number of irrelevant predicates:          2432 (16%)
Number of preds handled by boolean abs:   7709 (51%)
  Total number of models for allsat:      8110
  Max number of models for allsat:        932
  Avg number of models for allsat:        7.91

Time for post operator:                  3.154s
  Time for path formula creation:        3.097s
Time for strengthen operator:            0.073s
Time for prec operator:                 21.069s
  Time for abstraction:                 20.888s (Max:     0.321s, Count: 2832)
    Boolean abstraction:                14.499s
    Solving time:                        9.514s (Max:     0.194s)
    Model enumeration time:              5.134s
    Time for BDD construction:           0.474s (Max:     0.055s)
Time for merge operator:                 0.281s
Time for coverage check:                 0.023s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):    14.648s

Number of path formula cache hits:   25024 (75%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.890s

Total number of created targets for pointer analysis: 13690
   Number of created targets for uf: *signed_int is 193
   Number of created targets for uf: *unsigned_char is 193
   Number of created targets for uf: *(unsigned_char)* is 10
   Number of created targets for uf: *(Return_type:_[(void)*],_Parameters:_1,_Parameter_1_type:_[(void)*],_VarArgs:_false)* is 127


Number of BDD nodes:                               79664
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10890 (count: 13531, min: 0, max: 1216, avg: 0.80)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.296s
Automaton transfers with branching:                0
Automaton transfer successors:                        30332 (count: 30332, min: 1, max: 1, avg: 1.00) [1 x 30332]

CPA algorithm statistics
------------------------
Number of iterations:            20628
Max size of waitlist:            27
Average size of waitlist:        7
Number of computed successors:   23836
Max successors for one state:    2
Number of times merged:          2180
Number of times stopped:         2526
Number of times breaked:         27

Total time for CPA algorithm:        27.156s (Max:     3.667s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:     21.458s
  Time for transfer relation:         4.515s
  Time for merge operator:            0.438s
  Time for stop operator:             0.155s
  Time for adding to reached set:     0.128s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   27
Avg. length of target path (in blocks):                 850 (count: 27, min: 3, max: 74, avg: 31.48)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  63.713s
  Counterexample analysis:                            63.484s (Max:    55.892s, Calls: 27)
    Refinement sat check:                              8.887s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.048s
  Precision update:                                    0.037s
  ARG update:                                          0.092s

Length of refined path (in blocks):                     709 (count: 26, min: 2, max: 74, avg: 27.27)
Number of affected states:                              678 (count: 26, min: 0, max: 73, avg: 26.08)
Length (states) of path with itp 'true':                  5 (count: 26, min: 0, max: 1, avg: 0.19)
Length (states) of path with itp non-trivial itp:       678 (count: 26, min: 0, max: 73, avg: 26.08)
Length (states) of path with itp 'false':                15 (count: 26, min: 0, max: 1, avg: 0.58)
Different non-trivial interpolants along paths:          83 (count: 26, min: 0, max: 18, avg: 3.19)
Equal non-trivial interpolants along paths:             571 (count: 26, min: 0, max: 54, avg: 21.96)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                27
Number of successful refinements:     26
Number of failed refinements:         1
Max. size of reached set before ref.: 1516
Max. size of reached set after ref.:  386
Avg. size of reached set before ref.: 800.44
Avg. size of reached set after ref.:  34.23

Total time for CEGAR algorithm:      90.996s
Time for refinements:                63.838s
Average time for refinement:          2.364s
Max time for refinement:             55.894s

Code Coverage
-----------------------------
  Function coverage:      0.389
  Visited lines:          271
  Total lines:            366
  Line coverage:          0.740
  Visited conditions:     101
  Total conditions:       208
  Condition coverage:     0.486

CPAchecker general statistics
-----------------------------
Number of program locations:     744
Number of CFA edges:             857
Number of relevant variables:    53
Number of functions:             18
Number of loops:                 6
Size of reached set:             1516
  Number of reached locations:   162 (22%)
    Avg states per location:     9
    Max states per location:     27 (at node N8)
  Number of reached functions:   7 (39%)
  Number of partitions:          1496
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N412 (before line 901), Function main called from node N392, stack depth 1 [30e868be], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.448s
  Time for loading CPAs:          0.737s
  Time for loading parser:        0.708s
  Time for CFA construction:      1.853s
    Time for parsing file(s):     0.615s
    Time for AST to CFA:          0.592s
    Time for CFA sanity check:    0.116s
    Time for post-processing:     0.398s
      Time for var class.:        0.155s
Time for Analysis:               90.996s
CPU time for analysis:           90.990s
Total time for CPAchecker:       94.448s
Total CPU time for CPAchecker:   94.430s
Time for statistics:              0.100s

Time for Garbage Collector:       0.285s (in 36 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 62MB (    59 MiB) max;     42MB (    40 MiB) avg;     64MB (    61 MiB) peak
Used non-heap memory:             38MB (    37 MiB) max;     37MB (    35 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8152MB (  7774 MiB) max;   8119MB (  7743 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
