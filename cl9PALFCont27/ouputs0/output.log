scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_08ubxmhu/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            664249 (5% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  653463 (98%)
  Because of loop head:            10197 (2%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         589 (0%)
  Times precision was empty:       97929 (15%)
  Times precision was {false}:     1016 (0%)
  Times result was cached:         526356 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      38948 (6%)
  Times result was 'false':        74422 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         6035480
  BDD entailment checks:           198990
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       57
Number of predicates discovered:          131
Number of abstraction locations:          157
Max number of predicates per location:    56
Avg number of predicates per location:    18
Total predicates per abstraction:         9521322
Max number of predicates per abstraction: 56
Avg number of predicates per abstraction: 238.25
Number of irrelevant predicates:          4296540 (45%)
Number of preds handled by boolean abs:   493392 (5%)
  Total number of models for allsat:      2067808
  Max number of models for allsat:        29296
  Avg number of models for allsat:        53.09

Time for post operator:                 59.569s
  Time for path formula creation:       56.223s
Time for strengthen operator:            7.730s
Time for prec operator:                519.837s
  Time for abstraction:                508.310s (Max:     5.668s, Count: 664249)
    Boolean abstraction:               292.168s
    Solving time:                       46.782s (Max:     0.063s)
    Model enumeration time:            145.695s
    Time for BDD construction:          96.017s (Max:     2.286s)
Time for merge operator:                16.013s
Time for coverage check:                 0.770s
  Time for BDD entailment checks:        0.411s
Total time for SMT solver (w/o itp):   192.478s

Number of path formula cache hits:   14644584 (86%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    35.387s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               184957
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      559134 (count: 763387, min: 0, max: 23871, avg: 0.73)
Time for BDD node cleanup:                             0.145s
Time for BDD garbage collection:                       2.652s (in 592 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 11.281s
  Time for transition matches:                         5.138s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                     14117789 (count: 14117789, min: 1, max: 1, avg: 1.00) [1 x 14117789]

CPA algorithm statistics
------------------------
Number of iterations:            10563923
Max size of waitlist:            89
Average size of waitlist:        27
Number of computed successors:   13681070
Max successors for one state:    2
Number of times merged:          2918245
Number of times stopped:         3039229
Number of times breaked:         589

Total time for CPA algorithm:       796.087s (Max:    55.873s)
  Time for choose from waitlist:      2.306s
  Time for precision adjustment:    578.854s
  Time for transfer relation:       138.317s
  Time for merge operator:           34.835s
  Time for stop operator:             8.625s
  Time for adding to reached set:    15.320s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   589
Avg. length of target path (in blocks):               91604 (count: 589, min: 44, max: 312, avg: 155.52)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  80.283s
  Counterexample analysis:                            56.106s (Max:     0.388s, Calls: 589)
    Refinement sat check:                             25.468s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.046s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.169s
  Precision update:                                    0.630s
  ARG update:                                         22.573s

Length of refined path (in blocks):                   75538 (count: 589, min: 35, max: 304, avg: 128.25)
Number of affected states:                            21994 (count: 589, min: 1, max: 303, avg: 37.34)
Length (states) of path with itp 'true':              52955 (count: 589, min: 0, max: 299, avg: 89.91)
Length (states) of path with itp non-trivial itp:     21994 (count: 589, min: 1, max: 303, avg: 37.34)
Length (states) of path with itp 'false':               589 (count: 589, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         649 (count: 589, min: 0, max: 26, avg: 1.10)
Equal non-trivial interpolants along paths:           20756 (count: 589, min: 0, max: 301, avg: 35.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                589
Number of successful refinements:     589
Number of failed refinements:         0
Max. size of reached set before ref.: 130016
Max. size of reached set after ref.:  129861
Avg. size of reached set before ref.: 30798.17
Avg. size of reached set after ref.:  12914.30

Total time for CEGAR algorithm:     897.096s
Time for refinements:                95.352s
Average time for refinement:          0.161s
Max time for refinement:              2.460s

Code Coverage
-----------------------------
  Function coverage:      0.571
  Visited lines:          1002
  Total lines:            1721
  Line coverage:          0.582
  Visited conditions:     578
  Total conditions:       734
  Condition coverage:     0.787

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             33819
  Number of reached locations:   1115 (49%)
    Avg states per location:     30
    Max states per location:     483 (at node N1959)
  Number of reached functions:   44 (57%)
  Number of partitions:          33618
    Avg size of partitions:      1
    Max size of partitions:      6 (with key [N1309 (before line 1710), Function timeShift called from node N1692, stack depth 5 [23f7602a], stack [main, runTest, test, threeTS, timeShift]])
  Number of target states:       0
  Size of final wait list        9

Time for analysis setup:          3.178s
  Time for loading CPAs:          0.645s
  Time for loading parser:        0.542s
  Time for CFA construction:      1.826s
    Time for parsing file(s):     0.543s
    Time for AST to CFA:          0.532s
    Time for CFA sanity check:    0.180s
    Time for post-processing:     0.405s
      Time for var class.:        0.246s
Time for Analysis:              897.096s
CPU time for analysis:          896.970s
Total time for CPAchecker:      900.282s
Total CPU time for CPAchecker:  900.150s
Time for statistics:              0.631s

Time for Garbage Collector:      81.297s (in 786 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1563MB (  1491 MiB) max;    911MB (   869 MiB) avg;   1578MB (  1505 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     37MB (    36 MiB) peak
Allocated heap memory:          1868MB (  1781 MiB) max;   1372MB (  1309 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     38MB (    37 MiB) avg
Total process virtual memory:  10025MB (  9560 MiB) max;   8755MB (  8349 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
