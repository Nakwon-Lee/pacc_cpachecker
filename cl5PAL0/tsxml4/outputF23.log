scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0btwnf4m/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 408: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 450: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 489: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 528: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 894: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 981: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1135: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1144: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1178: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1187: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1227: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1307: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1672: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1701: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1735: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1822: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1836: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2420: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2429: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3051: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3362: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 685: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            177 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            45 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         132 (75%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     131 (74%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      43 (24%)
  Times result was 'false':        121 (68%)
Number of strengthen sat checks:   0
Number of coverage checks:         70240
  BDD entailment checks:           64
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       911
Number of predicates discovered:          96
Number of abstraction locations:          2
Max number of predicates per location:    96
Avg number of predicates per location:    48
Total predicates per abstraction:         2167
Max number of predicates per abstraction: 96
Avg number of predicates per abstraction: 12.45
Number of irrelevant predicates:          137 (6%)
Number of preds handled by boolean abs:   2030 (94%)
  Total number of models for allsat:      1302
  Max number of models for allsat:        320
  Avg number of models for allsat:        30.28

Time for post operator:                  3.265s
  Time for path formula creation:        3.050s
Time for strengthen operator:            0.232s
Time for prec operator:                 25.023s
  Time for abstraction:                 24.748s (Max:     2.336s, Count: 177)
    Boolean abstraction:                22.186s
    Solving time:                        8.594s (Max:     0.311s)
    Model enumeration time:             13.286s
    Time for BDD construction:           0.517s (Max:     0.173s)
Time for merge operator:                 0.780s
Time for coverage check:                 0.040s
  Time for BDD entailment checks:        0.019s
Total time for SMT solver (w/o itp):    21.880s

Number of path formula cache hits:   168968 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.785s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               162955
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       20562 (count: 9419, min: 0, max: 2347, avg: 2.18)
Time for BDD node cleanup:                             0.007s
Time for BDD garbage collection:                       0.086s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.485s
Automaton transfers with branching:                0
Automaton transfer successors:                       171581 (count: 171581, min: 1, max: 1, avg: 1.00) [1 x 171581]

CPA algorithm statistics
------------------------
Number of iterations:            127271
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   162503
Max successors for one state:    2
Number of times merged:          35088
Number of times stopped:         35090
Number of times breaked:         12

Total time for CPA algorithm:        37.038s (Max:     6.478s)
  Time for choose from waitlist:      0.284s
  Time for precision adjustment:     26.570s
  Time for transfer relation:         6.522s
  Time for merge operator:            1.819s
  Time for stop operator:             0.420s
  Time for adding to reached set:     0.381s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  39 (count: 12, min: 2, max: 6, avg: 3.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.033s
  Counterexample analysis:                             9.419s (Max:     2.328s, Calls: 12)
    Refinement sat check:                              8.343s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.044s
  Precision update:                                    0.019s
  ARG update:                                          0.371s

Length of refined path (in blocks):                      39 (count: 12, min: 2, max: 6, avg: 3.25)
Number of affected states:                               27 (count: 12, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        27 (count: 12, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          15 (count: 12, min: 0, max: 4, avg: 1.25)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 23153
Max. size of reached set after ref.:  3859
Avg. size of reached set before ref.: 12535.17
Avg. size of reached set after ref.:  3859.00

Total time for CEGAR algorithm:      47.706s
Time for refinements:                10.608s
Average time for refinement:          0.884s
Max time for refinement:              2.492s

Code Coverage
-----------------------------
  Function coverage:      0.595
  Visited lines:          1020
  Total lines:            1717
  Line coverage:          0.594
  Visited conditions:     600
  Total conditions:       756
  Condition coverage:     0.794

CPAchecker general statistics
-----------------------------
Number of program locations:     2255
Number of CFA edges:             2747
Number of relevant variables:    300
Number of functions:             74
Number of loops:                 9
Size of reached set:             23179
  Number of reached locations:   1151 (51%)
    Avg states per location:     20
    Max states per location:     175 (at node N2124)
  Number of reached functions:   44 (59%)
  Number of partitions:          23175
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N112 (before lines 197-225), Function cleanup called from node N2666, stack depth 4 [c074c0c], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.278s
  Time for loading CPAs:          0.886s
  Time for loading parser:        0.757s
  Time for CFA construction:      2.448s
    Time for parsing file(s):     0.700s
    Time for AST to CFA:          0.746s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.576s
      Time for var class.:        0.321s
Time for Analysis:               47.707s
CPU time for analysis:           47.710s
Time for analyzing result:        0.019s
Total time for CPAchecker:       51.988s
Total CPU time for CPAchecker:   51.980s
Time for statistics:              0.536s

Time for Garbage Collector:       1.113s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                123MB (   118 MiB) max;     67MB (    64 MiB) avg;    127MB (   121 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    32 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8156MB (  7778 MiB) max;   8111MB (  7735 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
