scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_w9qhtydo/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 281: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 333: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 373: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 453: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 818: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 857: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 891: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 975: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1562: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1921: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2241: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2403: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2540: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2781: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3092: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3141: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3180: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3219: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2078: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            30 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            10 (33%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         20 (67%)
  Times precision was empty:       3 (10%)
  Times precision was {false}:     19 (63%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      8 (27%)
  Times result was 'false':        17 (57%)
Number of strengthen sat checks:   0
Number of coverage checks:         22390
  BDD entailment checks:           8
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       954
Number of predicates discovered:          27
Number of abstraction locations:          2
Max number of predicates per location:    26
Avg number of predicates per location:    13
Total predicates per abstraction:         126
Max number of predicates per abstraction: 26
Avg number of predicates per abstraction: 4.67
Number of irrelevant predicates:          19 (15%)
Number of preds handled by boolean abs:   107 (85%)
  Total number of models for allsat:      214
  Max number of models for allsat:        90
  Avg number of models for allsat:        26.75

Time for post operator:                  3.299s
  Time for path formula creation:        3.141s
Time for strengthen operator:            0.180s
Time for prec operator:                 13.725s
  Time for abstraction:                 13.524s (Max:     4.448s, Count: 30)
    Boolean abstraction:                12.676s
    Solving time:                        2.840s (Max:     0.581s)
    Model enumeration time:              9.846s
    Time for BDD construction:           0.047s (Max:     0.021s)
Time for merge operator:                 0.646s
Time for coverage check:                 0.037s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):    12.686s

Number of path formula cache hits:   34866 (58%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.983s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               8482
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         505 (count: 788, min: 0, max: 286, avg: 0.64)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.271s
Automaton transfers with branching:                0
Automaton transfer successors:                        53804 (count: 53804, min: 1, max: 1, avg: 1.00) [1 x 53804]

CPA algorithm statistics
------------------------
Number of iterations:            39760
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   50984
Max successors for one state:    2
Number of times merged:          11191
Number of times stopped:         11193
Number of times breaked:         3

Total time for CPA algorithm:        23.396s (Max:     8.063s)
  Time for choose from waitlist:      0.190s
  Time for precision adjustment:     14.719s
  Time for transfer relation:         5.777s
  Time for merge operator:            1.390s
  Time for stop operator:             0.264s
  Time for adding to reached set:     0.294s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   3
Avg. length of target path (in blocks):                   7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.569s
  Counterexample analysis:                             1.324s (Max:     0.723s, Calls: 3)
    Refinement sat check:                              1.159s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.004s
  ARG update:                                          0.152s

Length of refined path (in blocks):                       7 (count: 3, min: 2, max: 3, avg: 2.33)
Number of affected states:                                4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'true':                  0 (count: 3, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 3, min: 1, max: 2, avg: 1.33)
Length (states) of path with itp 'false':                 0 (count: 3, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 3, min: 0, max: 1, avg: 0.33)
Equal non-trivial interpolants along paths:               0 (count: 3, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                3
Number of successful refinements:     3
Number of failed refinements:         0
Max. size of reached set before ref.: 16230
Max. size of reached set after ref.:  5545
Avg. size of reached set before ref.: 12659.00
Avg. size of reached set after ref.:  5545.00

Total time for CEGAR algorithm:      25.260s
Time for refinements:                 1.828s
Average time for refinement:          0.609s
Max time for refinement:              0.915s

Code Coverage
-----------------------------
  Function coverage:      0.630
  Visited lines:          1047
  Total lines:            1719
  Line coverage:          0.609
  Visited conditions:     608
  Total conditions:       754
  Condition coverage:     0.806

CPAchecker general statistics
-----------------------------
Number of program locations:     2252
Number of CFA edges:             2746
Number of relevant variables:    306
Number of functions:             73
Number of loops:                 9
Size of reached set:             18431
  Number of reached locations:   1175 (52%)
    Avg states per location:     15
    Max states per location:     199 (at node N1891)
  Number of reached functions:   46 (63%)
  Number of partitions:          18429
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1311 (before lines 1712-1740), Function cleanup called from node N1825, stack depth 4 [450794b4], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.455s
  Time for loading CPAs:          0.873s
  Time for loading parser:        0.756s
  Time for CFA construction:      2.639s
    Time for parsing file(s):     0.726s
    Time for AST to CFA:          0.820s
    Time for CFA sanity check:    0.285s
    Time for post-processing:     0.619s
      Time for var class.:        0.333s
Time for Analysis:               25.260s
CPU time for analysis:           25.250s
Total time for CPAchecker:       29.719s
Total CPU time for CPAchecker:   29.700s
Time for statistics:              0.516s

Time for Garbage Collector:       0.488s (in 23 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 84MB (    80 MiB) max;     55MB (    52 MiB) avg;     88MB (    84 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
