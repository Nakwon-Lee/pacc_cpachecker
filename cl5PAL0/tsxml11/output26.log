scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_5crqcwhz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            160 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            108 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         52 (33%)
  Times precision was empty:       133 (83%)
  Times precision was {false}:     27 (17%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        27 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         33557
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         27
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          27 (100%)

Time for post operator:                  6.254s
  Time for path formula creation:        5.939s
Time for strengthen operator:            0.331s
Time for prec operator:                  2.849s
  Time for abstraction:                  2.602s (Max:     0.259s, Count: 160)
    Solving time:                        0.904s (Max:     0.085s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.615s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.904s

Number of path formula cache hits:   104 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.754s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 300, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.625s
  Time for transition matches:                         0.247s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                        81697 (count: 81697, min: 1, max: 1, avg: 1.00) [1 x 81697]

CPA algorithm statistics
------------------------
Number of iterations:            60220
Max size of waitlist:            98
Average size of waitlist:        48
Number of computed successors:   77131
Max successors for one state:    2
Number of times merged:          16777
Number of times stopped:         16780
Number of times breaked:         28

Total time for CPA algorithm:        18.206s (Max:     3.490s)
  Time for choose from waitlist:      0.155s
  Time for precision adjustment:      4.071s
  Time for transfer relation:         9.626s
  Time for merge operator:            2.598s
  Time for stop operator:             0.378s
  Time for adding to reached set:     0.386s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                  48 (count: 28, min: 1, max: 2, avg: 1.71)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.437s
  Counterexample analysis:                             2.983s (Max:     0.281s, Calls: 28)
    Refinement sat check:                              2.650s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.030s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      45 (count: 28, min: 1, max: 2, avg: 1.61)
Number of affected states:                                0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 17 (count: 28, min: 0, max: 1, avg: 0.61)
Length (states) of path with itp non-trivial itp:         0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 3 (count: 28, min: 0, max: 1, avg: 0.11)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 28, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 60176
Max. size of reached set after ref.:  60175
Avg. size of reached set before ref.: 33479.82
Avg. size of reached set after ref.:  33474.46

Total time for CEGAR algorithm:      25.688s
Time for refinements:                 6.352s
Average time for refinement:          0.226s
Max time for refinement:              0.854s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          1020
  Total lines:            1678
  Line coverage:          0.608
  Visited conditions:     592
  Total conditions:       724
  Condition coverage:     0.818

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             60175
  Number of reached locations:   1157 (53%)
    Avg states per location:     52
    Max states per location:     671 (at node N39)
  Number of reached functions:   46 (64%)
  Number of partitions:          60175
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        97

Time for analysis setup:          4.551s
  Time for loading CPAs:          0.926s
  Time for loading parser:        0.772s
  Time for CFA construction:      2.622s
    Time for parsing file(s):     0.727s
    Time for AST to CFA:          0.903s
    Time for CFA sanity check:    0.272s
    Time for post-processing:     0.536s
      Time for var class.:        0.287s
Time for Analysis:               25.688s
CPU time for analysis:           25.690s
Total time for CPAchecker:       30.243s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.809s

Time for Garbage Collector:       1.619s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                130MB (   124 MiB) max;     67MB (    64 MiB) avg;    142MB (   136 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           176MB (   168 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8091MB (  7716 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
