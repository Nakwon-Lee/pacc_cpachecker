scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qhq8atc9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            133 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            90 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         43 (32%)
  Times precision was empty:       110 (83%)
  Times precision was {false}:     22 (17%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        23 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         29890
  BDD entailment checks:           4
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         23
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.05
Number of irrelevant predicates:          23 (100%)

Time for post operator:                  5.792s
  Time for path formula creation:        5.591s
Time for strengthen operator:            0.243s
Time for prec operator:                  2.665s
  Time for abstraction:                  2.430s (Max:     0.324s, Count: 133)
    Solving time:                        0.830s (Max:     0.109s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.542s
Time for coverage check:                 0.013s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.830s

Number of path formula cache hits:   36 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.472s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 248, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.517s
  Time for transition matches:                         0.256s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.001s
Automaton transfers with branching:                0
Automaton transfer successors:                        72816 (count: 72816, min: 1, max: 1, avg: 1.00) [1 x 72816]

CPA algorithm statistics
------------------------
Number of iterations:            53687
Max size of waitlist:            86
Average size of waitlist:        43
Number of computed successors:   68745
Max successors for one state:    2
Number of times merged:          14943
Number of times stopped:         14947
Number of times breaked:         23

Total time for CPA algorithm:        17.219s (Max:     3.438s)
  Time for choose from waitlist:      0.169s
  Time for precision adjustment:      3.958s
  Time for transfer relation:         8.850s
  Time for merge operator:            2.467s
  Time for stop operator:             0.337s
  Time for adding to reached set:     0.414s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                  40 (count: 23, min: 1, max: 3, avg: 1.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.698s
  Counterexample analysis:                             4.198s (Max:     0.893s, Calls: 23)
    Refinement sat check:                              3.739s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.015s
  ARG update:                                          0.018s

Length of refined path (in blocks):                      37 (count: 23, min: 1, max: 3, avg: 1.61)
Number of affected states:                                0 (count: 23, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 14 (count: 23, min: 0, max: 2, avg: 0.61)
Length (states) of path with itp non-trivial itp:         0 (count: 23, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 3 (count: 23, min: 0, max: 1, avg: 0.13)
Different non-trivial interpolants along paths:           0 (count: 23, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 23, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     23
Number of failed refinements:         0
Max. size of reached set before ref.: 49527
Max. size of reached set after ref.:  49510
Avg. size of reached set before ref.: 30372.96
Avg. size of reached set after ref.:  30366.65

Total time for CEGAR algorithm:      25.417s
Time for refinements:                 7.442s
Average time for refinement:          0.323s
Max time for refinement:              1.160s

Code Coverage
-----------------------------
  Function coverage:      0.681
  Visited lines:          1087
  Total lines:            1678
  Line coverage:          0.648
  Visited conditions:     618
  Total conditions:       724
  Condition coverage:     0.854

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             53629
  Number of reached locations:   1226 (56%)
    Avg states per location:     43
    Max states per location:     591 (at node N39)
  Number of reached functions:   49 (68%)
  Number of partitions:          53629
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        80

Time for analysis setup:          4.312s
  Time for loading CPAs:          0.819s
  Time for loading parser:        0.774s
  Time for CFA construction:      2.533s
    Time for parsing file(s):     0.748s
    Time for AST to CFA:          0.779s
    Time for CFA sanity check:    0.236s
    Time for post-processing:     0.584s
      Time for var class.:        0.317s
Time for Analysis:               25.417s
CPU time for analysis:           25.410s
Total time for CPAchecker:       29.733s
Total CPU time for CPAchecker:   29.730s
Time for statistics:              0.773s

Time for Garbage Collector:       1.449s (in 50 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                145MB (   138 MiB) max;     72MB (    68 MiB) avg;    160MB (   153 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    30 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           167MB (   159 MiB) max;    137MB (   131 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8155MB (  7777 MiB) max;   8101MB (  7726 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
