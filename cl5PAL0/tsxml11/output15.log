scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_l1_k6zd9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            188 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            126 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (33%)
  Times precision was empty:       156 (83%)
  Times precision was {false}:     32 (17%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        32 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         39661
  BDD entailment checks:           3
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         32
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          32 (100%)

Time for post operator:                  6.373s
  Time for path formula creation:        6.212s
Time for strengthen operator:            0.268s
Time for prec operator:                  3.159s
  Time for abstraction:                  2.895s (Max:     0.242s, Count: 188)
    Solving time:                        1.063s (Max:     0.083s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.507s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.063s

Number of path formula cache hits:   109 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.967s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 353, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.521s
  Time for transition matches:                         0.249s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        96508 (count: 96508, min: 1, max: 1, avg: 1.00) [1 x 96508]

CPA algorithm statistics
------------------------
Number of iterations:            71157
Max size of waitlist:            114
Average size of waitlist:        57
Number of computed successors:   91139
Max successors for one state:    2
Number of times merged:          19829
Number of times stopped:         19832
Number of times breaked:         33

Total time for CPA algorithm:        18.424s (Max:     3.460s)
  Time for choose from waitlist:      0.173s
  Time for precision adjustment:      4.495s
  Time for transfer relation:         9.477s
  Time for merge operator:            2.354s
  Time for stop operator:             0.343s
  Time for adding to reached set:     0.400s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   33
Avg. length of target path (in blocks):                  58 (count: 33, min: 1, max: 2, avg: 1.76)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.442s
  Counterexample analysis:                             3.014s (Max:     0.247s, Calls: 33)
    Refinement sat check:                              2.692s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.036s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      53 (count: 32, min: 1, max: 2, avg: 1.66)
Number of affected states:                                0 (count: 32, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                 21 (count: 32, min: 0, max: 1, avg: 0.66)
Length (states) of path with itp non-trivial itp:         0 (count: 32, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 3 (count: 32, min: 0, max: 1, avg: 0.09)
Different non-trivial interpolants along paths:           0 (count: 32, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 32, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                33
Number of successful refinements:     32
Number of failed refinements:         0
Max. size of reached set before ref.: 71122
Max. size of reached set after ref.:  71090
Avg. size of reached set before ref.: 38841.18
Avg. size of reached set after ref.:  37827.59

Total time for CEGAR algorithm:      26.248s
Time for refinements:                 6.713s
Average time for refinement:          0.203s
Max time for refinement:              0.649s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          1020
  Total lines:            1678
  Line coverage:          0.608
  Visited conditions:     592
  Total conditions:       724
  Condition coverage:     0.818

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             71122
  Number of reached locations:   1158 (53%)
    Avg states per location:     61
    Max states per location:     793 (at node N39)
  Number of reached functions:   46 (64%)
  Number of partitions:          71122
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        111

Time for analysis setup:          4.016s
  Time for loading CPAs:          0.778s
  Time for loading parser:        0.664s
  Time for CFA construction:      2.349s
    Time for parsing file(s):     0.701s
    Time for AST to CFA:          0.685s
    Time for CFA sanity check:    0.246s
    Time for post-processing:     0.538s
      Time for var class.:        0.307s
Time for Analysis:               26.248s
CPU time for analysis:           26.250s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.957s

Time for Garbage Collector:       1.902s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                186MB (   178 MiB) max;     81MB (    77 MiB) avg;    205MB (   195 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           230MB (   220 MiB) max;    150MB (   143 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8090MB (  7715 MiB) max;   8076MB (  7702 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
