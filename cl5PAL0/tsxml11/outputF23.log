scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_p2rglrvg/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2520 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1753 (70%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         767 (30%)
  Times precision was empty:       1727 (69%)
  Times precision was {false}:     331 (13%)
  Times result was cached:         202 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      260 (10%)
  Times result was 'false':        681 (27%)
Number of strengthen sat checks:   0
Number of coverage checks:         335435
  BDD entailment checks:           633
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          52
Number of abstraction locations:          5
Max number of predicates per location:    27
Avg number of predicates per location:    15
Total predicates per abstraction:         3405
Max number of predicates per abstraction: 27
Avg number of predicates per abstraction: 5.76
Number of irrelevant predicates:          539 (16%)
Number of preds handled by boolean abs:   2784 (82%)
  Total number of models for allsat:      10170
  Max number of models for allsat:        1204
  Avg number of models for allsat:        39.12

Time for post operator:                 22.084s
  Time for path formula creation:       21.379s
Time for strengthen operator:            0.925s
Time for prec operator:                497.496s
  Time for abstraction:                496.413s (Max:    63.934s, Count: 2520)
    Boolean abstraction:               472.191s
    Solving time:                       39.392s (Max:     3.312s)
    Model enumeration time:            438.246s
    Time for BDD construction:           1.013s (Max:     0.124s)
Time for merge operator:                 6.048s
Time for coverage check:                 0.088s
  Time for BDD entailment checks:        0.037s
Total time for SMT solver (w/o itp):   477.639s

Number of path formula cache hits:   257227 (30%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    20.465s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               137265
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12227 (count: 10766, min: 0, max: 1473, avg: 1.14)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.657s
  Time for transition matches:                         0.764s
  Time for transition assertions:                      0.003s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       822614 (count: 822614, min: 1, max: 1, avg: 1.00) [1 x 822614]

CPA algorithm statistics
------------------------
Number of iterations:            608011
Max size of waitlist:            271
Average size of waitlist:        138
Number of computed successors:   777331
Max successors for one state:    2
Number of times merged:          167401
Number of times stopped:         167790
Number of times breaked:         444

Total time for CPA algorithm:       553.349s (Max:   475.860s)
  Time for choose from waitlist:      0.537s
  Time for precision adjustment:    504.090s
  Time for transfer relation:        33.544s
  Time for merge operator:            9.115s
  Time for stop operator:             1.255s
  Time for adding to reached set:     1.711s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   444
Avg. length of target path (in blocks):                1608 (count: 444, min: 1, max: 7, avg: 3.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 187.303s
  Counterexample analysis:                           180.075s (Max:     4.152s, Calls: 444)
    Refinement sat check:                            157.632s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.013s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.035s
  Precision update:                                    0.079s
  ARG update:                                          1.460s

Length of refined path (in blocks):                    1379 (count: 444, min: 1, max: 6, avg: 3.11)
Number of affected states:                               34 (count: 444, min: 0, max: 3, avg: 0.08)
Length (states) of path with itp 'true':                901 (count: 444, min: 0, max: 5, avg: 2.03)
Length (states) of path with itp non-trivial itp:        34 (count: 444, min: 0, max: 3, avg: 0.08)
Length (states) of path with itp 'false':               188 (count: 444, min: 0, max: 1, avg: 0.42)
Different non-trivial interpolants along paths:          19 (count: 444, min: 0, max: 2, avg: 0.04)
Equal non-trivial interpolants along paths:               1 (count: 444, min: 0, max: 1, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                444
Number of successful refinements:     444
Number of failed refinements:         0
Max. size of reached set before ref.: 228640
Max. size of reached set after ref.:  228583
Avg. size of reached set before ref.: 152345.45
Avg. size of reached set after ref.:  151274.33

Total time for CEGAR algorithm:     895.982s
Time for refinements:               277.869s
Average time for refinement:          0.625s
Max time for refinement:              4.244s

Code Coverage
-----------------------------
  Function coverage:      0.681
  Visited lines:          1081
  Total lines:            1678
  Line coverage:          0.644
  Visited conditions:     616
  Total conditions:       724
  Condition coverage:     0.851

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             133285
  Number of reached locations:   1218 (55%)
    Avg states per location:     109
    Max states per location:     1564 (at node N39)
  Number of reached functions:   49 (68%)
  Number of partitions:          133260
    Avg size of partitions:      1
    Max size of partitions:      20 (with key [N2157 (before lines 2723-2751), Function cleanup called from node N584, stack depth 4 [5cff6d1d], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        46

Time for analysis setup:          4.297s
  Time for loading CPAs:          0.791s
  Time for loading parser:        0.782s
  Time for CFA construction:      2.541s
    Time for parsing file(s):     0.752s
    Time for AST to CFA:          0.737s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.632s
      Time for var class.:        0.361s
Time for Analysis:              895.982s
CPU time for analysis:          895.890s
Total time for CPAchecker:      900.283s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              1.585s

Time for Garbage Collector:      17.135s (in 314 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                656MB (   625 MiB) max;    412MB (   393 MiB) avg;    674MB (   642 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     36MB (    34 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:           671MB (   640 MiB) max;    608MB (   579 MiB) avg
Allocated non-heap memory:        38MB (    37 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8527MB (  8132 MiB) max;   8365MB (  7978 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
