scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product29_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_c3d9ol45/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 766: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 805: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 844: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 929: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1102: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1111: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1145: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1194: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1287: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1639: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1712: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1768: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1810: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2385: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2927: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2939: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3328: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3119: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            115 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            78 (68%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (32%)
  Times precision was empty:       86 (75%)
  Times precision was {false}:     22 (19%)
  Times result was cached:         1 (1%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6 (5%)
  Times result was 'false':        23 (20%)
Number of strengthen sat checks:   0
Number of coverage checks:         12585
  BDD entailment checks:           21
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3761
Number of predicates discovered:          16
Number of abstraction locations:          4
Max number of predicates per location:    12
Avg number of predicates per location:    4
Total predicates per abstraction:         29
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.04
Number of irrelevant predicates:          23 (79%)
Number of preds handled by boolean abs:   6 (21%)
  Total number of models for allsat:      7
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.17

Time for post operator:                  3.508s
  Time for path formula creation:        3.378s
Time for strengthen operator:            0.190s
Time for prec operator:                  5.111s
  Time for abstraction:                  4.897s (Max:     2.673s, Count: 115)
    Boolean abstraction:                 2.464s
    Solving time:                        3.127s (Max:     2.444s)
    Model enumeration time:              0.001s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.722s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     3.128s

Number of path formula cache hits:   285 (1%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.246s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          17 (count: 294, min: 0, max: 16, avg: 0.06)
Time for BDD node cleanup:                             0.001s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.403s
Automaton transfers with branching:                0
Automaton transfer successors:                        31073 (count: 31073, min: 1, max: 1, avg: 1.00) [1 x 31073]

CPA algorithm statistics
------------------------
Number of iterations:            22899
Max size of waitlist:            39
Average size of waitlist:        20
Number of computed successors:   29267
Max successors for one state:    2
Number of times merged:          6282
Number of times stopped:         6301
Number of times breaked:         23

Total time for CPA algorithm:        13.947s (Max:     3.365s)
  Time for choose from waitlist:      0.145s
  Time for precision adjustment:      5.919s
  Time for transfer relation:         5.596s
  Time for merge operator:            1.207s
  Time for stop operator:             0.205s
  Time for adding to reached set:     0.252s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   23
Avg. length of target path (in blocks):                  49 (count: 23, min: 1, max: 5, avg: 2.13)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.305s
  Counterexample analysis:                             8.809s (Max:     2.634s, Calls: 23)
    Refinement sat check:                              7.884s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.010s
  Precision update:                                    0.005s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      36 (count: 22, min: 1, max: 4, avg: 1.64)
Number of affected states:                                5 (count: 22, min: 0, max: 3, avg: 0.23)
Length (states) of path with itp 'true':                  9 (count: 22, min: 0, max: 2, avg: 0.41)
Length (states) of path with itp non-trivial itp:         5 (count: 22, min: 0, max: 3, avg: 0.23)
Length (states) of path with itp 'false':                 9 (count: 22, min: 0, max: 1, avg: 0.41)
Different non-trivial interpolants along paths:           3 (count: 22, min: 0, max: 2, avg: 0.14)
Equal non-trivial interpolants along paths:               0 (count: 22, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                23
Number of successful refinements:     22
Number of failed refinements:         0
Max. size of reached set before ref.: 22255
Max. size of reached set after ref.:  22127
Avg. size of reached set before ref.: 19217.17
Avg. size of reached set after ref.:  19047.77

Total time for CEGAR algorithm:      25.695s
Time for refinements:                11.281s
Average time for refinement:          0.490s
Max time for refinement:              2.748s

Code Coverage
-----------------------------
  Function coverage:      0.639
  Visited lines:          1020
  Total lines:            1678
  Line coverage:          0.608
  Visited conditions:     592
  Total conditions:       724
  Condition coverage:     0.818

CPAchecker general statistics
-----------------------------
Number of program locations:     2195
Number of CFA edges:             2675
Number of relevant variables:    307
Number of functions:             72
Number of loops:                 9
Size of reached set:             22112
  Number of reached locations:   1158 (53%)
    Avg states per location:     19
    Max states per location:     244 (at node N39)
  Number of reached functions:   46 (64%)
  Number of partitions:          22112
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        29

Time for analysis setup:          4.245s
  Time for loading CPAs:          0.840s
  Time for loading parser:        0.678s
  Time for CFA construction:      2.534s
    Time for parsing file(s):     0.761s
    Time for AST to CFA:          0.792s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.545s
      Time for var class.:        0.311s
Time for Analysis:               25.696s
CPU time for analysis:           25.700s
Total time for CPAchecker:       29.945s
Total CPU time for CPAchecker:   29.940s
Time for statistics:              0.652s

Time for Garbage Collector:       0.718s (in 42 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                110MB (   105 MiB) max;     69MB (    66 MiB) avg;    125MB (   120 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8160MB (  7782 MiB) max;   8105MB (  7730 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
