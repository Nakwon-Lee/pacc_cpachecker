scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_byttten0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 473: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1020: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1340: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1386: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1464: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1626: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1660: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1669: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1709: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1802: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2154: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2188: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2244: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2258: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3182: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3222: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3261: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3300: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3335: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1177: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            49 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            12 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         37 (76%)
  Times precision was empty:       10 (20%)
  Times precision was {false}:     28 (57%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      11 (22%)
  Times result was 'false':        28 (57%)
Number of strengthen sat checks:   0
Number of coverage checks:         32641
  BDD entailment checks:           55
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3291
Number of predicates discovered:          13
Number of abstraction locations:          2
Max number of predicates per location:    12
Avg number of predicates per location:    6
Total predicates per abstraction:         160
Max number of predicates per abstraction: 12
Avg number of predicates per abstraction: 4.10
Number of irrelevant predicates:          28 (18%)
Number of preds handled by boolean abs:   132 (83%)
  Total number of models for allsat:      269
  Max number of models for allsat:        42
  Avg number of models for allsat:        24.45

Time for post operator:                  5.043s
  Time for path formula creation:        4.889s
Time for strengthen operator:            0.254s
Time for prec operator:                 18.257s
  Time for abstraction:                 18.052s (Max:     1.714s, Count: 49)
    Boolean abstraction:                 9.040s
    Solving time:                        9.816s (Max:     1.395s)
    Model enumeration time:              5.867s
    Time for BDD construction:           0.071s (Max:     0.021s)
Time for merge operator:                 1.363s
Time for coverage check:                 0.028s
  Time for BDD entailment checks:        0.001s
Total time for SMT solver (w/o itp):    15.683s

Number of path formula cache hits:   6331 (8%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.726s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               2411
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         636 (count: 560, min: 0, max: 119, avg: 1.14)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.584s
  Time for transition matches:                         0.283s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                        78491 (count: 78491, min: 1, max: 1, avg: 1.00) [1 x 78491]

CPA algorithm statistics
------------------------
Number of iterations:            58794
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   75119
Max successors for one state:    2
Number of times merged:          16293
Number of times stopped:         16294
Number of times breaked:         9

Total time for CPA algorithm:        31.881s (Max:    21.012s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:     19.457s
  Time for transfer relation:         7.976s
  Time for merge operator:            2.525s
  Time for stop operator:             0.324s
  Time for adding to reached set:     0.395s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.245s
  Counterexample analysis:                             6.025s (Max:     2.253s, Calls: 9)
    Refinement sat check:                              5.623s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.007s
  Precision update:                                    0.012s
  ARG update:                                          0.029s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 19380
Max. size of reached set after ref.:  15453
Avg. size of reached set before ref.: 10742.44
Avg. size of reached set after ref.:  10305.22

Total time for CEGAR algorithm:      38.983s
Time for refinements:                 6.987s
Average time for refinement:          0.776s
Max time for refinement:              2.491s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          1054
  Total lines:            1693
  Line coverage:          0.623
  Visited conditions:     592
  Total conditions:       748
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     2215
Number of CFA edges:             2708
Number of relevant variables:    284
Number of functions:             69
Number of loops:                 9
Size of reached set:             54863
  Number of reached locations:   1151 (52%)
    Avg states per location:     47
    Max states per location:     344 (at node N270)
  Number of reached functions:   43 (62%)
  Number of partitions:          54854
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N2374 (before lines 2978-3006), Function cleanup called from node N6, stack depth 4 [68f79b7c], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.178s
  Time for loading CPAs:          0.820s
  Time for loading parser:        0.732s
  Time for CFA construction:      2.456s
    Time for parsing file(s):     0.681s
    Time for AST to CFA:          0.719s
    Time for CFA sanity check:    0.275s
    Time for post-processing:     0.623s
      Time for var class.:        0.324s
Time for Analysis:               38.986s
CPU time for analysis:           38.980s
Time for analyzing result:        0.044s
Total time for CPAchecker:       43.169s
Total CPU time for CPAchecker:   43.150s
Time for statistics:              0.721s

Time for Garbage Collector:       1.225s (in 45 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                121MB (   115 MiB) max;     71MB (    67 MiB) avg;    137MB (   131 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           152MB (   145 MiB) max;    131MB (   125 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8157MB (  7779 MiB) max;   8122MB (  7746 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
