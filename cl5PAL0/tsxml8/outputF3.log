scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1by_qghw/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 604: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 638: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 647: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 687: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 767: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 780: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1251: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1282: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1296: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1868: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1879: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1903: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1926: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2348: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2394: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3098: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3409: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2185: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            173 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            37 (21%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         136 (79%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     135 (78%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      35 (20%)
  Times result was 'false':        130 (75%)
Number of strengthen sat checks:   0
Number of coverage checks:         64353
  BDD entailment checks:           177
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       907
Number of predicates discovered:          58
Number of abstraction locations:          2
Max number of predicates per location:    58
Avg number of predicates per location:    29
Total predicates per abstraction:         1708
Max number of predicates per abstraction: 58
Avg number of predicates per abstraction: 10.05
Number of irrelevant predicates:          158 (9%)
Number of preds handled by boolean abs:   1550 (91%)
  Total number of models for allsat:      42559
  Max number of models for allsat:        4720
  Avg number of models for allsat:        1215.97

Time for post operator:                  5.091s
  Time for path formula creation:        4.883s
Time for strengthen operator:            0.312s
Time for prec operator:                264.502s
  Time for abstraction:                264.187s (Max:    29.205s, Count: 173)
    Boolean abstraction:               260.122s
    Solving time:                        9.072s (Max:     0.373s)
    Model enumeration time:            244.312s
    Time for BDD construction:           8.059s (Max:     0.906s)
Time for merge operator:                 1.413s
Time for coverage check:                 0.084s
  Time for BDD entailment checks:        0.066s
Total time for SMT solver (w/o itp):   253.384s

Number of path formula cache hits:   78855 (46%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.627s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               29804
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       29678 (count: 13163, min: 0, max: 4777, avg: 2.25)
Time for BDD node cleanup:                             0.017s
Time for BDD garbage collection:                       0.218s (in 34 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.450s
Automaton transfers with branching:                0
Automaton transfer successors:                       156538 (count: 156538, min: 1, max: 1, avg: 1.00) [1 x 156538]

CPA algorithm statistics
------------------------
Number of iterations:            116138
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   148368
Max successors for one state:    2
Number of times merged:          32088
Number of times stopped:         32091
Number of times breaked:         6

Total time for CPA algorithm:       279.549s (Max:   259.539s)
  Time for choose from waitlist:      0.168s
  Time for precision adjustment:    266.479s
  Time for transfer relation:         8.503s
  Time for merge operator:            2.274s
  Time for stop operator:             0.530s
  Time for adding to reached set:     0.498s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.361s
  Counterexample analysis:                             3.960s (Max:     1.119s, Calls: 6)
    Refinement sat check:                              3.561s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.004s
  ARG update:                                          0.265s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 18906
Max. size of reached set after ref.:  3936
Avg. size of reached set before ref.: 12030.00
Avg. size of reached set after ref.:  3936.00

Total time for CEGAR algorithm:     284.353s
Time for refinements:                 4.741s
Average time for refinement:          0.790s
Max time for refinement:              1.294s

Code Coverage
-----------------------------
  Function coverage:      0.608
  Visited lines:          1025
  Total lines:            1718
  Line coverage:          0.597
  Visited conditions:     600
  Total conditions:       756
  Condition coverage:     0.794

CPAchecker general statistics
-----------------------------
Number of program locations:     2256
Number of CFA edges:             2749
Number of relevant variables:    300
Number of functions:             74
Number of loops:                 9
Size of reached set:             67584
  Number of reached locations:   1157 (51%)
    Avg states per location:     58
    Max states per location:     535 (at node N2152)
  Number of reached functions:   45 (61%)
  Number of partitions:          67568
    Avg size of partitions:      1
    Max size of partitions:      17 (with key [N1975 (before lines 2541-2569), Function cleanup called from node N115, stack depth 4 [c1a4620], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.339s
  Time for loading CPAs:          0.866s
  Time for loading parser:        0.696s
  Time for CFA construction:      2.573s
    Time for parsing file(s):     0.756s
    Time for AST to CFA:          0.739s
    Time for CFA sanity check:    0.280s
    Time for post-processing:     0.598s
      Time for var class.:        0.335s
Time for Analysis:              284.354s
CPU time for analysis:          284.310s
Time for analyzing result:        0.063s
Total time for CPAchecker:      288.699s
Total CPU time for CPAchecker:  288.650s
Time for statistics:              1.045s

Time for Garbage Collector:       1.564s (in 81 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                139MB (   133 MiB) max;     97MB (    93 MiB) avg;    144MB (   137 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           161MB (   153 MiB) max;    151MB (   144 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8146MB (  7768 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
