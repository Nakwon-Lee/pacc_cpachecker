scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product23_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_2sf7eivn/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 237: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 260: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 381: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 617: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 928: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1294: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1652: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1846: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1885: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1962: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2119: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2162: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2171: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2211: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2291: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2304: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2656: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2725: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2759: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2815: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3460: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3471: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3480: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1085: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            246 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            59 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         187 (76%)
  Times precision was empty:       3 (1%)
  Times precision was {false}:     186 (76%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      57 (23%)
  Times result was 'false':        173 (70%)
Number of strengthen sat checks:   0
Number of coverage checks:         141518
  BDD entailment checks:           110
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       983
Number of predicates discovered:          188
Number of abstraction locations:          2
Max number of predicates per location:    188
Avg number of predicates per location:    94
Total predicates per abstraction:         5468
Max number of predicates per abstraction: 188
Avg number of predicates per abstraction: 22.50
Number of irrelevant predicates:          232 (4%)
Number of preds handled by boolean abs:   5236 (96%)
  Total number of models for allsat:      33091
  Max number of models for allsat:        6486
  Avg number of models for allsat:        580.54

Time for post operator:                  4.436s
  Time for path formula creation:        4.121s
Time for strengthen operator:            0.503s
Time for prec operator:                841.857s
  Time for abstraction:                841.125s (Max:   275.003s, Count: 246)
    Boolean abstraction:               836.063s
    Solving time:                       16.168s (Max:     0.546s)
    Model enumeration time:            797.584s
    Time for BDD construction:          22.999s (Max:     5.023s)
Time for merge operator:                 1.149s
Time for coverage check:                 0.104s
  Time for BDD entailment checks:        0.073s
Total time for SMT solver (w/o itp):   813.753s

Number of path formula cache hits:   341562 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.741s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               217980
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                      121497 (count: 50429, min: 0, max: 14844, avg: 2.41)
Time for BDD node cleanup:                             0.043s
Time for BDD garbage collection:                       0.745s (in 205 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.724s
  Time for transition matches:                         0.307s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       344846 (count: 344846, min: 1, max: 1, avg: 1.00) [1 x 344846]

CPA algorithm statistics
------------------------
Number of iterations:            254495
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   325401
Max successors for one state:    2
Number of times merged:          70704
Number of times stopped:         70706
Number of times breaked:         14

Total time for CPA algorithm:       859.797s (Max:   417.677s)
  Time for choose from waitlist:      0.229s
  Time for precision adjustment:    844.903s
  Time for transfer relation:         9.487s
  Time for merge operator:            2.427s
  Time for stop operator:             0.539s
  Time for adding to reached set:     0.668s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   14
Avg. length of target path (in blocks):                  55 (count: 14, min: 2, max: 8, avg: 3.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  34.969s
  Counterexample analysis:                            33.978s (Max:     9.726s, Calls: 14)
    Refinement sat check:                             30.363s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.081s
  Precision update:                                    0.009s
  ARG update:                                          0.656s

Length of refined path (in blocks):                      55 (count: 14, min: 2, max: 8, avg: 3.93)
Number of affected states:                               41 (count: 14, min: 1, max: 7, avg: 2.93)
Length (states) of path with itp 'true':                  0 (count: 14, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        41 (count: 14, min: 1, max: 7, avg: 2.93)
Length (states) of path with itp 'false':                 0 (count: 14, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          27 (count: 14, min: 0, max: 6, avg: 1.93)
Equal non-trivial interpolants along paths:               0 (count: 14, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                14
Number of successful refinements:     14
Number of failed refinements:         0
Max. size of reached set before ref.: 45280
Max. size of reached set after ref.:  5657
Avg. size of reached set before ref.: 22222.43
Avg. size of reached set after ref.:  5657.00

Total time for CEGAR algorithm:     896.153s
Time for refinements:                36.285s
Average time for refinement:          2.591s
Max time for refinement:             10.021s

Code Coverage
-----------------------------
  Function coverage:      0.623
  Visited lines:          1073
  Total lines:            1752
  Line coverage:          0.612
  Visited conditions:     614
  Total conditions:       760
  Condition coverage:     0.808

CPAchecker general statistics
-----------------------------
Number of program locations:     2297
Number of CFA edges:             2797
Number of relevant variables:    322
Number of functions:             77
Number of loops:                 9
Size of reached set:             22606
  Number of reached locations:   1194 (52%)
    Avg states per location:     18
    Max states per location:     275 (at node N200)
  Number of reached functions:   48 (62%)
  Number of partitions:          22604
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N1145 (before lines 1446-1474), Function cleanup called from node N1364, stack depth 4 [10b3df93], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.218s
  Time for loading CPAs:          0.784s
  Time for loading parser:        0.720s
  Time for CFA construction:      2.529s
    Time for parsing file(s):     0.656s
    Time for AST to CFA:          0.757s
    Time for CFA sanity check:    0.273s
    Time for post-processing:     0.664s
      Time for var class.:        0.373s
Time for Analysis:              896.153s
CPU time for analysis:          896.040s
Total time for CPAchecker:      900.375s
Total CPU time for CPAchecker:  900.260s
Time for statistics:              0.381s

Time for Garbage Collector:       2.764s (in 149 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                170MB (   162 MiB) max;    112MB (   106 MiB) avg;    177MB (   169 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           177MB (   168 MiB) max;    166MB (   158 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8532MB (  8137 MiB) max;   8296MB (  7912 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
