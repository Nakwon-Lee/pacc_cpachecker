scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_nbtlunae/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3163: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            107 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            72 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         35 (33%)
  Times precision was empty:       88 (82%)
  Times precision was {false}:     19 (18%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        19 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         44698
  BDD entailment checks:           2
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3794
Number of predicates discovered:          1
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         19
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          19 (100%)

Time for post operator:                  6.941s
  Time for path formula creation:        6.757s
Time for strengthen operator:            0.321s
Time for prec operator:                  2.997s
  Time for abstraction:                  2.691s (Max:     0.452s, Count: 107)
    Solving time:                        1.070s (Max:     0.184s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 2.028s
Time for coverage check:                 0.008s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     1.070s

Number of path formula cache hits:   32 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.593s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 206, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.603s
  Time for transition matches:                         0.230s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       107900 (count: 107900, min: 1, max: 1, avg: 1.00) [1 x 107900]

CPA algorithm statistics
------------------------
Number of iterations:            79668
Max size of waitlist:            74
Average size of waitlist:        35
Number of computed successors:   102113
Max successors for one state:    2
Number of times merged:          22348
Number of times stopped:         22350
Number of times breaked:         19

Total time for CPA algorithm:        20.482s (Max:     5.070s)
  Time for choose from waitlist:      0.218s
  Time for precision adjustment:      4.545s
  Time for transfer relation:        10.603s
  Time for merge operator:            3.109s
  Time for stop operator:             0.370s
  Time for adding to reached set:     0.420s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   19
Avg. length of target path (in blocks):                  30 (count: 19, min: 1, max: 2, avg: 1.58)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.896s
  Counterexample analysis:                             1.467s (Max:     0.233s, Calls: 19)
    Refinement sat check:                              1.283s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.011s
  ARG update:                                          0.004s

Length of refined path (in blocks):                      27 (count: 19, min: 1, max: 2, avg: 1.42)
Number of affected states:                                0 (count: 19, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  8 (count: 19, min: 0, max: 1, avg: 0.42)
Length (states) of path with itp non-trivial itp:         0 (count: 19, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 3 (count: 19, min: 0, max: 1, avg: 0.16)
Different non-trivial interpolants along paths:           0 (count: 19, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 19, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                19
Number of successful refinements:     19
Number of failed refinements:         0
Max. size of reached set before ref.: 75457
Max. size of reached set after ref.:  75440
Avg. size of reached set before ref.: 48238.42
Avg. size of reached set after ref.:  48231.00

Total time for CEGAR algorithm:      25.173s
Time for refinements:                 3.744s
Average time for refinement:          0.197s
Max time for refinement:              0.365s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          1034
  Total lines:            1697
  Line coverage:          0.609
  Visited conditions:     596
  Total conditions:       730
  Condition coverage:     0.816

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2712
Number of relevant variables:    312
Number of functions:             74
Number of loops:                 9
Size of reached set:             79603
  Number of reached locations:   1175 (53%)
    Avg states per location:     67
    Max states per location:     887 (at node N150)
  Number of reached functions:   48 (65%)
  Number of partitions:          79603
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        69

Time for analysis setup:          4.581s
  Time for loading CPAs:          0.963s
  Time for loading parser:        0.701s
  Time for CFA construction:      2.723s
    Time for parsing file(s):     0.730s
    Time for AST to CFA:          0.881s
    Time for CFA sanity check:    0.264s
    Time for post-processing:     0.638s
      Time for var class.:        0.348s
Time for Analysis:               25.173s
CPU time for analysis:           25.180s
Total time for CPAchecker:       29.758s
Total CPU time for CPAchecker:   29.760s
Time for statistics:              1.050s

Time for Garbage Collector:       1.543s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                158MB (   151 MiB) max;     72MB (    68 MiB) avg;    164MB (   157 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           186MB (   178 MiB) max;    140MB (   133 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8091MB (  7717 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
