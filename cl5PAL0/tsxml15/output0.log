scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product30_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_pvxtf3ie/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 513: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 824: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1446: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1628: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1662: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1711: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1791: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1804: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2195: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2229: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2285: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2959: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2982: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3163: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            98 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            66 (67%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         32 (33%)
  Times precision was empty:       82 (84%)
  Times precision was {false}:     16 (16%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      0 (0%)
  Times result was 'false':        16 (16%)
Number of strengthen sat checks:   0
Number of coverage checks:         42355
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3794
Number of predicates discovered:          1
Number of abstraction locations:          2
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         16
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.00
Number of irrelevant predicates:          16 (100%)

Time for post operator:                  7.221s
  Time for path formula creation:        6.957s
Time for strengthen operator:            0.248s
Time for prec operator:                  3.179s
  Time for abstraction:                  2.922s (Max:     0.445s, Count: 98)
    Solving time:                        0.979s (Max:     0.162s)
    Model enumeration time:              0.000s
    Time for BDD construction:           0.000s (Max:     0.000s)
Time for merge operator:                 1.800s
Time for coverage check:                 0.004s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.979s

Number of path formula cache hits:   16 (0%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.679s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           0 (count: 181, min: 0, max: 0, avg: 0.00)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.716s
  Time for transition matches:                         0.307s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       102183 (count: 102183, min: 1, max: 1, avg: 1.00) [1 x 102183]

CPA algorithm statistics
------------------------
Number of iterations:            75419
Max size of waitlist:            65
Average size of waitlist:        33
Number of computed successors:   96677
Max successors for one state:    2
Number of times merged:          21177
Number of times stopped:         21178
Number of times breaked:         17

Total time for CPA algorithm:        21.170s (Max:     5.277s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:      4.849s
  Time for transfer relation:        11.264s
  Time for merge operator:            2.780s
  Time for stop operator:             0.382s
  Time for adding to reached set:     0.510s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   17
Avg. length of target path (in blocks):                  26 (count: 17, min: 1, max: 2, avg: 1.53)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.722s
  Counterexample analysis:                             1.259s (Max:     0.238s, Calls: 17)
    Refinement sat check:                              1.102s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.000s
  Precision update:                                    0.004s
  ARG update:                                          0.010s

Length of refined path (in blocks):                      23 (count: 16, min: 1, max: 2, avg: 1.44)
Number of affected states:                                0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'true':                  7 (count: 16, min: 0, max: 1, avg: 0.44)
Length (states) of path with itp non-trivial itp:         0 (count: 16, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp 'false':                 1 (count: 16, min: 0, max: 1, avg: 0.06)
Different non-trivial interpolants along paths:           0 (count: 16, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 16, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                17
Number of successful refinements:     16
Number of failed refinements:         0
Max. size of reached set before ref.: 75427
Max. size of reached set after ref.:  75395
Avg. size of reached set before ref.: 45037.18
Avg. size of reached set after ref.:  43134.25

Total time for CEGAR algorithm:      25.467s
Time for refinements:                 3.617s
Average time for refinement:          0.212s
Max time for refinement:              0.395s

Code Coverage
-----------------------------
  Function coverage:      0.649
  Visited lines:          1034
  Total lines:            1697
  Line coverage:          0.609
  Visited conditions:     596
  Total conditions:       730
  Condition coverage:     0.816

CPAchecker general statistics
-----------------------------
Number of program locations:     2226
Number of CFA edges:             2712
Number of relevant variables:    312
Number of functions:             74
Number of loops:                 9
Size of reached set:             75427
  Number of reached locations:   1176 (53%)
    Avg states per location:     64
    Max states per location:     854 (at node N150)
  Number of reached functions:   48 (65%)
  Number of partitions:          75427
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       1
  Size of final wait list        60

Time for analysis setup:          4.303s
  Time for loading CPAs:          0.840s
  Time for loading parser:        0.660s
  Time for CFA construction:      2.564s
    Time for parsing file(s):     0.697s
    Time for AST to CFA:          0.775s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.653s
      Time for var class.:        0.375s
Time for Analysis:               25.467s
CPU time for analysis:           25.470s
Total time for CPAchecker:       29.774s
Total CPU time for CPAchecker:   29.770s
Time for statistics:              0.887s

Time for Garbage Collector:       1.553s (in 59 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                148MB (   141 MiB) max;     69MB (    66 MiB) avg;    161MB (   153 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           197MB (   188 MiB) max;    136MB (   130 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8090MB (  7715 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
