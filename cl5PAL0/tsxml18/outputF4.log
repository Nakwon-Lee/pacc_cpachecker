scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec13_product24_true-unreach-call_false-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_iar6gxok/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 518: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 671: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 680: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 714: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 723: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 763: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 843: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 856: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1208: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1248: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1277: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1311: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1367: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1426: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1440: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2062: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2073: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2436: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2650: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2886: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3197: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3365: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3404: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3416: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 192: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            2612 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            1828 (70%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         784 (30%)
  Times precision was empty:       1723 (66%)
  Times precision was {false}:     350 (13%)
  Times result was cached:         201 (8%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      338 (13%)
  Times result was 'false':        731 (28%)
Number of strengthen sat checks:   0
Number of coverage checks:         678106
  BDD entailment checks:           886
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3459
Number of predicates discovered:          35
Number of abstraction locations:          5
Max number of predicates per location:    23
Avg number of predicates per location:    12
Total predicates per abstraction:         3988
Max number of predicates per abstraction: 16
Avg number of predicates per abstraction: 5.80
Number of irrelevant predicates:          573 (14%)
Number of preds handled by boolean abs:   3336 (84%)
  Total number of models for allsat:      4229
  Max number of models for allsat:        120
  Avg number of models for allsat:        12.51

Time for post operator:                 36.270s
  Time for path formula creation:       35.068s
Time for strengthen operator:            1.739s
Time for prec operator:                225.161s
  Time for abstraction:                223.288s (Max:     7.579s, Count: 2612)
    Boolean abstraction:               181.216s
    Solving time:                       58.915s (Max:     4.228s)
    Model enumeration time:            132.613s
    Time for BDD construction:           0.309s (Max:     0.013s)
Time for merge operator:                10.963s
Time for coverage check:                 0.081s
  Time for BDD entailment checks:        0.012s
Total time for SMT solver (w/o itp):   191.530s

Number of path formula cache hits:   561108 (32%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.085s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               13457
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3827 (count: 8134, min: 0, max: 584, avg: 0.47)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.932s
  Time for transition matches:                         1.314s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.012s
Automaton transfers with branching:                0
Automaton transfer successors:                      1647925 (count: 1647925, min: 1, max: 1, avg: 1.00) [1 x 1647925]

CPA algorithm statistics
------------------------
Number of iterations:            1218529
Max size of waitlist:            274
Average size of waitlist:        136
Number of computed successors:   1559137
Max successors for one state:    2
Number of times merged:          338610
Number of times stopped:         339009
Number of times breaked:         443

Total time for CPA algorithm:       326.324s (Max:   197.497s)
  Time for choose from waitlist:      0.789s
  Time for precision adjustment:    240.758s
  Time for transfer relation:        57.491s
  Time for merge operator:           16.481s
  Time for stop operator:             2.056s
  Time for adding to reached set:     3.647s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   443
Avg. length of target path (in blocks):                1602 (count: 443, min: 1, max: 7, avg: 3.62)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 271.379s
  Counterexample analysis:                           257.329s (Max:     3.782s, Calls: 443)
    Refinement sat check:                            218.677s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.022s
  Precision update:                                    0.084s
  ARG update:                                          2.717s

Length of refined path (in blocks):                    1372 (count: 443, min: 1, max: 6, avg: 3.10)
Number of affected states:                               30 (count: 443, min: 0, max: 3, avg: 0.07)
Length (states) of path with itp 'true':                899 (count: 443, min: 0, max: 5, avg: 2.03)
Length (states) of path with itp non-trivial itp:        30 (count: 443, min: 0, max: 3, avg: 0.07)
Length (states) of path with itp 'false':               188 (count: 443, min: 0, max: 1, avg: 0.42)
Different non-trivial interpolants along paths:          16 (count: 443, min: 0, max: 2, avg: 0.04)
Equal non-trivial interpolants along paths:               2 (count: 443, min: 0, max: 1, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                443
Number of successful refinements:     443
Number of failed refinements:         0
Max. size of reached set before ref.: 445694
Max. size of reached set after ref.:  445637
Avg. size of reached set before ref.: 297296.92
Avg. size of reached set after ref.:  295231.96

Total time for CEGAR algorithm:     895.858s
Time for refinements:               436.840s
Average time for refinement:          0.986s
Max time for refinement:              4.138s

Code Coverage
-----------------------------
  Function coverage:      0.675
  Visited lines:          1095
  Total lines:            1721
  Line coverage:          0.636
  Visited conditions:     612
  Total conditions:       734
  Condition coverage:     0.834

CPAchecker general statistics
-----------------------------
Number of program locations:     2257
Number of CFA edges:             2748
Number of relevant variables:    324
Number of functions:             77
Number of loops:                 9
Size of reached set:             304618
  Number of reached locations:   1230 (54%)
    Avg states per location:     247
    Max states per location:     3760 (at node N1959)
  Number of reached functions:   52 (68%)
  Number of partitions:          304579
    Avg size of partitions:      1
    Max size of partitions:      24 (with key [N1706 (before lines 2232-2260), Function cleanup called from node N306, stack depth 4 [3a5beb51], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        67

Time for analysis setup:          4.431s
  Time for loading CPAs:          0.813s
  Time for loading parser:        0.782s
  Time for CFA construction:      2.612s
    Time for parsing file(s):     0.736s
    Time for AST to CFA:          0.780s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.629s
      Time for var class.:        0.356s
Time for Analysis:              895.858s
CPU time for analysis:          895.790s
Total time for CPAchecker:      900.294s
Total CPU time for CPAchecker:  900.220s
Time for statistics:              2.957s

Time for Garbage Collector:      32.261s (in 329 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1292MB (  1232 MiB) max;    689MB (   657 MiB) avg;   1368MB (  1304 MiB) peak
Used non-heap memory:             37MB (    35 MiB) max;     35MB (    33 MiB) avg;     38MB (    36 MiB) peak
Allocated heap memory:          1492MB (  1423 MiB) max;   1031MB (   983 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8817MB (  8408 MiB) max;   8473MB (  8081 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
