scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product17_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_0o3m_qed/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 794: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 833: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 848: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 871: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1324: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1559: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1568: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1602: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1611: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1651: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1731: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1744: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2096: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2130: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2200: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2773: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3274: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3111: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            192 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            47 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         145 (76%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     144 (75%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      45 (23%)
  Times result was 'false':        134 (70%)
Number of strengthen sat checks:   0
Number of coverage checks:         74435
  BDD entailment checks:           77
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       886
Number of predicates discovered:          95
Number of abstraction locations:          2
Max number of predicates per location:    95
Avg number of predicates per location:    48
Total predicates per abstraction:         2445
Max number of predicates per abstraction: 95
Avg number of predicates per abstraction: 12.94
Number of irrelevant predicates:          150 (6%)
Number of preds handled by boolean abs:   2295 (94%)
  Total number of models for allsat:      695
  Max number of models for allsat:        120
  Avg number of models for allsat:        15.44

Time for post operator:                  3.695s
  Time for path formula creation:        3.445s
Time for strengthen operator:            0.336s
Time for prec operator:                 24.936s
  Time for abstraction:                 24.571s (Max:     2.221s, Count: 192)
    Boolean abstraction:                21.763s
    Solving time:                        9.573s (Max:     0.448s)
    Model enumeration time:             12.237s
    Time for BDD construction:           0.230s (Max:     0.035s)
Time for merge operator:                 0.847s
Time for coverage check:                 0.043s
  Time for BDD entailment checks:        0.018s
Total time for SMT solver (w/o itp):    21.810s

Number of path formula cache hits:   167218 (80%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.204s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               122822
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       21969 (count: 10073, min: 0, max: 1790, avg: 2.18)
Time for BDD node cleanup:                             0.013s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.656s
  Time for transition matches:                         0.266s
  Time for transition assertions:                      0.005s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       179728 (count: 179728, min: 1, max: 1, avg: 1.00) [1 x 179728]

CPA algorithm statistics
------------------------
Number of iterations:            134734
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   172070
Max successors for one state:    2
Number of times merged:          37179
Number of times stopped:         37181
Number of times breaked:         12

Total time for CPA algorithm:        38.199s (Max:     5.018s)
  Time for choose from waitlist:      0.181s
  Time for precision adjustment:     26.561s
  Time for transfer relation:         7.778s
  Time for merge operator:            1.713s
  Time for stop operator:             0.431s
  Time for adding to reached set:     0.448s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  41 (count: 12, min: 2, max: 8, avg: 3.42)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  12.346s
  Counterexample analysis:                            11.640s (Max:     3.801s, Calls: 12)
    Refinement sat check:                             10.472s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.040s
  Precision update:                                    0.018s
  ARG update:                                          0.456s

Length of refined path (in blocks):                      39 (count: 12, min: 2, max: 6, avg: 3.25)
Number of affected states:                               27 (count: 12, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        27 (count: 12, min: 1, max: 5, avg: 2.25)
Length (states) of path with itp 'false':                 1 (count: 12, min: 0, max: 1, avg: 0.08)
Different non-trivial interpolants along paths:          15 (count: 12, min: 0, max: 4, avg: 1.25)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 30832
Max. size of reached set after ref.:  3851
Avg. size of reached set before ref.: 13153.08
Avg. size of reached set after ref.:  3851.00

Total time for CEGAR algorithm:      51.624s
Time for refinements:                13.374s
Average time for refinement:          1.114s
Max time for refinement:              4.471s

Code Coverage
-----------------------------
  Function coverage:      0.592
  Visited lines:          991
  Total lines:            1685
  Line coverage:          0.588
  Visited conditions:     592
  Total conditions:       748
  Condition coverage:     0.791

CPAchecker general statistics
-----------------------------
Number of program locations:     2212
Number of CFA edges:             2697
Number of relevant variables:    282
Number of functions:             71
Number of loops:                 9
Size of reached set:             23131
  Number of reached locations:   1129 (51%)
    Avg states per location:     20
    Max states per location:     151 (at node N39)
  Number of reached functions:   42 (59%)
  Number of partitions:          23127
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N897 (before lines 1118-1146), Function cleanup called from node N2636, stack depth 4 [66d23e4a], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.539s
  Time for loading CPAs:          0.884s
  Time for loading parser:        0.776s
  Time for CFA construction:      2.694s
    Time for parsing file(s):     0.761s
    Time for AST to CFA:          0.785s
    Time for CFA sanity check:    0.266s
    Time for post-processing:     0.667s
      Time for var class.:        0.368s
Time for Analysis:               51.624s
CPU time for analysis:           51.620s
Time for analyzing result:        0.022s
Total time for CPAchecker:       56.168s
Total CPU time for CPAchecker:   56.160s
Time for statistics:              0.454s

Time for Garbage Collector:       1.507s (in 61 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                179MB (   170 MiB) max;     70MB (    67 MiB) avg;    191MB (   182 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           226MB (   215 MiB) max;    139MB (   132 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8236MB (  7855 MiB) max;   8119MB (  7743 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
