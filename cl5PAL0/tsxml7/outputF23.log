scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product11_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6xza21jh/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 492: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 858: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1033: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1056: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1098: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1137: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1176: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1270: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1423: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1432: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1466: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1595: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1608: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1960: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2079: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2110: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2124: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2696: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2707: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2716: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2830: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3066: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3377: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 649: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            162 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            41 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         121 (75%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     120 (74%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      39 (24%)
  Times result was 'false':        111 (69%)
Number of strengthen sat checks:   0
Number of coverage checks:         64036
  BDD entailment checks:           58
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       899
Number of predicates discovered:          99
Number of abstraction locations:          2
Max number of predicates per location:    99
Avg number of predicates per location:    50
Total predicates per abstraction:         2088
Max number of predicates per abstraction: 99
Avg number of predicates per abstraction: 13.13
Number of irrelevant predicates:          126 (6%)
Number of preds handled by boolean abs:   1962 (94%)
  Total number of models for allsat:      2797
  Max number of models for allsat:        1908
  Avg number of models for allsat:        71.72

Time for post operator:                  3.292s
  Time for path formula creation:        3.062s
Time for strengthen operator:            0.373s
Time for prec operator:                 35.468s
  Time for abstraction:                 35.193s (Max:    14.062s, Count: 162)
    Boolean abstraction:                32.572s
    Solving time:                        9.542s (Max:     0.478s)
    Model enumeration time:             22.712s
    Time for BDD construction:           0.600s (Max:     0.238s)
Time for merge operator:                 0.763s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.039s
Total time for SMT solver (w/o itp):    32.254s

Number of path formula cache hits:   150173 (83%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.851s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202553
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       24956 (count: 11131, min: 0, max: 3688, avg: 2.24)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.079s (in 1 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.490s
Automaton transfers with branching:                0
Automaton transfer successors:                       155883 (count: 155883, min: 1, max: 1, avg: 1.00) [1 x 155883]

CPA algorithm statistics
------------------------
Number of iterations:            115767
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   147888
Max successors for one state:    2
Number of times merged:          31989
Number of times stopped:         31991
Number of times breaked:         11

Total time for CPA algorithm:        47.353s (Max:    18.688s)
  Time for choose from waitlist:      0.193s
  Time for precision adjustment:     37.011s
  Time for transfer relation:         6.546s
  Time for merge operator:            1.663s
  Time for stop operator:             0.394s
  Time for adding to reached set:     0.447s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  35 (count: 11, min: 2, max: 6, avg: 3.18)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  10.803s
  Counterexample analysis:                            10.266s (Max:     2.793s, Calls: 11)
    Refinement sat check:                              9.292s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.030s
  Precision update:                                    0.007s
  ARG update:                                          0.367s

Length of refined path (in blocks):                      35 (count: 11, min: 2, max: 6, avg: 3.18)
Number of affected states:                               24 (count: 11, min: 1, max: 5, avg: 2.18)
Length (states) of path with itp 'true':                  0 (count: 11, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        24 (count: 11, min: 1, max: 5, avg: 2.18)
Length (states) of path with itp 'false':                 0 (count: 11, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          13 (count: 11, min: 0, max: 4, avg: 1.18)
Equal non-trivial interpolants along paths:               0 (count: 11, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 23170
Max. size of reached set after ref.:  3861
Avg. size of reached set before ref.: 12278.82
Avg. size of reached set after ref.:  3861.00

Total time for CEGAR algorithm:      59.063s
Time for refinements:                11.656s
Average time for refinement:          1.059s
Max time for refinement:              3.145s

Code Coverage
-----------------------------
  Function coverage:      0.595
  Visited lines:          1012
  Total lines:            1709
  Line coverage:          0.592
  Visited conditions:     594
  Total conditions:       750
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     2244
Number of CFA edges:             2730
Number of relevant variables:    297
Number of functions:             74
Number of loops:                 9
Size of reached set:             23191
  Number of reached locations:   1143 (51%)
    Avg states per location:     20
    Max states per location:     175 (at node N2134)
  Number of reached functions:   44 (59%)
  Number of partitions:          23187
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N178 (before lines 283-311), Function cleanup called from node N877, stack depth 4 [547e29a4], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.463s
  Time for loading CPAs:          0.877s
  Time for loading parser:        0.842s
  Time for CFA construction:      2.540s
    Time for parsing file(s):     0.804s
    Time for AST to CFA:          0.709s
    Time for CFA sanity check:    0.253s
    Time for post-processing:     0.554s
      Time for var class.:        0.315s
Time for Analysis:               59.063s
CPU time for analysis:           59.050s
Time for analyzing result:        0.020s
Total time for CPAchecker:       63.530s
Total CPU time for CPAchecker:   63.500s
Time for statistics:              0.504s

Time for Garbage Collector:       1.213s (in 56 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                116MB (   111 MiB) max;     62MB (    59 MiB) avg;    138MB (   131 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     34MB (    32 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           144MB (   138 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8221MB (  7840 MiB) max;   8100MB (  7725 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
