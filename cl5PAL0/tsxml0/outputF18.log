scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product29_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_yyq42ucj/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 392: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 703: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 718: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 741: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1061: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1249: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1288: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1327: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1884: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1968: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2141: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2150: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2184: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2233: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2313: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2326: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2678: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2717: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2751: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2807: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2835: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2849: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3422: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 898: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            22 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            3 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         19 (86%)
  Times precision was empty:       10 (45%)
  Times precision was {false}:     10 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2 (9%)
  Times result was 'false':        10 (45%)
Number of strengthen sat checks:   0
Number of coverage checks:         19135
  BDD entailment checks:           1
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       4005
Number of predicates discovered:          3
Number of abstraction locations:          2
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         14
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 1.17
Number of irrelevant predicates:          10 (71%)
Number of preds handled by boolean abs:   4 (29%)
  Total number of models for allsat:      4
  Max number of models for allsat:        2
  Avg number of models for allsat:        2.00

Time for post operator:                  4.074s
  Time for path formula creation:        3.943s
Time for strengthen operator:            0.199s
Time for prec operator:                 11.791s
  Time for abstraction:                 11.613s (Max:     5.871s, Count: 22)
    Boolean abstraction:                 5.968s
    Solving time:                        9.165s (Max:     4.590s)
    Model enumeration time:              1.009s
    Time for BDD construction:           0.002s (Max:     0.002s)
Time for merge operator:                 0.971s
Time for coverage check:                 0.011s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):    10.174s

Number of path formula cache hits:   9370 (20%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.845s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               205
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          12 (count: 91, min: 0, max: 12, avg: 0.13)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.377s
Automaton transfers with branching:                0
Automaton transfer successors:                        46385 (count: 46385, min: 1, max: 1, avg: 1.00) [1 x 46385]

CPA algorithm statistics
------------------------
Number of iterations:            34143
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   43724
Max successors for one state:    2
Number of times merged:          9567
Number of times stopped:         9568
Number of times breaked:         9

Total time for CPA algorithm:        22.199s (Max:     7.927s)
  Time for choose from waitlist:      0.136s
  Time for precision adjustment:     12.840s
  Time for transfer relation:         6.289s
  Time for merge operator:            1.658s
  Time for stop operator:             0.265s
  Time for adding to reached set:     0.252s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.806s
  Counterexample analysis:                             8.523s (Max:     4.147s, Calls: 9)
    Refinement sat check:                              8.068s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.009s
  Precision update:                                    0.001s
  ARG update:                                          0.049s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 28395
Max. size of reached set after ref.:  22665
Avg. size of reached set before ref.: 15750.78
Avg. size of reached set after ref.:  15113.22

Total time for CEGAR algorithm:      31.880s
Time for refinements:                 9.551s
Average time for refinement:          1.061s
Max time for refinement:              4.434s

Code Coverage
-----------------------------
  Function coverage:      0.667
  Visited lines:          1136
  Total lines:            1736
  Line coverage:          0.654
  Visited conditions:     622
  Total conditions:       756
  Condition coverage:     0.823

CPAchecker general statistics
-----------------------------
Number of program locations:     2269
Number of CFA edges:             2772
Number of relevant variables:    312
Number of functions:             72
Number of loops:                 9
Size of reached set:             28409
  Number of reached locations:   1222 (54%)
    Avg states per location:     23
    Max states per location:     310 (at node N39)
  Number of reached functions:   48 (67%)
  Number of partitions:          28409
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          4.474s
  Time for loading CPAs:          0.957s
  Time for loading parser:        0.720s
  Time for CFA construction:      2.660s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.812s
    Time for CFA sanity check:    0.280s
    Time for post-processing:     0.629s
      Time for var class.:        0.352s
Time for Analysis:               31.880s
CPU time for analysis:           31.890s
Time for analyzing result:        0.024s
Total time for CPAchecker:       36.358s
Total CPU time for CPAchecker:   36.350s
Time for statistics:              0.510s

Time for Garbage Collector:       0.654s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 91MB (    87 MiB) max;     60MB (    57 MiB) avg;    100MB (    95 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8227MB (  7846 MiB) max;   8133MB (  7756 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
