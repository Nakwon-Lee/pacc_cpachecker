scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product01_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hs18b1hn/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 87: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 126: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 682: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1088: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1312: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1346: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1355: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1475: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1488: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1840: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1874: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1930: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1944: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2516: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2619: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2642: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2756: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2992: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 519: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            75 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            24 (32%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         51 (68%)
  Times precision was empty:       3 (4%)
  Times precision was {false}:     50 (67%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22 (29%)
  Times result was 'false':        43 (57%)
Number of strengthen sat checks:   0
Number of coverage checks:         31718
  BDD entailment checks:           20
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       778
Number of predicates discovered:          50
Number of abstraction locations:          2
Max number of predicates per location:    49
Avg number of predicates per location:    25
Total predicates per abstraction:         421
Max number of predicates per abstraction: 49
Avg number of predicates per abstraction: 5.85
Number of irrelevant predicates:          50 (12%)
Number of preds handled by boolean abs:   371 (88%)
  Total number of models for allsat:      233
  Max number of models for allsat:        111
  Avg number of models for allsat:        10.59

Time for post operator:                  2.585s
  Time for path formula creation:        2.430s
Time for strengthen operator:            0.262s
Time for prec operator:                 10.806s
  Time for abstraction:                 10.622s (Max:     1.446s, Count: 75)
    Boolean abstraction:                 9.141s
    Solving time:                        5.183s (Max:     0.443s)
    Model enumeration time:              4.019s
    Time for BDD construction:           0.111s (Max:     0.038s)
Time for merge operator:                 0.683s
Time for coverage check:                 0.021s
  Time for BDD entailment checks:        0.015s
Total time for SMT solver (w/o itp):     9.203s

Number of path formula cache hits:   68191 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.288s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               15897
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3433 (count: 1856, min: 0, max: 1070, avg: 1.85)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.438s
Automaton transfers with branching:                0
Automaton transfer successors:                        75212 (count: 75212, min: 1, max: 1, avg: 1.00) [1 x 75212]

CPA algorithm statistics
------------------------
Number of iterations:            56118
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   72027
Max successors for one state:    2
Number of times merged:          15849
Number of times stopped:         15851
Number of times breaked:         8

Total time for CPA algorithm:        20.566s (Max:     4.147s)
  Time for choose from waitlist:      0.233s
  Time for precision adjustment:     12.020s
  Time for transfer relation:         5.362s
  Time for merge operator:            1.397s
  Time for stop operator:             0.217s
  Time for adding to reached set:     0.320s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                  20 (count: 8, min: 2, max: 4, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.341s
  Counterexample analysis:                             3.911s (Max:     1.190s, Calls: 8)
    Refinement sat check:                              3.559s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.031s
  Precision update:                                    0.013s
  ARG update:                                          0.236s

Length of refined path (in blocks):                      20 (count: 8, min: 2, max: 4, avg: 2.50)
Number of affected states:                               12 (count: 8, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 8, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        12 (count: 8, min: 1, max: 3, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 8, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           4 (count: 8, min: 0, max: 2, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 8, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 14049
Max. size of reached set after ref.:  3515
Avg. size of reached set before ref.: 8776.88
Avg. size of reached set after ref.:  3515.00

Total time for CEGAR algorithm:      25.297s
Time for refinements:                 4.701s
Average time for refinement:          0.587s
Max time for refinement:              1.302s

Code Coverage
-----------------------------
  Function coverage:      0.565
  Visited lines:          958
  Total lines:            1673
  Line coverage:          0.573
  Visited conditions:     580
  Total conditions:       748
  Condition coverage:     0.775

CPAchecker general statistics
-----------------------------
Number of program locations:     2194
Number of CFA edges:             2677
Number of relevant variables:    280
Number of functions:             69
Number of loops:                 9
Size of reached set:             14038
  Number of reached locations:   1095 (50%)
    Avg states per location:     12
    Max states per location:     99 (at node N2084)
  Number of reached functions:   39 (57%)
  Number of partitions:          14036
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N666 (before lines 880-908), Function cleanup called from node N120, stack depth 4 [2a7b6f69], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.434s
  Time for loading CPAs:          0.841s
  Time for loading parser:        0.703s
  Time for CFA construction:      2.649s
    Time for parsing file(s):     0.731s
    Time for AST to CFA:          0.833s
    Time for CFA sanity check:    0.270s
    Time for post-processing:     0.635s
      Time for var class.:        0.351s
Time for Analysis:               25.297s
CPU time for analysis:           25.290s
Total time for CPAchecker:       29.736s
Total CPU time for CPAchecker:   29.720s
Time for statistics:              0.410s

Time for Garbage Collector:       0.547s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 74MB (    71 MiB) max;     48MB (    46 MiB) avg;     85MB (    81 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8078MB (  7704 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
