scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z91f4no4/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1444: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3247: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3286: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            149 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            33 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         116 (78%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     115 (77%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31 (21%)
  Times result was 'false':        110 (74%)
Number of strengthen sat checks:   0
Number of coverage checks:         54353
  BDD entailment checks:           115
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       882
Number of predicates discovered:          51
Number of abstraction locations:          2
Max number of predicates per location:    50
Avg number of predicates per location:    25
Total predicates per abstraction:         1288
Max number of predicates per abstraction: 50
Avg number of predicates per abstraction: 8.82
Number of irrelevant predicates:          115 (9%)
Number of preds handled by boolean abs:   1173 (91%)
  Total number of models for allsat:      84167
  Max number of models for allsat:        14248
  Avg number of models for allsat:        2715.06

Time for post operator:                  4.340s
  Time for path formula creation:        4.155s
Time for strengthen operator:            0.224s
Time for prec operator:                426.336s
  Time for abstraction:                426.126s (Max:    70.411s, Count: 149)
    Boolean abstraction:               422.889s
    Solving time:                        7.639s (Max:     0.520s)
    Model enumeration time:            403.158s
    Time for BDD construction:          13.115s (Max:     2.092s)
Time for merge operator:                 1.222s
Time for coverage check:                 0.065s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):   410.797s

Number of path formula cache hits:   75501 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.990s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               268545
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       31926 (count: 13881, min: 0, max: 5447, avg: 2.30)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.322s (in 65 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.585s
  Time for transition matches:                         0.272s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                       130240 (count: 130240, min: 1, max: 1, avg: 1.00) [1 x 130240]

CPA algorithm statistics
------------------------
Number of iterations:            96896
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   124137
Max successors for one state:    2
Number of times merged:          27119
Number of times stopped:         27122
Number of times breaked:         6

Total time for CPA algorithm:       439.239s (Max:   419.921s)
  Time for choose from waitlist:      0.188s
  Time for precision adjustment:    427.755s
  Time for transfer relation:         7.302s
  Time for merge operator:            2.127s
  Time for stop operator:             0.386s
  Time for adding to reached set:     0.481s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.639s
  Counterexample analysis:                             3.312s (Max:     0.989s, Calls: 6)
    Refinement sat check:                              2.937s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.023s
  Precision update:                                    0.004s
  ARG update:                                          0.178s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 18116
Max. size of reached set after ref.:  3778
Avg. size of reached set before ref.: 11529.67
Avg. size of reached set after ref.:  3778.00

Total time for CEGAR algorithm:     443.252s
Time for refinements:                 3.981s
Average time for refinement:          0.663s
Max time for refinement:              1.077s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          994
  Total lines:            1684
  Line coverage:          0.590
  Visited conditions:     594
  Total conditions:       750
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     2210
Number of CFA edges:             2696
Number of relevant variables:    284
Number of functions:             70
Number of loops:                 9
Size of reached set:             50396
  Number of reached locations:   1132 (51%)
    Avg states per location:     44
    Max states per location:     359 (at node N822)
  Number of reached functions:   42 (60%)
  Number of partitions:          50384
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N436 (before lines 601-629), Function cleanup called from node N2525, stack depth 4 [c0b41d6], stack [main, runTest, test, cleanup]])
  Number of target states:       0

Time for analysis setup:          4.341s
  Time for loading CPAs:          0.782s
  Time for loading parser:        0.794s
  Time for CFA construction:      2.579s
    Time for parsing file(s):     0.775s
    Time for AST to CFA:          0.768s
    Time for CFA sanity check:    0.255s
    Time for post-processing:     0.584s
      Time for var class.:        0.321s
Time for Analysis:              443.252s
CPU time for analysis:          443.190s
Time for analyzing result:        0.043s
Total time for CPAchecker:      447.600s
Total CPU time for CPAchecker:  447.530s
Time for statistics:              0.809s

Time for Garbage Collector:       1.533s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                126MB (   120 MiB) max;     93MB (    88 MiB) avg;    139MB (   132 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    33 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           156MB (   149 MiB) max;    144MB (   137 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8153MB (  7776 MiB) max;   8147MB (  7770 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
