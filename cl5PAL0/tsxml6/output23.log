scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec1_product09_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ecn5rgov/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 364: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 410: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 425: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 448: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 809: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1204: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1444: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1755: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1831: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1980: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1989: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2023: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2032: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2072: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2152: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2165: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2517: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2551: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2607: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2621: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3193: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3247: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3286: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3325: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 201: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            90 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            24 (27%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         66 (73%)
  Times precision was empty:       3 (3%)
  Times precision was {false}:     65 (72%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      22 (24%)
  Times result was 'false':        60 (67%)
Number of strengthen sat checks:   0
Number of coverage checks:         36232
  BDD entailment checks:           30
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       882
Number of predicates discovered:          51
Number of abstraction locations:          2
Max number of predicates per location:    50
Avg number of predicates per location:    25
Total predicates per abstraction:         788
Max number of predicates per abstraction: 50
Avg number of predicates per abstraction: 9.06
Number of irrelevant predicates:          65 (8%)
Number of preds handled by boolean abs:   723 (92%)
  Total number of models for allsat:      571
  Max number of models for allsat:        128
  Avg number of models for allsat:        25.95

Time for post operator:                  2.886s
  Time for path formula creation:        2.757s
Time for strengthen operator:            0.210s
Time for prec operator:                 11.356s
  Time for abstraction:                 11.168s (Max:     1.284s, Count: 90)
    Boolean abstraction:                 9.623s
    Solving time:                        4.562s (Max:     0.403s)
    Model enumeration time:              5.103s
    Time for BDD construction:           0.225s (Max:     0.070s)
Time for merge operator:                 0.706s
Time for coverage check:                 0.017s
  Time for BDD entailment checks:        0.006s
Total time for SMT solver (w/o itp):     9.666s

Number of path formula cache hits:   75466 (76%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.594s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               81073
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6015 (count: 3620, min: 0, max: 1529, avg: 1.66)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.469s
Automaton transfers with branching:                0
Automaton transfer successors:                        86872 (count: 86872, min: 1, max: 1, avg: 1.00) [1 x 86872]

CPA algorithm statistics
------------------------
Number of iterations:            64584
Max size of waitlist:            15
Average size of waitlist:        7
Number of computed successors:   82758
Max successors for one state:    2
Number of times merged:          18101
Number of times stopped:         18103
Number of times breaked:         6

Total time for CPA algorithm:        21.461s (Max:     4.155s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:     12.640s
  Time for transfer relation:         5.698s
  Time for merge operator:            1.382s
  Time for stop operator:             0.276s
  Time for adding to reached set:     0.312s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.227s
  Counterexample analysis:                             3.858s (Max:     1.034s, Calls: 6)
    Refinement sat check:                              3.483s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.005s
  ARG update:                                          0.220s

Length of refined path (in blocks):                      19 (count: 6, min: 2, max: 5, avg: 3.17)
Number of affected states:                               13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        13 (count: 6, min: 1, max: 4, avg: 2.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           7 (count: 6, min: 0, max: 3, avg: 1.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 18116
Max. size of reached set after ref.:  3778
Avg. size of reached set before ref.: 11529.67
Avg. size of reached set after ref.:  3778.00

Total time for CEGAR algorithm:      26.098s
Time for refinements:                 4.609s
Average time for refinement:          0.768s
Max time for refinement:              1.167s

Code Coverage
-----------------------------
  Function coverage:      0.600
  Visited lines:          994
  Total lines:            1684
  Line coverage:          0.590
  Visited conditions:     594
  Total conditions:       750
  Condition coverage:     0.792

CPAchecker general statistics
-----------------------------
Number of program locations:     2210
Number of CFA edges:             2696
Number of relevant variables:    284
Number of functions:             70
Number of loops:                 9
Size of reached set:             18085
  Number of reached locations:   1132 (51%)
    Avg states per location:     15
    Max states per location:     125 (at node N822)
  Number of reached functions:   42 (60%)
  Number of partitions:          18082
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N436 (before lines 601-629), Function cleanup called from node N2525, stack depth 4 [49bf29c6], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.203s
  Time for loading CPAs:          0.865s
  Time for loading parser:        0.756s
  Time for CFA construction:      2.350s
    Time for parsing file(s):     0.651s
    Time for AST to CFA:          0.688s
    Time for CFA sanity check:    0.261s
    Time for post-processing:     0.547s
      Time for var class.:        0.308s
Time for Analysis:               26.098s
CPU time for analysis:           26.100s
Total time for CPAchecker:       30.307s
Total CPU time for CPAchecker:   30.300s
Time for statistics:              0.403s

Time for Garbage Collector:       0.668s (in 33 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                102MB (    97 MiB) max;     53MB (    50 MiB) avg;    105MB (   100 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     33MB (    31 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8092MB (  7717 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
