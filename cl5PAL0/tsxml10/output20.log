scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec3_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_cc_p3f0e/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 395: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 437: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 476: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 515: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 692: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 845: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 854: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 888: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 897: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 937: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1017: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1030: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1382: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1421: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1511: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1539: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1553: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2242: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2789: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3320: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3366: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3378: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3401: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3157: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            20 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            2 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         18 (90%)
  Times precision was empty:       10 (50%)
  Times precision was {false}:     9 (45%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1 (5%)
  Times result was 'false':        8 (40%)
Number of strengthen sat checks:   0
Number of coverage checks:         18628
  BDD entailment checks:           0
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3573
Number of predicates discovered:          9
Number of abstraction locations:          2
Max number of predicates per location:    8
Avg number of predicates per location:    4
Total predicates per abstraction:         17
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 1.70
Number of irrelevant predicates:          9 (53%)
Number of preds handled by boolean abs:   8 (47%)
  Total number of models for allsat:      2
  Max number of models for allsat:        2
  Avg number of models for allsat:        2.00

Time for post operator:                  3.739s
  Time for path formula creation:        3.551s
Time for strengthen operator:            0.213s
Time for prec operator:                  8.321s
  Time for abstraction:                  8.133s (Max:     4.081s, Count: 20)
    Boolean abstraction:                 3.690s
    Solving time:                        5.389s (Max:     2.178s)
    Model enumeration time:              1.509s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.774s
Time for coverage check:                 0.005s
Total time for SMT solver (w/o itp):     6.898s

Number of path formula cache hits:   9058 (20%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.455s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               256
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          67 (count: 102, min: 0, max: 67, avg: 0.66)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.405s
Automaton transfers with branching:                0
Automaton transfer successors:                        44745 (count: 44745, min: 1, max: 1, avg: 1.00) [1 x 44745]

CPA algorithm statistics
------------------------
Number of iterations:            33008
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   42338
Max successors for one state:    2
Number of times merged:          9314
Number of times stopped:         9314
Number of times breaked:         9

Total time for CPA algorithm:        17.376s (Max:     4.742s)
  Time for choose from waitlist:      0.128s
  Time for precision adjustment:      9.061s
  Time for transfer relation:         5.805s
  Time for merge operator:            1.330s
  Time for stop operator:             0.179s
  Time for adding to reached set:     0.251s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   9
Avg. length of target path (in blocks):                  10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.683s
  Counterexample analysis:                             7.419s (Max:     3.306s, Calls: 9)
    Refinement sat check:                              7.002s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.005s
  Precision update:                                    0.008s
  ARG update:                                          0.034s

Length of refined path (in blocks):                      10 (count: 9, min: 1, max: 2, avg: 1.11)
Number of affected states:                                1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'true':                  0 (count: 9, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         1 (count: 9, min: 0, max: 1, avg: 0.11)
Length (states) of path with itp 'false':                 0 (count: 9, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 9, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               0 (count: 9, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                9
Number of successful refinements:     9
Number of failed refinements:         0
Max. size of reached set before ref.: 27465
Max. size of reached set after ref.:  21921
Avg. size of reached set before ref.: 15234.11
Avg. size of reached set after ref.:  14617.22

Total time for CEGAR algorithm:      26.273s
Time for refinements:                 8.775s
Average time for refinement:          0.975s
Max time for refinement:              3.859s

Code Coverage
-----------------------------
  Function coverage:      0.648
  Visited lines:          1102
  Total lines:            1726
  Line coverage:          0.638
  Visited conditions:     608
  Total conditions:       754
  Condition coverage:     0.806

CPAchecker general statistics
-----------------------------
Number of program locations:     2254
Number of CFA edges:             2755
Number of relevant variables:    308
Number of functions:             71
Number of loops:                 9
Size of reached set:             27464
  Number of reached locations:   1185 (53%)
    Avg states per location:     23
    Max states per location:     310 (at node N1670)
  Number of reached functions:   46 (65%)
  Number of partitions:          27464
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          3.985s
  Time for loading CPAs:          0.768s
  Time for loading parser:        0.675s
  Time for CFA construction:      2.345s
    Time for parsing file(s):     0.683s
    Time for AST to CFA:          0.688s
    Time for CFA sanity check:    0.233s
    Time for post-processing:     0.564s
      Time for var class.:        0.325s
Time for Analysis:               26.273s
CPU time for analysis:           26.280s
Total time for CPAchecker:       30.265s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.648s

Time for Garbage Collector:       0.894s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                133MB (   127 MiB) max;     69MB (    66 MiB) avg;    150MB (   143 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           191MB (   183 MiB) max;    145MB (   138 MiB) avg
Allocated non-heap memory:        37MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8227MB (  7846 MiB) max;   8124MB (  7747 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
