scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec2_product21_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tfu0d56j/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 50: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 73: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 393: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 439: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 560: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 796: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1107: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1561: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1615: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1654: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1693: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1961: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2127: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2161: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2170: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2210: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2290: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2303: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2655: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2694: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2728: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2784: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2812: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2826: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3398: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 230: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            47 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            17 (36%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         30 (64%)
  Times precision was empty:       3 (6%)
  Times precision was {false}:     29 (62%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      15 (32%)
  Times result was 'false':        23 (49%)
Number of strengthen sat checks:   0
Number of coverage checks:         30709
  BDD entailment checks:           11
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       958
Number of predicates discovered:          19
Number of abstraction locations:          2
Max number of predicates per location:    18
Avg number of predicates per location:    9
Total predicates per abstraction:         118
Max number of predicates per abstraction: 18
Avg number of predicates per abstraction: 2.68
Number of irrelevant predicates:          29 (25%)
Number of preds handled by boolean abs:   89 (75%)
  Total number of models for allsat:      58
  Max number of models for allsat:        14
  Avg number of models for allsat:        3.87

Time for post operator:                  3.341s
  Time for path formula creation:        3.119s
Time for strengthen operator:            0.219s
Time for prec operator:                 11.130s
  Time for abstraction:                 10.842s (Max:     1.476s, Count: 47)
    Boolean abstraction:                 9.599s
    Solving time:                        5.483s (Max:     0.631s)
    Model enumeration time:              4.159s
    Time for BDD construction:           0.052s (Max:     0.014s)
Time for merge operator:                 0.623s
Time for coverage check:                 0.033s
  Time for BDD entailment checks:        0.007s
Total time for SMT solver (w/o itp):     9.643s

Number of path formula cache hits:   62377 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.932s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               615
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         217 (count: 392, min: 0, max: 67, avg: 0.55)
Time for BDD node cleanup:                             0.004s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.434s
Automaton transfers with branching:                0
Automaton transfer successors:                        73925 (count: 73925, min: 1, max: 1, avg: 1.00) [1 x 73925]

CPA algorithm statistics
------------------------
Number of iterations:            54594
Max size of waitlist:            15
Average size of waitlist:        8
Number of computed successors:   69980
Max successors for one state:    2
Number of times merged:          15349
Number of times stopped:         15351
Number of times breaked:         7

Total time for CPA algorithm:        21.675s (Max:     5.601s)
  Time for choose from waitlist:      0.136s
  Time for precision adjustment:     12.410s
  Time for transfer relation:         6.204s
  Time for merge operator:            1.357s
  Time for stop operator:             0.323s
  Time for adding to reached set:     0.345s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.098s
  Counterexample analysis:                             2.735s (Max:     0.870s, Calls: 7)
    Refinement sat check:                              2.463s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.011s
  Precision update:                                    0.003s
  ARG update:                                          0.241s

Length of refined path (in blocks):                      16 (count: 7, min: 2, max: 3, avg: 2.29)
Number of affected states:                                9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'true':                  0 (count: 7, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         9 (count: 7, min: 1, max: 2, avg: 1.29)
Length (states) of path with itp 'false':                 0 (count: 7, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           2 (count: 7, min: 0, max: 1, avg: 0.29)
Equal non-trivial interpolants along paths:               0 (count: 7, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 16403
Max. size of reached set after ref.:  5468
Avg. size of reached set before ref.: 12487.71
Avg. size of reached set after ref.:  5468.00

Total time for CEGAR algorithm:      25.159s
Time for refinements:                 3.430s
Average time for refinement:          0.490s
Max time for refinement:              0.948s

Code Coverage
-----------------------------
  Function coverage:      0.548
  Visited lines:          962
  Total lines:            1718
  Line coverage:          0.560
  Visited conditions:     572
  Total conditions:       754
  Condition coverage:     0.759

CPAchecker general statistics
-----------------------------
Number of program locations:     2251
Number of CFA edges:             2744
Number of relevant variables:    306
Number of functions:             73
Number of loops:                 9
Size of reached set:             5468
  Number of reached locations:   1081 (48%)
    Avg states per location:     5
    Max states per location:     61 (at node N363)
  Number of reached functions:   40 (55%)
  Number of partitions:          5468
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          4.571s
  Time for loading CPAs:          0.926s
  Time for loading parser:        0.780s
  Time for CFA construction:      2.664s
    Time for parsing file(s):     0.751s
    Time for AST to CFA:          0.843s
    Time for CFA sanity check:    0.274s
    Time for post-processing:     0.599s
      Time for var class.:        0.333s
Time for Analysis:               25.159s
CPU time for analysis:           25.170s
Total time for CPAchecker:       29.734s
Total CPU time for CPAchecker:   29.740s
Time for statistics:              0.209s

Time for Garbage Collector:       0.540s (in 29 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 83MB (    79 MiB) max;     51MB (    49 MiB) avg;     86MB (    82 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     32MB (    31 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     35MB (    33 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
