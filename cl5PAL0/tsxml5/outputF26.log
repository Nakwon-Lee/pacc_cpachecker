scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ktpyl628/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            198 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            48 (24%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         150 (76%)
  Times precision was empty:       3 (2%)
  Times precision was {false}:     149 (75%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      46 (23%)
  Times result was 'false':        138 (70%)
Number of strengthen sat checks:   0
Number of coverage checks:         116461
  BDD entailment checks:           91
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1079
Number of predicates discovered:          184
Number of abstraction locations:          2
Max number of predicates per location:    184
Avg number of predicates per location:    92
Total predicates per abstraction:         3965
Max number of predicates per abstraction: 184
Avg number of predicates per abstraction: 20.33
Number of irrelevant predicates:          172 (4%)
Number of preds handled by boolean abs:   3793 (96%)
  Total number of models for allsat:      38776
  Max number of models for allsat:        35960
  Avg number of models for allsat:        842.96

Time for post operator:                  4.686s
  Time for path formula creation:        4.425s
Time for strengthen operator:            0.446s
Time for prec operator:                837.531s
  Time for abstraction:                837.185s (Max:   493.497s, Count: 198)
    Boolean abstraction:               832.646s
    Solving time:                       15.777s (Max:     0.713s)
    Model enumeration time:            781.845s
    Time for BDD construction:          35.965s (Max:    27.677s)
Time for merge operator:                 1.170s
Time for coverage check:                 0.055s
  Time for BDD entailment checks:        0.028s
Total time for SMT solver (w/o itp):   797.622s

Number of path formula cache hits:   267179 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.997s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               66865
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       69849 (count: 29522, min: 0, max: 16897, avg: 2.37)
Time for BDD node cleanup:                             0.021s
Time for BDD garbage collection:                       1.163s (in 346 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.648s
  Time for transition matches:                         0.276s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                       285482 (count: 285482, min: 1, max: 1, avg: 1.00) [1 x 285482]

CPA algorithm statistics
------------------------
Number of iterations:            210361
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   268709
Max successors for one state:    2
Number of times merged:          58185
Number of times stopped:         58187
Number of times breaked:         12

Total time for CPA algorithm:       854.745s (Max:   751.021s)
  Time for choose from waitlist:      0.148s
  Time for precision adjustment:    840.356s
  Time for transfer relation:         9.258s
  Time for merge operator:            2.416s
  Time for stop operator:             0.564s
  Time for adding to reached set:     0.608s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   12
Avg. length of target path (in blocks):                  46 (count: 12, min: 2, max: 8, avg: 3.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  39.514s
  Counterexample analysis:                            38.518s (Max:    16.529s, Calls: 12)
    Refinement sat check:                             34.013s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.006s
  ARG update:                                          0.673s

Length of refined path (in blocks):                      46 (count: 12, min: 2, max: 8, avg: 3.83)
Number of affected states:                               34 (count: 12, min: 1, max: 7, avg: 2.83)
Length (states) of path with itp 'true':                  0 (count: 12, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:        34 (count: 12, min: 1, max: 7, avg: 2.83)
Length (states) of path with itp 'false':                 0 (count: 12, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:          22 (count: 12, min: 0, max: 6, avg: 1.83)
Equal non-trivial interpolants along paths:               0 (count: 12, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                12
Number of successful refinements:     12
Number of failed refinements:         0
Max. size of reached set before ref.: 46784
Max. size of reached set after ref.:  5845
Avg. size of reached set before ref.: 22405.50
Avg. size of reached set after ref.:  5845.00

Total time for CEGAR algorithm:     896.175s
Time for refinements:                41.372s
Average time for refinement:          3.447s
Max time for refinement:             17.387s

Code Coverage
-----------------------------
  Function coverage:      0.615
  Visited lines:          1081
  Total lines:            1754
  Line coverage:          0.616
  Visited conditions:     612
  Total conditions:       756
  Condition coverage:     0.810

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             11658
  Number of reached locations:   1195 (52%)
    Avg states per location:     9
    Max states per location:     135 (at node N234)
  Number of reached functions:   48 (62%)
  Number of partitions:          11658
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.548s
  Time for loading CPAs:          0.980s
  Time for loading parser:        0.726s
  Time for CFA construction:      2.620s
    Time for parsing file(s):     0.761s
    Time for AST to CFA:          0.781s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.611s
      Time for var class.:        0.341s
Time for Analysis:              896.175s
CPU time for analysis:          896.020s
Total time for CPAchecker:      900.727s
Total CPU time for CPAchecker:  900.570s
Time for statistics:              0.297s

Time for Garbage Collector:       3.023s (in 131 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                208MB (   198 MiB) max;    159MB (   152 MiB) avg;    250MB (   239 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     35MB (    34 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           256MB (   244 MiB) max;    241MB (   230 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     38MB (    36 MiB) avg
Total process virtual memory:   8712MB (  8308 MiB) max;   8369MB (  7982 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
