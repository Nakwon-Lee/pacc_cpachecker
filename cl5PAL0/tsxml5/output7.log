scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/product-lines/elevator_spec9_product31_true-unreach-call_true-termination.cil.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bxqt3q69/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 78: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 117: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 156: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 400: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 636: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 947: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1186: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1363: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1372: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1406: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1415: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1455: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1535: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1548: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1900: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1940: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 1969: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2003: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2059: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2087: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2118: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2132: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2704: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2715: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2724: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2739: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2762: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3082: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3128: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 3478: Dead code detected: return (retValue_acc); (CFACreationUtils.addEdgeToCFA, INFO)

line 2919: Function pointer *__cil_tmp10 with type int (*)(int, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            42 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            16 (38%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         26 (62%)
  Times precision was empty:       3 (7%)
  Times precision was {false}:     25 (60%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      14 (33%)
  Times result was 'false':        20 (48%)
Number of strengthen sat checks:   0
Number of coverage checks:         32347
  BDD entailment checks:           9
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       1079
Number of predicates discovered:          35
Number of abstraction locations:          2
Max number of predicates per location:    34
Avg number of predicates per location:    17
Total predicates per abstraction:         162
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 4.15
Number of irrelevant predicates:          25 (15%)
Number of preds handled by boolean abs:   137 (85%)
  Total number of models for allsat:      45
  Max number of models for allsat:        8
  Avg number of models for allsat:        3.21

Time for post operator:                  3.148s
  Time for path formula creation:        2.978s
Time for strengthen operator:            0.157s
Time for prec operator:                 12.735s
  Time for abstraction:                 12.519s (Max:     2.212s, Count: 42)
    Boolean abstraction:                11.323s
    Solving time:                        5.915s (Max:     0.728s)
    Model enumeration time:              5.543s
    Time for BDD construction:           0.034s (Max:     0.008s)
Time for merge operator:                 0.700s
Time for coverage check:                 0.024s
  Time for BDD entailment checks:        0.017s
Total time for SMT solver (w/o itp):    11.458s

Number of path formula cache hits:   66719 (74%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.730s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               7799
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         572 (count: 490, min: 0, max: 312, avg: 1.17)
Time for BDD node cleanup:                             0.008s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.400s
Automaton transfers with branching:                0
Automaton transfer successors:                        79302 (count: 79302, min: 1, max: 1, avg: 1.00) [1 x 79302]

CPA algorithm statistics
------------------------
Number of iterations:            58339
Max size of waitlist:            16
Average size of waitlist:        8
Number of computed successors:   74541
Max successors for one state:    2
Number of times merged:          16169
Number of times stopped:         16171
Number of times breaked:         6

Total time for CPA algorithm:        22.683s (Max:     5.544s)
  Time for choose from waitlist:      0.204s
  Time for precision adjustment:     13.904s
  Time for transfer relation:         5.632s
  Time for merge operator:            1.324s
  Time for stop operator:             0.331s
  Time for adding to reached set:     0.370s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   6
Avg. length of target path (in blocks):                  13 (count: 6, min: 2, max: 3, avg: 2.17)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.921s
  Counterexample analysis:                             2.571s (Max:     0.922s, Calls: 6)
    Refinement sat check:                              2.319s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.011s
  ARG update:                                          0.225s

Length of refined path (in blocks):                      13 (count: 6, min: 2, max: 3, avg: 2.17)
Number of affected states:                                7 (count: 6, min: 1, max: 2, avg: 1.17)
Length (states) of path with itp 'true':                  0 (count: 6, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         7 (count: 6, min: 1, max: 2, avg: 1.17)
Length (states) of path with itp 'false':                 0 (count: 6, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 6, min: 0, max: 1, avg: 0.17)
Equal non-trivial interpolants along paths:               0 (count: 6, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                6
Number of successful refinements:     6
Number of failed refinements:         0
Max. size of reached set before ref.: 17518
Max. size of reached set after ref.:  5845
Avg. size of reached set before ref.: 12652.00
Avg. size of reached set after ref.:  5845.00

Total time for CEGAR algorithm:      25.949s
Time for refinements:                 3.211s
Average time for refinement:          0.535s
Max time for refinement:              1.020s

Code Coverage
-----------------------------
  Function coverage:      0.641
  Visited lines:          1096
  Total lines:            1754
  Line coverage:          0.625
  Visited conditions:     622
  Total conditions:       756
  Condition coverage:     0.823

CPAchecker general statistics
-----------------------------
Number of program locations:     2301
Number of CFA edges:             2797
Number of relevant variables:    323
Number of functions:             78
Number of loops:                 9
Size of reached set:             17508
  Number of reached locations:   1217 (53%)
    Avg states per location:     14
    Max states per location:     205 (at node N234)
  Number of reached functions:   50 (64%)
  Number of partitions:          17507
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2604 (before lines 3275-3303), Function cleanup called from node N114, stack depth 4 [2c22a348], stack [main, runTest, test, cleanup]])
  Number of target states:       0
  Size of final wait list        2

Time for analysis setup:          4.320s
  Time for loading CPAs:          0.882s
  Time for loading parser:        0.671s
  Time for CFA construction:      2.607s
    Time for parsing file(s):     0.740s
    Time for AST to CFA:          0.778s
    Time for CFA sanity check:    0.271s
    Time for post-processing:     0.637s
      Time for var class.:        0.356s
Time for Analysis:               25.949s
CPU time for analysis:           25.950s
Total time for CPAchecker:       30.273s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.490s

Time for Garbage Collector:       0.508s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 75MB (    72 MiB) max;     52MB (    50 MiB) avg;     91MB (    87 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     32MB (    31 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     34MB (    33 MiB) avg
Total process virtual memory:   8152MB (  7775 MiB) max;   8084MB (  7710 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
