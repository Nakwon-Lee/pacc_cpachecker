scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gwjdhdh6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_event_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_stop_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_task_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_start_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            11302 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            11047 (98%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         255 (2%)
  Times precision was empty:       365 (3%)
  Times precision was {false}:     2317 (21%)
  Times result was cached:         2608 (23%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6012 (53%)
  Times result was 'false':        4494 (40%)
Number of strengthen sat checks:   0
Number of coverage checks:         94109
  BDD entailment checks:           54615
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       137
Number of predicates discovered:          45
Number of abstraction locations:          9
Max number of predicates per location:    34
Avg number of predicates per location:    6
Total predicates per abstraction:         165238
Max number of predicates per abstraction: 34
Avg number of predicates per abstraction: 19.84
Number of irrelevant predicates:          18065 (11%)
Number of preds handled by boolean abs:   121988 (74%)
  Total number of models for allsat:      56151
  Max number of models for allsat:        33
  Avg number of models for allsat:        9.34

Time for post operator:                 11.835s
  Time for path formula creation:       11.389s
Time for strengthen operator:            0.477s
Time for prec operator:                 53.793s
  Time for abstraction:                 53.085s (Max:     0.429s, Count: 11302)
    Boolean abstraction:                28.878s
    Solving time:                       22.444s (Max:     0.241s)
    Model enumeration time:              6.275s
    Time for BDD construction:           2.973s (Max:     0.248s)
Time for merge operator:                 1.873s
Time for coverage check:                 0.122s
  Time for BDD entailment checks:        0.112s
Total time for SMT solver (w/o itp):    28.719s

Number of path formula cache hits:   262326 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     8.719s

Total number of created targets for pointer analysis: 3320
   Number of created targets for uf: *(struct_urb)* is 19
   Number of created targets for uf: *(struct_list_head)* is 169
   Number of created targets for uf: *unsigned_int is 225
   Number of created targets for uf: *unsigned_long_int is 9
   Number of created targets for uf: *(struct_vhci_device)* is 19


Number of BDD nodes:                               84182
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       40344 (count: 116382, min: 0, max: 2334, avg: 0.35)
Time for BDD node cleanup:                             0.025s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.934s
  Time for transition matches:                         0.480s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.000s
Automaton transfers with branching:                0
Automaton transfer successors:                       349600 (count: 349600, min: 1, max: 1, avg: 1.00) [1 x 349600]

CPA algorithm statistics
------------------------
Number of iterations:            240130
Max size of waitlist:            198
Average size of waitlist:        72
Number of computed successors:   268972
Max successors for one state:    2
Number of times merged:          19747
Number of times stopped:         20649
Number of times breaked:         230

Total time for CPA algorithm:        81.397s (Max:     3.049s)
  Time for choose from waitlist:      0.232s
  Time for precision adjustment:     56.398s
  Time for transfer relation:        18.947s
  Time for merge operator:            2.487s
  Time for stop operator:             0.752s
  Time for adding to reached set:     0.931s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   230
Avg. length of target path (in blocks):                5887 (count: 230, min: 1, max: 76, avg: 25.60)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  14.596s
  Counterexample analysis:                            13.311s (Max:     0.247s, Calls: 230)
    Refinement sat check:                              9.694s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.109s
  Precision update:                                    0.121s
  ARG update:                                          0.750s

Length of refined path (in blocks):                    3502 (count: 230, min: 1, max: 70, avg: 15.23)
Number of affected states:                             2387 (count: 230, min: 0, max: 69, avg: 10.38)
Length (states) of path with itp 'true':                885 (count: 230, min: 0, max: 12, avg: 3.85)
Length (states) of path with itp non-trivial itp:      2387 (count: 230, min: 0, max: 69, avg: 10.38)
Length (states) of path with itp 'false':               222 (count: 230, min: 0, max: 1, avg: 0.97)
Different non-trivial interpolants along paths:        2082 (count: 230, min: 0, max: 31, avg: 9.05)
Equal non-trivial interpolants along paths:              90 (count: 230, min: 0, max: 68, avg: 0.39)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                230
Number of successful refinements:     230
Number of failed refinements:         0
Max. size of reached set before ref.: 15507
Max. size of reached set after ref.:  13408
Avg. size of reached set before ref.: 9684.16
Avg. size of reached set after ref.:  8657.93

Total time for CEGAR algorithm:     100.386s
Time for refinements:                17.414s
Average time for refinement:          0.075s
Max time for refinement:              0.262s

Code Coverage
-----------------------------
  Function coverage:      0.505
  Visited lines:          1816
  Total lines:            2864
  Line coverage:          0.634
  Visited conditions:     328
  Total conditions:       626
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             7796
  Number of reached locations:   1060 (28%)
    Avg states per location:     7
    Max states per location:     159 (at node N0)
  Number of reached functions:   48 (51%)
  Number of partitions:          7651
    Avg size of partitions:      1
    Max size of partitions:      33 (with key [N1529 (before line 6612), Function dump_port_status called from node N2071, stack depth 3 [6acd3ffa], stack [main, vhci_hub_control, dump_port_status]])
  Number of target states:       0

Time for analysis setup:          6.812s
  Time for loading CPAs:          1.139s
  Time for loading parser:        0.820s
  Time for CFA construction:      4.679s
    Time for parsing file(s):     1.255s
    Time for AST to CFA:          1.693s
    Time for CFA sanity check:    0.374s
    Time for post-processing:     1.139s
      Time for var class.:        0.485s
Time for Analysis:              100.386s
CPU time for analysis:          100.360s
Time for analyzing result:        0.006s
Total time for CPAchecker:      107.203s
Total CPU time for CPAchecker:  107.150s
Time for statistics:              0.209s

Time for Garbage Collector:       2.760s (in 180 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                143MB (   136 MiB) max;     79MB (    76 MiB) avg;    145MB (   138 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     38MB (    37 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           148MB (   141 MiB) max;    133MB (   127 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     41MB (    39 MiB) avg
Total process virtual memory:   8406MB (  8016 MiB) max;   8195MB (  7816 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
