scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/usb_urb-drivers-scsi-dc395x.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__9y9pyyd/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

lines 4726-4750: Dead code detected: __asm__ volatile (""
                         "771:\n\t"
                         "call *%c[paravirt_opptr];"
                         "\n"
                         "772:\n"
                         ".pushsection .parainstructions,\"a\"\n"
                         " "
                         ".balign 8"
                         " "
                         "\n"
                         " "
                         ".quad"
                         " "
                         " 771b\n"
                         "  .byte "
                         "%c[paravirt_typenum]"
                         "\n"
                         "  .byte 772b-771b\n"
                         "  .short "
                         "%c[paravirt_clobber]"
                         "\n"
                         ".popsection\n"
                         "": "=a" (__eax): [paravirt_typenum] "i" ((unsigned long )((unsigned int )(& ((struct paravirt_patch_template *)0)->pv_irq_ops.save_fl.func)) / sizeof(void *)),
                         [paravirt_opptr] "i" (& pv_irq_ops.save_fl.func), [paravirt_clobber] "i" (1): "memory",
                         "cc"); (CFACreationUtils.addEdgeToCFA, INFO)

line 6185: Dead code detected: __mptr___2 = (struct list_head const *)i->list.next; (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [(((int)(*((cmd->sense_buffer) + 2))) & 15) == 2] (CFACreationUtils.addEdgeToCFA, INFO)

line 10279: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 2)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10282: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 6)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10285: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 5)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10288: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 3)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10291: Dead code detected: [!((((int)(*((cmd->sense_buffer) + 2))) & 15) == 4)] (CFACreationUtils.addEdgeToCFA, INFO)

line 10280: Dead code detected: Goto: case_2 (CFACreationUtils.addEdgeToCFA, INFO)

line 10283: Dead code detected: Goto: case_6 (CFACreationUtils.addEdgeToCFA, INFO)

line 10286: Dead code detected: Goto: case_5 (CFACreationUtils.addEdgeToCFA, INFO)

line 10289: Dead code detected: Goto: case_3 (CFACreationUtils.addEdgeToCFA, INFO)

line 10292: Dead code detected: Goto: case_4 (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label case_3 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_4 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_5 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_6 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label case_2 is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13217: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 13280: Dead code detected: Goto: while_break (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label while_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 6991: Function pointer *done with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 5290-5292: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *dev, struct page *page, unsigned long offset, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5504: Function pointer *(ops->sync_sg_for_cpu) with type void (*)(struct device *dev, struct scatterlist *sg, int nents, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5433: Function pointer *(ops->sync_single_for_device) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5362: Function pointer *(ops->unmap_page) with type void (*)(struct device *dev, dma_addr_t dma_handle, size_t size, enum dma_data_direction dir, struct dma_attrs *attrs) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10737: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10682: Function pointer *(p->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 10615: Function pointer *(cmd->scsi_done) with type void (*)(struct scsi_cmnd *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5362: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_dma_unmap to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10737: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 10682: Ignoring function call through function pointer *(p->scsi_done): (*(p->scsi_done))(p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5504: Ignoring function call through function pointer *(ops->sync_sg_for_cpu): (*(ops->sync_sg_for_cpu))(dev, sg, nelems, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_sg_for_cpu to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_off to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_kunmap_atomic_sg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function trace_hardirqs_on to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 10615: Ignoring function call through function pointer *(cmd->scsi_done): (*(cmd->scsi_done))(cmd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7846: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7846: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5433: Ignoring function call through function pointer *(ops->sync_single_for_device): (*(ops->sync_single_for_device))(dev, addr, size, dir); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_sync_single_for_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 7850: Ignoring call via function pointer dc395x_handle_interrupt::dc395x_statev for which no suitable target was found in line: (*dc395x_statev)(acb, srb, &scsi_status); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 7850: Ignoring function call through function pointer *dc395x_statev: (*dc395x_statev)(acb, srb, &scsi_status); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_alloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_add_host_with_dma to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_scan_host to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function scsi_host_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            305126 (2% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            304604 (100%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         522 (0%)
  Times precision was empty:       225565 (74%)
  Times precision was {false}:     2446 (1%)
  Times result was cached:         74856 (25%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2259 (1%)
  Times result was 'false':        2753 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1850223
  BDD entailment checks:           267365
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       341
Number of predicates discovered:          5
Number of abstraction locations:          36
Max number of predicates per location:    4
Avg number of predicates per location:    2
Total predicates per abstraction:         264052
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 56.12
Number of irrelevant predicates:          229939 (87%)
Number of preds handled by boolean abs:   3695 (1%)
  Total number of models for allsat:      2297
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                201.329s
  Time for path formula creation:      192.465s
Time for strengthen operator:           19.116s
Time for prec operator:                163.267s
  Time for abstraction:                146.695s (Max:     0.718s, Count: 305126)
    Boolean abstraction:                27.899s
    Solving time:                       69.865s (Max:     1.282s)
    Model enumeration time:              3.011s
    Time for BDD construction:           0.141s (Max:     0.009s)
Time for merge operator:                27.104s
Time for coverage check:                 0.501s
  Time for BDD entailment checks:        0.296s
Total time for SMT solver (w/o itp):    72.880s

Number of path formula cache hits:   15846492 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    73.148s

Total number of created targets for pointer analysis: 233224
   Number of created targets for uf: *unsigned_short_int is 665
   Number of created targets for uf: *(struct_ScsiReqBlk)* is 9
   Number of created targets for uf: *signed_int is 241
   Number of created targets for uf: *unsigned_char is 5553
   Number of created targets for uf: *(struct_list_head)* is 133
   Number of created targets for uf: *unsigned_int is 9
   Number of created targets for uf: *(struct_AdapterCtlBlk)* is 9
   Number of created targets for uf: *unsigned_long_int is 273


Number of BDD nodes:                               227
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4480 (count: 519621, min: 0, max: 194, avg: 0.01)
Time for BDD node cleanup:                             0.088s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 24.957s
  Time for transition matches:                        12.994s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                     15970490 (count: 15970490, min: 1, max: 1, avg: 1.00) [1 x 15970490]

CPA algorithm statistics
------------------------
Number of iterations:            10701099
Max size of waitlist:            2922
Average size of waitlist:        877
Number of computed successors:   11678828
Max successors for one state:    2
Number of times merged:          791429
Number of times stopped:         973110
Number of times breaked:         39

Total time for CPA algorithm:       843.682s (Max:    66.954s)
  Time for choose from waitlist:      4.269s
  Time for precision adjustment:    270.347s
  Time for transfer relation:       450.058s
  Time for merge operator:           43.425s
  Time for stop operator:            16.189s
  Time for adding to reached set:    29.128s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   39
Avg. length of target path (in blocks):                 583 (count: 39, min: 1, max: 33, avg: 14.95)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  39.451s
  Counterexample analysis:                             1.444s (Max:     0.057s, Calls: 39)
    Refinement sat check:                              1.180s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.002s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.028s
  Precision update:                                    0.021s
  ARG update:                                         37.880s

Length of refined path (in blocks):                     495 (count: 39, min: 1, max: 33, avg: 12.69)
Number of affected states:                              456 (count: 39, min: 0, max: 32, avg: 11.69)
Length (states) of path with itp 'true':                  0 (count: 39, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       456 (count: 39, min: 0, max: 32, avg: 11.69)
Length (states) of path with itp 'false':                11 (count: 39, min: 0, max: 1, avg: 0.28)
Different non-trivial interpolants along paths:           0 (count: 39, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             419 (count: 39, min: 0, max: 31, avg: 10.74)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                39
Number of successful refinements:     39
Number of failed refinements:         0
Max. size of reached set before ref.: 663964
Max. size of reached set after ref.:  114200
Avg. size of reached set before ref.: 268993.36
Avg. size of reached set after ref.:  5881.87

Total time for CEGAR algorithm:     891.736s
Time for refinements:                47.108s
Average time for refinement:          1.207s
Max time for refinement:              3.079s

Code Coverage
-----------------------------
  Function coverage:      0.889
  Visited lines:          4183
  Total lines:            4449
  Line coverage:          0.940
  Visited conditions:     936
  Total conditions:       990
  Condition coverage:     0.945

CPAchecker general statistics
-----------------------------
Number of program locations:     6354
Number of CFA edges:             7258
Number of relevant variables:    976
Number of functions:             162
Number of loops:                 64
Size of reached set:             441617
  Number of reached locations:   3459 (54%)
    Avg states per location:     127
    Max states per location:     9195 (at node N205)
  Number of reached functions:   144 (89%)
  Number of partitions:          441602
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N6367 (before lines 13039-13155), Function main called from node N6337, stack depth 1 [5f8d9767], stack [main]])
  Number of target states:       0
  Size of final wait list        511

Time for analysis setup:          8.459s
  Time for loading CPAs:          1.244s
  Time for loading parser:        0.817s
  Time for CFA construction:      6.254s
    Time for parsing file(s):     1.305s
    Time for AST to CFA:          2.452s
    Time for CFA sanity check:    0.614s
    Time for post-processing:     1.669s
      Time for var class.:        0.778s
Time for Analysis:              891.736s
CPU time for analysis:          891.660s
Total time for CPAchecker:      900.203s
Total CPU time for CPAchecker:  900.100s
Time for statistics:              5.282s

Time for Garbage Collector:     137.909s (in 730 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1655MB (  1578 MiB) max;    579MB (   552 MiB) avg;   1685MB (  1607 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    38 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          1668MB (  1591 MiB) max;    896MB (   854 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8419MB (  8029 MiB) max;   8260MB (  7877 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
