scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--regulator--wm831x-dcdc.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1bjhlauo/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 2608: Dead code detected: return (4294967274U); (CFACreationUtils.addEdgeToCFA, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_notifier_call_chain to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_dev_dbg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_reg_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rdev_get_id to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_resource to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_get_irq_byname to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function devm_kzalloc to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wm831x_set_bits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            24 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            18 (75%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         6 (25%)
  Times precision was empty:       12 (50%)
  Times precision was {false}:     4 (17%)
  Times result was cached:         3 (13%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5 (21%)
  Times result was 'false':        4 (17%)
Number of strengthen sat checks:   0
Number of coverage checks:         853
  BDD entailment checks:           9
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       518
Number of predicates discovered:          2
Number of abstraction locations:          3
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         12
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 1.33
Number of irrelevant predicates:          6 (50%)
Number of preds handled by boolean abs:   5 (42%)
  Total number of models for allsat:      5
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  1.397s
  Time for path formula creation:        1.340s
Time for strengthen operator:            0.068s
Time for prec operator:                  1.154s
  Time for abstraction:                  1.117s (Max:     0.952s, Count: 24)
    Boolean abstraction:                 0.863s
    Solving time:                        0.787s (Max:     0.744s)
    Model enumeration time:              0.089s
    Time for BDD construction:           0.009s (Max:     0.007s)
Time for merge operator:                 0.662s
Time for coverage check:                 0.000s
  Time for BDD entailment checks:        0.000s
Total time for SMT solver (w/o itp):     0.876s

Number of path formula cache hits:   4978 (48%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.278s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                           5 (count: 77, min: 0, max: 5, avg: 0.06)
Time for BDD node cleanup:                             0.000s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.176s
Automaton transfers with branching:                0
Automaton transfer successors:                        10110 (count: 10110, min: 1, max: 1, avg: 1.00) [1 x 10110]

CPA algorithm statistics
------------------------
Number of iterations:            2520
Max size of waitlist:            46
Average size of waitlist:        24
Number of computed successors:   3039
Max successors for one state:    2
Number of times merged:          422
Number of times stopped:         430
Number of times breaked:         2

Total time for CPA algorithm:         4.477s (Max:     2.375s)
  Time for choose from waitlist:      0.029s
  Time for precision adjustment:      1.342s
  Time for transfer relation:         2.170s
  Time for merge operator:            0.769s
  Time for stop operator:             0.032s
  Time for adding to reached set:     0.031s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   6 (count: 2, min: 2, max: 4, avg: 3.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.089s
  Counterexample analysis:                             0.023s (Max:     0.015s, Calls: 2)
    Refinement sat check:                              0.015s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.008s
  Precision update:                                    0.002s
  ARG update:                                          0.042s

Length of refined path (in blocks):                       6 (count: 2, min: 2, max: 4, avg: 3.00)
Number of affected states:                                4 (count: 2, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         4 (count: 2, min: 1, max: 3, avg: 2.00)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 2, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:               2 (count: 2, min: 0, max: 2, avg: 1.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 1315
Max. size of reached set after ref.:  29
Avg. size of reached set before ref.: 743.00
Avg. size of reached set after ref.:  29.00

Total time for CEGAR algorithm:       4.593s
Time for refinements:                 0.105s
Average time for refinement:          0.052s
Max time for refinement:              0.058s

Code Coverage
-----------------------------
  Function coverage:      0.780
  Visited lines:          3359
  Total lines:            3508
  Line coverage:          0.958
  Visited conditions:     312
  Total conditions:       322
  Condition coverage:     0.969

CPAchecker general statistics
-----------------------------
Number of program locations:     3828
Number of CFA edges:             4019
Number of relevant variables:    884
Number of functions:             50
Number of loops:                 3
Size of reached set:             1178
  Number of reached locations:   827 (22%)
    Avg states per location:     1
    Max states per location:     4 (at node N0)
  Number of reached functions:   39 (78%)
  Number of partitions:          1178
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.524s
  Time for loading CPAs:          0.950s
  Time for loading parser:        0.711s
  Time for CFA construction:      3.683s
    Time for parsing file(s):     1.025s
    Time for AST to CFA:          1.213s
    Time for CFA sanity check:    0.333s
    Time for post-processing:     0.916s
      Time for var class.:        0.459s
Time for Analysis:                4.594s
CPU time for analysis:            4.590s
Time for analyzing result:        0.001s
Total time for CPAchecker:       10.123s
Total CPU time for CPAchecker:   10.100s
Time for statistics:              0.126s

Time for Garbage Collector:       0.275s (in 12 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     39MB (    37 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             35MB (    33 MiB) max;     28MB (    27 MiB) avg;     35MB (    33 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        36MB (    35 MiB) max;     30MB (    28 MiB) avg
Total process virtual memory:   8132MB (  7755 MiB) max;   8096MB (  7721 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
