scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.4-simple/43_1a_cilled_true-unreach-call_ok_nondet_linux-43_1a-drivers--mtd--ftl.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bemtu3hs/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

Dead code detected: Label switch_break is not reachable. (CFAFunctionBuilder.leave, INFO)

line 2986: Function pointer *__cil_tmp10 with type void (*)(struct mtd_info *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function deregister_mtd_blktrans to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function vfree to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_read to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_mtd_blktrans_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __dynamic_pr_debug to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mtd_write to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2986: Ignoring call via function pointer mtd_sync::__cil_tmp10 for which no suitable target was found in line: (*__cil_tmp10)(mtd); (FunctionPointerCPA:FunctionPointerTransferRelation.getAbstractSuccessorsForEdge, WARNING)

line 2986: Ignoring function call through function pointer *__cil_tmp10: (*__cil_tmp10)(mtd); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mtd_erase to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            353 (1% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            291 (82%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         62 (18%)
  Times precision was empty:       68 (19%)
  Times precision was {false}:     30 (8%)
  Times result was cached:         196 (56%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      59 (17%)
  Times result was 'false':        84 (24%)
Number of strengthen sat checks:   0
Number of coverage checks:         2343
  BDD entailment checks:           159
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       614
Number of predicates discovered:          3
Number of abstraction locations:          16
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         336
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.78
Number of irrelevant predicates:          115 (34%)
Number of preds handled by boolean abs:   62 (18%)
  Total number of models for allsat:      58
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                  2.649s
  Time for path formula creation:        2.552s
Time for strengthen operator:            0.124s
Time for prec operator:                  3.066s
  Time for abstraction:                  2.925s (Max:     0.165s, Count: 353)
    Boolean abstraction:                 1.401s
    Solving time:                        1.807s (Max:     0.146s)
    Model enumeration time:              0.099s
    Time for BDD construction:           0.028s (Max:     0.007s)
Time for merge operator:                 0.335s
Time for coverage check:                 0.014s
  Time for BDD entailment checks:        0.013s
Total time for SMT solver (w/o itp):     1.906s

Number of path formula cache hits:   40360 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     2.319s

Total number of created targets for pointer analysis: 414
   Number of created targets for uf: *unsigned_short_int is 21
   Number of created targets for uf: *unsigned_char is 161
   Number of created targets for uf: *unsigned_int is 3
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         112 (count: 750, min: 0, max: 23, avg: 0.15)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.390s
Automaton transfers with branching:                0
Automaton transfer successors:                        48913 (count: 48913, min: 1, max: 1, avg: 1.00) [1 x 48913]

CPA algorithm statistics
------------------------
Number of iterations:            8714
Max size of waitlist:            35
Average size of waitlist:        17
Number of computed successors:   10197
Max successors for one state:    2
Number of times merged:          1092
Number of times stopped:         1224
Number of times breaked:         11

Total time for CPA algorithm:         8.810s (Max:     1.682s)
  Time for choose from waitlist:      0.055s
  Time for precision adjustment:      3.395s
  Time for transfer relation:         4.444s
  Time for merge operator:            0.468s
  Time for stop operator:             0.107s
  Time for adding to reached set:     0.124s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   11
Avg. length of target path (in blocks):                  63 (count: 11, min: 2, max: 10, avg: 5.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.619s
  Counterexample analysis:                             0.519s (Max:     0.110s, Calls: 11)
    Refinement sat check:                              0.439s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.021s
  Precision update:                                    0.014s
  ARG update:                                          0.049s

Length of refined path (in blocks):                      61 (count: 11, min: 2, max: 10, avg: 5.55)
Number of affected states:                               42 (count: 11, min: 1, max: 9, avg: 3.82)
Length (states) of path with itp 'true':                  8 (count: 11, min: 0, max: 4, avg: 0.73)
Length (states) of path with itp non-trivial itp:        42 (count: 11, min: 1, max: 9, avg: 3.82)
Length (states) of path with itp 'false':                 2 (count: 11, min: 0, max: 1, avg: 0.18)
Different non-trivial interpolants along paths:           0 (count: 11, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:              31 (count: 11, min: 0, max: 8, avg: 2.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                11
Number of successful refinements:     11
Number of failed refinements:         0
Max. size of reached set before ref.: 1481
Max. size of reached set after ref.:  627
Avg. size of reached set before ref.: 817.00
Avg. size of reached set after ref.:  122.18

Total time for CEGAR algorithm:       9.495s
Time for refinements:                 0.685s
Average time for refinement:          0.062s
Max time for refinement:              0.133s

Code Coverage
-----------------------------
  Function coverage:      0.765
  Visited lines:          3903
  Total lines:            4539
  Line coverage:          0.860
  Visited conditions:     226
  Total conditions:       286
  Condition coverage:     0.790

CPAchecker general statistics
-----------------------------
Number of program locations:     4829
Number of CFA edges:             4977
Number of relevant variables:    1617
Number of functions:             34
Number of loops:                 19
Size of reached set:             1247
  Number of reached locations:   642 (13%)
    Avg states per location:     1
    Max states per location:     13 (at node N4376)
  Number of reached functions:   26 (76%)
  Number of partitions:          1246
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2896 (before line 6137), Function reclaim_block called from node N3713, stack depth 4 [58021c3c], stack [main, ftl_writesect, ftl_write, reclaim_block]])
  Number of target states:       0

Time for analysis setup:          6.206s
  Time for loading CPAs:          1.024s
  Time for loading parser:        0.709s
  Time for CFA construction:      4.291s
    Time for parsing file(s):     1.176s
    Time for AST to CFA:          1.311s
    Time for CFA sanity check:    0.395s
    Time for post-processing:     1.241s
      Time for var class.:        0.562s
Time for Analysis:                9.495s
CPU time for analysis:            9.490s
Time for analyzing result:        0.001s
Total time for CPAchecker:       15.706s
Total CPU time for CPAchecker:   15.690s
Time for statistics:              0.126s

Time for Garbage Collector:       0.372s (in 18 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 70MB (    67 MiB) max;     43MB (    41 MiB) avg;     76MB (    73 MiB) peak
Used non-heap memory:             36MB (    35 MiB) max;     30MB (    29 MiB) avg;     37MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     32MB (    30 MiB) avg
Total process virtual memory:   8133MB (  7757 MiB) max;   8107MB (  7732 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
