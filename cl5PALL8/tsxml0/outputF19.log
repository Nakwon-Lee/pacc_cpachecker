scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-net-sis900.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_kugignc9/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 4963: Function pointer *(ops->alloc_coherent) with type void *(*)(struct device *, size_t , dma_addr_t *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 5003: Function pointer *(ops->free_coherent) with type void (*)(struct device *, size_t , void *, dma_addr_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 4833-4834: Function pointer *(ops->map_page) with type dma_addr_t (*)(struct device *, struct page *, unsigned long, size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 4870: Function pointer *(ops->unmap_page) with type void (*)(struct device *, dma_addr_t , size_t , enum dma_data_direction , struct dma_attrs *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_restore_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_power_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_detach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_save_state to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_set_mask to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function alloc_etherdev_mqs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_request_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4963: Ignoring function call through function pointer *(ops->alloc_coherent): memory = (*(ops->alloc_coherent))(dev, size, dma_handle, tmp___1); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_alloc_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_get_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function get_random_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_free_coherent to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5003: Ignoring function call through function pointer *(ops->free_coherent): (*(ops->free_coherent))(dev, size, vaddr, bus); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function pci_release_regions to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mii_ethtool_gset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function disable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_off to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_dma_map_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_alloc_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function add_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 4870: Ignoring function call through function pointer *(ops->unmap_page): (*(ops->unmap_page))(dev, addr, size, dir, attrs); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function debug_dma_unmap_page to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function consume_skb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netpoll_trap to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __netif_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function enable_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_rx to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_dev_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function register_netdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_carrier_on to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function yield to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function netif_device_attach to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27426 (3% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            26391 (96%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1035 (4%)
  Times precision was empty:       2886 (11%)
  Times precision was {false}:     350 (1%)
  Times result was cached:         23216 (85%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      974 (4%)
  Times result was 'false':        1289 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         59410
  BDD entailment checks:           13510
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       272
Number of predicates discovered:          2
Number of abstraction locations:          42
Max number of predicates per location:    1
Avg number of predicates per location:    1
Total predicates per abstraction:         24540
Max number of predicates per abstraction: 1
Avg number of predicates per abstraction: 18.53
Number of irrelevant predicates:          1333 (5%)
Number of preds handled by boolean abs:   974 (4%)
  Total number of models for allsat:      963
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.99

Time for post operator:                 13.997s
  Time for path formula creation:       13.234s
Time for strengthen operator:            0.913s
Time for prec operator:                 14.783s
  Time for abstraction:                 13.395s (Max:     0.186s, Count: 27426)
    Boolean abstraction:                 2.388s
    Solving time:                        4.605s (Max:     0.163s)
    Model enumeration time:              0.245s
    Time for BDD construction:           0.100s (Max:     0.010s)
Time for merge operator:                 1.469s
Time for coverage check:                 0.071s
  Time for BDD entailment checks:        0.058s
Total time for SMT solver (w/o itp):     4.850s

Number of path formula cache hits:   711236 (84%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     9.960s

Total number of created targets for pointer analysis: 522
   Number of created targets for uf: *unsigned_short_int is 22
   Number of created targets for uf: *signed_int is 3
   Number of created targets for uf: *unsigned_char is 106
   Number of created targets for uf: *(struct_mii_phy)* is 2


Number of BDD nodes:                               202
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1940 (count: 24305, min: 0, max: 216, avg: 0.08)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  2.105s
  Time for transition matches:                         1.085s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.008s
Automaton transfers with branching:                0
Automaton transfer successors:                       809517 (count: 809517, min: 1, max: 1, avg: 1.00) [1 x 809517]

CPA algorithm statistics
------------------------
Number of iterations:            569585
Max size of waitlist:            68
Average size of waitlist:        18
Number of computed successors:   608028
Max successors for one state:    2
Number of times merged:          22950
Number of times stopped:         36422
Number of times breaked:         28

Total time for CPA algorithm:        63.265s (Max:     6.559s)
  Time for choose from waitlist:      0.488s
  Time for precision adjustment:     21.622s
  Time for transfer relation:        32.510s
  Time for merge operator:            2.337s
  Time for stop operator:             1.040s
  Time for adding to reached set:     2.066s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   28
Avg. length of target path (in blocks):                 220 (count: 28, min: 1, max: 22, avg: 7.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.242s
  Counterexample analysis:                             1.022s (Max:     0.059s, Calls: 28)
    Refinement sat check:                              0.867s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.017s
  Precision update:                                    0.034s
  ARG update:                                          2.107s

Length of refined path (in blocks):                     220 (count: 28, min: 1, max: 22, avg: 7.86)
Number of affected states:                              192 (count: 28, min: 0, max: 21, avg: 6.86)
Length (states) of path with itp 'true':                  0 (count: 28, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:       192 (count: 28, min: 0, max: 21, avg: 6.86)
Length (states) of path with itp 'false':                 0 (count: 28, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           0 (count: 28, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             165 (count: 28, min: 0, max: 20, avg: 5.89)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                28
Number of successful refinements:     28
Number of failed refinements:         0
Max. size of reached set before ref.: 65839
Max. size of reached set after ref.:  22
Avg. size of reached set before ref.: 17267.61
Avg. size of reached set after ref.:  21.93

Total time for CEGAR algorithm:      67.237s
Time for refinements:                 3.971s
Average time for refinement:          0.141s
Max time for refinement:              0.553s

Code Coverage
-----------------------------
  Function coverage:      0.949
  Visited lines:          2985
  Total lines:            3065
  Line coverage:          0.974
  Visited conditions:     590
  Total conditions:       612
  Condition coverage:     0.964

CPAchecker general statistics
-----------------------------
Number of program locations:     4016
Number of CFA edges:             4590
Number of relevant variables:    569
Number of functions:             118
Number of loops:                 46
Size of reached set:             87439
  Number of reached locations:   2187 (54%)
    Avg states per location:     39
    Max states per location:     4735 (at node N100)
  Number of reached functions:   112 (95%)
  Number of partitions:          87439
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          6.922s
  Time for loading CPAs:          1.227s
  Time for loading parser:        0.802s
  Time for CFA construction:      4.702s
    Time for parsing file(s):     1.140s
    Time for AST to CFA:          1.672s
    Time for CFA sanity check:    0.441s
    Time for post-processing:     1.287s
      Time for var class.:        0.577s
Time for Analysis:               67.239s
CPU time for analysis:           67.230s
Time for analyzing result:        0.082s
Total time for CPAchecker:       74.166s
Total CPU time for CPAchecker:   74.140s
Time for statistics:              1.421s

Time for Garbage Collector:       6.524s (in 199 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                194MB (   185 MiB) max;     83MB (    79 MiB) avg;    217MB (   207 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     37MB (    35 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           218MB (   208 MiB) max;    142MB (   135 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     39MB (    37 MiB) avg
Total process virtual memory:   8134MB (  7757 MiB) max;   8126MB (  7749 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
