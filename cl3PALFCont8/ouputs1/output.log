scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-linux-3.0/module_get_put-drivers-block-paride-pt.ko_true-unreach-call.cil.out.i.pp.i


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_z4_9id93/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 3283: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 3337: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4294: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

line 4514: Dead code detected: __ms = 1UL; (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2934: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((void *)((const void *)to), 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            1364258 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1210588 (89%)
  Because of loop head:            153603 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         67 (0%)
  Times precision was empty:       137687 (10%)
  Times precision was {false}:     7875 (1%)
  Times result was cached:         1212413 (89%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      6283 (0%)
  Times result was 'false':        3620 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         1277271
  BDD entailment checks:           222235
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       32
Number of predicates discovered:          3
Number of abstraction locations:          169
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1969499
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 139.11
Number of irrelevant predicates:          1376982 (70%)
Number of preds handled by boolean abs:   7943 (0%)
  Total number of models for allsat:      6409
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.02

Time for post operator:                246.256s
  Time for path formula creation:      240.718s
Time for strengthen operator:            7.814s
Time for prec operator:                257.864s
  Time for abstraction:                235.414s (Max:     3.275s, Count: 1364258)
    Boolean abstraction:                30.480s
    Solving time:                       67.726s (Max:     2.419s)
    Model enumeration time:              1.908s
    Time for BDD construction:           0.154s (Max:     0.009s)
Time for merge operator:                22.642s
Time for coverage check:                 0.477s
  Time for BDD entailment checks:        0.327s
Total time for SMT solver (w/o itp):    69.634s

Number of path formula cache hits:   6137792 (66%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   184.888s

Total number of created targets for pointer analysis: 2221640
   Number of created targets for uf: *(struct_pi_adapter)* is 97
   Number of created targets for uf: *signed_int is 16613
   Number of created targets for uf: *(char)* is 205
   Number of created targets for uf: *char is 30216


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       12575 (count: 437005, min: 0, max: 936, avg: 0.03)
Time for BDD node cleanup:                             0.098s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                 12.851s
  Time for transition matches:                         7.764s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      8046250 (count: 8046250, min: 1, max: 1, avg: 1.00) [1 x 8046250]

CPA algorithm statistics
------------------------
Number of iterations:            5178111
Max size of waitlist:            36
Average size of waitlist:        20
Number of computed successors:   5925509
Max successors for one state:    2
Number of times merged:          527518
Number of times stopped:         743842
Number of times breaked:         67

Total time for CPA algorithm:       737.323s (Max:    51.668s)
  Time for choose from waitlist:      2.175s
  Time for precision adjustment:    315.246s
  Time for transfer relation:       348.089s
  Time for merge operator:           31.573s
  Time for stop operator:             8.987s
  Time for adding to reached set:    12.963s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   67
Avg. length of target path (in blocks):                9113 (count: 67, min: 11, max: 357, avg: 136.01)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.586s
  Counterexample analysis:                             7.258s (Max:     0.433s, Calls: 67)
    Refinement sat check:                              4.987s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.012s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.105s
  Precision update:                                    0.059s
  ARG update:                                         14.004s

Length of refined path (in blocks):                    6326 (count: 67, min: 10, max: 207, avg: 94.42)
Number of affected states:                             5551 (count: 67, min: 0, max: 206, avg: 82.85)
Length (states) of path with itp 'true':                708 (count: 67, min: 0, max: 133, avg: 10.57)
Length (states) of path with itp non-trivial itp:      5551 (count: 67, min: 0, max: 206, avg: 82.85)
Length (states) of path with itp 'false':                67 (count: 67, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 67, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5499 (count: 67, min: 0, max: 205, avg: 82.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                67
Number of successful refinements:     67
Number of failed refinements:         0
Max. size of reached set before ref.: 251490
Max. size of reached set after ref.:  77407
Avg. size of reached set before ref.: 89690.01
Avg. size of reached set after ref.:  13009.15

Total time for CEGAR algorithm:     764.343s
Time for refinements:                26.192s
Average time for refinement:          0.390s
Max time for refinement:              1.500s

Code Coverage
-----------------------------
  Function coverage:      0.875
  Visited lines:          1535
  Total lines:            1570
  Line coverage:          0.978
  Visited conditions:     288
  Total conditions:       302
  Condition coverage:     0.954

CPAchecker general statistics
-----------------------------
Number of program locations:     1934
Number of CFA edges:             2149
Number of relevant variables:    271
Number of functions:             48
Number of loops:                 18
Size of reached set:             40430
  Number of reached locations:   880 (46%)
    Avg states per location:     45
    Max states per location:     2161 (at node N95)
  Number of reached functions:   42 (88%)
  Number of partitions:          40430
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.320s
  Time for loading CPAs:          1.011s
  Time for loading parser:        0.773s
  Time for CFA construction:      3.362s
    Time for parsing file(s):     1.007s
    Time for AST to CFA:          1.274s
    Time for CFA sanity check:    0.175s
    Time for post-processing:     0.708s
      Time for var class.:        0.340s
Time for Analysis:              764.343s
CPU time for analysis:          764.310s
Time for analyzing result:        0.040s
Total time for CPAchecker:      769.678s
Total CPU time for CPAchecker:  769.630s
Time for statistics:              0.642s

Time for Garbage Collector:      82.214s (in 474 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1953MB (  1863 MiB) max;    870MB (   830 MiB) avg;   2048MB (  1953 MiB) peak
Used non-heap memory:             41MB (    39 MiB) max;     39MB (    37 MiB) avg;     41MB (    40 MiB) peak
Allocated heap memory:          2228MB (  2124 MiB) max;   1238MB (  1180 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8340MB (  7953 MiB) max;   8194MB (  7815 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
