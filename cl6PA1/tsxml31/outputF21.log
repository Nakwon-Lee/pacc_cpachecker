scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run__zfbjiq6/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_task_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_start_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_event_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_stop_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            771449 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  682926 (89%)
  Because of loop head:            88131 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         392 (0%)
  Times precision was empty:       314679 (41%)
  Times precision was {false}:     2305 (0%)
  Times result was cached:         449405 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5060 (1%)
  Times result was 'false':        110055 (14%)
Number of strengthen sat checks:   0
Number of coverage checks:         579588
  BDD entailment checks:           263342
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          26
Number of abstraction locations:          212
Max number of predicates per location:    11
Avg number of predicates per location:    2
Total predicates per abstraction:         1997808
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 271.26
Number of irrelevant predicates:          1231851 (62%)
Number of preds handled by boolean abs:   12580 (1%)
  Total number of models for allsat:      7101
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.40

Time for post operator:                102.189s
  Time for path formula creation:       99.947s
Time for strengthen operator:            5.026s
Time for prec operator:                142.315s
  Time for abstraction:                131.453s (Max:     2.070s, Count: 771449)
    Boolean abstraction:                 8.400s
    Solving time:                        9.873s (Max:     0.026s)
    Model enumeration time:              0.955s
    Time for BDD construction:           0.201s (Max:     0.009s)
Time for merge operator:                 9.332s
Time for coverage check:                 0.330s
  Time for BDD entailment checks:        0.224s
Total time for SMT solver (w/o itp):    10.828s

Number of path formula cache hits:   3617474 (68%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    78.609s

Total number of created targets for pointer analysis: 373596
   Number of created targets for uf: *(struct_urb)* is 1573
   Number of created targets for uf: *(struct_list_head)* is 9961
   Number of created targets for uf: *unsigned_int is 25625
   Number of created targets for uf: *unsigned_long_int is 414
   Number of created targets for uf: *(struct_vhci_device)* is 1573


Number of BDD nodes:                               2424
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       10865 (count: 687972, min: 0, max: 286, avg: 0.02)
Time for BDD node cleanup:                             0.107s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  6.904s
  Time for transition matches:                         3.871s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.003s
Automaton transfers with branching:                0
Automaton transfer successors:                      4757481 (count: 4757481, min: 1, max: 1, avg: 1.00) [1 x 4757481]

CPA algorithm statistics
------------------------
Number of iterations:            3247123
Max size of waitlist:            59
Average size of waitlist:        26
Number of computed successors:   3682472
Max successors for one state:    2
Number of times merged:          158123
Number of times stopped:         323824
Number of times breaked:         392

Total time for CPA algorithm:       360.933s (Max:     2.882s)
  Time for choose from waitlist:      1.504s
  Time for precision adjustment:    167.281s
  Time for transfer relation:       158.071s
  Time for merge operator:           12.362s
  Time for stop operator:             4.699s
  Time for adding to reached set:     7.019s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   392
Avg. length of target path (in blocks):               19500 (count: 392, min: 5, max: 79, avg: 49.74)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  13.736s
  Counterexample analysis:                             7.710s (Max:     0.081s, Calls: 392)
    Refinement sat check:                              5.212s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.030s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.106s
  Precision update:                                    0.172s
  ARG update:                                          5.540s

Length of refined path (in blocks):                   14494 (count: 392, min: 4, max: 63, avg: 36.97)
Number of affected states:                             5896 (count: 392, min: 1, max: 61, avg: 15.04)
Length (states) of path with itp 'true':               8206 (count: 392, min: 0, max: 53, avg: 20.93)
Length (states) of path with itp non-trivial itp:      5896 (count: 392, min: 1, max: 61, avg: 15.04)
Length (states) of path with itp 'false':               392 (count: 392, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          87 (count: 392, min: 0, max: 7, avg: 0.22)
Equal non-trivial interpolants along paths:            5417 (count: 392, min: 0, max: 59, avg: 13.82)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                392
Number of successful refinements:     392
Number of failed refinements:         0
Max. size of reached set before ref.: 23792
Max. size of reached set after ref.:  19545
Avg. size of reached set before ref.: 20020.95
Avg. size of reached set after ref.:  11782.99

Total time for CEGAR algorithm:     384.298s
Time for refinements:                20.288s
Average time for refinement:          0.051s
Max time for refinement:              0.197s

Code Coverage
-----------------------------
  Function coverage:      0.495
  Visited lines:          1813
  Total lines:            2864
  Line coverage:          0.633
  Visited conditions:     328
  Total conditions:       626
  Condition coverage:     0.524

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             19312
  Number of reached locations:   1057 (28%)
    Avg states per location:     18
    Max states per location:     264 (at node N27)
  Number of reached functions:   47 (49%)
  Number of partitions:          19216
    Avg size of partitions:      1
    Max size of partitions:      9 (with key [N2794 (before line 7989), Function vhci_hcd_suspend called from node N3038, stack depth 2 [51be26f1], stack [main, vhci_hcd_suspend]])
  Number of target states:       0

Time for analysis setup:          5.520s
  Time for loading CPAs:          0.913s
  Time for loading parser:        0.623s
  Time for CFA construction:      3.839s
    Time for parsing file(s):     1.081s
    Time for AST to CFA:          1.390s
    Time for CFA sanity check:    0.269s
    Time for post-processing:     0.908s
      Time for var class.:        0.474s
Time for Analysis:              384.298s
CPU time for analysis:          384.280s
Time for analyzing result:        0.015s
Total time for CPAchecker:      389.822s
Total CPU time for CPAchecker:  389.790s
Time for statistics:              0.325s

Time for Garbage Collector:      27.708s (in 527 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                787MB (   751 MiB) max;    412MB (   393 MiB) avg;    797MB (   760 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     39MB (    37 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           923MB (   880 MiB) max;    624MB (   595 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     42MB (    40 MiB) avg
Total process virtual memory:   8154MB (  7776 MiB) max;   8104MB (  7728 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
