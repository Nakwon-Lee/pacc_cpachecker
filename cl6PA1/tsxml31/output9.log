scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_bfd3498r/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15931 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13934 (87%)
  Because of loop head:            1952 (12%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         45 (0%)
  Times precision was empty:       4700 (30%)
  Times precision was {false}:     319 (2%)
  Times result was cached:         10063 (63%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      849 (5%)
  Times result was 'false':        2064 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         13964
  BDD entailment checks:           6166
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          8
Number of abstraction locations:          80
Max number of predicates per location:    4
Avg number of predicates per location:    1
Total predicates per abstraction:         22371
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.15
Number of irrelevant predicates:          11327 (51%)
Number of preds handled by boolean abs:   1142 (5%)
  Total number of models for allsat:      949
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.12

Time for post operator:                  6.918s
  Time for path formula creation:        6.748s
Time for strengthen operator:            0.154s
Time for prec operator:                  8.526s
  Time for abstraction:                  8.044s (Max:     0.039s, Count: 15931)
    Boolean abstraction:                 2.088s
    Solving time:                        1.779s (Max:     0.036s)
    Model enumeration time:              0.200s
    Time for BDD construction:           0.146s (Max:     0.012s)
Time for merge operator:                 0.477s
Time for coverage check:                 0.072s
  Time for BDD entailment checks:        0.040s
Total time for SMT solver (w/o itp):     1.979s

Number of path formula cache hits:   82703 (64%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.860s

Total number of created targets for pointer analysis: 4440
   Number of created targets for uf: *unsigned_int is 489


Number of BDD nodes:                               263
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1626 (count: 18787, min: 0, max: 155, avg: 0.09)
Time for BDD node cleanup:                             0.010s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.571s
  Time for transition matches:                         0.261s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.006s
Automaton transfers with branching:                0
Automaton transfer successors:                       119043 (count: 119043, min: 1, max: 1, avg: 1.00) [1 x 119043]

CPA algorithm statistics
------------------------
Number of iterations:            71859
Max size of waitlist:            159
Average size of waitlist:        80
Number of computed successors:   83188
Max successors for one state:    2
Number of times merged:          3899
Number of times stopped:         6842
Number of times breaked:         45

Total time for CPA algorithm:        22.434s (Max:     1.982s)
  Time for choose from waitlist:      0.186s
  Time for precision adjustment:      9.889s
  Time for transfer relation:        10.116s
  Time for merge operator:            0.716s
  Time for stop operator:             0.290s
  Time for adding to reached set:     0.293s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   45
Avg. length of target path (in blocks):                1743 (count: 45, min: 11, max: 57, avg: 38.73)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.765s
  Counterexample analysis:                             1.211s (Max:     0.049s, Calls: 45)
    Refinement sat check:                              0.820s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.099s
  Precision update:                                    0.047s
  ARG update:                                          0.345s

Length of refined path (in blocks):                    1191 (count: 45, min: 4, max: 46, avg: 26.47)
Number of affected states:                              823 (count: 45, min: 0, max: 41, avg: 18.29)
Length (states) of path with itp 'true':                323 (count: 45, min: 0, max: 15, avg: 7.18)
Length (states) of path with itp non-trivial itp:       823 (count: 45, min: 0, max: 41, avg: 18.29)
Length (states) of path with itp 'false':                45 (count: 45, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           3 (count: 45, min: 0, max: 3, avg: 0.07)
Equal non-trivial interpolants along paths:             776 (count: 45, min: 0, max: 40, avg: 17.24)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                45
Number of successful refinements:     45
Number of failed refinements:         0
Max. size of reached set before ref.: 3269
Max. size of reached set after ref.:  741
Avg. size of reached set before ref.: 1999.96
Avg. size of reached set after ref.:  352.96

Total time for CEGAR algorithm:      24.539s
Time for refinements:                 2.074s
Average time for refinement:          0.046s
Max time for refinement:              0.125s

Code Coverage
-----------------------------
  Function coverage:      0.242
  Visited lines:          1080
  Total lines:            2864
  Line coverage:          0.377
  Visited conditions:     70
  Total conditions:       626
  Condition coverage:     0.112

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             168
  Number of reached locations:   159 (4%)
    Avg states per location:     1
    Max states per location:     5 (at node N1505)
  Number of reached functions:   23 (24%)
  Number of partitions:          168
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        19

Time for analysis setup:          5.724s
  Time for loading CPAs:          1.014s
  Time for loading parser:        0.683s
  Time for CFA construction:      3.856s
    Time for parsing file(s):     0.975s
    Time for AST to CFA:          1.478s
    Time for CFA sanity check:    0.281s
    Time for post-processing:     0.928s
      Time for var class.:        0.465s
Time for Analysis:               24.539s
CPU time for analysis:           24.530s
Total time for CPAchecker:       30.268s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.090s

Time for Garbage Collector:       0.859s (in 51 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 79MB (    75 MiB) max;     51MB (    49 MiB) avg;     84MB (    80 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     35MB (    33 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8085MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
