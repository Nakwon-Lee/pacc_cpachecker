scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main3_true-unreach-call_drivers-staging-usbip-vhci-hcd-ko--132_1a--927c3fa-1.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_h66se3su/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 4714: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4717: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4720: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1971;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4741: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4744: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

line 4747: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& kernel_stack));
  goto ldv_5530;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 5344: Dead code detected: priv = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 5496: Dead code detected: unlink = tmp; (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 6490: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6491: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 6496: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 6497: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 6499: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 6500: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 6504: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 7845: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

lines 6300-6305: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_disabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_poll_rh_status to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_remove_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_put_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_event_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_stop_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_task_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usbip_start_eh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_create_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_resume_root_hub to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_create_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_add_hcd to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_check_unlink_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_unlink_urb_from_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_giveback_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_hcd_link_urb_to_ep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            988444 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  860357 (87%)
  Because of loop head:            127334 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         753 (0%)
  Times precision was empty:       32323 (3%)
  Times precision was {false}:     999 (0%)
  Times result was cached:         918477 (93%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      36645 (4%)
  Times result was 'false':        172979 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         994985
  BDD entailment checks:           580955
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       42
Number of predicates discovered:          47
Number of abstraction locations:          212
Max number of predicates per location:    21
Avg number of predicates per location:    6
Total predicates per abstraction:         7091343
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 188.38
Number of irrelevant predicates:          2610916 (37%)
Number of preds handled by boolean abs:   188682 (3%)
  Total number of models for allsat:      91828
  Max number of models for allsat:        64
  Avg number of models for allsat:        2.51

Time for post operator:                 88.811s
  Time for path formula creation:       86.100s
Time for strengthen operator:            5.039s
Time for prec operator:                440.759s
  Time for abstraction:                427.612s (Max:     3.054s, Count: 988444)
    Boolean abstraction:                62.305s
    Solving time:                       44.778s (Max:     0.054s)
    Model enumeration time:              8.733s
    Time for BDD construction:           4.863s (Max:     3.048s)
Time for merge operator:                 7.087s
Time for coverage check:                 0.678s
  Time for BDD entailment checks:        0.540s
Total time for SMT solver (w/o itp):    53.511s

Number of path formula cache hits:   5223274 (78%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    59.492s

Total number of created targets for pointer analysis: 297992
   Number of created targets for uf: *(struct_urb)* is 788
   Number of created targets for uf: *(struct_list_head)* is 36145
   Number of created targets for uf: *unsigned_int is 16521
   Number of created targets for uf: *unsigned_long_int is 374
   Number of created targets for uf: *(struct_vhci_device)* is 788


Number of BDD nodes:                               32339
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       85321 (count: 905852, min: 0, max: 1336, avg: 0.09)
Time for BDD node cleanup:                             0.153s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.319s
  Time for transition matches:                         4.710s
  Time for transition assertions:                      0.009s
  Time for transition actions:                         0.022s
Automaton transfers with branching:                0
Automaton transfer successors:                      5897616 (count: 5897616, min: 1, max: 1, avg: 1.00) [1 x 5897616]

CPA algorithm statistics
------------------------
Number of iterations:            4048128
Max size of waitlist:            68
Average size of waitlist:        19
Number of computed successors:   4599389
Max successors for one state:    2
Number of times merged:          207015
Number of times stopped:         367857
Number of times breaked:         753

Total time for CPA algorithm:       653.377s (Max:     7.043s)
  Time for choose from waitlist:      1.994s
  Time for precision adjustment:    469.027s
  Time for transfer relation:       148.701s
  Time for merge operator:           10.354s
  Time for stop operator:             5.620s
  Time for adding to reached set:     7.004s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   753
Avg. length of target path (in blocks):               31230 (count: 753, min: 5, max: 136, avg: 41.47)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  21.603s
  Counterexample analysis:                            13.462s (Max:     0.062s, Calls: 753)
    Refinement sat check:                              8.767s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.220s
  Precision update:                                    0.527s
  ARG update:                                          6.882s

Length of refined path (in blocks):                   23729 (count: 753, min: 4, max: 87, avg: 31.51)
Number of affected states:                            18141 (count: 753, min: 0, max: 86, avg: 24.09)
Length (states) of path with itp 'true':               4835 (count: 753, min: 0, max: 30, avg: 6.42)
Length (states) of path with itp non-trivial itp:     18141 (count: 753, min: 0, max: 86, avg: 24.09)
Length (states) of path with itp 'false':               753 (count: 753, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         561 (count: 753, min: 0, max: 7, avg: 0.75)
Equal non-trivial interpolants along paths:           16828 (count: 753, min: 0, max: 83, avg: 22.35)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                753
Number of successful refinements:     753
Number of failed refinements:         0
Max. size of reached set before ref.: 39051
Max. size of reached set after ref.:  22202
Avg. size of reached set before ref.: 7819.07
Avg. size of reached set after ref.:  2469.51

Total time for CEGAR algorithm:     680.523s
Time for refinements:                25.715s
Average time for refinement:          0.034s
Max time for refinement:              0.213s

Code Coverage
-----------------------------
  Function coverage:      0.495
  Visited lines:          1803
  Total lines:            2864
  Line coverage:          0.630
  Visited conditions:     326
  Total conditions:       626
  Condition coverage:     0.521

CPAchecker general statistics
-----------------------------
Number of program locations:     3777
Number of CFA edges:             4313
Number of relevant variables:    466
Number of functions:             95
Number of loops:                 23
Size of reached set:             30339
  Number of reached locations:   1045 (28%)
    Avg states per location:     29
    Max states per location:     358 (at node N27)
  Number of reached functions:   47 (49%)
  Number of partitions:          29818
    Avg size of partitions:      1
    Max size of partitions:      19 (with key [N2992 (before line 8265), Function main called from node N2936, stack depth 1 [295bf2a], stack [main]])
  Number of target states:       0

Time for analysis setup:          5.881s
  Time for loading CPAs:          0.884s
  Time for loading parser:        0.621s
  Time for CFA construction:      4.267s
    Time for parsing file(s):     1.213s
    Time for AST to CFA:          1.681s
    Time for CFA sanity check:    0.242s
    Time for post-processing:     0.868s
      Time for var class.:        0.437s
Time for Analysis:              680.523s
CPU time for analysis:          680.450s
Time for analyzing result:        0.024s
Total time for CPAchecker:      686.408s
Total CPU time for CPAchecker:  686.310s
Time for statistics:              0.539s

Time for Garbage Collector:      41.371s (in 1120 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                805MB (   768 MiB) max;    397MB (   379 MiB) avg;    866MB (   826 MiB) peak
Used non-heap memory:             40MB (    39 MiB) max;     40MB (    38 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           983MB (   937 MiB) max;    585MB (   558 MiB) avg
Allocated non-heap memory:        43MB (    41 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8699MB (  8296 MiB) max;   8322MB (  7937 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
