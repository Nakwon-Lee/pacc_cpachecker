scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-radio-si4713-i2c-ko--111_1a--064368f.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_uh8_wuon/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_ctrl_query_fill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strncpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_del_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_device_unregister_subdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_enable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function v4l2_i2c_subdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_request to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function gpio_direction_output to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3879: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_send to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usecs_to_jiffies to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function i2c_master_recv to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function msleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __gpio_set_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function regulator_bulk_disable to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2249 (9% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2005 (89%)
  Because of loop head:            236 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         8 (0%)
  Times precision was empty:       2159 (96%)
  Times precision was {false}:     6 (0%)
  Times result was cached:         59 (3%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      25 (1%)
  Times result was 'false':        14 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         5939
  BDD entailment checks:           467
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       29
Number of predicates discovered:          13
Number of abstraction locations:          15
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         102
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.29
Number of irrelevant predicates:          26 (25%)
Number of preds handled by boolean abs:   28 (27%)
  Total number of models for allsat:      31
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.24

Time for post operator:                  6.376s
  Time for path formula creation:        6.269s
Time for strengthen operator:            0.132s
Time for prec operator:                  0.419s
  Time for abstraction:                  0.201s (Max:     0.018s, Count: 2249)
    Boolean abstraction:                 0.033s
    Solving time:                        0.017s (Max:     0.005s)
    Model enumeration time:              0.004s
    Time for BDD construction:           0.003s (Max:     0.001s)
Time for merge operator:                 1.028s
Time for coverage check:                 0.073s
  Time for BDD entailment checks:        0.063s
Total time for SMT solver (w/o itp):     0.021s

Number of path formula cache hits:   2946 (11%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     6.028s

Total number of created targets for pointer analysis: 19327
   Number of created targets for uf: *unsigned_short_int is 18
   Number of created targets for uf: *signed_char is 7
   Number of created targets for uf: *signed_int is 340
   Number of created targets for uf: *(unsigned_long_int)* is 18
   Number of created targets for uf: *unsigned_char is 41
   Number of created targets for uf: *(unsigned_int)* is 18
   Number of created targets for uf: *unsigned_int is 149
   Number of created targets for uf: *char is 41


Number of BDD nodes:                               206
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          91 (count: 2837, min: 0, max: 40, avg: 0.03)
Time for BDD node cleanup:                             0.003s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.341s
Automaton transfers with branching:                0
Automaton transfer successors:                        26187 (count: 26187, min: 1, max: 1, avg: 1.00) [1 x 26187]

CPA algorithm statistics
------------------------
Number of iterations:            16102
Max size of waitlist:            124
Average size of waitlist:        62
Number of computed successors:   19322
Max successors for one state:    2
Number of times merged:          2736
Number of times stopped:         3203
Number of times breaked:         8

Total time for CPA algorithm:        11.228s (Max:     6.908s)
  Time for choose from waitlist:      0.117s
  Time for precision adjustment:      0.943s
  Time for transfer relation:         8.126s
  Time for merge operator:            1.294s
  Time for stop operator:             0.199s
  Time for adding to reached set:     0.190s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   8
Avg. length of target path (in blocks):                 154 (count: 8, min: 14, max: 22, avg: 19.25)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.244s
  Counterexample analysis:                             0.197s (Max:     0.044s, Calls: 8)
    Refinement sat check:                              0.136s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.025s
  Precision update:                                    0.003s
  ARG update:                                          0.007s

Length of refined path (in blocks):                     146 (count: 8, min: 13, max: 21, avg: 18.25)
Number of affected states:                               48 (count: 8, min: 2, max: 9, avg: 6.00)
Length (states) of path with itp 'true':                 90 (count: 8, min: 10, max: 13, avg: 11.25)
Length (states) of path with itp non-trivial itp:        48 (count: 8, min: 2, max: 9, avg: 6.00)
Length (states) of path with itp 'false':                 8 (count: 8, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          28 (count: 8, min: 1, max: 5, avg: 3.50)
Equal non-trivial interpolants along paths:              12 (count: 8, min: 0, max: 4, avg: 1.50)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                8
Number of successful refinements:     8
Number of failed refinements:         0
Max. size of reached set before ref.: 14213
Max. size of reached set after ref.:  13876
Avg. size of reached set before ref.: 10769.75
Avg. size of reached set after ref.:  10574.00

Total time for CEGAR algorithm:      11.860s
Time for refinements:                 0.522s
Average time for refinement:          0.065s
Max time for refinement:              0.137s

Code Coverage
-----------------------------
  Function coverage:      0.942
  Visited lines:          2131
  Total lines:            2147
  Line coverage:          0.993
  Visited conditions:     514
  Total conditions:       514
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     2725
Number of CFA edges:             3062
Number of relevant variables:    429
Number of functions:             69
Number of loops:                 10
Size of reached set:             14540
  Number of reached locations:   1351 (50%)
    Avg states per location:     10
    Max states per location:     150 (at node N83)
  Number of reached functions:   65 (94%)
  Number of partitions:          14540
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.654s
  Time for loading CPAs:          1.002s
  Time for loading parser:        0.755s
  Time for CFA construction:      3.700s
    Time for parsing file(s):     1.050s
    Time for AST to CFA:          1.395s
    Time for CFA sanity check:    0.230s
    Time for post-processing:     0.890s
      Time for var class.:        0.470s
Time for Analysis:               11.860s
CPU time for analysis:           11.850s
Time for analyzing result:        0.023s
Total time for CPAchecker:       17.526s
Total CPU time for CPAchecker:   17.510s
Time for statistics:              0.370s

Time for Garbage Collector:       0.440s (in 19 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 80MB (    77 MiB) max;     45MB (    43 MiB) avg;     84MB (    81 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     32MB (    30 MiB) avg;     39MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     33MB (    32 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8063MB (  7690 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
