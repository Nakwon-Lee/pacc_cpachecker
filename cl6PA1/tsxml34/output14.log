scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-rc-imon--32_7a--a9e7fb5.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_jjsk7ssi/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3303: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3306: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3309: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4049: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 4054: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 4059: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___2 = get_current();
  __ptr = (u8 volatile *)(& tmp___2->state);
  __asm__ volatile ("xchgb %0,%1": "=q" (__x), "+m" (*__ptr): "0" (__x): "memory");
  goto ldv_26644;
  case 2UL:
  tmp___3 = get_current();
  __ptr___0 = (u16 volatile *)(& tmp___3->state);
  __asm__ volatile ("xchgw %0,%1": "=r" (__x), "+m" (*__ptr___0): "0" (__x): "memory");
  goto ldv_26644;
  case 4UL:
  tmp___4 = get_current();
  __ptr___1 = (u32 volatile *)(& tmp___4->state);
  __asm__ volatile ("xchgl %0,%1": "=r" (__x), "+m" (*__ptr___1): "0" (__x): "memory");
  goto ldv_26644;
  case 8UL:
  tmp___5 = get_current();
  __ptr___2 = (u64 volatile *)(& tmp___5->state);
  __asm__ volatile ("xchgq %0,%1": "=r" (__x), "+m" (*__ptr___2): "0" (__x): "memory");
  goto ldv_26644;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6563: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6797: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_allocate_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23034 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21044 (91%)
  Because of loop head:            1688 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         302 (1%)
  Times precision was empty:       3855 (17%)
  Times precision was {false}:     163 (1%)
  Times result was cached:         18571 (81%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      445 (2%)
  Times result was 'false':        1456 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         29929
  BDD entailment checks:           5553
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          8
Number of abstraction locations:          100
Max number of predicates per location:    5
Avg number of predicates per location:    1
Total predicates per abstraction:         39813
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 65.48
Number of irrelevant predicates:          14876 (37%)
Number of preds handled by boolean abs:   913 (2%)
  Total number of models for allsat:      450
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  2.893s
  Time for path formula creation:        2.705s
Time for strengthen operator:            0.291s
Time for prec operator:                  6.070s
  Time for abstraction:                  5.500s (Max:     0.025s, Count: 23034)
    Boolean abstraction:                 0.585s
    Solving time:                        0.632s (Max:     0.018s)
    Model enumeration time:              0.056s
    Time for BDD construction:           0.040s (Max:     0.008s)
Time for merge operator:                 0.242s
Time for coverage check:                 0.060s
  Time for BDD entailment checks:        0.049s
Total time for SMT solver (w/o itp):     0.688s

Number of path formula cache hits:   218301 (97%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.743s

Total number of created targets for pointer analysis: 506
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_input_dev)* is 4
   Number of created targets for uf: *unsigned_char is 68
   Number of created targets for uf: *(struct_rc_dev)* is 6
   Number of created targets for uf: *_Bool is 15
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *(struct_device)* is 5


Number of BDD nodes:                               257
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1043 (count: 13353, min: 0, max: 118, avg: 0.08)
Time for BDD node cleanup:                             0.020s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.634s
  Time for transition matches:                         0.243s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                       192368 (count: 192368, min: 1, max: 1, avg: 1.00) [1 x 192368]

CPA algorithm statistics
------------------------
Number of iterations:            114412
Max size of waitlist:            23
Average size of waitlist:        11
Number of computed successors:   133006
Max successors for one state:    2
Number of times merged:          12188
Number of times stopped:         16261
Number of times breaked:         302

Total time for CPA algorithm:        15.895s (Max:     0.592s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:      7.316s
  Time for transfer relation:         6.229s
  Time for merge operator:            0.613s
  Time for stop operator:             0.358s
  Time for adding to reached set:     0.393s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   302
Avg. length of target path (in blocks):               17010 (count: 302, min: 9, max: 80, avg: 56.32)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   7.664s
  Counterexample analysis:                             6.759s (Max:     0.054s, Calls: 302)
    Refinement sat check:                              4.508s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.011s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.130s
  Precision update:                                    0.181s
  ARG update:                                          0.381s

Length of refined path (in blocks):                   16630 (count: 302, min: 8, max: 79, avg: 55.07)
Number of affected states:                             5800 (count: 302, min: 1, max: 43, avg: 19.21)
Length (states) of path with itp 'true':              10528 (count: 302, min: 1, max: 68, avg: 34.86)
Length (states) of path with itp non-trivial itp:      5800 (count: 302, min: 1, max: 43, avg: 19.21)
Length (states) of path with itp 'false':               302 (count: 302, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 302, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5498 (count: 302, min: 0, max: 42, avg: 18.21)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                302
Number of successful refinements:     302
Number of failed refinements:         0
Max. size of reached set before ref.: 1532
Max. size of reached set after ref.:  885
Avg. size of reached set before ref.: 728.08
Avg. size of reached set after ref.:  348.25

Total time for CEGAR algorithm:      24.103s
Time for refinements:                 8.114s
Average time for refinement:          0.026s
Max time for refinement:              0.076s

Code Coverage
-----------------------------
  Function coverage:      0.255
  Visited lines:          1035
  Total lines:            2753
  Line coverage:          0.376
  Visited conditions:     116
  Total conditions:       754
  Condition coverage:     0.154

CPAchecker general statistics
-----------------------------
Number of program locations:     3883
Number of CFA edges:             4384
Number of relevant variables:    473
Number of functions:             141
Number of loops:                 9
Size of reached set:             580
  Number of reached locations:   383 (10%)
    Avg states per location:     1
    Max states per location:     12 (at node N3193)
  Number of reached functions:   36 (26%)
  Number of partitions:          578
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2303 (before line 5860), Function imon_find_endpoints called from node N2431, stack depth 4 [9c33d6e], stack [main, imon_probe, imon_init_intf0, imon_find_endpoints]])
  Number of target states:       0
  Size of final wait list        12

Time for analysis setup:          6.167s
  Time for loading CPAs:          1.073s
  Time for loading parser:        0.733s
  Time for CFA construction:      4.200s
    Time for parsing file(s):     1.072s
    Time for AST to CFA:          1.528s
    Time for CFA sanity check:    0.375s
    Time for post-processing:     1.089s
      Time for var class.:        0.531s
Time for Analysis:               24.103s
CPU time for analysis:           24.110s
Total time for CPAchecker:       30.274s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.114s

Time for Garbage Collector:       0.470s (in 62 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     46MB (    44 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
