scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-rc-imon--32_7a--a9e7fb5.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_r7qdi8xa/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 3303: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3306: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 3309: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_2036;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 4049: Dead code detected: tmp___2 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 4054: Dead code detected: tmp___3 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

line 4059: Dead code detected: tmp___4 = get_current(); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  tmp___2 = get_current();
  __ptr = (u8 volatile *)(& tmp___2->state);
  __asm__ volatile ("xchgb %0,%1": "=q" (__x), "+m" (*__ptr): "0" (__x): "memory");
  goto ldv_26644;
  case 2UL:
  tmp___3 = get_current();
  __ptr___0 = (u16 volatile *)(& tmp___3->state);
  __asm__ volatile ("xchgw %0,%1": "=r" (__x), "+m" (*__ptr___0): "0" (__x): "memory");
  goto ldv_26644;
  case 4UL:
  tmp___4 = get_current();
  __ptr___1 = (u32 volatile *)(& tmp___4->state);
  __asm__ volatile ("xchgl %0,%1": "=r" (__x), "+m" (*__ptr___1): "0" (__x): "memory");
  goto ldv_26644;
  case 8UL:
  tmp___5 = get_current();
  __ptr___2 = (u64 volatile *)(& tmp___5->state);
  __asm__ volatile ("xchgq %0,%1": "=r" (__x), "+m" (*__ptr___2): "0" (__x): "memory");
  goto ldv_26644;
  default:
  __xchg_wrong_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 6563: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 6797: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sysfs_remove_group to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_unregister_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_deregister_dev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function del_timer_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_ifnum_to_if to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcat to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_allocate_device to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_free_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function rc_register_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function input_set_abs_params to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            23027 (12% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  21304 (93%)
  Because of loop head:            1461 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         262 (1%)
  Times precision was empty:       4274 (19%)
  Times precision was {false}:     167 (1%)
  Times result was cached:         18087 (79%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      499 (2%)
  Times result was 'false':        1471 (6%)
Number of strengthen sat checks:   0
Number of coverage checks:         28739
  BDD entailment checks:           5287
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       31
Number of predicates discovered:          8
Number of abstraction locations:          128
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         38263
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 57.45
Number of irrelevant predicates:          13974 (37%)
Number of preds handled by boolean abs:   960 (3%)
  Total number of models for allsat:      503
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                  3.072s
  Time for path formula creation:        2.911s
Time for strengthen operator:            0.275s
Time for prec operator:                  6.635s
  Time for abstraction:                  5.933s (Max:     0.029s, Count: 23027)
    Boolean abstraction:                 0.828s
    Solving time:                        0.723s (Max:     0.021s)
    Model enumeration time:              0.046s
    Time for BDD construction:           0.122s (Max:     0.020s)
Time for merge operator:                 0.252s
Time for coverage check:                 0.034s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     0.769s

Number of path formula cache hits:   212625 (96%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.824s

Total number of created targets for pointer analysis: 693
   Number of created targets for uf: *unsigned_short_int is 2
   Number of created targets for uf: *(struct_usb_device)* is 2
   Number of created targets for uf: *(struct_urb)* is 2
   Number of created targets for uf: *(struct_input_dev)* is 4
   Number of created targets for uf: *unsigned_char is 127
   Number of created targets for uf: *(struct_rc_dev)* is 11
   Number of created targets for uf: *_Bool is 28
   Number of created targets for uf: *unsigned_long_long_int is 4
   Number of created targets for uf: *(struct_device)* is 5


Number of BDD nodes:                               264
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1168 (count: 13776, min: 0, max: 162, avg: 0.08)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.606s
  Time for transition matches:                         0.253s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.018s
Automaton transfers with branching:                0
Automaton transfer successors:                       188552 (count: 188552, min: 1, max: 1, avg: 1.00) [1 x 188552]

CPA algorithm statistics
------------------------
Number of iterations:            112870
Max size of waitlist:            28
Average size of waitlist:        14
Number of computed successors:   130724
Max successors for one state:    2
Number of times merged:          11726
Number of times stopped:         15460
Number of times breaked:         262

Total time for CPA algorithm:        16.774s (Max:     0.571s)
  Time for choose from waitlist:      0.231s
  Time for precision adjustment:      7.918s
  Time for transfer relation:         6.601s
  Time for merge operator:            0.535s
  Time for stop operator:             0.324s
  Time for adding to reached set:     0.375s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   262
Avg. length of target path (in blocks):               15088 (count: 262, min: 9, max: 86, avg: 57.59)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.974s
  Counterexample analysis:                             6.026s (Max:     0.059s, Calls: 262)
    Refinement sat check:                              4.038s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.016s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.174s
  Precision update:                                    0.147s
  ARG update:                                          0.396s

Length of refined path (in blocks):                   14765 (count: 262, min: 8, max: 85, avg: 56.35)
Number of affected states:                             5510 (count: 262, min: 1, max: 70, avg: 21.03)
Length (states) of path with itp 'true':               8993 (count: 262, min: 1, max: 69, avg: 34.32)
Length (states) of path with itp non-trivial itp:      5510 (count: 262, min: 1, max: 70, avg: 21.03)
Length (states) of path with itp 'false':               262 (count: 262, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 262, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:            5248 (count: 262, min: 0, max: 69, avg: 20.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                262
Number of successful refinements:     262
Number of failed refinements:         0
Max. size of reached set before ref.: 1823
Max. size of reached set after ref.:  1510
Avg. size of reached set before ref.: 892.57
Avg. size of reached set after ref.:  462.76

Total time for CEGAR algorithm:      24.411s
Time for refinements:                 7.528s
Average time for refinement:          0.028s
Max time for refinement:              0.070s

Code Coverage
-----------------------------
  Function coverage:      0.369
  Visited lines:          1287
  Total lines:            2753
  Line coverage:          0.467
  Visited conditions:     194
  Total conditions:       754
  Condition coverage:     0.257

CPAchecker general statistics
-----------------------------
Number of program locations:     3883
Number of CFA edges:             4384
Number of relevant variables:    473
Number of functions:             141
Number of loops:                 9
Size of reached set:             1183
  Number of reached locations:   639 (16%)
    Avg states per location:     1
    Max states per location:     21 (at node N3193)
  Number of reached functions:   52 (37%)
  Number of partitions:          1178
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N2652 (before line 6239), Function imon_probe called from node N2860, stack depth 2 [2c17de75], stack [main, imon_probe]])
  Number of target states:       0
  Size of final wait list        14

Time for analysis setup:          5.857s
  Time for loading CPAs:          0.957s
  Time for loading parser:        0.724s
  Time for CFA construction:      4.081s
    Time for parsing file(s):     1.096s
    Time for AST to CFA:          1.506s
    Time for CFA sanity check:    0.301s
    Time for post-processing:     1.016s
      Time for var class.:        0.554s
Time for Analysis:               24.411s
CPU time for analysis:           24.400s
Total time for CPAchecker:       30.272s
Total CPU time for CPAchecker:   30.250s
Time for statistics:              0.142s

Time for Garbage Collector:       0.461s (in 60 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     46MB (    44 MiB) avg;     72MB (    69 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     41MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7712 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
