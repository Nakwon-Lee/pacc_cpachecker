scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-s3c-hwmon-ko--130_7a--af3071a.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_6s7k3sll/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7504 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6626 (88%)
  Because of loop head:            837 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         41 (1%)
  Times precision was empty:       1213 (16%)
  Times precision was {false}:     202 (3%)
  Times result was cached:         4902 (65%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1187 (16%)
  Times result was 'false':        404 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         6296
  BDD entailment checks:           3910
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       16
Number of predicates discovered:          13
Number of abstraction locations:          51
Max number of predicates per location:    5
Avg number of predicates per location:    2
Total predicates per abstraction:         15523
Max number of predicates per abstraction: 5
Avg number of predicates per abstraction: 11.18
Number of irrelevant predicates:          7370 (47%)
Number of preds handled by boolean abs:   2157 (14%)
  Total number of models for allsat:      1457
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.23

Time for post operator:                  3.995s
  Time for path formula creation:        3.897s
Time for strengthen operator:            0.099s
Time for prec operator:                  6.720s
  Time for abstraction:                  6.370s (Max:     0.055s, Count: 7504)
    Boolean abstraction:                 1.867s
    Solving time:                        1.588s (Max:     0.044s)
    Model enumeration time:              0.142s
    Time for BDD construction:           0.173s (Max:     0.012s)
Time for merge operator:                 0.190s
Time for coverage check:                 0.016s
  Time for BDD entailment checks:        0.010s
Total time for SMT solver (w/o itp):     1.730s

Number of path formula cache hits:   21704 (53%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.668s

Total number of created targets for pointer analysis: 5602
   Number of created targets for uf: *signed_int is 1825
   Number of created targets for uf: *(struct_s3c_adc_client)* is 82
   Number of created targets for uf: *(struct_device)* is 82


Number of BDD nodes:                               510
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2662 (count: 13428, min: 0, max: 375, avg: 0.20)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.281s
Automaton transfers with branching:                0
Automaton transfer successors:                        36950 (count: 36950, min: 1, max: 1, avg: 1.00) [1 x 36950]

CPA algorithm statistics
------------------------
Number of iterations:            27083
Max size of waitlist:            19
Average size of waitlist:        6
Number of computed successors:   30005
Max successors for one state:    2
Number of times merged:          1193
Number of times stopped:         2572
Number of times breaked:         41

Total time for CPA algorithm:        14.153s (Max:     1.211s)
  Time for choose from waitlist:      0.075s
  Time for precision adjustment:      7.290s
  Time for transfer relation:         5.618s
  Time for merge operator:            0.354s
  Time for stop operator:             0.176s
  Time for adding to reached set:     0.198s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   41
Avg. length of target path (in blocks):                2978 (count: 41, min: 30, max: 138, avg: 72.63)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.140s
  Counterexample analysis:                             1.799s (Max:     0.110s, Calls: 41)
    Refinement sat check:                              0.973s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.074s
  Precision update:                                    0.056s
  ARG update:                                          0.151s

Length of refined path (in blocks):                    2140 (count: 41, min: 6, max: 112, avg: 52.20)
Number of affected states:                              666 (count: 41, min: 1, max: 84, avg: 16.24)
Length (states) of path with itp 'true':               1433 (count: 41, min: 0, max: 104, avg: 34.95)
Length (states) of path with itp non-trivial itp:       666 (count: 41, min: 1, max: 84, avg: 16.24)
Length (states) of path with itp 'false':                41 (count: 41, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          40 (count: 41, min: 0, max: 3, avg: 0.98)
Equal non-trivial interpolants along paths:             585 (count: 41, min: 0, max: 82, avg: 14.27)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                41
Number of successful refinements:     41
Number of failed refinements:         0
Max. size of reached set before ref.: 2415
Max. size of reached set after ref.:  1880
Avg. size of reached set before ref.: 1431.59
Avg. size of reached set after ref.:  808.12

Total time for CEGAR algorithm:      16.529s
Time for refinements:                 2.337s
Average time for refinement:          0.057s
Max time for refinement:              0.117s

Code Coverage
-----------------------------
  Function coverage:      0.759
  Visited lines:          394
  Total lines:            451
  Line coverage:          0.874
  Visited conditions:     50
  Total conditions:       58
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             640
Number of relevant variables:    90
Number of functions:             29
Number of loops:                 4
Size of reached set:             1468
  Number of reached locations:   219 (36%)
    Avg states per location:     6
    Max states per location:     27 (at node N132)
  Number of reached functions:   22 (76%)
  Number of partitions:          1435
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N328 (before line 1243), Function main called from node N277, stack depth 1 [436c81a3], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.530s
  Time for loading CPAs:          0.820s
  Time for loading parser:        0.739s
  Time for CFA construction:      1.756s
    Time for parsing file(s):     0.656s
    Time for AST to CFA:          0.478s
    Time for CFA sanity check:    0.084s
    Time for post-processing:     0.352s
      Time for var class.:        0.140s
Time for Analysis:               16.530s
CPU time for analysis:           16.530s
Time for analyzing result:        0.001s
Total time for CPAchecker:       20.073s
Total CPU time for CPAchecker:   20.070s
Time for statistics:              0.101s

Time for Garbage Collector:       0.312s (in 21 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     41MB (    39 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     34MB (    32 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        40MB (    38 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8069MB (  7695 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
