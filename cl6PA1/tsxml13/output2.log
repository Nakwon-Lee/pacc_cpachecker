scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-s3c-hwmon-ko--130_7a--af3071a.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_v6zqgpfz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function platform_driver_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function s3c_adc_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            7300 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6221 (85%)
  Because of loop head:            1039 (14%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         40 (1%)
  Times precision was empty:       768 (11%)
  Times precision was {false}:     278 (4%)
  Times result was cached:         4231 (58%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2023 (28%)
  Times result was 'false':        645 (9%)
Number of strengthen sat checks:   0
Number of coverage checks:         7520
  BDD entailment checks:           5310
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       16
Number of predicates discovered:          33
Number of abstraction locations:          51
Max number of predicates per location:    19
Avg number of predicates per location:    4
Total predicates per abstraction:         25190
Max number of predicates per abstraction: 19
Avg number of predicates per abstraction: 10.95
Number of irrelevant predicates:          7844 (31%)
Number of preds handled by boolean abs:   7636 (30%)
  Total number of models for allsat:      3513
  Max number of models for allsat:        10
  Avg number of models for allsat:        1.74

Time for post operator:                  4.173s
  Time for path formula creation:        4.049s
Time for strengthen operator:            0.089s
Time for prec operator:                 10.651s
  Time for abstraction:                 10.235s (Max:     0.038s, Count: 7300)
    Boolean abstraction:                 3.838s
    Solving time:                        3.062s (Max:     0.035s)
    Model enumeration time:              0.394s
    Time for BDD construction:           0.225s (Max:     0.012s)
Time for merge operator:                 0.168s
Time for coverage check:                 0.050s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     3.456s

Number of path formula cache hits:   19204 (47%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.822s

Total number of created targets for pointer analysis: 3954
   Number of created targets for uf: *signed_int is 2825
   Number of created targets for uf: *(struct_s3c_adc_client)* is 94
   Number of created targets for uf: *(struct_device)* is 94


Number of BDD nodes:                               5034
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        7087 (count: 21120, min: 0, max: 1150, avg: 0.34)
Time for BDD node cleanup:                             0.014s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.311s
Automaton transfers with branching:                0
Automaton transfer successors:                        37390 (count: 37390, min: 1, max: 1, avg: 1.00) [1 x 37390]

CPA algorithm statistics
------------------------
Number of iterations:            26725
Max size of waitlist:            29
Average size of waitlist:        8
Number of computed successors:   29751
Max successors for one state:    2
Number of times merged:          1105
Number of times stopped:         2132
Number of times breaked:         40

Total time for CPA algorithm:        18.562s (Max:     1.817s)
  Time for choose from waitlist:      0.091s
  Time for precision adjustment:     11.290s
  Time for transfer relation:         5.933s
  Time for merge operator:            0.304s
  Time for stop operator:             0.213s
  Time for adding to reached set:     0.195s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   40
Avg. length of target path (in blocks):                3336 (count: 40, min: 30, max: 172, avg: 83.40)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   2.663s
  Counterexample analysis:                             2.261s (Max:     0.134s, Calls: 40)
    Refinement sat check:                              1.191s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.015s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.060s
  Precision update:                                    0.037s
  ARG update:                                          0.193s

Length of refined path (in blocks):                    2232 (count: 40, min: 6, max: 171, avg: 55.80)
Number of affected states:                             1096 (count: 40, min: 1, max: 170, avg: 27.40)
Length (states) of path with itp 'true':               1096 (count: 40, min: 0, max: 90, avg: 27.40)
Length (states) of path with itp non-trivial itp:      1096 (count: 40, min: 1, max: 170, avg: 27.40)
Length (states) of path with itp 'false':                40 (count: 40, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          81 (count: 40, min: 0, max: 8, avg: 2.03)
Equal non-trivial interpolants along paths:             975 (count: 40, min: 0, max: 165, avg: 24.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                40
Number of successful refinements:     40
Number of failed refinements:         0
Max. size of reached set before ref.: 1925
Max. size of reached set after ref.:  1228
Avg. size of reached set before ref.: 1023.05
Avg. size of reached set after ref.:  409.18

Total time for CEGAR algorithm:      21.438s
Time for refinements:                 2.844s
Average time for refinement:          0.071s
Max time for refinement:              0.142s

Code Coverage
-----------------------------
  Function coverage:      0.759
  Visited lines:          394
  Total lines:            451
  Line coverage:          0.874
  Visited conditions:     50
  Total conditions:       58
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     609
Number of CFA edges:             640
Number of relevant variables:    90
Number of functions:             29
Number of loops:                 4
Size of reached set:             2420
  Number of reached locations:   219 (36%)
    Avg states per location:     11
    Max states per location:     42 (at node N90)
  Number of reached functions:   22 (76%)
  Number of partitions:          2350
    Avg size of partitions:      1
    Max size of partitions:      13 (with key [N226 (before line 1118), Function s3c_hwmon_probe called from node N304, stack depth 2 [335d6f94], stack [main, s3c_hwmon_probe]])
  Number of target states:       0

Time for analysis setup:          3.511s
  Time for loading CPAs:          0.822s
  Time for loading parser:        0.709s
  Time for CFA construction:      1.748s
    Time for parsing file(s):     0.649s
    Time for AST to CFA:          0.445s
    Time for CFA sanity check:    0.096s
    Time for post-processing:     0.372s
      Time for var class.:        0.146s
Time for Analysis:               21.438s
CPU time for analysis:           21.430s
Time for analyzing result:        0.015s
Total time for CPAchecker:       24.961s
Total CPU time for CPAchecker:   24.960s
Time for statistics:              0.140s

Time for Garbage Collector:       0.302s (in 24 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     43MB (    41 MiB) avg;     68MB (    65 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     35MB (    33 MiB) avg;     39MB (    37 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7713 MiB) max;   8072MB (  7698 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
