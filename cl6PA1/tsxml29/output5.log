scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_1pgr5u_6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8880 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6600 (74%)
  Because of loop head:            2233 (25%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         47 (1%)
  Times precision was empty:       1469 (17%)
  Times precision was {false}:     379 (4%)
  Times result was cached:         5921 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1111 (13%)
  Times result was 'false':        616 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         8688
  BDD entailment checks:           3630
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          26
Number of abstraction locations:          78
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         20785
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 13.95
Number of irrelevant predicates:          10150 (49%)
Number of preds handled by boolean abs:   3076 (15%)
  Total number of models for allsat:      1931
  Max number of models for allsat:        12
  Avg number of models for allsat:        1.74

Time for post operator:                  4.594s
  Time for path formula creation:        4.488s
Time for strengthen operator:            0.162s
Time for prec operator:                 12.801s
  Time for abstraction:                 12.417s (Max:     0.317s, Count: 8880)
    Boolean abstraction:                 5.672s
    Solving time:                        5.565s (Max:     0.094s)
    Model enumeration time:              1.572s
    Time for BDD construction:           0.156s (Max:     0.019s)
Time for merge operator:                 0.238s
Time for coverage check:                 0.038s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     7.137s

Number of path formula cache hits:   44490 (69%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.123s

Total number of created targets for pointer analysis: 16500
   Number of created targets for uf: *unsigned_short_int is 34
   Number of created targets for uf: *signed_int is 139
   Number of created targets for uf: *(char)* is 37
   Number of created targets for uf: *unsigned_char is 4100
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 36
   Number of created targets for uf: *(unsigned_char)* is 34
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 35
   Number of created targets for uf: *(struct_device)* is 58
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               2332
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3207 (count: 14260, min: 0, max: 482, avg: 0.22)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.357s
Automaton transfers with branching:                0
Automaton transfer successors:                        57442 (count: 57442, min: 1, max: 1, avg: 1.00) [1 x 57442]

CPA algorithm statistics
------------------------
Number of iterations:            36310
Max size of waitlist:            20
Average size of waitlist:        6
Number of computed successors:   41258
Max successors for one state:    2
Number of times merged:          2529
Number of times stopped:         4185
Number of times breaked:         47

Total time for CPA algorithm:        21.809s (Max:     2.849s)
  Time for choose from waitlist:      0.090s
  Time for precision adjustment:     13.546s
  Time for transfer relation:         6.618s
  Time for merge operator:            0.400s
  Time for stop operator:             0.226s
  Time for adding to reached set:     0.276s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   47
Avg. length of target path (in blocks):                3208 (count: 47, min: 36, max: 110, avg: 68.26)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.278s
  Counterexample analysis:                             3.829s (Max:     0.221s, Calls: 47)
    Refinement sat check:                              2.622s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.010s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.091s
  Precision update:                                    0.058s
  ARG update:                                          0.198s

Length of refined path (in blocks):                    2364 (count: 47, min: 13, max: 102, avg: 50.30)
Number of affected states:                             1236 (count: 47, min: 1, max: 101, avg: 26.30)
Length (states) of path with itp 'true':               1081 (count: 47, min: 0, max: 55, avg: 23.00)
Length (states) of path with itp non-trivial itp:      1236 (count: 47, min: 1, max: 101, avg: 26.30)
Length (states) of path with itp 'false':                47 (count: 47, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          56 (count: 47, min: 0, max: 7, avg: 1.19)
Equal non-trivial interpolants along paths:            1133 (count: 47, min: 0, max: 98, avg: 24.11)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                47
Number of successful refinements:     47
Number of failed refinements:         0
Max. size of reached set before ref.: 2996
Max. size of reached set after ref.:  1751
Avg. size of reached set before ref.: 1633.83
Avg. size of reached set after ref.:  858.19

Total time for CEGAR algorithm:      26.318s
Time for refinements:                 4.463s
Average time for refinement:          0.094s
Max time for refinement:              0.247s

Code Coverage
-----------------------------
  Function coverage:      0.022
  Visited lines:          328
  Total lines:            826
  Line coverage:          0.397
  Visited conditions:     0
  Total conditions:       130
  Condition coverage:     0.000

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             3
  Number of reached locations:   3 (0%)
    Avg states per location:     1
    Max states per location:     1 (at node N660)
  Number of reached functions:   1 (2%)
  Number of partitions:          3
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        1

Time for analysis setup:          3.955s
  Time for loading CPAs:          0.956s
  Time for loading parser:        0.666s
  Time for CFA construction:      2.224s
    Time for parsing file(s):     0.743s
    Time for AST to CFA:          0.654s
    Time for CFA sanity check:    0.166s
    Time for post-processing:     0.506s
      Time for var class.:        0.223s
Time for Analysis:               26.318s
CPU time for analysis:           26.320s
Total time for CPAchecker:       30.280s
Total CPU time for CPAchecker:   30.280s
Time for statistics:              0.103s

Time for Garbage Collector:       0.349s (in 31 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    42 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     36MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
