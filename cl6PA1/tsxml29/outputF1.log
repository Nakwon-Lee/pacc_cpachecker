scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_n_sn4v5e/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            20585 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  14826 (72%)
  Because of loop head:            5700 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         59 (0%)
  Times precision was empty:       878 (4%)
  Times precision was {false}:     556 (3%)
  Times result was cached:         13694 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      5457 (27%)
  Times result was 'false':        2177 (11%)
Number of strengthen sat checks:   0
Number of coverage checks:         24197
  BDD entailment checks:           11529
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          32
Number of abstraction locations:          79
Max number of predicates per location:    11
Avg number of predicates per location:    6
Total predicates per abstraction:         101681
Max number of predicates per abstraction: 11
Avg number of predicates per abstraction: 16.91
Number of irrelevant predicates:          29031 (29%)
Number of preds handled by boolean abs:   21150 (21%)
  Total number of models for allsat:      14115
  Max number of models for allsat:        36
  Avg number of models for allsat:        2.59

Time for post operator:                  8.473s
  Time for path formula creation:        8.318s
Time for strengthen operator:            0.177s
Time for prec operator:                 48.209s
  Time for abstraction:                 47.741s (Max:     0.596s, Count: 20585)
    Boolean abstraction:                31.083s
    Solving time:                       19.412s (Max:     0.227s)
    Model enumeration time:             11.930s
    Time for BDD construction:           0.510s (Max:     0.012s)
Time for merge operator:                 0.517s
Time for coverage check:                 0.080s
  Time for BDD entailment checks:        0.061s
Total time for SMT solver (w/o itp):    31.342s

Number of path formula cache hits:   81902 (56%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.761s

Total number of created targets for pointer analysis: 64359
   Number of created targets for uf: *unsigned_short_int is 129
   Number of created targets for uf: *(char)* is 211
   Number of created targets for uf: *signed_int is 649
   Number of created targets for uf: *unsigned_char is 13845
   Number of created targets for uf: *signed_long_int is 553
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(unsigned_char)* is 129
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 130
   Number of created targets for uf: *(struct_device)* is 241
   Number of created targets for uf: *unsigned_long_int is 97


Number of BDD nodes:                               9229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       15856 (count: 50259, min: 0, max: 952, avg: 0.32)
Time for BDD node cleanup:                             0.018s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.454s
Automaton transfers with branching:                0
Automaton transfer successors:                       133718 (count: 133718, min: 1, max: 1, avg: 1.00) [1 x 133718]

CPA algorithm statistics
------------------------
Number of iterations:            86809
Max size of waitlist:            25
Average size of waitlist:        8
Number of computed successors:   99079
Max successors for one state:    2
Number of times merged:          6334
Number of times stopped:         9640
Number of times breaked:         59

Total time for CPA algorithm:        63.102s (Max:     5.068s)
  Time for choose from waitlist:      0.157s
  Time for precision adjustment:     49.429s
  Time for transfer relation:        11.342s
  Time for merge operator:            0.754s
  Time for stop operator:             0.310s
  Time for adding to reached set:     0.319s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   59
Avg. length of target path (in blocks):                7489 (count: 59, min: 49, max: 240, avg: 126.93)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   9.765s
  Counterexample analysis:                             9.211s (Max:     0.380s, Calls: 59)
    Refinement sat check:                              6.198s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.020s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.090s
  Precision update:                                    0.038s
  ARG update:                                          0.294s

Length of refined path (in blocks):                    5029 (count: 59, min: 10, max: 189, avg: 85.24)
Number of affected states:                             3673 (count: 59, min: 1, max: 188, avg: 62.25)
Length (states) of path with itp 'true':               1297 (count: 59, min: 0, max: 118, avg: 21.98)
Length (states) of path with itp non-trivial itp:      3673 (count: 59, min: 1, max: 188, avg: 62.25)
Length (states) of path with itp 'false':                59 (count: 59, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         116 (count: 59, min: 0, max: 6, avg: 1.97)
Equal non-trivial interpolants along paths:            3498 (count: 59, min: 0, max: 185, avg: 59.29)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                59
Number of successful refinements:     59
Number of failed refinements:         0
Max. size of reached set before ref.: 4931
Max. size of reached set after ref.:  3424
Avg. size of reached set before ref.: 1704.25
Avg. size of reached set after ref.:  296.22

Total time for CEGAR algorithm:      73.201s
Time for refinements:                10.088s
Average time for refinement:          0.170s
Max time for refinement:              0.395s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          742
  Total lines:            826
  Line coverage:          0.898
  Visited conditions:     112
  Total conditions:       130
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             4189
  Number of reached locations:   391 (36%)
    Avg states per location:     10
    Max states per location:     40 (at node N312)
  Number of reached functions:   34 (76%)
  Number of partitions:          4071
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N704 (before line 2424), Function main called from node N660, stack depth 1 [3016fd5e], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.800s
  Time for loading CPAs:          0.791s
  Time for loading parser:        0.669s
  Time for CFA construction:      2.214s
    Time for parsing file(s):     0.771s
    Time for AST to CFA:          0.627s
    Time for CFA sanity check:    0.138s
    Time for post-processing:     0.482s
      Time for var class.:        0.246s
Time for Analysis:               73.201s
CPU time for analysis:           73.200s
Time for analyzing result:        0.004s
Total time for CPAchecker:       77.006s
Total CPU time for CPAchecker:   77.000s
Time for statistics:              0.126s

Time for Garbage Collector:       0.944s (in 91 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 90MB (    86 MiB) max;     55MB (    53 MiB) avg;     94MB (    89 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     38MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8225MB (  7844 MiB) max;   8122MB (  7746 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
