scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_d_b77vd6/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            5919 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  4518 (76%)
  Because of loop head:            1352 (23%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         49 (1%)
  Times precision was empty:       733 (12%)
  Times precision was {false}:     393 (7%)
  Times result was cached:         3565 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1228 (21%)
  Times result was 'false':        272 (5%)
Number of strengthen sat checks:   0
Number of coverage checks:         5533
  BDD entailment checks:           2055
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          23
Number of abstraction locations:          73
Max number of predicates per location:    7
Avg number of predicates per location:    3
Total predicates per abstraction:         13814
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 8.52
Number of irrelevant predicates:          5945 (43%)
Number of preds handled by boolean abs:   3258 (24%)
  Total number of models for allsat:      2349
  Max number of models for allsat:        20
  Avg number of models for allsat:        1.91

Time for post operator:                  4.715s
  Time for path formula creation:        4.631s
Time for strengthen operator:            0.160s
Time for prec operator:                 12.839s
  Time for abstraction:                 12.514s (Max:     0.313s, Count: 5919)
    Boolean abstraction:                 6.567s
    Solving time:                        5.344s (Max:     0.083s)
    Model enumeration time:              2.607s
    Time for BDD construction:           0.161s (Max:     0.010s)
Time for merge operator:                 0.259s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.035s
Total time for SMT solver (w/o itp):     7.952s

Number of path formula cache hits:   17699 (43%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.386s

Total number of created targets for pointer analysis: 18574
   Number of created targets for uf: *unsigned_short_int is 35
   Number of created targets for uf: *signed_int is 204
   Number of created targets for uf: *(char)* is 119
   Number of created targets for uf: *unsigned_char is 3884
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 35
   Number of created targets for uf: *(unsigned_char)* is 35
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 57
   Number of created targets for uf: *(struct_device)* is 59
   Number of created targets for uf: *unsigned_long_int is 16


Number of BDD nodes:                               1229
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2783 (count: 12466, min: 0, max: 550, avg: 0.22)
Time for BDD node cleanup:                             0.022s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.306s
Automaton transfers with branching:                0
Automaton transfer successors:                        38116 (count: 38116, min: 1, max: 1, avg: 1.00) [1 x 38116]

CPA algorithm statistics
------------------------
Number of iterations:            24383
Max size of waitlist:            23
Average size of waitlist:        8
Number of computed successors:   27720
Max successors for one state:    2
Number of times merged:          1739
Number of times stopped:         2721
Number of times breaked:         49

Total time for CPA algorithm:        20.895s (Max:     1.921s)
  Time for choose from waitlist:      0.079s
  Time for precision adjustment:     13.452s
  Time for transfer relation:         6.224s
  Time for merge operator:            0.419s
  Time for stop operator:             0.156s
  Time for adding to reached set:     0.185s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   49
Avg. length of target path (in blocks):                4207 (count: 49, min: 50, max: 144, avg: 85.86)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   5.113s
  Counterexample analysis:                             4.769s (Max:     0.211s, Calls: 49)
    Refinement sat check:                              3.344s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.004s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.096s
  Precision update:                                    0.046s
  ARG update:                                          0.129s

Length of refined path (in blocks):                    2586 (count: 49, min: 13, max: 143, avg: 52.78)
Number of affected states:                             1334 (count: 49, min: 1, max: 142, avg: 27.22)
Length (states) of path with itp 'true':               1203 (count: 49, min: 0, max: 101, avg: 24.55)
Length (states) of path with itp non-trivial itp:      1334 (count: 49, min: 1, max: 142, avg: 27.22)
Length (states) of path with itp 'false':                49 (count: 49, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          45 (count: 49, min: 0, max: 8, avg: 0.92)
Equal non-trivial interpolants along paths:            1240 (count: 49, min: 0, max: 140, avg: 25.31)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                49
Number of successful refinements:     49
Number of failed refinements:         0
Max. size of reached set before ref.: 1333
Max. size of reached set after ref.:  1026
Avg. size of reached set before ref.: 760.43
Avg. size of reached set after ref.:  268.82

Total time for CEGAR algorithm:      26.244s
Time for refinements:                 5.337s
Average time for refinement:          0.108s
Max time for refinement:              0.232s

Code Coverage
-----------------------------
  Function coverage:      0.711
  Visited lines:          676
  Total lines:            826
  Line coverage:          0.818
  Visited conditions:     92
  Total conditions:       130
  Condition coverage:     0.708

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             638
  Number of reached locations:   330 (30%)
    Avg states per location:     1
    Max states per location:     6 (at node N46)
  Number of reached functions:   32 (71%)
  Number of partitions:          623
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N562 (before line 2265), Function ibmpex_bmc_delete called from node N589, stack depth 3 [16d7f503], stack [main, ibmpex_bmc_gone, ibmpex_bmc_delete]])
  Number of target states:       0
  Size of final wait list        10

Time for analysis setup:          4.011s
  Time for loading CPAs:          0.953s
  Time for loading parser:        0.652s
  Time for CFA construction:      2.262s
    Time for parsing file(s):     0.700s
    Time for AST to CFA:          0.759s
    Time for CFA sanity check:    0.161s
    Time for post-processing:     0.510s
      Time for var class.:        0.225s
Time for Analysis:               26.244s
CPU time for analysis:           26.240s
Total time for CPAchecker:       30.259s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.100s

Time for Garbage Collector:       0.306s (in 25 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     45MB (    43 MiB) avg;     71MB (    68 MiB) peak
Used non-heap memory:             39MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8075MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
