scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9b3a8ja9/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8722 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6423 (74%)
  Because of loop head:            2270 (26%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         29 (0%)
  Times precision was empty:       1272 (15%)
  Times precision was {false}:     325 (4%)
  Times result was cached:         5847 (67%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1278 (15%)
  Times result was 'false':        718 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         9581
  BDD entailment checks:           4683
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          24
Number of abstraction locations:          77
Max number of predicates per location:    10
Avg number of predicates per location:    4
Total predicates per abstraction:         27522
Max number of predicates per abstraction: 10
Avg number of predicates per abstraction: 17.17
Number of irrelevant predicates:          9635 (35%)
Number of preds handled by boolean abs:   4128 (15%)
  Total number of models for allsat:      4314
  Max number of models for allsat:        72
  Avg number of models for allsat:        3.38

Time for post operator:                  4.461s
  Time for path formula creation:        4.354s
Time for strengthen operator:            0.151s
Time for prec operator:                 13.990s
  Time for abstraction:                 13.599s (Max:     0.330s, Count: 8722)
    Boolean abstraction:                 6.192s
    Solving time:                        4.760s (Max:     0.100s)
    Model enumeration time:              1.839s
    Time for BDD construction:           0.326s (Max:     0.013s)
Time for merge operator:                 0.255s
Time for coverage check:                 0.061s
  Time for BDD entailment checks:        0.053s
Total time for SMT solver (w/o itp):     6.599s

Number of path formula cache hits:   44368 (71%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.993s

Total number of created targets for pointer analysis: 9870
   Number of created targets for uf: *unsigned_short_int is 31
   Number of created targets for uf: *signed_int is 79
   Number of created targets for uf: *(char)* is 89
   Number of created targets for uf: *unsigned_char is 1577
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 31
   Number of created targets for uf: *(unsigned_char)* is 31
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 24
   Number of created targets for uf: *(struct_device)* is 51
   Number of created targets for uf: *unsigned_long_int is 12


Number of BDD nodes:                               4756
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4031 (count: 15945, min: 0, max: 395, avg: 0.25)
Time for BDD node cleanup:                             0.012s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.298s
Automaton transfers with branching:                0
Automaton transfer successors:                        55096 (count: 55096, min: 1, max: 1, avg: 1.00) [1 x 55096]

CPA algorithm statistics
------------------------
Number of iterations:            35259
Max size of waitlist:            17
Average size of waitlist:        5
Number of computed successors:   40129
Max successors for one state:    2
Number of times merged:          2449
Number of times stopped:         4090
Number of times breaked:         29

Total time for CPA algorithm:        22.566s (Max:     2.008s)
  Time for choose from waitlist:      0.137s
  Time for precision adjustment:     14.635s
  Time for transfer relation:         6.287s
  Time for merge operator:            0.420s
  Time for stop operator:             0.217s
  Time for adding to reached set:     0.234s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   29
Avg. length of target path (in blocks):                2344 (count: 29, min: 36, max: 144, avg: 80.83)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   3.582s
  Counterexample analysis:                             3.173s (Max:     0.235s, Calls: 29)
    Refinement sat check:                              2.064s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.090s
  Precision update:                                    0.056s
  ARG update:                                          0.203s

Length of refined path (in blocks):                    1856 (count: 29, min: 17, max: 117, avg: 64.00)
Number of affected states:                             1361 (count: 29, min: 1, max: 116, avg: 46.93)
Length (states) of path with itp 'true':                466 (count: 29, min: 0, max: 85, avg: 16.07)
Length (states) of path with itp non-trivial itp:      1361 (count: 29, min: 1, max: 116, avg: 46.93)
Length (states) of path with itp 'false':                29 (count: 29, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          51 (count: 29, min: 0, max: 7, avg: 1.76)
Equal non-trivial interpolants along paths:            1281 (count: 29, min: 0, max: 114, avg: 44.17)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                29
Number of successful refinements:     29
Number of failed refinements:         0
Max. size of reached set before ref.: 2936
Max. size of reached set after ref.:  1874
Avg. size of reached set before ref.: 1645.93
Avg. size of reached set after ref.:  485.52

Total time for CEGAR algorithm:      26.391s
Time for refinements:                 3.794s
Average time for refinement:          0.130s
Max time for refinement:              0.255s

Code Coverage
-----------------------------
  Function coverage:      0.756
  Visited lines:          742
  Total lines:            826
  Line coverage:          0.898
  Visited conditions:     112
  Total conditions:       130
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             1670
  Number of reached locations:   391 (36%)
    Avg states per location:     4
    Max states per location:     16 (at node N312)
  Number of reached functions:   34 (76%)
  Number of partitions:          1616
    Avg size of partitions:      1
    Max size of partitions:      12 (with key [N409 (before line 2100), Function ibmpex_find_sensors called from node N522, stack depth 3 [60d14dca], stack [main, ibmpex_register_bmc, ibmpex_find_sensors]])
  Number of target states:       0
  Size of final wait list        5

Time for analysis setup:          3.873s
  Time for loading CPAs:          0.923s
  Time for loading parser:        0.595s
  Time for CFA construction:      2.191s
    Time for parsing file(s):     0.706s
    Time for AST to CFA:          0.683s
    Time for CFA sanity check:    0.158s
    Time for post-processing:     0.492s
      Time for var class.:        0.236s
Time for Analysis:               26.391s
CPU time for analysis:           26.390s
Total time for CPAchecker:       30.269s
Total CPU time for CPAchecker:   30.260s
Time for statistics:              0.134s

Time for Garbage Collector:       0.405s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 68MB (    65 MiB) max;     44MB (    42 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    34 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    36 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8076MB (  7701 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
