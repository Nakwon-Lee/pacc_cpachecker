scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-hwmon-ibmpex-ko--130_7a--d631323.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ycmkqx9i/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_free_recv_msg to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_smi_watcher_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_remove_file to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_unregister to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_destroy_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_create_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_validate_addr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ipmi_request_settime to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function hwmon_device_register to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _dev_info to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            8917 (15% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  6386 (72%)
  Because of loop head:            2474 (28%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         57 (1%)
  Times precision was empty:       2407 (27%)
  Times precision was {false}:     467 (5%)
  Times result was cached:         5122 (57%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      921 (10%)
  Times result was 'false':        587 (7%)
Number of strengthen sat checks:   0
Number of coverage checks:         9349
  BDD entailment checks:           4059
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       20
Number of predicates discovered:          22
Number of abstraction locations:          76
Max number of predicates per location:    8
Avg number of predicates per location:    3
Total predicates per abstraction:         17918
Max number of predicates per abstraction: 8
Avg number of predicates per abstraction: 12.91
Number of irrelevant predicates:          8830 (49%)
Number of preds handled by boolean abs:   2137 (12%)
  Total number of models for allsat:      1637
  Max number of models for allsat:        24
  Avg number of models for allsat:        1.78

Time for post operator:                  5.904s
  Time for path formula creation:        5.766s
Time for strengthen operator:            0.167s
Time for prec operator:                 10.670s
  Time for abstraction:                 10.302s (Max:     0.106s, Count: 8917)
    Boolean abstraction:                 2.866s
    Solving time:                        5.147s (Max:     0.093s)
    Model enumeration time:              0.272s
    Time for BDD construction:           0.160s (Max:     0.013s)
Time for merge operator:                 0.240s
Time for coverage check:                 0.051s
  Time for BDD entailment checks:        0.045s
Total time for SMT solver (w/o itp):     5.419s

Number of path formula cache hits:   30852 (49%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     5.466s

Total number of created targets for pointer analysis: 20895
   Number of created targets for uf: *unsigned_short_int is 36
   Number of created targets for uf: *signed_int is 201
   Number of created targets for uf: *(char)* is 145
   Number of created targets for uf: *unsigned_char is 5569
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *signed_long_int is 36
   Number of created targets for uf: *(unsigned_char)* is 36
   Number of created targets for uf: *(struct_ibmpex_sensor_data)* is 48
   Number of created targets for uf: *(struct_device)* is 58
   Number of created targets for uf: *unsigned_long_int is 13


Number of BDD nodes:                               1339
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2521 (count: 14690, min: 0, max: 601, avg: 0.17)
Time for BDD node cleanup:                             0.005s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.337s
Automaton transfers with branching:                0
Automaton transfer successors:                        57670 (count: 57670, min: 1, max: 1, avg: 1.00) [1 x 57670]

CPA algorithm statistics
------------------------
Number of iterations:            36748
Max size of waitlist:            20
Average size of waitlist:        7
Number of computed successors:   41960
Max successors for one state:    2
Number of times merged:          2645
Number of times stopped:         4537
Number of times breaked:         57

Total time for CPA algorithm:        21.137s (Max:     1.873s)
  Time for choose from waitlist:      0.170s
  Time for precision adjustment:     11.430s
  Time for transfer relation:         7.997s
  Time for merge operator:            0.466s
  Time for stop operator:             0.226s
  Time for adding to reached set:     0.214s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   57
Avg. length of target path (in blocks):                3709 (count: 57, min: 39, max: 125, avg: 65.07)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.374s
  Counterexample analysis:                             3.998s (Max:     0.232s, Calls: 57)
    Refinement sat check:                              2.800s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.005s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.064s
  Precision update:                                    0.055s
  ARG update:                                          0.164s

Length of refined path (in blocks):                    2030 (count: 56, min: 13, max: 101, avg: 36.25)
Number of affected states:                              764 (count: 56, min: 1, max: 100, avg: 13.64)
Length (states) of path with itp 'true':               1210 (count: 56, min: 0, max: 65, avg: 21.61)
Length (states) of path with itp non-trivial itp:       764 (count: 56, min: 1, max: 100, avg: 13.64)
Length (states) of path with itp 'false':                56 (count: 56, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          35 (count: 56, min: 0, max: 7, avg: 0.63)
Equal non-trivial interpolants along paths:             673 (count: 56, min: 0, max: 92, avg: 12.02)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                57
Number of successful refinements:     56
Number of failed refinements:         0
Max. size of reached set before ref.: 3106
Max. size of reached set after ref.:  2032
Avg. size of reached set before ref.: 1377.32
Avg. size of reached set after ref.:  744.11

Total time for CEGAR algorithm:      25.820s
Time for refinements:                 4.634s
Average time for refinement:          0.081s
Max time for refinement:              0.240s

Code Coverage
-----------------------------
  Function coverage:      0.778
  Visited lines:          744
  Total lines:            826
  Line coverage:          0.901
  Visited conditions:     112
  Total conditions:       130
  Condition coverage:     0.862

CPAchecker general statistics
-----------------------------
Number of program locations:     1098
Number of CFA edges:             1168
Number of relevant variables:    149
Number of functions:             45
Number of loops:                 10
Size of reached set:             1967
  Number of reached locations:   395 (36%)
    Avg states per location:     4
    Max states per location:     32 (at node N552)
  Number of reached functions:   35 (78%)
  Number of partitions:          1923
    Avg size of partitions:      1
    Max size of partitions:      5 (with key [N704 (before line 2424), Function main called from node N660, stack depth 1 [6b3e12b5], stack [main]])
  Number of target states:       1
  Size of final wait list        5

Time for analysis setup:          3.974s
  Time for loading CPAs:          0.793s
  Time for loading parser:        0.696s
  Time for CFA construction:      2.333s
    Time for parsing file(s):     0.803s
    Time for AST to CFA:          0.725s
    Time for CFA sanity check:    0.157s
    Time for post-processing:     0.507s
      Time for var class.:        0.255s
Time for Analysis:               25.820s
CPU time for analysis:           25.820s
Total time for CPAchecker:       29.799s
Total CPU time for CPAchecker:   29.800s
Time for statistics:              0.108s

Time for Garbage Collector:       0.416s (in 32 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 73MB (    69 MiB) max;     46MB (    44 MiB) avg;     75MB (    72 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8074MB (  7700 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
