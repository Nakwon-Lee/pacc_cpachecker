scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_xrvooald/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3385: Ignoring function call through function pointer *(ep->ops->free_request): (*(ep->ops->free_request))(ep, req); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function unregister_chrdev_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3265: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3367: Ignoring function call through function pointer *(ep->ops->disable): tmp = (*(ep->ops->disable))(ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3333: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3358: Ignoring function call through function pointer *(ep->ops->enable): tmp = (*(ep->ops->enable))(ep, desc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_warn to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strlcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3953: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3928: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(ep->ep_list.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __mutex_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_waitqueue_head to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function simple_strtoul to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3376: Ignoring function call through function pointer *(ep->ops->alloc_request): tmp = (*(ep->ops->alloc_request))(ep, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1071887 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  987610 (92%)
  Because of loop head:            82454 (8%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1823 (0%)
  Times precision was empty:       389784 (36%)
  Times precision was {false}:     6187 (1%)
  Times result was cached:         644072 (60%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      31844 (3%)
  Times result was 'false':        20821 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         1108575
  BDD entailment checks:           579653
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          62
Number of abstraction locations:          205
Max number of predicates per location:    15
Avg number of predicates per location:    4
Total predicates per abstraction:         4209144
Max number of predicates per abstraction: 15
Avg number of predicates per abstraction: 110.68
Number of irrelevant predicates:          3111447 (74%)
Number of preds handled by boolean abs:   132458 (3%)
  Total number of models for allsat:      121767
  Max number of models for allsat:        48
  Avg number of models for allsat:        3.82

Time for post operator:                247.941s
  Time for path formula creation:      245.034s
Time for strengthen operator:            4.784s
Time for prec operator:                336.543s
  Time for abstraction:                318.595s (Max:     1.876s, Count: 1071887)
    Boolean abstraction:               113.366s
    Solving time:                       89.425s (Max:     0.140s)
    Model enumeration time:             26.828s
    Time for BDD construction:           2.140s (Max:     0.012s)
Time for merge operator:                23.179s
Time for coverage check:                 0.682s
  Time for BDD entailment checks:        0.516s
Total time for SMT solver (w/o itp):   116.253s

Number of path formula cache hits:   3403278 (55%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   213.801s

Total number of created targets for pointer analysis: 1125061
   Number of created targets for uf: *unsigned_short_int is 4807
   Number of created targets for uf: *signed_char is 2547
   Number of created targets for uf: *unsigned_char is 20989
   Number of created targets for uf: *(struct_list_head)* is 6070
   Number of created targets for uf: *(struct_usb_gadget)* is 552
   Number of created targets for uf: *(unsigned_char)* is 552
   Number of created targets for uf: *(struct_usb_ep)* is 1103
   Number of created targets for uf: *(struct_usb_request)* is 1103
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 2333
   Number of created targets for uf: *(struct_device)* is 584
   Number of created targets for uf: *char is 56203
   Number of created targets for uf: *unsigned_long_int is 756


Number of BDD nodes:                               18421
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                       77308 (count: 1198737, min: 0, max: 2337, avg: 0.06)
Time for BDD node cleanup:                             0.248s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  8.674s
  Time for transition matches:                         4.833s
  Time for transition assertions:                      0.002s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      5517258 (count: 5517258, min: 1, max: 1, avg: 1.00) [1 x 5517258]

CPA algorithm statistics
------------------------
Number of iterations:            3690880
Max size of waitlist:            2773
Average size of waitlist:        774
Number of computed successors:   4236178
Max successors for one state:    2
Number of times merged:          264461
Number of times stopped:         444814
Number of times breaked:         1823

Total time for CPA algorithm:       732.911s (Max:    13.022s)
  Time for choose from waitlist:      1.932s
  Time for precision adjustment:    372.021s
  Time for transfer relation:       304.387s
  Time for merge operator:           27.798s
  Time for stop operator:             5.796s
  Time for adding to reached set:     7.682s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1823
Avg. length of target path (in blocks):              161679 (count: 1823, min: 4, max: 250, avg: 88.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 107.614s
  Counterexample analysis:                            96.556s (Max:     0.259s, Calls: 1823)
    Refinement sat check:                             65.393s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.098s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.327s
  Precision update:                                    1.051s
  ARG update:                                          8.638s

Length of refined path (in blocks):                  155512 (count: 1823, min: 3, max: 249, avg: 85.31)
Number of affected states:                            14898 (count: 1823, min: 1, max: 144, avg: 8.17)
Length (states) of path with itp 'true':             138791 (count: 1823, min: 0, max: 244, avg: 76.13)
Length (states) of path with itp non-trivial itp:     14898 (count: 1823, min: 1, max: 144, avg: 8.17)
Length (states) of path with itp 'false':              1823 (count: 1823, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         456 (count: 1823, min: 0, max: 8, avg: 0.25)
Equal non-trivial interpolants along paths:           12619 (count: 1823, min: 0, max: 135, avg: 6.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1823
Number of successful refinements:     1823
Number of failed refinements:         0
Max. size of reached set before ref.: 105257
Max. size of reached set after ref.:  56855
Avg. size of reached set before ref.: 18616.52
Avg. size of reached set after ref.:  16572.84

Total time for CEGAR algorithm:     894.613s
Time for refinements:               136.773s
Average time for refinement:          0.075s
Max time for refinement:              0.605s

Code Coverage
-----------------------------
  Function coverage:      0.830
  Visited lines:          2017
  Total lines:            2347
  Line coverage:          0.859
  Visited conditions:     484
  Total conditions:       614
  Condition coverage:     0.788

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             44909
  Number of reached locations:   1399 (44%)
    Avg states per location:     32
    Max states per location:     692 (at node N936)
  Number of reached functions:   83 (83%)
  Number of partitions:          44446
    Avg size of partitions:      1
    Max size of partitions:      16 (with key [N2619 (before line 5775), Function main called from node N2484, stack depth 1 [51b1a8f6], stack [main]])
  Number of target states:       0
  Size of final wait list        1361

Time for analysis setup:          5.629s
  Time for loading CPAs:          1.049s
  Time for loading parser:        0.693s
  Time for CFA construction:      3.717s
    Time for parsing file(s):     0.993s
    Time for AST to CFA:          1.329s
    Time for CFA sanity check:    0.284s
    Time for post-processing:     0.984s
      Time for var class.:        0.439s
Time for Analysis:              894.613s
CPU time for analysis:          894.550s
Total time for CPAchecker:      900.256s
Total CPU time for CPAchecker:  900.180s
Time for statistics:              0.683s

Time for Garbage Collector:      61.710s (in 582 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1805MB (  1721 MiB) max;    829MB (   791 MiB) avg;   1976MB (  1885 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:          2356MB (  2247 MiB) max;   1223MB (  1166 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     44MB (    42 MiB) avg
Total process virtual memory:   9579MB (  9136 MiB) max;   8687MB (  8284 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
