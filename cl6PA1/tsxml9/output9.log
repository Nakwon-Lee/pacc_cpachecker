scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_evc_8lvp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3358: Ignoring function call through function pointer *(ep->ops->enable): tmp = (*(ep->ops->enable))(ep, desc); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 3367: Ignoring function call through function pointer *(ep->ops->disable): tmp = (*(ep->ops->disable))(ep); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cdev_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __wake_up to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3333: Ignoring function call through function pointer *(p->qproc): (*(p->qproc))(filp, wait_address, p); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            15058 (13% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  13948 (93%)
  Because of loop head:            1034 (7%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         76 (1%)
  Times precision was empty:       5208 (35%)
  Times precision was {false}:     280 (2%)
  Times result was cached:         8941 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      629 (4%)
  Times result was 'false':        1150 (8%)
Number of strengthen sat checks:   0
Number of coverage checks:         14443
  BDD entailment checks:           2749
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          34
Number of abstraction locations:          106
Max number of predicates per location:    9
Avg number of predicates per location:    2
Total predicates per abstraction:         24427
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 26.87
Number of irrelevant predicates:          7797 (32%)
Number of preds handled by boolean abs:   1292 (5%)
  Total number of models for allsat:      720
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.14

Time for post operator:                  5.613s
  Time for path formula creation:        5.505s
Time for strengthen operator:            0.210s
Time for prec operator:                  8.187s
  Time for abstraction:                  7.590s (Max:     0.169s, Count: 15058)
    Boolean abstraction:                 2.485s
    Solving time:                        2.275s (Max:     0.144s)
    Model enumeration time:              0.179s
    Time for BDD construction:           0.153s (Max:     0.014s)
Time for merge operator:                 0.375s
Time for coverage check:                 0.035s
  Time for BDD entailment checks:        0.020s
Total time for SMT solver (w/o itp):     2.454s

Number of path formula cache hits:   111461 (82%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.367s

Total number of created targets for pointer analysis: 2883
   Number of created targets for uf: *unsigned_short_int is 16
   Number of created targets for uf: *signed_char is 25
   Number of created targets for uf: *unsigned_char is 109
   Number of created targets for uf: *(struct_list_head)* is 225
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *(struct_usb_request)* is 7
   Number of created targets for uf: *(struct_usb_endpoint_descriptor)* is 15
   Number of created targets for uf: *(struct_device)* is 54
   Number of created targets for uf: *unsigned_long_int is 7


Number of BDD nodes:                               872
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2695 (count: 13905, min: 0, max: 796, avg: 0.19)
Time for BDD node cleanup:                             0.016s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.666s
  Time for transition matches:                         0.296s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.010s
Automaton transfers with branching:                0
Automaton transfer successors:                       119929 (count: 119929, min: 1, max: 1, avg: 1.00) [1 x 119929]

CPA algorithm statistics
------------------------
Number of iterations:            66721
Max size of waitlist:            66
Average size of waitlist:        31
Number of computed successors:   78356
Max successors for one state:    2
Number of times merged:          5847
Number of times stopped:         7671
Number of times breaked:         76

Total time for CPA algorithm:        20.353s (Max:     1.309s)
  Time for choose from waitlist:      0.183s
  Time for precision adjustment:      9.310s
  Time for transfer relation:         8.617s
  Time for merge operator:            0.670s
  Time for stop operator:             0.289s
  Time for adding to reached set:     0.365s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   76
Avg. length of target path (in blocks):                2546 (count: 76, min: 4, max: 62, avg: 33.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   4.158s
  Counterexample analysis:                             3.536s (Max:     0.087s, Calls: 76)
    Refinement sat check:                              2.690s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.086s
  Precision update:                                    0.100s
  ARG update:                                          0.323s

Length of refined path (in blocks):                    2292 (count: 76, min: 3, max: 59, avg: 30.16)
Number of affected states:                             1512 (count: 76, min: 0, max: 55, avg: 19.89)
Length (states) of path with itp 'true':                704 (count: 76, min: 0, max: 30, avg: 9.26)
Length (states) of path with itp non-trivial itp:      1512 (count: 76, min: 0, max: 55, avg: 19.89)
Length (states) of path with itp 'false':                76 (count: 76, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          91 (count: 76, min: 0, max: 8, avg: 1.20)
Equal non-trivial interpolants along paths:            1346 (count: 76, min: 0, max: 54, avg: 17.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                76
Number of successful refinements:     76
Number of failed refinements:         0
Max. size of reached set before ref.: 2487
Max. size of reached set after ref.:  807
Avg. size of reached set before ref.: 988.00
Avg. size of reached set after ref.:  116.71

Total time for CEGAR algorithm:      24.729s
Time for refinements:                 4.352s
Average time for refinement:          0.057s
Max time for refinement:              0.098s

Code Coverage
-----------------------------
  Function coverage:      0.580
  Visited lines:          1447
  Total lines:            2347
  Line coverage:          0.617
  Visited conditions:     296
  Total conditions:       614
  Condition coverage:     0.482

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             3317
  Number of reached locations:   803 (25%)
    Avg states per location:     4
    Max states per location:     42 (at node N392)
  Number of reached functions:   58 (58%)
  Number of partitions:          3305
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N2619 (before line 5775), Function main called from node N2484, stack depth 1 [213860b8], stack [main]])
  Number of target states:       0
  Size of final wait list        61

Time for analysis setup:          5.548s
  Time for loading CPAs:          0.969s
  Time for loading parser:        0.741s
  Time for CFA construction:      3.679s
    Time for parsing file(s):     1.007s
    Time for AST to CFA:          1.319s
    Time for CFA sanity check:    0.282s
    Time for post-processing:     0.941s
      Time for var class.:        0.439s
Time for Analysis:               24.729s
CPU time for analysis:           24.730s
Total time for CPAchecker:       30.282s
Total CPU time for CPAchecker:   30.270s
Time for statistics:              0.144s

Time for Garbage Collector:       0.557s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 76MB (    72 MiB) max;     47MB (    45 MiB) avg;     78MB (    75 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    39 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     37MB (    35 MiB) avg
Total process virtual memory:   8087MB (  7712 MiB) max;   8073MB (  7699 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
