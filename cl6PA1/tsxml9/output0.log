scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-usb-gadget-g_printer-ko--106_1a--2b9ec6c.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_q5lpqqhe/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 2790: Dead code detected: __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2793: Dead code detected: __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

line 2796: Dead code detected: __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task)); (CFACreationUtils.addEdgeToCFA, INFO)

none: Dead code detected: switch (8UL) {
  case 1UL:
  __asm__ ("movb %%gs:%P1,%0": "=q" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 2UL:
  __asm__ ("movw %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 4UL:
  __asm__ ("movl %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  case 8UL:
  __asm__ ("movq %%gs:%P1,%0": "=r" (pfo_ret__): "p" (& current_task));
  goto ldv_1962;
  default:
  __bad_percpu_size();
  } (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [size > 8192UL] (CFACreationUtils.addEdgeToCFA, INFO)

line 3225: Dead code detected: [!(size > 8192UL)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3226: Dead code detected: tmp = kmalloc_large(size, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [(flags & 1U) == 0U] (CFACreationUtils.addEdgeToCFA, INFO)

line 3231: Dead code detected: [!((flags & 1U) == 0U)] (CFACreationUtils.addEdgeToCFA, INFO)

line 3232: Dead code detected: tmp___0 = kmalloc_slab(size); (CFACreationUtils.addEdgeToCFA, INFO)

line 3234: Dead code detected: [!(((unsigned long)s) == ((unsigned long)((struct kmem_cache *)0)))] (CFACreationUtils.addEdgeToCFA, INFO)

line 3235: Dead code detected: return (16); (CFACreationUtils.addEdgeToCFA, INFO)

line 3239: Dead code detected: ret = kmem_cache_alloc_notrace(s, flags); (CFACreationUtils.addEdgeToCFA, INFO)

line 5820: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 5844: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

line 3333: Function pointer *(p->qproc) with type void (*)(struct file *, wait_queue_head_t *, struct poll_table_struct *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

lines 3035-3037: Function pointer *((void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ))it_func) with type void (*)(void *, unsigned long, const void *, size_t , size_t , gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3376: Function pointer *(ep->ops->alloc_request) with type struct usb_request *(*)(struct usb_ep *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3367: Function pointer *(ep->ops->disable) with type int (*)(struct usb_ep *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3358: Function pointer *(ep->ops->enable) with type int (*)(struct usb_ep *, const struct usb_endpoint_descriptor *) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3394: Function pointer *(ep->ops->queue) with type int (*)(struct usb_ep *, struct usb_request *, gfp_t ) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3427: Function pointer *(gadget->ops->set_selfpowered) with type int (*)(struct usb_gadget *, int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

line 3442: Function pointer *(gadget->ops->vbus_draw) with type int (*)(struct usb_gadget *, unsigned int) is called, but no possible target functions were found. (CFunctionPointerResolver.replaceFunctionPointerCall, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_undef_ptr to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock_nested to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_gadget_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function unregister_chrdev_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function prepare_to_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function finish_wait to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 3394: Ignoring function call through function pointer *(ep->ops->queue): tmp = (*(ep->ops->queue))(ep, req, gfp_flags); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            11143 (24% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  10342 (93%)
  Because of loop head:            568 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         233 (2%)
  Times precision was empty:       1408 (13%)
  Times precision was {false}:     160 (1%)
  Times result was cached:         8576 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      999 (9%)
  Times result was 'false':        1989 (18%)
Number of strengthen sat checks:   0
Number of coverage checks:         3764
  BDD entailment checks:           1722
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       62
Number of predicates discovered:          30
Number of abstraction locations:          101
Max number of predicates per location:    9
Avg number of predicates per location:    4
Total predicates per abstraction:         31854
Max number of predicates per abstraction: 9
Avg number of predicates per abstraction: 27.48
Number of irrelevant predicates:          7289 (23%)
Number of preds handled by boolean abs:   2714 (9%)
  Total number of models for allsat:      1009
  Max number of models for allsat:        3
  Avg number of models for allsat:        1.01

Time for post operator:                  2.262s
  Time for path formula creation:        2.198s
Time for strengthen operator:            0.098s
Time for prec operator:                  6.855s
  Time for abstraction:                  6.458s (Max:     0.149s, Count: 11143)
    Boolean abstraction:                 1.796s
    Solving time:                        1.414s (Max:     0.108s)
    Model enumeration time:              0.136s
    Time for BDD construction:           0.086s (Max:     0.008s)
Time for merge operator:                 0.080s
Time for coverage check:                 0.027s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):     1.550s

Number of path formula cache hits:   49283 (88%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     1.773s

Total number of created targets for pointer analysis: 826
   Number of created targets for uf: *unsigned_char is 73
   Number of created targets for uf: *(struct_list_head)* is 16
   Number of created targets for uf: *(unsigned_char)* is 3
   Number of created targets for uf: *(struct_usb_request)* is 5
   Number of created targets for uf: *unsigned_long_int is 23


Number of BDD nodes:                               980
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3408 (count: 10821, min: 0, max: 1235, avg: 0.31)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.365s
Automaton transfers with branching:                0
Automaton transfer successors:                        46758 (count: 46758, min: 1, max: 1, avg: 1.00) [1 x 46758]

CPA algorithm statistics
------------------------
Number of iterations:            33693
Max size of waitlist:            38
Average size of waitlist:        20
Number of computed successors:   38589
Max successors for one state:    2
Number of times merged:          1021
Number of times stopped:         1775
Number of times breaked:         233

Total time for CPA algorithm:        12.325s (Max:     0.832s)
  Time for choose from waitlist:      0.089s
  Time for precision adjustment:      7.493s
  Time for transfer relation:         3.844s
  Time for merge operator:            0.188s
  Time for stop operator:             0.183s
  Time for adding to reached set:     0.174s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   233
Avg. length of target path (in blocks):               12781 (count: 233, min: 15, max: 108, avg: 54.85)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                  11.139s
  Counterexample analysis:                            10.417s (Max:     0.160s, Calls: 233)
    Refinement sat check:                              7.703s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.008s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.126s
  Precision update:                                    0.195s
  ARG update:                                          0.184s

Length of refined path (in blocks):                   12064 (count: 232, min: 13, max: 107, avg: 52.00)
Number of affected states:                             3125 (count: 232, min: 0, max: 99, avg: 13.47)
Length (states) of path with itp 'true':               8707 (count: 232, min: 0, max: 102, avg: 37.53)
Length (states) of path with itp non-trivial itp:      3125 (count: 232, min: 0, max: 99, avg: 13.47)
Length (states) of path with itp 'false':               232 (count: 232, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:         130 (count: 232, min: 0, max: 8, avg: 0.56)
Equal non-trivial interpolants along paths:            2765 (count: 232, min: 0, max: 93, avg: 11.92)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                233
Number of successful refinements:     232
Number of failed refinements:         0
Max. size of reached set before ref.: 1050
Max. size of reached set after ref.:  1027
Avg. size of reached set before ref.: 575.33
Avg. size of reached set after ref.:  427.70

Total time for CEGAR algorithm:      24.003s
Time for refinements:                11.575s
Average time for refinement:          0.049s
Max time for refinement:              0.170s

Code Coverage
-----------------------------
  Function coverage:      0.510
  Visited lines:          971
  Total lines:            2347
  Line coverage:          0.414
  Visited conditions:     126
  Total conditions:       614
  Condition coverage:     0.205

CPAchecker general statistics
-----------------------------
Number of program locations:     3194
Number of CFA edges:             3667
Number of relevant variables:    520
Number of functions:             100
Number of loops:                 28
Size of reached set:             1048
  Number of reached locations:   431 (13%)
    Avg states per location:     2
    Max states per location:     11 (at node N101)
  Number of reached functions:   51 (51%)
  Number of partitions:          1029
    Avg size of partitions:      1
    Max size of partitions:      4 (with key [N1255 (before line 4377), Function printer_read called from node N2544, stack depth 2 [37cf8e35], stack [main, printer_read]])
  Number of target states:       1
  Size of final wait list        28

Time for analysis setup:          6.245s
  Time for loading CPAs:          1.157s
  Time for loading parser:        0.724s
  Time for CFA construction:      4.222s
    Time for parsing file(s):     1.136s
    Time for AST to CFA:          1.572s
    Time for CFA sanity check:    0.267s
    Time for post-processing:     1.060s
      Time for var class.:        0.554s
Time for Analysis:               24.003s
CPU time for analysis:           24.000s
Total time for CPAchecker:       30.256s
Total CPU time for CPAchecker:   30.240s
Time for statistics:              0.140s

Time for Garbage Collector:       0.322s (in 30 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 66MB (    63 MiB) max;     44MB (    42 MiB) avg;     70MB (    67 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     35MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    35 MiB) avg
Total process virtual memory:   8086MB (  7711 MiB) max;   8072MB (  7698 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
