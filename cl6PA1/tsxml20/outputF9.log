scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ge07p2_f/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            374731 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  322358 (86%)
  Because of loop head:            49825 (13%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2548 (1%)
  Times precision was empty:       34257 (9%)
  Times precision was {false}:     1001 (0%)
  Times result was cached:         337005 (90%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2468 (1%)
  Times result was 'false':        6020 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         253687
  BDD entailment checks:           118933
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          8
Number of abstraction locations:          366
Max number of predicates per location:    7
Avg number of predicates per location:    2
Total predicates per abstraction:         782085
Max number of predicates per abstraction: 7
Avg number of predicates per abstraction: 225.45
Number of irrelevant predicates:          417858 (53%)
Number of preds handled by boolean abs:   3629 (0%)
  Total number of models for allsat:      2424
  Max number of models for allsat:        2
  Avg number of models for allsat:        0.98

Time for post operator:                 33.101s
  Time for path formula creation:       32.301s
Time for strengthen operator:            1.625s
Time for prec operator:                139.833s
  Time for abstraction:                135.052s (Max:     0.386s, Count: 374731)
    Boolean abstraction:                40.522s
    Solving time:                       52.942s (Max:     0.328s)
    Model enumeration time:              1.318s
    Time for BDD construction:           0.113s (Max:     0.010s)
Time for merge operator:                 1.647s
Time for coverage check:                 0.174s
  Time for BDD entailment checks:        0.137s
Total time for SMT solver (w/o itp):    54.260s

Number of path formula cache hits:   2454180 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    23.423s

Total number of created targets for pointer analysis: 282464
   Number of created targets for uf: *unsigned_short_int is 1749
   Number of created targets for uf: *(struct_sk_buff)* is 2
   Number of created targets for uf: *unsigned_char is 225
   Number of created targets for uf: *(struct_list_head)* is 13
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_int is 161


Number of BDD nodes:                               290
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        5044 (count: 174072, min: 0, max: 100, avg: 0.03)
Time for BDD node cleanup:                             0.035s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.297s
  Time for transition matches:                         1.765s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.009s
Automaton transfers with branching:                0
Automaton transfer successors:                      2191898 (count: 2191898, min: 1, max: 1, avg: 1.00) [1 x 2191898]

CPA algorithm statistics
------------------------
Number of iterations:            1239555
Max size of waitlist:            183
Average size of waitlist:        90
Number of computed successors:   1423712
Max successors for one state:    2
Number of times merged:          67377
Number of times stopped:         127737
Number of times breaked:         2548

Total time for CPA algorithm:       219.114s (Max:     4.321s)
  Time for choose from waitlist:      0.674s
  Time for precision adjustment:    148.649s
  Time for transfer relation:        59.240s
  Time for merge operator:            2.653s
  Time for stop operator:             1.984s
  Time for adding to reached set:     2.229s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2548
Avg. length of target path (in blocks):               77313 (count: 2548, min: 6, max: 61, avg: 30.34)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 652.717s
  Counterexample analysis:                           647.972s (Max:     0.995s, Calls: 2548)
    Refinement sat check:                            601.272s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.049s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.262s
  Precision update:                                    1.483s
  ARG update:                                          2.340s

Length of refined path (in blocks):                   74582 (count: 2547, min: 5, max: 60, avg: 29.28)
Number of affected states:                            18793 (count: 2547, min: 3, max: 58, avg: 7.38)
Length (states) of path with itp 'true':              53242 (count: 2547, min: 1, max: 51, avg: 20.90)
Length (states) of path with itp non-trivial itp:     18793 (count: 2547, min: 3, max: 58, avg: 7.38)
Length (states) of path with itp 'false':              2547 (count: 2547, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2547, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           16246 (count: 2547, min: 2, max: 57, avg: 6.38)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2548
Number of successful refinements:     2547
Number of failed refinements:         0
Max. size of reached set before ref.: 13095
Max. size of reached set after ref.:  10842
Avg. size of reached set before ref.: 4909.41
Avg. size of reached set after ref.:  4404.88

Total time for CEGAR algorithm:     889.834s
Time for refinements:               664.152s
Average time for refinement:          0.260s
Max time for refinement:              0.996s

Code Coverage
-----------------------------
  Function coverage:      0.271
  Visited lines:          3031
  Total lines:            10392
  Line coverage:          0.292
  Visited conditions:     718
  Total conditions:       3378
  Condition coverage:     0.213

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             8837
  Number of reached locations:   2029 (14%)
    Avg states per location:     4
    Max states per location:     165 (at node N127)
  Number of reached functions:   126 (27%)
  Number of partitions:          8804
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N2050 (before line 8625), Function carl9170_op_sta_remove called from node N2920, stack depth 2 [2572c493], stack [main, carl9170_op_sta_remove]])
  Number of target states:       1
  Size of final wait list        145

Time for analysis setup:         10.454s
  Time for loading CPAs:          1.357s
  Time for loading parser:        0.733s
  Time for CFA construction:      8.203s
    Time for parsing file(s):     1.506s
    Time for AST to CFA:          3.105s
    Time for CFA sanity check:    0.938s
    Time for post-processing:     2.500s
      Time for var class.:        1.234s
Time for Analysis:              889.834s
CPU time for analysis:          889.700s
Total time for CPAchecker:      900.301s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.318s

Time for Garbage Collector:      10.314s (in 1010 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                193MB (   184 MiB) max;    117MB (   111 MiB) avg;    196MB (   187 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     42MB (    40 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:           216MB (   206 MiB) max;    170MB (   162 MiB) avg
Allocated non-heap memory:        50MB (    48 MiB) max;     50MB (    47 MiB) avg
Total process virtual memory:   8492MB (  8099 MiB) max;   8292MB (  7908 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
