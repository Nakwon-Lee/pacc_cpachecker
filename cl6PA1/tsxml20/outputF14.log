scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_tlgbhi1j/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            420275 (16% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  375757 (89%)
  Because of loop head:            43507 (10%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         1011 (0%)
  Times precision was empty:       90785 (22%)
  Times precision was {false}:     2383 (1%)
  Times result was cached:         324022 (77%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      3085 (1%)
  Times result was 'false':        13511 (3%)
Number of strengthen sat checks:   0
Number of coverage checks:         350659
  BDD entailment checks:           74827
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       56
Number of predicates discovered:          8
Number of abstraction locations:          481
Max number of predicates per location:    6
Avg number of predicates per location:    1
Total predicates per abstraction:         803120
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 146.88
Number of irrelevant predicates:          393435 (49%)
Number of preds handled by boolean abs:   4932 (1%)
  Total number of models for allsat:      3090
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.00

Time for post operator:                 53.864s
  Time for path formula creation:       52.881s
Time for strengthen operator:            2.127s
Time for prec operator:                441.718s
  Time for abstraction:                435.758s (Max:    19.958s, Count: 420275)
    Boolean abstraction:               124.194s
    Solving time:                      302.279s (Max:    19.927s)
    Model enumeration time:              6.446s
    Time for BDD construction:           0.112s (Max:     0.012s)
Time for merge operator:                 4.507s
Time for coverage check:                 0.143s
  Time for BDD entailment checks:        0.101s
Total time for SMT solver (w/o itp):   308.725s

Number of path formula cache hits:   2859870 (93%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    39.598s

Total number of created targets for pointer analysis: 569164
   Number of created targets for uf: *unsigned_short_int is 97
   Number of created targets for uf: *(struct_sk_buff)* is 3
   Number of created targets for uf: *signed_int is 229
   Number of created targets for uf: *unsigned_char is 3095
   Number of created targets for uf: *(struct_list_head)* is 85
   Number of created targets for uf: *(unsigned_char)* is 229
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 2241


Number of BDD nodes:                               260
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        6336 (count: 199370, min: 0, max: 110, avg: 0.03)
Time for BDD node cleanup:                             0.040s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  3.623s
  Time for transition matches:                         1.877s
  Time for transition assertions:                      0.007s
  Time for transition actions:                         0.007s
Automaton transfers with branching:                0
Automaton transfer successors:                      2551172 (count: 2551172, min: 1, max: 1, avg: 1.00) [1 x 2551172]

CPA algorithm statistics
------------------------
Number of iterations:            1644785
Max size of waitlist:            270
Average size of waitlist:        103
Number of computed successors:   1891020
Max successors for one state:    2
Number of times merged:          137916
Number of times stopped:         201053
Number of times breaked:         1011

Total time for CPA algorithm:       558.651s (Max:   114.041s)
  Time for choose from waitlist:      0.768s
  Time for precision adjustment:    452.753s
  Time for transfer relation:        89.830s
  Time for merge operator:            6.139s
  Time for stop operator:             2.014s
  Time for adding to reached set:     2.985s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   1011
Avg. length of target path (in blocks):               29817 (count: 1011, min: 6, max: 82, avg: 29.49)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 319.707s
  Counterexample analysis:                           315.686s (Max:     1.288s, Calls: 1011)
    Refinement sat check:                            295.333s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.026s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.167s
  Precision update:                                    0.662s
  ARG update:                                          2.826s

Length of refined path (in blocks):                   26664 (count: 1011, min: 5, max: 81, avg: 26.37)
Number of affected states:                            16847 (count: 1011, min: 1, max: 74, avg: 16.66)
Length (states) of path with itp 'true':               8806 (count: 1011, min: 1, max: 51, avg: 8.71)
Length (states) of path with itp non-trivial itp:     16847 (count: 1011, min: 1, max: 74, avg: 16.66)
Length (states) of path with itp 'false':              1011 (count: 1011, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 1011, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           15836 (count: 1011, min: 0, max: 73, avg: 15.66)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                1011
Number of successful refinements:     1011
Number of failed refinements:         0
Max. size of reached set before ref.: 26500
Max. size of reached set after ref.:  19265
Avg. size of reached set before ref.: 7918.02
Avg. size of reached set after ref.:  6282.61

Total time for CEGAR algorithm:     889.890s
Time for refinements:               326.994s
Average time for refinement:          0.323s
Max time for refinement:              1.318s

Code Coverage
-----------------------------
  Function coverage:      0.327
  Visited lines:          4170
  Total lines:            10392
  Line coverage:          0.401
  Visited conditions:     1198
  Total conditions:       3378
  Condition coverage:     0.355

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             23054
  Number of reached locations:   3162 (21%)
    Avg states per location:     7
    Max states per location:     262 (at node N14474)
  Number of reached functions:   152 (33%)
  Number of partitions:          23022
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N7791 (before line 15879), Function carl9170_set_freq_cal_data called from node N8507, stack depth 4 [263f9cf5], stack [main, carl9170_op_config, carl9170_set_channel, carl9170_set_freq_cal_data]])
  Number of target states:       0
  Size of final wait list        224

Time for analysis setup:         10.419s
  Time for loading CPAs:          1.217s
  Time for loading parser:        0.709s
  Time for CFA construction:      8.386s
    Time for parsing file(s):     1.616s
    Time for AST to CFA:          3.129s
    Time for CFA sanity check:    0.912s
    Time for post-processing:     2.562s
      Time for var class.:        1.393s
Time for Analysis:              889.890s
CPU time for analysis:          889.790s
Total time for CPAchecker:      900.316s
Total CPU time for CPAchecker:  900.190s
Time for statistics:              0.547s

Time for Garbage Collector:      17.425s (in 1240 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                233MB (   222 MiB) max;    141MB (   134 MiB) avg;    238MB (   227 MiB) peak
Used non-heap memory:             42MB (    40 MiB) max;     41MB (    39 MiB) avg;     42MB (    40 MiB) peak
Allocated heap memory:           253MB (   241 MiB) max;    204MB (   194 MiB) avg
Allocated non-heap memory:        44MB (    42 MiB) max;     43MB (    41 MiB) avg
Total process virtual memory:   8442MB (  8051 MiB) max;   8250MB (  7868 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
