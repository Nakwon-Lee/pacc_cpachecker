scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_9q__oocp/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 30s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 30s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            6268 (17% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  5557 (89%)
  Because of loop head:            677 (11%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         34 (1%)
  Times precision was empty:       3505 (56%)
  Times precision was {false}:     94 (1%)
  Times result was cached:         2502 (40%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      167 (3%)
  Times result was 'false':        223 (4%)
Number of strengthen sat checks:   0
Number of coverage checks:         1999
  BDD entailment checks:           1187
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          3
Number of abstraction locations:          47
Max number of predicates per location:    2
Avg number of predicates per location:    1
Total predicates per abstraction:         4119
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 15.78
Number of irrelevant predicates:          1890 (46%)
Number of preds handled by boolean abs:   197 (5%)
  Total number of models for allsat:      167
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  3.526s
  Time for path formula creation:        3.439s
Time for strengthen operator:            0.102s
Time for prec operator:                  5.326s
  Time for abstraction:                  5.068s (Max:     0.246s, Count: 6268)
    Boolean abstraction:                 2.037s
    Solving time:                        3.454s (Max:     0.224s)
    Model enumeration time:              0.038s
    Time for BDD construction:           0.043s (Max:     0.012s)
Time for merge operator:                 0.056s
Time for coverage check:                 0.039s
  Time for BDD entailment checks:        0.036s
Total time for SMT solver (w/o itp):     3.492s

Number of path formula cache hits:   34439 (81%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.100s

Total number of created targets for pointer analysis: 2158
   Number of created targets for uf: *unsigned_char is 5
   Number of created targets for uf: *_Bool is 25
   Number of created targets for uf: *unsigned_int is 161


Number of BDD nodes:                               204
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         303 (count: 6175, min: 0, max: 62, avg: 0.05)
Time for BDD node cleanup:                             0.002s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.284s
Automaton transfers with branching:                0
Automaton transfer successors:                        37262 (count: 37262, min: 1, max: 1, avg: 1.00) [1 x 37262]

CPA algorithm statistics
------------------------
Number of iterations:            19099
Max size of waitlist:            87
Average size of waitlist:        37
Number of computed successors:   22105
Max successors for one state:    2
Number of times merged:          406
Number of times stopped:         1090
Number of times breaked:         34

Total time for CPA algorithm:        11.451s (Max:     2.042s)
  Time for choose from waitlist:      0.049s
  Time for precision adjustment:      5.794s
  Time for transfer relation:         4.883s
  Time for merge operator:            0.109s
  Time for stop operator:             0.161s
  Time for adding to reached set:     0.090s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   34
Avg. length of target path (in blocks):                 306 (count: 34, min: 6, max: 12, avg: 9.00)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   8.661s
  Counterexample analysis:                             8.508s (Max:     0.426s, Calls: 34)
    Refinement sat check:                              7.985s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.009s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.016s
  Precision update:                                    0.026s
  ARG update:                                          0.088s

Length of refined path (in blocks):                     272 (count: 34, min: 5, max: 11, avg: 8.00)
Number of affected states:                              204 (count: 34, min: 3, max: 9, avg: 6.00)
Length (states) of path with itp 'true':                 34 (count: 34, min: 1, max: 1, avg: 1.00)
Length (states) of path with itp non-trivial itp:       204 (count: 34, min: 3, max: 9, avg: 6.00)
Length (states) of path with itp 'false':                34 (count: 34, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 34, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             170 (count: 34, min: 2, max: 8, avg: 5.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                34
Number of successful refinements:     34
Number of failed refinements:         0
Max. size of reached set before ref.: 975
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 607.12
Avg. size of reached set after ref.:  6.00

Total time for CEGAR algorithm:      20.236s
Time for refinements:                 8.783s
Average time for refinement:          0.258s
Max time for refinement:              0.437s

Code Coverage
-----------------------------
  Function coverage:      0.084
  Visited lines:          1392
  Total lines:            10392
  Line coverage:          0.134
  Visited conditions:     84
  Total conditions:       3378
  Condition coverage:     0.025

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             353
  Number of reached locations:   256 (2%)
    Avg states per location:     1
    Max states per location:     10 (at node N2945)
  Number of reached functions:   39 (8%)
  Number of partitions:          353
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        16

Time for analysis setup:         10.019s
  Time for loading CPAs:          1.312s
  Time for loading parser:        0.698s
  Time for CFA construction:      7.849s
    Time for parsing file(s):     1.631s
    Time for AST to CFA:          3.111s
    Time for CFA sanity check:    0.785s
    Time for post-processing:     2.147s
      Time for var class.:        1.201s
Time for Analysis:               20.236s
CPU time for analysis:           20.240s
Total time for CPAchecker:       30.259s
Total CPU time for CPAchecker:   30.230s
Time for statistics:              0.134s

Time for Garbage Collector:       0.692s (in 34 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                100MB (    96 MiB) max;     71MB (    68 MiB) avg;    102MB (    98 MiB) peak
Used non-heap memory:             47MB (    44 MiB) max;     38MB (    37 MiB) avg;     47MB (    45 MiB) peak
Allocated heap memory:           129MB (   123 MiB) max;    129MB (   123 MiB) avg
Allocated non-heap memory:        48MB (    46 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8089MB (  7714 MiB) max;   8071MB (  7697 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
