scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_qhtymsfc/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function jiffies_to_msecs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_stopped to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_find_sta to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_del_entry to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_scuttle_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_shift_right to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unpoison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_start_tx_ba_cb_irqsafe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ath_regd_get_band_ctl to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            570141 (18% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  513962 (90%)
  Because of loop head:            54120 (9%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         2059 (0%)
  Times precision was empty:       217018 (38%)
  Times precision was {false}:     1676 (0%)
  Times result was cached:         349300 (61%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      2147 (0%)
  Times result was 'false':        10905 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         397949
  BDD entailment checks:           86445
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       139
Number of predicates discovered:          7
Number of abstraction locations:          356
Max number of predicates per location:    6
Avg number of predicates per location:    2
Total predicates per abstraction:         867042
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 226.80
Number of irrelevant predicates:          599542 (69%)
Number of preds handled by boolean abs:   3271 (0%)
  Total number of models for allsat:      2162
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.01

Time for post operator:                 49.849s
  Time for path formula creation:       48.625s
Time for strengthen operator:            2.444s
Time for prec operator:                146.582s
  Time for abstraction:                139.372s (Max:     0.688s, Count: 570141)
    Boolean abstraction:                16.682s
    Solving time:                       37.873s (Max:     0.602s)
    Model enumeration time:              0.520s
    Time for BDD construction:           0.073s (Max:     0.009s)
Time for merge operator:                 4.075s
Time for coverage check:                 0.133s
  Time for BDD entailment checks:        0.091s
Total time for SMT solver (w/o itp):    38.393s

Number of path formula cache hits:   3676106 (94%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:    33.871s

Total number of created targets for pointer analysis: 275732
   Number of created targets for uf: *unsigned_short_int is 93
   Number of created targets for uf: *(struct_sk_buff)* is 9
   Number of created targets for uf: *signed_int is 7
   Number of created targets for uf: *unsigned_char is 74
   Number of created targets for uf: *(struct_list_head)* is 67
   Number of created targets for uf: *(unsigned_char)* is 7
   Number of created targets for uf: *enum_carl9170_tid_state is 2
   Number of created targets for uf: *_Bool is 3
   Number of created targets for uf: *unsigned_int is 161
   Number of created targets for uf: *unsigned_long_int is 1841


Number of BDD nodes:                               256
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        4459 (count: 326025, min: 0, max: 112, avg: 0.01)
Time for BDD node cleanup:                             0.051s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  4.409s
  Time for transition matches:                         2.401s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.019s
Automaton transfers with branching:                0
Automaton transfer successors:                      3221804 (count: 3221804, min: 1, max: 1, avg: 1.00) [1 x 3221804]

CPA algorithm statistics
------------------------
Number of iterations:            2060210
Max size of waitlist:            840
Average size of waitlist:        121
Number of computed successors:   2346301
Max successors for one state:    2
Number of times merged:          155752
Number of times stopped:         228500
Number of times breaked:         2059

Total time for CPA algorithm:       281.262s (Max:    10.295s)
  Time for choose from waitlist:      0.965s
  Time for precision adjustment:    161.549s
  Time for transfer relation:       100.599s
  Time for merge operator:            6.231s
  Time for stop operator:             2.588s
  Time for adding to reached set:     4.185s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2059
Avg. length of target path (in blocks):               52960 (count: 2059, min: 6, max: 115, avg: 25.72)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 593.037s
  Counterexample analysis:                           587.595s (Max:     1.398s, Calls: 2059)
    Refinement sat check:                            552.124s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.032s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.355s
  Precision update:                                    1.268s
  ARG update:                                          3.333s

Length of refined path (in blocks):                   49422 (count: 2059, min: 5, max: 114, avg: 24.00)
Number of affected states:                            33946 (count: 2059, min: 3, max: 107, avg: 16.49)
Length (states) of path with itp 'true':              13417 (count: 2059, min: 1, max: 25, avg: 6.52)
Length (states) of path with itp non-trivial itp:     33946 (count: 2059, min: 3, max: 107, avg: 16.49)
Length (states) of path with itp 'false':              2059 (count: 2059, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 2059, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           31887 (count: 2059, min: 2, max: 106, avg: 15.49)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2059
Number of successful refinements:     2059
Number of failed refinements:         0
Max. size of reached set before ref.: 88016
Max. size of reached set after ref.:  86715
Avg. size of reached set before ref.: 5861.39
Avg. size of reached set after ref.:  4847.17

Total time for CEGAR algorithm:     890.286s
Time for refinements:               602.788s
Average time for refinement:          0.292s
Max time for refinement:              1.406s

Code Coverage
-----------------------------
  Function coverage:      0.340
  Visited lines:          3637
  Total lines:            10392
  Line coverage:          0.350
  Visited conditions:     882
  Total conditions:       3378
  Condition coverage:     0.261

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             18606
  Number of reached locations:   2605 (18%)
    Avg states per location:     7
    Max states per location:     550 (at node N14473)
  Number of reached functions:   158 (34%)
  Number of partitions:          18592
    Avg size of partitions:      1
    Max size of partitions:      3 (with key [N410 (before line 6762), Function carl9170_get_main_vif called from node N1105, stack depth 3 [16c949a2], stack [main, carl9170_op_add_interface, carl9170_get_main_vif]])
  Number of target states:       0
  Size of final wait list        238

Time for analysis setup:          9.973s
  Time for loading CPAs:          1.250s
  Time for loading parser:        0.729s
  Time for CFA construction:      7.865s
    Time for parsing file(s):     1.430s
    Time for AST to CFA:          2.991s
    Time for CFA sanity check:    0.869s
    Time for post-processing:     2.430s
      Time for var class.:        1.211s
Time for Analysis:              890.286s
CPU time for analysis:          890.190s
Total time for CPAchecker:      900.263s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              0.441s

Time for Garbage Collector:      17.216s (in 1403 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                325MB (   310 MiB) max;    125MB (   119 MiB) avg;    338MB (   322 MiB) peak
Used non-heap memory:             49MB (    46 MiB) max;     42MB (    40 MiB) avg;     49MB (    47 MiB) peak
Allocated heap memory:           344MB (   328 MiB) max;    177MB (   169 MiB) avg
Allocated non-heap memory:        51MB (    49 MiB) max;     51MB (    48 MiB) avg
Total process virtual memory:   8424MB (  8034 MiB) max;   8265MB (  7882 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
