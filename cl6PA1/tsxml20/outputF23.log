scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/main0_true-unreach-call_drivers-net-wireless-ath-carl9170-carl9170-ko--32_7a--8a9f335.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_f06_dl81/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 9635: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 11775: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 12032: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 14102: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 15487: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16589: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 16715: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17010: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 17721: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20178: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 20861: Dead code detected: return (-38); (CFACreationUtils.addEdgeToCFA, INFO)

line 21545: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23784: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

line 23828: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_sta_block_awake to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function debug_lockdep_rcu_enabled to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_is_held to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __might_sleep to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_first_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_null to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_alloc_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_anchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_free_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_get_from_anchor to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_submit_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_unanchor_urb to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function find_next_bit to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function skb_dequeue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_stopped to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_wake_queue to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_bh to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_acquire to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_rcu_dereference to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lock_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_find_sta to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_empty to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __bitmap_shift_right to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function kref_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function net_ratelimit to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_err to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function wait_for_completion_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function print_hex_dump_bytes to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function synchronize_sched to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock_irqrestore to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_find_free_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_kfree_skb_any to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_beacon_get_tim to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_stop_queues to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_printk to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ieee80211_queue_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_wait_anchor_empty_timeout to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_kill_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function bitmap_release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __tasklet_hi_schedule to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_poison_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function tasklet_kill to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_scuttle_anchored_urbs to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function complete_all to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function usb_queue_reset_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Shutdown requested (The CPU-time limit of 900s has elapsed.), waiting for termination. (ForceTerminationOnShutdown$1.shutdownRequested, WARNING)

Warning: Analysis interrupted (The CPU-time limit of 900s has elapsed.) (ShutdownNotifier.shutdownIfNecessary, WARNING)

PredicateCPA statistics
-----------------------
Number of abstractions:            1332620 (21% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1284574 (96%)
  Because of loop head:            47522 (4%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         524 (0%)
  Times precision was empty:       78356 (6%)
  Times precision was {false}:     3063 (0%)
  Times result was cached:         1249536 (94%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1665 (0%)
  Times result was 'false':        5700 (0%)
Number of strengthen sat checks:   0
Number of coverage checks:         772322
  BDD entailment checks:           180564
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       55
Number of predicates discovered:          6
Number of abstraction locations:          424
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         1827123
Max number of predicates per abstraction: 3
Avg number of predicates per abstraction: 386.45
Number of irrelevant predicates:          687514 (38%)
Number of preds handled by boolean abs:   1826 (0%)
  Total number of models for allsat:      1617
  Max number of models for allsat:        1
  Avg number of models for allsat:        0.97

Time for post operator:                167.079s
  Time for path formula creation:      164.357s
Time for strengthen operator:            5.271s
Time for prec operator:                241.894s
  Time for abstraction:                221.652s (Max:     3.193s, Count: 1332620)
    Boolean abstraction:                20.468s
    Solving time:                       39.721s (Max:     0.628s)
    Model enumeration time:              0.666s
    Time for BDD construction:           0.069s (Max:     0.008s)
Time for merge operator:                13.180s
Time for coverage check:                 0.298s
  Time for BDD entailment checks:        0.213s
Total time for SMT solver (w/o itp):    40.387s

Number of path formula cache hits:   7113409 (90%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:   123.954s

Total number of created targets for pointer analysis: 914272
   Number of created targets for uf: *unsigned_short_int is 2853
   Number of created targets for uf: *unsigned_char is 1304
   Number of created targets for uf: *(struct_list_head)* is 4
   Number of created targets for uf: *_Bool is 5
   Number of created targets for uf: *unsigned_int is 161
   Number of created targets for uf: *unsigned_long_int is 10041


Number of BDD nodes:                               225
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3351 (count: 285432, min: 0, max: 182, avg: 0.01)
Time for BDD node cleanup:                             0.086s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  7.623s
  Time for transition matches:                         4.278s
  Time for transition assertions:                      0.000s
  Time for transition actions:                         0.004s
Automaton transfers with branching:                0
Automaton transfer successors:                      6438954 (count: 6438954, min: 1, max: 1, avg: 1.00) [1 x 6438954]

CPA algorithm statistics
------------------------
Number of iterations:            4444058
Max size of waitlist:            157
Average size of waitlist:        111
Number of computed successors:   4934971
Max successors for one state:    2
Number of times merged:          295879
Number of times stopped:         469564
Number of times breaked:         524

Total time for CPA algorithm:       674.274s (Max:   110.189s)
  Time for choose from waitlist:      1.826s
  Time for precision adjustment:    280.178s
  Time for transfer relation:       349.897s
  Time for merge operator:           16.574s
  Time for stop operator:             5.930s
  Time for adding to reached set:     8.229s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   524
Avg. length of target path (in blocks):               32321 (count: 524, min: 8, max: 256, avg: 61.68)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                 188.005s
  Counterexample analysis:                           176.159s (Max:     0.902s, Calls: 524)
    Refinement sat check:                            159.815s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.021s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.209s
  Precision update:                                    0.217s
  ARG update:                                         11.124s

Length of refined path (in blocks):                   30306 (count: 524, min: 7, max: 255, avg: 57.84)
Number of affected states:                            22778 (count: 524, min: 1, max: 248, avg: 43.47)
Length (states) of path with itp 'true':               7004 (count: 524, min: 1, max: 43, avg: 13.37)
Length (states) of path with itp non-trivial itp:     22778 (count: 524, min: 1, max: 248, avg: 43.47)
Length (states) of path with itp 'false':               524 (count: 524, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 524, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:           22254 (count: 524, min: 0, max: 247, avg: 42.47)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                524
Number of successful refinements:     524
Number of failed refinements:         0
Max. size of reached set before ref.: 330308
Max. size of reached set after ref.:  329985
Avg. size of reached set before ref.: 32960.07
Avg. size of reached set after ref.:  24926.23

Total time for CEGAR algorithm:     889.845s
Time for refinements:               203.646s
Average time for refinement:          0.388s
Max time for refinement:              1.789s

Code Coverage
-----------------------------
  Function coverage:      0.292
  Visited lines:          3318
  Total lines:            10392
  Line coverage:          0.319
  Visited conditions:     816
  Total conditions:       3378
  Condition coverage:     0.242

CPAchecker general statistics
-----------------------------
Number of program locations:     14816
Number of CFA edges:             17417
Number of relevant variables:    3043
Number of functions:             465
Number of loops:                 125
Size of reached set:             249971
  Number of reached locations:   2288 (15%)
    Avg states per location:     109
    Max states per location:     13217 (at node N14474)
  Number of reached functions:   136 (29%)
  Number of partitions:          249967
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N358 (before line 6663), Function carl9170_set_state_when called from node N899, stack depth 3 [65ad6bee], stack [main, carl9170_op_stop, carl9170_set_state_when]])
  Number of target states:       0
  Size of final wait list        121

Time for analysis setup:         10.373s
  Time for loading CPAs:          1.325s
  Time for loading parser:        0.745s
  Time for CFA construction:      8.143s
    Time for parsing file(s):     1.700s
    Time for AST to CFA:          3.277s
    Time for CFA sanity check:    0.700s
    Time for post-processing:     2.214s
      Time for var class.:        1.274s
Time for Analysis:              889.845s
CPU time for analysis:          889.790s
Total time for CPAchecker:      900.227s
Total CPU time for CPAchecker:  900.140s
Time for statistics:              2.645s

Time for Garbage Collector:      56.893s (in 796 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:               1455MB (  1387 MiB) max;    601MB (   573 MiB) avg;   1488MB (  1419 MiB) peak
Used non-heap memory:             48MB (    46 MiB) max;     41MB (    39 MiB) avg;     48MB (    46 MiB) peak
Allocated heap memory:          1494MB (  1425 MiB) max;    936MB (   893 MiB) avg
Allocated non-heap memory:        51MB (    48 MiB) max;     50MB (    48 MiB) avg
Total process virtual memory:   8224MB (  7843 MiB) max;   8167MB (  7789 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
