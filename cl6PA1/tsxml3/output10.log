scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_sound-oss-opl3-ko--111_1a--42f9f8d.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_az0y966b/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_initialize to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function strcpy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __request_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __release_region to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_alloc_synthdev to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sequencer_init to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function conf_printf2 to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_final_state to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function sound_unload_synthdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2526: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function compute_finetune to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function note_to_freq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            2194 (22% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  1707 (78%)
  Because of loop head:            480 (22%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         7 (0%)
  Times precision was empty:       2116 (96%)
  Times precision was {false}:     7 (0%)
  Times result was cached:         52 (2%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      19 (1%)
  Times result was 'false':        13 (1%)
Number of strengthen sat checks:   0
Number of coverage checks:         1082
  BDD entailment checks:           534
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       40
Number of predicates discovered:          8
Number of abstraction locations:          11
Max number of predicates per location:    3
Avg number of predicates per location:    1
Total predicates per abstraction:         90
Max number of predicates per abstraction: 2
Avg number of predicates per abstraction: 3.46
Number of irrelevant predicates:          29 (32%)
Number of preds handled by boolean abs:   20 (22%)
  Total number of models for allsat:      21
  Max number of models for allsat:        2
  Avg number of models for allsat:        1.11

Time for post operator:                  4.420s
  Time for path formula creation:        4.360s
Time for strengthen operator:            0.104s
Time for prec operator:                  0.570s
  Time for abstraction:                  0.350s (Max:     0.060s, Count: 2194)
    Boolean abstraction:                 0.099s
    Solving time:                        0.080s (Max:     0.027s)
    Model enumeration time:              0.003s
    Time for BDD construction:           0.001s (Max:     0.001s)
Time for merge operator:                 0.140s
Time for coverage check:                 0.031s
  Time for BDD entailment checks:        0.030s
Total time for SMT solver (w/o itp):     0.083s

Number of path formula cache hits:   2727 (24%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     4.264s

Total number of created targets for pointer analysis: 3242
   Number of created targets for uf: *unsigned_short_int is 39
   Number of created targets for uf: *signed_int is 38
   Number of created targets for uf: *unsigned_char is 19
   Number of created targets for uf: *(struct_synth_operations)* is 12


Number of BDD nodes:                               203
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                          62 (count: 2820, min: 0, max: 45, avg: 0.02)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.132s
Automaton transfers with branching:                0
Automaton transfer successors:                        10200 (count: 10200, min: 1, max: 1, avg: 1.00) [1 x 10200]

CPA algorithm statistics
------------------------
Number of iterations:            7399
Max size of waitlist:            23
Average size of waitlist:        8
Number of computed successors:   8230
Max successors for one state:    2
Number of times merged:          274
Number of times stopped:         808
Number of times breaked:         7

Total time for CPA algorithm:         6.894s (Max:     3.732s)
  Time for choose from waitlist:      0.068s
  Time for precision adjustment:      0.920s
  Time for transfer relation:         5.305s
  Time for merge operator:            0.194s
  Time for stop operator:             0.097s
  Time for adding to reached set:     0.097s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   7
Avg. length of target path (in blocks):                  85 (count: 7, min: 8, max: 16, avg: 12.14)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.665s
  Counterexample analysis:                             1.613s (Max:     0.390s, Calls: 7)
    Refinement sat check:                              1.512s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.002s
  ARG update:                                          0.007s

Length of refined path (in blocks):                      78 (count: 7, min: 7, max: 15, avg: 11.14)
Number of affected states:                               43 (count: 7, min: 2, max: 10, avg: 6.14)
Length (states) of path with itp 'true':                 28 (count: 7, min: 4, max: 4, avg: 4.00)
Length (states) of path with itp non-trivial itp:        43 (count: 7, min: 2, max: 10, avg: 6.14)
Length (states) of path with itp 'false':                 7 (count: 7, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:          16 (count: 7, min: 1, max: 3, avg: 2.29)
Equal non-trivial interpolants along paths:              20 (count: 7, min: 0, max: 6, avg: 2.86)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                7
Number of successful refinements:     7
Number of failed refinements:         0
Max. size of reached set before ref.: 1647
Max. size of reached set after ref.:  1572
Avg. size of reached set before ref.: 1348.14
Avg. size of reached set after ref.:  1307.29

Total time for CEGAR algorithm:       8.671s
Time for refinements:                 1.769s
Average time for refinement:          0.252s
Max time for refinement:              0.445s

Code Coverage
-----------------------------
  Function coverage:      0.848
  Visited lines:          1423
  Total lines:            1450
  Line coverage:          0.981
  Visited conditions:     382
  Total conditions:       384
  Condition coverage:     0.995

CPAchecker general statistics
-----------------------------
Number of program locations:     1936
Number of CFA edges:             2218
Number of relevant variables:    231
Number of functions:             46
Number of loops:                 21
Size of reached set:             7124
  Number of reached locations:   1014 (52%)
    Avg states per location:     7
    Max states per location:     312 (at node N12)
  Number of reached functions:   39 (85%)
  Number of partitions:          7124
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0

Time for analysis setup:          5.338s
  Time for loading CPAs:          0.961s
  Time for loading parser:        0.700s
  Time for CFA construction:      3.517s
    Time for parsing file(s):     1.021s
    Time for AST to CFA:          1.217s
    Time for CFA sanity check:    0.250s
    Time for post-processing:     0.845s
      Time for var class.:        0.467s
Time for Analysis:                8.671s
CPU time for analysis:            8.680s
Time for analyzing result:        0.014s
Total time for CPAchecker:       14.022s
Total CPU time for CPAchecker:   14.020s
Time for statistics:              0.256s

Time for Garbage Collector:       0.266s (in 14 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 67MB (    63 MiB) max;     41MB (    39 MiB) avg;     74MB (    71 MiB) peak
Used non-heap memory:             36MB (    34 MiB) max;     29MB (    28 MiB) avg;     36MB (    35 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        38MB (    36 MiB) max;     31MB (    30 MiB) avg
Total process virtual memory:   8088MB (  7713 MiB) max;   8059MB (  7685 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
