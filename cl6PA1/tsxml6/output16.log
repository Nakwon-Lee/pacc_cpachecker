scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_013t2nfy/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_enable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_set_master to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __init_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function lockdep_init_map to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_work to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dma_supported to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __raw_spin_lock_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function init_timer_key to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_risc_stopper to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function request_threaded_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_set_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_disable_device to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function free_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function btcx_riscmem_free to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5921: Ignoring function call through function pointer *(drv->advise_release): (*(drv->advise_release))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5921: Unsupported feature (recursion): cx8802_request_release(drv); (line was originally pointer call(cx8802_request_release) (*(drv->advise_release))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            2609 (20% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  2404 (92%)
  Because of loop head:            163 (6%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         42 (2%)
  Times precision was empty:       398 (15%)
  Times precision was {false}:     72 (3%)
  Times result was cached:         1849 (71%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      290 (11%)
  Times result was 'false':        336 (13%)
Number of strengthen sat checks:   0
Number of coverage checks:         821
  BDD entailment checks:           415
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          6
Number of abstraction locations:          74
Max number of predicates per location:    4
Avg number of predicates per location:    3
Total predicates per abstraction:         7031
Max number of predicates per abstraction: 4
Avg number of predicates per abstraction: 19.42
Number of irrelevant predicates:          1213 (17%)
Number of preds handled by boolean abs:   709 (10%)
  Total number of models for allsat:      290
  Max number of models for allsat:        1
  Avg number of models for allsat:        1.00

Time for post operator:                  0.894s
  Time for path formula creation:        0.812s
Time for strengthen operator:            0.091s
Time for prec operator:                  2.091s
  Time for abstraction:                  1.914s (Max:     0.019s, Count: 2609)
    Boolean abstraction:                 0.400s
    Solving time:                        0.257s (Max:     0.013s)
    Model enumeration time:              0.028s
    Time for BDD construction:           0.048s (Max:     0.009s)
Time for merge operator:                 0.028s
Time for coverage check:                 0.003s
  Time for BDD entailment checks:        0.002s
Total time for SMT solver (w/o itp):     0.285s

Number of path formula cache hits:   13266 (87%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     0.685s

Total number of created targets for pointer analysis: 87
   Number of created targets for uf: *(struct_list_head)* is 2
   Number of created targets for uf: *(struct_pci_dev)* is 2
   Number of created targets for uf: *(struct_cx88_core)* is 2


Number of BDD nodes:                               217
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                         548 (count: 2960, min: 0, max: 156, avg: 0.19)
Time for BDD node cleanup:                             0.011s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.189s
Automaton transfers with branching:                0
Automaton transfer successors:                        12971 (count: 12971, min: 1, max: 1, avg: 1.00) [1 x 12971]

CPA algorithm statistics
------------------------
Number of iterations:            8490
Max size of waitlist:            16
Average size of waitlist:        5
Number of computed successors:   9624
Max successors for one state:    2
Number of times merged:          203
Number of times stopped:         469
Number of times breaked:         42

Total time for CPA algorithm:         4.983s (Max:     0.593s)
  Time for choose from waitlist:      0.050s
  Time for precision adjustment:      2.500s
  Time for transfer relation:         2.011s
  Time for merge operator:            0.057s
  Time for stop operator:             0.101s
  Time for adding to reached set:     0.085s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   42
Avg. length of target path (in blocks):                1125 (count: 42, min: 7, max: 49, avg: 26.79)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.763s
  Counterexample analysis:                             0.505s (Max:     0.022s, Calls: 42)
    Refinement sat check:                              0.325s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.001s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.066s
  Precision update:                                    0.063s
  ARG update:                                          0.052s

Length of refined path (in blocks):                    1083 (count: 42, min: 6, max: 48, avg: 25.79)
Number of affected states:                              954 (count: 42, min: 4, max: 46, avg: 22.71)
Length (states) of path with itp 'true':                 87 (count: 42, min: 1, max: 18, avg: 2.07)
Length (states) of path with itp non-trivial itp:       954 (count: 42, min: 4, max: 46, avg: 22.71)
Length (states) of path with itp 'false':                42 (count: 42, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           0 (count: 42, min: 0, max: 0, avg: 0.00)
Equal non-trivial interpolants along paths:             912 (count: 42, min: 3, max: 45, avg: 21.71)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                42
Number of successful refinements:     42
Number of failed refinements:         0
Max. size of reached set before ref.: 432
Max. size of reached set after ref.:  280
Avg. size of reached set before ref.: 225.90
Avg. size of reached set after ref.:  25.00

Total time for CEGAR algorithm:       5.810s
Time for refinements:                 0.810s
Average time for refinement:          0.019s
Max time for refinement:              0.052s

Code Coverage
-----------------------------
  Function coverage:      0.402
  Visited lines:          1062
  Total lines:            1844
  Line coverage:          0.576
  Visited conditions:     74
  Total conditions:       392
  Condition coverage:     0.189

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             382
  Number of reached locations:   307 (12%)
    Avg states per location:     1
    Max states per location:     5 (at node N70)
  Number of reached functions:   37 (40%)
  Number of partitions:          382
    Avg size of partitions:      1
    Max size of partitions:      1
  Number of target states:       0
  Size of final wait list        11

Time for analysis setup:          5.033s
  Time for loading CPAs:          0.895s
  Time for loading parser:        0.664s
  Time for CFA construction:      3.342s
    Time for parsing file(s):     0.998s
    Time for AST to CFA:          1.132s
    Time for CFA sanity check:    0.243s
    Time for post-processing:     0.820s
      Time for var class.:        0.364s
Time for Analysis:                5.810s
CPU time for analysis:            5.810s
Total time for CPAchecker:       10.850s
Total CPU time for CPAchecker:   10.840s
Time for statistics:              0.088s

Time for Garbage Collector:       0.186s (in 13 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 65MB (    62 MiB) max;     38MB (    37 MiB) avg;     69MB (    66 MiB) peak
Used non-heap memory:             35MB (    34 MiB) max;     29MB (    27 MiB) avg;     36MB (    34 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        37MB (    35 MiB) max;     31MB (    29 MiB) avg
Total process virtual memory:   8018MB (  7647 MiB) max;   7992MB (  7621 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
