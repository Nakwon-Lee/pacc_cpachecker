scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABElf -heap 5600000000 -timelimit 30 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-commit-tester/m0_true-unreach-call_drivers-media-video-cx88-cx8802-ko--32_7a--d47b389.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_gkyk5_uz/tmp
Using the following resource limits: CPU-time limit of 30s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_151) started (CPAchecker.run, INFO)

line 5292: Dead code detected: return (0); (CFACreationUtils.addEdgeToCFA, INFO)

line 6362: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __pci_register_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_get to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_put to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value_probe to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_dump to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function dev_get_drvdata to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_core_irq to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_print_irqbits to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_wakeup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _raw_spin_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function cx88_sram_channel_setup to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function list_del to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __list_add to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 5315: Return type of function __builtin_prefetch is void, but result is used as type int: __builtin_prefetch((const void *)(buf->vb.queue.next)); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_prefetch to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_prefetch, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function mod_timer to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pci_unregister_driver to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function flush_work_sync to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 6187: Ignoring function call through function pointer *(drv->remove): err = (*(drv->remove))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

line 5894: Ignoring function call through function pointer *(drv->advise_acquire): (*(drv->advise_acquire))(drv); (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Recursion detected, aborting. To ignore recursion, add -skipRecursion to the command line. (CallstackCPA:CallstackTransferRelation.getAbstractSuccessorsForEdge, INFO)

Error: line 5894: Unsupported feature (recursion): cx8802_request_acquire(drv); (line was originally pointer call(cx8802_request_acquire) (*(drv->advise_acquire))(drv);) (CallstackTransferRelation.getAbstractSuccessorsForEdge, SEVERE)

PredicateCPA statistics
-----------------------
Number of abstractions:            27665 (19% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  26177 (95%)
  Because of loop head:            1430 (5%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         58 (0%)
  Times precision was empty:       9585 (35%)
  Times precision was {false}:     255 (1%)
  Times result was cached:         16353 (59%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1472 (5%)
  Times result was 'false':        428 (2%)
Number of strengthen sat checks:   0
Number of coverage checks:         17208
  BDD entailment checks:           5126
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       18
Number of predicates discovered:          7
Number of abstraction locations:          54
Max number of predicates per location:    6
Avg number of predicates per location:    3
Total predicates per abstraction:         53146
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 30.77
Number of irrelevant predicates:          27949 (53%)
Number of preds handled by boolean abs:   3800 (7%)
  Total number of models for allsat:      2083
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.42

Time for post operator:                  4.251s
  Time for path formula creation:        4.056s
Time for strengthen operator:            0.317s
Time for prec operator:                  9.030s
  Time for abstraction:                  8.297s (Max:     0.019s, Count: 27665)
    Boolean abstraction:                 1.619s
    Solving time:                        1.221s (Max:     0.013s)
    Model enumeration time:              0.209s
    Time for BDD construction:           0.207s (Max:     0.012s)
Time for merge operator:                 0.230s
Time for coverage check:                 0.091s
  Time for BDD entailment checks:        0.072s
Total time for SMT solver (w/o itp):     1.430s

Number of path formula cache hits:   146084 (85%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.600s

Total number of created targets for pointer analysis: 1
   Number of created targets for uf: *(struct_list_head)* is 2


Number of BDD nodes:                               351
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        3096 (count: 24970, min: 0, max: 164, avg: 0.12)
Time for BDD node cleanup:                             0.019s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.556s
  Time for transition matches:                         0.314s
  Time for transition assertions:                      0.001s
  Time for transition actions:                         0.002s
Automaton transfers with branching:                0
Automaton transfer successors:                       143484 (count: 143484, min: 1, max: 1, avg: 1.00) [1 x 143484]

CPA algorithm statistics
------------------------
Number of iterations:            99792
Max size of waitlist:            58
Average size of waitlist:        27
Number of computed successors:   111488
Max successors for one state:    2
Number of times merged:          6041
Number of times stopped:         9589
Number of times breaked:         58

Total time for CPA algorithm:        21.557s (Max:     0.867s)
  Time for choose from waitlist:      0.171s
  Time for precision adjustment:     10.611s
  Time for transfer relation:         8.134s
  Time for merge operator:            0.581s
  Time for stop operator:             0.439s
  Time for adding to reached set:     0.591s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   58
Avg. length of target path (in blocks):                1819 (count: 58, min: 7, max: 58, avg: 31.36)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   1.320s
  Counterexample analysis:                             0.691s (Max:     0.031s, Calls: 58)
    Refinement sat check:                              0.420s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.085s
  Precision update:                                    0.044s
  ARG update:                                          0.421s

Length of refined path (in blocks):                    1744 (count: 58, min: 6, max: 57, avg: 30.07)
Number of affected states:                             1629 (count: 58, min: 4, max: 55, avg: 28.09)
Length (states) of path with itp 'true':                 57 (count: 58, min: 0, max: 1, avg: 0.98)
Length (states) of path with itp non-trivial itp:      1629 (count: 58, min: 4, max: 55, avg: 28.09)
Length (states) of path with itp 'false':                58 (count: 58, min: 1, max: 1, avg: 1.00)
Different non-trivial interpolants along paths:           1 (count: 58, min: 0, max: 1, avg: 0.02)
Equal non-trivial interpolants along paths:            1570 (count: 58, min: 3, max: 54, avg: 27.07)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                58
Number of successful refinements:     58
Number of failed refinements:         0
Max. size of reached set before ref.: 4252
Max. size of reached set after ref.:  6
Avg. size of reached set before ref.: 1697.38
Avg. size of reached set after ref.:  5.95

Total time for CEGAR algorithm:      23.100s
Time for refinements:                 1.536s
Average time for refinement:          0.026s
Max time for refinement:              0.059s

Code Coverage
-----------------------------
  Function coverage:      0.304
  Visited lines:          1202
  Total lines:            1844
  Line coverage:          0.652
  Visited conditions:     162
  Total conditions:       392
  Condition coverage:     0.413

CPAchecker general statistics
-----------------------------
Number of program locations:     2568
Number of CFA edges:             2852
Number of relevant variables:    222
Number of functions:             92
Number of loops:                 11
Size of reached set:             3369
  Number of reached locations:   496 (19%)
    Avg states per location:     6
    Max states per location:     288 (at node N70)
  Number of reached functions:   28 (30%)
  Number of partitions:          3356
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N1305 (before line 6326), Function main called from node N1238, stack depth 1 [3eb631b8], stack [main]])
  Number of target states:       0
  Size of final wait list        26

Time for analysis setup:          5.311s
  Time for loading CPAs:          0.875s
  Time for loading parser:        0.640s
  Time for CFA construction:      3.685s
    Time for parsing file(s):     1.154s
    Time for AST to CFA:          1.286s
    Time for CFA sanity check:    0.219s
    Time for post-processing:     0.866s
      Time for var class.:        0.390s
Time for Analysis:               23.100s
CPU time for analysis:           23.110s
Total time for CPAchecker:       28.414s
Total CPU time for CPAchecker:   28.410s
Time for statistics:              0.125s

Time for Garbage Collector:       0.518s (in 53 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 72MB (    69 MiB) max;     46MB (    44 MiB) avg;     75MB (    71 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     36MB (    34 MiB) avg
Total process virtual memory:   8020MB (  7648 MiB) max;   8008MB (  7637 MiB) avg

Verification result: UNKNOWN, incomplete analysis.
More details about the verification run can be found in the directory "./output".
