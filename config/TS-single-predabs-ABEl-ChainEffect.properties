# ----------------------------------------------------------------------
# This configuration file uses a sequential combination
# of three different analyses, namely a value analysis,
# a bounded model checking analysis with k-induction,
# and a predicate analysis, in a total of six different
# configurations.
# This configuration file also specifies the configuration
# to be used for reachability properties on recursive
# programs and for properties regarding memory safety.
# ----------------------------------------------------------------------

#include predicateAnalysis-PredAbsRefiner-ABEl-Dy.properties

cfa.distancetoError = true
cfa.errorloc = __VERIFIER_error

CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, cpa.pointer2.PointerCPA

analysis.traversal.order = BFS
analysis.traversal.TS.searchformula = core.searchstrategy.MySearchStrategyFormula
analysis.traversal.dynamic = true

# Tell all analyses to skip (non-explicit) recursion
analysis.summaryEdges = true
cpa.callstack.skipFunctionPointerRecursion = true
# We set skipVoidRecursion per component
cpa.callstack.skipVoidRecursion = true

# cpa.predicate.refinement.dumpInterpolationProblems = true

solver.randomSeed = 42

# malloc never returns null according to SV-Comp rules
cpa.predicate.memoryAllocationsAlwaysSucceed = true

limits.time.cpu::required = 900
