scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/eca-rers2012/Problem03_label30_true-unreach-call.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_ksn_rcvx/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            27 (0% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            14 (52%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         13 (48%)
  Times precision was empty:       2 (7%)
  Times precision was {false}:     12 (44%)
  Times result was cached:         0 (0%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      13 (48%)
  Times result was 'false':        11 (41%)
Number of strengthen sat checks:   0
Number of coverage checks:         77340
  BDD entailment checks:           56
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       3054
Number of predicates discovered:          22
Number of abstraction locations:          2
Max number of predicates per location:    21
Avg number of predicates per location:    11
Total predicates per abstraction:         245
Max number of predicates per abstraction: 21
Avg number of predicates per abstraction: 9.80
Number of irrelevant predicates:          12 (5%)
Number of preds handled by boolean abs:   233 (95%)
  Total number of models for allsat:      379
  Max number of models for allsat:        52
  Avg number of models for allsat:        29.15

Time for post operator:                  3.545s
  Time for path formula creation:        3.433s
Time for strengthen operator:            0.240s
Time for prec operator:                  3.383s
  Time for abstraction:                  3.220s (Max:     0.429s, Count: 27)
    Boolean abstraction:                 2.230s
    Solving time:                        0.845s (Max:     0.073s)
    Model enumeration time:              1.534s
    Time for BDD construction:           0.098s (Max:     0.030s)
Time for merge operator:                 0.531s
Time for coverage check:                 0.009s
  Time for BDD entailment checks:        0.003s
Total time for SMT solver (w/o itp):     2.379s

Number of path formula cache hits:   30101 (29%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     3.314s

Total number of created targets for pointer analysis: 0


Number of BDD nodes:                               4649
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        1544 (count: 841, min: 0, max: 361, avg: 1.84)
Time for BDD node cleanup:                             0.009s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  0.359s
Automaton transfers with branching:                0
Automaton transfer successors:                        96026 (count: 96748, min: 0, max: 1, avg: 0.99) [0 x 722, 1 x 96026]

CPA algorithm statistics
------------------------
Number of iterations:            45184
Max size of waitlist:            8
Average size of waitlist:        4
Number of computed successors:   83845
Max successors for one state:    2
Number of times merged:          38642
Number of times stopped:         38643
Number of times breaked:         2

Total time for CPA algorithm:        12.074s (Max:     8.425s)
  Time for choose from waitlist:      0.122s
  Time for precision adjustment:      4.297s
  Time for transfer relation:         5.482s
  Time for merge operator:            1.250s
  Time for stop operator:             0.295s
  Time for adding to reached set:     0.125s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   2
Avg. length of target path (in blocks):                   5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   0.263s
  Counterexample analysis:                             0.148s (Max:     0.087s, Calls: 2)
    Refinement sat check:                              0.119s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.000s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.027s
  Precision update:                                    0.004s
  ARG update:                                          0.068s

Length of refined path (in blocks):                       5 (count: 2, min: 2, max: 3, avg: 2.50)
Number of affected states:                                3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'true':                  0 (count: 2, min: 0, max: 0, avg: 0.00)
Length (states) of path with itp non-trivial itp:         3 (count: 2, min: 1, max: 2, avg: 1.50)
Length (states) of path with itp 'false':                 0 (count: 2, min: 0, max: 0, avg: 0.00)
Different non-trivial interpolants along paths:           1 (count: 2, min: 0, max: 1, avg: 0.50)
Equal non-trivial interpolants along paths:               0 (count: 2, min: 0, max: 0, avg: 0.00)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                2
Number of successful refinements:     2
Number of failed refinements:         0
Max. size of reached set before ref.: 6753
Max. size of reached set after ref.:  3
Avg. size of reached set before ref.: 4992.50
Avg. size of reached set after ref.:  3.00

Total time for CEGAR algorithm:      12.413s
Time for refinements:                 0.336s
Average time for refinement:          0.168s
Max time for refinement:              0.174s

Code Coverage
-----------------------------
  Function coverage:      1.000
  Visited lines:          1549
  Total lines:            1549
  Line coverage:          1.000
  Visited conditions:     6132
  Total conditions:       6132
  Condition coverage:     1.000

CPAchecker general statistics
-----------------------------
Number of program locations:     4568
Number of CFA edges:             7633
Number of relevant variables:    30
Number of functions:             2
Number of loops:                 1
Size of reached set:             35213
  Number of reached locations:   3524 (77%)
    Avg states per location:     9
    Max states per location:     10 (at node N0)
  Number of reached functions:   2 (100%)
  Number of partitions:          35204
    Avg size of partitions:      1
    Max size of partitions:      10 (with key [N4782 (before lines 1658-1668), Function main called from node N4779, stack depth 1 [3c91530d], stack [main]])
  Number of target states:       0

Time for analysis setup:          3.423s
  Time for loading CPAs:          0.657s
  Time for loading parser:        0.498s
  Time for CFA construction:      2.032s
    Time for parsing file(s):     0.483s
    Time for AST to CFA:          0.649s
    Time for CFA sanity check:    0.362s
    Time for post-processing:     0.482s
      Time for var class.:        0.247s
Time for Analysis:               12.413s
CPU time for analysis:           12.410s
Time for analyzing result:        0.074s
Total time for CPAchecker:       15.838s
Total CPU time for CPAchecker:   15.840s
Time for statistics:              0.734s

Time for Garbage Collector:       0.831s (in 44 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                 98MB (    93 MiB) max;     57MB (    55 MiB) avg;    113MB (   108 MiB) peak
Used non-heap memory:             40MB (    38 MiB) max;     34MB (    33 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        41MB (    39 MiB) max;     35MB (    34 MiB) avg
Total process virtual memory:   8137MB (  7760 MiB) max;   8117MB (  7741 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
