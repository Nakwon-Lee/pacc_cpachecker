scripts/cpa.sh -Dy-MySearchStrategy-PredAbs-ABEl -heap 5600000000 -timelimit 900 -preprocess -stats -noout -setprop cpa.predicate.memoryAllocationsAlwaysSucceed=true -spec ../sv-benchmarks/c/ReachSafety.prp ../sv-benchmarks/c/ldv-consumption/32_7a_cilled_true-unreach-call_linux-3.8-rc1-32_7a-drivers--block--paride--pg.ko-ldv_main0_sequence_infinite_withcheck_stateful.cil.out.c


--------------------------------------------------------------------------------


Running CPAchecker with Java heap of size 5600000000.
Running CPAchecker with default stack size (1024k). Specify a larger value with -stack if needed.
Running CPAchecker with the following extra VM options:  -Djava.io.tmpdir=/tmp/BenchExec_run_hm9a8er0/tmp
Using the following resource limits: CPU-time limit of 900s (ResourceLimitChecker.fromConfiguration, INFO)

CPAchecker (unknown version) (OpenJDK 64-Bit Server VM 1.8.0_162) started (CPAchecker.run, INFO)

line 4031: Dead code detected: return (ldv_func_res); (CFACreationUtils.addEdgeToCFA, INFO)

Inline assembler ignored, analysis is probably unsound! (CFABuilder.createCFA, WARNING)

MathSAT5 is available for research and evaluation purposes only. It can not be used in a commercial environment, particularly as part of a commercial product, without written permission. MathSAT5 is provided as is, without any warranty. Please write to mathsat@fbk.eu for additional questions regarding licensing MathSAT5 or obtaining more up-to-date versions. (PredicateCPA:JavaSMT:Mathsat5SolverContext.<init>, WARNING)

Using predicate analysis with MathSAT5 version 5.3.14 (0b98b661254c) (Nov 17 2016 10:59:45, gmp 5.1.3, gcc 4.8.5, 64-bit) and JFactory 1.21. (PredicateCPA:PredicateCPA.<init>, INFO)

Using refinement for predicate analysis with PredicateAbstractionRefinementStrategy strategy. (PredicateCPA:PredicateCPARefiner.<init>, INFO)

Starting analysis ... (CPAchecker.runAlgorithm, INFO)

Assuming external function ldv_handler_precall to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function snprintf to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_init to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_connect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function schedule_timeout_interruptible to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __register_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __class_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __unregister_chrdev to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_regr to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memcmp to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_disconnect to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_release to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function __const_udelay to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_write_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function pi_read_block to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_create to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

line 2937: Return type of function __builtin_object_size is void, but result is used as type int: tmp = __builtin_object_size((const void *)to, 0); (PredicateCPA:CtoFormulaConverter.getReturnType, WARNING)

Assuming external function __builtin_object_size to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Cannot get declaration of function __builtin_object_size, ignoring calls to it. (PredicateCPA:ExpressionToFormulaVisitor.visit, WARNING)

Assuming external function might_fault to be a constant function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function warn_slowpath_fmt to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_from_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function ldv_check_return_value to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_lock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function mutex_unlock to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function memset to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function _copy_to_user to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function class_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Assuming external function device_destroy to be a pure function. (PredicateCPA:ExpressionToFormulaVisitor.visit, INFO)

Stopping analysis ... (CPAchecker.runAlgorithm, INFO)

PredicateCPA statistics
-----------------------
Number of abstractions:            19894 (4% of all post computations)
  Times abstraction was reused:    0
  Because of function entry/exit:  0 (0%)
  Because of loop head:            14397 (72%)
  Because of join nodes:           0 (0%)
  Because of threshold:            0 (0%)
  Because of target state:         5497 (28%)
  Times precision was empty:       2371 (12%)
  Times precision was {false}:     970 (5%)
  Times result was cached:         15194 (76%)
  Times cartesian abs was used:    0 (0%)
  Times boolean abs was used:      1359 (7%)
  Times result was 'false':        7161 (36%)
Number of strengthen sat checks:   0
Number of coverage checks:         60452
  BDD entailment checks:           8448
Number of SMT sat checks:          0
  trivial:                         0
  cached:                          0

Max ABE block size:                       86
Number of predicates discovered:          8
Number of abstraction locations:          16
Max number of predicates per location:    6
Avg number of predicates per location:    4
Total predicates per abstraction:         56058
Max number of predicates per abstraction: 6
Avg number of predicates per abstraction: 24.07
Number of irrelevant predicates:          14034 (25%)
Number of preds handled by boolean abs:   4781 (9%)
  Total number of models for allsat:      1417
  Max number of models for allsat:        4
  Avg number of models for allsat:        1.04

Time for post operator:                 10.340s
  Time for path formula creation:       10.013s
Time for strengthen operator:            0.566s
Time for prec operator:                 78.291s
  Time for abstraction:                 77.447s (Max:     0.227s, Count: 19894)
    Boolean abstraction:                38.683s
    Solving time:                       49.751s (Max:     0.206s)
    Model enumeration time:              2.734s
    Time for BDD construction:           0.156s (Max:     0.012s)
Time for merge operator:                 1.766s
Time for coverage check:                 0.036s
  Time for BDD entailment checks:        0.023s
Total time for SMT solver (w/o itp):    52.485s

Number of path formula cache hits:   446484 (91%)

Inside post operator:                  
  Inside path formula creation:        
    Time for path formula computation:     7.974s

Total number of created targets for pointer analysis: 105388
   Number of created targets for uf: *(struct_pi_adapter)* is 9
   Number of created targets for uf: *(char)* is 97
   Number of created targets for uf: *signed_int is 1497
   Number of created targets for uf: *char is 15873
   Number of created targets for uf: *unsigned_long_int is 17


Number of BDD nodes:                               336
Size of BDD node table:                            270749
Size of BDD cache:                                 27073
Size of BDD node cleanup queue:                        2863 (count: 24982, min: 0, max: 102, avg: 0.11)
Time for BDD node cleanup:                             0.023s
Time for BDD garbage collection:                       0.000s (in 0 runs)

PrecisionBootstrap statistics
-----------------------------
Init. function predicates:                         0
Init. global predicates:                           0
Init. location predicates:                         0

Invariant Generation statistics
-------------------------------

AutomatonAnalysis (SVCOMP) statistics
-------------------------------------
Number of states:                                  1
Total time for successor computation:                  1.126s
  Time for transition matches:                         0.505s
  Time for transition assertions:                      0.010s
  Time for transition actions:                         0.016s
Automaton transfers with branching:                0
Automaton transfer successors:                       457994 (count: 457994, min: 1, max: 1, avg: 1.00) [1 x 457994]

CPA algorithm statistics
------------------------
Number of iterations:            309806
Max size of waitlist:            27
Average size of waitlist:        8
Number of computed successors:   351479
Max successors for one state:    2
Number of times merged:          26002
Number of times stopped:         33834
Number of times breaked:         101

Total time for CPA algorithm:       104.073s (Max:     7.457s)
  Time for choose from waitlist:      0.297s
  Time for precision adjustment:     81.134s
  Time for transfer relation:        17.233s
  Time for merge operator:            2.288s
  Time for stop operator:             0.681s
  Time for adding to reached set:     0.905s

Predicate-Abstraction Refiner statistics
----------------------------------------
Number of predicate refinements:                   101
Avg. length of target path (in blocks):                 676 (count: 101, min: 1, max: 17, avg: 6.69)
Number of infeasible sliced prefixes:                     0 (count: 0, min: 0, max: 0, avg: 0.00)

Time for refinement:                                   6.603s
  Counterexample analysis:                             5.712s (Max:     0.168s, Calls: 101)
    Refinement sat check:                              5.106s
    Interpolant computation:                           0.000s
  Path-formulas extraction:                            0.003s
  Error path post-processing:                          0.000s
  Predicate creation:                                  0.039s
  Precision update:                                    0.074s
  ARG update:                                          0.694s

Length of refined path (in blocks):                     645 (count: 101, min: 1, max: 15, avg: 6.39)
Number of affected states:                              504 (count: 101, min: 0, max: 14, avg: 4.99)
Length (states) of path with itp 'true':                 40 (count: 101, min: 0, max: 5, avg: 0.40)
Length (states) of path with itp non-trivial itp:       504 (count: 101, min: 0, max: 14, avg: 4.99)
Length (states) of path with itp 'false':                18 (count: 101, min: 0, max: 1, avg: 0.18)
Different non-trivial interpolants along paths:           1 (count: 101, min: 0, max: 1, avg: 0.01)
Equal non-trivial interpolants along paths:             407 (count: 101, min: 0, max: 13, avg: 4.03)
Number of refs with location-based cutoff:                0

CEGAR algorithm statistics
--------------------------
Number of refinements:                101
Number of successful refinements:     101
Number of failed refinements:         0
Max. size of reached set before ref.: 11743
Max. size of reached set after ref.:  9250
Avg. size of reached set before ref.: 3667.77
Avg. size of reached set after ref.:  679.53

Total time for CEGAR algorithm:     111.179s
Time for refinements:                 7.046s
Average time for refinement:          0.069s
Max time for refinement:              0.187s

Code Coverage
-----------------------------
  Function coverage:      0.542
  Visited lines:          1172
  Total lines:            1395
  Line coverage:          0.840
  Visited conditions:     214
  Total conditions:       312
  Condition coverage:     0.686

CPAchecker general statistics
-----------------------------
Number of program locations:     1858
Number of CFA edges:             2052
Number of relevant variables:    230
Number of functions:             72
Number of loops:                 15
Size of reached set:             8673
  Number of reached locations:   627 (34%)
    Avg states per location:     13
    Max states per location:     197 (at node N117)
  Number of reached functions:   39 (54%)
  Number of partitions:          8672
    Avg size of partitions:      1
    Max size of partitions:      2 (with key [N105 (before line 3024), Function pg_init_units called from node N749, stack depth 3 [1ee4730], stack [main, pg_init, pg_init_units]])
  Number of target states:       0

Time for analysis setup:          4.991s
  Time for loading CPAs:          0.959s
  Time for loading parser:        0.804s
  Time for CFA construction:      3.057s
    Time for parsing file(s):     0.911s
    Time for AST to CFA:          1.072s
    Time for CFA sanity check:    0.174s
    Time for post-processing:     0.691s
      Time for var class.:        0.311s
Time for Analysis:              111.179s
CPU time for analysis:          111.180s
Time for analyzing result:        0.007s
Total time for CPAchecker:      116.174s
Total CPU time for CPAchecker:  116.170s
Time for statistics:              0.217s

Time for Garbage Collector:       2.720s (in 289 runs)
Garbage Collector(s) used:    Copy, MarkSweepCompact
Used heap memory:                122MB (   116 MiB) max;     68MB (    65 MiB) avg;    128MB (   122 MiB) peak
Used non-heap memory:             39MB (    37 MiB) max;     37MB (    36 MiB) avg;     40MB (    38 MiB) peak
Allocated heap memory:           127MB (   121 MiB) max;    127MB (   121 MiB) avg
Allocated non-heap memory:        42MB (    40 MiB) max;     40MB (    38 MiB) avg
Total process virtual memory:   8133MB (  7756 MiB) max;   8128MB (  7752 MiB) avg

Verification result: TRUE. No property violation found by chosen configuration.
More details about the verification run can be found in the directory "./output".
